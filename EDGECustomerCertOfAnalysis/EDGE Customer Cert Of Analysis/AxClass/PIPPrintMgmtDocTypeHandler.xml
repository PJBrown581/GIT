<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPPrintMgmtDocTypeHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PIPPrintMgmtDocTypeHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getQueryRangeFieldsDelegateHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate handler for the getQueryRangeFieldsDelegate method of the <c>PrintMgmtDocType</c> class.
    /// </summary>
    /// <param name = "_docType"><c>PrintMgmtDocumentType</c> enumeration value.</param>
    /// <param name = "_result">The <c>EventHandlerResult</c> object.</param>
    [SubscribesTo(classstr(PrintMgmtDocType), delegatestr(PrintMgmtDocType, getQueryRangeFieldsDelegate))]
    public static void getQueryRangeFieldsDelegateHandler(PrintMgmtDocumentType _docType, EventHandlerResult _result)
    {
        //if another delegate handler has already set a value, pass it up
        List resultList = _result.result();
        if (resultList != null && resultList.elements())
            return;

        if (resultList == null)
        {
            resultList = new List(Types::Integer);
            _result.result(resultList);
        }

        switch (_docType)
        {
            case PrintMgmtDocumentType::PIPInventTestCustSpecificCertOfAnalysis:
                resultList.addEnd(fieldNum(InventTestCertOfAnalysisTable, InventCertificateOfAnalysisId));
                if (#PIPCustSpecificCOAEnabled)
                {
                    resultList.addEnd(fieldNum(InventTestCertOfAnalysisTable, PIPCustAccount));
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQueryTableIdDelegateHandler</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate handler for the getQueryTableIdDelegate method of the <c>PrintMgmtDocType</c> class.
    /// </summary>
    /// <param name = "_docType"><c>PrintMgmtDocumentType</c> enumeration value.</param>
    /// <param name = "_result">The <c>EventHandlerResult</c> object.</param>
    [SubscribesTo(classstr(PrintMgmtDocType), delegatestr(PrintMgmtDocType, getQueryTableIdDelegate))]
    public static void getQueryTableIdDelegateHandler(PrintMgmtDocumentType _docType, EventHandlerResult _result)
    {
        //if another delegate handler has already set a value, pass it up
        if (_result.result() > 0)
            return;
        
        switch (_docType)
        {
            case PrintMgmtDocumentType::PIPInventTestCustSpecificCertOfAnalysis:
                _result.result(tableNum(InventTestCertOfAnalysisTable));
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>PrintMgmtDelegatesHandler_Pre_getDefaultReportFormatDelegateHandler</Name>
				<Source><![CDATA[
    // Important! This delegate handler is broken as the Application Foundation method that subscribes to this throws an exception if it's case statement does not know about
    // the enumerate value in PrintMgmtDocumentType. If it runs first (which happened in testing), then that exception causes the code to fail and this handler is not called.
    // Workaround here is to do a pre-method event handler on the standard delegate handler method.
    // <summary>
    // Delegate handler for the getDefaultReportFormatDelegate method of the <c>PrintMgmtDocType</c> class.
    // </summary>
    // <param name = "_docType"><c>PrintMgmtDocumentType</c> enumeration value.</param>
    // <param name = "_result">The <c>EventHandlerResult</c> object.</param>
    //[SubscribesTo(classstr(PrintMgmtDocType), delegatestr(PrintMgmtDocType, getDefaultReportFormatDelegate))]
    //public static void getDefaultReportFormatDelegateHandler(PrintMgmtDocumentType _docType, EventHandlerResult _result)

    /// <summary>
    ///
    /// </summary>
    /// <param name="args"></param>
    [PreHandlerFor(classStr(PrintMgmtDelegatesHandler), staticMethodStr(PrintMgmtDelegatesHandler, getDefaultReportFormatDelegateHandler))]
    public static void PrintMgmtDelegatesHandler_Pre_getDefaultReportFormatDelegateHandler(XppPrePostArgs args)
    {
        PrintMgmtDocumentType _docType = args.getArg('_docType');
        EventHandlerResult _result = args.getArg('_result');

        //if another delegate handler has already set a value, pass it up
        if (_result.result() != null)
            return;

        switch (_docType)
        {
            case PrintMgmtDocumentType::PIPInventTestCustSpecificCertOfAnalysis:
                _result.result(ssrsReportStr(PIPInventTestCustSpecificCOA, Report));
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>