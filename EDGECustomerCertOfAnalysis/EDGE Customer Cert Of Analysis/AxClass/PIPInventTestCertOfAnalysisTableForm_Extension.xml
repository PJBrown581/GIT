<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventTestCertOfAnalysisTableForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(InventTestCertOfAnalysisTable))]
public final class PIPInventTestCertOfAnalysisTableForm_Extension
{
    private InventBatch     inventBatch;
    private QueryBuildRange qbrInventBatchId;
    private QueryBuildRange qbrItemId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>InventTestCertOfAnalysisTable_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormEventHandler(formStr(InventTestCertOfAnalysisTable), FormEventType::Initialized)]
    public void InventTestCertOfAnalysisTable_OnInitialized(xFormRun sender, FormEventArgs e)
    {
        if (this.args().dataset() == tableNum(InventBatch))
        {
            inventBatch = this.args().record();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>InventTestCertOfAnalysisTable_COAOnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataSourceEventHandler(formDataSourceStr(InventTestCertOfAnalysisTable, InventTestCertOfAnalysisTable), FormDataSourceEventType::Initialized)]
    public void InventTestCertOfAnalysisTable_COAOnInitialized(FormDataSource sender, FormDataSourceEventArgs e)
    {
        if (#PIPCustSpecificCOAEnabled)
        {
            qbrItemId = sender.queryBuildDataSource().addRange(fieldNum(InventTestCertOfAnalysisTable, ItemId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>InventTestCertOfAnalysisTable_OnQueryExecuting</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataSourceEventHandler(formDataSourceStr(InventTestCertOfAnalysisTable, InventTestCertOfAnalysisTable), FormDataSourceEventType::QueryExecuting)]
    public void InventTestCertOfAnalysisTable_OnQueryExecuting(FormDataSource sender, FormDataSourceEventArgs e)
    {
        if (qbrItemId && inventBatch)
        {
            qbrItemId.value(inventBatch.itemId);
            inventDim_ds.executeQuery();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>InventDim_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataSourceEventHandler(formDataSourceStr(InventTestCertOfAnalysisTable, InventDim), FormDataSourceEventType::Initialized)]
    public void InventDim_OnInitialized(FormDataSource sender, FormDataSourceEventArgs e)
    {
        qbrInventBatchId = sender.queryBuildDataSource().addRange(fieldNum(InventDim, InventBatchId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>InventDim_OnQueryExecuting</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataSourceEventHandler(formDataSourceStr(InventTestCertOfAnalysisTable, InventDim), FormDataSourceEventType::QueryExecuting)]
    public void InventDim_OnQueryExecuting(FormDataSource sender, FormDataSourceEventArgs e)
    {
        if (inventBatch)
        {
            qbrInventBatchId.value(inventBatch.inventBatchId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>InventTestCertOfAnalysisTable_OnInitValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataSourceEventHandler(formDataSourceStr(InventTestCertOfAnalysisTable, InventTestCertOfAnalysisTable), FormDataSourceEventType::InitValue)]
    public static void InventTestCertOfAnalysisTable_OnInitValue(FormDataSource sender, FormDataSourceEventArgs e)
    {
        FormRun formRun = sender.formRun();

        if (formRun.args() && (formRun.args().dataset() == tableNum(InventBatch)))
        {
            InventTestCertOfAnalysisTable inventTestCertOfAnalysisTable = sender.cursor();
            inventTestCertOfAnalysisTable.initFromCaller(formRun.args().record());
            formRun.setInventDim();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>