<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPCOASalesEditLinesForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(SalesEditLines))]
public final class PIPCOASalesEditLinesForm_Extension
{
    private NoYes                                   printCustSpecificCOA;
    private PIPInventTestCustSpecificCOAController  controller;
    private SalesFormLetter                         salesFormLetter;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>SalesEditLines_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormEventHandler(formStr(SalesEditLines), FormEventType::Initialized)]
    public void SalesEditLines_OnInitialized(xFormRun sender, FormEventArgs e)
    {
        salesFormLetter = this.args().caller();
        DocumentStatus documentStatus = salesFormLetter.documentStatus();

        if (#PIPCustSpecificCOAEnabled && documentStatus == DocumentStatus::PackingSlip)
        {
            printCustSpecificCOA    = CustTable::find(salesFormLetter.salesTable().CustAccount).PIPPrintCustSpecificCertOfAnalysis;
            PIPPrintCustSpecificCOA.value(printCustSpecificCOA);
            PIPButtonPrintCustSpecificCOA.enabled(printCustSpecificCOA);
    
            controller              = new PIPInventTestCustSpecificCOAController();
            controller.parmReportName(ssrsReportStr(PIPInventTestCustSpecificCOA, Report));
            salesFormLetter.parmPIPCustSpecificCOAController(controller);
        }
        else
        {
            PIPPrintCustSpecificCOA.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>SalesEditLines_OnClosing</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormEventHandler(formStr(SalesEditLines), FormEventType::Closing)]
    public void SalesEditLines_OnClosing(xFormRun sender, FormEventArgs e)
    { 
        if (this.closedOk())
        {
            salesFormLetter.parmPIPCustSpecificCOA(printCustSpecificCOA);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>PIPButtonPrintCustSpecificCOA_OnClicked</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(SalesEditLines, PIPButtonPrintCustSpecificCOA), FormControlEventType::Clicked)]
    public void PIPButtonPrintCustSpecificCOA_OnClicked(FormControl sender, FormControlEventArgs e)
    {
        #PrintMgmtSetup

        SRSPrintDestinationSettings printSettings = controller.parmReportContract().parmPrintSettings();

        if (SrsReportRunUtil::showSettingsDialog(printSettings, #SRSPrintDestinationTokenPrintMgmt, enum2Symbol(enumNum(PrintMgmtDocumentType), PrintMgmtDocumentType::PIPInventTestCustSpecificCertOfAnalysis)))
        {
            controller.parmPrintSettings(printSettings);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>PIPPrintCustSpecificCOA_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(SalesEditLines, PIPPrintCustSpecificCOA), FormControlEventType::Modified)]
    public void PIPPrintCustSpecificCOA_OnModified(FormControl sender, FormControlEventArgs e)
    {
        printCustSpecificCOA = PIPPrintCustSPecificCOA.value();

        PIPButtonPrintCustSpecificCOA.enabled(printCustSpecificCOA);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>