<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPCOAInventTestAssociationTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(InventTestAssociationTable))]
public final class PIPCOAInventTestAssociationTable_Extension
{
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkUseForCOAOnExistingAssociations</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks other quality associations to ensure no other association exists for the given
    ///     item code and relation and with 'Use for COA' checked.
    /// </summary>
    /// <param name="_args">
    ///     The arguments passed by the event hanlder.
    /// </param>
    [PostHandlerFor(tableStr(InventTestAssociationTable), tableMethodStr(InventTestAssociationTable, validateField))]
    public static void checkUseForCOAOnExistingAssociations(XppPrePostArgs _args)
    {
        InventTestAssociationTable  inventTestAssociationTable  = _args.getThis();
        FieldId                     fieldId                     = _args.getArg('_fieldId');
        boolean                     ok                          = _args.getReturnValue();
        InventTestAssociationTable  association;
    
        if (ok)
        {
            switch (fieldId)
            {
                case fieldNum(InventTestAssociationTable, PIPUseForCertOfAnalysis):
                    if (inventTestAssociationTable.PIPUseForCertOfAnalysis)
                    {
                        select firstOnly association
                            where association.PIPUseForCertOfAnalysis
                                && association.RecId        != inventTestAssociationTable.RecId
                                && association.ItemCode     == inventTestAssociationTable.ItemCode
                                && association.ItemRelation == inventTestAssociationTable.ItemRelation;
                        
                        if (association)
                        {
                            ok = checkFailed("@PIP1005");
                        }
                    }
                    break;
            }
        }

        _args.setReturnValue(ok);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>