<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPCOAInventQualityOrderTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(InventQualityOrderTable))]
public final class PIPCOAInventQualityOrderTable_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pipUpdateBatchWithQualityOrderReference</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Updates the related batch with current quality order id for customer-specific COA functionality.
    /// </summary>
    public void pipUpdateBatchWithQualityOrderReference()
    {
        InventBatch inventBatch = this.inventBatch();
        if (!inventBatch)
            return;

        ttsBegin;
        inventBatch.selectForUpdate(true);
        inventBatch.PIPCertOfAnalysisQualityOrderId = this.QualityOrderId;
        inventBatch.update();
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pipCopyCustSpecificCOAReq</Name>
				<Source><![CDATA[
    [PostHandlerFor(tableStr(InventQualityOrderTable), tableMethodStr(InventQualityOrderTable, createInventQualityOrderLines))]
    /// <summary>
    ///     Copies all customer specific COA requirements from the corresponding test group member record.
    /// </summary>
    /// <param name="_args">
    ///     The arguments passed by the event hanlder.
    /// </param>
    public static void pipCopyCustSpecificCOAReq(XppPrePostArgs _args)
    {
        InventQualityOrderTable inventQualityOrderTable = _args.getThis();
        
        InventQualityOrderTable::pipDoCopyCustSpecificCOAReq(inventQualityOrderTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventQualityOrderTable_Post_createInventQualityOrderLinesWithConnection</Name>
				<Source><![CDATA[
    [PostHandlerFor(tableStr(InventQualityOrderTable), tableMethodStr(InventQualityOrderTable, createInventQualityOrderLinesWithConnection))]
    /// <summary>
    ///     Copies all customer specific COA requirements from the corresponding test group member record.
    /// </summary>
    /// <param name="_args">
    ///     The arguments passed by the event hanlder.
    /// </param>
    public static void inventQualityOrderTable_Post_createInventQualityOrderLinesWithConnection(XppPrePostArgs _args)
    {
        InventQualityOrderTable inventQualityOrderTable = _args.getThis();
        
        InventQualityOrderTable::pipDoCopyCustSpecificCOAReq(inventQualityOrderTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pipDoCopyCustSpecificCOAReq</Name>
				<Source><![CDATA[
    private static void pipDoCopyCustSpecificCOAReq(InventQualityOrderTable _inventQualityOrderTable)
    {
        utcdatetime                     currentTime             =   DateTimeUtil::getSystemDateTime();
        InventQualityOrderLine          inventQualityOrderLine;
        InventTestGroupMember           inventTestGroupMember;
    
        ttsBegin;
        while select inventQualityOrderLine
            join inventTestGroupMember
                where  inventTestGroupMember.TestGroupId       == _inventQualityOrderTable.TestGroupId
                    && inventQualityOrderLine.QualityOrderId   == _inventQualityOrderTable.QualityOrderId
                    && inventQualityOrderLine.TestId           == inventTestGroupMember.TestId
                    && inventQualityOrderLine.TestSequence     == inventTestGroupMember.TestSequence
                    && inventTestGroupMember.ValidFromDateTime <= currentTime
                    && inventTestGroupMember.ValidToDateTime   >  currentTime
        {
            PIPInventTestCertOfAnalysisCustReq::copyFromTestGroupMember(inventTestGroupMember, inventQualityOrderLine);
        }
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        this.verifyBatchCOABlank();

        next delete();
    }

]]></Source>
			</Method>
			<Method>
				<Name>verifyBatchCOABlank</Name>
				<Source><![CDATA[
    public void verifyBatchCOABlank()
    {
        if (this.inventBatch().PIPCertOfAnalysisQualityOrderId == this.QualityOrderId)
        {
            throw error("@PIP:QualityOrderCOABatchError");
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>