<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventTestGroupMemberEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>PIPInventTestGroupMemberEventHandler</c> class provides method event subscription handlers for the
///     <c>InventTestGroupMember</c> table.
/// </summary>
public class PIPInventTestGroupMemberEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromPdsBatchAttribPost</Name>
				<Source><![CDATA[
    [PostHandlerFor(tableStr(InventTestGroupMember), tableMethodStr(InventTestGroupMember, initFromPdsBatchAttrib))]
    /// <summary>
    ///     Executes logic in the post event for the <c>InventTestGroupMember</c> <see cref="initFromPdsBatchAttrib method"/> method.
    /// </summary>
    /// <param name="_args">
    ///     The arguments passed by the event hanlder.
    /// </param>
    public static void initFromPdsBatchAttribPost(XppPrePostArgs _args)
    {
        InventTestGroupMember inventTestGroupMember = _args.getThis();
    
        if (#PIPCustSpecificCOAEnabled)
        {
            inventTestGroupMember.setLowerTolerance();
            inventTestGroupMember.setUpperTolerance();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedFieldPre</Name>
				<Source><![CDATA[
    [PreHandlerFor(tableStr(InventTestGroupMember), tableMethodStr(InventTestGroupMember, modifiedField))]
    /// <summary>
    ///     Executes logic in the pre event for the <c>InventTestGroupMember</c> <see cref="modifiedField method"/> method.
    /// </summary>
    /// <param name="_args">
    ///     The arguments passed by the event hanlder.
    /// </param>
    public static void modifiedFieldPre(XppPrePostArgs _args)
    {
        InventTestGroupMember               inventTestGroupMember   = _args.getThis();
        FieldId                             fieldId                 = _args.getArg('_fieldId');
        PIPInventTestCertOfAnalysisCustReq  inventTestCOACustReq;
    
        switch (fieldId)
        {
            case fieldNum(InventTestGroupMember, CertificateOfAnalysis):
                if (!inventTestGroupMember.CertificateOfAnalysis && PIPInventTestCertOfAnalysisCustReq::existReference(inventTestGroupMember))
                {
                    if (Box::okCancel("@PIP1006", DialogButton::Cancel) == DialogButton::Ok)
                    {
                        ttsBegin;
                        delete_from inventTestCOACustReq
                            where inventTestCOACustReq.RefTableId   == tableNum(InventTestGroupMember)
                                && inventTestCOACustReq.RefRecId    == inventTestGroupMember.RecId;
                        ttsCommit;
                    }
                    else
                    {
                        inventTestGroupMember.CertificateOfAnalysis = NoYes::Yes;
                    }
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>