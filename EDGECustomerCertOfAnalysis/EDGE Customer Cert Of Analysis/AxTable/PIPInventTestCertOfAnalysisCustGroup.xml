<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventTestCertOfAnalysisCustGroup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PIPInventTestCertOfAnalysisCustGroup extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines if the specified record in the <c>PIPInventTestCertOfAnalysisCustGroup</c> table exists.
    /// </summary>
    /// <param name="_inventCertOfAnalysisCustGroupId">
    ///     The Certificate of analysis customer group Id of the record to check.
    /// </param>
    /// <returns>
    ///     true if the specified record exists; otherwise, false.
    /// </returns>
    public static boolean exist(PIPInventCertOfAnalysisCustGroupId _inventCertOfAnalysisCustGroupId)
    {
        return (select PIPInventTestCertOfAnalysisCustGroup
                    where PIPInventTestCertOfAnalysisCustGroup.CustGroupId == _inventCertOfAnalysisCustGroupId).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds the specified record in the <c>PIPInventTestCertOfAnalysisCustGroup</c> table.
    /// </summary>
    /// <param name="_inventCertOfAnalysisCustGroupId">
    ///     The Certificate of analysis customer group Id of the record to find.
    /// </param>
    /// <param name="_update">
    ///     A Boolean value that indicates whether to read the record for update; optional.
    /// </param>
    /// <returns>
    ///     A record in the <c>PIPInventTestCertOfAnalysisCustGroup</c> table; otherwise, an empty record.
    /// </returns>
    public static PIPInventTestCertOfAnalysisCustGroup find(PIPInventCertOfAnalysisCustGroupId _inventCertOfAnalysisCustGroupId, boolean _update = false)
    {
        PIPInventTestCertOfAnalysisCustGroup inventTestCertOfAnalysisCustGroup;
    
        inventTestCertOfAnalysisCustGroup.selectForUpdate(_update);
    
        if (_inventCertOfAnalysisCustGroupId)
        {
            select firstonly inventTestCertOfAnalysisCustGroup
                where inventTestCertOfAnalysisCustGroup.CustGroupId == _inventCertOfAnalysisCustGroupId;
        }
    
        return inventTestCertOfAnalysisCustGroup;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PIPCustSpecificCOA</ConfigurationKey>
	<DeveloperDocumentation>@PIP1021</DeveloperDocumentation>
	<FormRef>PIPInventTestCertOfAnalysisCustGroup</FormRef>
	<Label>@PIP1022</Label>
	<TableGroup>Group</TableGroup>
	<TitleField1>CustGroupId</TitleField1>
	<TitleField2>Description</TitleField2>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustGroupId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>PIPInventCertOfAnalysisCustGroupId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Description</Name>
			<ExtendedDataType>Description</ExtendedDataType>
			<StringSize>60</StringSize>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>InventTestCertOfAnalysisCustGroupIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>CustGroupId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>