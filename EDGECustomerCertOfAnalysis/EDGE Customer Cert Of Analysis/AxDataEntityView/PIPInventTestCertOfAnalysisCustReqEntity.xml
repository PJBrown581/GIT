<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventTestCertOfAnalysisCustReqEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PIPInventTestCertOfAnalysisCustReqEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides mapping of values in the data entity record to the buffer in the data source when updating the data source.
    /// </summary>
    /// <param name = "_entityCtx">The entity context.</param>
    /// <param name = "_dataSourceCtx">The data source context.</param>
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(PIPInventTestCertOfAnalysisCustReqEntity, PIPInventTestCertOfAnalysisCustReq):
                InventTestGroupMember testGroupMember;
                select firstOnly testGroupMember
                    where testGroupMember.TestGroupId               == this.TestGroupId
                            && testGroupMember.TestSequence         == this.TestSequence
                            && testGroupMember.TestId               == this.TestId
                            && testGroupMember.ValidFromDateTime    == this.ValidFromDateTime
                            && testGroupMember.ValidToDateTime      == this.ValidToDateTime;

                if (testGroupMember.RecId)
                {
                    PIPInventTestCertOfAnalysisCustReq testCOACustReq = _dataSourceCtx.getBuffer();
                    testCOACustReq.RefRecId     = testGroupMember.RecId;
                    testCOACustReq.RefTableId   = tableNum(InventTestGroupMember);
                }
                else
                {
                    throw error(strFmt("@PIP3000", tableId2PName(tableNum(InventTestGroupMember))));
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PIPCustSpecificCOA</ConfigurationKey>
	<FormRef>PIPInventTestCertOfAnalysisCustGroup</FormRef>
	<Label>@PIP1002</Label>
	<Tags>Certificate analysis rules</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>PIPInventTestCOACustomerReqStaging</DataManagementStagingTable>
	<EntityCategory>Reference</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>ISV</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>PIPInventTestCOSCustomerReqs</PublicCollectionName>
	<PublicEntityName>PIPInventTestCOACustomerReq</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerCode</Name>
			<DataField>CustomerCode</DataField>
			<DataSource>PIPInventTestCertOfAnalysisCustReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerRelation</Name>
			<DataField>CustomerRelation</DataField>
			<DataSource>PIPInventTestCertOfAnalysisCustReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExcludeFromCOA</Name>
			<DataField>ExcludeFromCOA</DataField>
			<DataSource>PIPInventTestCertOfAnalysisCustReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReplaceFailResults</Name>
			<DataField>ReplaceFailResults</DataField>
			<DataSource>PIPInventTestCertOfAnalysisCustReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReplacePassResults</Name>
			<DataField>ReplacePassResults</DataField>
			<DataSource>PIPInventTestCertOfAnalysisCustReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SupressMinMaxValues</Name>
			<DataField>SupressMinMaxValues</DataField>
			<DataSource>PIPInventTestCertOfAnalysisCustReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UseCustBatchAttribRange</Name>
			<DataField>UseCustBatchAttribRange</DataField>
			<DataSource>PIPInventTestCertOfAnalysisCustReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TestGroupId</Name>
			<DataField>TestGroupId</DataField>
			<DataSource>InventTestGroupMember</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TestSequence</Name>
			<DataField>TestSequence</DataField>
			<DataSource>InventTestGroupMember</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TestId</Name>
			<DataField>TestId</DataField>
			<DataSource>InventTestGroupMember</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ValidFromDateTime</Name>
			<DataField>ValidFromDateTime</DataField>
			<DataSource>InventTestGroupMember</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ValidToDateTime</Name>
			<DataField>ValidToDateTime</DataField>
			<DataSource>InventTestGroupMember</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>CustomerCode</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CustomerRelation</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>TestGroupId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>TestSequence</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>TestId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ValidToDateTime</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>PIPInventTestCertOfAnalysisCustReq</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>PIPInventTestCertOfAnalysisCustReq</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventTestGroupMember</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventTestGroupMember</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>RefRecId</Field>
								<JoinDataSource>PIPInventTestCertOfAnalysisCustReq</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>TestGroupMemberOnly</Name>
						<Field>RefTableId</Field>
						<Status>Hidden</Status>
						<Value>rangeTableNum(InventTestGroupMember)</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>