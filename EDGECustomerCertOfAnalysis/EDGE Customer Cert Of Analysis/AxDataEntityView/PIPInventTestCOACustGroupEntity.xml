<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventTestCOACustGroupEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PIPInventTestCOACustGroupEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(PIPInventTestCOACustGroupEntity, CustTable):
                if (this.isFieldSet(fieldNum(PIPInventTestCOACustGroupEntity, AccountNum)))
                {
                    CustTable custTable = CustTable::find(this.AccountNum, true);
                    if (custTable)
                    {
                        custTable.PIPCertOfAnalysisCustGroup = this.CustomerGroupId;
                        _dataSourceCtx.setBuffer(custTable);
                        _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Update);
                    }
                    else
                    {
                        warning(strFmt("Customer account %1 missing and cannot be assigned to COA group %2", this.AccountNum, this.CustomerGroupId));
                        _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                    }
                }
                else
                {
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                }
                return;
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <returns></returns>
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PIPCustSpecificCOA</ConfigurationKey>
	<FormRef>PIPInventTestCertOfAnalysisCustGroup</FormRef>
	<Label>@PIP1022</Label>
	<Tags>Certificate analysis setup</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>PIPInventTestCOACustGroupStaging</DataManagementStagingTable>
	<EntityCategory>Reference</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>ISV</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>PIPInventTestCOACustGroups</PublicCollectionName>
	<PublicEntityName>PIPInventTestCOACustGroup</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerGroupId</Name>
			<DataField>CustGroupId</DataField>
			<DataSource>PIPInventTestCertOfAnalysisCustGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Description</Name>
			<DataField>Description</DataField>
			<DataSource>PIPInventTestCertOfAnalysisCustGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountNum</Name>
			<Mandatory>No</Mandatory>
			<DataField>AccountNum</DataField>
			<DataSource>CustTable</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>CustomerGroupId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>AccountNum</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>PIPInventTestCertOfAnalysisCustGroup</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>PIPInventTestCertOfAnalysisCustGroup</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>CustTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>PIPInventTestCertOfAnalysisCustGroup</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>