<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TmpPIPCustomerList</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TmpPIPCustomerList extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>changeApprovedCustomerGroupAllowed</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets a value indicating if the approved customer group can be changed for the customer.
    /// </summary>
    /// <param name="_approvedCustomerGroupId">
    ///    The new approved customer group for the customer.
    /// </param>
    /// <returns>
    ///    true if the approved customer group may be changed for the customer; otherwise, false.
    /// </returns>
    public boolean changeApprovedCustomerGroupAllowed(PIPApprovedCustomerGroupId _approvedCustomerGroupId)
    {
        CustTable   custTable   = this.custTable();
        boolean     ret         = true;
    
        if (custTable.PIPApprovedCustomerGroup && custTable.PIPApprovedCustomerGroup != _approvedCustomerGroupId)
        {
            ret = Box::yesNo(strFmt("@PIP375", custTable.AccountNum, custTable.PIPApprovedCustomerGroup, _approvedCustomerGroupId), DialogButton::No) == DialogButton::Yes;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the record of the <c>CustTable</c> table associated with this record.
    /// </summary>
    /// <returns>
    ///    The record of the <c>CustTable</c> table associated with this record.
    /// </returns>
    public CustTable custTable()
    {
        return CustTable::find(this.CustAccount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>name</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the name of the customer.
    /// </summary>
    /// <returns>
    ///    The name of the customer for display purposes.
    /// </returns>
    [SysClientCacheDataMethodAttribute]
    public display CustName name()
    {
        return this.custTable().name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCustomer</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the related customer with the given approved customer group id.
    /// </summary>
    /// <param name="_approvedCustomerGroupId">
    ///    The customer group id to assign to the related customer.
    /// </param>
    public void updateCustomer(PIPApprovedCustomerGroupId _approvedCustomerGroupId)
    {
        CustTable   custTable;

        custTable.skipDataMethods(true);
    
        update_recordset custTable
            setting PIPApprovedCustomerGroup = _approvedCustomerGroupId
            where custTable.AccountNum == this.CustAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadCustomers</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Loads the customers for a given approved customer group into a new temporary table.
    /// </summary>
    /// <param name="_approvedCustomerGroupId">
    ///    The approved customer group id of the customers to load.
    /// </param>
    /// <returns>
    ///    A buffer for the <c>TmpPIPCustomerList</c> table loaded with the customers in the approved customer list.
    /// </returns>
    public static TmpPIPCustomerList loadCustomers(PIPApprovedCustomerGroupId _approvedCustomerGroupId)
    {
        TmpPIPCustomerList  tmpCustomerList;
        CustTable           custTable;
    
        insert_recordset tmpCustomerList (CustAccount)
            select AccountNum from custTable
                where custTable.PIPApprovedCustomerGroup == _approvedCustomerGroupId;
    
        return tmpCustomerList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PIPACL</ConfigurationKey>
	<Label>@PIP297</Label>
	<TableType>InMemory</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>CustAccount</Name>
			<ExtendedDataType>CustAccount</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CustTableIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>CustAccount</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>CustTable</Name>
			<Cardinality>ZeroOne</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ZeroOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>CustAccount</Name>
					<SourceEDT>CustAccount</SourceEDT>
					<Field>CustAccount</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>AccountIdx</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>