<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPSalesQuotationTableForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(SalesQuotationTable))]
public final class PIPSalesQuotationTableForm_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>SalesQuotationLine_ItemId_OnLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(SalesQuotationTable, SalesQuotationLine_ItemId), FormControlEventType::Lookup)]
    public static void SalesQuotationLine_ItemId_OnLookup(FormControl sender, FormControlEventArgs e)
    {
        FormRun formRun = sender.formRun() as FormRun;
        formRun.pipItemIdLookup(sender, e as FormControlCancelableSuperEventArgs);
    }

]]></Source>
			</Method>
			<Method>
				<Name>SalesQuotationLine_ItemId1_OnLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(SalesQuotationTable, SalesQuotationLine_ItemId1), FormControlEventType::Lookup)]
    public static void SalesQuotationLine_ItemId1_OnLookup(FormControl sender, FormControlEventArgs e)
    {
        FormRun formRun = sender.formRun() as FormRun;
        formRun.pipItemIdLookup(sender, e as FormControlCancelableSuperEventArgs);
    }

]]></Source>
			</Method>
			<Method>
				<Name>Line_ItemId_OnLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(SalesQuotationTable, Line_ItemId), FormControlEventType::Lookup)]
    public static void Line_ItemId_OnLookup(FormControl sender, FormControlEventArgs e)
    {
        FormRun formRun = sender.formRun() as FormRun;
        formRun.pipItemIdLookup(sender, e as FormControlCancelableSuperEventArgs);
    }

]]></Source>
			</Method>
			<Method>
				<Name>pipItemIdLookup</Name>
				<Source><![CDATA[
    private void pipItemIdLookup(FormControl control, FormControlCancelableSuperEventArgs e)
    {
        SalesQuotationTable salesQuotationTable = this.dataSource(formDataSourceStr(SalesQuotationTable, SalesQuotationTable)).cursor() as SalesQuotationTable;

        PIPItemIdLookupControlEventArgs aclLookupArgs = PIPItemIdLookupControlEventArgs::newCallerRecord(formStr(SalesQuotationTable), control, salesQuotationTable);
        PIPApprovedCustomerList::shouldSkipACLItemLookup(aclLookupArgs);

        if (!aclLookupArgs.isCanceled()
            && PIPApprovedCustomerList::existValidForCustomer(salesQuotationTable.CustAccount, salesQuotationTable.pipACLDate()))
        {
            SalesQuotationLine SalesQuotationLine = this.dataSource(formDataSourceStr(SalesQuotationTable, SalesQuotationLine)).cursor() as SalesQuotationLine;
            FormStringControl itemControl = control as FormStringControl;
            PIPApprovedCustomerList::itemLookup(control, salesQuotationLine, itemControl ? itemControl.text() : control.valueStr(), this);

            e.CancelSuperCall();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustUpdateFormBasedOnOppurtunityStatus</Name>
				<Source><![CDATA[
    protected boolean mustUpdateFormBasedOnOppurtunityStatus(smmOpportunityStatus _opportunityStatus)
    {
        // Unfortunately, the base method will attempt to update the Opportunity even if the ACL does not allow the confirmation so this still
        // needs to temporarily clear the SalesQuotationTable.OpportunityId field so that method skip update.

        boolean confirmAllowed = true;
        smmOpportunityId savedOpportunityId;
        if (_opportunityStatus == smmOpportunityStatus::Won)
        {
            confirmAllowed = salesQuotationTable.pipIsCustomerApproved();

            // The base method does nothing if OpportunityId is blank; if confirm is not allowed don't execute the logic in the base method
            if (!confirmAllowed && salesQuotationTable.OpportunityId)
            {
                savedOpportunityId = salesQuotationTable.OpportunityId;
                salesQuotationTable.OpportunityId = '';
            }
        }

        try
        {
            boolean ret = next mustUpdateFormBasedOnOppurtunityStatus(_opportunityStatus);

            return ret && confirmAllowed;
        }
        finally
        {
            if (savedOpportunityId)
            {
                salesQuotationTable.OpportunityId = savedOpportunityId;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>