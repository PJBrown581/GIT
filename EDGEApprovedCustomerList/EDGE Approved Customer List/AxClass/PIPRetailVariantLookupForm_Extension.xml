<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPRetailVariantLookupForm_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(formStr(RetailVariantLookup))]
public final class PIPRetailVariantLookupForm_Extension
{
    private InventTable                 inventTable;
    private CustTable                   custTable;
    private ValidFromDate               aclDate;
    private boolean                     aclActive;
    private QueryBuildDataSource        dsApprovedDimCombination;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pipInitACL</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes the approved customer list section of the form.
    /// </summary>
    public void pipInitACL()
    {
        inventTable = InventTable::find(this.args().parm());

        FormControl callerControl = this.args().caller();
        FormDataSource lookupDataSource = callerControl.dataSourceObject();

        switch (lookupDataSource.cursor().TableId)
        {
            case tableNum(SalesLine) :
                SalesLine salesLine = lookupDataSource.cursor();
                custTable = CustTable::find(salesLine.CustAccount);
                aclDate = salesLine.pipACLDate();
                break;
    
            case tableNum(SalesQuotationLine) :
                SalesQuotationTable salesQuotationTable = lookupDataSource.formRun().dataSource(formDataSourceStr(SalesQuotationTable, SalesQuotationTable)).cursor();
                custTable = salesQuotationTable.custTable_CustAccount();
                SalesQuotationLine salesQuotationLine = lookupDataSource.formRun().dataSource(formDataSourceStr(SalesQuotationTable, SalesQuotationLine)).cursor();
                aclDate = salesQuotationLine.pipACLDate();
                break;
        }

        if (PIPApprovedCustomerList::existValidItemForCustomer(custTable.AccountNum, inventTable.ItemId, aclDate))
        {
            aclActive = true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>RetailVariantLookup_OnInitializing</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormEventHandler(formStr(RetailVariantLookup), FormEventType::Initializing)]
    public void RetailVariantLookup_OnInitializing(xFormRun sender, FormEventArgs e)
    {
        this.pipInitACL();
    }

]]></Source>
			</Method>
			<Method>
				<Name>RetailVariantLookup_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormEventHandler(formStr(RetailVariantLookup), FormEventType::Initialized)]
    public void RetailVariantLookup_OnInitialized(xFormRun sender, FormEventArgs e)
    {
        if (aclActive)
        {
            PIPShowApprovedOnly.visible(true);
            PIPShowApprovedOnly.value(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>PIPTmpApprovedDimCombination_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataSourceEventHandler(formDataSourceStr(RetailVariantLookup, PIPTmpApprovedDimCombination), FormDataSourceEventType::Initialized)]
    public void PIPTmpApprovedDimCombination_OnInitialized(FormDataSource sender, FormDataSourceEventArgs e)
    {
        dsApprovedDimCombination = sender.queryBuildDataSource();
        dsApprovedDimCombination.enabled(aclActive);

        if (aclActive)
        {
            PIPApprovedCustomerList::getApprovedItemVariants(custTable, inventTable, aclDate, dateNull(), sender.cursor());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>PIPShowApprovedOnly_OnClicked</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(RetailVariantLookup, PIPShowApprovedOnly), FormControlEventType::Clicked)]
    public void PIPShowApprovedOnly_OnClicked(FormControl sender, FormControlEventArgs e)
    {
        boolean enable = PIPShowApprovedOnly.value();
        dsApprovedDimCombination.enabled(enable);

        EcoResDistinctProductVariant_ds.executeQuery();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>