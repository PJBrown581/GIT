<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPSalesAgreementDataSourceEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
public static class PIPSalesAgreementDataSourceEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>AgreementLine_ItemId_OnLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(SalesAgreement, AgreementLine_ItemId), FormControlEventType::Lookup)]
    public static void AgreementLine_ItemId_OnLookup(FormControl sender, FormControlEventArgs e)
    {
        SalesAgreementHeader salesAgreementHeader = sender.formRun().dataSource(formDataSourceStr(SalesAgreement, SalesAgreementHeader)).cursor() as SalesAgreementHeader;
        AgreementLine agreementLine = sender.formRun().dataSource(formDataSourceStr(SalesAgreement, ALine)).cursor() as AgreementLine;

        PIPItemIdLookupControlEventArgs aclLookupArgs = PIPItemIdLookupControlEventArgs::newCallerRecord(formStr(SalesAgreement), sender, salesAgreementHeader);
        PIPApprovedCustomerList::shouldSkipACLItemLookup(aclLookupArgs);

        if (!aclLookupArgs.isCanceled()
            && PIPApprovedCustomerList::existValidForCustomer(
                        salesAgreementHeader.CustAccount,
                        agreementLine.pipACLFromDate(salesAgreementHeader),
                        agreementLine.pipACLToDate(salesAgreementHeader)))
        {
            FormStringControl itemControl = sender as FormStringControl;
            PIPApprovedCustomerList::itemLookup(sender, agreementLine, itemControl ? itemControl.text() : sender.valueStr(), sender.formRun());

            FormControlCancelableSuperEventArgs ecs = e as FormControlCancelableSuperEventArgs;
            ecs.CancelSuperCall();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>