<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPApprovedCustListValidatorSalesAgrmt</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>PIPApprovedCustListValidatorSalesAgrmt</c> class for approved customer list validation based on <c>SalesAgreementHeader</c>.
/// </summary>
[PIPApprovedCustListValidatorAttribute(tableStr(SalesAgreementHeader))]
class PIPApprovedCustListValidatorSalesAgrmt extends PIPApprovedCustListValidator
{
    SalesAgreementHeader            salesAgreementHeader;
    SalesCreateReleaseOrderLineTmp  releaseOrderLineDetailsTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromBuffer</Name>
				<Source><![CDATA[
    protected void initFromBuffer(Common _buffer)
    {
        this.initFromSalesAgreementHeader(_buffer as SalesAgreementHeader);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesAgreementHeader</Name>
				<Source><![CDATA[
    private void initFromSalesAgreementHeader(SalesAgreementHeader _salesAgreementHeader)
    {
        salesAgreementHeader = _salesAgreementHeader;
    
        this.parmCustAccount(salesAgreementHeader.CustAccount);
        this.parmFromDate(salesAgreementHeader.DefaultAgreementLineEffectiveDate);
        this.parmToDate(salesAgreementHeader.DefaultAgreementLineExpirationDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReleaseOrderLineDetailsTmp</Name>
				<Source><![CDATA[
    public SalesCreateReleaseOrderLineTmp parmReleaseOrderLineDetailsTmp(SalesCreateReleaseOrderLineTmp _releaseOrderLineDetailsTmp = releaseOrderLineDetailsTmp)
    {
        releaseOrderLineDetailsTmp = _releaseOrderLineDetailsTmp;
    
        return releaseOrderLineDetailsTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCustomerCheckResult</Name>
				<Source><![CDATA[
    public boolean validateCustomerCheckResult()
    {
        boolean                                 ret = true;
        PIPApprovedCustListValidatorAgreementLn lineValidator;
        AgreementLine                           agreementLine;
        SalesCreateReleaseOrderLineTmp          releaseOrderLineTmp;
    
        releaseOrderLineTmp.setTmpData(releaseOrderLineDetailsTmp);
    
        while select agreementLine
            where agreementLine.Agreement == salesAgreementHeader.RecId
        {
            if (!this.parmStrictValidation())
            {
                ret = PIPApprovedCustListValidator::newFromTable(agreementLine).validateCustomerCheckResult() && ret;
            }
            else
            {
                while select releaseOrderLineTmp
                    where releaseOrderLineTmp.AgreementLineQuantityCommitment == agreementLine.RecId
                        && releaseOrderLineTmp.ItemId                         == agreementLine.ItemId
                        && releaseOrderLineTmp.SalesQty                       > 0
                {
                    lineValidator = PIPApprovedCustListValidator::newFromTable(agreementLine);

                    // When releasing the sales agreement, the agreement line may not have the actual dimensions, use InventDim from releaseOrderLineTmp
                    lineValidator.parmInventDim(releaseOrderLineTmp.inventDim());
    
                    lineValidator.parmStrictValidation(true);
                    lineValidator.parmIgnoreError(ignoreError);
                    lineValidator.parmActiveDate(releaseOrderLineTmp.pipACLDate());
    
                    ret = lineValidator.validateCustomerCheckResult() && ret;
                }
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PIPApprovedCustListValidatorSalesAgrmt construct()
    {
        return new PIPApprovedCustListValidatorSalesAgrmt();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>