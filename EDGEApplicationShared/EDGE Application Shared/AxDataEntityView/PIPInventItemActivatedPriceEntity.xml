<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventItemActivatedPriceEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PIPInventItemActivatedPriceEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        // Skip read-only fields
        this.skipDataSourceValidateField(fieldNum(PIPInventItemActivatedPriceEntity, ProductUnitSymbol), true);     
        this.skipDataSourceValidateField(fieldNum(PIPInventItemActivatedPriceEntity, ActivationDate), true);
       
        super(_entityCtx, _dataSourceCtx);
        
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(PIPInventItemActivatedPriceEntity, InventItemPrice):
                switch (_entityCtx.getDatabaseOperation())
                {
                    case DataEntityDatabaseOperation::Insert:
                    case DataEntityDatabaseOperation::Update:
                        // Set the correct inventDimId on the table buffer.
                        InventItemPrice itemPrice   = _dataSourceCtx.getBuffer();
                        itemPrice.InventDimId       = this.InventInventoryDimensionEntityFieldsMapping::resolveInventDimId();

                        itemPrice.UnitID            = InventTableModule::find(itemPrice.ItemId, InventItemPrice::convPriceTypeToModuleInventPurchSales(itemPrice.PriceType)).UnitId;
                        itemPrice.initFromCostingVersion();
                    
                        // Default read-only fields
                        itemPrice.defaultField(fieldNum(InventItemPrice, UnitId));
                        break;
                }
                break;
        }
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;
            
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(PIPInventItemActivatedPriceEntity, InventDim):
                var priceContext = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(PIPInventItemActivatedPriceEntity, InventItemPrice));
                InventItemPrice itemPrice = priceContext.getBuffer();

                ret = InventDim::find(itemPrice.InventDimId);
                break;

            default:
                ret = super(_entityCtx, _dataSourceCtx);
        }
            
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret = super(_entityCtx, _dataSourceCtx);

        if (ret)
        {
            if(_dataSourceCtx.name() == dataEntityDataSourceStr(PIPInventItemActivatedPriceEntity, InventItemPrice))
            {
                // Need to re-apply inventory dimensions as defaulting logic may have changed them:
                InventItemPrice itemPrice = _dataSourceCtx.getBuffer();
                this.InventInventoryDimensionEntityFieldsMapping::initFromInventDim(itemPrice.inventDim());
            }
        }
            
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        InventItemPrice itemPrice; 
        TransDate       activationDate;       

        if(_dataSourceCtx.name() == dataEntityDataSourceStr(PIPInventItemActivatedPriceEntity, InventItemPrice))
        {
            itemPrice = _dataSourceCtx.getBuffer();

            activationDate = this.ActivationDate;
         
            // CreatedDateTime needs to be overridden as this field is part of the key and needs to retain correct values to avoid data duplication errors.
            new OverwriteSystemfieldsPermission().assert();
            itemPrice.overwriteSystemfields(true);
            itemPrice.(fieldNum(InventItemPrice, CreatedDateTime)) = this.CreatedDateAndTime;
            CodeAccessPermission::revertAssert();
        }

        boolean ret = super(_entityCtx, _dataSourceCtx);
       
        if (ret)
        {
            if(_dataSourceCtx.name() == dataEntityDataSourceStr(PIPInventItemActivatedPriceEntity, InventItemPrice))
            {                
                itemPrice = _dataSourceCtx.getBuffer();

                // Need to re-apply activation date as the field value gets set to current data on record insert.
                itemPrice.ActivationDate = activationDate;
                itemPrice.doUpdate();

                // Need to re-apply inventory dimensions as defaulting logic may have changed them:
                this.InventInventoryDimensionEntityFieldsMapping::initFromInventDim(itemPrice.inventDim());
            }
        }        
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultProductSiteId</Name>
				<Source><![CDATA[
    private void defaultProductSiteId()
    {
        if (!this.PriceSiteId
            && this.CostingVersionId)
        {
            this.PriceSiteId = this.getExtensionCostingVersion().InventSiteId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch(_fieldId)
        {
            case fieldnum(PIPInventItemActivatedPriceEntity, PriceSiteId):
                this.defaultProductSiteId();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtensionCostingVersion</Name>
				<Source><![CDATA[
    private CostingVersion getExtensionCostingVersion()
    {
        return CostingVersion::find(this.CostingVersionId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            [fieldnum (PIPInventItemActivatedPriceEntity, PriceSiteId), [fieldnum (PIPInventItemActivatedPriceEntity, CostingVersionId)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<FormRef>InventItemPrice</FormRef>
	<Label>@PIP4076</Label>
	<Tags>Prices ISV</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>PIPInventItemActivatedPriceStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>PIPItemActivatedPrices</PublicCollectionName>
	<PublicEntityName>PIPItemActivatedPrice</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemNumber</Name>
			<AllowEdit>No</AllowEdit>
			<Mandatory>Yes</Mandatory>
			<DataField>ItemId</DataField>
			<DataSource>InventItemPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FixedPriceCharges</Name>
			<DataField>Markup</DataField>
			<DataSource>InventItemPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostingVersionId</Name>
			<DataField>VersionId</DataField>
			<DataSource>InventItemPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PriceType</Name>
			<DataField>PriceType</DataField>
			<DataSource>InventItemPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PriceSiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductConfigurationId</Name>
			<DataField>configId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductColorId</Name>
			<DataField>InventColorId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductSizeId</Name>
			<DataField>InventSizeId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductStyleId</Name>
			<DataField>InventStyleId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PriceQuantity</Name>
			<DataField>PriceUnit</DataField>
			<DataSource>InventItemPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductUnitSymbol</Name>
			<DataField>UnitID</DataField>
			<DataSource>InventItemPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PriceChargesQuantity</Name>
			<DataField>PriceQty</DataField>
			<DataSource>InventItemPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPriceIncludingCharges</Name>
			<DataField>PriceAllocateMarkup</DataField>
			<DataSource>InventItemPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Price</Name>
			<DataField>Price</DataField>
			<DataSource>InventItemPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ActivationDate</Name>
			<DataField>ActivationDate</DataField>
			<DataSource>InventItemPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CreatedDateAndTime</Name>
			<DataField>CreatedDateTime</DataField>
			<DataSource>InventItemPrice</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ItemNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>PriceSiteId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductConfigurationId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductColorId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductSizeId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductStyleId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>PriceType</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ActivationDate</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CreatedDateAndTime</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>InventInventoryDimensionEntityFieldsMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>configId</MapField>
					<MapFieldTo>ProductConfigurationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventBatchId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventColorId</MapField>
					<MapFieldTo>ProductColorId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventGTDId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventOwnerId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventProfileId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventSerialId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
					<MapFieldTo>PriceSiteId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSizeId</MapField>
					<MapFieldTo>ProductSizeId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStatusId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStyleId</MapField>
					<MapFieldTo>ProductStyleId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LicensePlateId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSLocationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSPalletId</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventItemPrice</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventItemPrice</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDim</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventDim</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>InventDim</Name>
								<JoinRelationName>InventDim</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>