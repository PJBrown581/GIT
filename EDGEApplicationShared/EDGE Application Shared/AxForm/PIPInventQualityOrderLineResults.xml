<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>PIPInventQualityOrderLineResults</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class PIPInventQualityOrderLineResults extends FormRun
{
    InventQualityOrderTable inventQualityOrderTable;
    InventQualityOrderLine  inventQualityOrderLine;
    InventQualityOrderId    qualityOrderId;
    PdsCWFormCtrl           cwFormCtrl;
    boolean                 anyChange;
    boolean                 isCwItem;
    boolean                 isOrderStatusOpen;

    FormRun                 callerForm;
    boolean                 callerHasFindOrderLineRecordMethod;
    boolean                 callerHasActivateFormMethod;

}
]]></Source>
			</Method>
			<Method>
				<Name>isOrderStatusOpen</Name>
				<Source><![CDATA[
    public boolean isOrderStatusOpen()
    {
        return isOrderStatusOpen;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventQualityOrderTable</Name>
				<Source><![CDATA[
    public InventQualityOrderTable inventQualityOrderTable()
    {
        return inventQualityOrderTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventQualityOrderLine</Name>
				<Source><![CDATA[
    public InventQualityOrderLine inventQualityOrderLine()
    {
        return inventQualityOrderLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qualityOrderId</Name>
				<Source><![CDATA[
    public InventQualityOrderId qualityOrderId()
    {
        return qualityOrderId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLineTestResults</Name>
				<Source><![CDATA[
    protected void updateLineTestResults()
    {
        if (callerHasActivateFormMethod)
        {
            callerForm.refreshResult();
        }
        else
        {
            ttsbegin;

            InventQualityOrderLine orderLine = inventQualityOrderLineResults.inventQualityOrderLine();
            orderLine.selectForUpdate(true);
            orderLine.reread();
            // The validateWrite method was (unfortnately) written to do a lot of updating of the result lines and the order line results themselves--
            // this call then refreshes the result values on the line and related records (like Batch attributes)
            if (orderLine.validateWrite())
            {
                orderLine.update();
            }

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        super();
    
        if (anyChange && inventQualityOrderLineResults.RecId)
        {
            inventQualityOrderLineResults.setTestResult(null, true);
        }
            
        if (callerForm)
        {
            callerForm.doRefresh();
            if (callerHasActivateFormMethod)
            {
                callerForm.activateForm(true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>doRefresh</Name>
				<Source><![CDATA[
    public void doRefresh()
    {
        InventQualityOrderLineResults findOrderLineResults = inventQualityOrderLineResults.data();
    
        inventQualityOrderLineResults_ds.research();
        inventQualityOrderLineResults_ds.positionToRecord(findOrderLineResults);
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshCaller</Name>
				<Source><![CDATA[
    private void refreshCaller()
    {
        if (callerForm)
        {
            callerForm.doRefresh();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        Args args = this.args();
    
        if (args.dataset() != tableNum(InventQualityOrderTable))
        {
            throw error(strFmt("@SYS19096", element.name(), tableStr(InventQualityOrderTable)));
        }
    
        inventQualityOrderTable = args.record();
        qualityOrderId          = inventQualityOrderTable.QualityOrderId;
        isCwItem                = PdsGlobal::pdsIsCWItem(inventQualityOrderTable.ItemId);
        isOrderStatusOpen       = (inventQualityOrderTable.OrderStatus == InventTestOrderStatus::Open);
            
        callerForm = this.args().caller() as FormRun;
        if (callerForm)
        {
            callerHasFindOrderLineRecordMethod = formHasMethod(callerForm, 'pipFindOrderLineRecord');
            callerHasActivateFormMethod = formHasMethod(callerForm, 'activateForm');
        }
        
        cwFormCtrl = PdsCWFormCtrl_QOLineResults::newFromForm(this);
        cwFormCtrl.initPre();
            
        super();

        this.setNoOfDecimalsForGrid();
        
        cwFormCtrl.initPost();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setNoOfDecimalsForGrid</Name>
				<Source><![CDATA[
    private void setNoOfDecimalsForGrid()
    {
        UnitOfMeasure unitOfMeasure;
        InventTestTable inventTestTable;
        InventQualityOrderLine qualityOrderLine;

        select maxof(DecimalPrecision) from unitOfMeasure
            exists join inventTestTable
                where inventTestTable.TestUnitId == unitOfMeasure.Symbol
            exists join qualityOrderLine
                where qualityOrderLine.TestId == InventTestTable.TestId
                    && qualityOrderLine.QualityOrderId == inventQualityOrderTable.QualityOrderId;

        UnitOfMeasureDecimalPrecision noOfDecimals = unitOfMeasure.DecimalPrecision;
        standardValue.noOfDecimals(noOfDecimals);
        lowerLimit.noOfDecimals(noOfDecimals);
        upperLimit.noOfDecimals(noOfDecimals);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromOrderLine</Name>
				<Source><![CDATA[
    void initFromOrderLine()
    {
        InventQualityOrderLine  orderLine;
    
        if (inventQualityOrderLineResults.TestId || inventQualityOrderLineResults.TestSequence)
        {
            select firstOnly orderLine
                where orderLine.QualityOrderId                          == inventQualityOrderLineResults.QualityOrderId
                    && (!inventQualityOrderLineResults.TestId
                        || (inventQualityOrderLineResults.TestId
                            && orderLine.TestId                         == inventQualityOrderLineResults.TestId))
                    && (!inventQualityOrderLineResults.TestSequence
                        || (inventQualityOrderLineResults.TestSequence
                            && orderLine.TestSequence                   == inventQualityOrderLineResults.TestSequence));
        }
    
        if (orderLine)
        {
            inventQualityOrderLineResults.initFromInventQualityOrderLine(orderLine);
        }

        inventQualityOrderLine = orderLine;

        this.setOutcomeEnabled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOutcomeEnabled</Name>
				<Source><![CDATA[
    void setOutcomeEnabled()
    {
        InventTestTable inventTestTable = InventTestTable::find(inventQualityOrderLineResults.inventQualityOrderLine().TestId);
        boolean         canHaveOutcome  = inventTestTable.canHaveOutcome();
        
        enableDSField(this.dataSource(), fieldNum(InventQualityOrderLineResults, TestResultValueOutcome), canHaveOutcome);
        InventQualityOrderLineResults_TestResultValueReal.enabled(!canHaveOutcome);
            
        if(inventQualityOrderLineResults_ds.object(fieldNum(InventQualityOrderLineResults, TestResultValueReal)).enabled())
        {
            inventQualityOrderLineResults.setDecimal();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    public void updateDesign()
    {
        inventQualityOrderLineResults_ds.object(fieldNum(InventQualityOrderLineResults,TestId)).skip(inventQualityOrderLineResults.RecId);
        inventQualityOrderLineResults_ds.object(fieldNum(InventQualityOrderLineResults,TestSequence)).skip(inventQualityOrderLineResults.RecId);

        UnitOfMeasureDecimalPrecision noOfDecimals = inventQualityOrderLine.setDecimal();
        TestMeasurementValues_standardValue.noOfDecimals(noOfDecimals);
        TestMeasurementValues_lowerLimit.noOfDecimals(noOfDecimals);
        TestMeasurementValues_upperLimit.noOfDecimals(noOfDecimals);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isResultsEntered</Name>
				<Source><![CDATA[
    public boolean isResultsEntered(InventQualityOrderLineResults _results)
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>InventQualityOrderLineResults</Name>
				<Methods>
					<Method>
						<Name>testDescription</Name>
						<Source><![CDATA[
        display Description testDescription(InventQualityOrderLineResults _orderLineResults)
        {
            return InventTestTable::find(_orderLineResults.TestId).Description;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            super(_append);
    
            InventQualityOrderLineResults_TestSequence.setFocus();
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            inventQualityOrderTable = element.args().record() as InventQualityOrderTable;
            isOrderStatusOpen       = (inventQualityOrderTable.OrderStatus == InventTestOrderStatus::Open);
            anyChange               = false;
            
            super();
    
            inventQualityOrderLineResults_ds.allowCreate(isOrderStatusOpen);
            inventQualityOrderLineResults_ds.allowEdit(isOrderStatusOpen);
            inventQualityOrderLineResults_ds.allowDelete(isOrderStatusOpen);
            Results_TestResultValueReal.enabled(isOrderStatusOpen);
            ValidateButton.enabled(isOrderStatusOpen);
            ResetTestResults.enabled(isOrderStatusOpen);
    
            cwFormCtrl.dataSourceLinkActivePost();
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            super();
    
            anyChange = true;
    
            if (callerHasActivateFormMethod)
            {
                if (element.args().record())
                {
                    callerForm.activateForm(false);
                }

            }

            PIPInventQualityOrderLineResultsHelper::updateLineEnumValues(inventQualityOrderLineResults.inventQualityOrderLine());
            element.refreshCaller();

            element.updateLineTestResults();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;
    
            ret = super();
    
            ret = ret && cwFormCtrl.dataSourceValidateWrite();
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();
    
            anyChange = true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
    
            ret = super();
    
            inventQualityOrderLine = inventQualityOrderLineResults.inventQualityOrderLine();
        
            element.setOutcomeEnabled();
            element.updateDesign();

            if (callerHasFindOrderLineRecordMethod)
            {
                callerForm.pipFindOrderLineRecord(inventQualityOrderLine);
            }
            
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
    
            cwFormCtrl.dataSourceInitPost(inventQualityOrderLineResults);
        }

]]></Source>
					</Method>
					<Method>
						<Name>upperLimit</Name>
						<Source><![CDATA[
        display InventTestUpperLimit upperLimit(InventQualityOrderLineResults _orderLineResults)
        {
            return _orderLineResults.inventQualityOrderLine().UpperLimit;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lowerLimit</Name>
						<Source><![CDATA[
        display InventTestLowerLimit lowerLimit(InventQualityOrderLineResults _orderLineResults)
        {
            return _orderLineResults.inventQualityOrderLine().LowerLimit;
        }

]]></Source>
					</Method>
					<Method>
						<Name>standardValue</Name>
						<Source><![CDATA[
        display InventTestStandardValue standardValue(InventQualityOrderLineResults _orderLineResults)
        {
            return _orderLineResults.inventQualityOrderLine().StandardValue;
        }

]]></Source>
					</Method>
					<Method>
						<Name>editTestResultValue</Name>
						<Source><![CDATA[
        public edit PIPInventQualityOrderLineResultString editTestResultValue(boolean _set, InventQualityOrderLineResults _orderLineResults, PIPInventQualityOrderLineResultString _value)
        {
            PIPInventQualityOrderLineResultString res;

            int lineNumDecimals = -1;

            PIPInventQualityOrdrLineResultsFormatter formatter = PIPInventQualityOrdrLineResultsFormatter::construct();
            // When the grid is visible, use the decimal precision of the grid; otherwise use the precision for the specific record
            if (tab.tab() == 1)
            {
                formatter.parmDecimalPrecision(standardValue.noOfDecimals());
            }
            else
            {
                lineNumDecimals = _orderLineResults.inventQualityOrderLine().setDecimal();

                formatter.parmDecimalPrecision(lineNumDecimals);
            }

            if (_set)
            {
                if (lineNumDecimals < 0)
                {
                    lineNumDecimals = _orderLineResults.inventQualityOrderLine().setDecimal();
                }

                _orderLineResults.TestResultValueReal = decround(formatter.toReal(_value), lineNumDecimals);

                if (_orderLineResults.TestResultValueReal != _orderLineResults.orig().TestResultValueReal
                    || (_value != '' && _orderLineResults.TestResultValueReal == 0 && !element.isResultsEntered(_orderLineResults.orig())))
                {
                    InventQualityOrderLineResults_ds.object(fieldNum(InventQualityOrderLineResults, TestResultValueReal)).modified();
                }
            }

            if (_orderLineResults.TestResultValueReal == 0 && !element.isResultsEntered(_orderLineResults))
            {
                res = '';
            }
            else
            {
                res = formatter.realToValue(_orderLineResults.TestResultValueReal);
            }

            return res;
        }

]]></Source>
					</Method>
					<Method>
						<Name>testResultImage</Name>
						<Source><![CDATA[
        public display container testResultImage(InventQualityOrderLineResults _inventQualityOrderLineResults)
        {            
            str imageReferenceSymbol;
            if (_inventQualityOrderLineResults.inventQualityOrderLine().PIPSkipTest)
            {
                imageReferenceSymbol = ImageReferenceSymbol::NotAvailable;
            }
            else if (_inventQualityOrderLineResults.TestResult == InventTestOutcomeStatus::Pass)
            {
                imageReferenceSymbol = ImageReferenceSymbol::Accept;
            }
            else
            {
                imageReferenceSymbol = ImageReferenceSymbol::Error;
            }
            
            ImageReference imageReference = ImageReference::constructForSymbol(imageReferenceSymbol);

            return imageReference.pack();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>PdsCWTestResultQuantity</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                cwFormCtrl.fieldModified(fieldNum(InventQualityOrderLineResults, PdsCWTestResultQuantity));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TestId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                inventQualityOrderLineResults.TestSequence = 0;
                element.initFromOrderLine();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TestResult</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                element.initFromOrderLine();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TestResultQuantity</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                cwFormCtrl.fieldModified(fieldNum(InventQualityOrderLineResults, TestResultQuantity));
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TestResultValueOutcome</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                InventTestVariableOutcome::lookupVariableOutcomes(_formControl, inventQualityOrderLine.VariableId);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TestSequence</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                inventQualityOrderLineResults.TestId = "";
                element.initFromOrderLine();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ValidateButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            inventQualityOrderLineResults.setTestResult(null, true);
            element.doRefresh();
            element.refreshCaller();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ResetTestResults</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            element.doRefresh();
            element.updateLineTestResults();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>InventQualityOrderLineResults</Name>
			<Table>InventQualityOrderLineResults</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeResults</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCWTestResultQuantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>QualityOrderId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TestId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TestResult</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TestResultQuantity</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TestResultValueOutcome</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TestResultValueReal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TestSequence</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@PIP1086</Caption>
		<Pattern xmlns="">Task</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<UseCaptionFromMenuItem xmlns="">Yes</UseCaptionFromMenuItem>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>357913941</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>0</Width>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ValidateButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HelpText>@SYS113864</HelpText>
								<NeededPermission>Manual</NeededPermission>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS53323</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ResetTestResults</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HelpText>@PIP3051</HelpText>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@PIP1108</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>InventQualityOrderLineResults</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageOverview</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>Overview</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormIntegerControl">
												<Name>InventQualityOrderLineResults_TestSequence</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Integer</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>TestSequence</DataField>
												<DataSource>InventQualityOrderLineResults</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventQualityOrderLineResults_TestId</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>TestId</DataField>
												<DataSource>InventQualityOrderLineResults</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>testDescription</Name>
												<Type>String</Type>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<CacheDataMethod>Yes</CacheDataMethod>
												<DataMethod>testDescription</DataMethod>
												<DataSource>InventQualityOrderLineResults</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>InventQualityOrderLineResults_TestResultQuantity</Name>
												<Type>Real</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>TestResultQuantity</DataField>
												<DataSource>InventQualityOrderLineResults</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>InventQualityOrderLineResults_PdsCWTestResultQuantity</Name>
												<Type>Real</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>PdsCWTestResultQuantity</DataField>
												<DataSource>InventQualityOrderLineResults</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>standardValue</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Skip>Yes</Skip>
												<Type>Real</Type>
												<FormControlExtension
													i:nil="true" />
												<CacheDataMethod>Yes</CacheDataMethod>
												<DataMethod>standardValue</DataMethod>
												<DataSource>InventQualityOrderLineResults</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>lowerLimit</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Skip>Yes</Skip>
												<Type>Real</Type>
												<FormControlExtension
													i:nil="true" />
												<CacheDataMethod>Yes</CacheDataMethod>
												<DataMethod>lowerLimit</DataMethod>
												<DataSource>InventQualityOrderLineResults</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormRealControl">
												<Name>upperLimit</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Skip>Yes</Skip>
												<Type>Real</Type>
												<FormControlExtension
													i:nil="true" />
												<CacheDataMethod>Yes</CacheDataMethod>
												<DataMethod>upperLimit</DataMethod>
												<DataSource>InventQualityOrderLineResults</DataSource>
												<NoOfDecimals>-1</NoOfDecimals>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventQualityOrderLineResults_TestResultValueOutcome</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>TestResultValueOutcome</DataField>
												<DataSource>InventQualityOrderLineResults</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>InventQualityOrderLineResults_TestResultValueReal</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<HelpText>@FieldDescriptions_InventoryManagement:InventQualityOrderLineResults_Results_TestResultValueReal</HelpText>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataMethod>editTestResultValue</DataMethod>
												<DataSource>InventQualityOrderLineResults</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>InventQualityOrderLineResults_IncludeResults</Name>
												<Type>CheckBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>IncludeResults</DataField>
												<DataSource>InventQualityOrderLineResults</DataSource>
											</AxFormControl>
										</Controls>
										<DataSource>InventQualityOrderLineResults</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>TestResult</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>80</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackStyle>Transparent</BackStyle>
										<DataMethod>testResultImage</DataMethod>
										<DataSource>InventQualityOrderLineResults</DataSource>
										<Imagemode>Center</Imagemode>
										<Label>@SYS113844</Label>
									</AxFormControl>
								</Controls>
								<DataSource>InventQualityOrderLineResults</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS9039</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabPageGeneral</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Identification</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_QualityOrderId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>QualityOrderId</DataField>
										<DataSource>InventQualityOrderLineResults</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>Identification_TestSequence</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TestSequence</DataField>
										<DataSource>InventQualityOrderLineResults</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_TestId</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TestId</DataField>
										<DataSource>InventQualityOrderLineResults</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Identification_testDescription</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<CacheDataMethod>Yes</CacheDataMethod>
										<DataMethod>testDescription</DataMethod>
										<DataSource>InventQualityOrderLineResults</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>Identification_LineNum</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>LineNum</DataField>
										<DataSource>InventQualityOrderLineResults</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<DataSource>InventQualityOrderLineResults</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TestMeasurementValues</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TestMeasurementValues_standardValue</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<CacheDataMethod>Yes</CacheDataMethod>
										<DataMethod>standardValue</DataMethod>
										<DataSource>InventQualityOrderLineResults</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TestMeasurementValues_lowerLimit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<CacheDataMethod>Yes</CacheDataMethod>
										<DataMethod>lowerLimit</DataMethod>
										<DataSource>InventQualityOrderLineResults</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>TestMeasurementValues_upperLimit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Skip>Yes</Skip>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<CacheDataMethod>Yes</CacheDataMethod>
										<DataMethod>upperLimit</DataMethod>
										<DataSource>InventQualityOrderLineResults</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Caption>@SYS113784</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>General</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>General_TestResultQuantity</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_InventoryManagement:InventQualityOrderLineResults_General_TestResultQuantity</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TestResultQuantity</DataField>
										<DataSource>InventQualityOrderLineResults</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>General_PdsCWTestResultQuantity</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_InventoryManagement:InventQualityOrderLineResults_General_PdsCWTestResultQuantity</HelpText>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PdsCWTestResultQuantity</DataField>
										<DataSource>InventQualityOrderLineResults</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>General_IncludeResults</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_InventoryManagement:InventQualityOrderLineResults_General_IncludeResults</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>IncludeResults</DataField>
										<DataSource>InventQualityOrderLineResults</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>General_TestResult</Name>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TestResult</DataField>
										<DataSource>InventQualityOrderLineResults</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<DataGroup>General</DataGroup>
								<DataSource>InventQualityOrderLineResults</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Results</Name>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Results_TestResultValueOutcome</Name>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_InventoryManagement:InventQualityOrderLineResults_Results_TestResultValueOutcome</HelpText>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TestResultValueOutcome</DataField>
										<DataSource>InventQualityOrderLineResults</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Results_TestResultValueReal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HelpText>@FieldDescriptions_InventoryManagement:InventQualityOrderLineResults_Results_TestResultValueReal</HelpText>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editTestResultValue</DataMethod>
										<DataSource>InventQualityOrderLineResults</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>InventQualityOrderLineResults</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2952</Caption>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>InventQualityOrderLineResults</DataSource>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>