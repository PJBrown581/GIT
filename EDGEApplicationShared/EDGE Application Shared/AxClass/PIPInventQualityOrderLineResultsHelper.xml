<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PIPInventQualityOrderLineResultsHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PIPInventQualityOrderLineResultsHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateLineEnumValues</Name>
				<Source><![CDATA[
    public static void updateLineEnumValues(InventQualityOrderLine _orderLine)
    {
        if (PIPInventQualityOrderLineResultsHelper::shouldUpdateLineEnumValues())
        {
            _orderLine.selectForUpdate(true);
            _orderLine.reread();

            InventTestGroupMember inventTestGroupMember = _orderLine.inventTestGroupMember();
            InventTestTable inventTestTable = InventTestTable::find(_orderLine.TestId);

            if (inventTestGroupMember.PdsTestResultValueDerivation == PdsTestResultValueDerivation::Manual
                && inventTestTable.TestType == InventTestType::Option)
            {
                InventQualityOrderLineResults qualityOrderLineResults;
                InventTestVariableOutcomeId outcomeId;

                while select TestResultValueOutcome
                    from   qualityOrderLineResults
                    where  qualityOrderLineResults.QualityOrderId     == _orderLine.QualityOrderId
                        && qualityOrderLineResults.TestSequence       == _orderLine.TestSequence
                {
                    if (!outcomeId)
                    {
                        outcomeId = qualityOrderLineResults.TestResultValueOutcome;
                    }

                    if (outcomeId != qualityOrderLineResults.TestResultValueOutcome)
                    {
                        outcomeId = "";
                        break;
                    }
                }

                // Microsoft made a change in 10.0.17 so that InventQualityOrderLineResults.setTestResult() sometimes (if quality line has a batch attribute and set to update batch attributes) this will
                // read a fresh copy of the quality order line and update the database record (calling inventQualityOrderLine.doUpdate()). Unfortunately InventQualityOrderLine.validateWrite() calls this setTestResult() method.
                // Our workararound here is to redo the work after calling validateWrite() so we know at least that our changes are valid -- not ideal but what we are stuck with (or a buf2buf copy but that could potentially
                // destory the changes validateWrite() call had made to the record).
                PIPInventQualityOrderLineResultsHelper::updateLineValuesWithOutcome(_orderLine, outcomeId);

                if (_orderLine.validateWrite())
                {
                    _orderLine.reread();
                    PIPInventQualityOrderLineResultsHelper::updateLineValuesWithOutcome(_orderLine, outcomeId);
                    _orderLine.update();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLineValuesWithOutcome</Name>
				<Source><![CDATA[
    private static void updateLineValuesWithOutcome(InventQualityOrderLine _orderLine, InventTestVariableOutcomeId _outcomeId)
    {
        if (_outcomeId)
        {
            _orderLine.PdsBatchAttribOverride = NoYes::Yes;

            _orderLine.pdsSetOrderLineResult(true, _outcomeId);

            if (_orderLine.PdsBatchAttribId && _orderLine.PdsUpdateBatchAttributes)
            {
                _orderLine.PdsAttribValue = _orderLine.PdsOrderLineResult;
            }
        }
        else
        {
            _orderLine.PdsBatchAttribOverride = NoYes::No;

            _orderLine.PdsOrderLineResult = '';
            _orderLine.PdsAttribValue = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldUpdateLineEnumValues</Name>
				<Source><![CDATA[
    public static boolean shouldUpdateLineEnumValues()
    {
        if (#PdsBatchAttribEnabled)
            return true;

        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>