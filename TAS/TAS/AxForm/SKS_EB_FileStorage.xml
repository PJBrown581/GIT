<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SKS_EB_FileStorage</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SKS_EB_FileStorage extends FormRun
{
    SKS_PP_Setup gSKS_PP_Setup;


  
}
]]></Source>
			</Method>
			<Method>
				<Name>setFieldParams</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public void setFieldParams()
    {
        //Option tab fields
        // enable/disable
        SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, BankIntegDefaultForNewModules)).allowEdit(SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue);

        //FileHub/Local tab fields
        if(SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::FileHubLocalEnumValue || SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue)
        {
            FileHubAndLocalOptionsTabPage.expand();
        }
        else
        {
            FileHubAndLocalOptionsTabPage.collapse();
        }
        // enable/disable
        SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, FileStorageType)).allowEdit(SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::FileHubLocalEnumValue || SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue);
        SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, FileHubLocation)).allowEdit((SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::FileHubLocalEnumValue || SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue) && SKS_EB_FileStorage.FileStorageType ==  SKS_EB_FileStorageType::FileHub);
        SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, FileHubToken)).allowEdit( (SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::FileHubLocalEnumValue || SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue) && SKS_EB_FileStorage.FileStorageType ==  SKS_EB_FileStorageType::FileHub);
        if(!SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, Trace)).allowEdit((SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::FileHubLocalEnumValue || SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue) && SKS_EB_FileStorage.FileStorageType == SKS_EB_FileStorageType::FileHub))
        {
            SKS_EB_FileStorage.Trace = NoYes::No;
        }
        FileHubTest.enabled((SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::FileHubLocalEnumValue || SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue) && SKS_EB_FileStorage.FileStorageType == SKS_EB_FileStorageType::FileHub);
        //mandatory
        SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, FileHubToken)).mandatory((SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::FileHubLocalEnumValue || SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue) && SKS_EB_FileStorage.FileStorageType ==  SKS_EB_FileStorageType::FileHub);
        SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, FileHubLocation)).mandatory((SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::FileHubLocalEnumValue || SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue) && SKS_EB_FileStorage.FileStorageType ==  SKS_EB_FileStorageType::FileHub);

        //BankFabric Tab Fields
        if(SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricEnumValue || SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue)
        {
            BankFabricTabPage.expand();
        }
        else
        {
            BankFabricTabPage.collapse();
        }
        // enable/disable
        BankFabricPINExchange.enabled(SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue || SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricEnumValue);
        SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, BankFabricPin)).allowEdit(SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue || SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricEnumValue);
        SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, BankFabricURL)).allowEdit(SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue || SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricEnumValue);
        //mandatory
        SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, BankFabricURL)).mandatory(SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue || SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricEnumValue);

        //ModuleConfiguration Tab Fields
        if(SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue)
        {
            ModuleConfigurationTabpage.expand();
        }
        else
        {
            ModuleConfigurationTabpage.collapse();
        }
        //allowedit
        SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, StorageOption_PP)).allowEdit(SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue && SKS_EB_FileStorage.StorageOption_PP != SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue);
        SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, StorageOption_BR)).allowEdit(SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue && SKS_EB_FileStorage.StorageOption_BR != SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue);
        SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, StorageOption_CCR)).allowEdit(SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue && SKS_EB_FileStorage.StorageOption_CCR != SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue);
        SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, StorageOption_LB)).allowEdit(SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue && SKS_EB_FileStorage.StorageOption_LB != SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue);
        SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, StorageOption_APEFTFXDD)).allowEdit(SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue && SKS_EB_FileStorage.StorageOption_APEFTFXDD != SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue);
        SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, StorageOption_IHB)).allowEdit(SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue && SKS_EB_FileStorage.StorageOption_IHB != SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue);
        SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, StorageOption_MandateAutomation)).allowEdit(SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue && SKS_EB_FileStorage.StorageOption_MandateAutomation != SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue);
        //set the lookups for fields that are currently licensed
        element.setStorageOptionLookup(SKS_EB_FileStorage_StorageOption_PP, SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, StorageOption_PP)));
        element.setStorageOptionLookup(SKS_EB_FileStorage_StorageOption_BR, SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, StorageOption_BR)));
        element.setStorageOptionLookup(SKS_EB_FileStorage_StorageOption_CCR, SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, StorageOption_CCR)));
        element.setStorageOptionLookup(SKS_EB_FileStorage_StorageOption_LB, SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, StorageOption_LB)));
        element.setStorageOptionLookup(SKS_EB_FileStorage_StorageOption_APEFTFXDD,  SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, StorageOption_APEFTFXDD)));
        element.setStorageOptionLookup(SKS_EB_FileStorage_StorageOption_IHB, SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, StorageOption_IHB)));
        element.setStorageOptionLookup(SKS_EB_FileStorage_StorageOption_MandateAutomation,  SKS_EB_FileStorage_DS.object(fieldNum(SKS_EB_FileStorage, StorageOption_MandateAutomation)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStorageOptionLookup</Name>
				<Source><![CDATA[
    ///<summary>
    ///</summary>
    private void setStorageOptionLookup(FormComboBoxControl _FormControl, FormDataObject _FormDataObject)
    {
        SKS_EB_BankIntegOptWithNoLicense locSKS_EB_BankIntegOptWithNoLicense;
        if(_FormDataObject.getValue() != SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue)
        {
            locSKS_EB_BankIntegOptWithNoLicense = _FormDataObject.getValue();
            _FormControl.clear();
            _FormControl.add(Enum2str(SKS_EB_BankIntegOptWithNoLicense::FileHubLocalEnumValue));
            _FormControl.add(Enum2str(SKS_EB_BankIntegOptWithNoLicense::BankFabricEnumValue));
            _FormControl.selectText(enum2Str(locSKS_EB_BankIntegOptWithNoLicense));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public void init()
    {
        super();
        select gSKS_PP_Setup;

    }

]]></Source>
			</Method>
			<Method>
				<Name>activate</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name = "_active"></param>
    public void activate(boolean _active)
    {
        super(_active);
        this.setFieldParams();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public void run()
    {
        super();

        if(SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::FileHubLocalEnumValue || //FileHub
            (SKS_EB_FileStorage.SKS_EB_BankIntegOpt == SKS_EB_BankIntegOpt::BankFabricAndFileHubLocalEnumValue && SKS_EB_FileStorage.BankFabricResponseStatus != SKS_BF_ResponseStatus::PINExchangeComplete)) //BankFabric but no PIN exchange completed
        {
            Info("@SKS:SKGBankIntegrationBankFabric");
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>SKS_EB_FileStorage</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
            ret = super();
            element.setFieldParams();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>FileStorageType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// modified method
            /// </summary>
            public void modified()
            {
                super();
                element.setFieldParams();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>StorageOption_CCR</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            /// validate method
            /// </summary>
            /// <returns>boolean</returns>
            public boolean validate()
            {
                boolean ret;

                ret = super();
                if(ret)
                {
                    if(SKS_EB_FileStorage.StorageOption_CCR == SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue)
                    {
                        ret = false;
                        error("@SKS:SKGErrorNotLicensedInvalid");
                    }
                }
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>StorageOption_IHB</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            /// validate method
            /// </summary>
            /// <returns>boolean</returns>
            public boolean validate()
            {
                boolean ret;
            
                ret = super();
                if(ret)
                {
                    if(SKS_EB_FileStorage.StorageOption_IHB == SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue)
                    {
                        ret = false;
                        error("@SKS:SKGErrorNotLicensedInvalid");
                    }
                }
            
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>StorageOption_LB</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            /// validate method
            /// </summary>
            /// <returns>boolean</returns>
            public boolean validate()
            {
                boolean ret;
        
                ret = super();
                if(ret)
                {                   
                    if(SKS_EB_FileStorage.StorageOption_LB == SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue)
                    {
                        ret = false;
                        error("@SKS:SKGErrorNotLicensedInvalid");
                    }
                }
        
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>StorageOption_MandateAutomation</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            /// validate method
            /// </summary>
            /// <returns>boolean</returns>
            public boolean validate()
            {
                boolean ret;
            
                ret = super();
                if(ret)
                {
                    if(SKS_EB_FileStorage.StorageOption_MandateAutomation == SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue)
                    {
                        ret = false;
                        error("@SKS:SKGErrorNotLicensedInvalid");
                    }
                }
            
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>StorageOption_PP</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            /// validate method
            /// </summary>
            /// <returns>boolean</returns>
            public boolean validate()
            {
                boolean ret;

                ret = super();
                if(ret)
                {
                    if(SKS_EB_FileStorage.StorageOption_PP == SKS_EB_BankIntegOptWithNoLicense::NotLicensedEnumValue)
                    {
                        ret = false;
                        error("@SKS:SKGErrorNotLicensedInvalid");
                    }
                }
                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            /// <summary>
            /// lookup method
            /// </summary>
            /// <param name = "_formControl">_formControl</param>
            /// <param name = "_filterStr">_filterStr</param>
            public void lookup(FormControl _formControl, str _filterStr)
            {
                element.setFieldParams();
                super(_formControl, _filterStr);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>SKS_EB_FileStorage_SKS_EB_BankIntegOpt</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// modified method
        /// </summary>
        /// <returns>boolean</returns>
        public boolean modified()
        {
            boolean ret;
    
            ret = super();
            element.setFieldParams();
            
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FileHubTest</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// clicked method
        /// </summary>
        public void clicked()
        {
            super();

            SKS_EB_FileHub fileHub = SKS_EB_FileHub::construct();
            fileHub.parmThrowErrorIfException(false);
            fileHub.runTestConnection();
            if (fileHub.errorHasException())
            {
                error(fileHub.errorException());
            }
            else
            {
                info("@SKS:SKGConnectionSuccessful");
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BankFabricPINExchange</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// clicked method
        /// </summary>
        public void clicked()
        {
            super();

            if (SKS_EB_FileStorage.BankFabricPin != '')
            {
                SKS_BF_Connection newConnection = SKS_BF_Connection::constuct();
                newConnection.BFPINExchange();
            
                SKS_EB_FileStorage_DS.reread();
                SKS_EB_FileStorage_DS.refresh();
            }
            else
            {
                Info("@SKS:SKGBFPINMIssing");
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>BankFabricTestConnection</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// clicked method
        /// </summary>
        public void clicked()
        {
            super();

            container           bfFileLocationList;

            if (SKS_EB_FileStorage.BankFabricResponseStatus == SKS_BF_ResponseStatus::PINExchangeComplete)
            {
                SKS_BF_Connection newConnection = SKS_BF_Connection::constuct();
                bfFileLocationList = newConnection.BFGetFileLocation(SKS_BF_FileLocCategory::APEFT,SKS_BF_LookupTable::FileLocations,true);
                if (conLen(bfFileLocationList) > 0)
                {
                    Info(conPeek(bfFileLocationList,1));
                }
            }
            else
            {
                Info("@SKS:SKGBFTstConnection");
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SKS_EB_FileStorage</Name>
			<Table>SKS_EB_FileStorage</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BankFabricClientID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankFabricDNSName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankFabricPin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankfabricPinExchDatetime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankFabricResponseReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankFabricResponseStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankFabricScope</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankFabricSecret</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankFabricSubscription</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankFabricTenant</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankFabricURL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankIntegDefaultForNewModules</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileHubLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileHubToken</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileStorageType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EB_BankIntegOpt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StorageOption_APEFTFXDD</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StorageOption_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StorageOption_CCR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StorageOption_IHB</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StorageOption_LB</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StorageOption_MandateAutomation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StorageOption_PP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Trace</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SKS:SKGFileStorage</Caption>
		<DataSource xmlns="">SKS_EB_FileStorage</DataSource>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<Pattern xmlns="">SimpleDetails-FastTabsContainer</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>FormActionPaneControl1</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls />
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>OptionTabPage</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SKS_EB_FileStorage_SKS_EB_BankIntegOpt</Name>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>SKS_EB_BankIntegOpt</DataField>
								<DataSource>SKS_EB_FileStorage</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SKS_EB_FileStorage_BankIntegDefaultForNewModules</Name>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>BankIntegDefaultForNewModules</DataField>
								<DataSource>SKS_EB_FileStorage</DataSource>
								<Items />
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS73535</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>FileHubAndLocalOptionsTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>ToolbarFields</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>FileStorageActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>FileStorageButtonGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>FileHubTest</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<HelpText>@SKS:SKGFileHubTest</HelpText>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<Text>@SKS:SKGFileHubTest</Text>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FormGroupControl1</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_EB_FileStorage_FileStorageType</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>FileStorageType</DataField>
										<DataSource>SKS_EB_FileStorage</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EB_FileStorage_FileHubLocation</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>FileHubLocation</DataField>
										<DataSource>SKS_EB_FileStorage</DataSource>
										<DisplayLength>300</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EB_FileStorage_FileHubToken</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editSKS_EB_FileHubToken</DataMethod>
										<DataSource>SKS_EB_FileStorage</DataSource>
										<DisplayLength>200</DisplayLength>
										<DisplayLengthMode>Fixed</DisplayLengthMode>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EB_FileStorage_Trace</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Trace</DataField>
										<DataSource>SKS_EB_FileStorage</DataSource>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@SKS:SKGFileHubLocalLabel</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>BankFabricTabPage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>ToolbarFields</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>BankFabricActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>BankFabricButtonGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>BankFabricPINExchange</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<HelpText>@SKS:SKGBFPINExchange</HelpText>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<Text>@SKS:SKGBFPINExchange</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>BankFabricTestConnection</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<HelpText>@SKS:SKGBFTestConnection</HelpText>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<Text>@SKS:SKGBFTestConnection</Text>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FormGroupControl2</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EB_FileStorage_BankFabricURL</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankFabricURL</DataField>
										<DataSource>SKS_EB_FileStorage</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EB_FileStorage_BankFabricPin</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>BankFabricPin</DataField>
										<DataSource>SKS_EB_FileStorage</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>FormGroupControl3</Name>
										<Enabled>No</Enabled>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>SKS_EB_FileStorage_BankFabricResponseStatus</Name>
												<Type>ComboBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>BankFabricResponseStatus</DataField>
												<DataSource>SKS_EB_FileStorage</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormDateTimeControl">
												<Name>SKS_EB_FileStorage_BankfabricPinExchDatetime</Name>
												<Type>DateTime</Type>
												<Visible>No</Visible>
												<FormControlExtension
													i:nil="true" />
												<DataField>BankfabricPinExchDatetime</DataField>
												<DataSource>SKS_EB_FileStorage</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SKS_EB_FileStorage_BankFabricResponseReason</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>BankFabricResponseReason</DataField>
												<DataSource>SKS_EB_FileStorage</DataSource>
												<MultiLine>Yes</MultiLine>
											</AxFormControl>
										</Controls>
										<Style>BorderedGroup</Style>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@SKS:SKGBankFabricLabel</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ModuleConfigurationTabpage</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SKS_EB_FileStorage_StorageOption_PP</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>StorageOption_PP</DataField>
								<DataSource>SKS_EB_FileStorage</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SKS_EB_FileStorage_StorageOption_BR</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>StorageOption_BR</DataField>
								<DataSource>SKS_EB_FileStorage</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SKS_EB_FileStorage_StorageOption_CCR</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>StorageOption_CCR</DataField>
								<DataSource>SKS_EB_FileStorage</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SKS_EB_FileStorage_StorageOption_LB</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>StorageOption_LB</DataField>
								<DataSource>SKS_EB_FileStorage</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SKS_EB_FileStorage_StorageOption_APEFTFXDD</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>StorageOption_APEFTFXDD</DataField>
								<DataSource>SKS_EB_FileStorage</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SKS_EB_FileStorage_StorageOption_IHB</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>StorageOption_IHB</DataField>
								<DataSource>SKS_EB_FileStorage</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SKS_EB_FileStorage_StorageOption_MandateAutomation</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>StorageOption_MandateAutomation</DataField>
								<DataSource>SKS_EB_FileStorage</DataSource>
								<Items />
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SKS:SKGModuleConfigurationLabel</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>