<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SKS_EFT_PaymentSpecifications</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SKS_EFT_PaymentSpecifications extends FormRun
{
}
]]></Source>
			</Method>
			<Method>
				<Name>activate</Name>
				<Source><![CDATA[
    public void activate(boolean _active)
    {
        super(_active);

        SKS_EFT_FileFormatPaymSpec_SelectByPaymentDate.selectByPaymDateCheckbox_chk();
    }

]]></Source>
			</Method>
			<Method>
				<Name>APEFT_DirectDebitControlVisibility</Name>
				<Source><![CDATA[
    private void APEFT_DirectDebitControlVisibility()
    {
        //AP EFT+ EXCLUSIVE CONTROLS
        SKS_EFT_FileFormatPaymSpec_PaymSpecName.visible(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::AP || 
                                                        element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::BTB ||
                                                        element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::CNP);
        //Direct debit EXCLUSIVE CONTROLS
        SKS_EFT_FileFormatPaymSpec_ARPaymSpecName.visible(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::AR);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enabledisablefields</Name>
				<Source><![CDATA[
    public void enabledisablefields()
    {
        if(SKS_EFT_FileFormatPaymSpecFields.FieldType == SKS_EFT_Codefieldtype::CodeLookup)
        {
            SKS_EFT_FileFormatPaymSpecFields_FixedValue.enabled(false);
            SKS_EFT_FileFormatPaymSpecFields_FixedMask.enabled(false);
            SKS_EFT_FileFormatPaymSpecFields_CodeId.enabled(true);
            ReferenceGroup.enabled(true);
        }
        else
        {
            SKS_EFT_FileFormatPaymSpecFields_FixedValue.enabled(true);
            SKS_EFT_FileFormatPaymSpecFields_FixedMask.enabled(true);
            SKS_EFT_FileFormatPaymSpecFields_CodeId.enabled(false);
            ReferenceGroup.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableTradingPartner</Name>
				<Source><![CDATA[
    public void enableTradingPartner()
    {
        SKS_EFT_FileFormatPaymSpec_EDI820DefaultPartner.enabled(SKS_EFT_FileFormatPaymSpec.EDI);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        SKS_EFT_FileFormat lSKS_EFT_FileFormat;
        super();

        if (!element.args().caller())
        {
            throw error("@SYS96590");
        }
        else
        {
            lSKS_EFT_FileFormat = element.args().record();
            boolean bankFabricLibrary = lSKS_EFT_FileFormat.FormatGroupCodeSource == SKS_EB_CodeSource::BankFabric;

            SKS_EFT_FileFormatPaymSpec_ds.object(fieldNum(SKS_EFT_FileFormatPaymSpec, CNPAutoCreateBankAccount)).visible(false);
            SKS_EFT_FileFormatPaymSpec_ds.object(fieldNum(SKS_EFT_FileFormatPaymSpec, APAutoCreateBankAccount)).visible(false);

            if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::BTB)
            {
                this.design().caption("@SKS:SKGBTBTransferSpecification");
                SKS_EFT_FileFormatPaymSpec_PaymSpecName.label("@SKS:SKGBTBTransferDescription");
                SKS_EFT_FileFormatPaymSpec_PaymSpec.label("@SKS:SKGBTBTransferSpecification");
                SKS_EFT_FileFormatPaymSpec_PaymSpecFileDescr.label("@SKS:SKGBTBTransferSpecDescription");

                SKS_EFT_FileFormatPaymSpec_PreNote.visible(false);
                SKS_EFT_FileFormatPaymSpec_UseCheckNumber.visible(false);
                SKS_EFT_FileFormatPaymSpec_RecordSummary.visible(false);
                SKS_EFT_FileFormatPaymSpec_EmailNote.visible(false);
                SKS_EFT_FileFormatPaymSpec_EmailOff.visible(false);
                SKS_EFT_FileFormatPaymSpec_EDI820DefaultPartner.visible(false);
                SKS_EFT_FileFormatPaymSpec_AddendaSpec.visible(false);
                SKS_EFT_FileFormatPaymSpec_AddendaCodeID.visible(false);
                SKS_EFT_FileFormatPaymSpec_SKS_BTB_PaymSpecFundTransferType.visible(true);
                SKS_EFT_FileFormatPaymSpec_EDI820DefaultPartner.visible(false);
                SKS_EFT_FileFormatPaymSpec_EDI.visible(false);
                CreatefromAddenda.visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, DDAutoCreateBankAccount)).visible(false);

                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, EffectiveDateOffset)).visible(false);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, AREffectiveDateOffset)).visible(false);
                EffectiveDateOptions.visible(false);
            }
            else if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::CNP)
            {
                SKS_EFT_FileFormatPaymSpec_PaymSpecName.label("@SKS:SKGCustReimbursement");
                SKS_EFT_FileFormatPaymSpec_PreNote.visible(false);
                SKS_EFT_FileFormatPaymSpec_EmailNote.visible(false);
                SKS_EFT_FileFormatPaymSpec_EmailOff.visible(false);
                SKS_EFT_FileFormatPaymSpec_EDI820DefaultPartner.visible(false);
                SKS_EFT_FileFormatPaymSpec_AddendaSpec.visible(false);
                SKS_EFT_FileFormatPaymSpec_AddendaCodeID.visible(false);
                SKS_EFT_FileFormatPaymSpec_EDI.visible(false);
                CreatefromAddenda.visible(false);

                RemitOptions.visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, InvoiceDetail)).visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, RemitAvailability)).visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, RemitType)).visible(true);

                NameAddressOptions.visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, CRNameType)).visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, CRNameType)).allowedit(bankFabricLibrary);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, CRAddressType)).visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, CRAddressType)).allowedit(bankFabricLibrary);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, DDAutoCreateBankAccount)).visible(false);
                SKS_EFT_FileFormatPaymSpec_ds.object(fieldNum(SKS_EFT_FileFormatPaymSpec, CNPAutoCreateBankAccount)).visible(true);

                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, EffectiveDateOffset)).visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, AREffectiveDateOffset)).visible(false);
                EffectiveDateOptions.visible(true);

                if(lSKS_EFT_FileFormat.EffectiveDateMethod != SKS_EFT_EffectiveDateMethod::PaymSpecOffset)
                {
                    SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, EffectiveDateOffset)).enabled(false);
                    SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, SelectByPaymentDate)).enabled(true);
                }
                else
                {
                    SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, EffectiveDateOffset)).visible(true);
                    SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, SelectByPaymentDate)).enabled(false);
                    SKS_EFT_FileFormatPaymSpec.SelectByPaymentDate = NoYes::No;
                }
            }
            else if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::AP && 
                element.args().caller().getAPIFormatMenuItemName() != menuItemDisplayStr(SKS_EFT_APIOutboundFormat))
            {
                RemitOptions.visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, InvoiceDetail)).visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, RemitAvailability)).visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, RemitType)).visible(true);

                NameAddressOptions.visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, APNameType)).visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, APNameType)).allowedit(bankFabricLibrary);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, APAddressType)).visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, APAddressType)).allowedit(bankFabricLibrary);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, DDAutoCreateBankAccount)).visible(false);
                SKS_EFT_FileFormatPaymSpec_ds.object(fieldNum(SKS_EFT_FileFormatPaymSpec, APAutoCreateBankAccount)).visible(true);

                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, EffectiveDateOffset)).visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, AREffectiveDateOffset)).visible(false);
                EffectiveDateOptions.visible(true);
                if(lSKS_EFT_FileFormat.EffectiveDateMethod != SKS_EFT_EffectiveDateMethod::PaymSpecOffset)
                {
                    SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, EffectiveDateOffset)).enabled(false);
                    SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, SelectByPaymentDate)).enabled(true);
                }
                else
                {
                    SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, EffectiveDateOffset)).visible(true);
                    SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, SelectByPaymentDate)).enabled(false);
                    SKS_EFT_FileFormatPaymSpec.SelectByPaymentDate = NoYes::No;
                }
            }
            else if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::AR)
            {
                RemitOptions.visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, InvoiceDetail)).visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, RemitAvailability)).visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, RemitType)).visible(true);

                NameAddressOptions.visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, DDNameType)).visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, DDNameType)).allowedit(bankFabricLibrary);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, DDAddressType)).visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, DDAddressType)).allowedit(bankFabricLibrary);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, DDAutoCreateBankAccount)).visible(true);

                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, EffectiveDateOffset)).visible(false);
                EffectiveDateOptions.visible(true);

                if(lSKS_EFT_FileFormat.EffectiveDateOffsetPaymSpec)
                {
                    SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, SelectByPaymentDate)).enabled(false);
                    SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, AREffectiveDateOffset)).enabled(true);

                }
                else
                {
                    SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, SelectByPaymentDate)).visible(true);
                    SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, AREffectiveDateOffset)).enabled(false);

                }

            }
            else if (element.args().caller().getAPIFormatMenuItemName() == menuItemDisplayStr(SKS_EFT_APIOutboundFormat))
            {
                CreatefromAddenda.visible(false);
                SKS_EFT_FileFormatNotes.text("@SKS:SKGAPIFormatNote");

                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, PreNote)).visible(false);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, CpnyIDNameReq)).visible(false);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, TxnNacha)).visible(false);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, UseCheckNumber)).visible(false);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, FilterSeparateFile)).visible(false);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, EDI)).visible(false);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, EDI820DefaultPartner)).visible(false);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, AddendaSpec)).visible(false);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, AddendaCodeID)).visible(false);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, RemitAvailability)).visible(false);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, RemitType)).visible(false);

                RemitOptions.visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, InvoiceDetail)).visible(true);
                NameAddressOptions.visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, APNameType)).visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, APNameType)).allowedit(bankFabricLibrary);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, APAddressType)).visible(true);
                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, APAddressType)).allowedit(bankFabricLibrary);

                SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, DDAutoCreateBankAccount)).visible(false);
                SKS_EFT_FileFormatPaymSpec_ds.object(fieldNum(SKS_EFT_FileFormatPaymSpec, APAutoCreateBankAccount)).visible(true);
            }

            if(lSKS_EFT_FileFormat.UseAddenda)
            {
                CreatefromAddenda.enabled(true);
            }
        }
        this.APEFT_DirectDebitControlVisibility();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPPNumeric</Name>
				<Source><![CDATA[
    Public boolean isPPNumeric(str strValue)
    {
        Boolean   xppBool;
        System.Boolean netBool;
        Str matchPattern = '^[0-9]*$';
        System.Text.RegularExpressions.Match myMatch;
        new InteropPermission(InteropKind::ClrInterop).assert();
        myMatch = System.Text.RegularExpressions.Regex::Match(strValue,matchPattern);
        netBool = myMatch.get_Success();
        xppBool = netBool;
        CodeAccessPermission::revertAssert();
        Return xppBool;
    }

]]></Source>
			</Method>
			<Method>
				<Name>MethodOfPaymentInUse</Name>
				<Source><![CDATA[
    boolean MethodOfPaymentInUse()
    {
        SKS_EFT_VendorPaym          lSKS_EFT_VendorPaym;
        SKS_EFT_CustomerPaym        lSKS_EFT_CustomerPaym;
        SKS_EFT_BanktoBankPaym      lSKS_EFT_BanktoBankPaym;
        SKS_EFT_CustReimbursementPaym lSKS_EFT_CustReimbursementPaym;
        VendPaymModeTable           lVendPaymModeTable;
        CustPaymModeTable           lCustPaymModeTable;
        SKS_BTB_PaymModeTable       lSKS_BTB_PaymModeTable;
        boolean                     inUse = false;
        ;

        //Check AP
        //if(SKS_EFT_FileFormatPaymSpec.UseWithVendors == NoYes::Yes)
        if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::AP)
        {
            while select SKS_EFT_FormatId, PaymMode from lVendPaymModeTable where lVendPaymModeTable.SKS_EFT_FormatId == SKS_EFT_FileFormatPaymSpec.FormatId
            {
                select firstonly PaymMode, PaymSpec from lSKS_EFT_VendorPaym where lSKS_EFT_VendorPaym.PaymMode == lVendPaymModeTable.PaymMode &&
                lSKS_EFT_VendorPaym.PaymSpec == SKS_EFT_FileFormatPaymSpec.PaymSpec;

                if(lSKS_EFT_VendorPaym)
                {
                    error("@SKS2604");
                    return true;
                }
            }
        }

        //Check AR
        //if(SKS_EFT_FileFormatPaymSpec.UseWithCustomers == NoYes::Yes)
        if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::AR)
        {
            while select SKS_EFT_FormatId, PaymMode from lCustPaymModeTable where lCustPaymModeTable.SKS_EFT_FormatId == SKS_EFT_FileFormatPaymSpec.FormatId
            {
                select firstonly PaymMode, PaymSpec from lSKS_EFT_CustomerPaym where lSKS_EFT_CustomerPaym.PaymMode == lCustPaymModeTable.PaymMode &&
                lSKS_EFT_CustomerPaym.PaymSpec == SKS_EFT_FileFormatPaymSpec.PaymSpec;

                if(lSKS_EFT_CustomerPaym)
                {
                    error("@SKS2605");
                    return true;
                }
            }
        }

        //Check CNP
        if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::CNP)
        {
            while select SKS_CNP_FormatId, PaymMode from lCustPaymModeTable where lCustPaymModeTable.SKS_CNP_FormatId == SKS_EFT_FileFormatPaymSpec.FormatId
            {
                select firstonly PaymMode, PaymSpec from lSKS_EFT_CustReimbursementPaym where lSKS_EFT_CustReimbursementPaym.PaymMode == lCustPaymModeTable.PaymMode &&
                lSKS_EFT_CustReimbursementPaym.PaymSpec == SKS_EFT_FileFormatPaymSpec.PaymSpec;

                if(lSKS_EFT_CustReimbursementPaym)
                {
                    error("@SKS:SKGCNPFileformatUse");
                    return true;
                }
            }
        }

        //Check BTB
        //if(SKS_EFT_FileFormatPaymSpec.UseWithBanktoBank == NoYes::Yes)
        if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::BTB)
        {
            while select FormatId, PaymMode from lSKS_BTB_PaymModeTable where lSKS_BTB_PaymModeTable.FormatId == SKS_EFT_FileFormatPaymSpec.FormatId
            {
                select firstonly PaymMode, PaymSpec from lSKS_EFT_BanktoBankPaym where lSKS_EFT_BanktoBankPaym.PaymMode == lSKS_BTB_PaymModeTable.PaymMode &&
                lSKS_EFT_BanktoBankPaym.PaymSpec == SKS_EFT_FileFormatPaymSpec.PaymSpec;

                if(lSKS_EFT_BanktoBankPaym)
                {
                    error("@SKS:SKGBTBPaymSpecInUse");
                    return true;
                }
            }
        }

        return inUse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pushbackPaymSpec</Name>
				<Source><![CDATA[
    void pushbackPaymSpec(boolean _deleteOnly = false)
    {
        VendPaymModeTable   vendPaymModeTable;
        VendPaymModeSpec    vendPaymModeSpec;

        CustPaymModeTable   custPaymModeTable;
        CustPaymModeSpec    custPaymModeSpec;

        SKS_BTB_PaymModeTable   sKS_BTB_PaymModeTable;
        SKS_BTB_BankPaymModeSpec    sKS_BTB_BankPaymModeSpec;
        ;

        //if(SKS_EFT_FileFormatPaymSpec.UseWithVendors == NoYes::Yes)
        if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::AP)
        {
            ttsbegin;

            while select * from vendPaymModeTable where vendPaymModeTable.SKS_EFT_FormatId == SKS_EFT_FileFormatPaymSpec.FormatId
            {
                if (vendPaymModeSpec::existForPaymMode(SKS_EFT_FileFormatPaymSpec.PaymSpec, vendPaymModeTable.PaymMode) &&
                   (SKS_EFT_FileFormatPaymSpec.Selected == false || _deleteOnly))
                {
                    select firstonly forupdate * from vendPaymModeSpec where vendPaymModeSpec.Specification == SKS_EFT_FileFormatPaymSpec.PaymSpec
                        && vendPaymModeSpec.PaymMode == vendPaymModeTable.PaymMode;
                    vendPaymModeSpec.delete();
                }
                else if(!vendPaymModeSpec::existForPaymMode(SKS_EFT_FileFormatPaymSpec.PaymSpec, vendPaymModeTable.PaymMode) &&
                        SKS_EFT_FileFormatPaymSpec.Selected == true &&
                        !_deleteOnly)
                {
                    vendPaymModeSpec.PaymMode = vendPaymModeTable.PaymMode;
                    vendPaymModeSpec.Specification = SKS_EFT_FileFormatPaymSpec.PaymSpec;
                    vendPaymModeSpec.Name = SKS_EFT_FileFormatPaymSpec.PaymSpecFileDescr;
                    vendPaymModeSpec.ClassId = classNum(SKS_EFT_VendOutPaymRecord);
                    vendPaymModeSpec.SKS_EFT_FFPaymSpecRecId = SKS_EFT_FileFormatPaymSpec.RecId;
                    vendPaymModeSpec.insert();
                }
            }

            ttscommit;
        }
        //if(SKS_EFT_FileFormatPaymSpec.UseWithCustomers == NoYes::Yes)
        if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::AR)
        {
            ttsbegin;

            while select * from custPaymModeTable where custPaymModeTable.SKS_EFT_FormatId == SKS_EFT_FileFormatPaymSpec.FormatId
            {
                if (custPaymModeSpec::existForPaymMode(SKS_EFT_FileFormatPaymSpec.PaymSpec, custPaymModeTable.PaymMode) && SKS_EFT_FileFormatPaymSpec.Selected == false)
                {
                    select firstonly forupdate * from custPaymModeSpec where custPaymModeSpec.Specification == SKS_EFT_FileFormatPaymSpec.PaymSpec
                        && custPaymModeSpec.PaymMode == custPaymModeTable.PaymMode;
                    custPaymModeSpec.delete();
                }
                else if(!custPaymModeSpec::existForPaymMode(SKS_EFT_FileFormatPaymSpec.PaymSpec, custPaymModeTable.PaymMode) && SKS_EFT_FileFormatPaymSpec.Selected == true)
                {
                    custPaymModeSpec.PaymMode = custPaymModeTable.PaymMode;
                    custPaymModeSpec.Specification = SKS_EFT_FileFormatPaymSpec.PaymSpec;
                    custPaymModeSpec.Name = SKS_EFT_FileFormatPaymSpec.PaymSpecFileDescr;
                    custPaymModeSpec.ClassId = classNum(SKS_EFT_CustOutPaymRecord);
                    custPaymModeSpec.SKS_EFT_FFPaymSpecRecId = SKS_EFT_FileFormatPaymSpec.RecId;
                    custPaymModeSpec.insert();
                }
            }
            ttscommit;
        }

        if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::BTB)
        {
            ttsbegin;

            while select * from sKS_BTB_PaymModeTable where sKS_BTB_PaymModeTable.FormatId == SKS_EFT_FileFormatPaymSpec.FormatId
            {
                if (sKS_BTB_BankPaymModeSpec::existForPaymMode(SKS_EFT_FileFormatPaymSpec.PaymSpec, sKS_BTB_PaymModeTable.PaymMode) &&
                   (SKS_EFT_FileFormatPaymSpec.Selected == false || _deleteOnly))
                {
                    select firstonly forupdate * from sKS_BTB_BankPaymModeSpec where sKS_BTB_BankPaymModeSpec.Specification == SKS_EFT_FileFormatPaymSpec.PaymSpec
                        && sKS_BTB_BankPaymModeSpec.PaymMode == sKS_BTB_PaymModeTable.PaymMode;

                    sKS_BTB_BankPaymModeSpec.delete();
                }
                else if(!sKS_BTB_BankPaymModeSpec::existForPaymMode(SKS_EFT_FileFormatPaymSpec.PaymSpec, sKS_BTB_PaymModeTable.PaymMode) &&
                        SKS_EFT_FileFormatPaymSpec.Selected == true &&
                        !_deleteOnly)
                {
                    sKS_BTB_BankPaymModeSpec.PaymMode = sKS_BTB_PaymModeTable.PaymMode;
                    sKS_BTB_BankPaymModeSpec.Specification = SKS_EFT_FileFormatPaymSpec.PaymSpec;
                    sKS_BTB_BankPaymModeSpec.Name = SKS_EFT_FileFormatPaymSpec.PaymSpecFileDescr;
                    sKS_BTB_BankPaymModeSpec.ClassId = classNum(SKS_EFT_VendOutPaymRecord);
                    sKS_BTB_BankPaymModeSpec.SKS_EFT_FFPaymSpecRecId = SKS_EFT_FileFormatPaymSpec.RecId;
                    sKS_BTB_BankPaymModeSpec.insert();
                }
            }
            ttscommit;
        }

        if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::CNP)
        {
            ttsbegin;

            while select * from custPaymModeTable where custPaymModeTable.SKS_CNP_FormatId == SKS_EFT_FileFormatPaymSpec.FormatId
            {
                if (custPaymModeSpec::existForPaymMode(SKS_EFT_FileFormatPaymSpec.PaymSpec, custPaymModeTable.PaymMode) && SKS_EFT_FileFormatPaymSpec.Selected == false)
                {
                    select firstonly forupdate * from custPaymModeSpec where custPaymModeSpec.Specification == SKS_EFT_FileFormatPaymSpec.PaymSpec
                        && custPaymModeSpec.PaymMode == custPaymModeTable.PaymMode;
                    custPaymModeSpec.delete();
                }
                else if(!custPaymModeSpec::existForPaymMode(SKS_EFT_FileFormatPaymSpec.PaymSpec, custPaymModeTable.PaymMode) && SKS_EFT_FileFormatPaymSpec.Selected == true)
                {
                    custPaymModeSpec.PaymMode = custPaymModeTable.PaymMode;
                    custPaymModeSpec.Specification = SKS_EFT_FileFormatPaymSpec.PaymSpec;
                    custPaymModeSpec.Name = SKS_EFT_FileFormatPaymSpec.PaymSpecFileDescr;
                    custPaymModeSpec.ClassId = classNum(SKS_EFT_CustOutPaymRecord);
                    custPaymModeSpec.SKS_EFT_FFPaymSpecRecId = SKS_EFT_FileFormatPaymSpec.RecId;
                    custPaymModeSpec.insert();
                }
            }
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>RefreshParentForm</Name>
				<Source><![CDATA[
    void RefreshParentForm()
    {
        SKS_EFT_FileFormatPaymSpec_ds.research(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymentSpecificationInUse</Name>
				<Source><![CDATA[
    //Bug 10232
    boolean paymentSpecificationInUse()
    {
        boolean paySpecInUse = false;

        SKS_EFTAP_SwitchboardExternalBank lSKS_EFTAP_SwitchboardExternalBank;

        select firstonly lSKS_EFTAP_SwitchboardExternalBank
            where lSKS_EFTAP_SwitchboardExternalBank.PaymSpec == SKS_EFT_FileFormatPaymSpec.PaymSpec;

        if(lSKS_EFTAP_SwitchboardExternalBank)
        {
            error("@SKS:SKSPaymentSpecificationInUseSB");
            paySpecInUse =  true;
        }

        return paySpecInUse;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>SKS_EFT_FileFormatPaymSpec</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
            if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::AP)
            {
                this.query().dataSourceTable(tableNum(SKS_EFT_FileFormatPaymSpec)).addRange(fieldNum(SKS_EFT_FileFormatPaymSpec,UseWithVendors)).value(queryValue(NoYes::Yes));
            }
            else if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::BTB)
            {
                this.query().dataSourceTable(tableNum(SKS_EFT_FileFormatPaymSpec)).addRange(fieldNum(SKS_EFT_FileFormatPaymSpec,UseWithBanktoBank)).value(queryValue(NoYes::Yes));
            }
            else if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::CNP)
            {
                this.query().dataSourceTable(tableNum(SKS_EFT_FileFormatPaymSpec)).addRange(fieldNum(SKS_EFT_FileFormatPaymSpec,UseWithCustReimbursements)).value(queryValue(NoYes::Yes));
            }
            else
            {
                this.query().dataSourceTable(tableNum(SKS_EFT_FileFormatPaymSpec)).addRange(fieldNum(SKS_EFT_FileFormatPaymSpec,UseWithCustomers)).value(queryValue(NoYes::Yes));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            if(!element.MethodOfPaymentInUse())
            {
                element.pushbackPaymSpec(true);
                super();
                SKS_EFT_FileFormatPaymSpec_ds.allowDelete(false);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
            SKS_EFT_FileFormat     lSKS_EFT_FileFormat;

            SKS_EFT_FileFormatPaymSpec_SelectByPaymentDate.selectByPaymDateCheckbox_chk();
            element.enableTradingPartner();
            if(SKS_EFT_FileFormatPaymSpec_AddendaSpec.value())
            {
                SKS_EFT_FileFormatPaymSpec_ds.allowDelete(true);
            }
            else
            {
                SKS_EFT_FileFormatPaymSpec_ds.allowDelete(false);
            }

            lSKS_EFT_FileFormat = element.args().record();
            boolean bankFabricLibrary = lSKS_EFT_FileFormat.FormatGroupCodeSource == SKS_EB_CodeSource::BankFabric;

            if((element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::AP &&
                element.args().caller().getAPIFormatMenuItemName() != menuItemDisplayStr(SKS_EFT_APIOutboundFormat) ||
                element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::AR   ||
                element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::CNP))
            {
                if(SKS_EFT_FileFormatPaymSpec.RemitAvailability == SKS_EFT_RemitAvailability::SelectBelow && bankFabricLibrary)
                {
                    SKS_EFT_FileFormatPaymSpec_DS.object(fieldNum(SKS_EFT_FileFormatPaymSpec, RemitType)).allowedit(true);
                }
            }

            ret = super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>Selected</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
                ret = super();

                if(ret && SKS_EFT_FileFormatPaymSpec.Selected == false && element.MethodOfPaymentInUse())
                {
                    ret = false;
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                element.pushbackPaymSpec();
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>SKS_EFT_FileFormatPaymSpecFields</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;

            ret = super();

            if(SKS_EFT_FileFormatPaymSpecFields.fieldtype == SKS_EFT_CodeFieldType::CodeLookup
                && SKS_EFT_FileFormatPaymSpecFields.CodeId == '')
            {
                error("@SKS2704");
                ret = false;
            }
            
            if(SKS_EFT_FileFormatPaymSpecFields.orig().UserUpdated == SKS_EFT_FileFormatPaymSpecFields.UserUpdated && SKS_EFT_FileFormatPaymSpecFields.UserUpdated == NoYes::No)
            {
                SKS_EFT_FileFormatPaymSpecFields.UserUpdated = NoYes::Yes;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.enabledisablefields();
            SKS_EFT_FileFormatPaymSpecFields_FixedValue.limitText(strLen(strRTrim(SKS_EFT_FileFormatPaymSpecFields.fixedmask)), AutoMode::Fixed); //SKS#DevOps:15574

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CodeId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if(SKS_EFT_FileFormatPaymSpecFields.CodeId == '')
                {
                    SKS_EFT_FileFormatPaymSpecFields.DefaultCodeLookupValuesRecId = 0;
                }
                else
                {
                    if(SKS_EFT_FileFormatPaymSpecFields.FieldType != SKS_EFT_codefieldtype::CodeLookup)
                    {
                        error(strFmt("@SKS2673", SKS_EFT_codefieldtype::CodeLookup));
                        SKS_EFT_FileFormatPaymSpecFields.CodeId = '';
                    }
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DefaultCodeLookupValuesRecId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                SKS_EFT_VendorPaymLookup    SKS_EFT_VendorPaymLookup;
                SKS_EFT_BankPaymLookup      SKS_EFT_BankPaymLookup;
                DialogButton diagButton;
                super();

                ttsBegin;

                diagButton = box::yesNo("@SKS:SKSEFTUpdateVendorAccntValue", DialogButton::Ok, "@SKS311");

                if(diagButton == DialogButton::Yes)
                {
                    while select forUpdate SKS_EFT_VendorPaymLookup
                        where SKS_EFT_VendorPaymLookup.FileFormatPaymSpecFieldsRecId == SKS_EFT_FileFormatPaymSpecFields.RecId
                    {
                        if(SKS_EFT_VendorPaymLookup)
                        {
                            SKS_EFT_VendorPaymLookup.CodeLookupValuesRecId = SKS_EFT_FileFormatPaymSpecFields.DefaultCodeLookupValuesRecId;
                            SKS_EFT_VendorPaymLookup.update();
                        }
                    }

                    while select forUpdate SKS_EFT_BankPaymLookup
                        where SKS_EFT_BankPaymLookup.FileFormatPaymSpecFieldsRecId == SKS_EFT_FileFormatPaymSpecFields.RecId
                    {
                        if(SKS_EFT_BankPaymLookup)
                        {
                            SKS_EFT_BankPaymLookup.CodeLookupValuesRecId = SKS_EFT_FileFormatPaymSpecFields.DefaultCodeLookupValuesRecId;
                            SKS_EFT_BankPaymLookup.update();
                        }
                    }
                    ttsCommit;
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>FieldType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                SKS_EFT_VendorPaymLookup    SKS_EFT_VendorPaymLookup;
                SKS_EFT_BankPaymLookup      SKS_EFT_BankPaymLookup;
                super();

                ttsBegin;
                while select forUpdate SKS_EFT_VendorPaymLookup
                    where  SKS_EFT_VendorPaymLookup.FileFormatPaymSpecFieldsRecId == SKS_EFT_FileFormatPaymSpecFields.RecId
                {

                    if(SKS_EFT_FileFormatPaymSpecFields.FieldType == SKS_EFT_CodeFieldType::CodeLookup)
                    {
                        SKS_EFT_FileFormatPaymSpecFields.FixedValue = '';
                        SKS_EFT_VendorPaymLookup.FixedValue = '';
                        SKS_EFT_FileFormatPaymSpecFields.FixedMask = '';
                    }
                    else if(SKS_EFT_FileFormatPaymSpecFields.FieldType == SKS_EFT_CodeFieldType::FixedValue)
                    {
                        SKS_EFT_FileFormatPaymSpecFields.CodeId = '';
                        SKS_EFT_VendorPaymLookup.CodeLookupValuesRecId = 0;
                        SKS_EFT_FileFormatPaymSpecFields.DefaultCodeLookupValuesRecId = 0;
                    }

                    SKS_EFT_VendorPaymLookup.update();
                }

                while select forUpdate SKS_EFT_BankPaymLookup
                    where  SKS_EFT_BankPaymLookup.FileFormatPaymSpecFieldsRecId == SKS_EFT_FileFormatPaymSpecFields.RecId
                {

                    if(SKS_EFT_FileFormatPaymSpecFields.FieldType == SKS_EFT_CodeFieldType::CodeLookup)
                    {
                        SKS_EFT_FileFormatPaymSpecFields.FixedValue = '';
                        SKS_EFT_BankPaymLookup.FixedValue = '';
                        SKS_EFT_FileFormatPaymSpecFields.FixedMask = '';
                    }
                    else if(SKS_EFT_FileFormatPaymSpecFields.FieldType == SKS_EFT_CodeFieldType::FixedValue)
                    {
                        SKS_EFT_FileFormatPaymSpecFields.CodeId = '';
                        SKS_EFT_BankPaymLookup.CodeLookupValuesRecId = 0;
                        SKS_EFT_FileFormatPaymSpecFields.DefaultCodeLookupValuesRecId = 0;
                    }

                    SKS_EFT_BankPaymLookup.update();
                }
                ttsCommit;

                element.enabledisablefields();

            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>FixedValue</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                SKS_EFT_VendorPaymLookup    SKS_EFT_VendorPaymLookup;
                SKS_EFT_BankPaymLookup      SKS_EFT_BankPaymLookup;
                DialogButton diagButton;
                super();

                diagButton = box::yesNo("@SKS:SKSEFTUpdateVendorAccntValue", DialogButton::Ok, "@SKS311");

                if(diagButton == DialogButton::Yes)
                {
                    ttsBegin;
                    while select forUpdate  SKS_EFT_VendorPaymLookup
                        where  SKS_EFT_VendorPaymLookup.FileFormatPaymSpecFieldsRecId == SKS_EFT_FileFormatPaymSpecFields.RecId
                    {
                        if(SKS_EFT_FileFormatPaymSpecFields.fixedvalue != '')
                        {
                            SKS_EFT_FileFormatPaymSpecFields_FixedValue.limitText(strLen(strRTrim(SKS_EFT_FileFormatPaymSpecFields.fixedmask)), AutoMode::Fixed);
                        }

                        if(SKS_EFT_VendorPaymLookup)
                        {
                            SKS_EFT_VendorPaymLookup.fixedvalue = SKS_EFT_FileFormatPaymSpecFields.fixedvalue;
                            SKS_EFT_VendorPaymLookup.update();
                        }
                    }

                    while select forUpdate  SKS_EFT_BankPaymLookup
                        where  SKS_EFT_BankPaymLookup.FileFormatPaymSpecFieldsRecId == SKS_EFT_FileFormatPaymSpecFields.RecId
                    {
                        if(SKS_EFT_FileFormatPaymSpecFields.fixedvalue != '')
                        {
                            SKS_EFT_FileFormatPaymSpecFields_FixedValue.limitText(strLen(strRTrim(SKS_EFT_FileFormatPaymSpecFields.fixedmask)), AutoMode::Fixed);
                        }

                        if(SKS_EFT_BankPaymLookup)
                        {
                            SKS_EFT_BankPaymLookup.fixedvalue = SKS_EFT_FileFormatPaymSpecFields.fixedvalue;
                            SKS_EFT_BankPaymLookup.update();
                        }
                    }
                    ttsCommit;
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                if(SKS_EFT_FileFormatPaymSpecFields.FixedMask != '')
                {
                    if(subStr(strupr(sks_eft_fileformatpaymspecfields.fixedmask),0,1) == 'U')
                    {
                        sks_eft_fileformatpaymspecfields.fixedvalue = strupr(sks_eft_fileformatpaymspecfields.fixedvalue);
                    }
                    else if (subStr(sks_eft_fileformatpaymspecfields.fixedmask,0,1) == '9')
                    {
                        if (!element.isPPNumeric(sks_eft_fileformatpaymspecfields.fixedvalue))
                        {
                            Box::warning("@SKS204");
                            ret = false;
                        }
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>SKS_EFT_BankFormatValidation</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            SKS_EFT_BRValidationAltFieldMapping     fieldMapping; //SKS_FDD_10590
            boolean ret;

            ret = super();

            //SKS - Begin
            //SKS_BS_DD_5_BankFormatValidations
            if (SKS_EFT_BankFormatValidation.ISOCountrySpec && SKS_EFT_BankFormatValidation.CountryContext == SKS_EFT_CountryContext::None)
            {
                throw error(strFmt('Country context for iso country specific: %1 should not be none',SKS_EFT_BankFormatValidation.ISOCountrySpec));
            }
            //SKS_BS_DD_5_BankFormatValidations
            //SKS - End

            //SKS_FDD_10590 -->
            if(SKS_EFT_BankFormatValidation.SourceContext && SKS_EFT_BankFormatValidation.SourceField)
            {
                // SKS_Bug_11831 -->
                select firstonly fieldMapping where fieldMapping.SourceContext == SKS_EFT_BankFormatValidation.SourceContext;

                if(!fieldMapping.RecId)
                {
                    throw error("@SKS:SKGFieldMapError");
                }
                // SKS_Bug_11831 <--
                else
                {
                    select firstonly fieldMapping where fieldMapping.SourceContext == SKS_EFT_BankFormatValidation.SourceContext &&
                        fieldMapping.SourceField == SKS_EFT_BankFormatValidation.SourceField ;

                    if(!fieldMapping.RecId)
                    {
                        throw error(strFmt("@SKS:SKGFieldValidationBuilt", SKS_EFT_BankFormatValidation.SourceField));
                    }
                }
            }
            //SKS_FDD_10590 <--
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::BTB)
            {
                SKS_EFT_BankFormatValidation_SKS_BTB_PaymSpecFundTransferType.visible(true);
            }
            //SKS - Begin
            //SKS_BS_DD_5_BankFormatValidations
            //this.query().dataSourceTable(tableNum(SKS_EFT_BankFormatValidation)).addSortField(fieldNum(SKS_EFT_BankFormatValidation, Id),SortOrder::Ascending);
            //SKS - End
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            //SKS - Begin
            //SKS_BS_DD_5_BankFormatValidations
            SKS_EFT_BankFormatValidation    bankFormatValidationLoc;
            int nextSequenceNumber;

            super(_append);

            select maxOf(Id) from bankFormatValidationLoc
                where bankFormatValidationLoc.FormatId == SKS_EFT_FileFormatPaymSpec.FormatId &&
                      bankFormatValidationLoc.PaymSpec == SKS_EFT_FileFormatPaymSpec.PaymSpec &&
                      bankFormatValidationLoc.Module == element.args().caller().getSKS_EFT_Module();

            nextSequenceNumber = bankFormatValidationLoc.Id + 1;
            SKS_EFT_BankFormatValidation.Id = nextSequenceNumber;
            SKS_EFT_BankFormatValidation.UserUpdated = NoYes::Yes;
            SKS_EFT_BankFormatValidation.Module = element.args().caller().getSKS_EFT_Module();

            if(SKS_EFT_FileFormatPaymSpec.SKS_BTB_PaymSpecFundTransferType == SKS_BTB_PaymSpecFundTransferType::Transfer_in)
            {
                SKS_EFT_BankFormatValidation.BTB_TransferType = SKS_BTB_TransferType::Transfer_in;
            }
            //SKS - End
            //SKS_BS_DD_5_BankFormatValidations
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean ret;

            ret = super();

            if(ret && SKS_EFT_BankFormatValidation.UserUpdated == false)
            {
                info("@SKS6134");
                ret = false;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();

            //SKS - Begin
            //SKS_BS_DD_5_BankFormatValidations &  SKS_BS_VP_4_BankFormatValidations
            //if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::AR)
            //{
            //    SKS_EFT_BankFormatValidation.Module = SKS_EFT_Module::AR;
            //}
            //else if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::AP)
            //{
            //    SKS_EFT_BankFormatValidation.Module = SKS_EFT_Module::AP;
            //}
            //else if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::BTB)
            //{
            //    SKS_EFT_BankFormatValidation.Module = SKS_EFT_Module::BTB;
            //}
            //SKS_BS_DD_5_BankFormatValidations &  SKS_BS_VP_4_BankFormatValidations
            //SKS - End

            
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource    queryBuildDataSource;
            if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::AP)
            {
                //adding query range for direct debit
                this.query().dataSourceName(SKS_EFT_BankFormatValidation_ds.name()).addRange(fieldnum(SKS_EFT_BankFormatValidation, Module)).value(queryValue(SKS_EFT_Module::AP));
            }
            else if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::AR)
            {
                //adding query range for direct debit
                this.query().dataSourceName(SKS_EFT_BankFormatValidation_ds.name()).addRange(fieldnum(SKS_EFT_BankFormatValidation, Module)).value(queryValue(SKS_EFT_Module::AR));
            }
            else if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::BTB)
            {
                //adding query range for direct debit
                this.query().dataSourceName(SKS_EFT_BankFormatValidation_ds.name()).addRange(fieldnum(SKS_EFT_BankFormatValidation, Module)).value(queryValue(SKS_EFT_Module::BTB));
            }
            else if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::CNP)
            {
                //adding query range for direct debit
                this.query().dataSourceName(SKS_EFT_BankFormatValidation_ds.name()).addRange(fieldnum(SKS_EFT_BankFormatValidation, Module)).value(queryValue(SKS_EFT_Module::CNP));
            }
        
            queryBuildDataSource = this.query().dataSourceTable(tablenum(SKS_EFT_BankFormatValidation));
            //this.query().dataSourceTable(tableNum(SKS_EFT_BankFormatValidation)).addSortField(fieldNum(SKS_EFT_BankFormatValidation, Id),SortOrder::Ascending);
            queryBuildDataSource.addSortField(fieldNum(SKS_EFT_BankFormatValidation, Id), SortOrder::Ascending);
        
            super();
            if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::BTB)
            {
                if(SKS_EFT_FileFormatPaymSpec.SKS_BTB_PaymSpecFundTransferType == SKS_BTB_PaymSpecFundTransferType::Both)
                {
                    SKS_EFT_BankFormatValidation_SKS_BTB_PaymSpecFundTransferType.enabled(true);
                }
                else
                {
                    SKS_EFT_BankFormatValidation_SKS_BTB_PaymSpecFundTransferType.enabled(false);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>SourceField</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                //Bug- TFS:7519 -Begin
                boolean         ret;
                DictTable       dictTable;
                DictField       dictField;
                str             tableNameLoc;
                int             delimiterPosition;
                int             i;
                container       con;
                str             tableName;

                ret = super();

                tableName = SKS_EFT_BankFormatValidation_SourceContext.valueStr();
                delimiterPosition = strFind(tableName, '-', 0, strLen(tableName));

                if (delimiterPosition)
                {
                    tableNameLoc = strLTrim(subStr(tableName, delimiterPosition + 1,strLen(tableName)));
                }
                else
                {
                    tableNameLoc = tableName;
                }

                dictTable = new DictTable(tableName2id(tableNameLoc));

                if (dictTable)
                {
                    for (i=1; i<=dictTable.fieldCnt(); i++)
                    {
                        dictField = new DictField(dictTable.id(), dictTable.fieldCnt2Id(i));
                        con = conIns(con,i,dictField.name());
                    }

                    if (!conFind(con,SKS_EFT_BankFormatValidation_SourceField.valueStr()))
                    {
                        ret = checkFailed(strFmt("@SKS1210",SKS_EFT_BankFormatValidation_SourceField.valueStr(),fieldpname(SKS_EFT_BankFormatValidation, SourceField),tableNameLoc));
                    }
                }
                return ret;
            }
            //Bug- TFS:7519 - End

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CreatefromAddenda</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args = new Args();
            FormRun formRun;
            ContainerClass DataContainer;
            Container Sender;
            ;

            Sender += [SKS_EFT_FileFormatPaymSpec.FormatId];
            DataContainer = new ContainerClass(Sender);

            args.caller(element);
            args.name(formstr(SKS_EFT_CreateAddendaPaymentSpec));
            args.parmObject(DataContainer);
            formRun = classFactory.formRunClass(args);
            formRun.init();
            formRun.run();
            formRun.wait(false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_FileFormatPaymSpec_Selected</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        // Bug 10232
        public boolean validate()
        {
            boolean ret;

            ret = super();

            if (this.checked() == NoYes::No && element.paymentSpecificationInUse())
            {
                ret = false;
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_FileFormatPaymSpec_SelectByPaymentDate</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            this.selectByPaymDateCheckbox_chk();
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectByPaymDateCheckbox_chk</Name>
						<Source><![CDATA[
        void selectByPaymDateCheckbox_chk()
        {
            if(SKS_EFT_FileFormatPaymSpec_SelectByPaymentDate.value())
            {
                SKS_EFT_FileFormatPaymSpec_SamePaymentDate.enabled(true);
            }
            else
            {
                SKS_EFT_FileFormatPaymSpec_SamePaymentDate.enabled(false);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_FileFormatPaymSpec_EDI</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            element.enableTradingPartner();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_FileFormatPaymSpec_EDI820DefaultPartner</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                   query          = new Query();
            QueryBuildDataSource    queryBuildDataSource;
            QueryBuildRange         queryBuildRange;
            SysTableLookup          sysTableLookup;
            ;

            // Create an instance of SysTableLookup where 'this'
            // is the current form control.
            sysTableLookup = SysTableLookup::newParameters(tableNum(SKS_EFT_EDI820), this);

            // Add fields to be shown in the lookup form.
            sysTableLookup.addLookupField(fieldNum(SKS_EFT_EDI820, CompanyName));
            sysTableLookup.addLookupField(fieldNum(SKS_EFT_EDI820, Description));

            // Limit and arrange the data selection.
            queryBuildDataSource = query.addDataSource(tableNum(SKS_EFT_EDI820));

            queryBuildRange = queryBuildDataSource.addRange(
                fieldNum(SKS_EFT_EDI820, FormatId));
            queryBuildRange.value(SKS_EFT_FileFormatPaymSpec.FormatId);
            queryBuildRange.status(RangeStatus::Hidden);

            queryBuildRange = queryBuildDataSource.addRange(
                fieldNum(SKS_EFT_EDI820, PaymSpec));
            queryBuildRange.value(strFmt('%1,""',SKS_EFT_FileFormatPaymSpec.PaymSpec));
            queryBuildRange.status(RangeStatus::Hidden);

            sysTableLookup.parmQuery(query);

            // Perform the lookup.
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReferenceGroup</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            SKS_EB_CodeLookupValues  lSKS_EB_CodeLookupValues;
            SKS_EB_CodeLookup       lSKS_EB_codelookup;
            Args args;
            MenuFunction menuFunction;
            ;
        
            select firstonly codeid from lSKS_EB_CodeLookupValues where lSKS_EB_CodeLookupValues.recid == this.value();
            select firstonly lSKS_EB_codelookup where lSKS_EB_codelookup.codeid == lSKS_EB_CodeLookupValues.codeid &&
                lSKS_EB_codelookup.FormatGroup == SKS_EFT_FileFormatPaymSpecFields.FormatGroup;
        
        
            if (!lSKS_EB_codelookup)
            {
                return;
            }
        
            args = new Args();
            args.caller(element);
            args.record(lSKS_EB_codelookup);
            menuFunction = new MenuFunction(menuitemdisplaystr(SKS_EB_CodeLookupValues), MenuItemType::Display);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        public Common lookupReference()
        {
            SKS_EB_CodeLookupValues   codeLookupValues;
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource;
            QueryBuildRange         queryBuildRange, queryBuildRange1;

            // Create an instance of SysTableLookup where 'this' is the current form control
            SysReferenceTableLookup sysTableLookup = SysReferenceTableLookup::newParameters(tableNum(SKS_EB_CodeLookupValues), ReferenceGroup, true);
            ;
            query.allowCrossCompany(true);

            // Add fields to be shown in the lookup form
            sysTableLookup.addLookupField(fieldNum(SKS_EB_CodeLookupValues, DisplayValue));

            // Limit and arrange the data selection
            queryBuildDataSource = query.addDataSource(tableNum(SKS_EB_CodeLookupValues));
            queryBuildRange = queryBuildDataSource.addRange(fieldNum(SKS_EB_CodeLookupValues, CodeId));
            queryBuildRange1 = queryBuildDataSource.addRange(fieldNum(SKS_EB_CodeLookupValues, FormatGroup));
            queryBuildRange.value(queryValue(SKS_EFT_FileFormatPaymSpecFields.CodeId));
            queryBuildRange1.value(queryValue(SKS_EFT_FileFormatPaymSpecFields.FormatGroup));
            sysTableLookup.parmQuery(query);
            sysTableLookup.parmUseLookupValue(false);

            // Perform the lookup
            codeLookupValues = sysTableLookup.performFormLookup();

            return codeLookupValues;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_FileFormatPaymSpecFields_FixedMask</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            SKS_EFT_VendorPaymLookup    SKS_EFT_VendorPaymLookup;
            SKS_EFT_BankPaymLookup      SKS_EFT_BankPaymLookup;
            boolean ret;

            ret = super();

            ttsBegin;
            while select forUpdate SKS_EFT_VendorPaymLookup
                where  SKS_EFT_VendorPaymLookup.FileFormatPaymSpecFieldsRecId == SKS_EFT_FileFormatPaymSpecFields.RecId
            {
                if(SKS_EFT_FileFormatPaymSpecFields.fixedvalue != '')
                {
                    SKS_EFT_FileFormatPaymSpecFields_FixedValue.limitText(strLen(strRTrim(SKS_EFT_FileFormatPaymSpecFields.fixedmask)), AutoMode::Fixed);
                }

                if(SKS_EFT_VendorPaymLookup)
                {
                    SKS_EFT_VendorPaymLookup.fixedvalue = SKS_EFT_FileFormatPaymSpecFields.fixedvalue;
                    SKS_EFT_VendorPaymLookup.update();
                }
            }

            while select forUpdate SKS_EFT_BankPaymLookup
                where  SKS_EFT_BankPaymLookup.FileFormatPaymSpecFieldsRecId == SKS_EFT_FileFormatPaymSpecFields.RecId
            {
                if(SKS_EFT_FileFormatPaymSpecFields.fixedvalue != '')
                {
                    SKS_EFT_FileFormatPaymSpecFields_FixedValue.limitText(strLen(strRTrim(SKS_EFT_FileFormatPaymSpecFields.fixedmask)), AutoMode::Fixed);
                }

                if(SKS_EFT_BankPaymLookup)
                {
                    SKS_EFT_BankPaymLookup.fixedvalue = SKS_EFT_FileFormatPaymSpecFields.fixedvalue;
                    SKS_EFT_BankPaymLookup.update();
                }
            }
            ttsCommit;

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            if(SKS_EFT_FileFormatPaymSpecFields.FixedMask != '')
            {
                if(subStr(strupr(sks_eft_fileformatpaymspecfields.fixedmask),0,1) == 'U')
                {
                    sks_eft_fileformatpaymspecfields.fixedvalue = strupr(sks_eft_fileformatpaymspecfields.fixedvalue);
                }
                else if (subStr(sks_eft_fileformatpaymspecfields.fixedmask,0,1) == '9')
                {
                    if (!element.isPPNumeric(sks_eft_fileformatpaymspecfields.fixedvalue))
                    {
                        Box::warning("@SKS2703");
                        ret = false;
                    }
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_BankFormatValidation_SourceFieldDesc</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            //SKS - Begin
            //SKS_BS_DD_5_BankFormatValidations
            if (SKS_EFT_BankFormatValidation.UserUpdated == NoYes::No)
            {
                SKS_EFT_BankFormatValidation.UserUpdated = NoYes::Yes;
            }
            //SKS - End
            //SKS_BS_DD_5_BankFormatValidations
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_BankFormatValidation_SourceFieldLoc</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            //SKS - Begin
            //SKS_BS_DD_5_BankFormatValidations
            if (SKS_EFT_BankFormatValidation.UserUpdated == NoYes::No)
            {
                SKS_EFT_BankFormatValidation.UserUpdated = NoYes::Yes;
            }
            //SKS - End
            //SKS_BS_DD_5_BankFormatValidations
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_BankFormatValidation_TargetFieldLoc</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            //SKS - Begin
            //SKS_BS_DD_5_BankFormatValidations
            if (SKS_EFT_BankFormatValidation.UserUpdated == NoYes::No)
            {
                SKS_EFT_BankFormatValidation.UserUpdated = NoYes::Yes;
            }
            //SKS - End
            //SKS_BS_DD_5_BankFormatValidations
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_BankFormatValidation_Notes</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            //SKS - Begin
            //SKS_BS_DD_5_BankFormatValidations
            if (SKS_EFT_BankFormatValidation.UserUpdated == NoYes::No)
            {
                SKS_EFT_BankFormatValidation.UserUpdated = NoYes::Yes;
            }
            //SKS - End
            //SKS_BS_DD_5_BankFormatValidations
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_BankFormatValidation_SourceContext</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            //SKS - Begin
            //SKS_BS_DD_5_BankFormatValidations
            if (SKS_EFT_BankFormatValidation.UserUpdated == NoYes::No)
            {
                SKS_EFT_BankFormatValidation.UserUpdated = NoYes::Yes;
            }
            //SKS - End
           //SKS_BS_DD_5_BankFormatValidations

            //SKS_EFT_BankFormatValidation_ds.research(true); //8681,8682 - AX2012

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            SKS_EFT_SourceContext selectedSourceContextElement; //8681,8682 - AX2012

            selectedSourceContextElement = SKS_EFT_BankFormatValidation.SourceContext;  //8681,8682 - AX2012
            if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::AR)
            {
                this.delete(enum2str(SKS_EFT_SourceContext::DirParty_Vendor));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsPostalAddress_Vendor));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsPostalAddress_VendorBank));
                this.delete(enum2str(SKS_EFT_SourceContext::VendBankAccount));
                this.delete(enum2str(SKS_EFT_SourceContext::VendTable));
                this.delete(enum2str(SKS_EFT_SourceContext::VendTrans));
                this.delete(enum2str(SKS_EFT_SourceContext::AP_EFT_Bank));
                this.delete(enum2str(SKS_EFT_SourceContext::VendorDetails_EFT_VendorPaym));

                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_BankAccountTable_Account));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_BankAccountTable_Offset));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_CompanyInfo_accountLegalEntity));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_CompanyInfo_OffsetAccountLegalEntity));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_DirPartyofCompany_accountLegalEntity));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_EFT_Bank));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_LedgerJournalTrans));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_LogisticsLocation_AccountLegalEntity));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_LogisticsLocation_OffsetBankAccount));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_LogisticsPostalAddress_AccountLegalEntity));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_LogisticsPostalAddress_Bank_Accountside));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_LogisticsPostalAddress_OffsetBankaccount));
                this.delete(enum2str(SKS_EFT_SourceContext::CustomerDetails_EFT_CustReimbursementPaym));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsLocation_Customer));
                this.delete(enum2str(SKS_EFT_SourceContext::CNP_EFT_Bank));

            }
            else if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::AP)
            {
                this.delete(enum2str(SKS_EFT_SourceContext::CustBankAccount));
                this.delete(enum2str(SKS_EFT_SourceContext::CustTable));
                this.delete(enum2str(SKS_EFT_SourceContext::CustTrans));
                this.delete(enum2str(SKS_EFT_SourceContext::DirParty_Customer));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsPostalAddress_Customer));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsPostalAddress_CustomerBank));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsPostalAddress_AREFTLegalEntity));  //SKS_Bug:7415
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsLocation_AREFTLegalEntity));       //SKS_Bug:7518

                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_BankAccountTable_Account));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_BankAccountTable_Offset));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_CompanyInfo_accountLegalEntity));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_CompanyInfo_OffsetAccountLegalEntity));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_DirPartyofCompany_accountLegalEntity));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_EFT_Bank));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_LedgerJournalTrans));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_LogisticsLocation_AccountLegalEntity));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_LogisticsLocation_OffsetBankAccount));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_LogisticsPostalAddress_AccountLegalEntity));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_LogisticsPostalAddress_Bank_Accountside));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_LogisticsPostalAddress_OffsetBankaccount));               
                this.delete(enum2str(SKS_EFT_SourceContext::CustomerDetails_EFT_CustReimbursementPaym));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsLocation_Customer));
                this.delete(enum2str(SKS_EFT_SourceContext::CNP_EFT_Bank));
                
            }
            else if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::BTB)
            {
                this.delete(enum2str(SKS_EFT_SourceContext::DirParty_Vendor));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsPostalAddress_Vendor));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsPostalAddress_VendorBank));
                this.delete(enum2str(SKS_EFT_SourceContext::VendBankAccount));
                this.delete(enum2str(SKS_EFT_SourceContext::VendTable));
                this.delete(enum2str(SKS_EFT_SourceContext::VendTrans));
                this.delete(enum2str(SKS_EFT_SourceContext::AP_EFT_Bank));
                this.delete(enum2str(SKS_EFT_SourceContext::VendorDetails_EFT_VendorPaym));

                this.delete(enum2str(SKS_EFT_SourceContext::CustBankAccount));
                this.delete(enum2str(SKS_EFT_SourceContext::CustTable));
                this.delete(enum2str(SKS_EFT_SourceContext::CustTrans));
                this.delete(enum2str(SKS_EFT_SourceContext::DirParty_Customer));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsPostalAddress_Customer));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsPostalAddress_CustomerBank));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsPostalAddress_AREFTLegalEntity));  //SKS_Bug:7415
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsLocation_AREFTLegalEntity));       //SKS_Bug:7518

                this.delete(enum2str(SKS_EFT_SourceContext::BankAccountTable));
                this.delete(enum2str(SKS_EFT_SourceContext::LedgerJournalTrans));
                this.delete(enum2str(SKS_EFT_SourceContext::CompanyInfo));
                this.delete(enum2str(SKS_EFT_SourceContext::AR_EFT_Bank));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsPostalAddress_Bank));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsLocation_Vendor));
                this.delete(enum2str(SKS_EFT_SourceContext::CustomerDetails_EFT_CustReimbursementPaym));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsLocation_Customer));
                this.delete(enum2str(SKS_EFT_SourceContext::CNP_EFT_Bank));
                

                /*if(SKS_EFT_BankFormatValidation.SKS_BTB_PaymSpecFundTransferType == SKS_BTB_PaymSpecFundTransferType::Transfer_in)
                {
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_OUT_BankAccountTable_Account));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_OUT_BankAccountTable_Offset));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_OUT_CompanyInfo_accountLegalEntity));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_OUT_CompanyInfo_OffsetAccountLegalEntity));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_OUT_DirPartyofCompany_accountLegalEntity));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_OUT_EFT_Bank));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_OUT_LedgerJournalTrans));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_OUT_LogisticsLocation_AccountLegalEntity));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_OUT_LogisticsPostalAddress_AccountLegalEntity));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_OUT_LogisticsPostalAddress_Bank_Accountside));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_OUT_LogisticsPostalAddress_OffsetBankaccount));

                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_OUT_BankAccountTable_Account));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_OUT_BankAccountTable_Offset));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_OUT_CompanyInfo_accountLegalEntity));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_OUT_CompanyInfo_OffsetAccountLegalEntity));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_OUT_DirPartyofCompany_accountLegalEntity));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_OUT_EFT_Bank));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_OUT_LedgerJournalTrans));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_OUT_LogisticsLocation_AccountLegalEntity));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_OUT_LogisticsPostalAddress_AccountLegalEntity));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_OUT_LogisticsPostalAddress_Bank_Accountside));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_OUT_LogisticsPostalAddress_OffsetBankaccount));
                }
                else if(SKS_EFT_BankFormatValidation.SKS_BTB_PaymSpecFundTransferType == SKS_BTB_PaymSpecFundTransferType::Transfer_out)
                {
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_IN_BankAccountTable_Account));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_IN_BankAccountTable_Offset));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_IN_CompanyInfo_accountLegalEntity));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_IN_CompanyInfo_OffsetAccountLegalEntity));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_IN_DirPartyofCompany_accountLegalEntity));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_IN_EFT_Bank));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_IN_LedgerJournalTrans));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_IN_LogisticsLocation_AccountLegalEntity));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_IN_LogisticsLocation_OffsetBankAccount));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_IN_LogisticsPostalAddress_AccountLegalEntity));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_IN_LogisticsPostalAddress_Bank_Accountside));
                    this.delete(enum2Str(SKS_EFT_SourceContext::BTB_IN_LogisticsPostalAddress_OffsetBankaccount));

                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_IN_BankAccountTable_Account));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_IN_BankAccountTable_Offset));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_IN_CompanyInfo_accountLegalEntity));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_IN_CompanyInfo_OffsetAccountLegalEntity));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_IN_DirPartyofCompany_accountLegalEntity));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_IN_EFT_Bank));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_IN_LedgerJournalTrans));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_IN_LogisticsLocation_AccountLegalEntity));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_IN_LogisticsLocation_OffsetBankAccount));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_IN_LogisticsPostalAddress_AccountLegalEntity));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_IN_LogisticsPostalAddress_Bank_Accountside));
                    this.add(enum2Str(SKS_EFT_SourceContext::BTB_IN_LogisticsPostalAddress_OffsetBankaccount));
                }*/
                
            }
            else if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::CNP)
            {
                
                this.delete(enum2str(SKS_EFT_SourceContext::DirParty_Vendor));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsPostalAddress_Vendor));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsPostalAddress_VendorBank));
                this.delete(enum2str(SKS_EFT_SourceContext::VendBankAccount));
                this.delete(enum2str(SKS_EFT_SourceContext::VendTable));
                this.delete(enum2str(SKS_EFT_SourceContext::VendTrans));
                this.delete(enum2str(SKS_EFT_SourceContext::AP_EFT_Bank));
                this.delete(enum2str(SKS_EFT_SourceContext::AR_EFT_Bank));
                this.delete(enum2str(SKS_EFT_SourceContext::VendorDetails_EFT_VendorPaym));
                this.delete(enum2Str(SKS_EFT_SourceContext::LogisticsPostalAddress_AREFTLegalEntity));

                this.delete(enum2str(SKS_EFT_SourceContext::BTB_LedgerJournalTrans));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsLocation_Vendor));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsLocation_AREFTLegalEntity));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsPostalAddress_Customer));

                /*this.delete(enum2str(SKS_EFT_SourceContext::CustBankAccount));
                this.delete(enum2str(SKS_EFT_SourceContext::CustTable));
                this.delete(enum2str(SKS_EFT_SourceContext::CustTrans));
                this.delete(enum2str(SKS_EFT_SourceContext::DirParty_Customer));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsPostalAddress_Customer));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsPostalAddress_CustomerBank));
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsPostalAddress_AREFTLegalEntity));  //SKS_Bug:7415
                this.delete(enum2str(SKS_EFT_SourceContext::LogisticsLocation_AREFTLegalEntity));       //SKS_Bug:7518*/

                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_BankAccountTable_Account));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_BankAccountTable_Offset));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_CompanyInfo_accountLegalEntity));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_CompanyInfo_OffsetAccountLegalEntity));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_DirPartyofCompany_accountLegalEntity));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_EFT_Bank));
                //this.delete(enum2Str(SKS_EFT_SourceContext::BTB_LedgerJournalTrans));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_LogisticsLocation_AccountLegalEntity));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_LogisticsLocation_OffsetBankAccount));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_LogisticsPostalAddress_AccountLegalEntity));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_LogisticsPostalAddress_Bank_Accountside));
                this.delete(enum2Str(SKS_EFT_SourceContext::BTB_LogisticsPostalAddress_OffsetBankaccount));
                
            }
            super();
            this.selectText(enum2str(selectedSourceContextElement));    //8681,8682 - AX2012
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_BankFormatValidation_SourceField</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            //SKS - Begin
            //SKS_BS_DD_5_BankFormatValidations
            if (SKS_EFT_BankFormatValidation.UserUpdated == NoYes::No)
            {
                SKS_EFT_BankFormatValidation.UserUpdated = NoYes::Yes;
            }
            //SKS - End
            //SKS_BS_DD_5_BankFormatValidations
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            //SKS - Begin
            //SKS_BS_DD_5_BankFormatValidations
            SysTableLookup SysTableLookup;
            SKS_EFT_TableFieldLookupTable tableFieldLookup;

            DictTable           dictTable;
            DictField           dictField;

            QueryBuildDataSource queryBuildDataSource;
            QueryBuildRange     queryBuildRange;
            Query query         = new Query();


            Str tableName = SKS_EFT_BankFormatValidation_SourceContext.valueStr();
            Str tableNameLoc;
            int delimiterPosition;
            int tmpTableid =    tablename2id(tableName);
            int i;

            delimiterPosition = strFind(tableName,'-',0,strLen(tableName));

            if (delimiterPosition)
            {
                tableNameLoc = strLTrim(subStr(tableName, delimiterPosition + 1,strLen(tableName)));
            }
            else
            {
                tableNameLoc = tableName;
            }
            dictTable = new DictTable(tableName2id(tableNameLoc));

            select firstonly tableFieldLookup where tableFieldLookup.TableNumId == tmpTableid;

            if(!tableFieldLookup.RecId)
            {
                ttsBegin;
                if (dictTable)
                {
                    for (i=1; i<=dictTable.fieldCnt(); i++)
                    {
                        dictField = new DictField(dictTable.id(), dictTable.fieldCnt2Id(i));

                        if(subStr(dictField.name(),0,4) == 'DEL_')
                        {
                            continue;
                        }
                        else
                        {
                            tableFieldLookup.Label = dictField.label();
                            tableFieldLookup.field = dictField.name();
                            tableFieldLookup.TableNumId = tmpTableid;
                            tableFieldLookup.insert();
                        }
                    }
                }
                else
                {
                    error(strFmt("@SKS4392", tableName));
                }
                ttsCommit;

            }

            sysTableLookup = SysTableLookup::newParameters(tableNum(SKS_EFT_TableFieldLookupTable), this);

            sysTableLookup.addLookupField(fieldNum(SKS_EFT_TableFieldLookupTable, field));
            sysTableLookup.addLookupField(fieldNum(SKS_EFT_TableFieldLookupTable, label));

            queryBuildDataSource = query.addDataSource(tableNum(SKS_EFT_TableFieldLookupTable));
            queryBuildDataSource.addSortField(fieldNum(SKS_EFT_TableFieldLookupTable, field), SortOrder::Ascending);
            queryBuildRange = queryBuildDataSource.addRange(fieldNum(SKS_EFT_TableFieldLookupTable, TablenumId));
            queryBuildRange.value(int2str(tmpTableid));

            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();

            delete_from tableFieldLookup;

            //SKS - End
            //SKS_BS_DD_5_BankFormatValidations
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_BankFormatValidation_ISOCountrySpec</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            //SKS - Begin
            //SKS_BS_DD_5_BankFormatValidations
            if (SKS_EFT_BankFormatValidation.UserUpdated == NoYes::No)
            {
                SKS_EFT_BankFormatValidation.UserUpdated = NoYes::Yes;
            }
            //SKS - End
            //SKS_BS_DD_5_BankFormatValidations
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_BankFormatValidation_CountryContext</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            //SKS - Begin
            //SKS_BS_DD_5_BankFormatValidations
            if (SKS_EFT_BankFormatValidation.UserUpdated == NoYes::No)
            {
                SKS_EFT_BankFormatValidation.UserUpdated = NoYes::Yes;
            }
            //SKS - End
            //SKS_BS_DD_5_BankFormatValidations
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>enter</Name>
						<Source><![CDATA[
        public void enter()
        {
            super();

            if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::AR ||
                element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::CNP)
            {
                this.delete(enum2str(SKS_EFT_CountryContext::LogisticsPostalAddress_CountryVendor));
                this.delete(enum2str(SKS_EFT_CountryContext::VendBankAccount_Vendor));
                this.delete(enum2str(SKS_EFT_CountryContext::BTB_BankBankAccount_Bank));
                this.delete(enum2str(SKS_EFT_CountryContext::BTB_LogisticsPostalAddress_CountryBank));

            }
            else if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::AP)
            {
                this.delete(enum2str(SKS_EFT_CountryContext::LogisticsPostalAddress_CountryCustomer));
                this.delete(enum2str(SKS_EFT_CountryContext::CustBankAccount_Customer));
                this.delete(enum2str(SKS_EFT_CountryContext::BTB_BankBankAccount_Bank));
                this.delete(enum2str(SKS_EFT_CountryContext::BTB_LogisticsPostalAddress_CountryBank));

            }
            else if(element.args().caller().getSKS_EFT_Module() == SKS_EFT_Module::BTB)
            {
                this.delete(enum2str(SKS_EFT_CountryContext::LogisticsPostalAddress_CountryVendor));
                this.delete(enum2str(SKS_EFT_CountryContext::VendBankAccount_Vendor));
                this.delete(enum2str(SKS_EFT_CountryContext::LogisticsPostalAddress_CountryCustomer));
                this.delete(enum2str(SKS_EFT_CountryContext::CustBankAccount_Customer));

            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_BankFormatValidation_Required</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            //SKS - Begin
            //SKS_BS_DD_5_BankFormatValidations
            if (SKS_EFT_BankFormatValidation.UserUpdated == NoYes::No)
            {
                SKS_EFT_BankFormatValidation.UserUpdated = NoYes::Yes;
            }
            //SKS - End
            //SKS_BS_DD_5_BankFormatValidations
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_BankFormatValidation_LengthValidation</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            //SKS - Begin
            //SKS_BS_DD_5_BankFormatValidations
            if (SKS_EFT_BankFormatValidation.UserUpdated == NoYes::No)
            {
                SKS_EFT_BankFormatValidation.UserUpdated = NoYes::Yes;
            }
            //SKS - End
            //SKS_BS_DD_5_BankFormatValidations
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_BankFormatValidation_MinLength</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            //SKS - Begin
            //SKS_BS_DD_5_BankFormatValidations
            if (SKS_EFT_BankFormatValidation.UserUpdated == NoYes::No)
            {
                SKS_EFT_BankFormatValidation.UserUpdated = NoYes::Yes;
            }
            //SKS - End
            //SKS_BS_DD_5_BankFormatValidations
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_BankFormatValidation_MaxLength</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            //SKS - Begin
            //SKS_BS_DD_5_BankFormatValidations
            if (SKS_EFT_BankFormatValidation.UserUpdated == NoYes::No)
            {
                SKS_EFT_BankFormatValidation.UserUpdated = NoYes::Yes;
            }
            //SKS - End
            //SKS_BS_DD_5_BankFormatValidations
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_BankFormatValidation_DataRuleId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
    
            ret = super();

            if (SKS_EFT_BankFormatValidation.UserUpdated == NoYes::No)
            {
                SKS_EFT_BankFormatValidation.UserUpdated = NoYes::Yes;
            }
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SKS_EFT_FileFormatPaymSpec</Name>
			<Table>SKS_EFT_FileFormatPaymSpec</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AddendaCodeID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AddendaSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>APAddressType</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>APAutoCreateBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>APIGroupName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>APIGroupType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>APNameType</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AREffectiveDateOffset</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ARPaymSpecName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BE01Reqd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BE01Use</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BE02Reqd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BE02Use</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BEBeneBankAcctReqd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CNPAutoCreateBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CpnyIDNameReq</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>CRAddressType</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>CRNameType</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>DDAddressType</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DDAutoCreateBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>DDNameType</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EDI</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EDI820DefaultPartner</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EffectiveDateOffset</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailOff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FilterSeparateFile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>InvoiceDetail</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpecFileDescr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpecName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecordSummary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>RemitAvailability</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>RemitType</DataField>
					<Visible>No</Visible>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SamePaymentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SelectByPaymentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Selected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_BTB_PaymSpecFundTransferType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TxnNacha</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseCheckNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseWithBanktoBank</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseWithCustomers</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseWithCustReimbursements</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseWithVendors</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VBAAccountReqd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VBAIBANReqd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VBARoutingReqd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VBASwiftReqd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorUse</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WireTabs</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>SKS_EFT_FileFormatPaymSpecFields</Name>
			<Table>SKS_EFT_FileFormatPaymSpecFields</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultCodeLookupValuesRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FieldType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileFormatPaymSpecRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedMask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatFieldId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Required</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TechNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UserUpdated</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>SKS_EFT_FileFormatPaymSpec</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>SKS_EFT_BankFormatValidation</Name>
			<Table>SKS_EFT_BankFormatValidation</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BTB_TransferType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CountryContext</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataRuleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Id</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ISOCountrySpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LengthValidation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaxLength</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MinLength</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Module</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Notes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Required</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceContext</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceField</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceFieldDesc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SourceFieldLoc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TargetFieldLoc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UserUpdated</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>SKS_EFT_FileFormatPaymSpec</JoinSource>
			<LinkType>Active</LinkType>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SKS1516</Caption>
		<DataSource xmlns="">SKS_EFT_FileFormatPaymSpec</DataSource>
		<Pattern xmlns="">SimpleListDetails</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>CreatefromAddenda</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>SKS_EFT_CreateAddendaPaymentSpec</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>SKS_EFT_FileFormatNotes</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>sks_eft_fileformatnotes</MenuItemName>
								<Text>@SKS1687</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_EFT_FileFormatPaymSpec_Selected1</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<BackgroundColor>WindowBackground</BackgroundColor>
								<DataField>Selected</DataField>
								<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_EFT_FileFormatPaymSpec_PaymSpec1</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>PaymSpec</DataField>
								<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_EFT_FileFormatPaymSpec_PaymSpecFileDescr1</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1717986916</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>PaymSpecFileDescr</DataField>
								<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>SKS_EFT_FileFormatPaymSpec_Selected</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<BackgroundColor>WindowBackground</BackgroundColor>
						<DataField>Selected</DataField>
						<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>SKS_EFT_FileFormatPaymSpec_PaymSpec</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>PaymSpec</DataField>
						<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>SKS_EFT_FileFormatPaymSpec_PaymSpecFileDescr</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>PaymSpecFileDescr</DataField>
						<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>EntryClass</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>EntryClassGroup</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatPaymSpec_PaymSpecName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>226050910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymSpecName</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatPaymSpec_ARPaymSpecName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>339076365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ARPaymSpecName</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_UseWithVendors</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>452101820</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>UseWithVendors</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_UseWithCustomers</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>565127275</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>UseWithCustomers</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_SelectByPaymentDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>678152730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SelectByPaymentDate</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_SamePaymentDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>791178185</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SamePaymentDate</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_PreNote</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>904203640</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PreNote</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_CpnyIDNameReq</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1017229095</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CpnyIDNameReq</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_TxnMacha</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1130254550</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TxnNacha</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_UseCheckNumber</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1243280005</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>UseCheckNumber</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_FilterSeparateFile</Name>
										<ElementPosition>1356305460</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>FilterSeparateFile</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatPaymSpec_TransactionCode</Name>
										<ElementPosition>1469330915</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>TransactionCode</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_RecordSummary</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1582356370</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>RecordSummary</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatPaymSpec_EmailNote</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1695381825</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>EmailNote</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_EmailOff</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1808407280</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>EmailOff</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_EDI</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1921432735</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>EDI</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatPaymSpec_EDI820DefaultPartner</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2034458190</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>EDI820DefaultPartner</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_AddendaSpec</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2072133342</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>AddendaSpec</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatPaymSpec_AddendaCodeID</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2109808494</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AddendaCodeID</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_DDAutoCreateBankAccnt</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>DDAutoCreateBankAccount</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_SKS_BTB_PaymSpecFundTransferType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Enabled>No</Enabled>
										<Type>ComboBox</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>SKS_BTB_PaymSpecFundTransferType</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>RemitOptions</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_InvoiceDetail</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceDetail</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_RemitAvailability</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>RemitAvailability</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_RemitType</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>RemitType</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_CNPAutoCreateBankAccount</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CNPAutoCreateBankAccount</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_APAutoCreateBankAccount</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>APAutoCreateBankAccount</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SKS:SKGRemitOptions</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>NameAddressOptions</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_APNameType</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>APNameType</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_APAddressType</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>APAddressType</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_DDNameType</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>DDNameType</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_DDAddressType</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>DDAddressType</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_CRNameType</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CRNameType</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_CRAddressType</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CRAddressType</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<Caption>@SKS:SKGNameAddressOptions</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>EffectiveDateOptions</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>SKS_EFT_FileFormatPaymSpec_EffectiveDateOffset</Name>
										<Type>Integer</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EffectiveDateOffset</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>SKS_EFT_FileFormatPaymSpec_AREffectiveDateOffset</Name>
										<Type>Integer</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>AREffectiveDateOffset</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SKS:SKGEffectiveDateOptions</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SKS1958</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>BankReqFields</Name>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BankingEntryReq</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_WireTabs</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>536870910</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>WireTabs</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_VBARoutingReqd</Name>
										<ElementPosition>805306365</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VBARoutingReqd</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_VBASwiftReqd</Name>
										<ElementPosition>1073741820</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VBASwiftReqd</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_BEBeneBankAcctReqd</Name>
										<ElementPosition>1342177275</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BEBeneBankAcctReqd</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_VBAAccountReqd</Name>
										<ElementPosition>1610612730</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VBAAccountReqd</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_VBAIBANReqd</Name>
										<ElementPosition>1879048185</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>VBAIBANReqd</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SKS1518</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>BankExtraFields</Name>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BankingEntryExtra</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_BE01Use</Name>
										<ElementPosition>715827882</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BE01Use</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_BE01Reqd</Name>
										<ElementPosition>1073741823</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BE01Reqd</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_BE02Use</Name>
										<ElementPosition>1431655764</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BE02Use</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpec_BE02Reqd</Name>
										<ElementPosition>1789569705</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BE02Reqd</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpec</DataSource>
									</AxFormControl>
								</Controls>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SKS1519</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>CodeLookup</Name>
						<ElementPosition>1932735281</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>CodeLookupGrid</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatPaymSpecFields_FormatFieldId</Name>
										<ElementPosition>238609294</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FormatFieldId</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpecFields</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatPaymSpecFields_Description</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Description</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpecFields</DataSource>
										<Mandatory>Yes</Mandatory>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpecFields_Required</Name>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>Required</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpecFields</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpecFields_FieldType</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FieldType</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpecFields</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatPaymSpecFields_CodeId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CodeId</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpecFields</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ReferenceGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1312351117</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>SKS_EFT_FileFormatPaymSpecFields</DataSource>
										<ReferenceField>DefaultCodeLookupValuesRecId</ReferenceField>
										<ReplacementFieldGroup>DefaultValue</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatPaymSpecFields_FixedValue</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1590728626</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FixedValue</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpecFields</DataSource>
										<FastTabSummary>No</FastTabSummary>
										<Label>@SKS:SKGEFTFixedDefaultValue</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatPaymSpecFields_FixedMask</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1869106135</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FixedMask</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpecFields</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatPaymSpecFields_TechNote</Name>
										<ElementPosition>2008294890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TechNote</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpecFields</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpecFields_UserUpdated</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>UserUpdated</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpecFields</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>SKS_EFT_FileFormatPaymSpecFields</DataSource>
								<MultiSelect>No</MultiSelect>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
						</Controls>
						<Caption>@SKS2689</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>BankValidationRules</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPaneBankValidationRules</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTabBankFormatValidations</Name>
										<Type>ActionPaneTab</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>NewDeleteButtonGroup</Name>
												<Type>ButtonGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>NewButton</Name>
														<Type>CommandButton</Type>
														<FormControlExtension
															i:nil="true" />
														<Big>Yes</Big>
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>New</Command>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>DeleteButton</Name>
														<Type>CommandButton</Type>
														<FormControlExtension
															i:nil="true" />
														<Big>Yes</Big>
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
													</AxFormControl>
												</Controls>
											</AxFormControl>
										</Controls>
										<DataSource>SKS_EFT_BankFormatValidation</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>SKS_EFT_BankFormatValidation</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>BankValidationGrid</Name>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>SKS_EFT_BankFormatValidation_Id</Name>
										<AllowEdit>No</AllowEdit>
										<Type>Integer</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Id</DataField>
										<DataSource>SKS_EFT_BankFormatValidation</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_BankFormatValidation_SourceFieldDesc</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SourceFieldDesc</DataField>
										<DataSource>SKS_EFT_BankFormatValidation</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_BankFormatValidation_SourceFieldLoc</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SourceFieldLoc</DataField>
										<DataSource>SKS_EFT_BankFormatValidation</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_BankFormatValidation_TargetFieldLoc</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TargetFieldLoc</DataField>
										<DataSource>SKS_EFT_BankFormatValidation</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_BankFormatValidation_Notes</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Notes</DataField>
										<DataSource>SKS_EFT_BankFormatValidation</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_EFT_BankFormatValidation_SKS_BTB_PaymSpecFundTransferType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ComboBox</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>BTB_TransferType</DataField>
										<DataSource>SKS_EFT_BankFormatValidation</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_EFT_BankFormatValidation_SourceContext</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SourceContext</DataField>
										<DataSource>SKS_EFT_BankFormatValidation</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_BankFormatValidation_SourceField</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SourceField</DataField>
										<DataSource>SKS_EFT_BankFormatValidation</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_BankFormatValidation_ISOCountrySpec</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ISOCountrySpec</DataField>
										<DataSource>SKS_EFT_BankFormatValidation</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_EFT_BankFormatValidation_CountryContext</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CountryContext</DataField>
										<DataSource>SKS_EFT_BankFormatValidation</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_EFT_BankFormatValidation_Required</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Required</DataField>
										<DataSource>SKS_EFT_BankFormatValidation</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_EFT_BankFormatValidation_LengthValidation</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>LengthValidation</DataField>
										<DataSource>SKS_EFT_BankFormatValidation</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>SKS_EFT_BankFormatValidation_MinLength</Name>
										<Type>Integer</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>MinLength</DataField>
										<DataSource>SKS_EFT_BankFormatValidation</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>SKS_EFT_BankFormatValidation_MaxLength</Name>
										<Type>Integer</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>MaxLength</DataField>
										<DataSource>SKS_EFT_BankFormatValidation</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_BankFormatValidation_DataRuleId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>DataRuleId</DataField>
										<DataSource>SKS_EFT_BankFormatValidation</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_BankFormatValidation_UserUpdated</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>UserUpdated</DataField>
										<DataSource>SKS_EFT_BankFormatValidation</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>SKS_EFT_BankFormatValidation</DataSource>
								<DefaultAction>NewButton</DefaultAction>
							</AxFormControl>
						</Controls>
						<Caption>@SKS4220</Caption>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>