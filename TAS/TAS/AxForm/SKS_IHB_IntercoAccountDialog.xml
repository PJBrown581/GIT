<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SKS_IHB_IntercoAccountDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SKS_IHB_IntercoAccountDialog extends FormRun
{
    SKS_LB_JournalARApplic  journalARApplic;
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public void init()
    {
        journalARApplic = element.args().record();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkProject</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public boolean checkProject(SelectableDataArea _offsetCompany, LedgerJournalACType _offsetAccountType)
    {
        boolean ret = true;
        ;
    
        // Project does not support intercompany
        if(_offsetAccountType == LedgerJournalACType::Project &&
            _offsetCompany &&
            strUpr(_offsetCompany) != strUpr(curext()) &&
            isConfigurationkeyEnabled(configurationKeyNum(LedgerAdvIntercompanyAccounting)))
        {
            error(strFmt("@SYS75337", "@SYS80304"));
            ret = false;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public void close()
    {
        super();
        element.args().caller().bookRefreshAlreadyMarked(FormDataUtil::getFormDataSource(element.args().record()).getPosition());
        journalARApplic.validateWrite();
    }

]]></Source>
			</Method>
			<Method>
				<Name>disableInterestPayment</Name>
				<Source><![CDATA[
    /// <summary>
    /// To enalbe diable interest repayment check box ib ihb intercompany form.
    /// </summary>
    public void disableInterestPayment()
    {
        SKS_PP_Bank     sks_PP_Bank, locsks_PP_Bank;
        sks_PP_Bank = SKS_PP_Bank::findIHBBank(LedgerDynamicAccountHelper::getAccountNumberFromDynamicAccount(journalARApplic.LedgerDimension), journalARApplic.CustTransDataAreaId);
        select crosscompany locsks_PP_Bank
                    where locsks_PP_Bank.BankAccountId == sks_PP_Bank.BankAccountId
                        && locsks_PP_Bank.SKS_IHBInhouseBank == NoYes::Yes
                        && locsks_PP_Bank.IHB_InterestCalcMethod == SKS_IHB_InterestCalcMeth::Noncompounded;
        
        if(journalARApplic.AccountType == LedgerJournalACType::Bank && journalARApplic.LedgerDimension)
        {
            if(locsks_PP_Bank)
            {
                SKS_LB_JournalARApplic_IHB_InterestRepayment.enabled(true);
            }
            else
            {
                SKS_LB_JournalARApplic_IHB_InterestRepayment.enabled(false);
                SKS_LB_JournalARApplic_IHB_InterestRepayment.value(NoYes::No);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>SKS_LB_JournalARApplic</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            this.query().dataSourceTable(tableNum(SKS_LB_JournalARApplic)).addRange(fieldNum(SKS_LB_JournalARApplic, RecId)).value(queryValue(journalARApplic.RecId));
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            ret = super();
            SKS_LB_JournalARApplic_IHBIntercoLedgerDimension.parmDataAreaId(SKS_LB_JournalARApplic.IHBIntercoCompany);
            element.disableInterestPayment();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>IHBIntercoAccountType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                SKS_LB_JournalARApplic.IHBIntercoLedgerDimension = 0;
                SKS_LB_JournalARApplic.IHB_InterestRepayment = NoYes::No; //FDD-11448
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>IHBIntercoCompany</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                SKS_LB_JournalARApplic.IHBIntercoLedgerDimension = 0;
                SKS_LB_JournalARApplic_IHBIntercoLedgerDimension.parmDataAreaId(SKS_LB_JournalARApplic.IHBIntercoCompany);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>IHBIntercoLedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                
                super();
                element.disableInterestPayment();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>SKS_LB_JournalARApplic_IHBIntercoCompany</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        /// <summary>
        /// Determines whether the current record is valid and ready to be written to the database.
        /// </summary>
        /// <returns>True if the record is valid; otherwise, false</returns>
        public boolean validate()
        {
            boolean ret;
    
            ret = super();
            if(ret)
            {
                ret = element.checkProject(this.text(), SKS_LB_JournalARApplic.IHBIntercoAccountType);
            }
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_LB_JournalARApplic_IHBIntercoAccountType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        /// <summary>
        /// Determines whether the current record is valid and ready to be written to the database.
        /// </summary>
        /// <returns>True if the record is valid; otherwise, false</returns>
        public boolean validate()
        {
            boolean ret;
    
            ret = super();
            if(ret)
            {
                ret = element.checkProject(SKS_LB_JournalARApplic.IHBIntercoCompany, SKS_LB_JournalARApplic.IHBIntercoAccountType);
            }
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_LB_JournalARApplic_IHBIntercoLedgerDimension</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Provides filtered lookup functionality.
        /// </summary>
        public void lookup()
        {
            
            switch(SKS_LB_JournalARApplic.IHBIntercoAccountType)
            {
                case LedgerJournalACType::Bank:
                    BankAccountTable::lookupBankAccount(this,
                                                        SKS_LB_JournalARApplic.IHBIntercoCompany);
                    break;
    
                case LedgerJournalACType::Cust:
                    CustTable::lookupCustomer(this,
                                                SKS_LB_JournalARApplic.IHBIntercoCompany);
                    break;
    
                case LedgerJournalACType::FixedAssets:
                    AssetTable::lookupAccountNum(this,
                                                    SKS_LB_JournalARApplic.IHBIntercoCompany);
                    break;
    
                case LedgerJournalACType::Project:
                    ProjTable::lookupProjId(this,
                                            SKS_LB_JournalARApplic);
                    break;
    
                case LedgerJournalACType::Vend:
                    VendTable::lookupVendor(this,
                                            SKS_LB_JournalARApplic.IHBIntercoCompany);
                    break;
    
                default:
                    super();
                    break;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            boolean ret;
        
            ret = super(_accountTypeEnumValue, _secondaryAccountTypeEnumValue);
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SKS_LB_JournalARApplic</Name>
			<Table>SKS_LB_JournalARApplic</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlreadyMarked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltInvLookupRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltInvLookupType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ApplyDiscount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoCRAutoRev</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoCROffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoRevLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoRevOffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransOpenRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultBankDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscApplyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscountTakenPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileRecord</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FullSettlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IHBIntercoAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IHBIntercoCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IHBIntercoLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IHB_InterestRepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceDueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LBInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevReasonCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_BR_BankTran</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_LB_JournalARRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TrackingInvoices</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendTransOpenRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendTransRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WriteOff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WriteOffId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SKS:SKGIHB</Caption>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ContentGroup</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>IHBIntercoAccount</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_JournalARApplic_IHBIntercoCompany</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>IHBIntercoCompany</DataField>
								<DataSource>SKS_LB_JournalARApplic</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SKS_LB_JournalARApplic_IHBIntercoAccountType</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>IHBIntercoAccountType</DataField>
								<DataSource>SKS_LB_JournalARApplic</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormSegmentedEntryControl">
								<Name>SKS_LB_JournalARApplic_IHBIntercoLedgerDimension</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>SegmentedEntry</Type>
								<FormControlExtension>
									<Name>SegmentedEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>String</Type>
											<Value>DimensionDynamicAccountController</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAccountTypeEnumName</Name>
											<Type>String</Type>
											<Value>IHBIntercoAccountType</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIsDefaultAccount</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValidateBlockedForManualEntry</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmLockMainAccountSegment</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPostingType</Name>
											<Type>Enum</Type>
											<TypeName>LedgerPostingType</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeTotalAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmIncludeFinancialAccounts</Name>
											<Type>Enum</Type>
											<TypeName>NoYes</TypeName>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<DataSource>SKS_LB_JournalARApplic</DataSource>
								<ReferenceField>IHBIntercoLedgerDimension</ReferenceField>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_LB_JournalARApplic_IHB_InterestRepayment</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>IHB_InterestRepayment</DataField>
								<DataSource>SKS_LB_JournalARApplic</DataSource>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>CommitGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>