<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SKS_EFT_FileFormats</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SKS_EFT_FileFormats extends FormRun
{
    CustPaymModeTable gCustPaymModeTable;

}
]]></Source>
			</Method>
			<Method>
				<Name>enabledisablefields</Name>
				<Source><![CDATA[
    public void enabledisablefields()
    {
        if(SKS_EFT_FileFormatFields.FieldType == SKS_EFT_Codefieldtype::CodeLookup)
        {
            SKS_EFT_FileFormatFields_FixedValue.enabled(false);
            SKS_EFT_FileFormatFields_FixedMask.enabled(false);
            SKS_EFT_FileFormatFields_CodeId.enabled(true);
            ReferenceGroup.enabled(true);
        }
        else
        {
            SKS_EFT_FileFormatFields_FixedValue.enabled(true);
            SKS_EFT_FileFormatFields_FixedMask.enabled(true);
            SKS_EFT_FileFormatFields_CodeId.enabled(false);
            ReferenceGroup.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPPNumeric</Name>
				<Source><![CDATA[
    Public boolean isPPNumeric(str strValue)
    {
        Boolean   xppBool;
        System.Boolean netBool;
        Str matchPattern = '^[0-9]*$';
        System.Text.RegularExpressions.Match myMatch;
        new InteropPermission(InteropKind::ClrInterop).assert();
        myMatch = System.Text.RegularExpressions.Regex::Match(strValue,matchPattern);
        netBool = myMatch.get_Success();
        xppBool = netBool;
        CodeAccessPermission::revertAssert();
        Return xppBool;
    }

]]></Source>
			</Method>
			<Method>
				<Name>APEFT_DirectDebitControlVisibility</Name>
				<Source><![CDATA[
    private void APEFT_DirectDebitControlVisibility()
    {
        void ModuleSpecificControlsVisible(SKS_EFT_Module _VisibleModule)
        {
            //AP EFT+ EXCLUSIVE CONTROLS
            SKS_EFT_FileFormat_IncludeCpnyDebit.visible(_VisibleModule == SKS_EFT_Module::AP);
            SKS_EFT_FileFormat_MastAcctList.visible(_VisibleModule == SKS_EFT_Module::AP);
            APEffDateOptions.visible(_VisibleModule == SKS_EFT_Module::AP);
            //Direct debit EXCLUSIVE CONTROLS
            SKS_EFT_FileFormat_IncludeCpnyCredit.visible(_VisibleModule == SKS_EFT_Module::AR);
            AREffDateOptions.visible(_VisibleModule == SKS_EFT_Module::AR);
            SendFileTimingGroup.visible(_VisibleModule == SKS_EFT_Module::AR);
            //Bank to bank EXCLUSIVE CONTROLS
            SKS_EFT_FileFormat_IncludeCpnyDebit.visible(_VisibleModule == SKS_EFT_Module::BTB);
            SKS_EFT_FileFormat_MastAcctList.visible(_VisibleModule == SKS_EFT_Module::BTB);
            BTBEffDateOptions.visible(_VisibleModule == SKS_EFT_Module::BTB);

            if(_VisibleModule == SKS_EFT_Module::CNP)
            {
                //Customer reimbursement EXCLUSIVE CONTROLS
                SKS_EFT_FileFormat_IncludeCpnyDebit.visible(_VisibleModule == SKS_EFT_Module::CNP);
                APEffDateOptions.visible(_VisibleModule == SKS_EFT_Module::CNP);
            }
        }

        if(element.args().callerName()   ==   menuItemDisplayStr(CustPaymMode))
        {
            ModuleSpecificControlsVisible(SKS_EFT_Module::AR);
        }
        else if(element.args().callerName()     ==   menuItemDisplayStr(VendpaymMode))
        {
            ModuleSpecificControlsVisible(SKS_EFT_Module::AP);
        }
        else if (element.args().parmEnum() == SKS_EFT_Module::AR)
        {
            ModuleSpecificControlsVisible(SKS_EFT_Module::AR);
        }
        else if (element.args().parmEnum() == SKS_EFT_Module::BTB)
        {
            ModuleSpecificControlsVisible(SKS_EFT_Module::BTB);
            SKS_EFT_FileFormat_PrenoteDays.visible(false);
            SKS_EFT_FileFormat_PreNote.visible(false);
            SKS_EFT_FileFormat_UseAddenda.visible(false);
            SKS_EFT_FileFormat_ExternalFormats.visible(false);
            SKS_EFT_EDI820.visible(false);
            SKS_EFT_FileFormat_SKS_BTB_FundTransferType.visible(true);
            SKS_EFT_FileFormat_SupportsMultiCompany.visible(false);
        }
        else if (element.args().parmEnum() == SKS_EFT_Module::CNP)
        {
            ModuleSpecificControlsVisible(SKS_EFT_Module::CNP);
            SKS_EFT_FileFormat_PrenoteDays.visible(false);
            SKS_EFT_FileFormat_PreNote.visible(false);
            SKS_EFT_FileFormat_UseAddenda.visible(false);
            SKS_EFT_FileFormat_ExternalFormats.visible(false);
            SKS_EFT_EDI820.visible(false);
            SKS_EFT_FileFormat_SupportsMultiCompany.visible(false);
        }
        else
        {
            ModuleSpecificControlsVisible(SKS_EFT_Module::AP);
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>enableEffectiveDateMethodComboBox</Name>
				<Source><![CDATA[
    public void enableEffectiveDateMethodComboBox()
    {
        if(SKS_EFT_FileFormat.SupportsMultipleEffectiveDates)
        {
            SKS_EFT_FileFormat_DS.object(fieldNum(SKS_EFT_FileFormat,EffectiveDateMethod)).enabled(true);
        }
        else
        {
            SKS_EFT_FileFormat_DS.object(fieldNum(SKS_EFT_FileFormat,EffectiveDateMethod)).enabled(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableEffectiveDaysOffset</Name>
				<Source><![CDATA[
    public void enableEffectiveDaysOffset()
    {
        SKS_EFT_FileFormatPaymSpec SKS_EFT_FileFormatPaymSpec;

        if(SKS_EFT_FileFormat.EffectiveDateMethod != SKS_EFT_EffectiveDateMethod::FormatOffset)
        {
            SKS_EFT_FileFormat_DS.object(fieldNum(SKS_EFT_FileFormat,EffectiveDateOffset)).enabled(false);
            SKS_EFT_FileFormat.EffectiveDateOffset = 0;
            SKS_EFT_FileFormat.update();

            if(SKS_EFT_FileFormat.EffectiveDateMethod == SKS_EFT_EffectiveDateMethod::PaymentJournalPostingDate)
            {
                element.updatePaymSpecEffectiveDateOffset();
            }
            else if(SKS_EFT_FileFormat.EffectiveDateMethod == SKS_EFT_EffectiveDateMethod::PaymSpecOffset)
            {
                ttsBegin;
                while select forUpdate  SKS_EFT_FileFormatPaymSpec
                    where  SKS_EFT_FileFormatPaymSpec.FormatId == SKS_EFT_FileFormat.FormatId
                {
                    SKS_EFT_FileFormatPaymSpec.SelectByPaymentDate = NoYes::No;
                    SKS_EFT_FileFormatPaymSpec.SamePaymentDate = NoYes::No;
                    SKS_EFT_FileFormatPaymSpec.update();
                }

                ttsCommit;
            }
        }
        else
        {
            element.updatePaymSpecEffectiveDateOffset();

            SKS_EFT_FileFormat_DS.object(fieldNum(SKS_EFT_FileFormat,EffectiveDateOffset)).enabled(true);
        }

        if(SKS_EFT_FileFormat_EffectiveDateOffsetPaymSpec.value())
        {
            SKS_EFT_FileFormat_ARDateOffset.enabled(false);
            SKS_EFT_FileFormat_SplitJournalByDate.enabled(false);
        }
        else
        {
            SKS_EFT_FileFormat_ARDateOffset.enabled(true);
            SKS_EFT_FileFormat_SplitJournalByDate.enabled(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePaymSpecEffectiveDateOffset</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update Effective dateoffset value
    /// </summary>
    void updatePaymSpecEffectiveDateOffset()
    {
        ttsBegin;
        SKS_EFT_FileFormatPaymSpec lSKS_EFT_FileFormatPaymSpec;

        while select forUpdate  lSKS_EFT_FileFormatPaymSpec
                    where  lSKS_EFT_FileFormatPaymSpec.FormatId == SKS_EFT_FileFormat.FormatId
        {
            lSKS_EFT_FileFormatPaymSpec.EffectiveDateOffset = 0;
            lSKS_EFT_FileFormatPaymSpec.update();
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enablePaymSpecButton</Name>
				<Source><![CDATA[
    void enablePaymSpecButton()
    {
        if(SKS_EFT_FileFormat_Selected.value())
        {
            PaymSpec.enabled(true);
            SKS_EFT_ControlFiles.enabled(true);
            SKS_EFT_FileFormat_FormatGroupCodeSource.enabled(true);
        }
        else
        {
            PaymSpec.enabled(false);
            SKS_EFT_ControlFiles.enabled(false);
            SKS_EFT_FileFormat_FormatGroupCodeSource.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkformatversion</Name>
				<Source><![CDATA[
    void checkformatversion()
    {
        str                             metadataFormatClass;
        str                             retMsg;
        str                             formatVersion;
        SysDictClass                    obj;
        Object                          classInstance;
        int                             counter;
        SKG_File.Models.SKGFormatMetadataGroup formatGroup;
        SKG_File.Models.SKGFormatMetadata locFormatMetadata;

        if(SKS_EFT_FileFormat.FormatGroupCodeSource == SKS_EB_CodeSource::D365)
        {

            metadataFormatClass = strReplace('SKS_EFT_Format_' + sks_EFT_FileFormat.FormatGroup, '-', '_');
            retMsg = this.ValidateMetaDataClass(metadataFormatClass, sks_EFT_FileFormat.FormatId);
        
            if (retMsg)
            {
                error(retMsg);
            }
            else
            {
                obj = new SysDictClass(className2Id(metadataFormatClass));
                classInstance = obj.makeObject(); // Instantiate class
            
                formatVersion = obj.callObject('getFormatVersion', classInstance);

                if (formatVersion == sks_EFT_FileFormat.FormatGroupVersion)
                {
                    FormatRefresh.enabled(false);
                }
                else
                {
                    FormatRefresh.enabled(true);
                }
            }
        }
        else
        {
            locFormatMetadata = SKS_EFT_BankFabricMetadata::getBFLList(sks_EFT_FileFormat.FormatGroup, SKS_EFT_FileFormat.APIFileFormatType);
            if(locFormatMetadata.SKGFormatMetadataGroups != null)
            {
                counter = locFormatMetadata.SKGFormatMetadataGroups.get_count();
            }

            if (counter > 0)
            {
                formatGroup = locFormatMetadata.SKGFormatMetadataGroups.get_item(0);
                if (formatGroup.formatGroupVersion == SKS_EFT_FileFormat.FormatGroupVersion)
                {
                    FormatRefresh.enabled(false);
                }
                else
                {
                    FormatRefresh.enabled(true);
                }

            }

        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>formatInUse</Name>
				<Source><![CDATA[
    boolean formatInUse()
    {
        SKS_EFT_VendorPaym          lSKS_EFT_VendorPaym;
        SKS_EFT_CustomerPaym        lSKS_EFT_CustomerPaym;
        SKS_EFT_BanktoBankPaym      lSKS_EFT_BanktoBankPaym;
        VendPaymModeTable           lVendPaymModeTable;
        CustPaymModeTable           lCustPaymModeTable;
        SKS_BTB_PaymModeTable       lSKS_BTB_PaymModeTable;
        boolean                     inUse = false;
        ;
        

        //Check AP
        select firstonly PaymMode from lSKS_EFT_VendorPaym
            join SKS_EFT_FormatId, PaymMode from lVendPaymModeTable
            where lVendPaymModeTable.SKS_EFT_FormatId == SKS_EFT_FileFormat.FormatId &&
            lSKS_EFT_VendorPaym.PaymMode == lVendPaymModeTable.PaymMode;
                  

        if(lSKS_EFT_VendorPaym)
        {
            error("@SKS2602");
            return true;
        }
        
        //Check AR
        select firstonly PaymMode, PaymSpec from lSKS_EFT_CustomerPaym
            join SKS_EFT_FormatId, PaymMode from lCustPaymModeTable
            where lCustPaymModeTable.SKS_EFT_FormatId == SKS_EFT_FileFormat.FormatId &&
                    lSKS_EFT_CustomerPaym.PaymMode == lCustPaymModeTable.PaymMode;

        if(lSKS_EFT_CustomerPaym)
        {
            error("@SKS2603");
            return true;
        }
        
        //Check Bank to bank
        select firstonly PaymMode, PaymSpec from lSKS_EFT_BanktoBankPaym
            join FormatId, PaymMode from lSKS_BTB_PaymModeTable
            where lSKS_BTB_PaymModeTable.FormatId == SKS_EFT_FileFormat.FormatId &&
                    lSKS_EFT_BanktoBankPaym.PaymMode == lSKS_BTB_PaymModeTable.PaymMode;

        if(lSKS_EFT_BanktoBankPaym)
        {
            error("@SKS:SKGBTBFileformatsInUse");
            return true;
        }
        
        //Check Customer reimbursement
        select firstonly PaymMode, PaymSpec from lSKS_EFT_CustomerPaym
            join SKS_CNP_FormatId, PaymMode from lCustPaymModeTable
            where lCustPaymModeTable.SKS_CNP_FormatId == SKS_EFT_FileFormat.FormatId &&
                    lSKS_EFT_CustomerPaym.PaymMode == lCustPaymModeTable.PaymMode;

        if(lSKS_EFT_CustomerPaym)
        {
            error("@SKS:SKGCNPFileformatUse");
            return true;
        }

        return inUse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSKS_EFT_FileFormat</Name>
				<Source><![CDATA[
    public SKS_EFT_FileFormat getSKS_EFT_FileFormat()
    {
        return SKS_EFT_FileFormat;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSKS_EFT_Module</Name>
				<Source><![CDATA[
    public SKS_EFT_Module getSKS_EFT_Module()
    {
        return element.args().parmEnum();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAPIFormatMenuItemName</Name>
				<Source><![CDATA[
    public str getAPIFormatMenuItemName()
    {
        return element.args().menuItemName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkNoFormatsAreD365</Name>
				<Source><![CDATA[
    private void checkNoFormatsAreD365(SKS_EFT_Module _module)
    {
        SKS_EFT_FileFormat lSKS_EFT_FileFormat;
        switch(_module)
        {
            case SKS_EFT_Module::AR:
                select firstonly UseWithCustomers, Selected, FormatGroupCodeSource from lSKS_EFT_FileFormat where
                    lSKS_EFT_FileFormat.UseWithCustomers && 
                    lSKS_EFT_FileFormat.Selected == NoYes::Yes && 
                    lSKS_EFT_FileFormat.FormatGroupCodeSource == SKS_EB_CodeSource::D365;

                    break;

            case SKS_EFT_Module::BTB:
                select firstonly UseWithBanktoBank, Selected, FormatGroupCodeSource from lSKS_EFT_FileFormat where
                    lSKS_EFT_FileFormat.UseWithBanktoBank &&
                    lSKS_EFT_FileFormat.Selected == NoYes::Yes &&
                    lSKS_EFT_FileFormat.FormatGroupCodeSource == SKS_EB_CodeSource::D365;

                    break;

            case SKS_EFT_Module::CNP:
                select firstonly UseWithCustReimbursements, Selected, FormatGroupCodeSource from lSKS_EFT_FileFormat where
                    lSKS_EFT_FileFormat.UseWithCustReimbursements &&
                    lSKS_EFT_FileFormat.Selected == NoYes::Yes &&
                    lSKS_EFT_FileFormat.FormatGroupCodeSource == SKS_EB_CodeSource::D365;

                    break;

            case SKS_EFT_Module::AP:
                select firstonly UseWithVendors, Selected, FormatGroupCodeSource from lSKS_EFT_FileFormat where
                    lSKS_EFT_FileFormat.UseWithVendors &&
                    lSKS_EFT_FileFormat.Selected == NoYes::Yes &&
                    lSKS_EFT_FileFormat.FormatGroupCodeSource == SKS_EB_CodeSource::D365;

                    break;
        }

        if(lSKS_EFT_FileFormat)
        {
            warning("@SKS:SKGD365Formats");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        SKS_PP_Sys   sks_PP_Sys;
        SKS_EFT_Setup sks_eft_setup;
        

        super();

        if(element.args().callerName()   ==   menuItemDisplayStr(CustPaymMode))
        {
            if(gCustPaymModeTable.SKS_EFT_FormatId)
            {
                this.design().caption("@SKS4131");
                InboundFileInfo.visible(false);
                SendFileTimingGroup.visible(true);
                SKS_DD_InboundFileInfo.visible(true);
                element.args().parmEnum(SKS_EFT_Module::AR);
            }
            else if(gCustPaymModeTable.SKS_CNP_FormatId)
            {
                this.design().caption("@SKS:SKGCNPFileFormats");
                APEffDateOptions.caption("@SKS:SKGCNPEffectiveDateOptions");
                InboundFileInfo.visible(false);
                SKS_DD_InboundFileInfo.visible(false);
                SKS_BTB_InboundFileInfo.visible(false);
                SKS_CNP_InboundFileInfo.visible(true);
                element.args().parmEnum(SKS_EFT_Module::CNP);
            }            
        }
        else if(element.args().callerName()     ==   menuItemDisplayStr(VendpaymMode))
        {
            this.design().caption("@SKS1505");
            InboundFileInfo.visible(true);
            SKS_DD_InboundFileInfo.visible(false);
            SKS_BTB_InboundFileInfo.visible(false);
            SKS_CNP_InboundFileInfo.visible(false);
        }
        else if(element.args().callerName()     ==   menuItemDisplayStr(SKS_BTB_PaymMode))
        {
            this.design().caption("@SKS:SKGBBFileFormats");
            InboundFileInfo.visible(false);
            SKS_DD_InboundFileInfo.visible(false);
            SKS_BTB_InboundFileInfo.visible(true);
            SKS_CNP_InboundFileInfo.visible(false);
            paymspec.text("@SKS:SKGBTBTransferSpecification");
            element.args().parmEnum(SKS_EFT_Module::BTB);
        }
        else if (element.args().parmEnum() == SKS_EFT_Module::AR)
        {
            this.design().caption("@SKS4131");
            InboundFileInfo.visible(false);
            SendFileTimingGroup.visible(true);
            SKS_DD_InboundFileInfo.visible(true);
            SKS_BTB_InboundFileInfo.visible(false);
            SKS_CNP_InboundFileInfo.visible(false);
            SKS_EFT_FileFormat_ds.object(fieldNum(SKS_EFT_FileFormat, RemitDetailProcessing)).visible(false);

            this.checkNoFormatsAreD365(SKS_EFT_Module::AR);
        }
        else if (element.args().parmEnum() == SKS_EFT_Module::BTB)
        {
            this.design().caption("@SKS:SKGBBFileFormats");
            InboundFileInfo.visible(false);
            SKS_DD_InboundFileInfo.visible(false);
            SKS_BTB_InboundFileInfo.visible(true);
            SKS_CNP_InboundFileInfo.visible(false);
            SKS_EFT_FileFormat_ds.object(fieldNum(SKS_EFT_FileFormat, RemitDetailProcessing)).visible(false);
            paymspec.text("@SKS:SKGBTBTransferSpecification");

            this.checkNoFormatsAreD365(SKS_EFT_Module::BTB);
        }
        else if (element.args().parmEnum() == SKS_EFT_Module::CNP)
        {
            this.design().caption("@SKS:SKGCNPFileFormats");
            APEffDateOptions.caption("@SKS:SKGCNPEffectiveDateOptions");
            InboundFileInfo.visible(false);
            SKS_DD_InboundFileInfo.visible(false);
            SKS_BTB_InboundFileInfo.visible(false);
            SKS_CNP_InboundFileInfo.visible(true);
            SKS_EFT_FileFormat_ds.object(fieldNum(SKS_EFT_FileFormat, RemitDetailProcessing)).visible(false);

            this.checkNoFormatsAreD365(SKS_EFT_Module::CNP);
        }
        else if (element.args().menuItemName() == menuItemDisplayStr(SKS_EFT_APIOutboundFormat))
        {
            SKS_EB_FileStorage  lSKS_EB_FileStorage;
            select firstonly lSKS_EB_FileStorage;
            if(lSKS_EB_FileStorage.StorageOption_APEFTFXDD != SKS_EB_BankIntegOptWithNoLicense::BankFabricEnumValue)
            {
                Box::warning("@SKS:SKGBFEFTSetup", "@SKS311");
                this.close();
            }
            this.design().caption("@SKS:SKGAPIOutbound");
            SKS_EFT_ControlFiles.visible(false);
            SKS_EFT_EDI820.visible(false);
            AddUpdateFormat.visible(false);

            SKS_EFT_FileFormat_ds.object(fieldNum(SKS_EFT_FileFormat, RecordLength)).visible(false);

            SKS_EFT_FileFormat_FormatGroupVersion.label("@SKS:SKGAPIFormtGroupVersion");
            
            SKS_EFT_FileFormat_ds.object(fieldNum(SKS_EFT_FileFormat, FormatGroupCodeSource)).visible(false);
            FileInfo.caption("@SKS:SKGAPIFormatInformation");
                        
            SKS_EFT_FileFormat_ds.object(fieldNum(SKS_EFT_FileFormat, PreNote)).visible(false);
            SKS_EFT_FileFormat_ds.object(fieldNum(SKS_EFT_FileFormat, TrimRecord)).visible(false);
            SKS_EFT_FileFormat_ds.object(fieldNum(SKS_EFT_FileFormat, BlockFill)).visible(false);
            SKS_EFT_FileFormat_ds.object(fieldNum(SKS_EFT_FileFormat, CrLf)).visible(false);
            SKS_EFT_FileFormat_ds.object(fieldNum(SKS_EFT_FileFormat, UseAddenda)).visible(false);
            SKS_EFT_FileFormat_ds.object(fieldNum(SKS_EFT_FileFormat, PrenoteDays)).visible(false);
            SKS_EFT_FileFormat_ds.object(fieldNum(SKS_EFT_FileFormat, RemitDetailProcessing)).visible(false);

            AddAPIs.visible(true);

            InboundFileInfo.visible(true);
            InboundFileInfo.caption('@SKS:SKGAPIInboundInformation');
            SKS_EFT_FileFormat_InboundFileGroupId.label('@SKS:SKGAPIInboundGroup');
        }
        else
        {
            this.design().caption("@SKS1505");
            InboundFileInfo.visible(true);
            SKS_DD_InboundFileInfo.visible(false);
            SKS_BTB_InboundFileInfo.visible(false);
            SKS_CNP_InboundFileInfo.visible(false);

            this.checkNoFormatsAreD365(SKS_EFT_Module::AP);

            SKS_EFT_FileFormat_ds.object(fieldNum(SKS_EFT_FileFormat, RemitDetailProcessing)).visible(true);
        }


        //show/hide(Visible) based on AP vs. Direct Debit call to form
        this.APEFT_DirectDebitControlVisibility();

        sks_PP_Sys = new SKS_PP_Sys();
        if (!SKS_PP_Sys.ValidateSetup(this.name()))
        {
            this.close();
        }

        select firstonly APReqPreNote, ARReqPreNote from sks_eft_setup;

        if(sks_eft_setup.APReqPreNote || sks_eft_setup.ARReqPreNote)
        {
            SKS_EFT_FileFormat_PreNote.enabled(true);
        }
        else
        {
            SKS_EFT_FileFormat_PreNote.enabled(false);
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>ValidateMetaDataClass</Name>
				<Source><![CDATA[
    private str ValidateMetaDataClass(str className, str formatId)
    {
        TreeNode tnode2Enum;
        ;

        tnode2Enum = TreeNode::findNode('Classes');
        tnode2Enum = tnode2Enum.AOTfindChild(className);

        if (tnode2Enum == null)
        {
            return strFmt("@SKS1022", formatId);
        }
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>importFormatDetails</Name>
				<Source><![CDATA[
    public void importFormatDetails()
    {
        str                             metadataFormatClass;
        str                             retMsg;
        SysDictClass                    obj;
        Object                          classInstance;

        if (SKS_EFT_FileFormat.FormatGroupCodeSource == SKS_EB_CodeSource::D365)
        {
            metadataFormatClass = strReplace('SKS_EFT_FormatMetadata_' + sks_EFT_FileFormat.FormatGroup, '-', '_');
            retMsg = this.ValidateMetaDataClass(metadataFormatClass, sks_EFT_FileFormat.FormatId);
        
            if (retMsg)
            {
                error(retMsg);
            }
            else
            {
                obj = new SysDictClass(className2Id(metadataFormatClass));
                classInstance = obj.makeObject(); // Instantiate class
            
                obj.callObject('importFormatDetails', classInstance, sks_EFT_FileFormat.FormatId, true);
            }
        }
        else
        {
            SKS_EFT_BankFabricMetadata::loadMetaDataSingleFormat(sks_EFT_FileFormat.FormatGroup, sks_EFT_FileFormat.FormatGroupVersion, sks_EFT_FileFormat.FormatGroupDataContractVersion, sks_EFT_FileFormat.FormatId, sks_EFT_FileFormat.APIFileFormatType);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatSourceCodeChanged</Name>
				<Source><![CDATA[
    public  boolean formatSourceCodeChanged()
    {
        boolean                                 sourceCodeChanged;
        //boolean                                 updateMetaData;
        str                                     metadataFormatClass;
        str                                     retMsg;
        str                                     formatVersion;
        int                                     counter;
        boolean                                 formatGroupVerDiff, formatGroupNewVer;
        container                               conFormatGrp;
        SysDictClass                            obj;
        Object                                  classInstance;
        SKG_File.Models.SKGFormatMetadataGroup  formatGroup;
        SKG_File.Models.SKGFormatMetadata       locFormatMetadata;

        if (SKS_EFT_FileFormat.FormatGroupCodeSource == SKS_EB_CodeSource::D365)
        {
            metadataFormatClass = strReplace('SKS_EFT_Format_' + sks_EFT_FileFormat.FormatGroup, '-', '_');
            retMsg = this.ValidateMetaDataClass(metadataFormatClass, sks_EFT_FileFormat.FormatId);
            if (retMsg)
            {
                error(retMsg);
                sourceCodeChanged = true;
            }
            else
            {
                
                obj = new SysDictClass(className2Id(metadataFormatClass));
                classInstance = obj.makeObject(); // Instantiate class
            
                formatVersion = obj.callObject('getFormatVersion', classInstance);

                formatGroupVerDiff = (formatVersion == sks_EFT_FileFormat.FormatGroupVersion? false : true);
                formatGroupNewVer = (str2Int64(formatVersion) >= str2Int64(sks_EFT_FileFormat.FormatGroupVersion)? true : false);
                formatGroupNewVer = true;

                if (formatGroupNewVer)
                {
                    conFormatGrp = [sks_eft_fileformat.FormatGroup,sks_eft_fileformat.FormatId,sks_eft_fileformat.FormatGroupCodeSource,'',formatGroupVerDiff];

                    SysOperationSandbox::callStaticMethod(classNum(SKS_Import_EFTFormats),
                    staticMethodStr(SKS_Import_EFTFormats, ChangeFormatGroupCodeSource),
                    conFormatGrp,
                    "@SKS:SKGEFTimportRefreshFileFmt",
                    "@SKS:SKSEFTImportRefreshComplete");

                    SKS_EFT_FileFormat_ds.reread();
                    info(strFmt("@SKS:SKGFormatSCChanged",'D365'));
                    sourceCodeChanged = true;
                }
                //else
                //{
                //   // error(strFmt("@SKS:SKGFormatSCNotNew",'Bankfabric','D365'));
                //  //  sourceCodeChanged = false;
                //}

               
            }
        }
        else
        {
            locFormatMetadata = SKS_EFT_BankFabricMetadata::getBFLList(sks_EFT_FileFormat.FormatGroup, sks_EFT_FileFormat.APIFileFormatType);
            if(locFormatMetadata.SKGFormatMetadataGroups != null)
            {
                counter = locFormatMetadata.SKGFormatMetadataGroups.get_count();
            }
            if (counter > 0)
            {
                formatGroup = locFormatMetadata.SKGFormatMetadataGroups.get_item(0);
                formatGroupVerDiff = (formatGroup.formatGroupVersion == sks_eft_fileformat.FormatGroupVersion ? false : true);
                formatGroupNewVer = (str2Int64(formatGroup.formatGroupVersion) >= str2Int64(sks_EFT_FileFormat.FormatGroupVersion)? true : false);

                if (formatGroupNewVer)
                {
                    container   conFromatGroup = [sks_eft_fileformat.FormatGroup,sks_eft_fileformat.FormatId,sks_eft_fileformat.FormatGroupCodeSource,formatGroup.dataContractVersion,formatGroupVerDiff];

                    SysOperationSandbox::callStaticMethod(classNum(SKS_Import_EFTFormats),
                    staticMethodStr(SKS_Import_EFTFormats, ChangeFormatGroupCodeSource),
                    conFromatGroup,
                    "@SKS:SKGEFTimportRefreshFileFmt",
                    "@SKS:SKSEFTImportRefreshComplete");

                    SKS_EFT_FileFormat_ds.reread();
                    info(strFmt("@SKS:SKGFormatSCChanged", 'BankFabric'));
                    sourceCodeChanged = true;
                }
                else
                {
                    error(strFmt("@SKS:SKGFormatSCNotNew",'D365','BankFabric library'));
                    sourceCodeChanged = false;
                }
            }
            else
            {
                SKS_EB_FileStorage  lSKS_EB_FileStorage;
                select firstonly lSKS_EB_FileStorage;
                if(lSKS_EB_FileStorage.StorageOption_APEFTFXDD == SKS_EB_BankIntegOptWithNoLicense::BankFabricEnumValue) // Message for BankFabric
                {
                    error(strFmt("@SKS:FormatNotFoundBankFabric", SKS_EFT_FileFormat.FormatGroup));
                }
                else // Message for FileHub
                {
                    error(strFmt("@SKS:FormatNotFoundFileHub", SKS_EFT_FileFormat.FormatGroup));
                }

                sourceCodeChanged = false;
            }
        }
 
        return sourceCodeChanged;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ValidateClass</Name>
				<Source><![CDATA[
    public str ValidateClass(str className, str formatId)
    {
        TreeNode tnode2Enum;
        ;

        tnode2Enum = TreeNode::findNode('Classes');
        tnode2Enum = tnode2Enum.AOTfindChild(className);

        if (tnode2Enum == null)
        {
            return strFmt("@SKS2647", formatId);
        }
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrode method because TAS needs to show an infolog if no records load into form.
    /// Didn't put this in ExecuteQuery method because only want the message to show once at form load, not on query refreshes.
    /// </summary>
    public void run()
    {
        super();

        if (element.args().menuItemName() != menuItemDisplayStr(SKS_EFT_APIOutboundFormat)) // Skip if API since this has different setup in BankFabric
        {
            int numOfDSRecs;
            numOfDSRecs = SKS_EFT_FileFormat_ds.numberOfRowsLoaded();
            if(numOfDSRecs == 0)  // If no records loaded, give message
            {
                SKS_EB_FileStorage  lSKS_EB_FileStorage;
                select firstonly lSKS_EB_FileStorage;
                if(lSKS_EB_FileStorage.StorageOption_APEFTFXDD == SKS_EB_BankIntegOptWithNoLicense::BankFabricEnumValue) // Message for BankFabric
                {
                    Box::warning("@SKS:EmptyFormatBankFabric", "@SKS311");
                }
                else // Message for FileHub
                {
                    Box::warning("@SKS:EmptyFormatFileHub", "@SKS311");
                }

            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>SKS_EFT_FileFormat</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();

            if(element.args().callerName()   ==   menuItemDisplayStr(CustPaymMode))
            {
                gCustPaymModeTable = element.args().record();

                if(gCustPaymModeTable.SKS_EFT_FormatId)
                {
                    this.query().dataSourceTable(tableNum(SKS_EFT_FileFormat)).addRange(fieldNum(SKS_EFT_FileFormat,UseWithCustomers)).value(queryValue(NoYes::Yes));
                }
                else
                {
                    this.query().dataSourceTable(tableNum(SKS_EFT_FileFormat)).addRange(fieldNum(SKS_EFT_FileFormat,UseWithCustReimbursements)).value(queryValue(NoYes::Yes));
                }
            }
            else if(element.args().callerName()     ==   menuItemDisplayStr(VendpaymMode))
            {
                this.query().dataSourceTable(tableNum(SKS_EFT_FileFormat)).addRange(fieldNum(SKS_EFT_FileFormat,UseWithVendors)).value(queryValue(NoYes::Yes));
            }
            else if (element.args().parmEnum() == SKS_EFT_Module::AR)
            {
                this.query().dataSourceTable(tableNum(SKS_EFT_FileFormat)).addRange(fieldNum(SKS_EFT_FileFormat,UseWithCustomers)).value(queryValue(NoYes::Yes));
            }
            else if (element.args().parmEnum() == SKS_EFT_Module::BTB)
            {
                this.query().dataSourceTable(tableNum(SKS_EFT_FileFormat)).addRange(fieldNum(SKS_EFT_FileFormat,UseWithBanktoBank)).value(queryValue(NoYes::Yes));
            }
            else if (element.args().parmEnum() == SKS_EFT_Module::CNP)
            {
                this.query().dataSourceTable(tableNum(SKS_EFT_FileFormat)).addRange(fieldNum(SKS_EFT_FileFormat,UseWithCustReimbursements)).value(queryValue(NoYes::Yes));
            }
            else
            {
                this.query().dataSourceTable(tableNum(SKS_EFT_FileFormat)).addRange(fieldNum(SKS_EFT_FileFormat,UseWithVendors)).value(queryValue(NoYes::Yes));
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            element.enablePaymSpecButton();
            element.checkformatversion();
            element.enableEffectiveDateMethodComboBox();

            if(SKS_EFT_FileFormat.EDI)
            {
                SKS_EFT_EDI820.enabled(true);
            }
            else
            {
                SKS_EFT_EDI820.enabled(false);
            }

            SKS_EFT_FileFormat_PayDateIsEffDate.payDateIsEffDate_chk();
            SKS_EFT_FileFormat_BTBPayDateIsEffDate.BTBEffDateOptions_chk();

            ret = super();
            element.enableEffectiveDaysOffset();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>dataContractVersions</Name>
						<Source><![CDATA[
        /// <summary>
        /// Display method for TAS version and data contracts supported
        /// </summary>
        [SysClientCacheDataMethod]
        public display SKS_EFT_Description dataContractVersions()
        {
            SKS_PP_Setup lSKS_PP_Setup;
            select firstonly RegVersion from lSKS_PP_Setup;

            System.Text.StringBuilder sb = new System.Text.StringBuilder();
            container conVersions;

            DictClass dictClass;
            List listSpecifications;
            ListEnumerator listEnumerator;
            ClassId SKS_EFT_BankFabricPaymentClassId = classNum(SKS_EFT_BankFabricPayment);

            listSpecifications = new DictClass(SKS_EFT_BankFabricPaymentClassId).extendedBy();
            listEnumerator = listSpecifications.getEnumerator();
            sb.Append(lSKS_PP_Setup.RegVersion);
            sb.Append('/');

            while (listEnumerator.moveNext())
            {
                dictClass = new DictClass(listEnumerator.current());

                if (dictClass && !dictClass.isAbstract())
                {
                    conVersions += strReplace(strReplace(dictClass.name(), 'SKS_EFT_BankFabricPayment_',''),'_','.');
                }
            }
            // Sort the container
            str temp1;
            str temp2;
            int i;
            int j;

            for (i = 1; i <= conlen(conVersions); i++)
            {
                for (j = i + 1; j <= conlen(conVersions); j++)
                {
                    temp1 = conpeek(conVersions, j);
                    temp2 = conpeek(conVersions, i);

                    if (temp2 < temp1)
                    {
                        conVersions = condel(conVersions, j, 1);
                        conVersions = conins(conVersions, j, temp2);
                        conVersions = condel(conVersions, i, 1);
                        conVersions = conins(conVersions, i, temp1);
                    }
                }
            }

            for (i = 1; i <= conlen(conVersions); i++)
            {
                sb.Append(conpeek(conVersions, i));
                if(i != conlen(conVersions))
                {
                    sb.Append(',');
                }
            }
            return sb.ToString();
        }

]]></Source>
					</Method>
					<Method>
						<Name>dispalyFormatGroupVersion</Name>
						<Source><![CDATA[
        /// <summary>
        ///  18744 - Add periods in format group
        /// </summary>
        [SysClientCacheDataMethod]        
        public display SKS_EB_Version dispalyFormatGroupVersion()
        {
            str ver = SKS_EFT_FileFormat.FormatGroupVersion;

            if(strLen(ver) == 8)
            {
                // split string into separate characters
                container con;
                while(strLen(ver) > 0)
                {
                    con += subStr(ver, 1, 1);
                    ver = subStr(ver, 2, strLen(ver));
                }

                // add periods
                con = conIns(con,5,'.');
                con = conIns(con,8,'.');

                // convert back to string 
                ver = strRem(con2str(con), ',');                
            }

            return ver; 
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void executeQuery()
        {
            QueryBuildDataSource qbds = this.query().dataSourceTable(tableNum(SKS_EFT_FileFormat));
            //qbds.clearRanges();

            if (element.args().menuItemName() == menuItemDisplayStr(SKS_EFT_APIOutboundFormat))
            {
                qbds.addRange(fieldNum(SKS_EFT_FileFormat, APIFileFormatType)).value(queryValue(SKS_EFT_APIFormatType::API));
            }
            else
            {
                qbds.addRange(fieldNum(SKS_EFT_FileFormat, APIFileFormatType)).value(queryValue(SKS_EFT_APIFormatType::File));
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>EffectiveDateMethod</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.enableEffectiveDaysOffset();
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            /// Selection of EffectiveDateMethod validations
            /// </summary>
            /// <returns>True or False</returns>
            public boolean validate()
            {
                boolean ret;
            
                ret = super();

                if(SKS_EFT_FileFormat.EffectiveDateMethod == SKS_EFT_EffectiveDateMethod::PaymentJournalPostingDate && SKS_EFT_FileFormat.SupportsMultipleEffectiveDates == NoYes::No)
                {
                     error("@SKS:SKGPaymentPostingDateValidation");
                     ret = false;
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>FormatGroupCodeSource</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            /// validate method
            /// </summary>
            /// <returns>
            /// boolean
            /// </returns>
            public boolean validate()
            {
                boolean ret;
        
                ret = super();

                if (!element.formatSourceCodeChanged())
                {   
                    SKS_EFT_FileFormat.FormatGroupCodeSource = SKS_EFT_FileFormat.orig().FormatGroupCodeSource;
                }    
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InboundFileGroupId</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                SKS_EFT_Setup lSKS_EFT_Setup;

                boolean ret;

                ret = super();

                if(ret)
                {
                    if(SKS_EFT_FileFormat.InboundFileGroupId != '')
                    {
                        select firstonly ModAPEFT from lSKS_EFT_Setup;

                        if(!lSKS_EFT_Setup.ModAPEFT)
                        {
                            error("@SKS2887");
                            ret = false;
                        }
                    }
                    else
                    {
                        SKS_EB_CommProcess lSKS_EB_CommProcess;
                        select firstonly RecId from lSKS_EB_CommProcess where lSKS_EB_CommProcess.RelocEFTFormatId == SKS_EFT_FileFormat.FormatId;

                        if(lSKS_EB_CommProcess.RecId)
                        {
                            error("@SKS:SKGCannotRemoveInboundGroup");
                            ret = false;
                        }
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RemitDetailProcessing</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Update formats in other companies - //DevOps - 21456
            /// </summary>
            public void modified()
            {
                DialogButton    diagButton;

                super();

                if(SKS_EFT_FileFormat.RemitDetailProcessing == NoYes::Yes)
                {
                    diagButton = box::yesNo("@SKS:SKGRemitDetailDialog", DialogButton::Ok, "@SKS311");

                    SKS_EFT_FileFormat locSKS_EFT_FileFormat;
                    SKS_EFT_FileFormat lSKS_EFT_FileFormat, updateFileFormat;
                    container                   companiesCon;

                    if(SKS_PP_Setup::find().modMCFAPDD == NoYes::Yes && SKS_EFT_FileFormat.SupportsMultiCompany)
                    {
                        companiesCon = SKS_EB_VirtualCompany::getEFT_APMultiCompanies();
                    }
                    else
                    {
                        companiesCon += curExt();
                    }

                    while select crosscompany:companiesCon lSKS_EFT_FileFormat
                        where lSKS_EFT_FileFormat.FormatId == SKS_EFT_FileFormat.FormatId
                    {
                        changecompany(lSKS_EFT_FileFormat.company())
                        {
                            updateFileFormat = null;
                          
                            ttsbegin;
                            update_recordset updateFileFormat setting RemitDetailProcessing = NoYes::Yes
                                where updateFileFormat.FormatGroup == SKS_EFT_FileFormat.FormatGroup;
                            ttscommit;
                        }
                    }
                }
                else
                {
                    SKS_EFT_FileFormat locSKS_EFT_FileFormat;
                    SKS_EFT_FileFormat lSKS_EFT_FileFormat, updateFileFormat;
                    container                   companiesCon;

                    if(SKS_PP_Setup::find().modMCFAPDD == NoYes::Yes && SKS_EFT_FileFormat.SupportsMultiCompany)
                    {
                        companiesCon = SKS_EB_VirtualCompany::getEFT_APMultiCompanies();
                    }
                    else
                    {
                        companiesCon += curExt();
                    }

                    while select crosscompany:companiesCon lSKS_EFT_FileFormat 
                        where lSKS_EFT_FileFormat.FormatId == SKS_EFT_FileFormat.FormatId
                    {
                        changecompany(lSKS_EFT_FileFormat.company())
                        {
                            updateFileFormat = null;
                           
                            ttsbegin;
                            update_recordset updateFileFormat setting RemitDetailProcessing = NoYes::No
                                where updateFileFormat.FormatGroup == SKS_EFT_FileFormat.FormatGroup;
                            ttscommit;
                        }
                    }
                }

                SKS_EFT_FileFormat_ds.reread();
                SKS_EFT_FileFormat_ds.refresh();
                SKS_EFT_FileFormat_ds.research(true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Selected</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            ///
            /// </summary>
            /// <returns></returns>
            public boolean validate()
            {
                boolean ret;
                SKS_PP_Setup locSKS_PP_Setup;
                SKS_EFT_FileFormat locSKS_EFT_FileFormat;

                ret = super();

                //if not selected, don't validate
                if(!SKS_EFT_FileFormat.Selected)
                    return ret;
                //if this is selected in any other company, don't validate.  It has to be valid because it is already selected else where.
                select firstonly crosscompany locSKS_EFT_FileFormat
                    where locSKS_EFT_FileFormat.FormatId == SKS_EFT_FileFormat.FormatId
                        && locSKS_EFT_FileFormat.Selected == NoYes::Yes;

                if(!locSKS_EFT_FileFormat && ret)
                {
                    select firstonly EFTLicensedFormats from locSKS_PP_Setup;
                    If(SKS_EB_SysInfo::getEFTFormats() == locSKS_PP_Setup.EFTLicensedFormats && SKS_EFT_FileFormat.Selected == NoYes::Yes)
                    {
                        ret = false;
                        error(strFmt("@SKS:SKGLicensedFmtCntExceeded", int2str(locSKS_PP_Setup.EFTLicensedFormats)));
                    }
                }

                element.importFormatDetails();

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SKS_BTB_InboundFileGroupId</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            ///
            /// </summary>
            /// <returns></returns>
            public boolean validate()
            {
                SKS_EFT_InboundFileGroups lSKS_EFT_InboundFileGroups;
                SKS_EFT_InboundFileFormat lSKS_EFT_InboundFileFormat1;
                SKS_EFT_InboundFileFormat lSKS_EFT_InboundFileFormat2;
                SKS_EFT_InboundFileFormat lSKS_EFT_InboundFileFormat3;
                SKS_DD_Modules locSKS_DD_Modules;
                boolean ret;
                str errormsg;
        
                ret = super();

                if(SKS_EFT_FileFormat.SKS_BTB_InboundFileGroupId)
                {
                    if(SKS_EFT_FileFormat.SKS_BTB_FundTransferType == SKS_BTB_FundTransferType::Transfer_out)
                    {
                        locSKS_DD_Modules = SKS_DD_Modules::APEFT;
                        errormsg = 'selection validation should include inbound file groups that only contain formats that are APEFT or shared';
                    }
                    else if(SKS_EFT_FileFormat.SKS_BTB_FundTransferType == SKS_BTB_FundTransferType::Transfer_in)
                    {
                        locSKS_DD_Modules = SKS_DD_Modules::Directdebit;
                        errormsg = 'selection validation should include inbound file groups that only contain formats that are DD or shared';
                    }
                    //else if(SKS_EFT_FileFormat.SKS_BTB_FundTransferType == SKS_BTB_FundTransferType::BothInSameFile)
                    //{
                    //    locSKS_DD_Modules = SKS_DD_Modules::APEFT_DDSharedPath;
                    //    errormsg = 'selection validation should include inbound file groups that that are AP EFT+ and DD – shared path';
                    //}
                    else
                    {
                        locSKS_DD_Modules = SKS_DD_Modules::APEFT_DDSeparatePath;
                        errormsg = 'selection validation should include inbound file groups that that are AP EFT+ and DD – shared path or AP EFT+ and DD separate path';
                    }

                    select firstonly * from lSKS_EFT_InboundFileGroups where lSKS_EFT_InboundFileGroups.InboundFileGroupId == SKS_EFT_FileFormat.SKS_BTB_InboundFileGroupId;

                    if(lSKS_EFT_InboundFileGroups.InboundFormatId1)
                    {
                        select firstonly SKS_DD_Modules from lSKS_EFT_InboundFileFormat1 where lSKS_EFT_InboundFileFormat1.FormatId == lSKS_EFT_InboundFileGroups.InboundFormatId1 &&
                            (lSKS_EFT_InboundFileFormat1.SKS_DD_Modules == locSKS_DD_Modules ||
                            lSKS_EFT_InboundFileFormat1.SKS_DD_Modules == SKS_DD_Modules::APEFT_DDSharedPath);
                    }

                    if(lSKS_EFT_InboundFileGroups.InboundFormatId2)
                    {
                        select firstonly SKS_DD_Modules from lSKS_EFT_InboundFileFormat2 where lSKS_EFT_InboundFileFormat2.FormatId == lSKS_EFT_InboundFileGroups.InboundFormatId2 &&
                            (lSKS_EFT_InboundFileFormat2.SKS_DD_Modules == locSKS_DD_Modules ||
                            lSKS_EFT_InboundFileFormat2.SKS_DD_Modules == SKS_DD_Modules::APEFT_DDSharedPath);
                    }

                    if(lSKS_EFT_InboundFileGroups.InboundFormatId3)
                    {
                        select firstonly SKS_DD_Modules from lSKS_EFT_InboundFileFormat3 where lSKS_EFT_InboundFileFormat3.FormatId == lSKS_EFT_InboundFileGroups.InboundFormatId3 &&
                            (lSKS_EFT_InboundFileFormat3.SKS_DD_Modules == locSKS_DD_Modules ||
                            lSKS_EFT_InboundFileFormat3.SKS_DD_Modules == SKS_DD_Modules::APEFT_DDSharedPath);
                    }
                
                    if(lSKS_EFT_InboundFileFormat1 || lSKS_EFT_InboundFileFormat2 || lSKS_EFT_InboundFileFormat3)
                    {
                        ret = true;
                    }
                    else
                    {
                        ret = false;
                        error(errormsg);
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>SKS_EFT_FileFormatFields</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;

            ret = super();

            if(SKS_EFT_FileFormatFields.fieldtype == SKS_EFT_CodeFieldType::CodeLookup
                && SKS_EFT_FileFormatFields.CodeId == '')
            {
                error("@SKS2704");
                ret = false;
            }

            if(SKS_EFT_FileFormatFields.orig().UserUpdated == SKS_EFT_FileFormatFields.UserUpdated && SKS_EFT_FileFormatFields.UserUpdated == NoYes::No)
            {
                SKS_EFT_FileFormatFields.UserUpdated = NoYes::Yes;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.enabledisablefields();
            SKS_EFT_FileFormatFields_FixedValue.limitText(strLen(strRTrim(SKS_EFT_FileFormatFields.fixedmask)), AutoMode::Fixed); //SKS#DevOps:15574

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CodeId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            ///
            /// </summary>
            public void modified()
            {
                super();

                if(SKS_EFT_FileFormatFields.CodeId == '')
                {
                    SKS_EFT_FileFormatFields.DefaultCodeLookupValuesRecId = 0;
                }
                else
                {
                    if(SKS_EFT_FileFormatFields.FieldType != SKS_EFT_codefieldtype::CodeLookup)
                    {
                        error(strFmt("@SKS2673", SKS_EFT_codefieldtype::CodeLookup));
                        SKS_EFT_FileFormatFields.CodeId = '';
                    }
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DefaultCodeLookupValuesRecId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            ///
            /// </summary>
            public void modified()
            {
                SKS_EFT_BankAccountPaymLookup    lSKS_EFT_BankAccountPaymLookup;
                DialogButton    diagButton;

                
                super();

                diagButton = box::yesNo("@SKS:SKSEFTUpdateBankAccntValue", DialogButton::Ok, "@SKS311");

                if(diagButton == DialogButton::Yes)
                {
                    ttsBegin;

                    while select forUpdate lSKS_EFT_BankAccountPaymLookup
                        where lSKS_EFT_BankAccountPaymLookup.FileFormatFieldsRecId == SKS_EFT_FileFormatFields.RecId
                    {
                        if(lSKS_EFT_BankAccountPaymLookup)
                        {
                            lSKS_EFT_BankAccountPaymLookup.CodeLookupValuesRecId = SKS_EFT_FileFormatFields.DefaultCodeLookupValuesRecId;
                            lSKS_EFT_BankAccountPaymLookup.update();
                        }
                    }

                    ttsCommit;
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>FieldType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            ///
            /// </summary>
            public void modified()
            {
                SKS_EFT_BankAccountPaymLookup    lSKS_EFT_BankAccountPaymLookup;
                super();

                ttsBegin;
                while select forUpdate lSKS_EFT_BankAccountPaymLookup
                    where  lSKS_EFT_BankAccountPaymLookup.FileFormatFieldsRecId == SKS_EFT_FileFormatFields.RecId
                {

                    if(SKS_EFT_FileFormatFields.FieldType == SKS_EFT_CodeFieldType::CodeLookup)
                    {
                        SKS_EFT_FileFormatFields.FixedValue = '';
                        lSKS_EFT_BankAccountPaymLookup.FixedValue = '';
                        SKS_EFT_FileFormatFields.FixedMask = '';
                    }
                    else if(SKS_EFT_FileFormatFields.FieldType == SKS_EFT_CodeFieldType::FixedValue)
                    {
                        SKS_EFT_FileFormatFields.CodeId = '';
                        lSKS_EFT_BankAccountPaymLookup.CodeLookupValuesRecId = 0;
                        SKS_EFT_FileFormatFields.DefaultCodeLookupValuesRecId = 0;
                    }

                    lSKS_EFT_BankAccountPaymLookup.update();
                }

                ttsCommit;

                element.enabledisablefields();

            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>FixedValue</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            ///
            /// </summary>
            public void modified()
            {
                SKS_EFT_BankAccountPaymLookup    lSKS_EFT_BankAccountPaymLookup;
                SKS_EFT_ARBankAccountPaymLookup  lSKS_EFT_ARBankAccountPaymLookup;
                SKS_EFT_BTBBankAccountPaymLookup    lSKS_EFT_BTBBankAccountPaymLookup;
                SKS_EFT_CNPBankAccountPaymLookup    lSKS_EFT_CNPBankAccountPaymLookup;
                DialogButton    diagButton; 

                
                super();

                diagButton = box::yesNo("@SKS:SKSEFTUpdateBankAccntValue", DialogButton::Ok, "@SKS311");

                if(diagButton == DialogButton::Yes)
                {
                    ttsBegin;

                    if (element.args().parmEnum() == SKS_EFT_Module::AP)
                    {
                        while select forUpdate lSKS_EFT_BankAccountPaymLookup
                            where lSKS_EFT_BankAccountPaymLookup.FileFormatFieldsRecId == SKS_EFT_FileFormatFields.RecId
                        {
                            if(lSKS_EFT_BankAccountPaymLookup)
                            {
                                lSKS_EFT_BankAccountPaymLookup.FixedValue = SKS_EFT_FileFormatFields.FixedValue;
                                lSKS_EFT_BankAccountPaymLookup.update();
                            }
                        }
                    }
                    else if (element.args().parmEnum() == SKS_EFT_Module::AR)
                    {
                        while select forUpdate lSKS_EFT_ARBankAccountPaymLookup
                            where lSKS_EFT_ARBankAccountPaymLookup.FileFormatFieldsRecId == SKS_EFT_FileFormatFields.RecId
                        {
                            if(lSKS_EFT_ARBankAccountPaymLookup)
                            {
                                lSKS_EFT_ARBankAccountPaymLookup.FixedValue = SKS_EFT_FileFormatFields.FixedValue;
                                lSKS_EFT_ARBankAccountPaymLookup.update();
                            }
                        }
                    }
                    else if (element.args().parmEnum() == SKS_EFT_Module::CNP)
                    {
                        while select forUpdate lSKS_EFT_CNPBankAccountPaymLookup
                            where lSKS_EFT_CNPBankAccountPaymLookup.FileFormatFieldsRecId == SKS_EFT_FileFormatFields.RecId
                        {
                            if(lSKS_EFT_CNPBankAccountPaymLookup)
                            {
                                lSKS_EFT_CNPBankAccountPaymLookup.FixedValue = SKS_EFT_FileFormatFields.FixedValue;
                                lSKS_EFT_CNPBankAccountPaymLookup.update();
                            }
                        }
                    }
                    else if (element.args().parmEnum() == SKS_EFT_Module::BTB)
                    {
                        while select forUpdate lSKS_EFT_BTBBankAccountPaymLookup
                            where lSKS_EFT_BTBBankAccountPaymLookup.FileFormatFieldsRecId == SKS_EFT_FileFormatFields.RecId
                        {
                            if(lSKS_EFT_BTBBankAccountPaymLookup)
                            {
                                lSKS_EFT_BTBBankAccountPaymLookup.FixedValue = SKS_EFT_FileFormatFields.FixedValue;
                                lSKS_EFT_BTBBankAccountPaymLookup.update();
                            }
                        }
                    }

                    ttsCommit;
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                if(SKS_EFT_FileFormatFields.FixedMask != '')
                {
                    if(subStr(strupr(SKS_EFT_FileFormatFields.fixedmask),0,1) == 'U')
                    {
                        SKS_EFT_FileFormatFields.fixedvalue = strupr(SKS_EFT_FileFormatFields.fixedvalue);
                    }
                    else if (subStr(SKS_EFT_FileFormatFields.fixedmask,0,1) == '9')
                    {
                        if (!element.isPPNumeric(SKS_EFT_FileFormatFields.fixedvalue))
                        {
                            Box::warning("@SKS204");
                            ret = false;
                        }
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>FormatRefresh</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///Import or Refresh Formats
        /// </summary>
        public void clicked()
        {
            super();
            container   conFromatGroup = [sks_eft_fileformat.FormatGroup,sks_eft_fileformat.FormatId,sks_eft_fileformat.FormatGroupCodeSource,sks_eft_fileformat.APIFileFormatType];

            SysOperationSandbox::callStaticMethod(classNum(SKS_Import_EFTFormats),
                staticMethodStr(SKS_Import_EFTFormats, ImportFormatGroup), //ImportFormatGroupAllCompanies),
                conFromatGroup,
                "@SKS:SKGEFTimportRefreshFileFmt",
                "@SKS:SKSEFTImportRefreshComplete");

            SKS_EFT_FileFormat_ds.reread();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AddBFLFormat</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// AddBFLFormat button clicked method
        /// Import refresh file formats
        /// </summary>
        public void clicked()
        {
            super();

            container   conMetaDataImportType = [SKS_EB_CodeSource::BankFabric, SKS_EFT_APIFormatType::File];

            SysOperationSandbox::callStaticMethod(classNum(SKS_Import_EFTFormats),
                staticMethodStr(SKS_Import_EFTFormats, importEFTFormatDataAllCompanies),
                conMetaDataImportType,
                "@SKS:SKGEFTimportRefreshFileFmt",
                "@SKS:SKSEFTImportRefreshComplete");

            SKS_EFT_FileFormat_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AddD365Format</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// AddD365Format button clicked method
        /// Import refresh file formats
        /// </summary>
        public void clicked()
        {
            SKS_EFT_FileFormat lSKS_EFT_FileFormat;
            select firstonly crosscompany FormatGroupCodeSource from lSKS_EFT_FileFormat
                where lSKS_EFT_FileFormat.FormatGroupCodeSource == SKS_EB_CodeSource::D365;
            if(!lSKS_EFT_FileFormat)
            {
                DialogButton diagBut = Box::okCancel(
                "@SKS:FormatAddD365Question",
                DialogButton::Cancel,
                "@SKS311");
                if  (diagBut == DialogButton::Cancel)
                {
                    return;
                }
            }

            super();

            container   conMetaDataImportType = [SKS_EB_CodeSource::D365];

            SysOperationSandbox::callStaticMethod(classNum(SKS_Import_EFTFormats),
                staticMethodStr(SKS_Import_EFTFormats, importEFTFormatDataAllCompanies),
                conMetaDataImportType,
                "@SKS:SKGEFTimportRefreshFileFmt",
                "@SKS:SKSEFTImportRefreshComplete");

            SKS_EFT_FileFormat_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AddAPIs</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// AddAPIs button clicked method
        /// Import refresh API formats
        /// </summary>
        public void clicked()
        {
            super();

            container   conMetaDataImportType = [SKS_EB_CodeSource::BankFabric, SKS_EFT_APIFormatType::API];

            SysOperationSandbox::callStaticMethod(classNum(SKS_Import_EFTFormats),
                staticMethodStr(SKS_Import_EFTFormats, importEFTFormatDataAllCompanies),
                conMetaDataImportType,
                "@SKS:SKGEFTimportRefreshFileFmt",
                "@SKS:SKSEFTImportRefreshComplete");

            SKS_EFT_FileFormat_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_FileFormat_Selected1</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {

            super();

            element.enablePaymSpecButton();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
            SKS_PP_Setup    sks_pp_setup;
            SKS_EFT_FileFormat  sksFileFormat;
            boolean D365Format = true;
            ;

            ret = super();

            if (this.checked() == NoYes::Yes)
            {
                select firstonly EFTLicensedFormats from sks_pp_setup;
                select count(RecId) from sksFileFormat where sksFileFormat.Selected == NoYes::Yes;

                if(sks_pp_setup.EFTLicensedFormats < (sksFileFormat.RecId + 1))
                {
                    error("@SKS1443");
                    ret = false;
                }

                if(ret && SKS_EFT_FileFormat.FormatGroupCodeSource == SKS_EB_CodeSource::D365 && SKS_EFT_FileFormat.APIFileFormatType == SKS_EFT_APIFormatType::File)
                {
                    //See if this format group is selected in any legal entity and has code source as D365
                    SKS_EFT_FileFormat lSKS_EFT_FileFormat;
                    select firstonly crosscompany FormatGroup, FormatGroupCodeSource, Selected from lSKS_EFT_FileFormat where
                        lSKS_EFT_FileFormat.FormatGroup == SKS_EFT_FileFormat.FormatGroup &&
                        lSKS_EFT_FileFormat.Selected == NoYes::Yes && 
                        lSKS_EFT_FileFormat.FormatGroupCodeSource == SKS_EB_CodeSource::D365;

                    if(!lSKS_EFT_FileFormat) // If format group not selected as D365 see if it is setup as BFL in FileHub/BankFabric
                    {
                        SKG_File.Models.SKGFormatMetadata locFormatMetadata = SKS_EFT_BankFabricMetadata::getBFLList(SKS_EFT_FileFormat.FormatGroup, SKS_EFT_APIFormatType::File);
                        if(locFormatMetadata.SKGFormatMetadataGroups != null)
                        {
                            int numrecords = locFormatMetadata.SKGFormatMetadataGroups.get_count();
                            if(numrecords == 1) //If setup in FileHub/BankFabric change the code source to BFL
                            {
                                SKG_File.Models.SKGFormatMetadataGroup formatGroup = locFormatMetadata.SKGFormatMetadataGroups.get_item(0);
                                if(str2Int64(formatGroup.formatGroupVersion) >= str2Int64(SKS_EFT_FileFormat.FormatGroupVersion))
                                {
                                    SKS_EFT_FileFormat.FormatGroupCodeSource = SKS_EB_CodeSource::BankFabric;
                                    element.formatSourceCodeChanged();
                                    D365Format = false;
                                }
                            }

                        }
                    }
                    if(D365Format)
                    {
                        warning("@SKS:SKGD365FormatSelected");
                    }
                    else
                    {
                        info("@SKS:SKGD365FormatSelectChanged");
                    }
                }
            }
            else if(element.formatInUse())
            {
                ret = false;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_FileFormat_MastAcctList</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            SKS_EFT_VendorPaym   lsks_eft_vendorpaym;
            boolean ret;

            ret = super();

            ttsBegin;

            if(SKS_EFT_FileFormat.MastAcctList == NoYes::Yes)
            {
                while select forupdate FormatId, MalStatus from lsks_eft_vendorpaym where lsks_eft_vendorpaym.FormatId == SKS_EFT_FileFormat.FormatId
                {
                    lsks_eft_vendorpaym.malstatus = SKS_EFT_MALStatus::New;
                    lsks_eft_vendorpaym.update();
                }
            }
            else if(SKS_EFT_FileFormat.MastAcctList == NoYes::No)
            {
                while select forUpdate FormatId, MalStatus from lsks_eft_vendorpaym where lsks_eft_vendorpaym.FormatId == SKS_EFT_FileFormat.FormatId
                {
                    lsks_eft_vendorpaym.malstatus = SKS_EFT_MALStatus::NotApplic;
                    lsks_eft_vendorpaym.update();
                }
            }

            ttsCommit;

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
            str mReturnMsg;
            str formatname;

            ret = super();

            if(ret)
            {
                if(SKS_EFT_FileFormat_MastAcctList.value() == NoYes::Yes)
                {
                    formatname = strReplace('SKS_EFT_MAL_' + sks_eft_FileFormat.FormatId, '-', '_');
                    mReturnMsg = element.ValidateClass(formatname, sks_eft_FileFormat.FormatId);
                    if(mReturnMsg != '') //errors were found
                    {
                        error(mReturnMsg);
                        ret = false;
                    }
                }
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_FileFormat_PayDateIsEffDate</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            this.payDateIsEffDate_chk();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>payDateIsEffDate_chk</Name>
						<Source><![CDATA[
        public void payDateIsEffDate_chk()
        {
            SKS_EFT_Setup sks_eft_setup;

            select firstonly AutoSendFileOnEffectiveDate from sks_eft_setup;

            if(SKS_EFT_FileFormat_PayDateIsEffDate.value())
            {
                SKS_EFT_FileFormat_ARDateOffset.label("@SKS1877");
                SKS_EFT_FileFormat_ARDateOffset.helpText("@SKS1878");
                SKS_EFT_FileFormat_SplitJournalByDate.enabled(false);
                SKS_EFT_FileFormat.SplitJournalByDate = NoYes::No;
                SKS_EFT_FileFormat_EffectiveDateOffsetPaymSpec.enabled(false);
                SKS_EFT_FileFormat.EffectiveDateOffsetPaymSpec = NoYes::No;
                SKS_EFT_FileFormat.update();

                if(sks_eft_setup.AutoSendFileOnEffectiveDate == NoYes::Yes)
                {
                    SKS_EFT_FileFormat_ARDateOffset.enabled(false);
                    SKS_EFT_FileFormat.ARDateOffset = 0;
                    SKS_EFT_FileFormat.update();
                }
            }
            else
            {
                SKS_EFT_FileFormat_ARDateOffset.enabled(true);
                SKS_EFT_FileFormat_ARDateOffset.label("@SKS1879");
                SKS_EFT_FileFormat_ARDateOffset.helpText("@SKS1880");
                SKS_EFT_FileFormat_SplitJournalByDate.enabled(true);
                SKS_EFT_FileFormat_EffectiveDateOffsetPaymSpec.enabled(true);
                SKS_EFT_FileFormat.update();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_FileFormat_EffectiveDateOffsetPaymSpec</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Modified method
        /// </summary>
        /// <returns>True or False </returns>
        public boolean modified()
        {
            boolean ret;
            SKS_EFT_FileFormatPaymSpec SKS_EFT_FileFormatPaymSpec;
    
            ret = super();

            if(SKS_EFT_FileFormat_EffectiveDateOffsetPaymSpec.value())
            {
                SKS_EFT_FileFormat.ARDateOffset = 0;
                SKS_EFT_FileFormat_ARDateOffset.enabled(false);
                SKS_EFT_FileFormat.SplitJournalByDate = NoYes::No;
                SKS_EFT_FileFormat_SplitJournalByDate.enabled(false);

                ttsBegin;
                while select forUpdate  SKS_EFT_FileFormatPaymSpec
                    where  SKS_EFT_FileFormatPaymSpec.FormatId == SKS_EFT_FileFormat.FormatId
                {
                    SKS_EFT_FileFormatPaymSpec.SelectByPaymentDate = NoYes::No;
                    SKS_EFT_FileFormatPaymSpec.SamePaymentDate = NoYes::No;
                    SKS_EFT_FileFormatPaymSpec.update();
                }

                ttsCommit;
            }
            else
            {
                SKS_EFT_FileFormat_ARDateOffset.enabled(true);
                SKS_EFT_FileFormat_SplitJournalByDate.enabled(true);

                ttsBegin;
                while select forUpdate  SKS_EFT_FileFormatPaymSpec
                    where  SKS_EFT_FileFormatPaymSpec.FormatId == SKS_EFT_FileFormat.FormatId
                {
                    SKS_EFT_FileFormatPaymSpec.AREffectiveDateOffset = 0;
                    SKS_EFT_FileFormatPaymSpec.update();
                }

                ttsCommit;
            }
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_FileFormat_BTBPayDateIsEffDate</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
    
            ret = super();
    
            this.BTBEffDateOptions_chk();
    
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>BTBEffDateOptions_chk</Name>
						<Source><![CDATA[
        public void BTBEffDateOptions_chk()
        {
            if(SKS_EFT_FileFormat_BTBPayDateIsEffDate.value())
            {
                SKS_EFT_FileFormat_BTBDateOffset.label("@SKS1877");
                SKS_EFT_FileFormat_BTBDateOffset.helpText("@SKS1878");
                SKS_EFT_FileFormat.update();
            }
            else
            {
                SKS_EFT_FileFormat_BTBDateOffset.label("@SKS1879");
                SKS_EFT_FileFormat_BTBDateOffset.helpText("@SKS1880");
                SKS_EFT_FileFormat.update();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReferenceGroup</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            SKS_EB_BankCodeLookupValues  lSKS_EB_BankCodeLookupValues;
            SKS_EB_BankCodeLookup       lSKS_EB_Bankcodelookup;
            Args args;
            MenuFunction menuFunction;
            ;
        
            select firstonly codeid from lSKS_EB_BankCodeLookupValues where lSKS_EB_BankCodeLookupValues.recid == this.value();
            select firstonly lSKS_EB_Bankcodelookup where lSKS_EB_Bankcodelookup.codeid == lSKS_EB_BankCodeLookupValues.codeid &&
                lSKS_EB_Bankcodelookup.FormatGroup == SKS_EFT_FileFormatFields.FormatGroup;
        
        
            if (!lSKS_EB_Bankcodelookup)
            {
                return;
            }
        
            args = new Args();
            args.caller(element);
            args.record(lSKS_EB_Bankcodelookup);
            menuFunction = new MenuFunction(menuitemdisplaystr(SKS_EB_BankCodeLookupValues), MenuItemType::Display);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        public Common lookupReference()
        {
            SKS_EB_BankCodeLookupValues   codeLookupValues;
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource;
            QueryBuildRange         queryBuildRange, queryBuildRange1;

            // Create an instance of SysTableLookup where 'this' is the current form control
            SysReferenceTableLookup sysTableLookup = SysReferenceTableLookup::newParameters(tableNum(SKS_EB_BankCodeLookupValues), ReferenceGroup, true);
            ;
            query.allowCrossCompany(true);

            // Add fields to be shown in the lookup form
            sysTableLookup.addLookupField(fieldNum(SKS_EB_BankCodeLookupValues, DisplayValue));

            // Limit and arrange the data selection
            queryBuildDataSource = query.addDataSource(tableNum(SKS_EB_BankCodeLookupValues));
            queryBuildRange = queryBuildDataSource.addRange(fieldNum(SKS_EB_BankCodeLookupValues, CodeId));
            queryBuildRange1 = queryBuildDataSource.addRange(fieldNum(SKS_EB_BankCodeLookupValues, FormatGroup));
            queryBuildRange.value(queryValue(SKS_EFT_FileFormatFields.CodeId));
            queryBuildRange1.value(queryValue(SKS_EFT_FileFormatFields.FormatGroup));
            sysTableLookup.parmQuery(query);
            sysTableLookup.parmUseLookupValue(false);

            // Perform the lookup
            codeLookupValues = sysTableLookup.performFormLookup();

            return codeLookupValues;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_FileFormatFields_FixedMask</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            SKS_EFT_BankAccountPaymLookup    SKS_EFT_BankAccountPaymLookup;
            boolean ret;

            ret = super();

            ttsBegin;
            while select forUpdate SKS_EFT_BankAccountPaymLookup
                where  SKS_EFT_BankAccountPaymLookup.FileFormatFieldsRecId == SKS_EFT_FileFormatFields.RecId
            {
                if(SKS_EFT_FileFormatFields.fixedvalue != '')
                {
                    SKS_EFT_FileFormatFields_FixedValue.limitText(strLen(strRTrim(SKS_EFT_FileFormatFields.fixedmask)), AutoMode::Fixed);
                }

                if(SKS_EFT_BankAccountPaymLookup)
                {
                    SKS_EFT_BankAccountPaymLookup.fixedvalue = SKS_EFT_FileFormatFields.fixedvalue;
                    SKS_EFT_BankAccountPaymLookup.update();
                }
            }

            ttsCommit;

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            if(SKS_EFT_FileFormatFields.FixedMask != '')
            {
                if(subStr(strupr(SKS_EFT_FileFormatFields.fixedmask),0,1) == 'U')
                {
                    SKS_EFT_FileFormatFields.fixedvalue = strupr(SKS_EFT_FileFormatFields.fixedvalue);
                }
                else if (subStr(SKS_EFT_FileFormatFields.fixedmask,0,1) == '9')
                {
                    if (!element.isPPNumeric(SKS_EFT_FileFormatFields.fixedvalue))
                    {
                        Box::warning("@SKS2703");
                        ret = false;
                    }
                }
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_FileFormat_InboundFileGroupId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource;

            // Create an instance of SysTableLookup where 'this' is the current form control
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(SKS_EFT_InboundFileGroups), this);
            ;

            // Add fields to be shown in the lookup form
            sysTableLookup.addLookupField(fieldNum(SKS_EFT_InboundFileGroups, InboundFileGroupID));

            // Limit and arrange the data selection
            queryBuildDataSource = query.addDataSource(tableNum(SKS_EFT_InboundFileGroups));

            queryBuildDataSource.clearRanges();

            if (element.args().menuItemName() == menuItemDisplayStr(SKS_EFT_APIOutboundFormat))
            {
                queryBuildDataSource.addRange(fieldNum(SKS_EFT_InboundFileGroups, SKS_EFT_APIFormatType)).value(queryValue(SKS_EFT_APIFormatType::API));
            }
            else
            {
                queryBuildDataSource.addRange(fieldNum(SKS_EFT_InboundFileGroups, SKS_EFT_APIFormatType)).value(queryValue(SKS_EFT_APIFormatType::File));
            }

            sysTableLookup.parmQuery(query);

            // Perform the lookup
            sysTableLookup.performFormLookup();

            // Don't call super() (commented out in the code)
            //   super()
        }

]]></Source>
					</Method>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// Display form that is bind to.
        /// </summary>
        public void jumpRef()
        {
            Args args =  new Args();

            SKS_EFT_InboundFileGroups inboundFileGroups;

            select firstonly inboundFileGroups
                    where inboundFileGroups.InboundFileGroupId == this.valueStr();

            if (element.args().menuItemName() == menuItemDisplayStr(SKS_EFT_APIOutboundFormat))
            {
                if (inboundFileGroups)
                {
                    MenuFunction menuFunction = new MenuFunction(menuItemDisplayStr(SKS_EFT_APIInboundFileGroups), MenuItemType::Display);

                    args.caller(element);
                    args.record(inboundFileGroups);
              
                    menuFunction.run(args);
                }
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_FileFormat_SKS_DD_InboundFileGroupId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        ///InboundGroupID lookup
        /// </summary>
        public void lookup()
        {
            //<SKS-begin>
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource;

            // Create an instance of SysTableLookup where 'this' is the current form control
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(SKS_EFT_InboundFileGroups), this);
            ;

            // Add fields to be shown in the lookup form
            sysTableLookup.addLookupField(fieldNum(SKS_EFT_InboundFileGroups, InboundFileGroupID));

            // Limit and arrange the data selection
            queryBuildDataSource = query.addDataSource(tableNum(SKS_EFT_InboundFileGroups));

            sysTableLookup.parmQuery(query);

            // Perform the lookup
            sysTableLookup.performFormLookup();

            // Don't call super() (commented out in the code)
            //   super()
            //</SKS-end>
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_FileFormat_SKS_BTB_InboundFileGroupId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        ///InboundGroupID lookup
        /// </summary>
        public void lookup()
        {
            //<SKS-begin>
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource;

            // Create an instance of SysTableLookup where 'this' is the current form control
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(SKS_EFT_InboundFileGroups), this);
            ;

            // Add fields to be shown in the lookup form
            sysTableLookup.addLookupField(fieldNum(SKS_EFT_InboundFileGroups, InboundFileGroupID));

            // Limit and arrange the data selection
            queryBuildDataSource = query.addDataSource(tableNum(SKS_EFT_InboundFileGroups));
            sysTableLookup.parmQuery(query);

            // Perform the lookup
            sysTableLookup.performFormLookup();

            // Don't call super() (commented out in the code)
            //   super()
            //</SKS-end>
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_FileFormat_SKS_CNP_InboundFileGroupId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        ///InboundGroupID lookup
        /// </summary>
        public void lookup()
        {
            //<SKS-begin>
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource;
    
            // Create an instance of SysTableLookup where 'this' is the current form control
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(SKS_EFT_InboundFileGroups), this);
            ;
    
            // Add fields to be shown in the lookup form
            sysTableLookup.addLookupField(fieldNum(SKS_EFT_InboundFileGroups, InboundFileGroupID));
    
            // Limit and arrange the data selection
            queryBuildDataSource = query.addDataSource(tableNum(SKS_EFT_InboundFileGroups));
            sysTableLookup.parmQuery(query);
    
            // Perform the lookup
            sysTableLookup.performFormLookup();
    
            // Don't call super() (commented out in the code)
            //   super()
            //</SKS-end>
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SKS_EFT_FileFormat</Name>
			<Table>SKS_EFT_FileFormat</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>APIFileFormatType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ARDateOffset</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BEDesc01</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BEDesc02</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BEMask01</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BEMask02</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BlockFill</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BTBDateOffset</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BTBPayDateIsEffDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyIdMask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyIdTitle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyNameMask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyNameTitle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CrLf</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DaysPriorToEffectiveDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EDI</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EffectiveDateMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EffectiveDateOffset</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EffectiveDateOffsetPaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EntryClassMask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EntryClassTitle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ExternalFormat</DataField>
					<Enabled>No</Enabled>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatGroupCodeSource</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>FormatGroupDataContractVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>FormatGroupVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImmDestMask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImmDestNameMask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImmDestNameTitle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImmDestTitle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImmOriginMask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImmOriginNameMask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImmOriginNameTitle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImmOriginTitle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InboundFileGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeCpnyCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeCpnyDebit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastEffectiveDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MastAcctList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NextDailyReset</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NextDailyResetDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NextFileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NextSequenceNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayDateIsEffDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PreNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrenoteDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProductVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecordLength</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemitDetailProcessing</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Selected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_BTB_FundTransferType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_BTB_InboundFileGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_CNP_InboundFileGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_DD_InboundFileGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SplitJournalByDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>SupportsMultiCompany</DataField>
					<Enabled>No</Enabled>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>SupportsMultipleEffectiveDates</DataField>
					<Enabled>No</Enabled>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TrimRecord</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TwoFileNameAddition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseAddenda</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseWithBanktoBank</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseWithCustomers</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseWithCustReimbursements</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseWithVendors</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WBank01Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WBank01Mask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WBank01Required</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WBank02Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WBank02Mask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WBank02Required</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WBank03Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WBank03Mask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WBank03Required</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WBank04Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WBank04Mask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WBank04Required</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>SKS_EFT_FileFormatFields</Name>
			<Table>SKS_EFT_FileFormatFields</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultCodeLookupValuesRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FieldType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileFormatRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedMask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatFieldId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Required</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TechNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UserUpdated</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>SKS_EFT_FileFormat</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SKS1279</Caption>
		<DataSource xmlns="">SKS_EFT_FileFormat</DataSource>
		<Pattern xmlns="">SimpleListDetails-Grid</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>PaymentSpec</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>PaymSpec</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>SKS_EFT_PaymentSpecifications</MenuItemName>
								<Text>@SKS1516</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>MoreInfo</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<Visible>No</Visible>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>sks_eft_moreInfo</MenuItemName>
								<Text>@SKS1507</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>SKS_EFT_ControlFiles</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1744830461</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>SKS_EFT_ControlFiles</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>SKS_EFT_EDI820</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048189</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>SKS_EFT_EDI820</MenuItemName>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonSeparatorControl">
								<Name>FormButtonSeparatorControl1</Name>
								<Type>ButtonSeparator</Type>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>FormatRefresh</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HelpText>@SKS:SKGRefreshFormatTip</HelpText>
								<Type>CommandButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@SKS:SKGRefreshFormat</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>AddUpdateFormat</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>MenuButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>UpdateExistingFormat</Name>
										<Type>CommandButton</Type>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<Text>@SKS:SKGUpdateExistingFormat</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>AddBFLFormat</Name>
										<HelpText>@SKS:SKGAddBFLFormatTip</HelpText>
										<Type>CommandButton</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SKS:SKGAddBFLFormat</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCommandButtonControl">
										<Name>AddD365Format</Name>
										<HelpText>@SKS:SKGAddD365FormatTip</HelpText>
										<Type>CommandButton</Type>
										<FormControlExtension
											i:nil="true" />
										<Text>@SKS:SKGAddD365Format</Text>
									</AxFormControl>
								</Controls>
								<Text>@SKS:SKGAddUpdateFormat</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>AddAPIs</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Button</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Text>@SKS:SKGAPIsAdd</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>300</Width>
				<WidthMode>Manual</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_EFT_FileFormat_Selected</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<BackgroundColor>WindowBackground</BackgroundColor>
								<DataField>Selected</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
								<Style>Checkbox</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_EFT_FileFormat_FormatId</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>FormatId</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_EFT_FileFormat_Description</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>Description</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>SKS_EFT_FileFormat_RecordLength</Name>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>RecordLength</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>SKS_EFT_FileFormat</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>Tabular</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>VSplitter</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1288490187</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<Style>SplitterVerticalContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>SKS_EFT_FileFormat_Selected1</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<BackgroundColor>WindowBackground</BackgroundColor>
						<DataField>Selected</DataField>
						<DataSource>SKS_EFT_FileFormat</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>SKS_EFT_FileFormat_FormatId1</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1073741823</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>FormatId</DataField>
						<DataSource>SKS_EFT_FileFormat</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>SKS_EFT_FileFormat_Description1</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>Description</DataField>
						<DataSource>SKS_EFT_FileFormat</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>SKS_EFT_FileFormat_RecordLength1</Name>
						<ElementPosition>1789569705</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<Type>Integer</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<DataField>RecordLength</DataField>
						<DataSource>SKS_EFT_FileFormat</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>TASandDCVersion</Name>
						<AllowEdit>No</AllowEdit>
						<HelpText>@SKS:SKGTasDcVersionHelp</HelpText>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<CacheDataMethod>Yes</CacheDataMethod>
						<DataMethod>dataContractVersions</DataMethod>
						<DataSource>SKS_EFT_FileFormat</DataSource>
						<Label>@SKS:SKGTasDcVersion</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1342177278</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>FormatGroup</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_EFT_FileFormat_FormatGroup</Name>
								<ElementPosition>143165576</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>FormatGroup</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_EFT_FileFormat_FormatGroupVersion</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<CacheDataMethod>Yes</CacheDataMethod>
								<DataMethod>dispalyFormatGroupVersion</DataMethod>
								<DataSource>SKS_EFT_FileFormat</DataSource>
								<Label>@SKS:SKGFmtGroupVersion</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SKS_EFT_FileFormat_FormatGroupCodeSource</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>FormatGroupCodeSource</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_EFT_FileFormat_FormatGroupDataContractVersion</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>FormatGroupDataContractVersion</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_EFT_FileFormat_RemitDetailProcessing</Name>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>RemitDetailProcessing</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SKS:SKGFormatGroupInfo</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>FileInfo</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>894784850</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>SKS_EFT_FileFormat_NextFileId</Name>
								<ElementPosition>429496728</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>NextFileId</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>SKS_EFT_FileFormat_NextSequenceNumber</Name>
								<ElementPosition>644245092</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>NextSequenceNumber</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_EFT_FileFormat_NextDailyReset</Name>
								<ElementPosition>858993456</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>NextDailyReset</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>SKS_EFT_FileFormat_PrenoteDays</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>PrenoteDays</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_EFT_FileFormat_TrimRecord</Name>
								<ElementPosition>1717986912</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>TrimRecord</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_EFT_FileFormat_IncludeCpnyDebit</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1760936584</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>IncludeCpnyDebit</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_EFT_FileFormat_IncludeCpnyCredit</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1782411420</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>IncludeCpnyCredit</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_EFT_FileFormat_PreNote</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1803886256</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>PreNote</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_EFT_FileFormat_MastAcctList</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1825361092</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>MastAcctList</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_EFT_FileFormat_BlockFill</Name>
								<ElementPosition>1846835928</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>BlockFill</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_EFT_FileFormat_CrLf</Name>
								<ElementPosition>1889785600</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>CrLf</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_EFT_FileFormat_UseAddenda</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1896943879</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>UseAddenda</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_EFT_FileFormat_SupportsMultiCompany</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>SupportsMultiCompany</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_EFT_FileFormat_ExternalFormats</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>CheckBox</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<DataField>ExternalFormat</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SKS_EFT_FileFormat_SKS_BTB_FundTransferType</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Enabled>No</Enabled>
								<Type>ComboBox</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<DataField>SKS_BTB_FundTransferType</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>APEffDateOptions</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1904102158</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormat_SupportsMultipleEffectiveDates</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>SupportsMultipleEffectiveDates</DataField>
										<DataSource>SKS_EFT_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_EFT_FileFormat_EffectiveDateMethod</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>EffectiveDateMethod</DataField>
										<DataSource>SKS_EFT_FileFormat</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>SKS_EFT_FileFormat_EffectiveDateOffset</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@SKS1880</HelpText>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>EffectiveDateOffset</DataField>
										<DataSource>SKS_EFT_FileFormat</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SKS1959</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AREffDateOptions</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1918418716</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormat_PayDateIsEffDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>PayDateIsEffDate</DataField>
										<DataSource>SKS_EFT_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormat_EffectiveDateOffsetPaymSpec</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EffectiveDateOffsetPaymSpec</DataField>
										<DataSource>SKS_EFT_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>SKS_EFT_FileFormat_ARDateOffset</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ARDateOffset</DataField>
										<DataSource>SKS_EFT_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormat_SplitJournalByDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SplitJournalByDate</DataField>
										<DataSource>SKS_EFT_FileFormat</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SKS1960</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BTBEffDateOptions</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1918418716</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormat_BTBPayDateIsEffDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BTBPayDateIsEffDate</DataField>
										<DataSource>SKS_EFT_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>SKS_EFT_FileFormat_BTBDateOffset</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>BTBDateOffset</DataField>
										<DataSource>SKS_EFT_FileFormat</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SKS1960</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SendFileTimingGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>SKS_EFT_FileFormat_DaysPriorToEffectiveDate</Name>
										<Type>Integer</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>DaysPriorToEffectiveDate</DataField>
										<DataSource>SKS_EFT_FileFormat</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SKS:SKGDDSendFileTimingGroup</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SKS773</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>CodeLookupBank</Name>
						<ElementPosition>1932735281</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>CodeLookupGrid</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatFields_FormatFieldId</Name>
										<ElementPosition>238609294</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FormatFieldId</DataField>
										<DataSource>SKS_EFT_FileFormatFields</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatFields_Description</Name>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Description</DataField>
										<DataSource>SKS_EFT_FileFormatFields</DataSource>
										<Mandatory>Yes</Mandatory>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatFields_Required</Name>
										<ElementPosition>954437176</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>Required</DataField>
										<DataSource>SKS_EFT_FileFormatFields</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_EFT_FileFormatFields_FieldType</Name>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FieldType</DataField>
										<DataSource>SKS_EFT_FileFormatFields</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatFields_CodeId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1193046470</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CodeId</DataField>
										<DataSource>SKS_EFT_FileFormatFields</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ReferenceGroup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1312351117</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>SKS_EFT_FileFormatFields</DataSource>
										<ReferenceField>DefaultCodeLookupValuesRecId</ReferenceField>
										<ReplacementFieldGroup>DefaultValue</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatFields_FixedValue</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1590728626</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FixedValue</DataField>
										<DataSource>SKS_EFT_FileFormatFields</DataSource>
										<FastTabSummary>No</FastTabSummary>
										<Label>@SKS:SKGEFTFixedDefaultValue</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatFields_FixedMask</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1869106135</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FixedMask</DataField>
										<DataSource>SKS_EFT_FileFormatFields</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatFields_TechNote</Name>
										<ElementPosition>2008294890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>TechNote</DataField>
										<DataSource>SKS_EFT_FileFormatFields</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatFields_UserUpdated</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>UserUpdated</DataField>
										<DataSource>SKS_EFT_FileFormatFields</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>SKS_EFT_FileFormatFields</DataSource>
								<MultiSelect>No</MultiSelect>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
						</Controls>
						<Caption>@SKS:SKGEFTCodeLookupBank</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>InboundFileInfo</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1342177277</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_EFT_FileFormat_InboundFileGroupId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>InboundFileGroupId</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SKS2713</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>SKS_DD_InboundFileInfo</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1342177277</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_EFT_FileFormat_SKS_DD_InboundFileGroupId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>SKS_DD_InboundFileGroupId</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SKS2713</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Information</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DestinationBank</Name>
								<ElementPosition>858993458</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>DBID</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SKS_EFT_FileFormat_ImmDestTitle</Name>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>ImmDestTitle</DataField>
												<DataSource>SKS_EFT_FileFormat</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SKS_EFT_FileFormat_ImmDestMask</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@SKS1508</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>ImmDestMask</DataField>
												<DataSource>SKS_EFT_FileFormat</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYS5468</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>DBName</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SKS_EFT_FileFormat_ImmDestNameTitle</Name>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>ImmDestNameTitle</DataField>
												<DataSource>SKS_EFT_FileFormat</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SKS_EFT_FileFormat_ImmDestNameMask</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>ImmDestNameMask</DataField>
												<DataSource>SKS_EFT_FileFormat</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYS7399</Caption>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<Caption>@SKS1302</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Originator</Name>
								<ElementPosition>1288490187</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>OID</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SKS_EFT_FileFormat_ImmOriginTitle</Name>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>ImmOriginTitle</DataField>
												<DataSource>SKS_EFT_FileFormat</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SKS_EFT_FileFormat_ImmOriginMask</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@SKS1508</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>ImmOriginMask</DataField>
												<DataSource>SKS_EFT_FileFormat</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYS5468</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>OName</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SKS_EFT_FileFormat_ImmOriginNameTitle</Name>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>ImmOriginNameTitle</DataField>
												<DataSource>SKS_EFT_FileFormat</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SKS_EFT_FileFormat_ImmOriginNameMask</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>ImmOriginNameMask</DataField>
												<DataSource>SKS_EFT_FileFormat</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYS7399</Caption>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<Caption>@SKS1303</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>Company</Name>
								<ElementPosition>1717986916</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>CID</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SKS_EFT_FileFormat_CompanyIdTitle</Name>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>CompanyIdTitle</DataField>
												<DataSource>SKS_EFT_FileFormat</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SKS_EFT_FileFormat_CompanyIdMask</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@SKS1508</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>CompanyIdMask</DataField>
												<DataSource>SKS_EFT_FileFormat</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYS5468</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>CName</Name>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Group</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SKS_EFT_FileFormat_CompanyNameTitle</Name>
												<ElementPosition>858993458</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>CompanyNameTitle</DataField>
												<DataSource>SKS_EFT_FileFormat</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>SKS_EFT_FileFormat_CompanyNameMask</Name>
												<ElementPosition>1288490187</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HelpText>@SKS1508</HelpText>
												<Type>String</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<DataField>CompanyNameMask</DataField>
												<DataSource>SKS_EFT_FileFormat</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@SYS7399</Caption>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<Caption>@SYS13342</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SKS32</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>SKS_BTB_InboundFileInfo</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1342177277</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_EFT_FileFormat_SKS_BTB_InboundFileGroupId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>SKS_BTB_InboundFileGroupId</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SKS2713</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>SKS_CNP_InboundFileInfo</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1342177277</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Visible>No</Visible>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_EFT_FileFormat_SKS_CNP_InboundFileGroupId</Name>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>SKS_CNP_InboundFileGroupId</DataField>
								<DataSource>SKS_EFT_FileFormat</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SKS2713</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>