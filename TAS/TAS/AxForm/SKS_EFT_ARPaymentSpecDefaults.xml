<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SKS_EFT_ARPaymentSpecDefaults</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SKS_EFT_ARPaymentSpecDefaults extends FormRun
{
    SKS_LB_Depositor mSKS_LB_Depositor;


}
]]></Source>
			</Method>
			<Method>
				<Name>isPPNumeric</Name>
				<Source><![CDATA[
    Public boolean isPPNumeric(str strValue)
    {
        Boolean   xppBool;
        System.Boolean netBool;
        Str matchPattern = '^[0-9]*$';
        System.Text.RegularExpressions.Match myMatch;
        new InteropPermission(InteropKind::ClrInterop).assert();
        myMatch = System.Text.RegularExpressions.Regex::Match(strValue,matchPattern);
        netBool = myMatch.get_Success();
        xppBool = netBool;
        CodeAccessPermission::revertAssert();
        Return xppBool;
    }

]]></Source>
			</Method>
			<Method>
				<Name>changePreNoteStatus</Name>
				<Source><![CDATA[
    void changePreNoteStatus()
    {
        SKS_EFT_FileFormat  sks_eft_fileformat;
        SKS_EFT_FileFormatPaymSpec  sks_eft_fileformatpaymspec;
        CustBankAccount custbankaccount;
        CustPaymModeTable   custpaymmodetable;
        ;
    
    
        select SKS_EFT_FormatID from custpaymmodetable where custpaymmodetable.PaymMode == SKS_EFT_CustomerPaym.PaymMode
        join prenote, formatid from sks_eft_fileformat where sks_eft_fileformat.FormatId == custpaymmodetable.SKS_EFT_FormatId
            && sks_eft_fileformat.PreNote == NoYes::Yes
        join prenote, formatid, paymspec from sks_eft_fileformatpaymspec
        where  sks_eft_fileformatpaymspec.FormatId == sks_eft_fileformat.FormatId
            && sks_eft_fileformatpaymspec.PaymSpec == sks_eft_customerpaym.PaymSpec
            && sks_eft_fileformatpaymspec.PreNote == NoYes::Yes;
    
        if(custpaymmodetable && SKS_EFT_Setup::IsPreNoteRequiredAR())
        {
    
            changeCompany(SKS_EFT_CustomerPaym.CustCompany)
            {
                select forupdate custbankaccount where custbankaccount.AccountID == sks_eft_customerpaym.CustBankAccountId
                && custbankaccount.CustAccount == sks_eft_customerpaym.CustAccount;
    
                if(custbankaccount.SKS_EFT_PreNoteStatus == SKS_EB_PreNoteStatus::NotApplicable)
                {
                    ttsbegin;
    
                    custBankAccount.SKS_EFT_PreNoteStatus = SKS_EB_PreNoteStatus::New;
                    custBankAccount.SKS_EFT_PreNoteDate = str2date('', 0);
                    custBankAccount.update();
    
                    ttscommit;
    
                    element.setBankAccountDetails();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
    
        if (!element.args().caller())
        {
            throw error("@SYS96590");
        }
        mSKS_LB_Depositor = element.args().record();

        IsVisibleValue.text("@SKS1863");
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBankAccountDetails</Name>
				<Source><![CDATA[
    void setBankAccountDetails()
    {
        CustBankAccount custBankAccount;
        ;
    
        changeCompany(mSKS_LB_Depositor.CustomerCompany)
        {
            select * from custBankAccount where custBankAccount.CustAccount == SKS_EFT_CustomerPaym.CustAccount
                && custBankAccount.AccountID == SKS_EFT_CustomerPaym.CustBankAccountId;
    
            BankCodeType.selection(enum2int(custBankAccount.BankCodeType));
            ACHBankTransit.text(custBankAccount.RegistrationNum);
            ACHAccountNumber.text(custBankAccount.AccountNum);
            SWIFTNo.text(custBankAccount.SWIFTNo);
            BankIBAN.text(custBankAccount.BankIBAN);
            ACHAccountType.selection(enum2int(custBankAccount.BankAccountType));
            ACHPreNoteStatus.selection(custBankAccount.SKS_EFT_PreNoteStatus);
            ACHApprovalDate.dateValue(custBankAccount.SKS_EFT_PreNoteDate);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMaskAndLengthValues</Name>
				<Source><![CDATA[
    void setMaskAndLengthValues()
    {
        CustPaymModeTable   custpaymmodetable;
        SKS_EFT_FileFormat  sks_eft_fileformat;
        ;
    
        select SKS_EFT_FormatID from custpaymmodetable where custpaymmodetable.PaymMode == SKS_EFT_CustomerPaym.PaymMode;
    
        if(custpaymmodetable)
        {
            select * from sks_eft_fileformat where sks_eft_fileformat.FormatId == custpaymmodetable.SKS_EFT_FormatId;
    
            /*
            //BE01
            SKS_EFT_CustomerPaym_BE01.label(sks_eft_fileformat.BEDesc01);
            element.setProperties(sks_eft_fileformat.BEMask01, SKS_EFT_CustomerPaym_BE01);
    
            //BE02
            SKS_EFT_CustomerPaym_BE02.label(sks_eft_fileformat.BEDesc02);
            element.setProperties(sks_eft_fileformat.BEMask02, SKS_EFT_CustomerPaym_BE02);
            */
    
    
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProperties</Name>
				<Source><![CDATA[
    void setProperties(str _maskValue, FormStringControl _formControl)
    {
        ;
    
        if(_maskValue)
        {
            _formControl.visible(true);
    
            if (substr(_maskValue, 0, 1) == 'U')
            {
                _formControl.changeCase(2);
            }
    
            _formControl.limitText(strLen(_maskValue));
        }
        else
        {
            _formControl.visible(false);
            _formControl.changeCase(0);
            _formControl.limitText(0, AutoMode::Auto);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisbleEnabled</Name>
				<Source><![CDATA[
    void setVisbleEnabled()
    {
        CustPaymModeTable   custpaymmodetable;
        SKS_EFT_FileFormatPaymSpec  sks_eft_fileformatpaymspec;
        SKS_EFT_Setup   sks_eft_Setup;
        SKS_EFT_FileFormat sks_eft_fileformat;
        //boolean be01Use;
        //boolean be02Use;
        //boolean be01Req;
        //boolean be02Req;
        boolean preNote;
        ;
    
        select SKS_EFT_FormatID from custpaymmodetable where custpaymmodetable.PaymMode == SKS_EFT_CustomerPaym.PaymMode;
        select ARReqPreNote from sks_eft_Setup;
        if(custpaymmodetable)
        {
            select * from sks_eft_fileformatpaymspec where sks_eft_fileformatpaymspec.FormatId == custpaymmodetable.SKS_EFT_FormatId
                && sks_eft_fileformatpaymspec.PaymSpec == SKS_EFT_CustomerPaym.PaymSpec;
    
            if(sks_eft_fileformatpaymspec)
            {
                //be01Use = sks_eft_fileformatpaymspec.BE01Use;
                //be01Req = sks_eft_fileformatpaymspec.BE01Reqd;
                //be02Use = sks_eft_fileformatpaymspec.BE02Use;
                //be02Req = sks_eft_fileformatpaymspec.BE02Reqd;
                preNote = sks_eft_fileformatpaymspec.PreNote;
    
                //Record Summary
                switch(sks_eft_fileformatpaymspec.RecordSummary)
                {
                    case SKS_EFT_PaymSpecRecordSummary::AllAllowed:
                        SKS_EFT_CustomerPaym_RecordSummary.enabled(true);
                    break;
                    case SKS_EFT_PaymSpecRecordSummary::Invoice:
                        SKS_EFT_CustomerPaym.RecordSummary = SKS_EFT_VendorRecordSummary::Invoice;
                        SKS_EFT_CustomerPaym_RecordSummary.enabled(false);
                    break;
                    case SKS_EFT_PaymSpecRecordSummary::Payment:
                        SKS_EFT_CustomerPaym.RecordSummary = SKS_EFT_VendorRecordSummary::Payment;
                        SKS_EFT_CustomerPaym_RecordSummary.enabled(false);
                    break;
                    default:
                    break;
                }
    
                //PreNote
                if(sks_eft_Setup.ARReqPreNote && preNote)
                {
                    //Check the format ...PreNote flag
                    select firstonly PreNote, FormatId from sks_eft_fileformat
                        where sks_eft_fileformat.PreNote == NoYes::Yes
                        && sks_eft_fileformat.FormatId == sks_eft_fileformatpaymspec.FormatId;
    
                    if(!sks_eft_fileformat.PreNote)
                    {
                        EFTPlusPreNoteInfo.visible(false);
                        IsVisibleValue.visible(true);
                    }
                    else
                    {
                        EFTPlusPreNoteInfo.visible(true);
                        IsVisibleValue.visible(false);
                    }
                }
                else
                {
                    EFTPlusPreNoteInfo.visible(false);
                    IsVisibleValue.visible(true);
                }
    
                /*
                //BE01 Used
                if(be01Use)
                {
                    SKS_EFT_CustomerPaym_BE01.visible(true);
                }
                else
                {
                    SKS_EFT_CustomerPaym_BE01.visible(false);
                }
    
                //BE01 Required
                if(be01Req)
                {
                    SKS_EFT_CustomerPaym_BE01.visible(true);
                    SKS_EFT_CustomerPaym_BE01.mandatory(true);
                }
                else
                {
                    SKS_EFT_CustomerPaym_BE01.mandatory(false);
                }
    
    
                //BE02 Used
                if(be02Use)
                {
                   SKS_EFT_CustomerPaym_BE02.visible(true);
                }
                else
                {
                    SKS_EFT_CustomerPaym_BE02.visible(false);
                }
    
                //BE02 Required
                if(be02Req)
                {
                    SKS_EFT_CustomerPaym_BE02.visible(true);
                    SKS_EFT_CustomerPaym_BE02.mandatory(true);
                }
                else
                {
                    SKS_EFT_CustomerPaym_BE02.mandatory(false);
                }*/
    
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>SKS_EFT_CustomerPaym</Name>
				<Methods>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            SKS_EFT_CustomerPaym    tmpsks_eft_CustomerPaym;
            ;
        
            super();
            select count(RecId) from tmpsks_eft_CustomerPaym
                   where tmpsks_eft_CustomerPaym.CustCompany == mSKS_LB_Depositor.CustomerCompany
                   && tmpsks_eft_CustomerPaym.CustAccount == mSKS_LB_Depositor.AccountNum;
            if(!tmpsks_eft_CustomerPaym.RecId)
            {
                BankAccounts.enabled(false);
                CustomerDefaults.enabled(false);
                SKS_EFT_FileFormatNotes.enabled(false);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            element.setBankAccountDetails();
        
            element.setMaskAndLengthValues();
        
            element.setVisbleEnabled();
        
            BankAccounts.enabled(true);
            CustomerDefaults.enabled(true);
            SKS_EFT_FileFormatNotes.enabled(true);
        
            ret = super();
        
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            SKS_EFT_Setup    sks_eft_setup;
            ;
        
            super(_append);
        
            select ARACHRecordSummary from sks_eft_setup;
        
            SKS_EFT_CustomerPaym.RecordSummary = sks_eft_setup.ARACHRecordSummary;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        /// <summary>
        /// Validate before saving
        /// </summary>
        /// <returns>true or false</returns>
        public boolean validateWrite()
        {
            boolean ret;
            SKS_EFT_FileFormatPaymSpecFields    TmpPaymSpec;
            SKS_EFT_CustomerPaymLookup    TmpCustomerPaymLookup;
        
            ret = super();

            while select required from tmpPaymSpec join TmpCustomerPaymLookup
                    where TmpCustomerPaymLookup.fileformatPaymspecfieldsrecid == tmpPaymSpec.recid &&
                    TmpCustomerPaymLookup.CustPaymRecId == SKS_EFT_CustomerPaym.RecId
                    && tmpPaymSpec.Required == NoYes::Yes
            {
                if(TmpCustomerPaymLookup.fixedvalue == '' && TmpCustomerPaymLookup.CodeLookupValuesRecId == 0)
                {
                    error("@SKS2682");
                    return false;
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CustBankAccountId</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
                CustBankAccount     custBankAccount;
                CustPaymModeTable   custpaymmodetable;
                SKS_EFT_FileFormatPaymSpec  sks_eft_fileformatpaymspec;
                ;
            
                ret = super();
            
                if (ret)
                {
            
                    select SKS_EFT_FormatID from custpaymmodetable where custpaymmodetable.PaymMode == SKS_EFT_CustomerPaym.PaymMode;
            
                    if(custpaymmodetable)
                    {
                        select * from sks_eft_fileformatpaymspec where sks_eft_fileformatpaymspec.FormatId == custpaymmodetable.SKS_EFT_FormatId
                            && sks_eft_fileformatpaymspec.PaymSpec == SKS_EFT_CustomerPaym.PaymSpec;
            
                        if(sks_eft_fileformatpaymspec)
                        {
                            if (SKS_EFT_CustomerPaym.CustCompany == '')
                            {
                                SKS_EFT_CustomerPaym.CustCompany = curext();
                            }
            
                            changeCompany(SKS_EFT_CustomerPaym.CustCompany)
                            {
                                select * from custBankAccount where custBankAccount.CustAccount == SKS_EFT_CustomerPaym.CustAccount
                                    && custBankAccount.AccountID == SKS_EFT_CustomerPaym.CustBankAccountId;
            
                            }
            
                            // Routing number
                            if(sks_eft_fileformatpaymspec.VBARoutingReqd && !custBankAccount.RegistrationNum)
                            {
                                ret = checkfailed("@SKS1872");
                            }
            
                            if(sks_eft_fileformatpaymspec.VBAAccountReqd && !custBankAccount.AccountNum)
                            {
                                ret = checkfailed("@SKS1873");
                            }
            
                            if(sks_eft_fileformatpaymspec.VBASwiftReqd && !custBankAccount.SWIFTNo)
                            {
                                ret = checkfailed("@SKS1874");
                            }
            
                            if(sks_eft_fileformatpaymspec.VBAIBANReqd && !custBankAccount.BankIBAN)
                            {
                                ret = checkfailed("@SKS1875");
                            }
            
                        }
            
                    }
                }
            
                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ;
            
                super();
            
                element.setBankAccountDetails();

                SKS_EFT_FileFormatPaymSpecFields_ds.research(true);
                SKS_EFT_CustomerPaym_ds.research(true);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PaymSpec</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
                element.setMaskAndLengthValues();
            
                element.setVisbleEnabled();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>SKS_EFT_FileFormatPaymSpecFields</Name>
				<Methods />
				<Fields>
					<Field>
						<DataField>FixedValue</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
            
                ret = super();
            
                if(SKS_EFT_FileFormatPaymSpecFields.FixedMask != '')
                {
                    if(subStr(strupr(sks_eft_fileformatpaymspecfields.fixedmask),0,1) == 'U')
                    {
                        sks_eft_fileformatpaymspecfields.fixedvalue = strupr(sks_eft_fileformatpaymspecfields.fixedvalue);
                    }
                    else if (subStr(sks_eft_fileformatpaymspecfields.fixedmask,0,1) == '9')
                    {
                        if (!element.isPPNumeric(sks_eft_fileformatpaymspecfields.fixedvalue))
                        {
                            Box::warning("@SKS204");
                            ret = false;
                        }
                    }
                }
            
                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
            
                if(SKS_EFT_FileFormatPaymSpecFields.fixedvalue != '')
                {
                    SKS_EFT_FileFormatPaymSpecFields_FixedValue.limitText(strLen(strRTrim(SKS_EFT_FileFormatPaymSpecFields.fixedmask)), AutoMode::Fixed);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>SKS_EFT_CustomerPaymLookup</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            ret = super();
        
            if(SKS_EFT_FileFormatPaymSpecFields.FieldType == SKS_EFT_CodeFieldType::CodeLookup)
            {
                SKS_EFT_FileFormatPaymSpecFields_FixedValue.enabled(false);
                Referencegrouplookup.enabled(true);
            }
            else
            {
                SKS_EFT_FileFormatPaymSpecFields_FixedValue.enabled(true);
                Referencegrouplookup.enabled(false);
            }
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        /// <summary>
        /// Validate before saving
        /// </summary>
        /// <returns>true or false</returns>
        public boolean validateWrite()
        {
            boolean ret;

            ret = super();
            
            if(ret)
            {
                if(SKS_EFT_FileFormatPaymSpecFields.Required == NoYes::Yes && SKS_EFT_CustomerPaymLookup.fixedvalue == '' && SKS_EFT_CustomerPaymLookup.CodeLookupValuesRecId == 0)
                {
                    error("@SKS2682");
                    return false;
                }
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>BankAccounts</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            CustTable custTable;
            Args args;
            Formrun formRun;
            ;
        
            changeCompany(SKS_EFT_CustomerPaym.CustCompany)
            {
                select custTable where custTable.AccountNum == SKS_EFT_CustomerPaym.CustAccount;
                args = new Args();
                args.record(custTable);
                args.parm(int642str(SKS_EFT_CustomerPaym.RecId)); // Pass rec id for filtering
        
                args.name(formstr(CustBankAccounts));
                args.caller(this);
                formRun = classFactory.formRunClass( Args );
        
                formRun.run();
                formRun.wait(true);
            }
        
            super();
        
            element.setBankAccountDetails();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CustomerDefaults</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            CustTable       custTable;
            DialogButton    diagButton;
            ;
        
            diagButton = box::yesNo(strfmt("@SKS1876", SKS_EFT_CustomerPaym.CustAccount), DialogButton::Ok, "@SKS311");
        
            if(diagButton == DialogButton::Yes)
            {
        
            ttsbegin;
            changecompany(SKS_EFT_CustomerPaym.CustCompany)
            {
                if(CustTable::exist(SKS_EFT_CustomerPaym.CustAccount))
                {
                    select forupdate * from custTable where custTable.AccountNum == SKS_EFT_CustomerPaym.CustAccount;
        
                    custTable.PaymMode = SKS_EFT_CustomerPaym.PaymMode;
                    custTable.PaymSpec = SKS_EFT_CustomerPaym.PaymSpec;
                    custTable.BankAccount = SKS_EFT_CustomerPaym.CustBankAccountId;
                    custTable.update();
                }
        
            }
            ttscommit;
        
            }
        
        
            SKS_EFT_CustomerPaym_ds.research(true);
        
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_CustomerPaym_PaymMode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            SKS_EFT_CustomerPaym.PaymSpec = '';
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_CustomerPaym_CustBankAccountId_Body</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            element.changePreNoteStatus();
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CopyOfSKS_EFT_CustomerPaym_PaymMode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            SKS_EFT_CustomerPaym.PaymSpec = '';
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_CustomerPaym_CustBankAccountId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            CustBankAccount::lookupBankAccount(SKS_EFT_CustomerPaym_CustBankAccountId, SKS_EFT_CustomerPaym.CustAccount, SKS_EFT_CustomerPaym.CustCompany);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            element.changePreNoteStatus();
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        ///
        /// </summary>
        public void jumpRef()
        {
            CustTable custTable;
            Args args;
            Formrun formRun;

            changeCompany(SKS_EFT_CustomerPaym.CustCompany)
            {
                select custTable where custTable.AccountNum == SKS_EFT_CustomerPaym.CustAccount;
                args = new Args();
                args.record(custTable);
                args.parm(int642str(SKS_EFT_CustomerPaym.RecId)); // Pass rec id for filtering
        
                args.name(formstr(CustBankAccounts));
                args.caller(this);
                formRun = classFactory.formRunClass( Args );
        
                formRun.run();
                formRun.wait(true);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_EFT_CustomerPaym_BankAccountId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource;
            QueryBuildDataSource    bankAccountDataSource;
        
            SysTableLookup  sysTableLookup = sysTableLookup::newParameters(tableNum(BankAccountTable), this);
            ;
        
            sysTableLookup.addLookupfield(fieldNum(BankAccountTable, AccountId));
            sysTableLookup.addLookupfield(fieldnum(BankAccountTable, Name));
        
            queryBuildDataSource = query.addDataSource(tableNum(BankAccountTable));
            bankAccountDataSource = queryBuildDataSource.addDataSource(tablenum(SKS_EFTAR_Bank));
        
            bankAccountDataSource.relations(true);
            bankAccountDataSource.joinMode(JoinMode::ExistsJoin);
        
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReferenceGroupLookup</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            SKS_EB_CodeLookupValues  lSKS_EB_CodeLookupValues;
            SKS_EB_CodeLookup       lSKS_EB_codelookup;
            Args args;
            MenuFunction menuFunction;
            ;
    
            select firstonly codeid from lSKS_EB_CodeLookupValues where lSKS_EB_CodeLookupValues.recid == this.value();
            select firstonly lSKS_EB_codelookup where lSKS_EB_codelookup.codeid == lSKS_EB_CodeLookupValues.codeid &&
                lSKS_EB_codelookup.FormatGroup == SKS_EFT_FileFormatPaymSpecFields.FormatGroup;
    
    
            if (!lSKS_EB_codelookup)
            {
                return;
            }
    
            args = new Args();
            args.caller(element);
            args.record(lSKS_EB_codelookup);
            menuFunction = new MenuFunction(menuitemdisplaystr(SKS_EB_CodeLookupValues), MenuItemType::Display);
            menuFunction.run(args);
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookupReference</Name>
						<Source><![CDATA[
        public Common lookupReference()
        {
            SKS_EB_CodeLookupValues   codeLookupValues;
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource;
            QueryBuildRange         queryBuildRange, queryBuildRange1;
        
            // Create an instance of SysTableLookup where 'this' is the current form control
            SysReferenceTableLookup sysTableLookup = SysReferenceTableLookup::newParameters(tableNum(SKS_EB_CodeLookupValues), ReferenceGroupLookup, true);
            ;
            query.allowCrossCompany(true);
        
            // Add fields to be shown in the lookup form
            sysTableLookup.addLookupField(fieldNum(SKS_EB_CodeLookupValues, DisplayValue));
        
            // Limit and arrange the data selection
            queryBuildDataSource = query.addDataSource(tableNum(SKS_EB_CodeLookupValues));
            queryBuildRange = queryBuildDataSource.addRange(fieldNum(SKS_EB_CodeLookupValues, CodeId));
            queryBuildRange1 = queryBuildDataSource.addRange(fieldNum(SKS_EB_CodeLookupValues, FormatGroup));
            queryBuildRange.value(queryValue(SKS_EFT_FileFormatPaymSpecFields.CodeId));
            queryBuildRange1.value(queryValue(SKS_EFT_FileFormatPaymSpecFields.FormatGroup));
            sysTableLookup.parmQuery(query);
            sysTableLookup.parmUseLookupValue(false);
        
            // Perform the lookup
            codeLookupValues = sysTableLookup.performFormLookup();
        
            return codeLookupValues;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SKS_EFT_CustomerPaym</Name>
			<Table>SKS_EFT_CustomerPaym</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AllowCr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BE01</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BE02</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymDefault</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecordSummary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>SKS_EFT_FileFormatPaymSpecFields</Name>
			<Table>SKS_EFT_FileFormatPaymSpecFields</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultCodeLookupValuesRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FieldType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileFormatPaymSpecRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedMask</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatFieldId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Required</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TechNote</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<JoinSource>SKS_EFT_CustomerPaymLookup</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>SKS_EFT_CustomerPaymLookup</Name>
			<Table>SKS_EFT_CustomerPaymLookup</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CodeLookupValuesRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustPaymRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileFormatPaymSpecFieldsRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<JoinSource>SKS_EFT_CustomerPaym</JoinSource>
			<LinkType>Active</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SKS1964</Caption>
		<Pattern xmlns="">SimpleListDetails-Grid</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>BankAccounts</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>939524094</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SKS1489</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS24208</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>CustomerDefaults</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1409286141</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SKS1961</HelpText>
								<NeededPermission>Update</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SKS1962</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>SKS_EFT_FileFormatNotes</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1778384893</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>sks_eft_fileformatnotes</MenuItemName>
								<Text>@SKS1687</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<Width>300</Width>
				<WidthMode>Manual</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormImageControl">
								<Name>DefaultCustomer</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>Image</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>DefaultCustomer</DataMethod>
								<DataSource>SKS_EFT_CustomerPaym</DataSource>
								<Label>@SKS1963</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_EFT_CustomerPaym_PaymMode</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>PaymMode</DataField>
								<DataSource>SKS_EFT_CustomerPaym</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_EFT_CustomerPaym_PaymSpec</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>PaymSpec</DataField>
								<DataSource>SKS_EFT_CustomerPaym</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_EFT_CustomerPaym_CustBankAccountId_Body</Name>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>CustBankAccountId</DataField>
								<DataSource>SKS_EFT_CustomerPaym</DataSource>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>SKS_EFT_CustomerPaym</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>Tabular</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>VSplitter</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1288490187</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<Style>SplitterVerticalContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>Overview</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CopyOfSKS_EFT_CustomerPaym_PaymMode</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>PaymMode</DataField>
								<DataSource>SKS_EFT_CustomerPaym</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>PaymSpec</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>PaymSpec</DataField>
								<DataSource>SKS_EFT_CustomerPaym</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_EFT_CustomerPaym_CustBankAccountId</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>CustBankAccountId</DataField>
								<DataSource>SKS_EFT_CustomerPaym</DataSource>
							</AxFormControl>
						</Controls>
						<BackgroundColor>WindowBackground</BackgroundColor>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1342177278</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Settings</Name>
						<ElementPosition>920350134</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_EFT_CustomerPaym_BankAccountId</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>BankAccountId</DataField>
								<DataSource>SKS_EFT_CustomerPaym</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SKS_EFT_CustomerPaym_RecordSummary</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>RecordSummary</DataField>
								<DataSource>SKS_EFT_CustomerPaym</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_EFT_CustomerPaym_AllowCr</Name>
								<ElementPosition>1879048189</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>AllowCr</DataField>
								<DataSource>SKS_EFT_CustomerPaym</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS37997</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>AccountInfo</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1380525201</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BankAccountNumbersGroup</Name>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>BankCodeType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>409044504</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<EnumType>BankCodeType</EnumType>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ACHBankTransit</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>613566756</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Read</NeededPermission>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>BankRegNum</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ACHAccountNumber</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>920350134</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Read</NeededPermission>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>BankAccount</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SwiftNo</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1022611260</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Read</NeededPermission>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>SWIFTNo</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>BankIBAN</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1124872386</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<NeededPermission>Read</NeededPermission>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>BankIBAN</ExtendedDataType>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ACHAccountType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1227133512</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<EnumType>BankAccountType</EnumType>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_CustomerPaym_BE01</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>BE01</DataField>
										<DataSource>SKS_EFT_CustomerPaym</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_CustomerPaym_BE02</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Visible>No</Visible>
										<FormControlExtension
											i:nil="true" />
										<DataField>BE02</DataField>
										<DataSource>SKS_EFT_CustomerPaym</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SKS1493</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>IsVisibleValue</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<MultiLine>Yes</MultiLine>
								<Text>@SKS1863</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>EFTPlusPreNoteInfo</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655762</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>ACHPreNoteStatus</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<EnumType>SKS_EB_PreNoteStatus</EnumType>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>ACHApprovalDate</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>Date</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<ExtendedDataType>SKS_EFT_PNDate</ExtendedDataType>
									</AxFormControl>
								</Controls>
								<Caption>@SKS1577</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SKS1389</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>AdditionalFields</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>GridVendorPaymLookup</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatPaymSpecFields_Description</Name>
										<ElementPosition>613566756</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Description</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpecFields</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_EFT_FileFormatPaymSpecFields_FixedValue</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>920350134</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FixedValue</DataField>
										<DataSource>SKS_EFT_CustomerPaymLookup</DataSource>
										<Label>@SYS103494</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ReferenceGroupLookup</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ReferenceGroup</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>SKS_EFT_CustomerPaymLookup</DataSource>
										<Label>@SKS2855</Label>
										<ReferenceField>CodeLookupValuesRecId</ReferenceField>
										<ReplacementFieldGroup>DefaultValue</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_EFT_FileFormatPaymSpecFields_Required</Name>
										<ElementPosition>1840700268</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>Required</DataField>
										<DataSource>SKS_EFT_FileFormatPaymSpecFields</DataSource>
									</AxFormControl>
								</Controls>
								<AlternateRowShading>No</AlternateRowShading>
								<DataSource>SKS_EFT_CustomerPaymLookup</DataSource>
								<MultiSelect>No</MultiSelect>
								<ShowRowLabels>No</ShowRowLabels>
								<Style>Tabular</Style>
							</AxFormControl>
						</Controls>
						<Caption>@SKS2681</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>