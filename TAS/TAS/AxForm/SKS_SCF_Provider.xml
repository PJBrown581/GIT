<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SKS_SCF_Provider</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SKS_SCF_Provider extends FormRun
{
    SKS_PP_Setup sks_pp_setup;
    SKS_EFT_Setup sks_eft_setup;
    #define.ValidAnnualPeriod2(11)
    #define.ValidAnnualPeriod1(-1)


}
]]></Source>
			</Method>
			<Method>
				<Name>AckFormatLookup</Name>
				<Source><![CDATA[
    private void AckFormatLookup(FormControl _formControl)
    {
        Query query = new Query();
        QueryBuildDataSource queryBuildDataSource;
        QueryBuildRange queryBuildRange;

        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(SKS_SCF_AckFileFormat), _formControl);

        sysTableLookup.addLookupField(fieldNum(SKS_SCF_AckFileFormat, FormatID));
        sysTableLookup.addLookupField(fieldNum(SKS_SCF_AckFileFormat, Description));

        queryBuildDataSource = query.addDataSource(tableNum(SKS_SCF_AckFileFormat));

        queryBuildRange = queryBuildDataSource.addRange(fieldNum(SKS_SCF_AckFileFormat, Selected));
        queryBuildRange.value(QueryValue(NoYes::Yes));

        sysTableLookup.parmQuery(query);

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>InvoiceFormatLookup</Name>
				<Source><![CDATA[
    private void InvoiceFormatLookup(FormControl _formControl)
    {
        Query query = new Query();
        QueryBuildDataSource queryBuildDataSource;
        QueryBuildRange queryBuildRange;

        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(SKS_SCF_InvoiceFileFormat), _formControl);

        sysTableLookup.addLookupField(fieldNum(SKS_SCF_InvoiceFileFormat, FormatID));
        sysTableLookup.addLookupField(fieldNum(SKS_SCF_InvoiceFileFormat, Description));

        queryBuildDataSource = query.addDataSource(tableNum(SKS_SCF_InvoiceFileFormat));

        queryBuildRange = queryBuildDataSource.addRange(fieldNum(SKS_SCF_InvoiceFileFormat, Selected));
        queryBuildRange.value(QueryValue(NoYes::Yes));

        sysTableLookup.parmQuery(query);

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>SettlementFormatLookup</Name>
				<Source><![CDATA[
    private void SettlementFormatLookup(FormControl _formControl)
    {
        Query query = new Query();
        QueryBuildDataSource queryBuildDataSource;
        QueryBuildRange queryBuildRange;

        SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(SKS_SCF_SettlementFileFormat), _formControl);

        sysTableLookup.addLookupField(fieldNum(SKS_SCF_SettlementFileFormat, FormatID));
        sysTableLookup.addLookupField(fieldNum(SKS_SCF_SettlementFileFormat, Description));

        queryBuildDataSource = query.addDataSource(tableNum(SKS_SCF_SettlementFileFormat));

        queryBuildRange = queryBuildDataSource.addRange(fieldNum(SKS_SCF_SettlementFileFormat, Selected));
        queryBuildRange.value(QueryValue(NoYes::Yes));

        sysTableLookup.parmQuery(query);

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        SKS_PP_Sys   sks_PP_Sys;

        super();

        sks_PP_Sys = new SKS_PP_Sys();
    
        if (!sks_PP_Sys.ValidateSetup(this.name()))
        {
            this.close();
        }

        SKS_SCF_Provider_OffsetLedgerDimension.parmDimensionAutocompleteFilter(new DimensionAutocompleteVendDefaultFilter(SKS_SCF_Provider_DS, fieldStr(SKS_SCF_Provider, OffsetLedgerDimension), fieldStr(SKS_SCF_Provider, AccountType)));
        SKS_SCF_Provider_OffsetLedgerDimension.parmPostingType(LedgerPostingType::LedgerJournal);
        SKS_SCF_Provider_OffsetLedgerDimension.parmValidateBlockedForManualEntry(true);

        select firstonly sks_pp_setup;

        //If TAS parameters is updated, the update should be pushed here.
        if(SKS_SCF_Provider.SettlmntSetUpDefault == NoYes::Yes)
        {
            element.loadFromSetup();
        }
        if(SKS_SCF_Provider.CommSetUpDefault == NoYes::Yes)
        {
            //Inbound communication method should not be pushed if Settlement option is None for this provider
            if(SKS_SCF_Provider.SettlementGenerationOptions == SKS_SCF_SettlementGenerationOptions::None)
            {
                SKS_SCF_Provider.OutCommID = sks_pp_setup.SCFOutCommID;
            }
            else
            {
                SKS_SCF_Provider.InCommID = sks_pp_setup.SCFInCommID;
                SKS_SCF_Provider.OutCommID = sks_pp_setup.SCFOutCommID;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadFromSetup</Name>
				<Source><![CDATA[
    void loadFromSetup()
    {
        select firstonly sks_pp_setup; 

        SKS_SCF_Provider.AutoPmtInvJrnl = sks_pp_setup.SCFAutoPmtInvJrnl;
        SKS_SCF_Provider.AutoPmtInvPost = sks_pp_setup.SCFAutoPmtInvPost;
        SKS_SCF_Provider.CreateNoMismatch = sks_pp_setup.SCFCreateNoMismatch;
        SKS_SCF_Provider.PaymentJournalName = sks_pp_setup.SCFPaymentJournalName;
        SKS_SCF_Provider.InvoiceJournalName = sks_pp_setup.SCFInvoiceJournalName;
        SKS_SCF_Provider.AccountType = sks_pp_setup.SCFAccountType;
        SKS_SCF_Provider.OffsetLedgerDimension = sks_pp_setup.SCFOffsetLedgerDimension;
        SKS_SCF_Provider.PaymentPostingDate = sks_pp_setup.SCFPaymentPostingDate;
        SKS_SCF_Provider.InvoicePostingDate = sks_pp_setup.SCFInvoicePostingDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadCommFromSetup</Name>
				<Source><![CDATA[
    void loadCommFromSetup()
    {
        select firstonly sks_pp_setup;

        SKS_SCF_Provider.InCommID = sks_pp_setup.SCFInCommID;
        SKS_SCF_Provider.OutCommID = sks_pp_setup.SCFOutCommID;

    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSetupDefaults</Name>
				<Source><![CDATA[
    Public void validateSetupDefaults()
    {
    
        if (SKS_SCF_Provider.SettlmntSetUpDefault == NoYes::Yes)
        {
            PaymSettlementAccountType.enabled(false);
            SKS_SCF_Provider_OffsetLedgerDimension.enabled(false);
            SKS_SCF_Provider_AutomaticPayJournal.enabled(false);
            SKS_SCF_Provider_AutomaticPayJournalPosting.enabled(false);
            SKS_SCF_Provider_CreateIfNoMismatch.enabled(false);
            SKS_SCF_Provider_InvoiceJournalName.enabled(false);
            SKS_SCF_Provider_PaymentJournalName.enabled(false);
            SKS_SCF_Provider_PaymentPostingDate.enabled(false);
            SKS_SCF_Provider_InvoicePostingDate.enabled(false);
        }
        else
        {
            PaymSettlementAccountType.enabled(false);
            SKS_SCF_Provider_OffsetLedgerDimension.enabled(true);
            SKS_SCF_Provider_AutomaticPayJournal.enabled(true);
            SKS_SCF_Provider_AutomaticPayJournalPosting.enabled(true);
            SKS_SCF_Provider_CreateIfNoMismatch.enabled(true);
            SKS_SCF_Provider_InvoiceJournalName.enabled(true);
            SKS_SCF_Provider_PaymentJournalName.enabled(true);
            SKS_SCF_Provider_PaymentPostingDate.enabled(true);
            SKS_SCF_Provider_InvoicePostingDate.enabled(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCommSetupDefaults</Name>
				<Source><![CDATA[
    Public void validateCommSetupDefaults()
    {
        if (SKS_SCF_Provider.CommSetUpDefault == NoYes::Yes)
        {
            SKS_SCF_Provider_OutBoundComm.enabled(false);
            SKS_SCF_Provider_InBoundComm.enabled(false);
        }
        else
        {
            SKS_SCF_Provider_OutBoundComm.enabled(true);
            SKS_SCF_Provider_InBoundComm.enabled(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enabledisableAdditionalOptions</Name>
				<Source><![CDATA[
    void enabledisableAdditionalOptions()
    {
        SKS_SCF_FileFormatAdditionalOptions    SCF_FileFormatAdditionalOptions;

        if(SKS_SCF_Provider.InvoiceFormatId == '')
        {
            SKS_SCF_ProviderAdditionalOptions.enabled(false);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, InvoiceFormatId)).enabled(true);
        }
        else
        {
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, InvoiceFormatId)).enabled(false);
        }

        select firstonly RecId from SCF_FileFormatAdditionalOptions where SCF_FileFormatAdditionalOptions.FormatId == SKS_SCF_Provider.InvoiceFormatId
            && SCF_FileFormatAdditionalOptions.ProviderVendor == SKS_SCF_ProviderVendor::Provider;

        if(SCF_FileFormatAdditionalOptions.RecId)
        {
            SKS_SCF_ProviderAdditionalOptions.enabled(true);
        }
        else
        {
            SKS_SCF_ProviderAdditionalOptions.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSettmntGenerationOptns</Name>
				<Source><![CDATA[
    void validateSettmntGenerationOptns()
    {
        if(SKS_SCF_Provider.SettlementGenerationOptions == SKS_SCF_SettlementGenerationOptions::None)
        {
            SKS_SCF_Provider.InCommID = '';
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, InCommID)).allowEdit(false);

            SKS_SCF_Provider.DueDateLeadDays = 0;
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, DueDateLeadDays)).allowEdit(false);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, DueDateLeadDays)).mandatory(false);

            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, SettlementFormatId)).allowEdit(false);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, SettlementFormatId)).mandatory(false);

            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, SettlementFilePath)).mandatory(false);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, SettlementFilePath)).allowEdit(false);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, BankHolidayGroupID)).allowEdit(false);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, InvoiceCreationGrouping)).allowEdit(false);

            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, PaymentJournalName)).mandatory(false);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, InvoiceJournalName)).mandatory(false);
            
        }
        if(SKS_SCF_Provider.SettlementGenerationOptions == SKS_SCF_SettlementGenerationOptions::DueDateBased)
        {
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, DueDateLeadDays)).allowEdit(true);

            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, SettlementFormatId)).allowEdit(false);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, SettlementFormatId)).mandatory(false);

            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, SettlementFilePath)).mandatory(false);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, SettlementFilePath)).allowEdit(false);

            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, InCommID)).allowEdit(true);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, BankHolidayGroupID)).allowEdit(true);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, InvoiceCreationGrouping)).allowEdit(true);

            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, PaymentJournalName)).mandatory(true);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, InvoiceJournalName)).mandatory(true);
        }
        if(SKS_SCF_Provider.SettlementGenerationOptions == SKS_SCF_SettlementGenerationOptions::SettlementFileBased)
        {
            SKS_SCF_Provider.DueDateLeadDays = 0;
           
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, InCommID)).allowEdit(true);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, DueDateLeadDays)).allowEdit(false);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, DueDateLeadDays)).mandatory(false);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, SettlementFormatId)).mandatory(true);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, SettlementFormatId)).allowEdit(true);

            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, SettlementFilePath)).mandatory(true);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, SettlementFilePath)).allowEdit(true);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, BankHolidayGroupID)).allowEdit(false);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, InvoiceCreationGrouping)).allowEdit(true);

            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, PaymentJournalName)).mandatory(true);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, InvoiceJournalName)).mandatory(true);

            if(SKS_SCF_Provider.CommSetUpDefault)
            {
                element.loadCommFromSetup();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enabledisableAutoPostjournal</Name>
				<Source><![CDATA[
    void enabledisableAutoPostjournal()
    {
        if(SKS_SCF_Provider.AutoPmtInvJrnl == NoYes::Yes)
        {
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, CreateNoMismatch)).allowEdit(true);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, AutoPmtInvPost)).allowEdit(true);
        }
        else
        {
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, CreateNoMismatch)).allowEdit(false);
            SKS_SCF_Provider_ds.object(fieldNum(SKS_SCF_Provider, AutoPmtInvPost)).allowEdit(false);

            SKS_SCF_Provider.CreateNoMismatch = NoYes::No;
            SKS_SCF_Provider.AutoPmtInvPost = NoYes::No;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAckPath</Name>
				<Source><![CDATA[
    boolean validateAckPath()
    {
        SKS_SCF_Provider locSKS_SCF_Provider, locPrevSKS_SCF_Provider;

        select firstonly locPrevSKS_SCF_Provider where locPrevSKS_SCF_Provider.ProviderID == SKS_SCF_Provider.ProviderID;
        select firstonly crosscompany locSKS_SCF_Provider 
            where (locSKS_SCF_Provider.AckFilePath == SKS_SCF_Provider.AckFilePath ||
                   locSKS_SCF_Provider.SettlementFilePath == SKS_SCF_Provider.AckFilePath ||
                   locSKS_SCF_Provider.OutboundFilePath == SKS_SCF_Provider.AckFilePath);

        if(locSKS_SCF_Provider.RecId && SKS_SCF_Provider.AckFilePath != '')
        {
            if(locPrevSKS_SCF_Provider.AckFilePath != SKS_SCF_Provider.AckFilePath)
            {
                error(strFmt("@SKS:SCFAckPathValidation",locSKS_SCF_Provider.ProviderID, CompanyInfo::findDataArea(locSKS_SCF_Provider.DataAreaId).DataArea));
                SKS_SCF_Provider_AckFilePath.setFocus();
                return false;
            }
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateOutboundPath</Name>
				<Source><![CDATA[
    boolean validateOutboundPath()
    {
        SKS_SCF_Provider locSKS_SCF_Provider, locPrevSKS_SCF_Provider;

        select firstonly locPrevSKS_SCF_Provider where locPrevSKS_SCF_Provider.ProviderID == SKS_SCF_Provider.ProviderID;
        select firstonly crosscompany locSKS_SCF_Provider 
            where (locSKS_SCF_Provider.OutboundFilePath == SKS_SCF_Provider.OutboundFilePath ||
                   locSKS_SCF_Provider.SettlementFilePath == SKS_SCF_Provider.OutboundFilePath ||
                   locSKS_SCF_Provider.AckFilePath == SKS_SCF_Provider.OutboundFilePath);

        if(locSKS_SCF_Provider.RecId && SKS_SCF_Provider.OutboundFilePath != '')
        {
            if(locPrevSKS_SCF_Provider.OutboundFilePath != SKS_SCF_Provider.OutboundFilePath)
            {
                error(strFmt("@SKS:SCFOutboundPathValidation",locSKS_SCF_Provider.ProviderID, CompanyInfo::findDataArea(locSKS_SCF_Provider.DataAreaId).DataArea));
                SKS_SCF_Provider_OutboundFilePath.setFocus();
                return false;
            }
        }
        return true;

    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSettlmtPath</Name>
				<Source><![CDATA[
    boolean validateSettlmtPath()
    {
        SKS_SCF_Provider locSKS_SCF_Provider, locPrevSKS_SCF_Provider;

        select firstonly locPrevSKS_SCF_Provider where locPrevSKS_SCF_Provider.ProviderID == SKS_SCF_Provider.ProviderID;
        select firstonly crosscompany locSKS_SCF_Provider 
            where (locSKS_SCF_Provider.SettlementFilePath == SKS_SCF_Provider.SettlementFilePath ||
                   locSKS_SCF_Provider.AckFilePath == SKS_SCF_Provider.SettlementFilePath ||
                   locSKS_SCF_Provider.OutboundFilePath == SKS_SCF_Provider.SettlementFilePath);

        if(locSKS_SCF_Provider.RecId && SKS_SCF_Provider.SettlementFilePath != '')
        {
            if(locPrevSKS_SCF_Provider.SettlementFilePath != SKS_SCF_Provider.SettlementFilePath)
            {
                error(strFmt("@SKS:SCFSettlmntPathValidation",locSKS_SCF_Provider.ProviderID, CompanyInfo::findDataArea(locSKS_SCF_Provider.DataAreaId).DataArea));
                SKS_SCF_Provider_SettlementFilePath.setFocus();
                return false;
            }
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSCFFileStatus</Name>
				<Source><![CDATA[
    boolean validateSCFFileStatus()
    {
        SKS_SCF_File scfFile;
        SKS_SCF_Provider locPrevSKS_SCF_Provider;

        select firstonly locPrevSKS_SCF_Provider where locPrevSKS_SCF_Provider.ProviderID == SKS_SCF_Provider.ProviderID;
        select firstonly scfFile where scfFile.ProviderID == SKS_SCF_Provider.ProviderID
             && scfFile.FileStatus == SKS_SCF_FileStatus::NotProcessed;
        if(scfFile.RecId)
        {
            if(locPrevSKS_SCF_Provider.InvoiceFormatId != SKS_SCF_Provider.InvoiceFormatId)
            {
                error(strFmt("@SKS:SCFFileStatusValidation", SKS_SCF_Provider.ProviderID));
                SKS_SCF_Provider_InvoiceFormatId.setFocus();
                return false;
            }
        }
        return true;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>SKS_SCF_Provider</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            ret = super();

            element.enabledisableAdditionalOptions();
            element.validateSettmntGenerationOptns();
            element.enabledisableAutoPostjournal();
            element.validateSetupDefaults();
            element.validateCommSetupDefaults();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            LedgerJournalName  invledgerJournalName, payledgerJournalName;
            boolean ret;
    
            ret = super();
               
            if(SKS_SCF_Provider.AutoPmtInvPost == NoYes::Yes)
            {
                select firstonly ApproveActive, WorkflowApproval, JournalName from invledgerJournalName where invledgerJournalName.JournalName == SKS_SCF_Provider.InvoiceJournalName;
                if(invledgerJournalName.ApproveActive == NoYes::Yes || invledgerJournalName.WorkflowApproval == NoYes::Yes)
                {
                    error(strFmt("@SKS:SCFInvJrnlValidation", SKS_SCF_Provider.InvoiceJournalName));
                    SKS_SCF_Provider_InvoiceJournalName.setFocus();
                    return false;
                }
                select firstonly ApproveActive, WorkflowApproval, JournalName from payledgerJournalName where payledgerJournalName.JournalName == SKS_SCF_Provider.PaymentJournalName;
                if(payledgerJournalName.ApproveActive == NoYes::Yes || payledgerJournalName.WorkflowApproval == NoYes::Yes)
                {
                    error(strFmt("@SKS:SCFInvJrnlValidation", SKS_SCF_Provider.PaymentJournalName));
                    SKS_SCF_Provider_PaymentJournalName.setFocus();
                    return false;
                }
            }

            if(!SKS_SCF_Provider_OutBoundComm.valueStr())
            {
                error("@SKS:SCFOutCommValidation"); 
                SKS_SCF_Provider_OutBoundComm.setFocus();
                return false;
            }
            if(SKS_SCF_Provider.AckFormatId)
            {
                if(!SKS_SCF_Provider_AckFilePath.valueStr())
                {
                    error("@SKS:SCFAckPathMandtryValidation");
                    SKS_SCF_Provider_AckFilePath.setFocus();
                    return false;
                }
            }

            if(SKS_SCF_Provider.FileName == '')
            {
                ret = false;
                SKS_SCF_Provider_FileName.setFocus();
                error("@SKS:SCFFileNameValidation");
            }

            // Devops - 15370
            if(SKS_SCF_Provider.SettlementGenerationOptions == SKS_SCF_SettlementGenerationOptions::DueDateBased)
            {
                if(SKS_SCF_Provider.DueDateLeadDays < 0)
                {
                    error("@SKS:SKGSCHDueDateLEadDaysValidation");
                    Overview_DueDateLeadDays.setFocus();
                    return false;
                }
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        /// <summary>
        /// create method
        /// </summary>
        /// <param name = "_append">_append</param>
        public void create(boolean _append = false)
        {
            super(_append);

            element.loadCommFromSetup();
            element.loadFromSetup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// execureQuery method
        /// </summary>
        public void executeQuery()
        {
            SKS_SCF_Provider_ds.reread();

            if(SKS_SCF_Provider.SettlmntSetUpDefault == NoYes::Yes)
            {
                element.loadFromSetup();
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        /// <summary>
        /// initValue method
        /// </summary>
        public void initValue()
        {
            SKS_SCF_Provider.SettlmntSetUpDefault = NoYes::Yes;
            SKS_SCF_Provider.CommSetUpDefault = NoYes::Yes;
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AckFilePath</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            /// validate method
            /// </summary>
            /// <returns>boolean</returns>
            public boolean validate()
            {
                boolean ret; 

                ret = super();
                ret = SKS_EB_FileHub::directoryExistsForm(SKS_SCF_Provider.AckFilePath);

                if(ret)
                {
                    ret = element.validateAckPath();
                }
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AckFormatId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            /// <summary>
            /// lookup method
            /// </summary>
            /// <param name = "_formControl">_formControl</param>
            /// <param name = "_filterStr">_filterStr</param>
            public void lookup(FormControl _formControl, str _filterStr)
            {
                element.AckFormatLookup(_formControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AutoPmtInvJrnl</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// modified method
            /// </summary>
            public void modified()
            {
                super();

                element.enabledisableAutoPostjournal();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InvoiceCreationGrouping</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// modified method
            /// </summary>
            public void modified()
            {
                super();

                SKS_SCF_Provider::deleteSwitchBoardRecords(SKS_SCF_Provider.ProviderID, SKS_SCF_Provider.InvoiceCreationGrouping);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InvoiceFormatId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            /// <summary>
            /// lookup method
            /// </summary>
            /// <param name = "_formControl">_formControl</param>
            /// <param name = "_filterStr">_filterStr</param>
            public void lookup(FormControl _formControl, str _filterStr)
            {
                element.InvoiceFormatLookup(_formControl);
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// modified method
            /// </summary>
            public void modified()
            {
                super();

                element.enabledisableAdditionalOptions();
                
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            /// validate method
            /// </summary>
            /// <returns>boolean</returns>
            public boolean validate()
            {
                boolean ret;
            
                ret = super();

                ret =  element.validateSCFFileStatus();
            
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>InvoiceJournalName</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            /// validate method
            /// </summary>
            /// <returns>boolean</returns>
            public boolean validate()
            {
                LedgerJournalName  ledgerJournalName;
                boolean ret;
    
                ret = super();
               
                select firstonly ApproveActive, WorkflowApproval, JournalName from ledgerJournalName where ledgerJournalName.JournalName == SKS_SCF_Provider.InvoiceJournalName;
                if((ledgerJournalName.ApproveActive == NoYes::Yes || ledgerJournalName.WorkflowApproval == NoYes::Yes) && SKS_SCF_Provider.AutoPmtInvPost == NoYes::Yes)
                {
                    error(strFmt("@SKS:SCFInvJrnlValidation", SKS_SCF_Provider.InvoiceJournalName));
                    SKS_SCF_Provider_InvoiceJournalName.setFocus();
                    ret = false;
                }
    
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OutboundFilePath</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                ret = SKS_EB_FileHub::directoryExistsForm(SKS_SCF_Provider.OutboundFilePath);

                if(ret)
                {
                    ret = element.validateOutboundPath();
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>PaymentJournalName</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            /// validate method
            /// </summary>
            /// <returns>boolean</returns>
            public boolean validate()
            {
                LedgerJournalName  ledgerJournalName;
                boolean ret;
    
                ret = super();
               
                select firstonly ApproveActive, WorkflowApproval, JournalName from ledgerJournalName where ledgerJournalName.JournalName == SKS_SCF_Provider.PaymentJournalName;
                if((ledgerJournalName.ApproveActive == NoYes::Yes || ledgerJournalName.WorkflowApproval == NoYes::Yes) && SKS_SCF_Provider.AutoPmtInvPost == NoYes::Yes)
                {
                    error(strFmt("@SKS:SCFInvJrnlValidation", SKS_SCF_Provider.PaymentJournalName));
                    SKS_SCF_Provider_PaymentJournalName.setFocus();
                    ret = false;
                }
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ProviderID</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// modified method
            /// </summary>
            public void modified()
            {
                super();

                SKS_SCF_Provider.ProviderName = VendTable::find(SKS_SCF_Provider.ProviderID).name();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SettlementFileName</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            /// validate method
            /// </summary>
            /// <returns>boolean</returns>
            public boolean validate()
            {
                boolean ret;

                ret = super(); 
                if(ret)
                {
                    ret = SKS_EB_FileHub::validateFileName(SKS_SCF_Provider.SettlementFileName);
                }
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SettlementFilePath</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            /// validate method
            /// </summary>
            /// <returns>boolean</returns>
            public boolean validate()
            {
                boolean ret;

                ret = super();
                ret = SKS_EB_FileHub::directoryExistsForm(SKS_SCF_Provider.SettlementFilePath);

                if(ret)
                {
                    ret =element.validateSettlmtPath();
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SettlementFormatId</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            /// <summary>
            /// lookup method
            /// </summary>
            /// <param name = "_formControl">_formControl</param>
            /// <param name = "_filterStr">_filterStr</param>
            public void lookup(FormControl _formControl, str _filterStr)
            {
                element.SettlementFormatLookup(_formControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SettlementGenerationOptions</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// modified method
            /// </summary>
            public void modified()
            {
                super();

                element.validateSettmntGenerationOptns();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SettlmntSetUpDefault</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// modified method
            /// </summary>
            public void modified()
            {
                super();

                if(SKS_SCF_Provider.SettlmntSetUpDefault)
                {
                    element.loadFromSetup();
                }

                element.validateSetupDefaults();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>SCFCommSetup</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args = new Args();
            FormRun formrun;
            ;

            args.parmObject( formrun);
            args.caller(element);
            formrun = new MenuFunction( menuitemdisplaystr( SKS_EB_COMMUNICATIONS ), MenuItemType::Display).create(args);
            formrun.run();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_SCF_Provider_CommSetUpDefault</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// modified method
        /// </summary>
        /// <returns>boolean</returns>
        public boolean modified()
        {
            boolean ret;
    
            ret = super();

            if(SKS_SCF_Provider.CommSetUpDefault)
            {
                element.loadCommFromSetup();
            }

            element.validateCommSetupDefaults();
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_SCF_Provider_OffsetLedgerDimension</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>checkUseCustomLookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// checkUseCustomLookup method
        /// </summary>
        /// <param name = "_accountTypeEnumValue">_accountTypeEnumValue</param>
        /// <param name = "_secondaryAccountTypeEnumValue">_secondaryAccountTypeEnumValue</param>
        /// <returns>boolean</returns>
        public boolean checkUseCustomLookup(int _accountTypeEnumValue, int _secondaryAccountTypeEnumValue)
        {
            boolean ret;
    
            ret = super(_accountTypeEnumValue, _secondaryAccountTypeEnumValue);
    
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            FormControl formControl = SKS_SCF_Provider_OffsetLedgerDimension;
        
            switch(SKS_SCF_Provider.AccountType)
            {
                case LedgerJournalACType::Bank:
                    BankAccountTable::lookupBankAccount(formControl);
                    break;
        
                case LedgerJournalACType::Cust:
                    CustTable::lookupCustomer(formControl);
                    break;
        
                case LedgerJournalACType::FixedAssets:
                    AssetTable::lookupAccountNum(formControl);
                    break;
        
                case LedgerJournalACType::Project:
                    ProjTable::lookupProjId(formControl, SKS_SCF_Provider);
                    break;
        
                case LedgerJournalACType::Vend:
                    VendTable::lookupVendor(formControl);
                    break;
        
                default:
                    super();
                    break;
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SKS_SCF_Provider</Name>
			<Table>SKS_SCF_Provider</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AckFilePath</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AckFormatId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoPmtInvJrnl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoPmtInvPost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankHolidayGroupID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommSetUpDefault</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreateNoMismatch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDateLeadDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileNameAddDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileNameAddFileNbr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileNameConnector</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InboundFilePath</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InCommID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceCreationGrouping</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceFormatId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceJournalName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoicePostingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OutboundFilePath</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OutCommID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentJournalName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentPostingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProviderID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProviderName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettlementFileName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettlementFilePath</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettlementFormatId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettlementGenerationOptions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettlmntSetUpDefault</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SKS:SCFProviders</Caption>
		<DataSource xmlns="">SKS_PP_BankScr</DataSource>
		<Pattern xmlns="">SimpleListDetails</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<Style xmlns="">SimpleListDetails</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>SKS_SCF_ProviderAdditionalOptions</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>SKS_SCF_ProviderAdditionalOptions</MenuItemName>
								<Text>@SKS1507</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>SKS_SCF_ProviderBankSwitchBoard</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>SKS_SCF_ProviderBankSwitchBoard</MenuItemName>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridContainer</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>858993458</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AlignControl>Yes</AlignControl>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Grid</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>GridReadOnlyOverview_ProviderId</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>ProviderID</DataField>
								<DataSource>SKS_SCF_Provider</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>GridReadOnlyOverview_ProviderName</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataField>ProviderName</DataField>
								<DataSource>SKS_SCF_Provider</DataSource>
							</AxFormControl>
						</Controls>
						<AlternateRowShading>No</AlternateRowShading>
						<DataSource>SKS_SCF_Provider</DataSource>
						<GridLinesStyle>Vertical</GridLinesStyle>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<RightMargin>0</RightMargin>
				<RightMarginMode>Fixed</RightMarginMode>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DetailsHeader</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Overview_ProviderID</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>ProviderID</DataField>
						<DataSource>SKS_SCF_Provider</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Overview_PaymMode</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>PaymMode</DataField>
						<DataSource>SKS_SCF_Provider</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>Overview_SettlementGenerationOptions</Name>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>SettlementGenerationOptions</DataField>
						<DataSource>SKS_SCF_Provider</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>Overview_DueDateLeadDays</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Integer</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>DueDateLeadDays</DataField>
						<DataSource>SKS_SCF_Provider</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Overview_BankHolidayGroupID</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>BankHolidayGroupID</DataField>
						<DataSource>SKS_SCF_Provider</DataSource>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabCommunicationsOptions</Name>
						<ElementPosition>477218588</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarFields</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>CommOptionsActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>CommOptButtonGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>SCFCommSetup</Name>
												<ElementPosition>1610612734</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<Type>MenuFunctionButton</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<MenuItemName>SKS_EB_Communications</MenuItemName>
												<SaveRecord>No</SaveRecord>
												<Text>@SKS2442</Text>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CommunicationsOptionsSCF</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_SCF_Provider_CommSetUpDefault</Name>
										<ElementPosition>1973000599</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CommSetUpDefault</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_SCF_Provider_OutBoundComm</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>OutCommID</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_SCF_Provider_InBoundComm</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>InCommID</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@SKS:SCFCommOptions</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabOutboundFileOptions</Name>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>OutboundFileOptions</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_SCF_Provider_InvoiceFormatId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceFormatId</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
										<Label>@SKS:SCFOutboundFormat</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_SCF_Provider_OutboundFilePath</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>OutboundFilePath</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SKS:SCFOutboundOpt</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabAcknowledgementFileOptions</Name>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AcknowledgementFileOptions</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_SCF_Provider_AckFormatId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>AckFormatId</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
										<Label>@SKS:SCFAckFormat</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_SCF_Provider_AckFilePath</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>AckFilePath</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SKS:SCFAckFileOptions</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabSettlementOptions</Name>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SettlementOptions</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_SCF_Provider_SettlementFormatId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SettlementFormatId</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
										<Label>@SKS:SCFSettlmntFormat</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_SCF_Provider_SettlementFilePath</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SettlementFilePath</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_SCF_Provider_SettlmntSetUpDefault</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SettlmntSetUpDefault</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PaymSettlementAccountType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HelpText>@FieldDescriptions_AccountsPayable:VendPaymMode_Posting_AccountType</HelpText>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>AccountType</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormSegmentedEntryControl">
										<Name>SKS_SCF_Provider_OffsetLedgerDimension</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<FilterExpression>%1</FilterExpression>
										<Type>SegmentedEntry</Type>
										<FormControlExtension>
											<Name>SegmentedEntryControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>parmControllerClassName</Name>
													<Type>String</Type>
													<Value>DimensionDynamicAccountController</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmAccountTypeEnumName</Name>
													<Type>String</Type>
													<Value>AccountType</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIsDefaultAccount</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmValidateBlockedForManualEntry</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmLockMainAccountSegment</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmPostingType</Name>
													<Type>Enum</Type>
													<TypeName>LedgerPostingType</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeTotalAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmIncludeFinancialAccounts</Name>
													<Type>Enum</Type>
													<TypeName>NoYes</TypeName>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
										<DataSource>SKS_SCF_Provider</DataSource>
										<ReferenceField>OffsetLedgerDimension</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_SCF_Provider_AutomaticPayJournal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>AutoPmtInvJrnl</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_SCF_Provider_CreateIfNoMismatch</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1973000599</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>CreateNoMismatch</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_SCF_Provider_AutomaticPayJournalPosting</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>AutoPmtInvPost</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_SCF_Provider_PaymentJournalName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymentJournalName</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_SCF_Provider_PaymentPostingDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>PaymentPostingDate</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_SCF_Provider_InvoiceJournalName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceJournalName</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_SCF_Provider_InvoicePostingDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoicePostingDate</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
										<Label>@SKS:SKGSCFInvPostingDate</Label>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_SCF_Provider_InvoiceCreationGrouping</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceCreationGrouping</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SKS:SCFInboundSettFileOpt</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabFileName</Name>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>FileName</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_SCF_Provider_FileName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>715827882</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>FileName</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_SCF_Provider_FileNameAddFileNbr</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>FileNameAddFileNbr</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_SCF_Provider_FileNameAddDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>FileNameAddDate</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_SCF_Provider_FileNameConnector</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569705</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>FileNameConnector</DataField>
										<DataSource>SKS_SCF_Provider</DataSource>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS53125</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>