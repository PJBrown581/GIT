<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SKS_PL_GeneratePayLink</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
/* TODO: (Code Upgrade) [Dialog Caption] Two conflicting captions are defined on this form - 1) Ensure the value in Form.Design.Caption contains the caption you want for this form; and, 2) Remove the now redundant static text main instruction control MainInstruction. */
[Form]
public class SKS_PL_GeneratePayLink extends FormRun
{
    SKS_PL_GenPayLink   gSKS_PL_GenPayLink;
    SalesTable          gSalesTable;
    SKS_PL_Setup        gSKS_PL_Setup;
    str                 CCGateway;
    str                 ECGateway;
}
]]></Source>
			</Method>
			<Method>
				<Name>CreateUpdateGenPayLink</Name>
				<Source><![CDATA[
    public SKS_PL_GenPayLink CreateUpdateGenPayLink(SKS_PL_GenPayLink   _SKS_PL_GenPayLink)
    {
        _SKS_PL_GenPayLink.Amount = Amount.realValue();
        _SKS_PL_GenPayLink.CCGatewayId = CCGatewayID.valueStr();
        _SKS_PL_GenPayLink.ECGatewayId = ECheckGatewayid.valueStr();
        if(emailchkbox.checked())
        {
            _SKS_PL_GenPayLink.CustEmail = CustomerEmail.valuestr();
        }
    
        if(SMSChkBox.checked())
        {
            _SKS_PL_GenPayLink.CustSMS = CustomerSMS.valuestr();
        }
        _SKS_PL_GenPayLink.Status = SKS_PL_Status::Queued;
        _SKS_PL_GenPayLink.SalesID = gSalesTable.SalesId;
        _SKS_PL_GenPayLink.EPYQueueRecID = SKS_PL_Sync::AddSalesOrderToQueue(Amount.realvalue(), gSalesTable, SKS_EPY_Status::New, '', SKS_EPY_Action::SendToPayLink);
        return _SKS_PL_GenPayLink;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FindCustomerEmail</Name>
				<Source><![CDATA[
    private LogisticsElectronicAddressLocator FindCustomerEmail(custaccount _custAccount)
    {
        LogisticsElectronicAddress LogisticsElectronicAddress;
        custtable locCustTable;
        DirPartyContactInfoView locDirPartyContactInfoView;
    
        select firstonly crossCompany AccountNum, Party from locCustTable
                where locCustTable.AccountNum == _custAccount
            join party, isprimary from locDirPartyContactInfoView
                where locDirPartyContactInfoView.party == locCustTable.party
                && locDirPartyContactInfoView.IsPrimary == NoYes::Yes
            join LogisticsElectronicAddress
                where locDirPartyContactInfoView.electronicaddress == LogisticsElectronicAddress.RecId
                && LogisticsElectronicAddress.Type == LogisticsElectronicAddressMethodType::Email;
    
        return LogisticsElectronicAddress.Locator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FindCustomerSMS</Name>
				<Source><![CDATA[
    private LogisticsElectronicAddressLocator FindCustomerSMS(custaccount _custAccount)
    {
        LogisticsElectronicAddress LogisticsElectronicAddress;
        custtable locCustTable;
        DirPartyContactInfoView locDirPartyContactInfoView;
    
        select firstonly crossCompany AccountNum, Party from locCustTable
                where locCustTable.AccountNum == _custAccount
            join Party, isprimary from locDirPartyContactInfoView
                where locDirPartyContactInfoView.party == locCustTable.party
                    && locDirPartyContactInfoView.IsPrimary == NoYes::yes
            join Locator, recid from LogisticsElectronicAddress
                where LogisticsElectronicAddress.RecId == locDirPartyContactInfoView.ElectronicAddress
                    && LogisticsElectronicAddress.Type == LogisticsElectronicAddressMethodType::Phone;
    
        return LogisticsElectronicAddress.Locator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        container   displayfield;
        SKS_PP_Setup    sks_PP_setup;
        TradeTotals      TradeTotals;
        super();
        gSalesTable = element.args().record();
    
        if(this.PayLinkDoesNotExist())
        {
            sks_Pp_setup = sks_pp_setup::find();
            if(sks_pp_setup.ModPayLink)
            {
                CCGateway = SKS_PL_PaymentGateways::findByDefaultCurrency(gSalesTable.CurrencyCode).CCGatewayId;
                ECGateway = SKS_PL_PaymentGateways::findByDefaultCurrency(gSalesTable.CurrencyCode).ECGatewayID;
                DocType.text(enum2str(SKS_PL_DocType::SalesOrderPrePaym));
                SalesOrdernum.text(gSalesTable.SalesId);
                Customer.text(gSalesTable.CustAccount);
    
                if(!(CCGateway == '' && ECGateway == ''))
                {
                    TradeTotals = SalesTotals::construct(gSalesTable);
    
                    displayfield = TradeTotals.displayFieldsCurrency(gSalesTable.CurrencyCode);
                    Amount.realValue(conPeek(displayfield, TradeTotals::posTotalAmount()));
    
                    CCGatewayId.text(CCGateway);
                    ECheckGatewayId.text(ECGateway);
    
                    if(SKS_PL_DocTypeSetup::findbyDocType(SKS_PL_DocType::SalesOrderPrePaym).SMSTemplate != '')
                    {
                        CustomerSMS.text(this.FindCustomerSMS(gSalesTable.CustAccount));
                        SMSChkBox.value(true);
                    }
                    else
                    {
                        CustomerSMS.enabled(false);
                        SMSChkBox.enabled(false);
                    }
    
                    if(SKS_PL_DocTypeSetup::findbyDocType(SKS_PL_DocType::SalesOrderPrePaym).emailTemplate != '')
                    {
                        CustomerEmail.text(this.FindCustomerEmail(gSalesTable.CustAccount));
                        EmailChkBox.value(true);
                    }
                    else
                    {
                        CustomerEmail.enabled(false);
                        EmailChkBox.enabled(false);
                    }
                }
                else
                {
                    throw error("@SKS3994");
                }
            }
            else
            {
                throw error(strFmt("@SKS4009", curext()));
            }
        }
        else
        {
            throw error("@SKS3991");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>PayLinkDoesNotExist</Name>
				<Source><![CDATA[
    private boolean PayLinkDoesNotExist()
    {
        gSKS_PL_GenPayLink = SKS_PL_GenPayLink::FindBySalesid(gSalesTable.SalesId, true);
    
        if(gSKS_PL_GenPayLink && gSKS_PL_GenPayLink.Status != SKS_PL_Status::Cancelled)
        {
            return false;
        }
        else
        {
            return true;
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>SMSChkbox</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
        
            if(this.checked())
            {
                CustomerSMS.enabled(true);
            }
            else
            {
                CustomerSMS.enabled(false);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EmailChkBox</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
        
            if(this.checked())
            {
                CustomerEmail.enabled(true);
            }
            else
            {
                CustomerEmail.enabled(false);
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ECheckGatewayId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                   query          = new Query();
            QueryBuildDataSource    queryBuildDataSource;
            QueryBuildRange         qbrRange;
        
            // Create an instance of SysTableLookup where 'this'
            // is the current form control.
            SysTableLookup sysTableLookup =
            SysTableLookup::newParameters(tableNum(SKS_PL_PaymentGateways), this);
            ;
        
            // Add fields to be shown in the lookup form.
            sysTableLookup.addLookupField(fieldNum(SKS_PL_PaymentGateways, ECGatewayID));
        
            queryBuildDataSource = query.addDataSource(tableNum(SKS_PL_PaymentGateways));
            qbrRange = queryBuildDataSource.addRange(fieldNum(SKS_PL_PaymentGateways, ECGatewayID));
            qbrRange.value(SysQuery::valueNotEmptyString());
            qbrRange.status(RangeStatus::Hidden);
            qbrRange = queryBuildDataSource.addRange(fieldNum(SKS_PL_PaymentGateways, ISOCurrency));
            qbrRange.value(gSalesTable.CurrencyCode);
            qbrRange.status(RangeStatus::Hidden);
        
            sysTableLookup.parmQuery(query);
        
            // Perform the lookup.
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            SKS_PL_PaymentGateways  lsks_pl_paymentgateways;
            boolean ret;
        
            ret = super();
        
            select firstOnly lsks_pl_paymentgateways where lsks_pl_paymentgateways.ECGatewayId == ECheckGatewayid.valueStr();
            if(ret)
            {
                if(!lsks_pl_paymentgateways)
                {
                    error("@SKS4039");
                    ret = false;
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CCGatewayID</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                   query          = new Query();
            QueryBuildDataSource    queryBuildDataSource;
            QueryBuildRange         qbrRange;
        
            // Create an instance of SysTableLookup where 'this'
            // is the current form control.
            SysTableLookup sysTableLookup =
            SysTableLookup::newParameters(tableNum(SKS_PL_PaymentGateways), this);
            ;
        
            // Add fields to be shown in the lookup form.
            sysTableLookup.addLookupField(fieldNum(SKS_PL_PaymentGateways, CCGatewayID));
        
            queryBuildDataSource = query.addDataSource(tableNum(SKS_PL_PaymentGateways));
            qbrRange = queryBuildDataSource.addRange(fieldNum(SKS_PL_PaymentGateways, CCGatewayID));
            qbrRange.value(SysQuery::valueNotEmptyString());
            qbrRange.status(RangeStatus::Hidden);
            qbrRange = queryBuildDataSource.addRange(fieldNum(SKS_PL_PaymentGateways, ISOCurrency));
            qbrRange.value(gSalesTable.CurrencyCode);
            qbrRange.status(RangeStatus::Hidden);
        
            sysTableLookup.parmQuery(query);
        
            // Perform the lookup.
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            SKS_PL_PaymentGateways  lsks_pl_paymentgateways;
            boolean ret;
        
            ret = super();
        
            select firstOnly lsks_pl_paymentgateways where lsks_pl_paymentgateways.CCGatewayId == CCGatewayID.valueStr();
        
            if(ret)
            {
                if(!lsks_pl_paymentgateways)
                {
                    error("@SKS4038");
                    ret = false;
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SendButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            SKS_PL_GenPayLink   sks_pl_GenPayLink;
        
            if(SMSChkBox.checked() == false && EmailChkBox.checked() == false)
            {
                throw error("@SKS4034");
            }
        
            if(CCGatewayID.valueStr() == '' && ECheckGatewayId.valueStr() == '')
            {
                throw error("@SKS3995");
            }
        
            if(CustomerSMS.valueStr() == '' && CustomerEmail.valueStr() == '')
            {
                throw error("@SKS4007");
            }
        
            super();
        
            ttsBegin;
            if(gSKS_PL_GenPayLink)
            {
                gSKS_PL_GenPayLink = element.CreateUpdateGenPayLink(gSKS_PL_GenPayLink);
                gSKS_PL_GenPayLink.update();
            }
            else
            {
                SKS_PL_GenPayLink = element.CreateUpdateGenPayLink(SKS_PL_GenPayLink);
                SKS_PL_GenPayLink.insert();
            }
            ttsCommit;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SKS3987</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>MainInstruction</Name>
				<ElementPosition>409044504</ElementPosition>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<FilterExpression>%1</FilterExpression>
				<Type>StaticText</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<FontSize>13</FontSize>
				<ForegroundColor>ScrollBar</ForegroundColor>
				<Text></Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Customer</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>460175067</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS302</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>SalesOrderNum</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>511305630</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS80119</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DocType</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>562436193</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS54213</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>Amount</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>613566756</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>AmountCur</ExtendedDataType>
						<Label>@SKS3116</Label>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>SMS</Name>
						<ElementPosition>920350134</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CustomerSMS</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>LogisticsElectronicAddressLocator</ExtendedDataType>
								<Label>@SKS3992</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SMSChkbox</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SKS:SMS</Label>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>email</Name>
						<ElementPosition>1227133512</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CustomerEmail</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>LogisticsElectronicAddressLocator</ExtendedDataType>
								<Label>@SKS4024</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>EmailChkBox</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SKS1253</Label>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ECheckGatewayId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1533916890</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>SKS_PL_GatewayId</ExtendedDataType>
						<Label>@SKS3947</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CCGatewayID</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1840700268</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>SKS_PL_GatewayId</ExtendedDataType>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>SendButton</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<Text>@SYS50570</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>