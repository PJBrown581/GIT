<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SKS_PRA_MatchingRulesInvoice</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SKS_PRA_MatchingRulesInvoice extends FormRun
{
    SKS_LB_MatchingRulesGroupType matchingRulesGroupType;

}
]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>SKS_PRA_MatchingRulesInvoice</Name>
				<Methods>
					<Method>
						<Name>enableDisable</Name>
						<Source><![CDATA[
        public void enableDisable()
        {
            if(SKS_PRA_MatchingRulesInvoice.lookupType == SKS_PRA_MatchType::Custom)
            {
                SKS_PRA_MatchingRulesInvoice_ds.object(fieldNum(SKS_PRA_MatchingRulesInvoice, CustomParseClass)).allowEdit(true);
                SKS_PRA_MatchingRulesInvoice_ds.object(fieldNum(SKS_PRA_MatchingRulesInvoice, SearchType)).allowEdit(false);
                SKS_PRA_MatchingRulesInvoice_ds.object(fieldNum(SKS_PRA_MatchingRulesInvoice, IncludeDuplicateInvs)).allowEdit(false);
            }
            else
            {
                SKS_PRA_MatchingRulesInvoice_ds.object(fieldNum(SKS_PRA_MatchingRulesInvoice, CustomParseClass)).allowEdit(false);
                SKS_PRA_MatchingRulesInvoice_ds.object(fieldNum(SKS_PRA_MatchingRulesInvoice, SearchType)).allowEdit(true);
                SKS_PRA_MatchingRulesInvoice_ds.object(fieldNum(SKS_PRA_MatchingRulesInvoice, IncludeDuplicateInvs)).allowEdit(true);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;
        
            ret = super();
        
            if(ret)
            {
                if(SKS_PRA_MatchingRulesInvoice.lookupType == SKS_PRA_MatchType::Custom && SKS_PRA_MatchingRulesInvoice.CustomParseClass == '')
                {
                    error("@SKS:SKGPRACustomValidation");
                    ret = false;
                }
            }
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            ret = super();
        
            if(ret)
            {
                this.enableDisable();
            }
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            SKS_PRA_MatchingRulesInvoice OrderNumber;
            int nextOrderNumber;
            ;
        
            super(_append);
            SELECT MAXOF(Step) FROM OrderNumber where OrderNumber.GroupID == SKS_PRA_MatchingRulesInvoice.GroupID;
        
            if (OrderNumber.step > 0)
            {
                nextOrderNumber = OrderNumber.Step + 1;
                SKS_PRA_MatchingRulesInvoice.Step = nextOrderNumber;
            }
            else
            {
                SKS_PRA_MatchingRulesInvoice.Step = 1;
            }

            SKS_PRA_MatchingRulesInvoice.lookupType = SKS_PRA_MatchType::Blank;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildDataSource    queryBuildDataSource;
        
            queryBuildDataSource = this.query().dataSourceTable(tablenum(SKS_PRA_MatchingRulesInvoice));
            queryBuildDataSource.addSortField(fieldNum(SKS_PRA_MatchingRulesInvoice, Step), SortOrder::Ascending);
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>lookupType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// Enable and disable controls based on the conditions
            /// </summary>
            public void modified()
            {
                super();

                if(SKS_PRA_MatchingRulesInvoice.lookupType == SKS_PRA_MatchType::Custom)
                {
                    SKS_PRA_MatchingRulesInvoice.SearchType = SKS_LB_SearchType::NotApplicable;
                }
                else
                {
                    if(SKS_PRA_MatchingRulesInvoice.SearchType == SKS_LB_SearchType::NotApplicable)
                    {
                        SKS_PRA_MatchingRulesInvoice.SearchType = SKS_LB_SearchType::Exact;
                    }
                }

                SKS_PRA_MatchingRulesInvoice_ds.enableDisable();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>SearchType</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            /// Validate search type
            /// </summary>
            /// <returns></returns>
            public boolean validate()
            {
                boolean ret;
                ret = super();
                if(SKS_PRA_MatchingRulesInvoice.SearchType == SKS_LB_SearchType::NotApplicable)
                {
                    error("@SKS:SKGPRALookupTypeValidation");
                    ret = false;
                }
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>SKS_PRA_MatchingRules_CustomParseClass</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>pickParseClass</Name>
						<Source><![CDATA[
        [SuppressBPWarning('BPDeprecatedClassMethod', 'Required')]
        private str pickParseClass(container _PossibleValues)
        {
            Object  Object;
            #ResAppl
            ;
    
            Object = classfactory.createPicklist();
            Object.init();
    
            Object.choices(_PossibleValues, #ImageTable);
            Object.caption("@SYS60851");
            Object.run();
            Object.wait();
            if (Object.choice())
            {
                return Object.choice();
            }
            return '';
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {          
            DictClass locDictClass;               
            List locChildClassIDs = new List(Types::String);
            System.String[] locStringArray;
            container locClassesList; 
            str locTempStr;
            int locArrayMax;
            int locArrayIndex = 0;
            Enumerator locEnumerator;
                

            SKS_PRA_MatchCustomBase locSKS_LB_MatchCustomBase;
            locSKS_LB_MatchCustomBase = new SKS_PRA_MatchCustomBase();
            locDictClass = new DictClass(classIdGet(locSKS_LB_MatchCustomBase));
        
            locChildClassIDs = locDictClass.extendedBy(true);
            locEnumerator = locChildClassIDs.getEnumerator();
        
            while(locEnumerator.moveNext())
            {
                locArrayIndex++;
            }
            locStringArray = new System.String[locArrayIndex]();
            locEnumerator.reset();
            locArrayIndex = 0;
            while(locEnumerator.moveNext())
            {
                locArrayIndex++;
                locStringArray.SetValue(classId2Name(locEnumerator.current()), locArrayIndex - 1);
            }
            System.Array::Sort(locStringArray);
        
            locArrayMax = locStringArray.get_Count();
        
            locArrayIndex = 0;
            while(locArrayIndex < locArrayMax)
            {
                locTempStr = locStringArray.GetValue(locArrayIndex);
                locClassesList += locTempStr;
                locArrayIndex++;
            }
            if(locArrayIndex == 0)
            {
                warning("@SKS3475");
            }
            else
            {
                locTempStr = this.pickParseClass(locClassesList);
                if(strLen(locTempStr) > 0)
                {
                    SKS_PRA_MatchingRulesInvoice.CustomParseClass = locTempStr;
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SKS_PRA_MatchingRulesInvoice</Name>
			<Table>SKS_PRA_MatchingRulesInvoice</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>CustomParseClass</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeDuplicateInvs</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>lookupType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SearchType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Step</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SKS:SKGPRAInvMatchRules</Caption>
		<DataSource xmlns="">SKS_PRA_MatchingRulesInvoice</DataSource>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">SimpleList</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>429496729</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<ElementPosition>1288490187</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>SKS_PRA_MatchingRules_Step</Name>
						<Type>Integer</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>Step</DataField>
						<DataSource>SKS_PRA_MatchingRulesInvoice</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>SKS_PRA_MatchingRules_lookupType</Name>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>lookupType</DataField>
						<DataSource>SKS_PRA_MatchingRulesInvoice</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>SKS_PRA_MatchingRules_SearchType</Name>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>SearchType</DataField>
						<DataSource>SKS_PRA_MatchingRulesInvoice</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>SKS_PRA_MatchingRules_CustomParseClass</Name>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>CustomParseClass</DataField>
						<DataSource>SKS_PRA_MatchingRulesInvoice</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>SKS_PRA_MatchingRules_IncludeDuplicateInvs</Name>
						<Type>CheckBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>IncludeDuplicateInvs</DataField>
						<DataSource>SKS_PRA_MatchingRulesInvoice</DataSource>
					</AxFormControl>
				</Controls>
				<AlternateRowShading>No</AlternateRowShading>
				<DataSource>SKS_PRA_MatchingRulesInvoice</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>