<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SKS_EFT_CustomerBulkLoad</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SKS_EFT_CustomerBulkLoad extends FormRun
{
    int selectedcnt;
    CompanyId bankCompanyId;
}
]]></Source>
			</Method>
			<Method>
				<Name>deletegrid</Name>
				<Source><![CDATA[
    void deletegrid()
    {
        SKS_TmpCustBulkLoadTable tmpSKS_TmpCustBulkLoadTable;
        ;
    
        tmpSKS_TmpCustBulkLoadTable = element.selectSKS_TmpCustBulkLoadTable();
        while select * from tmpSKS_TmpCustBulkLoadTable
        {
            tmpSKS_TmpCustBulkLoadTable.delete();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>EnableDisablePrenote</Name>
				<Source><![CDATA[
    void EnableDisablePrenote(Str _PaymSpec, Str _PaymMode)
    {
        boolean PrenoteEnabled;
        ;
    
        If(_PaymSpec != '' && _PaymMode != '' )
        {
            PrenoteEnabled = SKS_EFT_CustomerLoad::validatePreNote(_PaymMode,_PaymSpec);
            If(PrenoteEnabled)
            {
                SetPreNoteStatus.enabled(True);
            }
            else
            {
                SetPreNoteStatus.value(0);
                SetPreNoteStatus.enabled(False);
            }
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>FillComboBoxPaymMode</Name>
				<Source><![CDATA[
    void FillComboBoxPaymMode()
    {
        CustPaymModeTable bCustPaymModeTable;
        ;
    
        ComboBoxPaymMode.clear();
    
        While Select * from bCustPaymModeTable
              where (bCustPaymModeTable.SKS_EFT_PaymMode == 1 || bCustPaymModeTable.SKS_CNP_PaymMode == 1)
        {
            ComboBoxPaymMode.add(bCustPaymModeTable.PaymMode);
        }
        ComboBoxPaymMode.selection(-1);
    }

]]></Source>
			</Method>
			<Method>
				<Name>FillComboBoxPaymSpec</Name>
				<Source><![CDATA[
    void FillComboBoxPaymSpec()
    {
        CustPaymModeSpec bCustPaymModeSpec;
        ;
    
        ComboBoxPaymSpec.clear();
        While Select * from bCustPaymModeSpec
              where bCustPaymModeSpec.PaymMode == ComboBoxPaymMode.getText(ComboBoxPaymMode.selection())
        {
            ComboBoxPaymSpec.add(bCustPaymModeSpec.Specification);
        }
        ComboBoxPaymSpec.selection(0);
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCount</Name>
				<Source><![CDATA[
    int64 getBankCount(CustAccount _accountNum)
    {
        CustBankAccount custbankacct;
        int64 CountRows;        
    
        changecompany(companyid.text())
        {
            select count(RecId), AccountID, dataAreaId, CustAccount from custbankacct where custbankacct.CustAccount == _accountNum;
    
            CountRows = custbankacct.RecId;
            bankCompanyId = custbankacct.dataAreaId;
        }
    
        return countRows;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
        Companyid.text(curext());
        CreatePaySpec.value(1);
        setActive.value(1);
        EnableInPayJournal.value(1);
        element.FillComboBoxPaymMode();
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectAll</Name>
				<Source><![CDATA[
    void selectAll(boolean checked = true)
    {
    
        Int64 lastRecId;
        SKS_EFT_FileFormatPaymSpec fileFormatPaymSpec;
        boolean isAutoCreateBankAccount;
        ;
        
        PaymMode paymMode = ComboBoxPaymMode.getText(ComboBoxPaymMode.selection());
        PaymSpec paymspec = ComboBoxPaymSpec.getText(ComboBoxPaymSpec.selection());
    
        SKS_TmpCustBulkLoadTable_DS.First();
        while(SKS_TmpCustBulkLoadTable)
        {
            if(paymMode && paymspec)
            {
              //  CustTable locCustTable = CustTable::find(SKS_TmpCustBulkLoadTable.AccountNum);

                select firstonly fileFormatPaymSpec
                    where fileFormatPaymSpec.FormatId == CustPaymModeTable::find(paymMode).SKS_EFT_FormatId
                        && fileFormatPaymSpec.PaymSpec == paymspec;
                
                if(fileFormatPaymSpec.DDAutoCreateBankAccount)
                {
                    isAutoCreateBankAccount = true;
                }
            }
            if(SKS_TmpCustBulkLoadTable.BankAccount != '')
            {
                SKS_TmpCustBulkLoadTable.Selected = true;
            }
            else
            {
                if(isAutoCreateBankAccount)
                {
                    SKS_TmpCustBulkLoadTable.Selected = true;
                }
            }
    
            lastRecId = SKS_TmpCustBulkLoadTable.RecId;
    
            SKS_TmpCustBulkLoadTable_DS.Next();
    
            if(SKS_TmpCustBulkLoadTable.RecId == lastRecId)
            {
                break;
            }
    
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectSKS_TmpCustBulkLoadTable</Name>
				<Source><![CDATA[
    SKS_TmpCustBulkLoadTable selectSKS_TmpCustBulkLoadTable()
    {
        ;
        select * from SKS_TmpCustBulkLoadTable;
    
        return SKS_TmpCustBulkLoadTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unselectAll</Name>
				<Source><![CDATA[
    void unselectAll(boolean checked = true)
    {
        SKS_TmpCustBulkLoadTable tmpSKS_TmpCustBulkLoadTable;
        ;
        tmpSKS_TmpCustBulkLoadTable = element.selectSKS_TmpCustBulkLoadTable();
        while select * from tmpSKS_TmpCustBulkLoadTable
        {
            tmpSKS_TmpCustBulkLoadTable.Selected = false;
            tmpSKS_TmpCustBulkLoadTable.update();
        }
    
        SKS_TmpCustBulkLoadTable_ds.research(True);
    
    
    
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>SKS_TmpCustBulkLoadTable</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>BankCnt</Name>
						<Source><![CDATA[
        [SysClientCacheDataMethodAttribute]
        display int64 BankCnt(SKS_TmpCustBulkLoadTable _sks_tmpCustBulkLoadTable)
        {
            int64 CountRows;
            ;
            CountRows = element.getBankCount(_sks_tmpCustBulkLoadTable.AccountNum);
        
            return CountRows;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>BankAccount</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
                CustBankAccount custBankAccount;
                ;
                changeCompany(CompanyID.valueStr())
                {
                    select firstonly AccountId from custBankAccount where
                        custBankAccount.CustAccount == SKS_TmpCustBulkLoadTable.AccountNum &&
                        custBankAccount.AccountID == SKS_TmpCustBulkLoadTable.BankAccount;
            
                    if(custBankAccount)
                    {
                        ret = true;
                    }
                    else
                    {
                        warning(strFmt("@SYS112224", SKS_TmpCustBulkLoadTable.BankAccount,"@SKS1796", "@SYS24208"));
                        ret = false;
                    }
                }
                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                CustBankAccount::lookupBankAccount(_formControl, SKS_TmpCustBulkLoadTable.AccountNum, CompanyID.valueStr());
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>CustTable</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>LoadCustList</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
        
            CustBankAccount custbankacct;
            int64 CountRows;
            CustTable lCustTable;
            DirPartyTable lDirPartyTable;
            Recordinsertlist    RIL;
            ;
        
            super();
        
            RIL = new Recordinsertlist(tableNum(SKS_TmpCustBulkLoadTable), false, false, false, false, false, SKS_TmpCustBulkLoadTable);
            element.deletegrid();
        
        
            ChangeCompany(Companyid.text())
            {
                while select AccountNum, DataAreaId, BankAccount, Party from lCustTable
                    join Name from lDirPartyTable where lDirPartyTable.RecId == lCustTable.Party
                {
                    CountRows = 0;
                    SKS_TmpCustBulkLoadTable.AccountNum = lCustTable.AccountNum;
                    SKS_TmpCustBulkLoadTable.CpnyID = lCustTable.dataAreaId;
                    SKS_TmpCustBulkLoadTable.Name = lDirPartyTable.Name;
                    CountRows = element.getBankCount(SKS_TmpCustBulkLoadTable.AccountNum);
                    If (CountRows == 1)
                    {
                        select accountID from custbankacct where custbankacct.CustAccount == SKS_TmpCustBulkLoadTable.AccountNum;
                        SKS_TmpCustBulkLoadTable.BankAccount = custbankacct.AccountID;
                    }
                    If(CountRows > 1 )
                    {
                        If(lCustTable.BankAccount != '')
                        {
                            select CustAccount, AccountID from custbankacct where custbankacct.CustAccount == SKS_TmpCustBulkLoadTable.AccountNum &&
                                   custbankacct.AccountID == lCustTable.BankAccount;
                            if(custbankacct)
                            {
                                SKS_TmpCustBulkLoadTable.BankAccount = lCustTable.BankAccount;
                            }
                            else
                            {
                                SKS_TmpCustBulkLoadTable.BankAccount = '';
                            }
                        }
                        else
                        {
                            SKS_TmpCustBulkLoadTable.BankAccount = '';
                        }
                    }
                    If(CountRows == 0 )
                    {
                        SKS_TmpCustBulkLoadTable.BankAccount = '';
                    }
        
                    SKS_TmpCustBulkLoadTable.VBACpnyID = bankCompanyId;
                    RIL.add(SKS_TmpCustBulkLoadTable);
                }
                RIL.insertDatabase();
            }
        
            SKS_TmpCustBulkLoadTable_ds.executeQuery();
        
        
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ProcessCustomersLoad</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
        
            DialogButton diagBut;
            CustTable mCustTable;
            SKS_EFT_Setup local_SKS_EFT_Setup;
            Boolean Customer_create, PaymentSpec_create;
            int Counter;
            SKS_LB_Depositor local_SKS_LB_Depositor;
            ;
        
            super();
        
            if(ComboBoxPaymMode.valueStr() == '' && ComboBoxPaymSpec.valueStr() == '' && CreatePaySpec.checked())
            {
                warning("@SKS1804","@SKS1882");
                return;
            }
            If(Selectedcnt > 0)
            {
                diagBut = Box::yesNo("@SKS1881",DialogButton::No, "@SKS1882");
        
                if (diagBut == DialogButton::Yes)
                {
                    counter = 0;
                    //tmpSKS_TmpCustBulkLoadTable = element.selectSKS_TmpCustBulkLoadTable();
                    while select * from SKS_TmpCustBulkLoadTable where SKS_TmpCustBulkLoadTable.Selected == NoYes::Yes
                    {
                        PaymentSpec_create = false;
                        Customer_create = false;
        
                        local_SKS_EFT_Setup = SKS_EFT_Setup::find();
        
                        changecompany(Companyid.text())
                        {
                            select forupdate mcusttable where mcusttable.AccountNum == SKS_TmpCustBulkLoadTable.AccountNum;
                        }

                        CustPaymModeTable lCustPaymModeTable;

                        lCustPaymModeTable = CustPaymModeTable::find(ComboBoxPaymMode.valueStr());

                        local_SKS_LB_Depositor = SKS_LB_Depositor::findWithSetup(Companyid.text(), mcusttable.AccountNum);

                        CustTable locCustTable = CustTable::find(SKS_TmpCustBulkLoadTable.AccountNum);
                        SKS_EFT_FileFormatPaymSpec fileFormatPaymSpec;

                        select firstonly fileFormatPaymSpec
                                where fileFormatPaymSpec.FormatId == CustPaymModeTable::find(ComboBoxPaymMode.valueStr()).SKS_EFT_FormatId
                                    && fileFormatPaymSpec.PaymSpec == ComboBoxPaymSpec.valueStr();

                        // create record only if customer bank does exists
                        if(!local_SKS_LB_Depositor && SKS_TmpCustBulkLoadTable.BankAccount)
                        {
                            if(lCustPaymModeTable.SKS_CNP_PaymMode == NoYes::Yes)
                            {
                                Customer_create = SKS_EFT_CustomerLoad::CreateCNPCustomerRecord(mcusttable.AccountNum, local_SKS_EFT_Setup, SetActive.checked(), EnableInPayJournal.checked(), UseEmail.checked(), Companyid.text());
                            }
                            else
                            {
                                Customer_create = SKS_EFT_CustomerLoad::CreateCustomerRecord(mcusttable.AccountNum, local_SKS_EFT_Setup, SetActive.checked(), EnableInPayJournal.checked(), UseEmail.checked(), Companyid.text());
                            }
                        }
                        else
                        {
                            // create record only if customer bank does not exists and auto create bank account is marked as yes
                            if(!SKS_TmpCustBulkLoadTable.BankAccount && !local_SKS_LB_Depositor && fileFormatPaymSpec.DDAutoCreateBankAccount)
                            {
                                if(lCustPaymModeTable.SKS_CNP_PaymMode == NoYes::Yes)
                                {
                                    Customer_create = SKS_EFT_CustomerLoad::CreateCNPCustomerRecord(mcusttable.AccountNum, local_SKS_EFT_Setup, SetActive.checked(), EnableInPayJournal.checked(), UseEmail.checked(), Companyid.text());
                                }
                                else
                                {
                                    Customer_create = SKS_EFT_CustomerLoad::CreateCustomerRecord(mcusttable.AccountNum, local_SKS_EFT_Setup, SetActive.checked(), EnableInPayJournal.checked(), UseEmail.checked(), Companyid.text());
                                }
                            }
                        }
                        // if the customer bank exists

                        CustBankAccount custBankAccount;

                        If(ComboBoxPaymMode.valueStr() != '' && ComboBoxPaymSpec.valueStr() != '' && CreatePaySpec.checked() && SKS_TmpCustBulkLoadTable.BankAccount)
                        {
                            if(lCustPaymModeTable.SKS_CNP_PaymMode == NoYes::Yes)
                            {
                                PaymentSpec_create = SKS_EFT_CustomerLoad::CreateCustReimbursementPaymRecord(mcusttable,local_SKS_EFT_Setup,ComboBoxPaymMode.valueStr(),ComboBoxPaymSpec.valueStr(),
                                                                   SKS_TmpCustBulkLoadTable.BankAccount,CompBankAcct.valueStr(), SetPreNoteStatus.checked(), Companyid.text());
                            }
                            else   //If method of payment is EFt+
                            {
                                PaymentSpec_create = SKS_EFT_CustomerLoad::CreateCustomerPaymRecord(mcusttable,local_SKS_EFT_Setup,ComboBoxPaymMode.valueStr(),ComboBoxPaymSpec.valueStr(),
                                                                   SKS_TmpCustBulkLoadTable.BankAccount,CompBankAcct.valueStr(), SetPreNoteStatus.checked(), Companyid.text());
                            }
                        
                        }
                        else
                        {
                            // if customer bank account does not exists
                            If(ComboBoxPaymMode.valueStr() != '' && ComboBoxPaymSpec.valueStr() != '' && CreatePaySpec.checked() && !SKS_TmpCustBulkLoadTable.BankAccount && fileFormatPaymSpec.DDAutoCreateBankAccount)
                            {
                                //Create a new TAS_AUTO bank for the customer

                                custBankAccount = SKS_DD_MandatesCreateBankAccount::createCustBankAccountBulkLoad(locCustTable);

                                if(lCustPaymModeTable.SKS_CNP_PaymMode == NoYes::Yes)
                                {
                                    PaymentSpec_create = SKS_EFT_CustomerLoad::CreateCustReimbursementPaymRecord(mcusttable,local_SKS_EFT_Setup,ComboBoxPaymMode.valueStr(),ComboBoxPaymSpec.valueStr(),
                                                                       custBankAccount.AccountID,CompBankAcct.valueStr(), SetPreNoteStatus.checked(), Companyid.text());
                                }
                                else   //If method of payment is EFt+
                                {
                                    PaymentSpec_create = SKS_EFT_CustomerLoad::CreateCustomerPaymRecord(mcusttable,local_SKS_EFT_Setup,ComboBoxPaymMode.valueStr(),ComboBoxPaymSpec.valueStr(),
                                                                       custBankAccount.AccountID,CompBankAcct.valueStr(), SetPreNoteStatus.checked(), Companyid.text());
                                }
                            }
                        }
        
                        If(SetMethod.checked())
                        {
                            ttsbegin;
                            changecompany(Companyid.text())
                            {
                                mCustTable.PaymMode = ComboBoxPaymMode.valueStr();
                                mCustTable.PaymSpec = ComboBoxPaymSpec.valueStr();
                                if(SKS_TmpCustBulkLoadTable.BankAccount)
                                {
                                    mCustTable.BankAccount = SKS_TmpCustBulkLoadTable.BankAccount;
                                }
                                else
                                {
                                    mCustTable.BankAccount = custBankAccount.AccountID;    //update the customer bank account TAS_AUTO
                                }
                                
                                mCustTable.update();
                            }
                            ttscommit;
                        }
                        IF(Customer_create || PaymentSpec_create)
                        {
                            counter++;
                        }
        
                    }
                    SKS_TmpCustBulkLoadTable_ds.executeQuery();
                    info(strfmt("@SKS1883",int2str(counter)));
                }
            }
            else
            {
                warning("@SKS1884","@SKS1882");
            }
        
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Select_</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.selectAll();
            selectedcnt = 1;
            ProcessCustomersLoad.enabled(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Unselect</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.unselectAll();
            selectedcnt = 0;
            ProcessCustomersLoad.enabled(false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CompanyID</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
            element.deletegrid();
            sks_tmpCustBulkLoadTable_ds.executeQuery();
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CreatePaySpec</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();
            If(!this.value())
            {
                ComboBoxPaymMode.enabled(false);
                ComboBoxPaymSpec.enabled(false);
                CompBankAcct.text('');
                CompBankAcct.enabled(False);
        
            }
            else
            {
                ComboBoxPaymMode.enabled(True);
                ComboBoxPaymSpec.enabled(True);
                CompBankAcct.enabled(True);
        
            }
        
        
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ComboBoxPaymMode</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
            element.FillComboBoxPaymSpec();
            SetMethod.enabled(True);
            element.EnableDisablePrenote(ComboBoxPaymSpec.getText(ComboBoxPaymSpec.selection()), ComboBoxPaymMode.getText(ComboBoxPaymMode.selection()));
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ComboBoxPaymSpec</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
            element.EnableDisablePrenote(ComboBoxPaymSpec.getText(ComboBoxPaymSpec.selection()), ComboBoxPaymMode.getText(ComboBoxPaymMode.selection()));
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>CompBankAcct</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource;
            QueryBuildDataSource    bankAccountDataSource;
            CustPaymModeTable lCustPaymModeTable;

            lCustPaymModeTable = CustPaymModeTable::find(ComboBoxPaymMode.valueStr());
        
            SysTableLookup  sysTableLookup = sysTableLookup::newParameters(tableNum(BankAccountTable), this);
            ;
        
            sysTableLookup.addLookupfield(fieldNum(BankAccountTable, AccountId));
            sysTableLookup.addLookupfield(fieldnum(BankAccountTable, Name));
        
            queryBuildDataSource = query.addDataSource(tableNum(BankAccountTable));

            if(lCustPaymModeTable.SKS_EFT_PaymMode == NoYes::Yes)
            {
                bankAccountDataSource = queryBuildDataSource.addDataSource(tablenum(SKS_EFTAR_Bank));
            }
            else
            {
                bankAccountDataSource = queryBuildDataSource.addDataSource(tablenum(SKS_EFTCNP_Bank));
            }
        
            bankAccountDataSource.relations(true);
            bankAccountDataSource.joinMode(JoinMode::ExistsJoin);
        
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_TmpCustBulkLoadTable_Selected</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
            If(this.value())
            {
                selectedcnt = selectedcnt + 1;
            }
            else
            {
                selectedcnt = selectedcnt - 1;
                if(selectedcnt < 0)
                {
                    selectedcnt = 0;
                }
            }
            if (selectedcnt > 0)
            {
                ProcessCustomersLoad.enabled(true);
            }
            else
            {
                ProcessCustomersLoad.enabled(false);
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
            SKS_EFT_FileFormatPaymSpec fileFormatPaymSpec;
            boolean isAutoCreateBankAccount;
        
            ret = super();

            PaymMode paymMode = ComboBoxPaymMode.getText(ComboBoxPaymMode.selection());
            PaymSpec paymspec = ComboBoxPaymSpec.getText(ComboBoxPaymSpec.selection());

            if(paymMode && paymspec)
            {
                select firstonly fileFormatPaymSpec
                    where fileFormatPaymSpec.FormatId == CustPaymModeTable::find(paymMode).SKS_EFT_FormatId
                        && fileFormatPaymSpec.PaymSpec == paymspec;
                
                if(fileFormatPaymSpec.DDAutoCreateBankAccount)
                {
                    isAutoCreateBankAccount = true;
                }
            }
        
            if(SKS_TmpCustBulkLoadTable_Selected && ret && !SKS_TmpCustBulkLoadTable.BankAccount && !isAutoCreateBankAccount)
            {
                Box::stop("@SKS2005","@SKS1882");
                ret = false;
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SKS_TmpCustBulkLoadTable</Name>
			<Table>SKS_TmpCustBulkLoadTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CpnyID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Selected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VBACpnyID</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustTable</Name>
			<Table>CustTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountStatement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Affiliated_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgencyLocationCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AuthorityOffice_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCustPaymIdTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthCountyCode_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthDate_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BirthPlace_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Blocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCMNum_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ClearingPeriod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CNAE_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CNPJCPFNum_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommercialRegister</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommercialRegisterInsetNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommercialRegisterSection</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommissionGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyChainId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyIdSiret</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyNAFCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyType_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsDay_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardAddressVerification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardAddressVerificationLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardAddressVerificationVoid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardCVC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditMax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditRating</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Curp_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Currency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustClassificationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExcludeCollectionFee</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExcludeInterestCharges</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustFinalUser_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTradingPartnerCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustWhtContributionType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DAXIntegrationId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDirectDebitMandate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultInventStatusId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DestinationCodeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DlvTerm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EinvoiceEANNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EInvoiceRegister_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EntryCertificateRequired_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExportSales_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExpressBillOfLading</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FactoringAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FederalComments</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FedNonFedIndicator</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FiscalDocType_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForecastDMPInclude</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignerId_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignResident_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignTaxRegistration_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreightZone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GenerateIncomingFiscalDocument_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeAccountStatement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeCollectionletter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeFreeTextInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeInterestNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroTypeProjInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ICMSContributor_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IdentificationNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IENum_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>INSSCEI_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntBank_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyAllowIndirectCreation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyAutoCreateOrders</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanyDirectDelivery</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventProfileType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventSiteId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoicePostingType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IRS1099CIndicator</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsResident_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IssueOwnEntryCertificate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IssuerCountry_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineOfBusinessId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LvPaymTransCodes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MainContactWorker</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MandatoryCreditLimit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MandatoryVatDate_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRMergedParent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRMergedRoot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Memo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MultiLineDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NIT_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>numberSequenceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OneTimeCustomer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderEntryDeadlineGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrgId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OurAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackageDepositExcempt_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackMaterialFeeLicenseNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PartyCountry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PartyState</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PassportNo_HU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymDayId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentReference_EE</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymIdType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSched</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymTermId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PBACustGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsCustRebateGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsFreightAccrued</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdsRebateTMAGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PresenceType_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PriceGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegNum_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ResidenceForeignCountryRegionId_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Rfc_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RFIDCaseTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RFIDItemTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RFIDPalletTagging</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesCalendarId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesDistrictId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesPoolId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SegmentId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCodeOnDlvAddress_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierAccountCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierBlindShipment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierFuelSurcharge</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShipCarrierId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StateInscription_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StatisticsGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SubsegmentId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Suframa_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SuframaNumber_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SuframaPISCOFINS_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SuppItemGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SyncEntityId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SyncVersion</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxBorderNumber_FI</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGSTReliefGroupHeading_MY</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxLicenseNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriodPaymentCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCalculate_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCalculate_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnitedVATInvoice_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>usePurchRequest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WebSalesOrderDisplay</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<JoinSource>SKS_TmpCustBulkLoadTable</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>SKS_EFT_CustomerPaym</Name>
			<Table>SKS_EFT_CustomerPaym</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AllowCr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BE01</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BE02</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymDefault</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecordSummary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SKS1882</Caption>
		<DataSource xmlns="">SKS_TmpCustBulkLoadTable</DataSource>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">SimpleList</Style>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroups</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>LoadCustList</Name>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SKS1956</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SKS1957</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ProcessCustomersLoad</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SKS1938</HelpText>
								<NeededPermission>Update</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MultiSelect>No</MultiSelect>
								<Text>@SKS1797</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Select_</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SKS1940</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@sys107257</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>Unselect</Name>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SKS1944</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS112705</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>AllCriteria</Name>
				<ElementPosition>536870911</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl1</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>CustomerGrid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>CustTable_Name</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>CustSelectGroup</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CompanyID</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>SelectableDataArea</ExtendedDataType>
							</AxFormControl>
						</Controls>
						<Caption>@SKS1954</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>DefaultsGroup</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>setActive</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS39462</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>UseEmail</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SKS1216</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>EnableInPayJournal</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SKS1221</Label>
							</AxFormControl>
						</Controls>
						<Caption>@SKS1955</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>PaymentSpecGroup</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>CreatePaySpec</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>536870910</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SKS1791</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>setmethod</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1342177275</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SKS1941</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>ComboBoxPaymMode</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>805306365</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS21698</Label>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>ComboBoxPaymSpec</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741820</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS21683</Label>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CompBankAcct</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048188</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SKS1385</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SetPreNoteStatus</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612730</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SKS1942</Label>
							</AxFormControl>
						</Controls>
						<Columns>2</Columns>
						<Caption>@SKS1790</Caption>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>CustomerGrid</Name>
				<ElementPosition>1342177278</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>SKS_TmpCustBulkLoadTable_Selected</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>390451572</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@SKS1943</HelpText>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<BackgroundColor>WindowBackground</BackgroundColor>
						<DataField>Selected</DataField>
						<DataSource>SKS_TmpCustBulkLoadTable</DataSource>
						<Label>@SYS5965</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustTable_AccountNum</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>585677358</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>AccountNum</DataField>
						<DataSource>CustTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustTable_Name</Name>
						<ElementPosition>780903144</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Name</DataField>
						<DataSource>SKS_TmpCustBulkLoadTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustTable_PaymMode</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>976128930</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>PaymMode</DataField>
						<DataSource>CustTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustTable_PaymSpec</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1171354716</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>PaymSpec</DataField>
						<DataSource>CustTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustGroup</Name>
						<ElementPosition>1366580502</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@SYS16728</HelpText>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>CustGroup</DataField>
						<DataSource>CustTable</DataSource>
						<Label>@sys3815</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>CustTable_BankAccount</Name>
						<ElementPosition>1561806288</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>BankAccount</DataField>
						<DataSource>CustTable</DataSource>
						<Label>@SKS1945</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormInt64Control">
						<Name>bankCount</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1757032074</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@SKS1816</HelpText>
						<Type>Int64</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>Bankcnt</DataMethod>
						<DataSource>SKS_TmpCustBulkLoadTable</DataSource>
						<Label>@SKS1953</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>SKS_TmpCustBulkLoadTable_BankAccount</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1952257860</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>BankAccount</DataField>
						<DataSource>SKS_TmpCustBulkLoadTable</DataSource>
						<Label>@SKS1796</Label>
					</AxFormControl>
				</Controls>
				<AlternateRowShading>No</AlternateRowShading>
				<DataSource>SKS_TmpCustBulkLoadTable</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>