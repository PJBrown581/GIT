<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SKS_LB_CreatePayment</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SKS_LB_CreatePayment extends FormRun
{
    SKS_LB_CreatePaymentParms sks_lb_createPaymentParms;
    SKS_LB_FileFormat         sks_lb_fileformat;
    SKS_LB_Bank               sks_lb_bank;
    SKS_PP_Setup              sks_pp_setup;
    ExchangeRateDisplayFactor exchRateDisplayFactor;

}
]]></Source>
			</Method>
			<Method>
				<Name>enableNewJournalGroup</Name>
				<Source><![CDATA[
    void enableNewJournalGroup(boolean _enableProperty)
    {
        NewJournalGroup.enableChilds(_enableProperty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        SKS_PP_500PPBas dd500PP = new SKS_PP_500PPBas();
        SKS_LB_JournalAR    lsks_lb_journalar;
        int result;
        ;
    
        super();
    
        if(element.args() && element.args().parmObject())
        {
            sks_lb_createPaymentParms = element.args().parmObject();
        }
        else
        {
            throw error("@SYS111577"); //Invalid argument
        }
    
    
        result = dd500PP.IsRegistered('LB');
        if (result != 1)
        {
            box::warning("@SKS326");
            this.close();
        }

        select * from SKS_LB_Journal where SKS_LB_Journal.JournalId == sks_lb_createPaymentParms.JournalID() && SKS_LB_Journal.BatchNum == sks_lb_createPaymentParms.BatchNumber();
        select firstOnly lsks_lb_journalar where lsks_lb_journalar.JournalId == SKS_LB_Journal.JournalID && lsks_lb_journalar.BatchNum == SKS_LB_Journal.BatchNum && lsks_lb_journalar.ReviewStatus == SKS_LB_ReviewStatus::NeedsReview;
    
        if(lsks_lb_journalar)
        {
            throw error("@SKS3572");
        }
    
    
        select firstOnly FileDate from SKS_LB_JournalAR where SKS_LB_JournalAR.journalid == SKS_LB_Journal.journalid && SKS_LB_JournalAR.BatchNum == SKS_LB_Journal.BatchNum;
        select firstonly * from SKS_LB_FileFormat where SKS_LB_FileFormat.FormatID == SKS_LB_Journal.FormatID;
        select firstonly * from sks_lb_bank where sks_lb_bank.BankAccountID == SKS_LB_Journal.bankacct && SKS_LB_Bank.LBFormatId == SKS_LB_Journal.FormatID;
        select firstonly journalname from sks_pp_setup;
        LBWBCBPmtTotal.realValue(sks_lb_createPaymentParms.ARPmtTotal());
        //set currency fields from Journal record
        LBWBCBCMTranCuryID.text(SKS_LB_Journal.CurrencyCode);
        exchRateDisplayFactor = ExchangeRateCurrencyPair::getExchangeRateDisplayFactor(Ledger::accountingCurrency(CompanyInfo::findDataArea(curext()).RecId),SKS_LB_Journal.CurrencyCode , Ledger::defaultExchangeRateType(CompanyInfo::findDataArea(curext()).RecId), false);
    
        LBWBCBCMRate.realValue(CurrencyEuroDenomination::displayStoredExchangeRate_Static(SKS_LB_Journal.ExchRate, exchRateDisplayFactor));
        LBWBCBDocDateUseEnteredDate.enabled(false);
        LBWBCBDocDateUseEnteredDate.dateValue(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()));
        if(SKS_LB_Fileformat.FileType != enum2int(SKS_LB_FileType::BAI2) && SKS_LB_Fileformat.FileType != enum2int(SKS_LB_FileType::Symcor))
        {
            if(SKS_LB_Journal.HeadPaymDate == dateNull())
            {
                LBWBCBTransDateUseEnteredDate.dateValue(SKS_LB_JournalAR.FileDate);
            }
            else
            {
                LBWBCBTransDateUseEnteredDate.dateValue(SKS_LB_Journal.HeadPaymDate);
            }
        }
        else
        {
            LBWBCBTransDateUseEnteredDate.dateValue(SKS_LB_Journal.HeadPaymDate);
        }
    
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>ExistingJournalNum</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query                   query          = new Query();
            QueryBuildDataSource    queryBuildDataSource;
            QueryBuildRange         queryBuildRange;
        
        
            // Create an instance of SysTableLookup where 'this'
            // is the current form control.
            SysTableLookup sysTableLookup =
                SysTableLookup::newParameters(tableNum(LedgerJournalTable), this);
            ;
        
        
            // Add fields to be shown in the lookup form.
            sysTableLookup.addLookupField(fieldNum(LedgerJournalTable, JournalNum));
        
            // Limit and arrange the data selection.
            queryBuildDataSource = query.addDataSource(tableNum(LedgerJournalTable));
            queryBuildRange = queryBuildDataSource.addRange(
                fieldNum(LedgerJournalTable, JournalName));
            //Removed logic to determine whether or not LB from setup was selected, setup changes push to the bank table so the bank table infor is always correct
            queryBuildRange.value(sks_lb_bank.LBJournalName);
            queryBuildRange = queryBuildDataSource.addRange(
                fieldNum(LedgerJournalTable, Posted));
            queryBuildRange.value('0');
            sysTableLookup.parmQuery(query);
        
            // Perform the lookup.
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
            LedgerJournalTable  ledgerJournalTable;
        
            ret = super();
        
            select firstonly * from ledgerJournalTable where ledgerJournalTable.journalname == sks_lb_bank.LBJournalName && ledgerJournalTable.JournalNum == ExistingJournalNum.valueStr();
        
            if(!ledgerJournalTable )
            {
                error(strFmt( "@SYS17145", existingJournalNum.valueStr()) );
                ret = false;
                existingJournalNum.text(' ');
                existingJournalNum.update();
            }
            else
            {
            if(ledgerJournalTable.Posted == 1)
                {
                    error( "@SYS21497" );
                    ret = false;
                    existingJournalNum.text(' ');
                    existingJournalNum.update();
                }
            }
        
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LBWBCBDocDateUseCheckDate</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
        
            super();
        
        
            if(LBWBCBDocDateUseCheckDate.checked() == true)
            {
                LBWBCBDocDateUseEnteredDate.enabled(false);
            }
            else
            {
                LBWBCBDocDateUseEnteredDate.enabled(true);
            }
        
        
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OK_Button</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            SKS_LB_Payment sks_lb_payment;
            ;

            // exchange rate validation
            if (!LBWBCBCMRate.realValue())
            {
                error("@SKS:LBPaymentJourExchRateNotValidErrorMsg");
                return;
            }
        
            if(LBWBCBTransDateUseEnteredDate.datevalue() != dateNull() && LBWBCBTransDateUseEnteredDate.datevalue() != dateNull())
            {         
                // updates exchange rate if it's different from original
                SKS_LB_Journal lbJour = SKS_LB_Journal::FindByBatchAndJournalNum(sks_lb_createPaymentParms.BatchNumber(), sks_lb_createPaymentParms.JournalID());
                if (lbJour.ExchRate)
                {
                    // get current exchange rate
                    ExchRate newExchRate = CurrencyEuroDenomination::prepareExchangeRateForStorage_Static(LBWBCBCMRate.realValue(), exchRateDisplayFactor);

                    if (newExchRate != lbJour.ExchRate)
                    {
                        ttsbegin;
                        lbJour.selectForUpdate(true);
                        lbJour.ExchRate = newExchRate;
                        lbJour.update();
                        ttscommit;
                    }
                }

                // Task 19918
                // If we get some info messages during the journal creation process, these messages can't readable by users.
                // Because all messages are aligned under this dialog form. And after journal creation, this form closes automatically and all messages will disappear.
                // To prevent this, "close()" command moved to this level.
                // All info messages after this line will show under the parent form.
                // And "close()" command always waits to execute the rest of the code in the method.
                element.close();

                //<Issue21511>
                //sks_lb_payment = SKS_LB_Payment::contruct();

                //if(ExistingJournalNum.valueStr())
                //{
                //    sks_lb_payment.setLBPaymentJournalNum(ExistingJournalNum.valueStr());
                //}

                //sks_lb_payment.setLBJournalId(sks_lb_createPaymentParms.JournalID());
                //sks_lb_payment.setLBBatchNumber(sks_lb_createPaymentParms.BatchNumber());
                //sks_lb_payment.setTotalAppliedAmount(sks_lb_createPaymentParms.ApplyAmt());
                //sks_lb_payment.setTotalPaymentAmount(sks_lb_createPaymentParms.ARPmtTotal());

                //if(LBWBCBDocDateUseCheckDate.checked())
                //{
                //    sks_lb_payment.setUseCheckDate(true);
                //}
                //else
                //{
                //    sks_lb_payment.setUseCheckDate(false);
                //    sks_lb_payment.setCheckDate(LBWBCBDocDateUseEnteredDate.dateValue());
                //}

                //sks_lb_payment.setTransDate(LBWBCBTransDateUseEnteredDate.dateValue());

                //sks_lb_payment.run();

                try
                {
                    container con;
                    DialogButton dialogBut;
                    
                    dialogBut = Box::yesNo(
                        "@SKS:WarningSettlementLokboxWithErrorsGrid",
                        DialogButton::Yes, // Initial focus is on the No button.
                            "@SKS352");

                    if(dialogBut == DialogButton::Yes)
                    {
                        con += ExistingJournalNum.valueStr();
                        con += sks_lb_createPaymentParms.JournalID();
                        con += sks_lb_createPaymentParms.BatchNumber();
                        con += sks_lb_createPaymentParms.ApplyAmt();
                        con += sks_lb_createPaymentParms.ARPmtTotal();
                        con += LBWBCBDocDateUseCheckDate.checked();
                        con += LBWBCBDocDateUseEnteredDate.dateValue();
                        con += LBWBCBTransDateUseEnteredDate.dateValue();

                        SysOperationSandbox::callStaticMethod(classNum(SKS_LB_Payment),
                            staticMethodStr(SKS_LB_Payment, CreatePaymentProcess), con,
                            "@SKS:CreatingPaymJournal", "@SKS:OperationCompleted", "@SKS:OperationCancelled");
                    }
                }
                catch(Exception::Error)
                {
                    warning("@SKS:OperationFailed");
                }
                //</Issue21511>

                super();               
            }
            else
            {
                error("@SKS2622");
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Cancel_Button</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
        
            // Close the Form
            element.close();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SKS_LB_Journal</Name>
			<Table>SKS_LB_Journal</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BankAcct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPmtCnt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPmtTotal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BatchBadPmtTotal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BatchNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BatchPmtCnt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ErrCount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HeadPaymDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InReview</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KeepDelete</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Owner</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmtTotal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SessionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SessionLoginDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SplitPaymentsExist</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>SKS_LB_JournalAR</Name>
			<Table>SKS_LB_JournalAR</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActualSettleAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssignedTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoCROffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoCRRev</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoCRRevJrnlId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoRevLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoRevOffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAcct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BatchNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChangedPmtAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChkRefNbr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccountErr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccountSugg</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankRegNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransOpenRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscApplyAmt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FeeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FeeValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Filename</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileRecord</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImageIdentifierBack</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImageIdentifierFront</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceIdErr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>isDED</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LBCustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LBInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LBSettlementMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTransRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedForApply</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MOP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetDimensionReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentJournalARID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentRecid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayJrnlDeposit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PendingSettlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmtAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmtWasSplit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefNbrDupe</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReviewStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevReasonCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SplitPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TrackingInvoices</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UnsettledAmt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WriteOff</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@SKS406</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SaveSize xmlns="">No</SaveSize>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<Style xmlns="">Dialog</Style>
		<WindowResize xmlns="">Fixed</WindowResize>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>MainInstruction</Name>
				<ElementPosition>214748364</ElementPosition>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<FilterExpression>%1</FilterExpression>
				<Type>StaticText</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Text>@SKS406</Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ContentSection</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>LBWBCBPmtTotal</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>590558002</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SYS24946</Label>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ExistingJournalGroup</Name>
						<ElementPosition>966367640</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ExistingJournalNum</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SKS1833</Label>
								<LookupButton>Always</LookupButton>
							</AxFormControl>
						</Controls>
						<Caption>@SKS1832</Caption>
						<Style>DialogContent</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>NewJournalGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1342177278</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>LBWBCBDocDateUseCheckDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SKS407</Label>
								<Value>1</Value>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>LBWBCBDocDateUseEnteredDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>SKS_EB_Date</ExtendedDataType>
								<Label>@SKS405</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>LBWBCBTransDateUseEnteredDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>SKS_EB_Date</ExtendedDataType>
								<Label>@SYS14475</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>LBWBCBCMTranCuryID</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS62786</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>LBWBCBCMRate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>ExchRate</ExtendedDataType>
								<Label>@SYS4955</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<Caption>@SKS1834</Caption>
						<Style>DialogContent</Style>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>CopyOfButtonGroup</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>OK_Button</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<HelpText>@SKS720</HelpText>
						<Skip>Yes</Skip>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Text>@SYS5473</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonControl">
						<Name>Cancel_Button</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Height>27</Height>
						<HeightMode>Auto</HeightMode>
						<HelpText>@SKS609</HelpText>
						<Skip>Yes</Skip>
						<Type>Button</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Text>@SKS208</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>