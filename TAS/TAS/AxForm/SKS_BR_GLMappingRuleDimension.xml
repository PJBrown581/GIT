<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SKS_BR_GLMappingRuleDimension</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
// Copied from LedgerJournalTransDimension form
public class SKS_BR_GLMappingRuleDimension extends FormRun
{
    SKS_BR_GLMappingRuleLookup          sks_BR_GLMappingRuleLookup;
    SKS_LB_WriteOffDetails              sks_lb_writeoffdetails;
    SKS_LB_WriteoffTmp                  sks_lb_writeoffTmp;
    SKS_LB_JournalARErrors              sks_lb_journalarerrors;
    SKS_LB_JournalARApplic              sks_lb_journalarapplic;
    SKS_EPY_Setup                       sks_epy_setup;
    NoYes                               isDefaultDimension;
    str menuItemName;
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        boolean allowEdit = true;
        AccessRight accessRight;
        boolean reasonExists = false;
    
        super();
    
        accessRight = FormSecurity::getMenuItemAccessRight(this);
        menuItemName = element.args().menuItemName();
    
        if(menuItemName == 'SKS_LB_TmpGLCROffsetLedgerDimension' || menuItemName == 'SKS_LB_GLRevAccountDimensions')//Write off creation form
        {
            sks_lb_writeoffTmp = element.args().record();
    
            this.design().caption("@SYS300592");
    
            if(menuItemName == 'SKS_LB_TmpGLCROffsetLedgerDimension')
            {
                tmpLedgerBase.DefaultDimension = sks_lb_writeoffTmp.CROffsetLedgerDimension;
                if(sks_lb_writeoffTmp.reasoncode != '')
                {
                    reasonExists = true;
                }
            }
            else
            {
                tmpLedgerBase.DefaultDimension = sks_lb_writeoffTmp.AutoRevOffsetLedgerDimension;
                if(sks_lb_writeoffTmp.RevReasonCode != '' || sks_lb_writeoffTmp.AutoCRAutoRev == NoYes::No)
                {
                    reasonExists = true;
                }
            }
            DimensionEntryControl.allowEdit(allowEdit);
            DimensionEntryControl.parmCompany(SKS_LB_WriteoffTmp.CustomerCompany);
            DimensionEntryControl.parmValidateBlockedForManualEntry(true);
    
            tmpLedgerBase.insert();
    
        }
        else if(menuItemName == 'SKS_LB_GLCROffsetLedgerDimension' || menuItemName == 'SKS_LB_GLRevOffsetLedgerDimension')//Write off details form
        {
            SKS_LB_WriteoffDetails = element.args().record();
    
            this.design().caption("@SYS300592");
    
            if(menuItemName == 'SKS_LB_GLCROffsetLedgerDimension')
            {
                tmpLedgerBase.DefaultDimension  = SKS_LB_WriteoffDetails.CROffsetLedgerDimension;
                if(SKS_LB_WriteoffDetails.reasoncode != '')
                {
                    reasonExists = true;
                }
            }
            else
            {
                tmpLedgerBase.DefaultDimension  = SKS_LB_WriteoffDetails.RevOffsetLedgerDimension;
                if(SKS_LB_WriteoffDetails.RevReasonCode != '' || sks_lb_writeoffTmp.AutoCRAutoRev == NoYes::No)
                {
                    reasonExists = true;
                }
            }
            DimensionEntryControl.allowEdit(allowEdit);
            DimensionEntryControl.parmCompany(SKS_LB_WriteoffDetails.CustomerCompany);
            DimensionEntryControl.parmValidateBlockedForManualEntry(reasonExists);
    
            tmpLedgerBase.insert();
        }
        else if(menuItemName == 'SKS_LB_ARErrRevOffsetDimension')//Workbench errors grid
        {
            SKS_lb_journalarerrors = element.args().record();
    
            this.design().caption("@SYS300592");
    
            tmpLedgerBase.DefaultDimension  = sks_lb_journalarerrors.AutoRevOffsetLedgerDimension;
            if(sks_lb_journalarerrors.RevReasonCode != '' || sks_lb_journalarerrors.AutoCRRev == NoYes::No)
            {
                reasonExists = true;
            }
            DimensionEntryControl.allowEdit(allowEdit);
            DimensionEntryControl.parmCompany(sks_lb_journalarerrors.CustomerCompany);
            DimensionEntryControl.parmValidateBlockedForManualEntry(true);

            tmpLedgerBase.insert();
        }
        else if(menuItemName == 'SKS_LB_SettlementRevOffsetDimension')//Settlements form
        {
            SKS_LB_JournalARApplic = element.args().record();
    
            this.design().caption("@SYS300592");
    
            tmpLedgerBase.DefaultDimension  = SKS_LB_JournalARApplic.AutoRevOffsetLedgerDimension;
            if(SKS_LB_JournalARApplic.RevReasonCode != '' || SKS_LB_JournalARApplic.AutoCRAutoRev == NoYes::No)
            {
                reasonExists = true;
            }
            DimensionEntryControl.allowEdit(allowEdit);
            DimensionEntryControl.parmCompany(SKS_LB_JournalARApplic.CustTransDataAreaId);
            DimensionEntryControl.parmValidateBlockedForManualEntry(true);
    
            tmpLedgerBase.insert();
        }
        else if(menuItemName == 'SKS_EPY_DefaultDimensions')
        {
            SKS_EPY_Setup = element.args().record();
            tmpLedgerBase.DefaultDimension  = SKS_EPY_Setup.EPYDefaultDim;
            this.design().caption("@SYS300592");
    
            DimensionEntryControl.allowEdit(allowEdit);
            DimensionEntryControl.parmCompany(curExt());
            DimensionEntryControl.parmValidateBlockedForManualEntry(false);
    
            tmpLedgerBase.insert();
        }
        else//Bank rec form
        {
            sks_BR_GLMappingRuleLookup = element.args().record();
    
            this.design().caption("@SYS300592");
    
            tmpLedgerBase.DefaultDimension  = sks_BR_GLMappingRuleLookup.OffsetDefaultDimension;
            DimensionEntryControl.allowEdit(allowEdit);
            DimensionEntryControl.parmCompany(sks_BR_GLMappingRuleLookup.OffsetCompany);        
            DimensionEntryControl.parmValidateBlockedForManualEntry(true);
    
            tmpLedgerBase.insert();
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>TmpLedgerBase</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
        
            if(menuItemName == 'SKS_LB_GLCROffsetLedgerDimension')
            {
                SKS_LB_WriteOffDetails.CROffsetLedgerDimension = TmpLedgerBase.DefaultDimension;
            }
            else if(menuItemName == 'SKS_LB_TmpGLCROffsetLedgerDimension')
            {
                sks_lb_writeoffTmp.CROffsetLedgerDimension = TmpLedgerBase.DefaultDimension;
            }
            else if(menuItemName == 'SKS_LB_GLRevAccountDimensions')
            {
                sks_lb_writeoffTmp.AutoRevOffsetLedgerDimension = tmpLedgerBase.DefaultDimension;
            }
            else if(menuItemName == 'SKS_LB_GLRevOffsetLedgerDimension')
            {
                SKS_LB_WriteoffDetails.RevOffsetLedgerDimension = tmpLedgerBase.DefaultDimension;
            }
            else if(menuItemName == 'SKS_LB_ARErrRevOffsetDimension')
            {
                SKS_LB_journalarerrors.AutoRevOffsetLedgerDimension = TmpLedgerBase.defaultdimension;
            }
            else if(menuItemName == 'SKS_LB_SettlementRevOffsetDimension')
            {
                sks_lb_journalarapplic.AutoRevOffsetLedgerDimension = TmpLedgerBase.DefaultDimension;
            }
            else if(menuItemName == 'SKS_EPY_DefaultDimensions')
            {
                SKS_EPY_Setup.EPYDefaultDim = TmpLedgerBase.DefaultDimension;
            }
            else
            {
                sks_BR_GLMappingRuleLookup.OffsetDefaultDimension = tmpLedgerBase.DefaultDimension;
            }
        
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            ret = super();
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>TmpLedgerBase</Name>
			<Table>TmpLedgerBase</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>COSCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>COSNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Counter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GeneralJournalEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>id</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IdName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>isCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Module</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalDocument</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecordRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecordTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCodeString</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TraceNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionLineRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS300591</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DimensionGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>DimensionEntryControl</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormContainerControl">
						<Name>DimensionEntryControl</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Container</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>DimensionEntryControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>parmControllerClassName</Name>
									<Type>ExtendedDataType</Type>
									<TypeName>ClassName</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmControlLabelText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmEnumerationName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmDataSourceName</Name>
									<Type>String</Type>
									<Value>TmpLedgerBase</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmValueSetReferenceField</Name>
									<Type>String</Type>
									<Value>DefaultDimension</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmEnumValueSetReferenceField</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
						<Controls />
					</AxFormControl>
				</Controls>
				<HideIfEmpty>No</HideIfEmpty>
				<FrameType>None</FrameType>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoLeft</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>