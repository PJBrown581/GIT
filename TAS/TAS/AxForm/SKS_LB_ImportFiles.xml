<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SKS_LB_ImportFiles</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SKS_LB_ImportFiles extends FormRun
{
    CompanyBankAccountId importBankAccount; // Current Bank Account being processed.
    CurrencyCode TranCuryCode;              // Current Transaction Currency
    TransDate TranEffDate;                  // Transaction Currency Effective Date
    ExchRate TranERate;                     // Transaction Currency Exchange Rate
    xInfo myInfo;
    SKS_LB_AutoProcessImport    cls_SKS_LB_AutoProcessImport;
}
]]></Source>
			</Method>
			<Method>
				<Name>CheckUserSelectionLB</Name>
				<Source><![CDATA[
    boolean CheckUserSelectionLB()
    {

        SKS_LB_ImportFiles TempTable;
        boolean CheckUserSelectionLBResult;
        SKS_LB_Import           cls_SKS_LB_Import  = new SKS_LB_Import();
        boolean RecordsFound;
        CompanyBankAccountId thisimportBankAccount;
        str path;
        str errorStr;
        ;

        importBankAccount = '';
        CheckUserSelectionLBResult = True;
        RecordsFound = False;

        while  Select * from TempTable where TempTable.Selected == true && CheckUserSelectionLBResult == true
        {
            RecordsFound = True;
            if ( strlen(thisimportBankAccount) == 0)
            {
                thisimportBankAccount = TempTable.BankAcct;
            }
            else if ( strcmp(thisimportBankAccount, TempTable.BankAcct) != 0)
            {
                // ERROR - multiple bank accounts selected.
                box::info("@SKS455","@SKS352");
                CheckUserSelectionLBResult = false;
            }

            if ( CheckUserSelectionLBResult == true)
            {
                path = System.IO.Path::GetDirectoryName(TempTable.Filename);
                if (  strlen(cls_SKS_LB_Import.CheckLBFolders(SKS_LB_In_Process::InProcess_Test, path)) != 0)
                {
                    if ( strlen(cls_SKS_LB_Import.CheckLBFolders(SKS_LB_In_Process::Create, path)) != 0)
                    {
                        // ERROR - Missing SK-In Process folder.
                        errorStr = "@SKS456" + path + "@SKS457";

                        box::info( errorStr ,"@SKS352");
                        CheckUserSelectionLBResult = false;
                    }
                }

            }

        }

        if ( RecordsFound == False && CheckUserSelectionLBResult == true)
        {
            box::info("@SKS458","@SKS352"); // Must select a row to process.
            CheckUserSelectionLBResult = false;
        }

        return CheckUserSelectionLBResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>GetBankAccount</Name>
				<Source><![CDATA[
    public CompanyBankAccountId GetBankAccount()
    {
        return importBankAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>GetCurrencyCode</Name>
				<Source><![CDATA[
    public CurrencyCode GetCurrencyCode()
    {
        return TranCuryCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJournalIDLength</Name>
				<Source><![CDATA[
    public int getJournalIDLength()
    {
        DictType    dictType;
        ;
        dictType = new DictType(extendedTypeNum(JournalId));

        return dictType.stringLen();
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        SKS_PP_500PPBas dd500PP = new SKS_PP_500PPBas();
        int result;
        ;
        TranCuryCode = '';
        TranEffDate = DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone());
        TranERate = 0;
        myInfo = new xInfo();

        super();
        this.SetupFormLB();

        cls_SKS_LB_AutoProcessImport = new SKS_LB_AutoProcessImport();

        if ( !element.args().caller())
        {
            throw error("@SYS96590"); //Form cannot be called directly.
        }

        result = dd500PP.IsRegistered('LB');
        if (result != 1)
        {
            box::warning("@SKS326");
            this.close();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>RunImport</Name>
				<Source><![CDATA[
    void RunImport()
    {

        SKS_LB_ImportFiles      rec_SKS_LB_ImportFiles;
        str                     FileName;
        int                     JournalIDlen;

        JournalIDlen = element.getjournalidlength();

        while  Select * from rec_SKS_LB_ImportFiles where rec_SKS_LB_ImportFiles.Selected == true
        {
            myinfo.writeCustomStatlineItem( "@SKS462" + FileName);

            cls_SKS_LB_AutoProcessImport.initReaderInfo(Global::CLRSystemDateTime2UtcDateTime(rec_SKS_LB_ImportFiles.FileDate), rec_SKS_LB_ImportFiles.FormatID, rec_SKS_LB_ImportFiles.Filename, rec_SKS_LB_ImportFiles.BankAcct);
            cls_SKS_LB_AutoProcessImport.filereader(false, true);
        }

        element.args().caller().RefreshGrid();
    }

]]></Source>
			</Method>
			<Method>
				<Name>SetCurrencyDate</Name>
				<Source><![CDATA[
    public void SetCurrencyDate( date setDate)
    {
        TranEffDate = setDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>SetExchangeRate</Name>
				<Source><![CDATA[
    public void SetExchangeRate( ExchRate setExchRate)
    {
        TranERate = setExchRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>SetupFormLB</Name>
				<Source><![CDATA[
    void SetupFormLB()
    {
        SKS_LB_Bank sks_lb_bank;
        SKS_LB_ImportFiles lSKS_LB_ImportFiles;
        str currentPath;
        str currentFile;
        List                    LBFilesToProcess;
        ListEnumerator          LBFilesToProcessEnumerator;
        ;

        // Retrieve from files

        delete_from lSKS_LB_ImportFiles;

        SKS_EB_BankIntegOptWithNoLicense bankIntOption = SKS_EB_FileStorage::find().StorageOption_LB;
        SKS_BF_BankIntType SKS_BF_BankIntType = SKS_BF_BankIntType::FileHubLocal;
        if(bankIntOption == SKS_EB_BankIntegOptWithNoLicense::BankFabricEnumValue)
        {
            SKS_BF_BankIntType = SKS_BF_BankIntType::BankFabric;
        }
        SKS_EB_FileHub fileHub = SKS_EB_FileHub::construct(SKS_BF_BankIntType);
        
        while  Select * from sks_lb_bank where sks_lb_bank.LBFormatId != ''
        {
            //Setup changes push out to the bank table so the bank table always holds the correct information
            if(SKS_BF_BankIntType == SKS_BF_BankIntType::BankFabric)
            {
                currentPath = sks_lb_bank.LBBankFabricLocation;
            }
            else
            {
                currentPath = sks_lb_bank.LBPath;
            }

            if(strlen(currentPath) == 0)
            {
                continue;
            }

            if(fileHub.runDirectoryExists(currentPath))
            {
                LBFilesToProcess  = fileHub.runDirectoryGetFiles(currentPath, '*.*');
            }
            else
            {
                info(strFmt("@SKS:SKGLBPathNotFound", currentPath, sks_lb_bank.BankAccountId, SKS_lb_bank.LBFormatId));
            }

            LBFilesToProcessEnumerator = LBFilesToProcess.getEnumerator();
            LBFilesToProcessEnumerator.reset();

            RecordInsertList ril = new RecordInsertList(tableNum(SKS_LB_ImportFiles));
            while(LBFilesToProcessEnumerator.moveNext())
            {
                currentFile = LBFilesToProcessEnumerator.current();
                if(SKS_BF_BankIntType == SKS_BF_BankIntType::BankFabric)
                {
                    currentFile = System.IO.Path::Combine(sks_lb_bank.LBBankFabricLocation, System.IO.Path::GetFileName(currentFile));
                }
                fileHub.runFileInquire(currentFile);

                lSKS_LB_ImportFiles.Filename = currentFile;
                lSKS_LB_ImportFiles.FileDate = DateTimeUtil::date(CLRSystemDateTime2UtcDateTime(fileHub.attrFileModified()));
                lSKS_LB_ImportFiles.Selected = false;
                lSKS_LB_ImportFiles.FormatID = sks_lb_bank.LBFormatId;
                lSKS_LB_ImportFiles.BankAcct = sks_lb_bank.BankAccountId;
                lSKS_LB_ImportFiles.InProcess = false;
                ril.add(lSKS_LB_ImportFiles);
            }
            ril.insertDatabase();
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>DS_LB_ImportFiles</Name>
				<Methods />
				<Fields>
					<Field>
						<DataField>Selected</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
                SKS_LB_ImportValidation ImportValidation;
                SKS_LB_ImportFiles   Check_DS_LB_ImportFiles;
                ;

                ret = super();

                ImportValidation = new SKS_LB_ImportValidation();
                if ( DS_LB_ImportFiles.Selected == true )
                {
                    if (cls_SKS_LB_AutoProcessImport.ValidateFile(DS_LB_ImportFiles.Filename, DS_LB_ImportFiles.FileDate))
                    {
                        return false;
                    }

                    ImportButton.enabled(true);
                }
                else
                {

                    select count(RecId) from Check_DS_LB_ImportFiles where Check_DS_LB_ImportFiles.Selected == true;

                    if ( Check_DS_LB_ImportFiles.RecId <= 1)
                    {
                        ImportButton.enabled(false);
                    }
                    else
                    {
                        ImportButton.enabled(true);
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>DS_BankAccount</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        ///Write methodn on the bankaccount datsource
        /// </summary>
        public void write()
        {
            //import form is never trying to write this record but AX
            //will return error on write if user doesn't have permissions to table
            return;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>RefreshButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            element.SetupFormLB();
            DS_LB_ImportFiles_ds.executeQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ImportButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            BankAccountTable tBankAccountTable;
            //CompanyInfo companyInfo;
            boolean runIt = false;
            CompanyInfo CompanyInfo;
            CurrencyCode currencyCode;
            SKS_PP_Sys              cls_SKS_PP_Sys = new SKS_PP_Sys();

            super();

            this.enabled(false);

            Select firstOnly * from DS_LB_ImportFiles where DS_LB_ImportFiles.Selected == true;
            importBankAccount = DS_LB_ImportFiles.BankAcct;

            select firstOnly * from tBankAccountTable where tBankAccountTable.AccountID == importBankAccount;
            TranCuryCode = tBankAccountTable.CurrencyCode;
            // Open the JournalID/Currency sub form for confirmation.
            companyInfo = CompanyInfo::find();
            currencyCode = Ledger::accountingCurrency(companyInfo.RecId);

            // If bank account currency and company is different then dialog-form will be shown to user
            // and we will use this exch rate the user entered. In this case, this parameter sets true to avoid overriding.
            boolean skipExchRate;

            if (currencyCode != tBankAccountTable.CurrencyCode)
            {
                runIt=cls_SKS_PP_Sys.CallModalForm( element, formstr(SKS_LB_ImportFiles_JournalID));

                skipExchRate = true;

                cls_SKS_LB_AutoProcessImport.SetExchangeRate(TranERate);
                cls_SKS_LB_AutoProcessImport.SetCurrencyDate(TranEffDate);
            }
            else
            {
                runIt=true;
            }
            // Valid Journal entry?
            if (runIt && element.CheckUserSelectionLB())
            {
                cls_SKS_LB_AutoProcessImport.initCurrencyInfo(DS_LB_ImportFiles.BankAcct, skipExchRate);
                element.RunImport();
                element.closeOk();
            }


            element.SetupFormLB();
            DS_LB_ImportFiles_ds.executeQuery();
            this.enabled(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>DS_LB_ImportFiles</Name>
			<Table>SKS_LB_ImportFiles</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BankAcct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Filename</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InProcess</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Selected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>DS_BankAccount</Name>
			<Table>BankAccountTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountNameKana_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ActiveFrom</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ActiveTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccountStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCIN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankClearingCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCodeType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCompanyStatementName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankConstantSymbol</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankContractAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDestinationName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankInterbankClearingCode_BE</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankMultiCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPositivePayFormat</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPositivePayFormatName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPositivePayStartDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankReconAllowedPennyDifference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankReconciliationEnabled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankReconciliationMatchRuleSet</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankReconciliationStmtAsPaymConfirm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankReconMatchAutoAfterImport</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankReconMatchRuleManualMatch</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankReconMatchRuleManualReversal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankSortCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankStatementFormat</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankStatementName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankSuffix</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransferCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CellularPhone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyPaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPerson</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrAccount_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyOrder_TemplateName_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencySellOrder_TemplateName_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerPaymentFeeLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustPaymFeePost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DebitDirectId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscCreditMaxMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DivisionPaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Email</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FeeContractAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroContract</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GiroContractAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IBAN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeBankBarCode_FI</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceRemitAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceRemittanceLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>isBankPrenote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsNACHAFileBlocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalNameId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Location</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LvDefaultBank</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LvPayOrderType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NsfFeeMarkupGroupId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NsfFeeMarkupGroupModule</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NsfLedgerJournalName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OverDraftLimit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Pager</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymForeignExportPath_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymLocalExportPath_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymOrderNumSeqId_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Phone</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PhoneLocal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrenoteResponseDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrintGiro_FI</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RegistrationNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemitCollectionAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemitDiscountAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceCollectionLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceDiscountLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Rfc_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFT_AcctApprovalDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFT_AcctApprover</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFT_AcctModifiedDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFT_AcctModifier</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFT_AcctStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SMS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SpecificSymbol</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SWIFTNo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TeleFax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Telex</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TemplateFileName_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransType_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>URL</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DelayActive>No</DelayActive>
			<JoinSource>DS_LB_ImportFiles</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SKS460</Caption>
		<DataSource xmlns="">DS_LB_ImportFiles</DataSource>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">SimpleList</Style>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1449551461</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>RefreshButton</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SKS726</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
								<NormalImage>Refresh</NormalImage>
								<Text>@SYS113222</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ImportButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612734</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SKS724</HelpText>
								<NeededPermission>Create</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SKS453</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>DS_LB_ImportFiles_BankAcct</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>DS_LB_ImportFiles_Selected</Name>
						<ElementPosition>613566756</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<BackgroundColor>WindowBackground</BackgroundColor>
						<DataField>Selected</DataField>
						<DataSource>DS_LB_ImportFiles</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DS_LB_ImportFiles_BankAcct</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>920350134</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>BankAcct</DataField>
						<DataSource>DS_LB_ImportFiles</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DS_BankAccount_CurrencyCode</Name>
						<AllowEdit>No</AllowEdit>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>CurrencyCode</DataField>
						<DataSource>DS_BankAccount</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DS_LB_ImportFiles_Filename</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1227133512</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>Filename</DataField>
						<DataSource>DS_LB_ImportFiles</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>DS_LB_ImportFiles_FileDate</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1533916890</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Date</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>FileDate</DataField>
						<DataSource>DS_LB_ImportFiles</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DS_LB_ImportFiles_FormatID</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>1840700268</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>FormatID</DataField>
						<DataSource>DS_LB_ImportFiles</DataSource>
					</AxFormControl>
				</Controls>
				<AlternateRowShading>No</AlternateRowShading>
				<DataSource>DS_LB_ImportFiles</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>