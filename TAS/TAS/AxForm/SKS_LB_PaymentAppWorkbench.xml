<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SKS_LB_PaymentAppWorkbench</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SKS_LB_PaymentAppWorkbench extends FormRun
{
    QueryBuildRange     mJournalARJournalIDRange;
    QueryBuildRange     mJournalARJournalErrorIDRange;
    QueryBuildRange     mJournalARCompanyRange;

    SKS_LB_Journal      local_LB_Journal;
    SKS_LB_Journal      prev_LB_Journal;
    SKS_LB_Journal      msks_lb_journal;
    SKS_PP_Setup        mSKS_PP_Setup;
    SKS_LB_Setup_AutoCRParms mSKS_LB_Setup_AutoCRParms;
    SelectableDataArea  mAutoCRCompany;
    SKS_LB_54000Bas     mSKS_LB_54000Bas;
    SKS_LB_FileFormat   sks_lb_fileformat;
    boolean             errorslookup;
    boolean             parentChild;

    boolean mDimensionFail;
    str     MenuItemName;
}
]]></Source>
			</Method>
			<Method>
				<Name>calcRemainingValues</Name>
				<Source><![CDATA[
    void calcRemainingValues(AmountCur _invBalPmtCur)
    {
        RemainAmountInvCur.realValue(CustTransOpenError.AmountCur -
                (editSettleAmountInvCur.realValue()+editDiscountInvCur.realValue()));
        RemainAmountPmtCur.realValue(_invBalPmtCur -
                (SKS_LB_JournalARErrors.ActualSettlementAmountCur+SKS_LB_JournalARErrors.DiscApplyAmt));

    }

]]></Source>
			</Method>
			<Method>
				<Name>checkSetJournalComplete</Name>
				<Source><![CDATA[
    boolean checkSetJournalComplete()
    {
        SKS_LB_Journal sks_LB_Journal;
        SKS_LB_JournalAR sks_LB_JournalARComplete;
        SKS_LB_JournalARErrors sks_LB_JournalARErrorsComplete;
        select count(RecID)
        from sks_LB_JournalARComplete
        where sks_LB_JournalARComplete.JournalId == local_LB_Journal.JournalId
        && sks_LB_JournalARComplete.BatchNum == local_LB_Journal.BatchNum
        && sks_LB_JournalARComplete.LedgerJournalTransRecId == 0;

        select count(RecID)
        from sks_LB_JournalARErrorsComplete
        where sks_LB_JournalARErrorsComplete.JournalId == local_LB_Journal.JournalId
        && sks_LB_JournalARErrorsComplete.BatchNum == local_LB_Journal.BatchNum;


        //If no incomplete good lines left and no error lines, close the journal
        If (sks_LB_JournalARComplete.RecId == 0 && sks_LB_JournalARErrorsComplete.Recid == 0)
        {
            ttsbegin;
            select firstonly forUpdate sks_LB_Journal
            where sks_LB_Journal.JournalID == local_LB_Journal.JournalId
            && sks_LB_Journal.BatchNum == local_LB_Journal.BatchNum;

            sks_LB_Journal.KeepDelete = SKS_LB_Status::Completed;

            sks_LB_Journal.update();

            ttscommit;
            return 1;
        }
        else
        {
            return 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        ;
        if(local_LB_Journal)
        {
            local_LB_Journal = SKS_LB_JournalInUse::updateBlockServer(local_LB_Journal,
                                                                    JournalBlockLevel::InUse,
                                                                    JournalBlockLevel::None,
                                                                    strFmt("@SKS911",local_LB_Journal.JournalId, local_LB_Journal.BatchNum));
            FormDataUtil::getFormDataSource(local_LB_Journal).research(true);
        }
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>CreateAlert</Name>
				<Source><![CDATA[
    public void CreateAlert(JournalID  Journalid, SKS_LB_BatchNum  BatchNum, UserID ID, BankChequeNum ChkNum, CustVendAC custAcct, AmountCur PmtAmount, boolean restrictedView)
    {
        SKS_LB_AlertClass   EN = new SKS_LB_AlertClass();
        MenuFunction MenuFunction;
        if(restrictedView)
        {
            MenuFunction = new MenuFunction('SKS_LB_ProcessLockBoxFilesAll', MenuItemType::Display);
            EN.parmSubject(strFmt("@SKS3560", ChkNum , custAcct , num2str(PmtAmount, 1, 2, 1, 2)));
        }
        else
        {
            MenuFunction = new MenuFunction('SKS_LB_ProcessLockBoxFiles', MenuItemType::Display);
            EN.parmSubject(strFmt("@SKS3580", ChkNum , custAcct , num2str(PmtAmount, 1, 2, 1, 2)));
        }

        EN.parmDataSourceName('SKS_LB_Journal');
        EN.parmMessage('Lockbox workbench');
        EN.parmUserId(ID);
        EN.parmRecord(mSKS_LB_Journal);
        EN.parmMenuFunction(MenuFunction);
        EN.parmNotificationType(EventNotificationType::Action);
        EN.create();
    }

]]></Source>
			</Method>
			<Method>
				<Name>DeleteDocs</Name>
				<Source><![CDATA[
    void DeleteDocs(Common CurrentDataSource)
    {
        DocuRef             docuRef;
        ;

        while select forupdate docuRef
        where docuRef.RefTableId == CurrentDataSource.TableId &&
              docuRef.RefRecId == CurrentDataSource.RecId &&
              docuRef.ActualCompanyId == CurrentDataSource.DataAreaId
        {

            if (docuRef.validateDelete())
            {
                docuRef.delete();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableCreateAutoCreditButton</Name>
				<Source><![CDATA[
    void enableDisableCreateAutoCreditButton()
    {

        SKS_LB_Depositor l_sks_lb_depositor;
        boolean mainAcctFlg = false;

        ;

        l_sks_lb_depositor = SKS_LB_Depositor::findWithSetup(SKS_LB_JournalARErrors.CustomerCompany, SKS_LB_JournalARErrors.CustAccount);

        if(l_sks_lb_depositor.AutoCR && mSKS_PP_Setup.AutoCR)
        {
            mainAcctFlg = true;
        }
        else
        {
            element.getSKS_LB_Setup_AutoCRParms(SKS_LB_JournalARErrors.CustomerCompany);
            if(msks_LB_Setup_AutoCRParms.AutoCRLedgerDimension)
            {
                mainAcctFlg = true;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDisableGoodGridButtons</Name>
				<Source><![CDATA[
    void enableDisableGoodGridButtons()
    {
        // Enable/Disable the Payment Journal and Reassign Payments buttons.
        PaymentJournal.enabled(SKS_LB_JournalAR.LedgerJournalTransRecId > 0);
        ReassignPayments.enabled(SKS_LB_JournalAR.LedgerJournalTransRecId == 0);
        // Enable the Settlement Button
        Settlement.enabled(true);

        AutoRevJrnl.enabled(SKS_LB_JournalAR_AutoCRRevJrnlId.valueStr() != '');

    }

]]></Source>
			</Method>
			<Method>
				<Name>EnableDisableErrorGridButtons</Name>
				<Source><![CDATA[
    void EnableDisableErrorGridButtons()
    {
        if(((SKS_LB_JournalARErrors.CustAccountSugg != '') && mSKS_LB_54000Bas.Validate_Customer_Exists(SKS_LB_JournalARErrors.CustAccountSugg, SKS_LB_JournalARErrors.CustomerCompany))
            || ((SKS_LB_JournalARErrors.CustAccount != '') && mSKS_LB_54000Bas.Validate_Customer_Exists(SKS_LB_JournalARErrors.CustAccount, SKS_LB_JournalARErrors.CustomerCompany)))
        {
            SKS_LB_WriteoffTmp.enabled(true);
        }
        else
        {
            SKS_LB_WriteoffTmp.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSKS_LB_Setup_AutoCRParms</Name>
				<Source><![CDATA[
    private void getSKS_LB_Setup_AutoCRParms(SelectableDataArea _company)
    {
        //only do lookup if the correct record is not already in the buffer.
        if (_company != mAutoCRCompany)
        {
            msks_LB_Setup_AutoCRParms = SKS_LB_Setup_AutoCRParms::find(_company);
            mAutoCRCompany = _company;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    Public void init()
    {
        ;
        super();
        mAutoCRCompany = '';

        errorslookup = false;

        if (element.args().dataset() != tablenum(SKS_LB_Journal))
        {
            throw error("@SYS96590");
        }

        MenuItemName = element.args().menuitemname();
        msks_lb_journal = element.args().record();
        if(msks_lb_journal.owner == '')
        {
            msks_lb_journal.Owner = curUserId();
        }

        if(msks_lb_journal.BatchNum == 'AUTO')
        {
            SKS_LB_BankCnt.visible(false);
            SKS_LB_BankPmtTot.visible(false);
        }
        select * from mSKS_PP_Setup;
        if(!mSKS_PP_Setup.LBErrorShowChgdPmt)
        {
            SKS_LB_JournalARErrors_ChangedPmtAmountCur.visible(False);
        }
        else
        {
            SKS_LB_JournalARErrors_ChangedPmtAmountCur.visible(True);
        }
        if(mSKS_PP_Setup.LBDimensionInGrid)
        {
            DimensionsError.visible(true);
            Dimensions.visible(true);
            OffsetDimensionString.visible(true);
            OffsetDimensionsError.visible(true);
        }
        else
        {
            DimensionsError.visible(false);
            Dimensions.visible(false);
            OffsetDimensionString.visible(false);
            OffsetDimensionsError.visible(false);
        }

        if(mSKS_PP_Setup.lballowduplicatechks == NoYes::Yes)
        {
            SKS_LB_JournalAR_RefNbrDupe.visible(false);
        }
        else
        {
            SKS_LB_JournalAR_RefNbrDupe.visible(true);
        }

        if(mSKS_PP_Setup.LBShowLookupFields)
        {
            altinvlookupref.visible(true);
            altinvlookuptype.visible(true);
        }
        else
        {
            altinvlookupref.visible(false);
            altinvlookuptype.visible(false);
        }

        if(mSKS_PP_Setup.FFTPM || mSKS_PP_Setup.LBStandardDed)
        {
            deductiontotal.visible(true);
            this.PopulateDeductionTotal();
        }
        else
        {
            deductiontotal.visible(false);
        }

        mSKS_LB_54000Bas = SKS_LB_54000Bas::Construct();

    }

]]></Source>
			</Method>
			<Method>
				<Name>MarkInReview</Name>
				<Source><![CDATA[
    public void MarkInReview()
    {
        SKS_LB_JournalARErrors  lsks_lb_journalarerrors;
        SKS_LB_JournalAR        lsks_lb_journalar;

        select firstOnly lsks_lb_journalarerrors where lsks_lb_journalarerrors.BatchNum == mSKS_LB_Journal.BatchNum
            && lsks_lb_journalarerrors.JournalId == mSKS_LB_Journal.JournalId
            && lsks_lb_journalarerrors.AssignedTo != '' && lsks_lb_journalarerrors.ReviewStatus == SKS_LB_ReviewStatus::NeedsReview;

        if(lsks_lb_journalarerrors)
        {
            ttsBegin;
            mSKS_LB_Journal.inreview = noyes::Yes;
            mSKS_LB_Journal.update();
            ttsCommit;
            FormDataUtil::getFormDataSource(local_lb_journal).reread();
        }
        else
        {
            select firstOnly lsks_lb_journalar where lsks_lb_journalar.BatchNum == mSKS_LB_Journal.BatchNum
                && lsks_lb_journalar.JournalId == mSKS_LB_Journal.JournalId
                && lsks_lb_journalar.AssignedTo != '' && lsks_lb_journalar.ReviewStatus == SKS_LB_ReviewStatus::NeedsReview;

            if(!lsks_lb_journalar)
            {
                ttsBegin;
                mSKS_LB_Journal.inreview = noyes::No;
                mSKS_LB_Journal.update();
                ttsCommit;
                FormDataUtil::getFormDataSource(local_lb_journal).reread();
            }
            else
            {
                ttsBegin;
                mSKS_LB_Journal.inreview = noyes::Yes;
                mSKS_LB_Journal.update();
                ttsCommit;
                FormDataUtil::getFormDataSource(local_lb_journal).reread();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>MoveDocs</Name>
				<Source><![CDATA[
    void MoveDocs(
    Common _from,
    Common _to
    )
    {
        DocuRef DocuRef;
        DocuRef newDocuRef;
        RecordInsertList newDocuRefRecordInsertList;
        ;

        ttsbegin;

        newDocuRefRecordInsertList = new RecordInsertList(tableNum(DocuRef));
        // Loop through all the Doc refs and move them to be
        // associated with the othe guy.
        // Then delete the records.
        while select forupdate  DocuRef
            index Refidx
            where DocuRef.RefCompanyId == _from.dataAreaId &&
            DocuRef.RefTableId == _from.TableId &&
            DocuRef.RefRecId == _from.RecId
        {
            newDocuRef.data(docuRef);
            newDocuRef.RefCompanyId = _to.DataAreaId;
            newDocuRef.RefTableId = _to.TableId;
            newDocuRef.RefRecId = _to.RecId;
            newDocuRefRecordInsertList.add(newDocuRef);

            // Delete the original
            if (docuRef.validateDelete())
            {
                docuRef.delete();
            }
        }
        newDocuRefRecordInsertList.insertDatabase();
        ttscommit;

    }

]]></Source>
			</Method>
			<Method>
				<Name>moveErrorToGoodPmt</Name>
				<Source><![CDATA[
    void moveErrorToGoodPmt()
    {
        SKS_LB_JournalARErrors l_sks_LB_JournalARErrors;
        TmpSKS_LB_Importing     rec_TmpSKS_LB_Importing;
        SKS_LB_Process_IMPORTTEMP_Records   cls_SKS_LB_Process_IMPORTTEMP_Records = new SKS_LB_Process_IMPORTTEMP_Records();

        int Counter = 0;

        while select forupdate
                     l_sks_LB_JournalARErrors
                     where l_sks_LB_JournalARErrors.JournalId == local_LB_Journal.JournalID
                        && l_sks_LB_JournalARErrors.BatchNum == local_LB_Journal.BatchNum
                        && l_sks_LB_JournalARErrors.Selected == noYes::Yes
        {

            if(l_sks_LB_JournalARErrors.ReviewStatus != SKS_LB_ReviewStatus::NeedsReview && l_sks_LB_JournalARErrors.isDED != NoYes::Yes)
            {
                if (mSKS_LB_54000Bas.OKToSelect(l_sks_LB_JournalARErrors) == true)
                {
                    rec_TmpSKS_LB_Importing.initFromSKS_LB_JournalARErrors(l_sks_LB_JournalARErrors);                  

                    ttsbegin;

                    Counter++;

                    cls_SKS_LB_Process_IMPORTTEMP_Records.Journal_ARLB_Insert(rec_TmpSKS_LB_Importing, l_sks_LB_JournalARErrors.BankAcct,
                                                                           l_sks_LB_JournalARErrors.JournalId, l_sks_LB_JournalARErrors.BatchNum,
                                                                           l_sks_LB_JournalARErrors.Filename,
                                                                           l_sks_LB_JournalARErrors.FileDate, l_sks_LB_JournalARErrors.FormatID,
                                                                           local_LB_Journal.CurrencyCode,
                                                                           local_LB_Journal.ExchRate, SKS_LB_BatchSplitType::None,
                                                                           0, l_sks_LB_JournalARErrors.RecId);

                    ttscommit;

                    if(mSKS_PP_Setup.FFTPM && !l_sks_LB_JournalARErrors.isDED && !mSKS_PP_Setup.TPMRemainShortpaid && l_sks_LB_JournalARErrors.CustTransOpenRecId != 0)
                    {
                        ttsBegin;
                        SKS_LB_54000Bas::ShortpayDeductionFromErrorsCreation(l_sks_LB_JournalARErrors.CustTransOpenRecId, l_sks_LB_JournalARErrors.JournalId);
                        ttsCommit;
                    }

                }
                else
                {
                    error("@SKS483");
                }
            }
            else
            {
                if(l_sks_LB_JournalARErrors.ReviewStatus == SKS_LB_ReviewStatus::NeedsReview)
                {
                    info("@SKS3497");
                }
                else if(l_sks_LB_JournalARErrors.isDED == NoYes::Yes)
                {
                    if ((l_sks_LB_JournalARErrors.CustAccountErr == SKS_LB_CustIDErr::OK ||
                    l_sks_LB_JournalARErrors.CustAccountErr == SKS_LB_CustIDErr::BankTransLookUp ||
                    l_sks_LB_JournalARErrors.CustAccountErr == SKS_LB_CustIDErr::NameLookup ||
                    l_sks_LB_JournalARErrors.CustAccountErr == SKS_LB_CustIDErr::InvcNbrLookup ||
                    l_sks_LB_JournalARErrors.CustAccountErr == SKS_LB_CustIDErr::ManualLookup) &&
                    (l_sks_LB_JournalARErrors.CustAccountSugg != '' ||
                    (l_sks_LB_JournalARErrors.CustAccountSugg == '' && l_sks_LB_JournalARErrors.CustAccount != '')))
                    {
                        this.TPMARErrorsToAR(l_sks_LB_JournalARErrors);
                    }
                    else
                    {
                        error("@SKS483");
                    }
                }

            }
        }
        FormDataUtil::getFormDataSource(local_LB_Journal).reread();
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveGoodPmtToError</Name>
				<Source><![CDATA[
    [SuppressBPWarningAttribute('BPCheckInsertMethodInLoop', 'The l_SKS_LB_JournalARErrors buffer must be inserted in the loop as the method MoveDocs(SKS_LB_journalARApplic _from,SKS_LB_JournalArErrors _to) utilized the l_SKS_LB_JournalARErrors.recid assigned during the insert()')]
    void moveGoodPmtToError()
    {

        SKS_LB_JournalARApplic      l_SKS_LB_JournalARApplic;
        SKS_LB_JournalARErrors      l_SKS_LB_JournalARErrors;
        SKS_LB_JournalAR            l_SKS_LB_TmpJournalAR;
        CustTrans                   l_Custtrans;
        real pmtSettlDiff;

        if (SKS_LB_JournalAR.LedgerJournalTransRecId)
        {
            //This payment has already been processed, it cannot be edited or deleted.
            box::info("@SKS487");
            return;
        }
        if (SKS_LB_JournalAR.isParentPayment())
        {
            //Cannot delete or move a payment when other payments exist that were created by this payment.
            box::info("@SKS942");
            return;
        }

        if (SKS_LB_JournalAR.ParentJournalARID != 0 )
        {
            //Cannot delete a payment that was created from another payment
            box::info("@SKS943","@SKS352");
            return;
        }

        if(SKS_LB_JournalAR.ReviewStatus == SKS_LB_ReviewStatus::NeedsReview)
        {
            info("@SKS3497");
            return;
        }

        select crossCompany count(RecId), SUM(SettleAmountCur), sum(DiscApplyAmount), maxOf(LBInvoice), FileRecord, maxOf(CustTransRecID), maxOf(CustTransOpenRecId), maxOf(altinvlookupref), maxOf(altinvlookuptype),
            maxOf(AutoCRAutoRev), maxOf(AutoCROffsetLedgerDimension), maxOf(RevReasonCode), maxOf(WriteOff), maxOf(AutoRevLedgerDimension), maxOf(AutoRevOffsetLedgerDimension), maxOf(TrackingInvoices) from l_SKS_LB_JournalARApplic
            group by l_SKS_LB_JournalARApplic.FileRecord
            where l_SKS_LB_JournalARApplic.SKS_LB_JournalARRecId == SKS_LB_JournalAR.RecId;

        if(SKS_LB_JournalAR.FileRecord == -1 && l_SKS_LB_JournalARApplic) //Buffer is only populated if the record has multiple rows in the import file
        {
            pmtSettlDiff = SKS_LB_JournalAR.PmtAmountCur - SKS_LB_JournalAR.ActualSettleAmountCur;

            while(l_SKS_LB_JournalARApplic)
            {
                if(sks_lb_fileformat.PmtAmtEQSumChkAmts == NoYes::Yes)
                {
                    //pmtSettlDiff is used to handle if there is an overpayment on a check.  This will cause the
                    //overpayment to be applied to the first record, then zero the pmtSettlDiff.  this will
                    //result in the entire overpayment to be applied to the first line, then all subsequent
                    //to display their Applied amount as equal to their Settlement amount.
                    l_SKS_LB_JournalArErrors.PmtAmountCur = l_SKS_LB_JournalArApplic.SettleAmountCur + pmtSettlDiff;
                    pmtSettlDiff = 0;
                }
                else
                {
                    l_SKS_LB_JournalArErrors.PmtAmountCur = SKS_LB_JournalAr.PmtAmountCur;
                }
                
                l_SKS_LB_JournalArErrors.initFromSKS_LB_JournalAR(SKS_LB_JournalAR);               
                l_SKS_LB_JournalARErrors.AutoCROffsetLedgerDimension = l_SKS_LB_JournalARApplic.AutoCROffsetLedgerDimension;
                l_SKS_LB_JournalARErrors.RevReasonCode = l_SKS_LB_JournalARApplic.RevReasonCode;
                l_SKS_LB_JournalARErrors.AutoRevLedgerDimension = l_SKS_LB_JournalARApplic.AutoRevLedgerDimension;
                l_SKS_LB_JournalARErrors.AutoRevOffsetLedgerDimension = l_SKS_LB_JournalARApplic.AutoRevOffsetLedgerDimension;
                l_sks_lb_journalARErrors.TrackingInvoices = l_SKS_LB_JournalARApplic.TrackingInvoices;                
                l_SKS_LB_JournalARErrors.AutoCRRev = l_SKS_LB_JournalARApplic.AutoCRAutoRev;
                l_SKS_LB_JournalARErrors.WriteOff = l_SKS_LB_JournalARApplic.WriteOff;
                l_SKS_LB_JournalARErrors.AltInvLookupRef = l_SKS_LB_JournalARApplic.AltInvLookupRef;
                l_SKS_LB_JournalARErrors.AltInvLookupType = l_SKS_LB_JournalARApplic.AltInvLookupType;
                l_SKS_LB_JournalArErrors.CustTransRecId = l_sks_LB_journalARApplic.CustTransRecId;
                l_SKS_LB_JournalArErrors.CustTransOpenRecId = l_SKS_LB_JournalArApplic.CustTransOpenRecId;
                l_SKS_LB_JournalArErrors.ActualSettlementAmountCur = l_SKS_LB_JournalArApplic.SettleAmountCur;
                l_SKS_LB_JournalArErrors.Selected = noYes::No;
                l_SKS_LB_JournalArErrors.LBInvoice = l_sks_LB_journalARApplic.LBInvoice;
                l_SKS_LB_JournalArErrors.DiscApplyAmt = l_SKS_LB_JournalArApplic.DiscApplyAmount;
                l_SKS_LB_JournalArErrors.FileRecord = l_SKS_LB_JournalArApplic.FileRecord;
                if(l_SKS_LB_JournalARApplic.RecId == 1)
                {
                    //Find the CustTrans
                    l_CustTrans = null;
                    Select firstonly crossCompany Invoice, RecId from l_Custtrans where l_Custtrans.RecId == l_SKS_LB_JournalARApplic.CustTransRecID;
                    l_SKS_LB_JournalArErrors.Invoice = l_Custtrans.Invoice;
                    l_SKS_LB_JournalArErrors.CustTransOpenRecId = l_SKS_LB_JournalArApplic.CustTransOpenRecId;
                    l_SKS_LB_JournalArErrors.CustTransRecId = l_sks_LB_journalARApplic.CustTransRecId;
                }
                else
                {
                    l_SKS_LB_JournalArErrors.Invoice = '';
                    l_SKS_LB_JournalArErrors.CustTransOpenRecId = 0;
                    l_SKS_LB_JournalArErrors.CustTransRecId = 0;
                }

                l_SKS_LB_JournalARErrors.insert();

                // Move Docs from good records to Error Records
                element.MoveDocs(l_sks_LB_journalARApplic, l_SKS_LB_JournalArErrors );


                next l_SKS_LB_JournalARApplic;
            }
        }
        else //The buffer has not been found so this record represents a single row in the import file
        {
            l_SKS_LB_JournalArErrors.PmtAmountCur = SKS_LB_JournalAr.PmtAmountCur;
            l_SKS_LB_JournalArErrors.BankAcct = SKS_LB_JournalAR.BankAcct;
            l_SKS_LB_JournalArErrors.CustomerCompany =  SKS_LB_JournalAR.CustomerCompany;
            l_SKS_LB_JournalArErrors.CustAccount = SKS_LB_JournalAR.CustAccount;
            l_SKS_LB_JournalArErrors.CustAccountErr = SKS_LB_JournalAR.CustAccountErr;
            l_SKS_LB_JournalArErrors.CustAccountSugg = SKS_LB_JournalAR.CustAccountSugg;
            l_SKS_LB_JournalArErrors.CustName = SKS_LB_JournalAR.CustName;
            l_SKS_LB_JournalArErrors.DiscApplyAmt = l_SKS_LB_JournalArApplic.DiscApplyAmount;
            l_SKS_LB_JournalArErrors.PaymDate = SKS_LB_JournalAR.PaymDate;
            l_SKS_LB_JournalArErrors.FileDate = SKS_LB_JournalAR.FileDate;
            l_SKS_LB_JournalArErrors.Filename = SKS_LB_JournalAR.Filename;
            l_SKS_LB_JournalArErrors.ImageIdentifierFront = SKS_LB_JournalAR.ImageIdentifierFront;
            l_SKS_LB_JournalArErrors.ImageIdentifierBack = SKS_LB_JournalAR.ImageIdentifierBack;
            l_SKS_LB_JournalArErrors.FileRecord = SKS_LB_JournalAR.FileRecord;
            l_SKS_LB_JournalArErrors.FormatID = SKS_LB_JournalAR.FormatID;
            if(SKS_LB_JournalAR.Invoice != '*')
            {
                l_SKS_LB_JournalArErrors.Invoice = SKS_LB_JournalAR.Invoice;
            }
            else
            {
                l_SKS_LB_JournalArErrors.Invoice = '';
            }
            l_SKS_LB_JournalArErrors.LBInvoice = SKS_LB_JournalAR.LBInvoice;
            l_SKS_LB_JournalArErrors.LBSettlementMethod = SKS_LB_JournalAR.LBSettlementMethod;
            l_SKS_LB_JournalArErrors.CustBankAccountNum = SKS_LB_JournalAR.CustBankAccountNum;
            l_SKS_LB_JournalArErrors.CustBankRegNum = SKS_LB_JournalAR.CustBankRegNum;
            if(SKS_LB_JournalAR.isDED == NoYes::No)
            {
                if (SKS_LB_JournalAR.PmtAmountCur < 0 && SKS_LB_JournalAR.ParentRecid != 0 && parentChild && SKS_LB_JournalAR.ActualSettleAmountCur == 0)
                {
                    l_SKS_LB_JournalArErrors.InvoiceIdErr = SKS_LB_InvoiceIdErr::DebitAdjustment;
                    l_SKS_LB_JournalArErrors.ActualSettlementAmountCur = SKS_LB_JournalAR.PmtAmountCur;
                }
                else
                {
                    l_SKS_LB_JournalArErrors.InvoiceIdErr = SKS_LB_JournalAR.InvoiceIdErr;
                    l_SKS_LB_JournalArErrors.ActualSettlementAmountCur = SKS_LB_JournalAR.ActualSettleAmountCur;
                }
            }
            else
            {
                l_SKS_LB_JournalArErrors.ActualSettlementAmountCur = SKS_LB_JournalAR.PmtAmountCur;
            }
            l_SKS_LB_JournalArErrors.JournalId = SKS_LB_JournalAR.JournalId;
            l_SKS_LB_JournalArErrors.BatchNum = SKS_LB_JournalAR.BatchNum;
            l_SKS_LB_JournalArErrors.ChkRefNbr = SKS_LB_JournalAR.ChkRefNbr;
            l_SKS_LB_JournalArErrors.Selected = noYes::No;
            l_SKS_LB_JournalArErrors.PendingSettlement = SKS_LB_JournalAR.PendingSettlement;
            l_SKS_LB_JournalArErrors.ChangedPmtAmountCur = SKS_LB_JournalAR.ChangedPmtAmountCur;
            l_SKS_LB_JournalArErrors.CustTransOpenRecId = SKS_LB_JournalAR.CustTransOpenRecId;
            l_SKS_LB_JournalArErrors.CustTransRecId = SKS_LB_JournalAR.CustTransRecId;
            l_SKS_LB_JournalARErrors.DefaultDimension = SKS_LB_JournalAR.DefaultDimension;
            l_SKS_LB_JournalARErrors.ParentRecid = SKS_LB_JournalAR.ParentRecid;
            l_SKS_LB_JournalARErrors.PmtWasSplit = SKS_LB_JournalAR.PmtWasSplit;
            l_SKS_LB_JournalARErrors.AltInvLookupRef = l_SKS_LB_JournalARApplic.AltInvLookupRef;
            l_SKS_LB_JournalARErrors.AltInvLookupType = l_SKS_LB_JournalARApplic.AltInvLookupType;
            l_SKS_LB_JournalARErrors.FeeId = SKS_LB_JournalAR.FeeId;
            l_SKS_LB_JournalARErrors.FeeValue = SKS_LB_JournalAR.FeeValue;
            l_SKS_LB_JournalARErrors.Description = SKS_LB_JournalAR.Description;
            l_SKS_LB_JournalARErrors.AutoCRRev = l_SKS_LB_JournalARApplic.AutoCRAutoRev;
            l_SKS_LB_JournalARErrors.WriteOff = l_SKS_LB_JournalARApplic.WriteOff;
            l_SKS_LB_JournalARErrors.AutoCROffsetLedgerDimension = l_SKS_LB_JournalARApplic.AutoCROffsetLedgerDimension;
            l_SKS_LB_JournalARErrors.RevReasonCode = l_SKS_LB_JournalARApplic.RevReasonCode;
            l_SKS_LB_JournalARErrors.AutoRevLedgerDimension = l_SKS_LB_JournalARApplic.AutoRevLedgerDimension;
            l_SKS_LB_JournalARErrors.AutoRevOffsetLedgerDimension = l_SKS_LB_JournalARApplic.AutoRevOffsetLedgerDimension;
            l_sks_lb_journalARErrors.TrackingInvoices = l_SKS_LB_JournalARApplic.TrackingInvoices;
            l_SKS_LB_JournalARErrors.prepayment = SKS_LB_JournalAR.Prepayment;
            l_SKS_LB_JournalARErrors.PaymNote   = SKS_LB_JournalAR.PaymNote;
            l_SKS_LB_JournalARErrors.OffsetDimension = SKS_LB_JournalAR.OffsetDimension;
            l_SKS_LB_JournalARErrors.OffsetDimensionReference = SKS_LB_JournalAR.OffsetDimensionReference;
            l_SKS_LB_JournalARErrors.isDED = SKS_LB_JournalAR.isDED;
            l_SKS_LB_JournalARErrors.insert();


            // Move Docs from Good to Error
            element.MoveDocs(SKS_LB_JournalAR, l_SKS_LB_JournalARErrors);

        }
        ttsbegin;

        if(SKS_LB_JournalAR.isDED == NoYes::No)
        {
            if(SKS_LB_JournalAR.ParentRecid != 0)
            {
                //Finds any remaining records that share a parent ID but not a record ID
                Select firstonly forUpdate l_SKS_LB_TMPJournalAR
                where   l_SKS_LB_TMPJournalAR.ChkRefNbr == SKS_LB_JournalAR.ChkRefNbr
                    && l_SKS_LB_TMPJournalAR.JournalId == SKS_LB_JournalAR.JournalID
                    && l_SKS_LB_TMPJournalAR.Batchnum == SKS_LB_JournalAR.Batchnum
                    && l_SKS_LB_TMPJournalAR.parentrecid == SKS_LB_JournalAR.parentrecid
                    && l_SKS_LB_TMPJournalAR.RecId != SKS_LB_JournalAR.recid
                    && l_SKS_LB_TmpJournalAR.isDED == NoYes::No;


                if(l_SKS_LB_TmpJournalAR)
                {
                    //Add the payment amount being moved to the errors grid into the top record in the payments grid.
                    l_SKS_LB_TMPJournalAR.PmtAmountCur +=  l_SKS_LB_JournalARErrors.PmtAmountCur;
                    l_SKS_LB_TMPJournalAR.update();
                    //Update the errors grid records payment amounts to match the top record in the payments grid.
                    update_recordSet l_SKS_LB_JournalARErrors
                    Setting PmtAmountCur = l_SKS_LB_TMPJournalAR.PmtAmountCur
                    where l_SKS_LB_JournalARErrors.ChkRefNbr == SKS_LB_JournalAR.ChkRefNbr
                        && l_SKS_LB_JournalARErrors.JournalId == SKS_LB_JournalAR.JournalID
                        && l_SKS_LB_JournalARErrors.ParentRecID == SKS_LB_JournalAR.ParentrecID;
                }
                else//Only delete the amount from the total if it is not being moved
                {
                    local_LB_Journal.PmtTotal = local_LB_Journal.PmtTotal - SKS_LB_JournalAr.PmtAmountCur;
                    local_LB_Journal.update();
                }

            }
            else//Only delete the amount from the total if it is not being moved
            {
                local_LB_Journal.PmtTotal = local_LB_Journal.PmtTotal - SKS_LB_JournalAr.PmtAmountCur;
                local_LB_Journal.update();
            }

            local_LB_Journal.BatchPmtCnt -= 1;
            local_LB_Journal.update();

            delete_from l_SKS_LB_JournalARApplic where l_SKS_LB_JournalARApplic.SKS_LB_JournalARRecId == SKS_LB_JournalAR.RecId;
        }
        SKS_LB_JournalAR.delete();
        SKS_LB_54000Bas::markSplitPayments(local_LB_Journal.JournalID, local_LB_Journal.BatchNum);

        ttscommit;

        FormDataUtil::getFormDataSource(local_LB_Journal).reread();
        element.refreshGoodPayments();
        element.refreshErrorPayments();

    }

]]></Source>
			</Method>
			<Method>
				<Name>populatePmtErrGridCaptions</Name>
				<Source><![CDATA[
    void populatePmtErrGridCaptions()
    {

        Accountnum              CustAccount;
        int intRowCount;
        real realPmtTotal;
        ;

        realPmtTotal = 0;
        intRowCount = 0;
        CustAccount = '';

        SKS_LB_Process_IMPORTTEMP_Records::CalcBatchTotals(local_LB_Journal.JournalID, sks_lb_fileformat.FileType,
            sks_lb_fileformat.PmtAmtEQSumChkAmts, local_LB_Journal.batchnum);
        local_LB_Journal.reread();
        RealErrorGridPmtTotal.realValue(local_LB_Journal.BatchBadPmtTotal);
        SKS_LB_BatchCnt.value(local_LB_Journal.BatchPmtCnt);        
        SKS_LB_BatchPmtTot.realValue(SKS_LB_PmtTot.realValue() + RealErrorGridPmtTotal.realValue());
        IntErrorGridCount.value(local_LB_Journal.ErrCount);
        this.PopulateDeductionTotal();
        this.populateLedgerAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>populatePmtGridCaptions</Name>
				<Source><![CDATA[
    void populatePmtGridCaptions()
    {
        SKS_LB_JournalAR sks_lb_journalAR2;
        ;

        Select SUM(ActualSettleAmountCur), sum(PmtAmountCur) FROM sks_lb_journalAR2
         WHERE  sks_lb_journalAR2.JournalId == local_LB_Journal.JournalID &&
                sks_lb_journalAR2.BatchNum == local_LB_Journal.BatchNum;

        //Set good grid totals on the workbench form
        SKS_LB_BankPmtTot.realValue(local_LB_Journal.BankPmtTotal);
        SKS_LB_IntPmtCnt.value(local_LB_Journal.BatchPmtCnt - local_LB_Journal.ErrCount);      
        SKS_LB_PmtTot.realValue(sks_lb_journalAR2.PmtAmountCur);
        SKS_LB_RealPmtApplied.realValue(sks_lb_journalAR2.ActualSettleAmountCur);
        SKS_LB_BatchPmtTot.realValue(SKS_LB_PmtTot.realValue() + RealErrorGridPmtTotal.realValue());
        SKS_LB_BankCnt.value(local_LB_Journal.BankPmtCnt);
        SKS_LB_BatchCnt.value(local_LB_Journal.BatchPmtCnt);
        
        this.populateLedgerAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateLedgerAmount</Name>
				<Source><![CDATA[
    void populateLedgerAmount()
    {
        SKS_LB_JournalAR jourTransferredToLedger;

        select sum(PmtAmountCur) from jourTransferredToLedger
         where jourTransferredToLedger.JournalId == msks_lb_journal.JournalID
            && jourTransferredToLedger.BatchNum == msks_lb_journal.BatchNum
            && jourTransferredToLedger.IsTransferredToLedger;

        SKS_LB_LedgerAmount.realValue(jourTransferredToLedger.PmtAmountCur);
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshErrorPayments</Name>
				<Source><![CDATA[
    void refreshErrorPayments()
    {
        SKS_LB_JournalARErrors_ds.research();
        element.populatePmtErrGridCaptions();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshGoodPayments</Name>
				<Source><![CDATA[
    void refreshGoodPayments()
    {
        FormDataUtil::getFormDataSource(local_lb_journal).reread();
        SKS_LB_JournalAR_ds.research(true);
        
        element.populatePmtGridCaptions();
        element.EnableDisableWriteOffControls();
        this.PopulateDeductionTotal();
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshWB</Name>
				<Source><![CDATA[
    void refreshWB()
    {
        ;
        // Re-read parent record and then call refresh so values are updated on screen
        FormDataUtil::getFormDataSource(local_LB_Journal).reread();
        FormDataUtil::getFormDataSource(local_LB_Journal).refresh();
        element.populatePmtGridCaptions();

        // Re-load all journalar and journalarerrors records
        FormDataUtil::getFormDataSource(SKS_LB_JournalARErrors).research(true);

        FormDataUtil::getFormDataSource(SKS_LB_JournalAR).research(true);


    }

]]></Source>
			</Method>
			<Method>
				<Name>setErrorsLookup</Name>
				<Source><![CDATA[
    public void setErrorsLookup(boolean _errorlookup)
    {
        errorslookup = _errorlookup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showDocument</Name>
				<Source><![CDATA[
    void showDocument(Common _common)
    {
        ;
        docuref::openDocHandling(_common, element);

    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCustAcctDimensions</Name>
				<Source><![CDATA[
    public boolean validateCustAcctDimensions()
    {
        MainAccount mainAccount;
        SKS_LB_JournalAR lSKS_LB_JournalAR;
        LedgerDimensionDefaultAccount custAccountDim;
        DimensionServiceProvider                DimensionServiceProvider;
        LedgerAccountValidationContract ledgerAccountValidationContract;
        LedgerAccountContract ledgerAccountContract;
        DimensionAttributeValueContract dimensionAttributeValueContract;

        DimensionAttributeValueSetItem  dimAttrValueSetItem;
        DimensionAttributeValue         dimAttrValue;
        DimensionAttribute              dimAttr;
        boolean                         status = true;

        mDimensionFail = false;
        while select CustAccount, CustomerCompany, DefaultDimension, ChkRefNbr from lSKS_LB_JournalAR
            where lSKS_LB_JournalAR.JournalId == local_LB_Journal.JournalID && lSKS_LB_JournalAR.BatchNum == local_LB_Journal.BatchNum
                && lSKS_LB_JournalAR.LedgerJournalTransRecId == 0
        {
            changecompany(lSKS_LB_JournalAR.CustomerCompany)
            {
                // check for suspended dimensions separately, these are fatal errors that must be fixed before sending to Payment Journal
                if (!DimensionValidation::validateDefaultDimension(lSKS_LB_JournalAR.DefaultDimension))
                {
                    mDimensionFail = true;
                    info(strFmt("@SYS25424",lSKS_LB_JournalAR.CustomerCompany));
                    error(strFmt("@SKS2110", lSKS_LB_JournalAR.CustAccount,lSKS_LB_JournalAR.ChkRefNbr));
                    status = false;
                }
                else
                {
                    DimensionServiceProvider = new DimensionServiceProvider();
                    ledgerAccountValidationContract = new LedgerAccountValidationContract();
                    ledgerAccountContract = new LedgerAccountContract();
                    custAccountDim = CustLedgerAccounts::summaryLedgerDimension(lSKS_LB_JournalAR.CustAccount);
                    mainAccount = LedgerDimensionFacade::getMainAccountFromLedgerDimension(custAccountDim);
                    ledgerAccountContract.parmMainAccount(mainAccount.MainAccountId);

                    ledgerAccountContract.parmValues(new List(Types::Class));
                    while select DimensionAttributeValue from dimAttrValueSetItem
                        where   dimAttrValueSetItem.DimensionAttributeValueSet   == lSKS_LB_JournalAR.DefaultDimension
                    {

                        dimAttrValue        = DimensionAttributeValue::find(dimAttrValueSetItem.DimensionAttributeValue);

                        // Find the underlying attribute.
                        dimAttr             = DimensionAttribute::find(dimAttrValue.DimensionAttribute);

                        dimensionAttributeValueContract = new DimensionAttributeValueContract();
                        dimensionAttributeValueContract.parmName(dimAttr.Name);
                        dimensionAttributeValueContract.parmValue(dimAttrValue.getValue());

                        ledgerAccountContract.parmValues().addEnd(dimensionAttributeValueContract);
                    }

                    ledgerAccountValidationContract.parmLedgerAccount(ledgerAccountContract);
                    if(!DimensionServiceProvider.validateLedgerAccount(ledgerAccountValidationContract))
                    {
                        info(strFmt("@SKS2110", lSKS_LB_JournalAR.CustAccount,lSKS_LB_JournalAR.ChkRefNbr));
                        status = false;
                    }
                }
            }
        }
        return status;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ValidateCustInv</Name>
				<Source><![CDATA[
    boolean ValidateCustInv(SKS_LB_JournalARErrors _SKS_LB_JournalARErrors, boolean InvcMessages)
    {
        boolean ret = true;
        CustTransOpen custTransOpen;
        CustAccount custAccount;
        SKS_LB_Bank     SKS_LB_Bank;
        SpecTrans specTrans;
        container               virtualCompanyCompanies;
        CompanyId               cpnyID;
        SKS_LB_Journal          sks_lb_journal;
        TmpSKS_LB_Importing     TmpRecord;

        SKS_LB_MatchParms lMatchParms;
        SKS_LB_InvoiceIDErr invcNbrErr;
        SKS_LB_SecondaryMatch   SKS_LB_SecondaryMatch = new SKS_LB_SecondaryMatch();
        ;


        if(!errorslookup)
        {
            if(_SKS_LB_JournalARErrors.CustAccountSugg != '')
            {
                custAccount = _SKS_LB_JournalARErrors.CustAccountSugg;
            }
            else if(_SKS_LB_JournalARErrors.CustAccount != '')
            {
                custAccount = _SKS_LB_JournalARErrors.CustAccount;
            }
            else
            {
                custAccount = '';
            }

            // Get the companies that are in the virtual company.
            cpnyID = _SKS_LB_JournalARErrors.CustomerCompany;
            virtualCompanyCompanies = CustVendOpenTransManager::findSharedServiceCompanies(cpnyID);
            if(_SKS_LB_JournalARErrors.Invoice == '')
            {
                if(_SKS_LB_JournalARErrors.CustTransOpenRecId)
                {
                    custtransopen = custTransOpen::find(_SKS_LB_JournalARErrors.CustTransOpenRecId, false);
                    lMatchParms = new SKS_LB_MatchParms();
                    lMatchParms.invoiceIDErr(_SKS_LB_JournalARErrors.invoiceiderr);
                    lMatchParms.MatchValue(_SKS_LB_JournalARErrors.AltInvLookupRef);
                    lMatchParms.MatchType(_SKS_LB_JournalARErrors.AltInvLookupType);

                }
                else
                {
                    if (_SKS_LB_JournalARErrors.ActualSettlementAmountCur < 0)
                    {
                        _SKS_LB_JournalARErrors.InvoiceIdErr = SKS_LB_InvoiceIdErr::DebitAdjustment;
                    }
                    else
                    {
                        _SKS_LB_JournalARErrors.InvoiceIdErr = SKS_LB_InvoiceIdErr::OK;
                    }
                    return true;
                }
            }
            else
            {
                SKS_LB_Bank = SKS_LB_Bank::find(_SKS_LB_JournalARErrors.BankAcct, _SKS_LB_JournalARErrors.FormatID);

                select firstonly sks_lb_journal where SKS_LB_Journal.JournalID == _SKS_LB_JournalARErrors.JournalId && SKS_LB_Journal.BatchNum == _SKS_LB_JournalARErrors.BatchNum;
                tmpRecord.InvoiceNumber = _SKS_LB_JournalARErrors.Invoice;

                if(_SKS_LB_JournalARErrors.CustAccountSugg != '')
                {
                    tmpRecord.CustAccount = _SKS_LB_JournalARErrors.CustAccountSugg;
                }
                else

                {
                    tmpRecord.CustAccount = _SKS_LB_JournalARErrors.CustAccount;
                }

                tmpRecord.CustBankAccountNum = _SKS_LB_JournalARErrors.CustBankAccountNum;
                tmpRecord.CustBankRegNum = _SKS_LB_JournalARErrors.CustBankRegNum;
                lMatchParms = SKS_LB_SecondaryMatch.ValidateInvoiceManualEntry(TmpRecord, virtualCompanyCompanies, msks_lb_54000bas, _SKS_LB_JournalARErrors, SKS_LB_Journal);
                InvcNbrErr = lMatchParms.invoiceIDErr();
                _SKS_LB_JournalARErrors.InvoiceIdErr = invcNbrErr;
                if(InvcNbrErr != SKS_LB_InvoiceIDErr::MultipleMatchesFound && InvcNbrErr != SKS_LB_InvoiceIDErr::AlreadyMarked)
                {
                    changeCompany(_SKS_LB_JournalARErrors.CustomerCompany)
                    {
                        custTransOpen = custTransOpen::find(lMatchParms.matchTransOpen().RecId);
                    }
                }
                else
                {
                    // A second record was found, fail.  The lookup will have to be used.
                    if (InvcMessages)
                    {
                        error("@SYS116479");
                    }
                    return false;

                }
            }
            if(custTransOpen)
            {
                if(custAccount != '' && custTransOpen.AccountNum != custAccount)
                {
                    if (InvcMessages)
                    {
                        // There is an existing SpecTrans from another transaction.
                        error(strFmt("@SKS2410", custTransOpen.AccountNum));
                    }
                    else
                    {
                        _SKS_LB_JournalARErrors.InvoiceIdErr = SKS_LB_InvoiceIdErr::FoundForWrongCustomer;
                    }
                    return false;
                }


                // Find existing SpecTrans for the MarkedInvoice field.
                specTrans = SpecTrans::findByRef(custTransOpen.dataAreaId, tablenum(CustTransOpen), CustTransOpen.RecId);

                if (specTrans)
                {
                    if (InvcMessages)
                    {
                        // There is an existing SpecTrans from another transaction.
                        warning("@SYS105400");
                        _SKS_LB_JournalARErrors.InvoiceIdErr = SKS_LB_InvoiceIdErr::AlreadyMarked;
                    }
                    else
                    {
                        _SKS_LB_JournalARErrors.InvoiceIdErr = SKS_LB_InvoiceIdErr::AlreadyMarked;
                    }

                }

                _SKS_LB_JournalARErrors.CustTransOpenRecId = custTransOpen.RecId;
                _SKS_LB_JournalARErrors.CustTransRecId = custTransOpen.RefRecId;
                _SKS_LB_JournalARErrors.AltInvLookupRef = lMatchParms.MatchValue();
                _SKS_LB_JournalARErrors.AltInvLookupType = lMatchParms.MatchType();

                _SKS_LB_JournalARErrors.Invoice = CustTrans::findByCompany(custTransOpen.company(), custTransOpen.RefRecId).Invoice;

                if(_SKS_LB_JournalARErrors.CustAccountSugg == '')
                {
                    _SKS_LB_JournalARErrors.CustAccountSugg = custTransOpen.AccountNum;
                    _SKS_LB_JournalARErrors.CustomerCompany = custTransOpen.dataAreaId;
                    _SKS_LB_JournalARErrors.CustAccountErr = SKS_LB_CustIDErr::ManualLookup;
                }
                ret = true;
            }
            else
            {
                if (InvcMessages)
                {
                    if (_SKS_LB_JournalARErrors.ActualSettlementAmountCur < 0 && parentChild)
                    {
                        _SKS_LB_JournalARErrors.CustTransOpenRecId = 0;
                        _SKS_LB_JournalARErrors.CustTransRecId = 0;
                        info(strFmt("@SKS3129",_SKS_LB_JournalARErrors.AltInvLookupRef,_SKS_LB_JournalARErrors.ActualSettlementAmountCur));
                        _SKS_LB_JournalARErrors.AltInvLookupRef = '';
                        _SKS_LB_JournalARErrors.Invoice = '';
                        _SKS_LB_JournalARErrors.AltInvLookupType = SKS_LB_MatchType::InvoiceNumber;
                        _SKS_LB_JournalARErrors.InvoiceIdErr = SKS_LB_InvoiceIdErr::DebitAdjustment;
                        return true;
                    }
                    else
                    {
                        warning(strfmt("@SYS112224", _SKS_LB_JournalARErrors.Invoice, fieldpname(SKS_LB_JournalARErrors, Invoice), tablepname(CustTransOpen)));
                    }
                }
                else
                {

                    _SKS_LB_JournalARErrors.InvoiceIdErr = SKS_LB_InvoiceIdErr::InvoiceNotFound;
                }
                return false;
            }

        }
        else
        {
            _SKS_LB_JournalARErrors.InvoiceIdErr = SKS_LB_InvoiceIDErr::ManualLookup;
        }
        if (mSKS_PP_Setup.LBUseInvoiceDimensions == NoYes::Yes)
        {
            _SKS_LB_JournalARErrors.DefaultDimension = custTrans::findByCompany(_SKS_LB_JournalARErrors.CustomerCompany,_SKS_LB_JournalARErrors.CustTransRecId).DefaultDimension;
        }

        errorslookup = false;
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ValidateCustomer</Name>
				<Source><![CDATA[
    boolean ValidateCustomer(CustAccount _custAccount, CompanyId _companyId)
    {
        return mSKS_LB_54000Bas.Validate_Customer_Exists(_custAccount, _companyId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ValidatePmtErrAmounts</Name>
				<Source><![CDATA[
    public void ValidatePmtErrAmounts()
    {
        mSKS_LB_54000Bas.Errors_CheckPmtAmt_InvApplyAmt(SKS_LB_JournalARErrors, local_LB_Journal);
    }

]]></Source>
			</Method>
			<Method>
				<Name>EnableDisableWriteOffControls</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public void EnableDisableWriteOffControls()
    {
        if(SKS_LB_JournalARErrors.WriteOff == NoYes::Yes)
        {
            SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, AutoCRRev)).allowEdit(true);
            if(SKS_LB_JournalARErrors.AutoCRRev == NoYes::Yes)
            {
                SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, RevReasonCode)).allowEdit(true);

                if(SKS_LB_JournalARErrors.RevReasonCode != '')
                {
                    SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, AutoRevLedgerDimension)).allowedit(false);
                }
                else
                {
                    SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, AutoRevLedgerDimension)).allowedit(true);
                }
            }
            else
            {
                SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, RevReasonCode)).allowEdit(false);
                SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, AutoRevLedgerDimension)).allowEdit(false);
            }
        }
        else
        {
            SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, AutoCRRev)).allowEdit(false);
            SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, RevReasonCode)).allowEdit(false);
            SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, AutoRevLedgerDimension)).allowEdit(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>FindDefaultDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public DimensionDefault FindDefaultDimension(SelectableDataArea    custCompany, CustVendAC custAccount, RefRecID CustTransRecId)
    {
        SKS_LB_Bank sks_lb_bank;
        CustTable   locCustTable;
        changeCompany(custCompany)
        {
            select firstOnly DefaultDimension from locCustTable where locCustTable.AccountNum == custAccount;
        }

        sks_lb_bank = sks_lb_bank::find(local_LB_Journal.BankAcct, local_LB_Journal.FormatID);
        return SKS_LB_Process_IMPORTTEMP_Records::LBDimensionMerge(mSKS_PP_Setup, custTrans::findByCompany(custCompany , CustTransRecId).DefaultDimension, locCustTable.DefaultDimension, SKS_LB_Bank.LBJournalName, custCompany);

    }

]]></Source>
			</Method>
			<Method>
				<Name>TPMARErrorsToAR</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    private void TPMARErrorsToAR(SKS_LB_JournalARErrors l_sks_LB_JournalARErrors)
    {
        SKS_LB_JournalAR    lJournalAR;
        RefRecId            errorrecid;

        errorrecid = l_sks_LB_JournalARErrors.RecId;

        lJournalAR.initFromSKS_LB_JournalARErrors(l_sks_LB_JournalARErrors);
        
        lJournalAR.insert();

        ttsBegin;
        l_sks_LB_JournalARErrors.delete();
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateUnsettledAmt</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    public amountcur calculateUnsettledAmt(SKS_LB_JournalAR    _JournalAR)
    {
        return _JournalAR.PmtAmountCur - _JournalAR.ActualSettleAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>PopulateDeductionTotal</Name>
				<Source><![CDATA[
    /// <summary>
    ///populates the deduction total control
    /// </summary>
    public void PopulateDeductionTotal()
    {
        SKS_LB_JournalAR    lJournalAR;

        if(mSKS_PP_Setup.FFTPM)
        {
            select sum(pmtamountcur) from lJournalAR
                where lJournalAR.JournalId == msks_lb_journal.JournalID
                && lJournalAR.BatchNum == msks_lb_journal.BatchNum
                && lJournalAR.isDED == NoYes::Yes;

            DeductionTotal.realValue(lJournalAR.PmtAmountCur);
        }
        else if(mSKS_PP_Setup.LBStandardDed)
        {
            select sum(pmtamountcur) from lJournalAR
                where lJournalAR.JournalId == msks_lb_journal.JournalID
                && lJournalAR.BatchNum == msks_lb_journal.BatchNum
                && lJournalAR.AresDed == NoYes::Yes;

            DeductionTotal.realValue(lJournalAR.PmtAmountCur);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>CheckSplitLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    private boolean CheckSplitLine(SKS_LB_JournalAR    journalAR)
    {
        boolean ret = true;
        //SKS_LB_JournalAR    journalAR;
        //SKS_LB_Journal local_LB_Journal;
        SKS_LB_JournalAR lSKS_LB_JournalAR;
        SKS_LB_JournalARErrors  lSKS_LB_JournalARErrors;
        
        if(journalAR)
        {

            select local_LB_Journal where  local_LB_Journal.JournalID == journalAR.JournalID
                    && local_LB_Journal.BatchNum == journalAR.BatchNum;

            // newacct validation
            while select lSKS_LB_JournalARErrors
                    where lSKS_LB_JournalARErrors.JournalId == journalAR.JournalID
                        && lSKS_LB_JournalARErrors.BatchNum == journalAR.BatchNum
            {
                //SKS_LB_FileFormat sks_lb_fileformat = SKS_LB_FileFormat::find(local_LB_Journal.formatid);
                    
                if(sks_lb_fileformat.FileType == SKS_LB_filetype::BAI2 || sks_lb_fileformat.FileType == SKS_LB_FileType::Symcor)
                {
                    select firstonly lSKS_LB_JournalAR
                         where lSKS_LB_JournalAR.parentrecid == lSKS_LB_JournalARErrors.parentrecid
                            && lSKS_LB_JournalAR.JournalId == local_LB_Journal.JournalID
                            && lSKS_LB_JournalAR.BatchNum == local_LB_Journal.BatchNum;
                }
                else
                {
                    select firstonly lSKS_LB_JournalAR
                         where lSKS_LB_JournalAR.ChkRefNbr == lSKS_LB_JournalARErrors.ChkRefNbr
                            && lSKS_LB_JournalAR.JournalId == local_LB_Journal.JournalID
                            && lSKS_LB_JournalAR.BatchNum == local_LB_Journal.BatchNum;
                }


                if (lSKS_LB_JournalAR)
                {
                    ret = false;
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>SKS_LB_JournalAR</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret;

            ret = super();

            if(ret && (SKS_LB_JournalAR.AssignedTo == '' && SKS_LB_Journalar.ReviewStatus == SKS_LB_ReviewStatus::NeedsReview))
            {
                error("@SKS3746");
                ret = false;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            //Info(strFmt('EQ: %1', SKS_LB_JournalAR.RecId));

            QueryBuildRange qbr;
            QueryBuildRange qbr2;
            QueryBuildRange qbr3;
            QueryBuildRange qbr4;
            int fldcnt;
            DictTable   dicttable;
            DictField   dictField;
            str locFilterQuery;

            this.query().dataSourceTable(tablenum(SKS_LB_JournalAR)).clearRanges();

            if(paymentgridFilter.valuestr() == enum2Str(SKS_LB_WBGridFilter::Unsettled))
            {
                qbr = this.query().dataSourceTable(tablenum(SKS_LB_JournalAR)).addRange(fieldNum(SKS_LB_JournalAR, ActualSettleAmountCur));
                locFilterQuery = strFmt('(%1 != %2)',
                    fieldStr(SKS_LB_JournalAR,ActualSettleAmountCur), //%1
                fieldStr(SKS_LB_JournalAR,PmtAmountCur)); //%2
                locFilterQuery = qbr.value(locFilterQuery);
                qbr.value(locFilterQuery);
                qbr.status(RangeStatus::Hidden);

                qbr2 = this.query().dataSourceTable(tablenum(SKS_LB_JournalAR)).addRange(fieldNum(SKS_LB_JournalAR, isDed));
                qbr2.value('0');
                qbr2.status(RangeStatus::Hidden);

                qbr3 = this.query().dataSourceTable(tablenum(SKS_LB_JournalAR)).addRange(fieldNum(SKS_LB_JournalAR, AresDed));
                qbr3.value('0');
                qbr3.status(RangeStatus::Hidden);
            }

            if(menuitemname == 'SKS_LB_RestrictedPaymentAppWorkbench')
            {
                qbr = this.query().dataSourceTable(tablenum(SKS_LB_JournalAR)).addRange(fieldNum(SKS_LB_JournalAR, assignedto));
                qbr.value(curuserid());
                qbr.status(RangeStatus::Hidden);              

                dicttable = new DictTable(tableNum(SKS_LB_JournalAR));

                for(fldcnt = 1; fldcnt <= dicttable.fieldcnt(); fldcnt++)
                {
                    dictField = new DictField(tableNum(SKS_LB_JournalAR), dicttable.fieldCnt2Id(fldcnt));
                    if(!dictField.isSystem() && dictField.id() != fieldNum(SKS_LB_JournalAR, ReviewStatus))
                    {
                        sks_lb_journalar_ds.object(dictField.id()).allowEdit(false);
                    }
                }
                CreatePayment.enabled(false);
                Movetoerrors.enabled(false);
                ReassignPayments.enabled(false);
                DeleteGoodButton.enabled(false);
                SplitChecks.enabled(false);
                PaymentJournal.enabled(false);                
                AutoRevJrnl.enabled(false);
                LockboxFileRecord.enabled(false);   
                Settlement.enabled(true);
                Notes.enabled(false);
                Deductions.enabled(false);
            }
            else
            {               
                this.query().dataSourceTable(tablenum(SKS_LB_JournalAR)).addOrderByField(fieldNum(SKS_LB_JournalAR, LineNumber), SortOrder::Ascending);
            }

            qbr4 = this.query().dataSourceTable(tablenum(SKS_LB_JournalAR)).addRange(fieldNum(SKS_LB_JournalAR, IsTransferredToLedger));
            qbr4.value(sysquery::value(NoYes::No));

            ReassignToLedger.enabled(element.CheckSplitLine(SKS_LB_JournalAR));

            super();

        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            SKS_LB_JournalAR    TmpJournalAR;

            TmpJournalAR = SKS_LB_JournalAR.orig();
            super();

            if((SKS_LB_JournalAR.AssignedTo != '' && (SKS_LB_JournalAR.AssignedTo != TmpJournalAR.AssignedTo) && SKS_LB_JournalAR.ReviewStatus == SKS_LB_ReviewStatus::NeedsReview)
                ||
               ((TmpJournalAR.ReviewStatus != SKS_LB_JournalAR.ReviewStatus && SKS_LB_JournalAR.AssignedTo != TmpJournalAR.AssignedTo)
                    && SKS_LB_JournalAR.ReviewStatus == SKS_LB_ReviewStatus::ReviewCompleted))
            {
                if(SKS_LB_JournalAR.ReviewStatus == SKS_LB_ReviewStatus::NeedsReview)
                {
                    element.CreateAlert(SKS_LB_JournalAR.journalid, SKS_LB_JournalAR.BatchNum, SKS_LB_JournalAR.assignedTo,
                        SKS_LB_JournalAR.ChkRefNbr, SKS_LB_JournalAR.CustAccount, SKS_LB_JournalAR.PmtAmountCur, true);
                }
                else
                {
                    element.CreateAlert(SKS_LB_JournalAR.journalid, SKS_LB_JournalAR.BatchNum, msks_lb_journal.Owner,
                        SKS_LB_JournalAR.ChkRefNbr, SKS_LB_JournalAR.CustAccount, SKS_LB_JournalAR.PmtAmountCur, false);
                }
            }
            element.MarkInReview();
        }

]]></Source>
					</Method>
					<Method>
						<Name>markInUse</Name>
						<Source><![CDATA[
        [SuppressBPWarningAttribute("BPCheckSelectForUpdateAbsent","Buffer updatePrev_LB_Journal is selected forUpdate and is passed to other methods where it is modified.")]
        void markInUse()
        {
            SKS_LB_Journal updatePrev_LB_Journal;
            ;
            if(local_LB_Journal.JournalID != prev_LB_Journal.JournalID || local_LB_Journal.BatchNum != prev_LB_Journal.BatchNum)
            {
                if(prev_LB_Journal.JournalID != '')
                {
                    // If different, select previous record for update
                    select forupdate updatePrev_LB_Journal where updatePrev_LB_Journal.JournalID == prev_LB_Journal.JournalID && updatePrev_LB_Journal.BatchNum == prev_LB_Journal.BatchNum;
                    // Remove in use flag
                    SKS_LB_JournalInUse::updateBlockServer(updatePrev_LB_Journal,
                                                            JournalBlockLevel::InUse,
                                                            JournalBlockLevel::None,
                                                            strFmt("@SKS911",
                                                                    updatePrev_LB_Journal.JournalId,
                                                                    updatePrev_LB_Journal.BatchNum));
                }

                try
                {
                    // Mark as in use
                    local_LB_Journal = SKS_LB_JournalInUse::updateBlockServer(local_LB_Journal,
                                                                                JournalBlockLevel::None,
                                                                                JournalBlockLevel::InUse,
                                                                                strFmt("@SKS911",local_LB_Journal.JournalId, local_LB_Journal.BatchNum)
                                                                                );
                    // Refresh parent with new data
                    if(prev_LB_Journal.JournalID != '')
                    {
                        FormDataUtil::getFormDataSource(local_LB_Journal).research(true);
                    }
                }
                catch(Exception::Error)
                {
                    // If an error occurs, close screen
                    // Typically this is catching the error thrown if a user is trying to open an in use journal
                    local_LB_Journal = null;
                    element.close();
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            real pmtAmt;
            ;
            if(SKS_LB_JournalAR.isDED == NoYes::No)
            {
                pmtAmt = SKS_LB_JournalAr.PmtAmountCur;
            }

            super();

            if(SKS_LB_JournalAR.isDED == NoYes::No)
            {
                local_LB_Journal.PmtTotal = local_LB_Journal.PmtTotal - pmtAmt;
                local_LB_Journal.BatchPmtCnt -= 1;
                local_LB_Journal.update();
            }

            if (!element.checkSetJournalComplete())
            {
                SKS_LB_54000Bas::markSplitPayments(local_LB_Journal.JournalID, local_LB_Journal.BatchNum);
            }
            // Refresh parent datasource since various items in journal or JournalAR may have changed because of delete(Journal status, split payment status).
            // Parent refresh also trigger good and bad grids to refresh.
            element.refreshWB();

            element.populatePmtGridCaptions();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            SKS_LB_JournalARApplic l_SKS_LB_JournalARApplic;
            ;

            if (SKS_LB_JournalAR.LedgerJournalTransRecId)
            {
                //This payment has already been processed, it cannot be edited or deleted
                box::info("@SKS487","@SKS352");
                return false;
            }
            else
            {
                //Are you sure you  want to delete this Payment line and any associated settlement information?
                //The only way to retrieve this record once deleted is to re-import
                //the entire lockbox transmission file containing this record.
                if (Box::yesNo("@SKS489",DialogButton::No, "@SKS352")==DialogButton::Yes)
                {
                    ttsbegin;
                    delete_from l_SKS_LB_JournalARApplic
                            where l_SKS_LB_JournalARApplic.SKS_LB_JournalARRecId == SKS_LB_JournalAR.RecId;
                    ttscommit;
                    return true;

                }
                else
                {
                    return false;
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            //Info(strFmt('Active %1', SKS_LB_JournalAR.RecId));

            ret = super();

            // Enable/Disable the Good Grid Buttons
            PaymentJournal.enabled(SKS_LB_JournalAR.LedgerJournalTransRecId > 0 && menuitemname != 'SKS_LB_RestrictedPaymentAppWorkbench');
            ReassignPayments.enabled(SKS_LB_JournalAR.LedgerJournalTransRecId == 0 && menuitemname != 'SKS_LB_RestrictedPaymentAppWorkbench');
            SplitChecks.enabled(local_LB_Journal.SplitPaymentsExist == NoYes::Yes && menuitemname != 'SKS_LB_RestrictedPaymentAppWorkbench');
            LockBoxFileRecord.enabled(menuitemname != 'SKS_LB_RestrictedPaymentAppWorkbench');
            MoveToErrors.enabled(SKS_LB_JournalAR.LedgerJournalTransRecId == 0 && menuitemname != 'SKS_LB_RestrictedPaymentAppWorkbench');
            Settlement.enabled(true);
            // enable/disable the check number field
            SKS_LB_JournalAR_ChkRefNbr.enabled(SKS_LB_JournalAR.LedgerJournalTransRecId == 0);
            SKS_LB_JournalAR_ds.object(fieldNum(SKS_LB_JournalAR, Feevalue)).enabled(SKS_LB_JournalAR.FeeId != '');

            AutoRevJrnl.enabled(SKS_LB_JournalAR_AutoCRRevJrnlId.valueStr() != '');

            if(menuitemname == 'SKS_LB_RestrictedPaymentAppWorkbench' && SKS_LB_JournalAR.ReviewStatus == SKS_LB_ReviewStatus::ReviewCompleted)
            {
                SKS_LB_JournalAR_ds.object(fieldNum(SKS_LB_JournalAR, reviewstatus)).allowEdit(false);
                SKS_LB_JournalAR_ds.object(fieldNum(SKS_LB_JournalAR, assignedto)).allowEdit(false);
            }
            else
            {
                SKS_LB_JournalAR_ds.object(fieldNum(SKS_LB_JournalAR, reviewstatus)).allowEdit(true);
                if(SKS_LB_JournalAR.reviewstatus == SKS_LB_ReviewStatus::NeedsReview)
                {
                    SKS_LB_JournalAR_ds.object(fieldNum(SKS_LB_JournalAR, assignedto)).allowEdit(true);
                }
                else
                {
                    SKS_LB_JournalAR_ds.object(fieldNum(SKS_LB_JournalAR, assignedto)).allowEdit(false);
                }
            }

            if( SKS_LB_JournalAR.AresDed == NoYes::Yes)
            {
                LockBoxFileRecord.enabled(false);
                MoveToErrors.enabled(false);
                Settlement.enabled(false);
            }

            ReassignToLedger.enabled(element.CheckSplitLine(SKS_LB_JournalAR));
            //element.refreshGoodPayments();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {

            super();
            if (element.args().dataset() == tablenum(SKS_LB_Journal))
            {
                local_LB_Journal = element.args().record();

                if(!local_LB_Journal)
                {
                    element.close();
                    return;
                }
                sks_lb_fileformat = SKS_LB_FileFormat::find(local_LB_Journal.formatid);
                if (SKS_LB_Process_IMPORTTEMP_Records::ParentRecIDFileType(sks_lb_fileformat.FileType))
                {
                    parentChild = true;
                }
                else
                {
                    parentChild = false;
                }

                if(menuitemname != 'SKS_LB_RestrictedPaymentAppWorkbench')
                {
                    // Mark record as in use
                    this.markInUse();
                }
                // Need to save the current record so we can remove the in use flag if the user moves to a new record
                prev_LB_Journal = null;
                buf2buf(local_LB_Journal, prev_LB_Journal);

                SKS_LB_Journal_JournalID.text(local_LB_Journal.JournalID);
                element.populatePmtGridCaptions();
                element.populatePmtErrGridCaptions();
                SKS_LB_Journal_KeepDelete.text(enum2str(local_LB_Journal.KeepDelete));
                SKS_LB_Journal_CurrencyCode.text(local_LB_Journal.CurrencyCode);
                SKS_LB_Journal_Batchnum.text(local_LB_Journal.BatchNum);
                PmtGrid_LB_Journal_CurrencyCode.text(local_LB_Journal.CurrencyCode);
            }

            PaymentJournal.enabled(False);

            Settlement.enabled(False);

            //Enable/Disable the Split Payments based on if Split Payments exist
            SplitChecks.enabled(local_LB_Journal.SplitPaymentsExist == NoYes::Yes);
            //LockboxFileRecord.enabled(local_LB_Journal.KeepDelete != SKS_LB_Status::Completed);
            ButtonLockBoxFileRecord.enabled(local_LB_Journal.KeepDelete != SKS_LB_Status::Completed);

            AutoRevJrnl.enabled(SKS_LB_JournalAR_AutoCRRevJrnlId.valueStr() != '');
            if(!SKS_LB_Payment::isOffsetDimMapped(local_LB_Journal.FormatID))
            {
                SKS_LB_Journalar_ds.object(fieldNum(SKS_LB_JournalAR, offsetdimensionreference)).visible(false);
                SKS_LB_Journalarerrors_ds.object(fieldNum(SKS_LB_JournalARErrors, offsetdimensionreference)).visible(false);
                SKS_LB_Journalar_ds.object(fieldNum(SKS_LB_JournalAR, offsetdimension)).visible(false);
                SKS_LB_Journalarerrors_ds.object(fieldNum(SKS_LB_JournalARErrors, offsetdimension)).visible(false);
            }
            else
            {
                SKS_LB_Journalar_ds.object(fieldNum(SKS_LB_JournalAR, offsetdimensionreference)).visible(true);
                SKS_LB_Journalarerrors_ds.object(fieldNum(SKS_LB_JournalARErrors, offsetdimensionreference)).visible(true);
                if(mSKS_PP_Setup.LBDimensionInGrid)
                {
                    SKS_LB_Journalar_ds.object(fieldNum(SKS_LB_JournalAR, offsetdimension)).visible(true);
                    SKS_LB_Journalarerrors_ds.object(fieldNum(SKS_LB_JournalARErrors, offsetdimension)).visible(true);
                }
                else
                {
                    SKS_LB_Journalar_ds.object(fieldNum(SKS_LB_JournalAR, offsetdimension)).visible(false);
                    SKS_LB_Journalarerrors_ds.object(fieldNum(SKS_LB_JournalARErrors, offsetdimension)).visible(false);
                }
            }
            //Enables bank payment total and bank payment count controls
            if(msks_lb_journal.BatchNum != 'AUTO')
            {
                SKS_LB_BankPmtTot.visible(sks_lb_fileformat.FileType == SKS_LB_FileType::BAI2 || sks_lb_fileformat.FileType == SKS_LB_FileType::Colombia);
                SKS_LB_BankCnt.visible(sks_lb_fileformat.FileType == SKS_LB_FileType::BAI2 || sks_lb_fileformat.FileType == SKS_LB_FileType::Colombia);
            }
            else
            {
                SKS_LB_BankPmtTot.visible(false);
                SKS_LB_BankCnt.visible(false);
            }
            if(mSKS_PP_Setup.FFTPM)
            {
                SKS_LB_Journalar_ds.object(fieldNum(SKS_LB_JournalAR, LBInvoice)).visible(true);
                SKS_LB_Journalar_ds.object(fieldNum(SKS_LB_JournalAR, isDED)).visible(true);
                SKS_LB_Journalar_ds.object(fieldNum(SKS_LB_JournalAR, FFDedCat)).visible(true);
                SKS_LB_Journalarerrors_ds.object(fieldNum(SKS_LB_JournalARerrors, isDED)).visible(true);
                SKS_LB_Journalarerrors_ds.object(fieldNum(SKS_LB_JournalARerrors, LBInvoice)).enabled(true);
                SKS_LB_Journalarerrors_ds.object(fieldNum(SKS_LB_JournalARerrors, LBInvoice)).allowEdit(true);
            }
            else
            {
                SKS_LB_Journalar_ds.object(fieldNum(SKS_LB_JournalAR, LBInvoice)).visible(false);
                SKS_LB_Journalar_ds.object(fieldNum(SKS_LB_JournalAR, isDED)).visible(false);
                SKS_LB_Journalar_ds.object(fieldNum(SKS_LB_JournalAR, FFDedCat)).visible(false);
                SKS_LB_Journalarerrors_ds.object(fieldNum(SKS_LB_JournalARerrors, isDED)).visible(false);
                SKS_LB_Journalarerrors_ds.object(fieldNum(SKS_LB_JournalARerrors, LBInvoice)).allowEdit(false);
            }

            if(mSKS_PP_Setup.LBStandardDed)
            {
                SKS_LB_Journalar_ds.object(fieldNum(SKS_LB_JournalAR, AresDed)).visible(true);
                SKS_LB_Journalarerrors_ds.object(fieldNum(SKS_LB_JournalARerrors, AresDed)).visible(true);
                Deductions.visible(true);
            }
            else
            {
                SKS_LB_Journalar_ds.object(fieldNum(SKS_LB_JournalAR, AresDed)).visible(false);
                SKS_LB_Journalarerrors_ds.object(fieldNum(SKS_LB_JournalARerrors, AresDed)).visible(false);
                Deductions.visible(false);
            }

            if(SKS_PP_Setup::find().FFTPM)
            {
                FFDeductions.visible(true);
            }
            else
            {
                FFDeductions.visible(false);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        ///Initializes the sks_lb_journalar data source
        /// </summary>
        public void init()
        {

            super();

            this.cacheAddMethod(tablemethodstr(SKS_LB_JournalAR, OffsetDimensionString));
            this.cacheAddMethod(tablemethodstr(SKS_LB_JournalARErrors, offsetdimensionString));            
        }

]]></Source>
					</Method>
					<Method>
						<Name>UnsettledAmount</Name>
						<Source><![CDATA[
        /// <summary>
        ///Display method for teh unsettled amount
        /// </summary>
        /// <param name="_SKS_LB_JournalAR">
        /// active journalar record
        /// </param>
        /// <returns>
        /// unsettled amount
        /// </returns>
        [SysClientCacheDataMethodAttribute]
        display AmountCur UnsettledAmount(SKS_LB_JournalAR _SKS_LB_JournalAR)
        {
            return element.calculateUnsettledAmt(_SKS_LB_JournalAR);
        }

]]></Source>
					</Method>
					<Method>
						<Name>DiscApplyAmount</Name>
						<Source><![CDATA[
        /// <summary>
        ///Display method for the discount apply amount
        /// </summary>
        /// <param name="_SKS_LB_JournalAR">
        /// active journal ar record
        /// </param>
        /// //<returns>
        /// discount amount
        /// </returns>
        [SysClientCacheDataMethodAttribute]
        display AmountCur DiscApplyAmount(SKS_LB_JournalAR _SKS_LB_JournalAR)
        {
            SKS_LB_JournalARApplic  lApplic;

            select sum(DiscApplyAmount), SKS_LB_JOurnalarrecid from lApplic
                group by lApplic.sks_lb_journalarrecid
                where lApplic.sks_lb_journalarrecid == _SKS_LB_JournalAR.recid;

            return lapplic.discapplyamount;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AssignedTo</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                SKS_LB_JournalAR  tmpSKS_LB_JournalAR;
                tmpSKS_LB_JournalAR = SKS_LB_JournalAR.orig();
                super();

                if(tmpSKS_LB_JournalAR.AssignedTo != SKS_LB_JournalAR.AssignedTo)
                {
                    if(SKS_LB_JournalAR.ReviewStatus == SKS_LB_ReviewStatus::NeedsReview && SKS_LB_JournalAR.AssignedTo != '')
                    {
                        SKS_LB_JournalAR_ds.object(fieldNum(SKS_LB_JournalAR, reviewstatus)).allowEdit(false);
                    }
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                SysTableLookup  SysTableLookup = SysTableLookup::newParameters(tablenum(UserInfo), _formControl);

                Query query = new Query();
                QueryBuildDataSource QBDS;
                ;

                SysTableLookup.addLookupfield(fieldNum(UserInfo, Name), true);
                SysTableLookup.addLookupfield(fieldNum(UserInfo, ID), true);
                QBDS = query.addDataSource(tableNum(UserInfo));

                //QBDS.addRange(fieldNum(UserInfo, Id)).value(_filterStr);

                SysTableLookup.parmquery(query);
                SysTableLookup.performFormLookup();


            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CustAccount</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                CustTable       CustTable;
                Args            args;
                MenuFunction    menuFunction;
                ;

                changeCompany(SKS_LB_JournalAR.CustomerCompany)
                {
                    CustTable=CustTable::find(SKS_LB_JournalAR.CustAccount);

                    args = new Args();

                    args.record(CustTable);

                    args.caller(element);

                    // Create a new MenuFunction that launches the Reasons Menu Item

                    menuFunction = new MenuFunction(menuitemdisplaystr(CustTable),MenuItemType::Display);

                    menuFunction.run(args);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>FeeId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if(SKS_LB_JournalAR.FeeId == '')
                {
                    SKS_LB_JournalAR.FeeValue = 0;
                    SKS_LB_JournalAR_ds.object(fieldNum(SKS_LB_JournalAR, Feevalue)).enabled(false);
                }
                else
                {
                    SKS_LB_JournalAR_ds.object(fieldNum(SKS_LB_JournalAR, Feevalue)).enabled(true);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>FFDedCat</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            ///Validates the flintfox deduction category field
            /// </summary>
            /// <returns>boolean</returns>
            public boolean validate()
            {
                boolean ret;
            
                ret = super();

                if((!SKS_TPM_DeductionCategory::find(SKS_LB_JournalAR.FFDedCat) || !SKS_TPM_DeductionCategory::ValidateFFDeductioncategory(SKS_LB_JournalAR.FFDedCat, SKS_LB_JournalAR.PmtAmountCur)) && SKS_LB_JournalAR.FFDedCat != '')
                {
                    ret = false;
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ReviewStatus</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                if(MenuItemName == 'SKS_LB_RestrictedPaymentAppWorkbench')
                {
                    if(SKS_LB_JournalAR.ReviewStatus == SKS_LB_ReviewStatus::NeedsReview || SKS_LB_JournalAR.ReviewStatus == SKS_LB_ReviewStatus::Empty)
                    {
                        error("@SKS3781");
                        ret = false;
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if (SKS_LB_JournalAR.ReviewStatus == SKS_LB_ReviewStatus::ReviewCompleted)
                {
                    SKS_LB_JournalAR.AssignedTo = SKS_LB_Journal::FindByBatchAndJournalNum(SKS_LB_JournalAR.BatchNum, SKS_LB_JournalAR.JournalId).Owner;
                    SKS_LB_JournalAR_ds.object(fieldNum(sks_lb_journalar, reviewstatus)).allowEdit(false);
                    SKS_LB_JournalAR_ds.object(fieldNum(SKS_LB_JournalAR, assignedto)).allowEdit(false);
                }
                else if (MenuItemName != 'SKS_LB_RestrictedPaymentAppWorkbench')
                {
                    SKS_LB_JournalAR.AssignedTo = '';
                    if(SKS_LB_JournalAR.reviewstatus == SKS_LB_ReviewStatus::NeedsReview)
                    {
                        SKS_LB_JournalAR_ds.object(fieldNum(SKS_LB_JournalAR, assignedto)).allowEdit(true);
                    }
                    else
                    {
                        SKS_LB_JournalAR_ds.object(fieldNum(SKS_LB_JournalAR, assignedto)).allowEdit(false);
                    }
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>SKS_LB_JournalARErrors</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            QueryBuildRange qbr;
            int fldcnt;
            DictTable   dicttable;
            DictField   dictField;
            ;

            if(menuitemname == 'SKS_LB_RestrictedPaymentAppWorkbench')
            {
                this.query().dataSourceTable(tablenum(SKS_LB_JournalARErrors)).clearRanges();

                qbr = this.query().dataSourceTable(tablenum(SKS_LB_JournalARErrors)).addRange(fieldNum(SKS_LB_JournalARErrors, assignedto));
                qbr.value(curUserId());
                qbr.status(RangeStatus::Hidden);

                dicttable = new DictTable(tableNum(SKS_LB_JournalARErrors));

                for(fldcnt = 1; fldcnt <= dicttable.fieldcnt(); fldcnt++)
                {
                    dictField = new DictField(tableNum(SKS_LB_JournalARErrors), dicttable.fieldCnt2Id(fldcnt));
                    if(!dictField.isSystem() && dictField.id() != fieldNum(SKS_LB_JournalARErrors, ReviewStatus))
                    {
                        SKS_LB_JournalARErrors_ds.object(dictField.id()).allowEdit(false);
                    }
                }
                errorinvoice.allowEdit(false);
                errorWriteoff.allowEdit(false);
                paymenterrbuttonGroup.enabled(false);
            }
            else
            {
                this.query().dataSourceTable(tablenum(SKS_LB_JournalARErrors)).clearRanges();
                this.query().dataSourceTable(tablenum(SKS_LB_JournalARErrors)).addOrderByField(fieldNum(SKS_LB_JournalARErrors, LineNumber), SortOrder::Ascending);
            }
            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            SKS_LB_WriteoffRules    SKS_LB_WriteoffRules;
            boolean ret;

            ret = super();

            if(ret && SKS_LB_JournalARErrors.WriteOff == NoYes::Yes)
            {
                if(SKS_LB_JournalARErrors.AutoCRRev == NoYes::Yes)
                {
                    if(SKS_LB_JournalARErrors.AutoRevLedgerDimension == 0)
                    {
                        error("@SKS3515");
                        ret = false;
                    }
                }

                if(ret && SKS_LB_JournalARErrors.WriteOff == NoYes::Yes)
                {
                    select firstOnly reqreason from SKS_LB_WriteoffRules where SKS_LB_WriteoffRules.WriteoffId == SKS_LB_JournalARErrors.WriteOffId;
                    if(SKS_LB_WriteoffRules.ReqReason == NoYes::yes)
                    {
                        if(SKS_LB_JournalARErrors.RevReasonCode == '' && SKS_LB_JournalARErrors.AutoCRRev == NoYes::Yes)
                        {
                            error(strFmt("@SKS3525", sks_lb_writeoffRules.WriteoffId));
                            ret = false;
                        }

                        if(ret && SKS_LB_JournalARErrors.ReasonCode == '')
                        {
                            error(strFmt("@SKS3525", sks_lb_writeoffRules.WriteoffId));
                            ret = false;
                        }
                    }
                }
            }

            if(ret && (SKS_LB_JournalARErrors.AssignedTo == '' && SKS_LB_Journalarerrors.ReviewStatus == SKS_LB_ReviewStatus::NeedsReview))
            {
                error("@SKS3746");
                ret = false;
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ;

            select CustTransOpenError // crosscompany designation not needed since that is designated at DataSource level//
            where CustTransOpenError.RecId == SKS_LB_JournalARErrors.CustTransOpenRecId;

            select CustTransError // crosscompany designation not needed since that is designated at DataSource level//
            where CustTransError.RecId == CustTransOpenError.RefRecId;

            element.enableDisableCreateAutoCreditButton();
            element.EnableDisableErrorGridButtons();

            SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, Feevalue)).enabled(SKS_LB_JournalARErrors.FeeId != '');

            element.EnableDisableWriteOffControls();
            ret = super();

            if(menuitemname == 'SKS_LB_RestrictedPaymentAppWorkbench' && SKS_LB_JournalARErrors.ReviewStatus == SKS_LB_ReviewStatus::ReviewCompleted)
            {
                SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, reviewstatus)).allowEdit(false);
                SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, assignedto)).allowEdit(false);
            }
            else
            {
                SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, reviewstatus)).allowEdit(true);
                if(SKS_LB_JournalARErrors.reviewstatus == SKS_LB_ReviewStatus::NeedsReview)
                {
                    SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, assignedto)).allowEdit(true);
                }
                else
                {
                    SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, assignedto)).allowEdit(false);
                }
            }

            if(sks_lb_journalarerrors.CustAccountErr == sks_lb_custIDerr::DuplicateRtnAcct)
            {
                DuplicateCustomers.enabled(true);
            }
            else
            {
                DuplicateCustomers.enabled(false);
            }

            return ret;

        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            SKS_LB_JournalARErrors    TmpJournalARErrors;
            TmpJournalARErrors = SKS_LB_JournalARErrors.orig();
            super();
            // Refresh CustTransOpen in case a new invoice was selected.
            CustTransOpenError_ds.reread();
            CustTransOpenError_ds.refresh();

            if((SKS_LB_JournalARErrors.AssignedTo != '' && (SKS_LB_JournalARErrors.AssignedTo != TmpJournalARErrors.AssignedTo) && SKS_LB_JournalARErrors.ReviewStatus == SKS_LB_ReviewStatus::NeedsReview)
                ||
               ((TmpJournalARErrors.ReviewStatus != SKS_LB_JournalARErrors.ReviewStatus && SKS_LB_JournalARErrors.AssignedTo != TmpJournalARErrors.AssignedTo)
                    && SKS_LB_JournalARErrors.ReviewStatus == SKS_LB_ReviewStatus::ReviewCompleted))
            {
                if(SKS_LB_JournalARErrors.ReviewStatus == SKS_LB_ReviewStatus::NeedsReview)
                {
                    element.CreateAlert(SKS_LB_JournalARErrors.JournalId, SKS_LB_JournalARErrors.BatchNum, SKS_LB_JournalARErrors.AssignedTo,
                        SKS_LB_JournalARErrors.ChkRefNbr, SKS_LB_JournalARErrors.CustAccount, SKS_LB_JournalARErrors.PmtAmountCur, true);
                }
                else
                {
                    element.CreateAlert(SKS_LB_JournalARErrors.JournalId, SKS_LB_JournalARErrors.BatchNum, msks_lb_journal.Owner,
                        SKS_LB_JournalARErrors.ChkRefNbr, SKS_LB_JournalARErrors.CustAccount, SKS_LB_JournalARErrors.PmtAmountCur, false);
                }
            }

            element.MarkInReview();
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {

            super();

            //if the delete caused no good rows to be left, Journal is set to complete
            if (element.checkSetJournalComplete())
            {
                // refresh parent since SKS_LB_Journal is complete. Parent refresh also trigger good and bad grids to refresh.
                element.refreshWB();

            }
            else
            {
                element.populatePmtErrGridCaptions();
            }

        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            //always return true since validation is done on DeleteErrorButton::clicked
            //calling super generates an additional dialog box we don't want
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>CustAccountCuggModified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Handles modification of the customer account field
        /// </summary>
        public void CustAccountCuggModified()
        {
            SKS_LB_Depositor    SKS_LB_Depositor;
            element.enableDisableCreateAutoCreditButton();

            if(SKS_LB_JournalARErrors.InvoiceIdErr != SKS_LB_InvoiceIdErr::FoundForWrongCustomer
                    && SKS_LB_JournalARErrors.InvoiceIdErr != SKS_LB_InvoiceIdErr::CreditNoteNotFound
                    && SKS_LB_JournalARErrors.InvoiceIdErr != SKS_LB_InvoiceIdErr::InvoiceNotFound
                    && SKS_LB_JournalARErrors.InvoiceIdErr != SKS_LB_InvoiceIdErr::MultipleMatchesFound)
            {
                mSKS_LB_54000Bas.Errors_CheckPmtAmt_InvApplyAmt(SKS_LB_JournalARErrors, local_LB_Journal);
            }

            SKS_LB_Depositor = SKS_LB_Depositor::find(SKS_LB_JournalARErrors.CustomerCompany, SKS_LB_Journalarerrors.CustAccountSugg);

            if(SKS_LB_Depositor.WriteOffId != '')
            {
                SKS_LB_JournalARErrors.WriteOffId = SKS_LB_Depositor.WriteOffId;
            }
            else
            {
                SKS_LB_JournalARErrors.WriteOffId = msks_pp_setup.LBWriteOffId;
            }

            SKS_LB_JournalARErrors.DefaultDimension = element.FindDefaultDimension(SKS_LB_JournalARErrors.CustomerCompany, SKS_LB_JournalARErrors.CustAccountSugg, SKS_LB_JournalARErrors.CustTransRecId);

        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ActualSettlementAmountCur</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ;
                element.ValidatePmtErrAmounts();
                element.EnableDisableWriteOffControls();
                super();
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            ///Vlaidates  the enteres settlement amount
            /// </summary>
            /// <returns> boolean value</returns>
            public boolean validate()
            {
                boolean ret;

                ret = super();

                if(ret && SKS_LB_JournalARErrors.ActualSettlementAmountCur >= 0 && SKS_LB_JournalARErrors.AresDed)
                {
                    ret = false;
                    error("@SKS:SKGDeductionsMustBeNeg");
                }
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AltInvLookupRef</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                if(SKS_LB_JournalARErrors.AltInvLookupRef != '')
                {
                    error("@SKS2405");
                    return 0;
                }
                else
                {
                    SKS_LB_JournalARErrors.Invoice = '';
                    SKS_LB_JournalARErrors.AltInvLookupType = sks_lb_matchtype::InvoiceNumber;
                    SKS_LB_JournalARErrors.CustTransOpenRecId = 0;
                    SKS_LB_JournalARErrors.CustTransRecId = 0;
                    if (SKS_LB_JournalARErrors.ActualSettlementAmountCur < 0)
                    {
                        if (parentChild)
                        {
                            SKS_LB_JournalARErrors.InvoiceIdErr = SKS_LB_InvoiceIdErr::DebitAdjustment;
                        }
                        else
                        {
                            SKS_LB_JournalARErrors.InvoiceIdErr = SKS_LB_InvoiceIdErr::CreditNoteNotFound;
                        }
                    }
                    else
                    {
                        SKS_LB_JournalARErrors.InvoiceIdErr = SKS_LB_InvoiceIdErr::OK;
                    }
                    SKS_LB_JournalARErrors.update();
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AresDed</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            /// <summary>
            ///Validate the deduction checkbox
            /// </summary>
            /// <returns>boolean value</returns>
            public boolean validate()
            {
                SKS_LB_JournalAR    ParentJournalAR;
                CustAccount         lCustAccount;
                boolean ret;

                ret = super();

                if(ret)
                {
                    if(SKS_lb_JournalARErrors.ActualSettlementAmountCur >= 0 && sks_lb_journalarerrors.AresDed == NoYes::Yes)
                    {
                        ret = false;
                        Error("@SKS:SKGDeductionsMustBeNeg");
                    }

                    if(ret)
                    {
                        lCustAccount = SKS_LB_JournalARErrors.CustAccountsugg != '' ? SKS_LB_JournalARErrors.CustAccountsugg : SKS_LB_JournalARErrors.CustAccount;
                        Select firstonly * from ParentJournalAR
                            where  ParentJournalAR.CustAccount == lCustAccount
                                && ParentJournalAR.ChkRefNbr == SKS_LB_JournalARErrors.chkrefnbr
                                && ParentJournalAR.JournalId == SKS_LB_JournalARErrors.JournalId
                                && ParentJournalAR.Batchnum == SKS_LB_JournalARErrors.BatchNum;

                        if(!ParentJournalAR)
                        {
                            ret = false;
                            error("@SKS:SKGDEDNoParentExists");
                        }
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AssignedTo</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                SKS_LB_JournalARErrors    tmpSKS_LB_JournalARErrors;
                tmpSKS_LB_JournalARErrors = SKS_LB_JournalARErrors.orig();
                super();
                if(SKS_LB_JournalARErrors.AssignedTo != tmpSKS_LB_JournalARErrors.AssignedTo)
                {
                    if(SKS_LB_JournalARErrors.ReviewStatus == SKS_LB_ReviewStatus::NeedsReview && SKS_LB_JournalARErrors.AssignedTo != '')
                    {
                        SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, reviewstatus)).allowEdit(false);
                    }
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            public void lookup(FormControl _formControl, str _filterStr)
            {
                SysTableLookup  SysTableLookup = SysTableLookup::newParameters(tablenum(UserInfo), _formControl);

                Query query = new Query();
                QueryBuildDataSource QBDS;
                ;

                SysTableLookup.addLookupfield(fieldNum(UserInfo, Name), true);
                SysTableLookup.addLookupfield(fieldNum(UserInfo, ID), true);
                QBDS = query.addDataSource(tableNum(UserInfo));

                //QBDS.addRange(fieldNum(UserInfo, Id)).value(_filterStr);

                SysTableLookup.parmquery(query);
                SysTableLookup.performFormLookup();


            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>AutoCRRev</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                SKS_LB_Setup_AutoCRParms  SKS_LB_Setup_AutoCRParms;
                boolean ret;

                ret = super();

                select firstonly SKS_LB_Setup_AutoCRParms where SKS_LB_Setup_AutoCRParms.AutoCRGenJrnlName != '' && SKS_LB_Setup_AutoCRParms.CustomerCompany == SKS_LB_JournalARErrors.CustomerCompany;

                if(!SKS_LB_Setup_AutoCRParms)
                {
                    ret = false;
                    error("@SKS3514");
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ChangedPmtAmountCur</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ;
                element.ValidatePmtErrAmounts();
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CustAccount</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                CustTable     CustTable;
                Args            args;
                MenuFunction    menuFunction;
                ;

                changeCompany(SKS_LB_JournalARErrors.CustomerCompany)
                {
                    CustTable=CustTable::find(SKS_LB_JournalARErrors.CustAccount);

                    args = new Args();

                    args.record(CustTable);

                    args.caller(element);

                    // Create a new MenuFunction that launches the Reasons Menu Item

                    menuFunction = new MenuFunction(menuitemdisplaystr(CustTable),MenuItemType::Display);

                    menuFunction.run(args);
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CustAccountSugg</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                CustTable     CustTable;
                Args            args;
                MenuFunction    menuFunction;
                ;

                changeCompany(SKS_LB_JournalARErrors.CustomerCompany)
                {
                    CustTable=CustTable::find(SKS_LB_JournalARErrors.CustAccountSugg);

                    args = new Args();

                    args.record(CustTable);

                    args.caller(element);

                    // Create a new MenuFunction that launches the Reasons Menu Item

                    menuFunction = new MenuFunction(menuitemdisplaystr(CustTable),MenuItemType::Display);

                    menuFunction.run(args);
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                SKS_LB_Depositor    SKS_LB_Depositor;
                element.enableDisableCreateAutoCreditButton();

                if(SKS_LB_JournalARErrors.InvoiceIdErr != SKS_LB_InvoiceIdErr::FoundForWrongCustomer
                    && SKS_LB_JournalARErrors.InvoiceIdErr != SKS_LB_InvoiceIdErr::CreditNoteNotFound
                    && SKS_LB_JournalARErrors.InvoiceIdErr != SKS_LB_InvoiceIdErr::InvoiceNotFound
                    && SKS_LB_JournalARErrors.InvoiceIdErr != SKS_LB_InvoiceIdErr::MultipleMatchesFound)
                {
                    mSKS_LB_54000Bas.Errors_CheckPmtAmt_InvApplyAmt(SKS_LB_JournalARErrors, local_LB_Journal);
                }

                SKS_LB_Depositor = SKS_LB_Depositor::find(SKS_LB_JournalARErrors.CustomerCompany, SKS_LB_Journalarerrors.CustAccountSugg);

                if(SKS_LB_Depositor.WriteOffId != '')
                {
                    SKS_LB_JournalARErrors.WriteOffId = SKS_LB_Depositor.WriteOffId;
                }
                else
                {
                    SKS_LB_JournalARErrors.WriteOffId = msks_pp_setup.LBWriteOffId;
                }

                SKS_LB_JournalARErrors.DefaultDimension = element.FindDefaultDimension(SKS_LB_JournalARErrors.CustomerCompany, SKS_LB_JournalARErrors.CustAccountSugg, SKS_LB_JournalARErrors.CustTransRecId);
                super();
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
                ;

                ret = super();

                element.EnableDisableErrorGridButtons();

                if(SKS_LB_JournalARErrors.CustAccountSugg != '')
                {
                    if(element.ValidateCustomer(SKS_LB_JournalARErrors.CustAccountSugg, SKS_LB_JournalARErrors.CustomerCompany))
                    {
                        SKS_LB_JournalARErrors.CustAccountErr = SKS_LB_CustIDErr::ManualLookup;
                        element.validateCustInv(SKS_LB_JournalARErrors, false);
                    }
                    else
                    {
                        error(strfmt("@SYS112224", SKS_LB_JournalARErrors.CustAccountSugg, fieldpname(SKS_LB_JournalARErrors, CustAccountSugg), tablepname(CustTable)));
                        return false;
                    }
                }
                else if(SKS_LB_JournalARErrors.CustAccount != '')
                {
                    if(element.ValidateCustomer(SKS_LB_JournalARErrors.CustAccount, SKS_LB_JournalARErrors.CustomerCompany))
                    {
                        SKS_LB_JournalARErrors.CustAccountErr = SKS_LB_CustIDErr::ok;
                        element.validateCustInv(SKS_LB_JournalARErrors, false);
                    }
                    else
                    {
                        SKS_LB_JournalARErrors.CustAccountErr = SKS_LB_CustIDErr::NotFound;
                    }
                }
                else
                {
                    SKS_LB_JournalARErrors.CustAccountErr = SKS_LB_CustIDErr::NoCustID;
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CustomerCompany</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                SKS_LB_JournalARErrors.DefaultDimension = 0;
                element.enableDisableCreateAutoCreditButton();

                super();
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
                CustAccount custAccount;
                ;

                ret=super();

                if (SKS_LB_JournalARErrors.CustomerCompany == '')
                {
                    return false;
                }

                //Error if cross company is turned off but a different company was selected
                if(SKS_LB_Bank::find(msks_lb_journal.BankAcct, msks_lb_journal.FormatID).LBRestrictCrossCompanySearch 
                    && SKS_LB_JournalARErrors.CustomerCompany != curExt())
                {
                    error("@SKS:SKGLBCrossCompanyError");
                    return false;
                }

                if(SKS_LB_JournalARErrors.CustAccountSugg != '')
                {
                    custAccount = SKS_LB_JournalARErrors.CustAccountSugg;
                }
                else
                {
                    if(SKS_LB_JournalARErrors.CustAccount != '')
                    {
                        custAccount = SKS_LB_JournalARErrors.CustAccount;
                    }
                }
                if(custAccount != '')
                {
                    if(element.ValidateCustomer(custAccount, SKS_LB_JournalARErrors.CustomerCompany))
                    {
                        SKS_LB_JournalARErrors.CustAccountErr = SKS_LB_CustIDErr::OK;
                    }
                    else
                    {
                        SKS_LB_JournalARErrors.CustAccountErr = SKS_LB_CustIDErr::NotFound;
                    }
                }
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DiscApplyAmt</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                ;
                element.ValidatePmtErrAmounts();
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>FeeId</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if(sks_lb_journalarerrors.FeeId == '')
                {
                    SKS_LB_JournalARErrors.FeeValue = 0;
                    SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, Feevalue)).enabled(SKS_LB_JournalARErrors.FeeId != '');
                }
                else
                {
                    SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, Feevalue)).enabled(SKS_LB_JournalARErrors.FeeId != '');
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Invoice</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
                ;

                if(SKS_LB_JournalARErrors.Invoice == '' && errorslookup == false )
                {
                    SKS_LB_JournalARErrors.CustTransOpenRecId = 0;
                    SKS_LB_JournalARErrors.CustTransRecId = 0;
                    SKS_LB_JournalARErrors.AltInvLookupRef = '';
                    SKS_LB_JournalARErrors.AltInvLookupType = SKS_LB_MatchType::InvoiceNumber;
                    if (SKS_LB_JournalARErrors.ActualSettlementAmountCur < 0)
                    {
                        SKS_LB_JournalARErrors.InvoiceIdErr = SKS_LB_InvoiceIdErr::DebitAdjustment;
                    }
                    else
                    {
                        SKS_LB_JournalARErrors.InvoiceIdErr = SKS_LB_InvoiceIDErr::OK;
                    }
                    ret = true;
                }
                else
                {
                    ret = element.validateCustInv(SKS_LB_JournalARErrors, true);
                }

                if(ret)
                {
                    ret = super();
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                CustTransOpen custtransopen;
                CustPaymSettlementManager settlementmanager;
                CustVendAC                  customer;
                ;
            
                if(SKS_LB_JournalARErrors.CustTransOpenRecId)
                {
                    select * from custtransopen where CustTransOpen.RecId == SKS_LB_JournalARErrors.CustTransOpenRecId;
                    settlementManager = CustPaymSettlementManager::construct(
                            mSKS_LB_54000Bas.CreateTempLedgerJournalTrans
                                (SKS_LB_JournalARErrors.paymDate,
                                local_LB_Journal.CurrencyCode,
                                local_LB_Journal.ExchRate,
                                SKS_LB_JournalARErrors.customercompany,
                                custtransopen.accountNum));
                }
                // SKS_19380_FlintfoxAresInvoiceApplicaiton
                //if(custtransopen && settlementManager.sks_lbisAlreadyMarked(custtransopen, 0))
                if (custtransopen &&
                    custtransopen.sksIsAmountFullyCovered())
                // SKS_19380_FlintfoxAresInvoiceApplicaiton
                {
                    sks_LB_JournalARErrors.InvoiceIdErr = SKS_LB_InvoiceIDErr::AlreadyMarked;
                }
                else
                {
                    if (custtransopen)
                    {
                        mSKS_LB_54000Bas.Errors_CheckPmtAmt_InvApplyAmt(SKS_LB_JournalARErrors, local_LB_Journal);
                    }
                }
            
                element.enableDisableCreateAutoCreditButton();
            
                SKS_LB_JournalARErrors.WriteOff = NoYes::No;
                SKS_LB_JournalARErrors.AutoCRRev = NoYes::No;
                SKS_LB_JournalARErrors.AutoRevLedgerDimension = 0;
                SKS_LB_JournalARErrors.AutoRevOffsetLedgerDimension = 0;
                SKS_LB_JournalARErrors.WriteOffId = '';
                customer = SKS_LB_JournalARErrors.CustAccountSugg;
                if(customer == '')
                {
                    customer = SKS_LB_JournalARErrors.CustAccount;
                }
                SKS_LB_JournalARErrors.DefaultDimension = element.FindDefaultDimension(SKS_LB_JournalARErrors.CustomerCompany, customer, SKS_LB_JournalARErrors.CustTransRecId);
                super();
            }

]]></Source>
							</Method>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            //
            // Displays a custom lookup form that provides the user with the means of selecting
            // an Invoice record filtered by the AccountNum (customer) field.
            //
            public void lookup(FormControl _formControl, str _filterStr)
            {
                FormRun formRun;
                Args args;
                ;

                args = new Args(formstr(SKS_LB_CustOpenInvoicesLookup));
                args.record(SKS_LB_JournalARErrors);
                args.caller(element);
                args.lookupValue(SKS_LB_JournalARErrors.Invoice);

                if (_filterStr != '')
                {
                    args.parm(_filterStr);
                }

                formRun = ClassFactory::formRunClassOnClient(args);
                formRun.init();

                this.performFormLookup(formRun, _formControl);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ReviewStatus</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;

                ret = super();

                if(MenuItemName == 'SKS_LB_RestrictedPaymentAppWorkbench')
                {
                    if(SKS_LB_JournalARErrors.ReviewStatus == SKS_LB_ReviewStatus::NeedsReview || SKS_LB_JournalARErrors.ReviewStatus == SKS_LB_ReviewStatus::Empty)
                    {
                        error("@SKS3781");
                        ret = false;
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();

                if(MenuItemName == 'SKS_LB_RestrictedPaymentAppWorkbench')
                {
                    if(SKS_LB_JournalARErrors.ReviewStatus == SKS_LB_ReviewStatus::ReviewCompleted)
                    {
                        SKS_LB_Journal sks_lb_journalLoc;
                        select firstonly sks_lb_journalLoc 
                            where sks_lb_journalLoc.JournalID == SKS_LB_JournalARErrors.JournalId
                            && sks_lb_journalLoc.BatchNum == SKS_LB_JournalARErrors.BatchNum;

                        //SKS_LB_JournalARErrors.AssignedTo = '';
                        SKS_LB_JournalARErrors.AssignedTo = sks_lb_journalLoc.Owner;
                        SKS_LB_JournalARErrors_ds.object(fieldNum(sks_lb_journalarerrors, reviewstatus)).allowEdit(false);
                        SKS_LB_JournalARErrors_ds.object(fieldNum(sks_lb_journalarerrors, assignedto)).allowEdit(false);
                    }
                }
                else if(MenuItemName != 'SKS_LB_RestrictedPaymentAppWorkbench')
                {
                    SKS_LB_JournalARErrors.AssignedTo = '';
                    if(SKS_LB_JournalARErrors.reviewstatus == SKS_LB_ReviewStatus::NeedsReview)
                    {
                        SKS_LB_JournalARErrors_ds.object(fieldNum(sks_lb_journalarerrors, assignedto)).allowEdit(true);
                    }
                    else
                    {
                        SKS_LB_JournalARErrors_ds.object(fieldNum(sks_lb_journalarerrors, assignedto)).allowEdit(false);
                    }
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RevReasonCode</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                SKS_LB_ReasonAccounts  sks_lb_reasonaccounts;

                super();

                if(SKS_LB_Journalarerrors.RevReasonCode == '')
                {
                    SKS_LB_Journalarerrors_ds.object(fieldNum(SKS_LB_Journalarerrors, AutoRevLedgerDimension)).allowEdit(true);
                    SKS_LB_Journalarerrors.AutoRevOffsetLedgerDimension = 0;
                    SKS_LB_Journalarerrors.AutoRevLedgerDimension = 0;
                }
                else
                {
                    select firstOnly OffsetLedgerDimension, ledgerdimension from sks_lb_reasonaccounts where sks_lb_reasonaccounts.ReasonCode == SKS_LB_Journalarerrors.RevReasonCode;
                    SKS_LB_Journalarerrors.AutoRevOffsetLedgerDimension = SKS_LB_ReasonAccounts.OffsetLedgerDimension;
                    SKS_LB_Journalarerrors.AutoRevLedgerDimension = SKS_LB_ReasonAccounts.LedgerDimension;
                    SKS_LB_Journalarerrors_ds.object(fieldNum(SKS_LB_Journalarerrors, AutoRevLedgerDimension)).allowEdit(false);
                    SKS_LB_JournalARErrors_ds.research();
                }
            }

]]></Source>
							</Method>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                SKS_LB_ReasonAccounts  sks_lb_reasonaccounts;
                boolean ret;

                ret = super();

                if(ret && SKS_LB_Journalarerrors.RevReasonCode != '')
                {
                    select firstOnly LedgerDimension, offsetLedgerdimension from sks_lb_reasonaccounts where sks_lb_reasonaccounts.ReasonCode == SKS_LB_Journalarerrors.revreasoncode;

                    if(sks_lb_reasonaccounts.LedgerDimension == 0)
                    {
                        error("@SKS3527");
                        ret = false;
                    }
                }

                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Selected</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
                CustTransOpen   custTransOpen;
                AmountCur       invCurySettleAmount;
                DialogButton diagBut;

                ;
                ret = super();
                if(this.getValue() == true)

                {
                    if(SKS_LB_JournalARErrors.isDED == NoYes::No)
                    {
                        if(SKS_LB_JournalARErrors.InvoiceIdErr == SKS_LB_InvoiceIdErr::CreditNoteNotFound
                            || SKS_LB_JournalARErrors.InvoiceIdErr == SKS_LB_InvoiceIdErr::InvoiceNotFound)
                        {
                            ret = element.ValidateCustInv(SKS_LB_JournalARErrors, true);
                        }
                        else
                        {
                            ret = true;
                        }

                        if(ret)
                        {
                            ret = msks_lb_54000bas.OKToSelect(SKS_LB_JournalARErrors);

                            if(ret)
                            {
                                if(SKS_LB_JournalARErrors.Invoice != '' && SKS_LB_JournalARErrors.CustTransOpenRecId != 0 && SKS_LB_JournalARErrors.InvoiceIdErr == SKS_LB_InvoiceIDErr::InvApplyAmtNotInvBal)
                                {
                                    invCurySettleAmount = mSKS_LB_54000Bas.GetCurySettlementTotal(custTransOpen, local_LB_Journal.CurrencyCode, local_LB_Journal.ExchRate, SKS_LB_JournalARErrors.ActualSettlementAmountCur, SKS_LB_JournalARErrors.DiscApplyAmt, SKS_LB_JournalARErrors.PaymDate);
                                    if(custTransOpen.AmountCur - invCurySettleAmount != 0)
                                    {
                                        diagBut = Box::yesNo(
                                            "@SKS484",
                                            DialogButton::Yes,
                                            "@SKS311");

                                        if (diagBut == DialogButton::No)
                                        {
                                            return false;
                                        }
                                    }
                                }
                                else if(SKS_LB_JournalARErrors.InvoiceIdErr == SKS_LB_InvoiceIDErr::InvApplyAmtGreaterThanInvBal)
                                {
                                    warning("@SKS2142");
                                    return true;
                                }
                                else if(SKS_LB_JournalARErrors.InvoiceIdErr == SKS_LB_InvoiceIdErr::OffsetDimensionNotFound)
                                {
                                    SKS_LB_JournalARErrors.InvoiceIdErr = SKS_LB_InvoiceIdErr::OK;
                                }

                            }
                            else
                            {
                                warning("@SKS483");
                                return false;
                            }
                        }
                    }
                }
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTable</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //Workbench is never trying to write this record but AX will return error on write/validate
            //if this Outer joined record is not present
            return;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            //Workbench is never trying to write this record but AX will return error on write/validate
            //if this Outer joined record is not present
            return true;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>LedgerJournalTran</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //Workbench is never trying to write this record but AX will return error on write/validate
            //if this Outer joined record is not present
            return;

        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            //Workbench is never trying to write this record but AX will return error on write/validate
            //if this Outer joined record is not present
            return true;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>CustTransOpenError</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //Workbench is never trying to write this record but AX will return error on write/validate
            //if this Outer joined record is not present
            return ;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            //Workbench is never trying to write this record but AX will return error on write/validate
            //if this Outer joined record is not present
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayAmountAvailPaymCur</Name>
						<Source><![CDATA[
        [SysClientCacheDataMethodAttribute]
        public display AmountCur displayAmountAvailPaymCur()
        {
            AmountCur ReturnAmt;
            ReturnAmt = mSKS_LB_54000Bas.convertCuryAmounts(CustTransOpenError, local_LB_Journal.CurrencyCode, CustTransError.CurrencyCode, local_LB_Journal.ExchRate, SKS_LB_ConvertType::TrantoPaym, CustTransOpenError.AmountCur,SKS_LB_JournalARErrors.PaymDate);
            element.calcRemainingValues(ReturnAmt);
            CustTransOpenError_AmountCur.realValue(CustTransOpenError.AmountCur);
            CustTransErrorCompany.text(CustTransError.dataAreaId);
            InvoiceCustTransError_CurrencyCode.text(CustTransError.CurrencyCode);
            CustTransOpenError_DueDate.dateValue(CustTransOpenError.DueDate);
            return ReturnAmt;

        }

]]></Source>
					</Method>
					<Method>
						<Name>editDiscountInvCur</Name>
						<Source><![CDATA[
        //BP Deviation Documented
        public edit AmountCur editDiscountInvCur(boolean _set, CustTransOpen _CustTransOpen, AmountCur _settleAmountCur)
        {
            AmountCur ReturnAmt;
            if (_set)
            {
                //manager.updateSettleAmount(_custTransOpen, _settleAmountCur);
                SKS_LB_JournalARErrors.DiscApplyAmt =
                    mSKS_LB_54000Bas.convertCuryAmounts(_CustTransOpen, local_LB_Journal.currencyCode, CustTransError.CurrencyCode, local_LB_Journal.ExchRate, SKS_LB_ConvertType::TrantoPaym, _settleAmountCur,SKS_LB_JournalARErrors.PaymDate);
                SKS_LB_JournalARErrors.update();
            }

            ReturnAmt = mSKS_LB_54000Bas.convertCuryAmounts(_CustTransOpen, local_LB_Journal.CurrencyCode, CustTransError.CurrencyCode, local_LB_Journal.ExchRate, SKS_LB_ConvertType::PaymtoTran, SKS_LB_JournalARErrors.DiscApplyAmt,SKS_LB_JournalARErrors.PaymDate);
            return ReturnAmt;


        }

]]></Source>
					</Method>
					<Method>
						<Name>editSettleAmountInvCur</Name>
						<Source><![CDATA[
        //BP Deviation Documented
        public edit AmountCur editSettleAmountInvCur(boolean _set, CustTransOpen _CustTransOpen, AmountCur _settleAmountCur)
        {
            AmountCur ReturnAmt;
            if (_set)
            {
                //manager.updateSettleAmount(_custTransOpen, _settleAmountCur);
                SKS_LB_JournalARErrors.ActualSettlementAmountCur =
                    mSKS_LB_54000Bas.convertCuryAmounts(_CustTransOpen, local_LB_Journal.CurrencyCode, CustTransError.CurrencyCode, local_LB_Journal.ExchRate, SKS_LB_ConvertType::TrantoPaym, _settleAmountCur,SKS_LB_JournalARErrors.PaymDate);
                SKS_LB_JournalARErrors.update();
            }

            ReturnAmt = mSKS_LB_54000Bas.convertCuryAmounts(_CustTransOpen, local_LB_Journal.CurrencyCode, CustTransError.CurrencyCode, local_LB_Journal.ExchRate, SKS_LB_ConvertType::PaymtoTran, SKS_LB_JournalARErrors.ActualSettlementAmountCur,SKS_LB_JournalARErrors.PaymDate);
            return ReturnAmt;


        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>CustTransError</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //Workbench is never trying to write this record but AX will return error on write/validate
            //if this Outer joined record is not present
            return ;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            //Workbench is never trying to write this record but AX will return error on write/validate
            //if this Outer joined record is not present
            return true;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>GLLedgerJournalTable</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            return true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            return;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CreatePmtJrnl</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {

            Args args;
            SKS_LB_JournalAR lSKS_LB_JournalAR;
            SKS_LB_JournalARErrors lSKS_LB_JournalARErrors;
            SKS_LB_CreatePaymentParms sks_LB_CreatePaymentParms;
            FormRun formRun;
            DialogButton ok = DialogButton::Ok;            
         
            while select ChkRefNbr, JournalId, BatchNum, parentrecid, defaultdimension from lSKS_LB_JournalARErrors
                where lSKS_LB_JournalARErrors.JournalId == local_LB_Journal.JournalID && lSKS_LB_JournalARErrors.BatchNum == local_LB_Journal.BatchNum

            {
                if(sks_lb_fileformat.FileType == SKS_LB_filetype::BAI2 || sks_lb_fileformat.FileType == SKS_LB_FileType::Symcor)
                {
                    select firstonly lSKS_LB_JournalAR
                         where lSKS_LB_JournalAR.parentrecid == lSKS_LB_JournalARErrors.parentrecid
                            && lSKS_LB_JournalAR.JournalId == local_LB_Journal.JournalID
                            && lSKS_LB_JournalAR.BatchNum == local_LB_Journal.BatchNum;
                }
                else
                {
                    select firstonly lSKS_LB_JournalAR
                         where lSKS_LB_JournalAR.ChkRefNbr == lSKS_LB_JournalARErrors.ChkRefNbr
                            && lSKS_LB_JournalAR.JournalId == local_LB_Journal.JournalID
                            && lSKS_LB_JournalAR.BatchNum == local_LB_Journal.BatchNum;
                }


                if (lSKS_LB_JournalAR)
                {
                    error(strfmt("@SKS572", lSKS_LB_JournalAR.CustAccount + "@SYS35673" + lSKS_LB_JournalAR.ChkRefNbr));
                    return;
                }

            }

            select firstonly pmtamountcur from lSKS_LB_JournalAR 
                where lSKS_LB_JournalAR.PmtAmountCur == 0 
                    && lSKS_LB_JournalAR.BatchNum == local_LB_Journal.BatchNum 
                    && lSKS_LB_JournalAR.JournalId == local_LB_Journal.JournalID;

            if(lSKS_LB_JournalAR)
            {
                error(strFmt("@SKS4118", lSKS_LB_JournalAR.CustAccount, lSKS_LB_JournalAR.ChkRefNbr));
                return;
            }

            if(lSKS_LB_JournalARErrors.DefaultDimension != 0)
            {
                // validate dimensions, if any errors are found, ask if the user wants to continue
                if (!element.validateCustAcctDimensions())
                {
                    // if hard failure, errors will prevent payment journal from creating so must fix now.
                    if (mDimensionFail)
                    {
                        error("@SKS2159");
                        return;
                    }
                    else
                        // on other failures, give user choice whether to fix here or in Payment Journal
                    {
                        ok = Box::okCancel("@SKS2109", DialogButton::Cancel);
                        if (ok != DialogButton::Ok)
                        {
                            return;

                        }
                    }
                }
            }

            sks_LB_CreatePaymentParms = new SKS_LB_CreatePaymentParms();
            sks_LB_CreatePaymentParms.JournalID(local_LB_Journal.JournalID);
            sks_LB_CreatePaymentParms.BatchNumber(local_LB_Journal.BatchNum);
            sks_LB_CreatePaymentParms.ARPmtTotal(SKS_LB_PmtTot.realValue());
            sks_LB_CreatePaymentParms.ApplyAmt(SKS_LB_RealPmtApplied.realValue());

            args = new args();
            args.parmObject(sks_LB_CreatePaymentParms);
            args.name(formstr(SKS_LB_CreatePayment));    // Call the Create Payment Journal Application

            formRun = classFactory.formRunClass(Args);
            formRun.init();
            formRun.run();
            formRun.wait(True); // Modal

            // call the parent refresh
            element.refreshWB();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LedgerSubform</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///Handles the click action of the deductions button
        /// </summary>
        public void clicked()
        {
            Args args;
            Formrun formRun;  

            args = new Args();

            args.record(msks_lb_journal);

            args.name(formstr(SKS_LB_LedgerDeductions));
            args.caller(element);
            formRun = classFactory.formRunClass(Args);

            formRun.run();
            formRun.wait(false);

            element.refreshGoodPayments();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>MoveToErrors</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            SKS_LB_JournalAR LocalJournalAR;
            if(!SKS_LB_JournalAR)
            {
                return;
            }

            if( SKS_LB_JournalAR.AresDed == NoYes::Yes)
            {
                error("@SKS:SKGNoDedToErrrors");
                return;
            }
            else
            {
                select firstonly LocalJournalAR where LocalJournalAR.ParentJournalARID == SKS_LB_JournalAR.RecId;
                if(LocalJournalAR)
                {
                    if (Box::yesNo("@SKS:SKGDeleteRelatedDed",DialogButton::No, "@SKS352")==DialogButton::Yes)
                    {
                        LocalJournalAR.skipDataMethods(true);
                        delete_from LocalJournalAR where LocalJournalAR.ParentJournalARID == SKS_LB_JournalAR.RecId;
                    }
                }
            }

            super();
            element.moveGoodPmtToError();

            // refresh parent since SKS_LB_Journal may have changed. Parent refresh also trigger good and bad grids to refresh.
            element.refreshWB();


        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReassignPayments</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {

            Args args;
            FormRun formRun;

            if( SKS_LB_JournalAR.AresDed == NoYes::Yes)
            {
                error("@SKS:SKGDedNoReassign");
                return;
            }

            //    // Validate the file record parameter
            if ((SKS_LB_JournalAR.PmtAmountCur == SKS_LB_JournalAR.ActualSettleAmountCur) )
            {
                //Payment is fully settled. Can only reassign unsettled amounts.
                info("@SKS947");
            }
            else
            {
                args = new Args();

                // Run Reassign Payments form
                args.name(formstr(SKS_LB_ReassignPayment) );
                args.record(SKS_LB_JournalAR);
                args.caller(this);
                formRun = classFactory.formRunClass(Args);
                formRun.init();
                formRun.run();
                formRun.wait(True); // Modal
            }

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>RefreshGoodGridOnly</Name>
						<Source><![CDATA[
        void RefreshGoodGridOnly()
        {
            SKS_LB_Process_IMPORTTEMP_Records::CalcBatchTotals(msks_lb_journal.JournalID, SKS_LB_FileFormat.filetype, SKS_LB_FileFormat.PmtAmtEQSumChkAmts, msks_lb_journal.batchnum);
            /// this is called by Split Payments form since it is updating the same data.
            FormDataUtil::getFormDataSource(local_LB_Journal).reread();
            FormDataUtil::getFormDataSource(local_LB_Journal).refresh();
            element.refreshGoodPayments();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DeleteGoodButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///handles the click action on the delete button
        /// </summary>
        public void clicked()
        {
            SKS_LB_JournalAR    LocalJournalAR;
            if( SKS_LB_JournalAR.AresDed == NoYes::Yes)
            {
                error("@SKS:SKGDedCannotDelete");
                return;
            }
            else
            {
                select firstonly LocalJournalAR where LocalJournalAR.ParentJournalARID == SKS_LB_JournalAR.RecId;
                if(LocalJournalAR)
                {
                    if (Box::yesNo("@SKS:SKGDeleteRelatedDed",DialogButton::No, "@SKS352")==DialogButton::Yes)
                    {
                        LocalJournalAR.skipDataMethods(true);
                        delete_from LocalJournalAR where LocalJournalAR.ParentJournalARID == SKS_LB_JournalAR.RecId;
                    }
                }
            }
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SplitChecks</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args;
            Formrun formRun;
            ;

            args = new Args();
            args.record(local_LB_Journal);

            args.name(formstr(SKS_LB_SplitPayments));
            args.caller(this);
            formRun = classFactory.formRunClass( Args );

            formRun.run();
            formRun.wait(false);

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>RefreshGoodGridOnly</Name>
						<Source><![CDATA[
        void RefreshGoodGridOnly()
        {
        /// this is called by Split Payments form since it is updating the same data.
            element.refreshGoodPayments();
        }

]]></Source>
					</Method>
					<Method>
						<Name>SplitChecksRefresh</Name>
						<Source><![CDATA[
        void SplitChecksRefresh()
        {
            ;
            SKS_LB_54000Bas::markSplitPayments(local_LB_Journal.JournalID, local_LB_Journal.BatchNum);

            // refresh parent since SKS_LB_Journal may have changed. Parent refresh also trigger good and bad grids to refresh.
            element.refreshWB();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PaymentJournal</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            #Task

            Args            args = new Args();

            super(); 
            
            FormRun  formRun;
            // suppress infolog
            SysInfologLevel sysInfologLevel;
                
            sysInfologLevel = infolog.infologLevel();
            infolog.setInfoLogLevel(SysInfologLevel::None);
                
            args = new args(formstr(LedgerJournalTable));
                
            LedgerJournalTable ledgerjournaltableloc;
            select firstonly ledgerjournaltableloc where ledgerjournaltableloc.JournalNum == LedgerJournalTable.JournalNum;
            args.record(ledgerjournaltableloc);

            formRun = classFactory.formRunClass(args);

            formRun.init();
            formRun.run();                
            formRun.detach();

            // enable infolog
            infolog.setInfoLogLevel(sysInfologLevel);
               
            // refresh form
            formRun.dataSource().research();            
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Settlement</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            if( SKS_LB_JournalAR.AresDed == NoYes::Yes)
            {
                return;
            }
            Args args = new Args();
            args.record(SKS_LB_JournalAR);
            args.caller(Element);
            if(menuitemname == 'SKS_LB_RestrictedPaymentAppWorkbench')
            {
                args.parm('Restricted');
            }
            new MenuFunction(menuitemDisplayStr('SKS_LB_SettlementDetails'), MenuItemType::Display).run(args);
            //super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AutoRevJrnl</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            DataAreaId  origCompany = curext();
            DataAreaId  company = SKS_LB_JournalAR.DataAreaId;

            // 21746 - check company of write off journal
            SKS_LB_JournalARApplic localjournalARApplic;

            select firstonly CustTransDataAreaId from localjournalARApplic
             where localjournalARApplic.SKS_LB_JournalARRecId == SKS_LB_JournalAR.RecId
                && localjournalARApplic.WriteOff;

            if (localjournalARApplic.CustTransDataAreaId
                && localjournalARApplic.CustTransDataAreaId != company)
            {
                company = localjournalARApplic.CustTransDataAreaId;
            }


            appl.setDefaultCompany(company, false);

            LedgerJournalTable localJourTable;
            select firstonly localJourTable where localJourTable.JournalNum == SKS_LB_JournalAR.AutoCRRevJrnlId;
                
            Args args = new Args(formstr(LedgerJournalTable));
            args.record(localJourTable);

            FormRun formRun;
            formRun = ClassFactory.formRunClass(args);
            formRun.init();
            formRun.run();
            formRun.wait(true);

            appl.setDefaultCompany(origCompany, false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LockBoxFileRecord</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args;
            FormRun formRun;
            SKS_LB_FileRecordParms filerecordparms = new SKS_LB_FileRecordParms();

            //    // Validate the file record parameter
            if (SKS_LB_JournalAR.FileRecord <= 0 && SKS_LB_JournalAR.ParentRecid == 0)
            {
                //throw error("Multiple records - view thru Settlements Screen");
                info("@SKS485");
            }
            else
            {
                // change file option
                SKS_EB_FileStorage  sks_EB_FileStorageLoc;
                SKS_LB_Journal      sks_LB_JournalLoc;
                boolean             storageOptionChanged = false;
                SKS_EB_BankIntegOptWithNoLicense bankIntOption = SKS_EB_FileStorage::find().StorageOption_LB;
                SKS_BF_BankIntType SKS_BF_BankIntType = SKS_BF_BankIntType::FileHubLocal;

                if(bankIntOption == SKS_EB_BankIntegOptWithNoLicense::BankFabricEnumValue)
                {
                    SKS_BF_BankIntType = SKS_BF_BankIntType::BankFabric;
                }

                // check file option on the journal
                select firstonly sks_LB_JournalLoc
                    where sks_LB_JournalLoc.JournalID == SKS_LB_JournalAR.JournalId
                        && sks_LB_JournalLoc.BatchNum == SKS_LB_JournalAR.BatchNum;

                if(sks_LB_JournalLoc.StorageOption_LB != bankIntOption)
                {
                    // change the default
                    ttsbegin;
                    select forupdate firstonly sks_EB_FileStorageLoc;
                    sks_EB_FileStorageLoc.StorageOption_LB = sks_LB_JournalLoc.StorageOption_LB;
                    sks_EB_FileStorageLoc.update();
                    ttscommit;
                    storageOptionChanged = true;
                }

                args = new Args();
                filerecordparms.FileFormatId(SKS_LB_JournalAR.FormatID);
                filerecordparms.FileName(SKS_LB_JournalAR.Filename);

                // Run Lockbox File Record screen.
                args.name(formstr(SKS_LB_FileRecord) );

                filerecordparms.FileParentRecord(SKS_LB_JournalAR.ParentRecid);
                filerecordparms.FileRecord(SKS_LB_JournalAR.FileRecord);

                args.parmObject(filerecordparms);
                formRun = classFactory.formRunClass(Args);
                formRun.init();
                formRun.run();

                if(storageOptionChanged)
                {
                    // change back the default
                    ttsbegin;
                    select forupdate firstonly sks_EB_FileStorageLoc;
                    sks_EB_FileStorageLoc.StorageOption_LB = bankIntOption;
                    sks_EB_FileStorageLoc.update();
                    ttscommit;
                    storageOptionChanged = true;
                }

                formRun.wait(True); // Modal                
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Notes</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args;
            Formrun formRun;
            ;

            args = new Args();

            args.record(SKS_LB_JournalAR);

            args.name(formstr(SKS_LB_Notes));
            args.caller(this);
            formRun = classFactory.formRunClass( Args );

            formRun.run();
            formRun.wait(false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>Deductions</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///Handles the click action of the deductions button
        /// </summary>
        public void clicked()
        {
            Args args;
            Formrun formRun;
            ;

            args = new Args();

            args.record(SKS_LB_JournalAR);

            args.name(formstr(SKS_LB_Deductions));
            args.caller(element);
            formRun = classFactory.formRunClass( Args );

            formRun.run();
            formRun.wait(false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReassignToLedger</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {

            Args args;
            FormRun formRun;

            if( SKS_LB_JournalAR.AresDed == NoYes::Yes)
            {
                error("@SKS:SKGDedNoReassign");
                return;
            }

            //    // Validate the file record parameter
            if ((SKS_LB_JournalAR.PmtAmountCur == SKS_LB_JournalAR.ActualSettleAmountCur) )
            {
                //Payment is fully settled. Can only reassign unsettled amounts.
                info("@SKS947");
            }
            else
            {
                args = new Args();

                // Run Reassign Payments form
                //args.name(formstr(SKS_LB_ReassignToLedger));   
                args.name(formstr(SKS_LB_ReassignLedger));
                args.record(SKS_LB_JournalAR);
                args.caller(this);
                formRun = classFactory.formRunClass(Args);
                formRun.init();
                formRun.run();
                formRun.wait(True); // Modal
            }  
            
            this.RefreshGoodGridOnly();

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>RefreshGoodGridOnly</Name>
						<Source><![CDATA[
        void RefreshGoodGridOnly()
        {
            SKS_LB_Process_IMPORTTEMP_Records::CalcBatchTotals(msks_lb_journal.JournalID, SKS_LB_FileFormat.filetype, SKS_LB_FileFormat.PmtAmtEQSumChkAmts, msks_lb_journal.batchnum);
            /// this is called by Split Payments form since it is updating the same data.
            FormDataUtil::getFormDataSource(local_LB_Journal).reread();
            FormDataUtil::getFormDataSource(local_LB_Journal).refresh();
            element.refreshGoodPayments();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FFDeductions</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// open ff deductions form
        /// </summary>
        public void clicked()
        {
            Args                            args;
            Object                          formRun;

            SKS_LB_JournalAR                journalARLoc;
            select journalARLoc where journalARLoc.RecId == SKS_LB_JournalAR.RecId;       

            // open form
            args = new Args();
            args.name(formstr(SKS_LB_FFDeductions));
            args.record(journalARLoc);
            formRun = classfactory.formRunClass(args);
            formRun.init();
            formRun.run();
            formRun.wait();

            SKS_LB_JournalAR_ds.reread();
            SKS_LB_JournalAR_ds.research(); 
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PaymentGridFilter</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        ///handles modified event on the payment grid filter control
        /// </summary>
        /// <returns>boolean</returns>
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
            
            SKS_LB_JournalAR_ds.executeQuery();
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>pmtGoodDocs</Name>
				<Type>Image</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///Handles the clicked event of the pmtGoodDocs button
        /// </summary>
        public void clicked()
        {
            element.showDocument(SKS_LB_JournalAR);
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonMoveToPmts</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();
            element.moveErrorToGoodPmt();

            SKS_LB_54000Bas::markSplitPayments(local_LB_Journal.JournalID, local_LB_Journal.BatchNum);

            // refresh parent since SKS_LB_Journal may have changed. Parent refresh also trigger good and bad grids to refresh.
            element.refreshWB();

            element.refreshErrorPayments();
            element.refreshGoodPayments();

        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SelectAll</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            SKS_LB_JournalARErrors  journalARErrorslocal;
            int counter = 0;
            boolean ret = true;
            ;

            //spin through all shown lines, selecting any that are eligble to be selected.
            for (journalARErrorslocal = SKS_LB_JournalARErrors_ds.getFirst(false); journalARErrorslocal; journalARErrorslocal = SKS_LB_JournalARErrors_ds.getNext())
            {
                ret = true;

                //only check the ones not already selected
                if (journalARErrorslocal.Selected == NoYes::No)
                {

                    //make sure they are eligible to be selected
                    if(journalARErrorslocal.InvoiceIdErr == SKS_LB_InvoiceIdErr::CreditNoteNotFound
                    || journalARErrorslocal.InvoiceIdErr == SKS_LB_InvoiceIdErr::InvoiceNotFound)
                    {
                        ret = element.ValidateCustInv(journalARErrorslocal, true);
                    }

                    if(ret && msks_lb_54000bas.OKToSelect(journalARErrorslocal))
                    {
                        journalARErrorslocal.Selected = NoYes::Yes;
                        journalARErrorslocal.update();
                        SKS_LB_JournalARErrors_ds.reread();
                    }
                    else
                    {
                        //  Count how many did NOT work.
                        counter ++;
                    }
                }
            }
            SKS_LB_JournalARErrors_ds.executeQuery();

            // if any didn't select, let the user know.
            if (counter != 0)
            {
                info(strFmt("@SKS2036",counter));
            }
            super();

        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ClearAll</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            SKS_LB_JournalARErrors  journalARErrorslocal;
            ;

            //  spin through all shown lines, unselecting any selected lines.
            for (journalARErrorslocal = SKS_LB_JournalARErrors_ds.getFirst(false); journalARErrorslocal; journalARErrorslocal = SKS_LB_JournalARErrors_ds.getNext())
            {
                if (journalARErrorslocal.Selected == NoYes::Yes)
                {
                    journalARErrorslocal.Selected = NoYes::No;
                    journalARErrorslocal.update();
                    SKS_LB_JournalARErrors_ds.reread();
                }
            }
            SKS_LB_JournalARErrors_ds.executeQuery();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DeleteErrorButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///Handles the clicked event of the DeleteErrorButton
        /// </summary>
        public void clicked()
        {
            if (Box::yesNo("@SKS488",DialogButton::No, "@SKS352")==DialogButton::Yes)
            {
                super();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ButtonLockBoxFileRecord</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            // change file option
            SKS_EB_FileStorage  sks_EB_FileStorageLoc;
            SKS_LB_Journal      sks_LB_JournalLoc;
            boolean             storageOptionChanged = false;
            SKS_EB_BankIntegOptWithNoLicense bankIntOption = SKS_EB_FileStorage::find().StorageOption_LB;
            SKS_BF_BankIntType SKS_BF_BankIntType = SKS_BF_BankIntType::FileHubLocal;

            if(bankIntOption == SKS_EB_BankIntegOptWithNoLicense::BankFabricEnumValue)
            {
                SKS_BF_BankIntType = SKS_BF_BankIntType::BankFabric;
            }

            // check file option on the journal
            select firstonly sks_LB_JournalLoc
                    where sks_LB_JournalLoc.JournalID == SKS_LB_JournalARErrors.JournalId
                        && sks_LB_JournalLoc.BatchNum == SKS_LB_JournalARErrors.BatchNum;

            if(sks_LB_JournalLoc.StorageOption_LB != bankIntOption)
            {
                // change the default
                ttsbegin;
                select forupdate firstonly sks_EB_FileStorageLoc;
                sks_EB_FileStorageLoc.StorageOption_LB = sks_LB_JournalLoc.StorageOption_LB;
                sks_EB_FileStorageLoc.update();
                ttscommit;
                storageOptionChanged = true;
            }

            Args args = new Args();
            FormRun formRun;
            SKS_LB_FileRecordParms filerecordparms = new SKS_LB_FileRecordParms();
            ;
            //    // Validate the file record parameter
            if (SKS_LB_JournalARErrors.FileRecord <= 0 && SKS_LB_JournalARErrors.ParentRecid == 0)
            {
                //throw error("Multiple records - view thru Settlements Screen");
                info("@SKS485");
            }
            else
            {
                args = new Args();
                filerecordparms.FileFormatId(SKS_LB_JournalARErrors.FormatID);
                filerecordparms.FileName(SKS_LB_JournalARErrors.Filename);

                // Run Lockbox File Record screen.
                args.name(formstr(SKS_LB_FileRecord) );

                filerecordparms.FileParentRecord(SKS_LB_JournalARErrors.ParentRecid);
                filerecordparms.FileRecord(SKS_LB_JournalARErrors.FileRecord);

                args.parmObject(filerecordparms);
                formRun = classFactory.formRunClass(Args);
                formRun.init();
                formRun.run();

                if(storageOptionChanged)
                {
                    // change back the default
                    ttsbegin;
                    select forupdate firstonly sks_EB_FileStorageLoc;
                    sks_EB_FileStorageLoc.StorageOption_LB = bankIntOption;
                    sks_EB_FileStorageLoc.update();
                    ttscommit;
                    storageOptionChanged = true;
                }

                formRun.wait(True); // Modal
            }


            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ErrNotes</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args args;
            Formrun formRun;
            ;

            args = new Args();

            args.record(SKS_LB_JournalARErrors);

            args.name(formstr(SKS_LB_Notes));
            args.caller(this);
            formRun = classFactory.formRunClass( Args );

            formRun.run();
            formRun.wait(false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DuplicateCustomers</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///Handles the Clicked event of the Duplicate Customers button
        /// </summary>
        public void clicked()
        {
            CustVendAC  OldCustAccount;
            Args args;
            Formrun formRun;
            ;
            OldCustAccount = SKS_LB_JournalARErrors.CustAccountSugg;
            args = new Args();

            args.Record(SKS_LB_JournalARErrors);

            args.name(formstr(SKS_LB_DuplicateCustomer));
            args.caller(this);
            formRun = classFactory.formRunClass( Args );

            formRun.run();
            formRun.wait(false);
            if(sks_LB_Journalarerrors.CustAccountSugg != OldCustAccount)
            {
                SKS_LB_JournalARErrors_ds.object(fieldnum(SKS_LB_JournalARErrors, custaccountSugg)).modified();
                SKS_LB_JournalARErrors_ds.object(fieldnum(SKS_LB_JournalARErrors, custaccountSugg)).validate();
            }

        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReassignToLedgerForErr</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            Args                    args;
            FormRun                 formRun;
            SKS_LB_JournalAR        localJournalAR;
            SKS_LB_JournalARErrors  localJournalARErr;
    
            if (SKS_LB_JournalARErrors.AresDed == NoYes::Yes)
            {
                error("@SKS:SKGDedNoReassign");
                return;
            }

            // check if the error record is related to another record in the error grid or the good grid
            if (SKS_LB_Process_IMPORTTEMP_Records::Parentrecidfiletype(SKS_LB_FileFormat::find(SKS_LB_JournalARErrors.FormatID).FileType))
            {
                select firstonly RecId from localJournalAR
                 where localJournalAR.ParentRecId == SKS_LB_JournalARErrors.ParentRecId
                    && localJournalAR.JournalId == SKS_LB_JournalARErrors.JournalId
                    && localJournalAR.Batchnum == SKS_LB_JournalARErrors.BatchNum
                    && localJournalAR.isDED == NoYes::No
                    && localJournalAR.AresDed == NoYes::No
                    && localJournalAR.IsTransferredToLedger == NoYes::No;

                if (!localJournalAR)
                {
                    select firstonly RecId from localJournalARErr
                     where localJournalARErr.ParentRecId == SKS_LB_JournalARErrors.ParentRecId
                        && localJournalARErr.JournalId == SKS_LB_JournalARErrors.JournalId
                        && localJournalARErr.Batchnum == SKS_LB_JournalARErrors.BatchNum
                        && localJournalARErr.isDED == NoYes::No
                        && localJournalARErr.AresDed == NoYes::No
                        && localJournalARErr.RecId != SKS_LB_JournalARErrors.RecId;
                }
            }
            else
            {
                select firstonly RecId from localJournalAR
                 where localJournalAR.CustAccount == SKS_LB_JournalARErrors.CustAccount
                    && localJournalAR.ChkRefNbr == SKS_LB_JournalARErrors.ChkRefNbr
                    && localJournalAR.JournalId == SKS_LB_JournalARErrors.JournalId
                    && localJournalAR.Batchnum == SKS_LB_JournalARErrors.BatchNum
                    && localJournalAR.DefaultDimension == SKS_LB_JournalARErrors.DefaultDimension
                    && localJournalAR.isDED == NoYes::No
                    && localJournalAR.AresDed == NoYes::No
                    && localJournalAR.IsTransferredToLedger == NoYes::No;

                if (localJournalAR)
                {
                    select firstonly RecId from localJournalARErr
                     where localJournalARErr.CustAccount == SKS_LB_JournalARErrors.CustAccount
                        && localJournalARErr.ChkRefNbr == SKS_LB_JournalARErrors.ChkRefNbr
                        && localJournalARErr.JournalId == SKS_LB_JournalARErrors.JournalId
                        && localJournalARErr.Batchnum == SKS_LB_JournalARErrors.BatchNum
                        && localJournalARErr.DefaultDimension == SKS_LB_JournalARErrors.DefaultDimension
                        && localJournalARErr.isDED == NoYes::No
                        && localJournalARErr.AresDed == NoYes::No
                        && localJournalARErr.RecId != SKS_LB_JournalARErrors.RecId;
                }
            }

            if (localJournalAR.RecId
                || localJournalARErr.RecId)
            {
                error("@SKS:LBReassignToLedgerRelatedRecError");
                return;
            }

    
            args = new Args();
    
            // Run Reassign Payments form
            args.name(formstr(SKS_LB_ReassignLedger));
            args.record(SKS_LB_JournalARErrors);
            args.caller(this);
            formRun = classFactory.formRunClass(Args);
            formRun.init();
            formRun.run();
            formRun.wait(True); // Modal
            
            this.refreshErrorGridOnly();
        }

]]></Source>
					</Method>
					<Method>
						<Name>refreshErrorGridOnly</Name>
						<Source><![CDATA[
        void refreshErrorGridOnly()
        {
            SKS_LB_Process_IMPORTTEMP_Records::CalcBatchTotals(msks_lb_journal.JournalID, SKS_LB_FileFormat.filetype, SKS_LB_FileFormat.PmtAmtEQSumChkAmts, msks_lb_journal.batchnum);
            /// this is called by Split Payments form since it is updating the same data.
            FormDataUtil::getFormDataSource(local_LB_Journal).reread();
            FormDataUtil::getFormDataSource(local_LB_Journal).refresh();
            element.refreshErrorPayments();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>pmtErrDocs</Name>
				<Type>Image</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        ///Hnaldes the clicked event of the PmtErrorDos button
        /// </summary>
        public void clicked()
        {
            element.showDocument(SKS_LB_JournalARErrors);
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_LB_JournalARErrors_CustAccountErr</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>toolTip</Name>
						<Source><![CDATA[
        public str toolTip()
        {
            str ret;
            CustBankAccount custBankAccount;
            //BP Deviation Documented
            System.Text.StringBuilder sb = new System.Text.StringBuilder();
            int dupCount = 0;
            ;

            if(SKS_LB_JournalARErrors.CustAccountErr == SKS_LB_CustIDErr::DuplicateRtnAcct)
            {
                sb.Append("@SKS833");
                while select * from custBankAccount where
                      custBankAccount.RegistrationNum == SKS_LB_JournalARErrors.CustBankRegNum &&
                      custBankAccount.AccountNum == SKS_LB_JournalARErrors.CustBankAccountNum
                {
                    sb.Append(' ');
                    sb.Append(custBankAccount.CustAccount);
                    sb.Append('/');
                    sb.Append(custBankAccount.AccountID);
                    sb.Append(';');

                    // Limit to only show 10 duplicates
                    dupCount++;

                    if(dupCount > 10)
                    {
                        break;
                    }
                }
                ret = sb.ToString();
            }
            else
            {
                ret = super();
            }
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_LB_JournalARErrors_CustAccountSugg</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            CustTable::lookupCustomer(SKS_LB_JournalARErrors_CustAccountSugg, SKS_LB_JournalARErrors.CustomerCompany);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_LB_JournalARErrors_AutoCRRev</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();

            if(SKS_LB_JournalARErrors.AutoCRRev == NoYes::Yes)
            {
                SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, RevReasonCode)).allowEdit(true);
                SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, AutoRevLedgerDimension)).allowEdit(true);
            }
            else
            {
                SKS_LB_JournalARErrors.RevReasonCode = '';
                SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, RevReasonCode)).allowEdit(false);
                SKS_LB_JournalARErrors_ds.object(fieldNum(SKS_LB_JournalARErrors, AutoRevLedgerDimension)).allowEdit(false);
                SKS_LB_JournalARErrors.AutoRevLedgerDimension = 0;
                SKS_LB_JournalARErrors.AutoRevOffsetLedgerDimension = 0;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SKS_LB_JournalAR</Name>
			<Table>SKS_LB_JournalAR</Table>
			<Fields>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ActualSettleAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AresDed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssignedTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoCROffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoCRRev</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoCRRevJrnlId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoRevLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoRevOffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAcct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BatchNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChangedPmtAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChkRefNbr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccountErr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccountSugg</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankRegNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransOpenRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscApplyAmt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FeeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FeeValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FFDedCat</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Filename</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileRecord</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImageIdentifierBack</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImageIdentifierFront</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceIdErr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>isDED</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LBCustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>LBInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LBSettlementMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalTransRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedForApply</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MOP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>OffsetDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>OffsetDimensionReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentJournalARID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentRecid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PayJrnlDeposit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PendingSettlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>PmtAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmtWasSplit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefNbrDupe</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReviewStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevReasonCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SplitPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TrackingInvoices</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WriteOff</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>SKS_LB_JournalARErrors</Name>
			<Table>SKS_LB_JournalARErrors</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActualSettlementAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltInvLookupRef</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AltInvLookupType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AresDed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssignedTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoCROffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoCRRev</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoRevLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoRevOffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAcct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BatchNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChangedPmtAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChkRefNbr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccountErr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAccountSugg</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankRegNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransOpenRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DiscApplyAmt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FeeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FeeValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Filename</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileRecord</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImageIdentifierBack</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImageIdentifierFront</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceIdErr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>isDED</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LBInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LBSettleAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LBSettlementMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MOP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>OffsetDimensionReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ParentRecid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymNote</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PendingSettlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmtAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PmtWasSplit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReviewStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevReasonCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Selected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TrackingInvoices</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WriteOff</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WriteOffId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTable</Name>
			<Table>LedgerJournalTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetTransferType_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrentOperationsTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendNegInstProtestProcess</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DelayTaxCalculation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DetailSummaryPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndBalance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUROTriangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchrateSecondary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedOffsetAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupBlockId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntegrationKey</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InUseBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsLedgerDimensionNameUpdated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalBalance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalTotalCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalTotalCreditReportingCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalTotalDebit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalTotalDebitReportingCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>journalTotalOffsetBalance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalInclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LinesLimitBeforeDistribution</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Log</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberSequenceTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumOfLines</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalJournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentsGenerated_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Posted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProtestSettledBill</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RejectedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemoveLineAfterPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportedAsReadyBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyExchRateSecondary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyFixedExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailStatementId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SessionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SessionLoginDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SimulationPosted_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_AcceptPaymReq</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_CreatedByPaymReq</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_InterCompSourceDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_InterCompSourceJournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_IsCreatedByReqJournal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_IsIHBJournal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_ISPaymentCalendarJournal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_IsPaymReqJournal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_PayGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_PaymentCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_PaymentSubmitDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_PaymentSubmitUser</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_PaymJourName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFT_AutoCreate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFT_JournalState</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EPY_BatchID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EPY_EPayCreated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EPY_JournalDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_PL_isPayLink</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SystemBlocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxObligationCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UserBlockId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VoucherAllocatedAtPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkflowApprovalStatus</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>LedgerJournalTran</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>LedgerJournalTran</Name>
			<Table>LedgerJournalTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountAgreementId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AcknowledgementDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Addressing_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AgreementCompany_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCurDebit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AnnouncementNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssessableValue_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Attachments_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAgreementExt_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankBillOfExchangeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankTransTypeCur_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankChequeDepositTransRefRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankChequeNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankClientDocumentTypeId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCommAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyDealCourse_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCurrencyTransferLog_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDepositNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDepositVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankNegInstRecipientName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPaymentRegistrationNum_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPrintAccountNum_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankPromissoryNoteNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankReconcileAccountAtPost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceFileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRespWorkerId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankSpecAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankVendAccountId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BudgetSourceLedgerEntryUnposted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Cancel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDays</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscPercent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashReceiptNum_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CFDIUUID_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommProfileType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Company</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyLocation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ConsignmentNoteNum_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceDate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectedInvoiceId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CorrectionType_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreditCardAuthTransRefId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymDeliveryNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymSectionNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustEinvoicePaymTransNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustFactureAutoCreate_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerLocation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerTaxInformation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsDuty_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsTariffCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomsTariffDirection_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendAccount_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendName_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendNegInstProtestReason</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DateCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DebitCurrencyCode_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DelayTaxCalculation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_AssessableValue_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_MaximumRetailPrice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirectDebitMandate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Due</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ElectronicPaymentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnterpriseNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ErrorCodePayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUSalesList</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRateSecond</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseRecordType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseTariffCodes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExciseType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Exempt_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FBSpedEcfDerexClasificationCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileCreated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignBankFee_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ForeignVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreqCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FreqValue</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FurtherPostingRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FurtherPostingType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GSTHSTTaxType_CA</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GTAServiceCategory_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HSNCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ImportDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByPhone_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InformByTelex_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntBank_LV</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntentLetterId_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntraComVATDueDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invisible</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceIdentification_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceSeries_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ITCCategory_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastTransferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerDimensionName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalDlvDate_ES</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerVoucherType_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Listcode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LoadingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MainAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoiceCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkedInvoiceRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MarkupCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MaximumRetailPrice_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRCCGeneralLedgerId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPaymOrderID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPrintTxtOnCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRRefPaymID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NatureOfAssessee_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NegInstId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NoEdit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NonBusinessUsagePercentage_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NonRecoverablePercent_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffSessionId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountAgreementId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAgreementCompany_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetDefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetPostingProfile_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetTxt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OldLineNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OperationType_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalTransactionDate_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalTransactionID_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Payment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentNotes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentPriority_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentSequenceNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction1</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction3</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymInstruction4</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymPurpose_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PlafondDate_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PoolRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Price</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProvisionalAssessment_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchIdRange</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PurchLedgerPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Qty</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashDocRepresPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashDocRepresType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RCashPayTransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonRefRecID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReceiptDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefCopyReverse_CN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReleaseDateComment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemainAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemittanceLocation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemitteeCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyExchRateSecondary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepresPersonCard_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RepresPersonName_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesOrderId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SalesTaxFormTypes_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceAccountingCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCategory_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServiceCodeTable_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SkipBlockedForManualEntryCheck</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_BR_BankTranRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_BR_ReconciliationReversalRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_BTB_TransferMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_BTB_TransferSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_CCR_BankTranRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_CCR_ReconciliationReversalRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_DD_ExceptionStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_BankAmt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_BankAmtCurr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_BankRefNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_BankRefNum2</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_IHBBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_InboundRefNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_InExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_IsAppliedSwitchboard</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_PaymAmtCurr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_PaymDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_PaymentAmt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_RevOrigRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFT_AllowTransDateModifications</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFT_APPmtSelectionRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFT_ARPmtSelectionRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFT_BTBPmtSelectionRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFT_CNPPmtSelectionRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFT_IsPaymentUpload</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EPY_PmtNbr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_IHB_IntercoAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_IHB_IntercoCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_IHB_IntercoLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_IHB_InterComp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_IHB_InterOrigVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_IHB_RefLedgerTransCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_IHB_RefLedgerTransRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_IHB_ValueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_LB_AutoCRRevJrnlNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_LB_eSettlementInvoices</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_LB_PaymentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_LB_PaymentNumber</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_PL_PayLinkID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SoftwareDeclReceived_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Amount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099Fields</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099State</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tax1099StateAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxBase_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxDirectionControl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxItemGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxPeriodPaymentCode_PL</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxSetoffVoucher_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAlternateVendorAcct_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCalculate_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdCode_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdItemGroupHeading_TH</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSGroup_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransactionType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transfer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferCurrency_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Transferred</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredOn</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransferredTo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Triangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseOriginalDocumentAsFacture_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VatDueDate_W</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATGoodsType_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATNumJournal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOnPayment_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATOperationCode_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATPaymRefRecId_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VATTaxAgentVendAccount_RU</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendBankAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendInvoiceDeclaration_IS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorLocation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendorTaxInformation_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendPaymFeeGroup_JP</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VendTransId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher_CN</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>SKS_LB_JournalAR</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustTransOpenError</Name>
			<Table>CustTransOpen</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankDiscNoticeDeadline</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankLCExportLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscountLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectionLetter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectionLetterCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CovStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjUnrealizedReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineAmountPaymCur_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineAmount_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FineCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ifbWideAreaWorkflow</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestAmountPaymCur_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestAmount_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterestCode_BR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastInterestDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PossibleCashDisc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettledLinePercent_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettledTotalAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettlementPriorityCashDiscDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EPY_SentToePay</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxDistribution</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxWithholdAmountOrigin_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TCSAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TDSAmount_IN</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseCashDisc</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<JoinSource>SKS_LB_JournalARErrors</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>CustTransError</Name>
			<Table>CustTrans</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccountingEvent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approved</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankCentralBankPurposeText</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankLCExportLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceFileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillOfExchangeID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillOfExchangeSeqNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BillOfExchangeStatus</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CancelledPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscBaseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashDiscCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CashPayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Closed</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectionLetter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CollectionLetterCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ControlNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Correct</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CredManExcludeFromCreditControl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAutomationExclude</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAutomationPredictionSent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustAutomationPredunningSent</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustBillingClassification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExchAdjustmentRealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustExchAdjustmentUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeliveryMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DirectDebitMandate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DueDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUROTriangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjustment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchAdjustmentReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRateSecond</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Interest</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Invoice</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceProject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InvoiceType_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdj</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjRateReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastExchAdjVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleAccountNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastSettleVoucher</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRPaymOrderID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>modifiedTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetRecid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrderAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMethod</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymReference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSchedId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymSpec</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymTermId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostingProfileClose</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Prepayment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyAmount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyCrossRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyExchRateSecondary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingExchAdjustmentRealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingExchAdjustmentUnrealized</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailCustTrans</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailStoreId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailTerminalId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailTransactionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountCur</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountMST</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmountReporting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SettleAmount_MX</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Settlement</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_BR_DDR_IsSelected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_DD_IsDirectDebit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxInvoiceSalesId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThirdPartyBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Txt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Voucher</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<CrossCompanyAutoQuery>Yes</CrossCompanyAutoQuery>
			<JoinSource>CustTransOpenError</JoinSource>
			<LinkType>Passive</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>GLLedgerJournalTable</Name>
			<Table>LedgerJournalTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Approver</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AssetTransferType_LT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BankRemittanceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>createdBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrencyCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrentOperationsTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustVendNegInstProtestProcess</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DelayTaxCalculation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DetailSummaryPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndBalance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EUROTriangulation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ExchrateSecondary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FixedOffsetAccount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GroupBlockId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IntegrationKey</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InUseBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsLedgerDimensionNameUpdated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalBalance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalTotalCredit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalTotalCreditReportingCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalTotalDebit</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalTotalDebitReportingCurrency</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>journalTotalOffsetBalance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>JournalType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LedgerJournalInclTax</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LinesLimitBeforeDistribution</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Log</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumberSequenceTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>NumOfLines</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetAccountType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalJournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PackedExtensions</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PaymentsGenerated_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Posted</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PostedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ProtestSettledBill</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RejectedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemoveLineAfterPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportedAsReadyBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyExchRateSecondary</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportingCurrencyFixedExchRate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailStatementId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReverseEntry</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SessionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SessionLoginDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SimulationPosted_IT</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_AcceptPaymReq</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_CreatedByPaymReq</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_InterCompSourceDataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_InterCompSourceJournalNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_IsCreatedByReqJournal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_IsIHBJournal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_ISPaymentCalendarJournal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_IsPaymReqJournal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_PayGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_PaymentCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_PaymentSubmitDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_PaymentSubmitUser</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFTAP_PaymJourName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFT_AutoCreate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EFT_JournalState</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EPY_BatchID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EPY_EPayCreated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_EPY_JournalDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_PL_isPayLink</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SystemBlocked</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TaxObligationCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UserBlockId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>VoucherAllocatedAtPosting</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>WorkflowApprovalStatus</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>SKS_LB_JournalAR</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SKS434</Caption>
		<Pattern xmlns="">TaskParentChild</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Scrollbars xmlns="">Yes</Scrollbars>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>306783378</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>CreatePayment</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<NeededPermission>Create</NeededPermission>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>CreatePmtJrnl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SKS720</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SKS406</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>LedgerSubform</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@SKS:LedgerSubForm</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Workbench</Name>
				<Pattern>CustomFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>CountTotals</Name>
						<ElementPosition>613566756</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>SKS_LB_BankCnt</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827882</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SKS2381</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormIntegerControl">
								<Name>SKS_LB_BatchCnt</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>Integer</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SKS2354</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>SKS_LB_BankPmtTot</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SKS2395</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>SKS_LB_BatchPmtTot</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1789569705</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SKS885</Label>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>SKS_LB_LedgerAmount</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Enabled>No</Enabled>
								<Type>Real</Type>
								<FormControlExtension
									i:nil="true" />
								<Label>@SKS:LedgerTotal</Label>
							</AxFormControl>
						</Controls>
						<Columns>4</Columns>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>LBJournalGroup</Name>
						<ElementPosition>920350134</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_Journal_JournalID</Name>
								<AllowEdit>No</AllowEdit>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827882</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SKS390</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_Journal_Batchnum</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>SKS_LB_BatchNum</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_Journal_KeepDelete</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SKS771</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_Journal_CurrencyCode</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1789569705</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS66023</Label>
							</AxFormControl>
						</Controls>
						<Columns>6</Columns>
						<FrameType>None</FrameType>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>GoodPayments</Name>
				<AlignControl>No</AlignControl>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GoodOverview</Name>
						<ElementPosition>613566756</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane1</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab1</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>PaymentButtonGroup</Name>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>MoveToErrors</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>429496728</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@SKS744</HelpText>
														<NeededPermission>Delete</NeededPermission>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<NormalImage>Down</NormalImage>
														<Text>@SKS482</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ReassignPayments</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>644245092</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@SKS945</HelpText>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Text>@SKS946</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>DeleteGoodButton</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>858993456</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<NeededPermission>Delete</NeededPermission>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NormalImage>Delete</NormalImage>
														<Primary>Yes</Primary>
														<SaveRecord>No</SaveRecord>
														<Text>@sys14425</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>SplitChecks</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741820</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@SKS746</HelpText>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Text>@SKS421</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>PaymentJournal</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<HelpText>@SYS25908</HelpText>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@SYS23060</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>Settlement</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1503238548</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<MenuItemName>SKS_LB_SettlementDetails</MenuItemName>
														<Text>@SYS4946</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>AutoRevJrnl</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1717986912</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Text>@SYS25908</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>LockBoxFileRecord</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1932735276</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@SKS716</HelpText>
														<NeededPermission>Read</NeededPermission>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Text>@SKS445</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>Notes</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@SYS40182</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>Deductions</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@Benefits:Deductions</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ReassignToLedger</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>644245092</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<NeededPermission>Manual</NeededPermission>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Text>@SKS:ReassignToLedger</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>FFDeductions</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>Button</Type>
														<Visible>No</Visible>
														<FormControlExtension
															i:nil="true" />
														<Text>@SKS:FFDed</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<FrameType>None</FrameType>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GoodGridCaptions</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>PaymentGridFilter</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<EnumType>SKS_LB_WBGridFilter</EnumType>
										<Label>@SYS8335</Label>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>SKS_LB_IntPmtCnt</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>858993458</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<FastTabSummary>No</FastTabSummary>
										<Label>@SYS62581</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SKS_LB_PmtTot</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1288490187</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<FastTabSummary>No</FastTabSummary>
										<Label>@SYS24946</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SKS_LB_RealPmtApplied</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1717986916</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS79585</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>DeductionTotal</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<Label>@SKS:LBdeductionTotal</Label>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>PaymentsGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>pmtGoodDocs</Name>
										<AlignControl>No</AlignControl>
										<ElementPosition>195225786</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>15</Height>
										<HeightMode>Auto</HeightMode>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>15</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>showDocHandIcon</DataMethod>
										<DataSource>SKS_LB_JournalAR</DataSource>
										<Label>@SYS54210</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalAR_CustomerCompany</Name>
										<ElementPosition>292838679</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustomerCompany</DataField>
										<DataSource>SKS_LB_JournalAR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalAR_CustAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>390451572</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustAccount</DataField>
										<DataSource>SKS_LB_JournalAR</DataSource>
										<Label>@SYS24500</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalAR_Description</Name>
										<ElementPosition>439258018</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Description</DataField>
										<DataSource>SKS_LB_JournalAR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Dimensions</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>488064465</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>dimensionString</DataMethod>
										<DataSource>SKS_LB_JournalAR</DataSource>
										<Label>@SYS334198</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>OffsetDimensionString</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>OffsetdimensionString</DataMethod>
										<DataSource>SKS_LB_JournalAR</DataSource>
										<Label>@SYS98644</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalAR_LBInvoice</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>LBInvoice</DataField>
										<DataSource>SKS_LB_JournalAR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_LB_JournalARSplitPmt</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>536870911</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>PmtWasSplit</DataField>
										<DataSource>SKS_LB_JournalAR</DataSource>
										<Label>@SKS444</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalAR_ChkRefNbr</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>585677358</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ChkRefNbr</DataField>
										<DataSource>SKS_LB_JournalAR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SKS_LB_JournalAR_PmtAmountCur</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>683290251</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PmtAmountCur</DataField>
										<DataSource>SKS_LB_JournalAR</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>NotEqual</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>780903144</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>NotEqual</DataMethod>
										<DataSource>SKS_LB_JournalAR</DataSource>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SKS_LB_JournalAR_ActualSettleAmountCur</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>878516037</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActualSettleAmountCur</DataField>
										<DataSource>SKS_LB_JournalAR</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>DiscApplyAmt</Name>
										<Type>Real</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>DiscApplyAmount</DataMethod>
										<DataSource>SKS_LB_JournalAR</DataSource>
										<Label>@SYS11829</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SKS_LB_JournalAR_UnsettledAmt</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>943591299</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>UnsettledAmount</DataMethod>
										<DataSource>SKS_LB_JournalAR</DataSource>
										<Label>@SKS2393</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_LB_JournalAR_isDED</Name>
										<AllowEdit>No</AllowEdit>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>isDED</DataField>
										<DataSource>SKS_LB_JournalAR</DataSource>
										<Label>Deduction</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_LB_JournalAR_AresDed</Name>
										<AllowEdit>No</AllowEdit>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>AresDed</DataField>
										<DataSource>SKS_LB_JournalAR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalAR_Invoice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1008666561</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Invoice</DataField>
										<DataSource>SKS_LB_JournalAR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>FullSettlement</Name>
										<AlignControl>No</AlignControl>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Skip>Yes</Skip>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>fullSettlement</DataMethod>
										<DataSource>SKS_LB_JournalAR</DataSource>
										<Imagemode>SizeToFit</Imagemode>
										<Label>@SYS21685</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_LB_JournalAR_RefNbrDupe</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1171354716</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>RefNbrDupe</DataField>
										<DataSource>SKS_LB_JournalAR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LedgerJournalTable_JournalNum</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1268967609</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>JournalNum</DataField>
										<DataSource>LedgerJournalTable</DataSource>
										<Label>@SYS112305</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>LedgerJournalTable_Posted</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1366580502</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Posted</DataField>
										<DataSource>LedgerJournalTable</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_LB_JournalAR_PayJrnlDeposit</Name>
										<ElementPosition>1464193395</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@SKS1827</HelpText>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>PayJrnlDeposit</DataField>
										<DataSource>SKS_LB_JournalAR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalAR_CustName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1561806288</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustName</DataField>
										<DataSource>SKS_LB_JournalAR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalAR_CustBankRegNum</Name>
										<ElementPosition>1659419181</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustBankRegNum</DataField>
										<DataSource>SKS_LB_JournalAR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalAR_CustBankAccountNum</Name>
										<ElementPosition>1854644967</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Height>0</Height>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustBankAccountNum</DataField>
										<DataSource>SKS_LB_JournalAR</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalAR_AutoCRRevJrnlId</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2049870753</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AutoCRRevJrnlId</DataField>
										<DataSource>SKS_LB_JournalAR</DataSource>
									</AxFormControl>
								</Controls>
								<AlternateRowShading>Yes</AlternateRowShading>
								<DataSource>SKS_LB_JournalAR</DataSource>
								<MultiSelect>No</MultiSelect>
								<ShowRowLabels>No</ShowRowLabels>
							</AxFormControl>
						</Controls>
						<Caption>@SYS34991</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GoodPayment</Name>
						<ElementPosition>920350134</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_JournalAR_PmtCompany</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827882</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>dataAreaId</DataField>
								<DataSource>SKS_LB_JournalAR</DataSource>
								<Label>@SKS1407</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>SKS_LB_JournalAR_PaymDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>PaymDate</DataField>
								<DataSource>SKS_LB_JournalAR</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_JournalAR_OffsetDimensionReference</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>OffsetDimensionReference</DataField>
								<DataSource>SKS_LB_JournalAR</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>LedgerJournalTran_PaymReference</Name>
								<ElementPosition>1431655764</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>PaymReference</DataField>
								<DataSource>LedgerJournalTran</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_LB_JournalAR_Prepayment</Name>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<BackgroundColor>WindowBackground</BackgroundColor>
								<DataField>Prepayment</DataField>
								<DataSource>SKS_LB_JournalAR</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_JournalAR_PaymNote</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>PaymNote</DataField>
								<DataSource>SKS_LB_JournalAR</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_JournalAR_MOP</Name>
								<ElementPosition>2058005160</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>MOP</DataField>
								<DataSource>SKS_LB_JournalAR</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_JournalAR_FFDedCat</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>FFDedCat</DataField>
								<DataSource>SKS_LB_JournalAR</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS55132</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>tabDimensionGood</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1227133512</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<NeededPermission>Manual</NeededPermission>
						<Pattern>DimensionEntryControl</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormContainerControl">
								<Name>DimensionEntryControlGood</Name>
								<Type>Container</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension>
									<Name>DimensionEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>ExtendedDataType</Type>
											<TypeName>ClassName</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmControlLabelText</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumerationName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmDataSourceName</Name>
											<Type>String</Type>
											<Value>SKS_LB_JournalAR</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValueSetReferenceField</Name>
											<Type>String</Type>
											<Value>DefaultDimension</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumValueSetReferenceField</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<Controls />
							</AxFormControl>
						</Controls>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@SYS334002</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>TabOffsetDimensionGood</Name>
						<NeededPermission>Manual</NeededPermission>
						<Pattern>DimensionEntryControl</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormContainerControl">
								<Name>OffsetDimensionEntryControl</Name>
								<Type>Container</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension>
									<Name>DimensionEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>ExtendedDataType</Type>
											<TypeName>ClassName</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmControlLabelText</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumerationName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmDataSourceName</Name>
											<Type>String</Type>
											<Value>SKS_LB_JournalAR</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValueSetReferenceField</Name>
											<Type>String</Type>
											<Value>OffsetDimension</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumValueSetReferenceField</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<Controls />
							</AxFormControl>
						</Controls>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@SYS98644</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GoodFees</Name>
						<ElementPosition>1533916890</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_JournalAR_FeeId</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>FeeId</DataField>
								<DataSource>SKS_LB_JournalAR</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>SKS_LB_JournalAR_FeeValue</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>FeeValue</DataField>
								<DataSource>SKS_LB_JournalAR</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2826</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GoodReview</Name>
						<ElementPosition>1840700268</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SKS_LB_JournalAR_ReviewStatus</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ReviewStatus</DataField>
								<DataSource>SKS_LB_JournalAR</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_JournalAR_AssignedTo</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>AssignedTo</DataField>
								<DataSource>SKS_LB_JournalAR</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS60543</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>VSplitter</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1533916890</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>Auto</HeightMode>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>Auto</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<Style>SplitterHorizontalContainer</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>PaymentsWithErrors</Name>
				<AlignControl>No</AlignControl>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Tab</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ErrorOverview</Name>
						<ElementPosition>477218588</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>ActionPane2</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ActionPane</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ActionPaneTab2</Name>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ActionPaneTab</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>PaymentErrButtonGroup</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>SizeToAvailable</HeightMode>
												<Type>ButtonGroup</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ButtonMoveToPmts</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>429496728</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@SKS743</HelpText>
														<NeededPermission>Delete</NeededPermission>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<NormalImage>Up</NormalImage>
														<Text>@SKS447</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>SelectAll</Name>
														<ElementPosition>644245092</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@SYS302926</HelpText>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Text>@SYS152644</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ClearAll</Name>
														<ElementPosition>858993456</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@SKS210</HelpText>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Text>@SYS152646</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCommandButtonControl">
														<Name>DeleteErrorButton</Name>
														<ElementPosition>1073741820</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<NeededPermission>Delete</NeededPermission>
														<Type>CommandButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
														<Command>DeleteRecord</Command>
														<NormalImage>Delete</NormalImage>
														<Primary>Yes</Primary>
														<SaveRecord>No</SaveRecord>
														<Text>@sys14425</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ButtonLockBoxFileRecord</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1288490184</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<HelpText>@SKS716</HelpText>
														<NeededPermission>Read</NeededPermission>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Text>@SKS445</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>SKS_LB_WriteOffTmp</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1717986912</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<DataSource>SKS_LB_JournalARErrors</DataSource>
														<MenuItemName>SKS_LB_WriteOffTmp</MenuItemName>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>SKS_LB_ARErrRevOffsetDimension</Name>
														<ElementPosition>1932735276</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>MenuFunctionButton</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<MenuItemName>SKS_LB_ARErrRevOffsetDimension</MenuItemName>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ErrNotes</Name>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@SYS40182</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>DuplicateCustomers</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>Button</Type>
														<FormControlExtension
															i:nil="true" />
														<Text>@SKS:SKGLBViewDuplicateCustomers</Text>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonControl">
														<Name>ReassignToLedgerForErr</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>644245092</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<HeightMode>Auto</HeightMode>
														<Type>Button</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>Auto</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<NeedsRecord>Yes</NeedsRecord>
														<Text>@SKS:ReassignToLedger</Text>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>SKS_LB_JournalARErrors</DataSource>
											</AxFormControl>
										</Controls>
										<AlignChild>No</AlignChild>
										<AlignChildren>No</AlignChildren>
										<ArrangeMethod>Vertical</ArrangeMethod>
									</AxFormControl>
								</Controls>
								<AlignChild>No</AlignChild>
								<AlignChildren>No</AlignChildren>
								<ArrangeMethod>Vertical</ArrangeMethod>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ErrorGridCaptions</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Pattern>CustomFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>IntErrorGridCount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741822</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<FastTabSummary>No</FastTabSummary>
										<Label>@SYS62581</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RealErrorGridPmtTotal</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612733</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<FastTabSummary>No</FastTabSummary>
										<Label>@SYS24946</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>PaymentErrGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormImageControl">
										<Name>pmtErrDocs</Name>
										<AlignControl>No</AlignControl>
										<ElementPosition>195225786</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Height>15</Height>
										<HeightMode>Auto</HeightMode>
										<Type>Image</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<Width>15</Width>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>showDocHandIcon</DataMethod>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
										<Label>@SYS54210</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_LB_JournalARErrors_Selected</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>219629009</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>Selected</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
										<Label>@SYS24586</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalARErrors_AssignedTo</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>313174697</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AssignedTo</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalARErrors_CustomerCompany</Name>
										<ElementPosition>406720386</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustomerCompany</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalARErrors_CustAccount</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>488064465</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustAccount</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
										<Label>@SYS24500</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_LB_JournalARErrors_CustAccountErr</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>585677358</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustAccountErr</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalARErrors_CustAccountSugg</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>683290251</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustAccountSugg</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DimensionsError</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>780903144</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>dimensionString</DataMethod>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
										<Label>@SYS334198</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>OffsetDimensionsError</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>offsetdimensionString</DataMethod>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
										<Label>@SYS98644</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalARErrors_LBInvoice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741823</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>LBInvoice</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_LB_JournalARErrors_InvoiceIdErr</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1171354716</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>InvoiceIdErr</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SKS_LB_JournalARErrors_PmtAmountCur</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1268967609</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>PmtAmountCur</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
										<FastTabSummary>No</FastTabSummary>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_LB_JournalARErrors_isDED</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>isDED</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
										<Label>@SKS3929</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_LB_JournalARErrors_AresDed</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>AresDed</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>AltInvLookupType</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1301505240</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AltInvLookupType</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>AltInvLookupRef</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1334042871</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>AltInvLookupRef</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalARErrors_Invoice</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1366580502</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Invoice</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>CustTransError_CurrencyCode</Name>
										<ElementPosition>1464193395</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CurrencyCode</DataField>
										<DataSource>CustTransError</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SKS_LB_JournalARErrors_ActualSettlementAmountCur</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1561806288</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActualSettlementAmountCur</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>SKS_LB_JournalARErrors_DiscApplyAmt</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1659419181</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>DiscApplyAmt</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalARErrors_ChkRefnbr</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1757032074</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ChkRefNbr</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalARErrors_CustName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1854644967</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustName</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalARErrors_CustBankRegNum</Name>
										<ElementPosition>1952257860</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustBankRegNum</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_LB_JournalARErrors_CustBankAccountNum</Name>
										<ElementPosition>2049870753</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustBankAccountNum</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
									</AxFormControl>
								</Controls>
								<AlternateRowShading>No</AlternateRowShading>
								<DataSource>SKS_LB_JournalARErrors</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS34991</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ErrorPayment</Name>
						<ElementPosition>715827882</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_JournalARErrors_PmtCompany</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>536870910</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>dataAreaId</DataField>
								<DataSource>SKS_LB_JournalARErrors</DataSource>
								<Label>@SKS1407</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>SKS_LB_JournalARErrors_PaymDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>805306365</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>PaymDate</DataField>
								<DataSource>SKS_LB_JournalARErrors</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_JournalARErrors_OffsetDimensionReference</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>OffsetDimensionReference</DataField>
								<DataSource>SKS_LB_JournalARErrors</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>Overview_SKS_LB_JournalARErrors_PmtAmountCur</Name>
								<ElementPosition>1073741820</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>PmtAmountCur</DataField>
								<DataSource>SKS_LB_JournalARErrors</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>SKS_LB_JournalARErrors_ChangedPmtAmountCur</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1342177275</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ChangedPmtAmountCur</DataField>
								<DataSource>SKS_LB_JournalARErrors</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_JournalARErrors_Description</Name>
								<ElementPosition>1610612730</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Description</DataField>
								<DataSource>SKS_LB_JournalARErrors</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_LB_JournalARErrors_Prepayment</Name>
								<ElementPosition>1879048185</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<BackgroundColor>WindowBackground</BackgroundColor>
								<DataField>Prepayment</DataField>
								<DataSource>SKS_LB_JournalARErrors</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_JournalARErrors_PaymNote</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>PaymNote</DataField>
								<DataSource>SKS_LB_JournalARErrors</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_JournalARErrors_MOP</Name>
								<ElementPosition>2080374780</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>MOP</DataField>
								<DataSource>SKS_LB_JournalARErrors</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS55132</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ErrorInvoice</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>954437176</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PaymentCurrency</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>PmtGrid_LB_Journal_CurrencyCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>613566756</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS66023</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>displayAmountAvailPaymCur</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>920350134</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>displayAmountAvailPaymCur</DataMethod>
										<DataSource>CustTransOpenError</DataSource>
										<Label>@SYS114325</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>InvoiceSKS_LB_JournalARErrors_ActualSettlementAmountCur</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActualSettlementAmountCur</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>PaymentSKS_LB_JournalARErrors_DiscApplyAmt</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataField>DiscApplyAmt</DataField>
										<DataSource>SKS_LB_JournalARErrors</DataSource>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RemainAmountPmtCur</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS78228</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Caption>@SYS66023</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>InvoiceCurrency</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Group</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>InvoiceCustTransError_CurrencyCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>613566756</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS129076</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>CustTransOpenError_AmountCur</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>920350134</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS114325</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>editSettleAmountInvCur</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1227133512</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editSettleAmountInvCur</DataMethod>
										<DataSource>CustTransOpenError</DataSource>
										<Label>@SYS114018</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>editDiscountInvCur</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1533916890</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>editDiscountInvCur</DataMethod>
										<DataSource>CustTransOpenError</DataSource>
										<Label>@SYS11829</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormRealControl">
										<Name>RemainAmountInvCur</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1840700268</ElementPosition>
										<Enabled>No</Enabled>
										<FilterExpression>%1</FilterExpression>
										<Type>Real</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<FormControlExtension
											i:nil="true" />
										<Label>@SYS78228</Label>
										<NoOfDecimals>-1</NoOfDecimals>
									</AxFormControl>
								</Controls>
								<Caption>@SYS66021</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>CustTransErrorCompany</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827882</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS13342</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>InvoicefSKS_LB_JournalARErrors_Invoice</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741823</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>Invoice</DataField>
								<DataSource>SKS_LB_JournalARErrors</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>CustTransOpenError_DueDate</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<Type>Date</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Label>@SYS14588</Label>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS14204</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ErrorWriteOff</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1193046470</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_LB_JournalARErrors_AutoCR</Name>
								<AllowEdit>No</AllowEdit>
								<ElementPosition>715827882</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>WriteOff</DataField>
								<DataSource>SKS_LB_JournalARErrors</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>SKS_LB_JournalARErrors_AutoCRRev</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>CheckBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>AutoCRRev</DataField>
								<DataSource>SKS_LB_JournalARErrors</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_JournalARErrors_RevReasonCode</Name>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>RevReasonCode</DataField>
								<DataSource>SKS_LB_JournalARErrors</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SKS3548</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>tabDimensionError</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<NeededPermission>Manual</NeededPermission>
						<Pattern>DimensionEntryControl</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormContainerControl">
								<Name>DimensionEntryControlError</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Container</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension>
									<Name>DimensionEntryControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmControllerClassName</Name>
											<Type>ExtendedDataType</Type>
											<TypeName>ClassName</TypeName>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmControlLabelText</Name>
											<Type>String</Type>
											<Value>@SYS101181</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumerationName</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmDataSourceName</Name>
											<Type>String</Type>
											<Value>SKS_LB_JournalARErrors</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmValueSetReferenceField</Name>
											<Type>String</Type>
											<Value>DefaultDimension</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEnumValueSetReferenceField</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
								<Controls />
							</AxFormControl>
						</Controls>
						<HideIfEmpty>No</HideIfEmpty>
						<Caption>@SYS334002</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Fees</Name>
						<ElementPosition>1670265058</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>SizeToAvailable</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_JournalARErrors_FeeId</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>FeeId</DataField>
								<DataSource>SKS_LB_JournalARErrors</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormRealControl">
								<Name>SKS_LB_JournalARErrors_FeeValue</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Real</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>FeeValue</DataField>
								<DataSource>SKS_LB_JournalARErrors</DataSource>
								<NoOfDecimals>-1</NoOfDecimals>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS2826</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ErrReview</Name>
						<ElementPosition>1908874352</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>SKS_LB_JournalARErrors_ReviewStatus</Name>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ComboBox</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>ReviewStatus</DataField>
								<DataSource>SKS_LB_JournalARErrors</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SKS_LB_JournalARErrors_AssignedTo1</Name>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<DataField>AssignedTo</DataField>
								<DataSource>SKS_LB_JournalARErrors</DataSource>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SYS60543</Caption>
						<Scrollbars>Auto</Scrollbars>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<DataSource>SKS_LB_JournalARErrors</DataSource>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>