<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SKS_BR_FileFormatForm</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SKS_BR_FileFormatForm extends FormRun
{
    SKS_PP_Setup sks_PP_Setup;
    boolean isCalledFromCCReconciliation;// SKS_FDD_13903
    boolean isCalledFromAPI; //SKS_ElectronicBankAPIChanges


}
]]></Source>
			</Method>
			<Method>
				<Name>activate</Name>
				<Source><![CDATA[
    public void activate(boolean _active)
    {
        super(_active);
        element.userInput();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canClose</Name>
				<Source><![CDATA[
    public boolean canClose()
    {
        SKS_BR_FileFormat locSKS_BR_FileFormat;
        SKS_BR_FileFormatDetail locSKS_BR_FileFormatDetail;
        boolean ret;

        ret = super();
        if(ret)
        {

            While select FormatID,RecId from locSKS_BR_FileFormat
                where locSKS_BR_FileFormat.UpdateEndBalance == true
                        && locSKS_BR_FileFormat.CCR_IsCCRFormat == NoYes::No // SKS_FDD_13903
                        && (locSKS_BR_FileFormat.FileType == SKS_BR_FileType::FixedField
                            || locSKS_BR_FileFormat.FileType == SKS_BR_FileType::CSV)
                    notExists join locSKS_BR_FileFormatDetail
                        where locSKS_BR_FileFormatDetail.FormatID == locSKS_BR_FileFormat.FormatID
                            && locSKS_BR_FileFormatDetail.FieldType == SKS_BR_FieldType::Balance
                            && locSKS_BR_FileFormatDetail.CCR_IsCCRFormat == NoYes::No // SKS_FDD_13903
            {
                //Error:  Balance must be mapped if using delimited/fixed and UpdateEnding Balance is selected
                error(strFmt("@SKS3468", locSKS_BR_FileFormat.FormatID));   // Required file format detail
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        SKS_BR_FileFormat locSKS_BR_FileFormat;
        SKS_BR_FileFormatDetail locSKS_BR_FileFormatDetail;

        element.generateFieldsForMulticashFormats();

        While select FormatID,RecId from locSKS_BR_FileFormat
            where locSKS_BR_FileFormat.UpdateEndBalance == false
                    && locSKS_BR_FileFormat.CCR_IsCCRFormat == NoYes::No // SKS_FDD_13903
                    && (locSKS_BR_FileFormat.FileType == SKS_BR_FileType::FixedField
                        || locSKS_BR_FileFormat.FileType == SKS_BR_FileType::CSV)
            join FormatID, FieldType, recid from locSKS_BR_FileFormatDetail
                    where locSKS_BR_FileFormatDetail.FormatID == locSKS_BR_FileFormat.FormatID
                        && locSKS_BR_FileFormatDetail.CCR_IsCCRFormat == NoYes::No // SKS_FDD_13903
                        && locSKS_BR_FileFormatDetail.FieldType == SKS_BR_FieldType::Balance

        {
            warning(strFmt("@SKS3469", locSKS_BR_FileFormat.FormatID));   // Required file format detail
        }
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>EndBalanceTypeCodeEnablePrereqsMet</Name>
				<Source><![CDATA[
    protected boolean EndBalanceTypeCodeEnablePrereqsMet()
    {

        return (SKS_BR_FileFormat.FileType == SKS_BR_FileType::BAI2
                    || SKS_BR_FileFormat.FileType == SKS_BR_FileType::MT940
                    || SKS_BR_FileFormat.FileType == SKS_BR_FileType::NAI
                    || SKS_BR_FileFormat.FileType == SKS_BR_FileType::CAMT_053_001_02)
            &&
                SKS_BR_FileFormat.UpdateEndBalance == NoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>EndBalancePositionEnablePrereqsMet</Name>
				<Source><![CDATA[
    protected boolean EndBalancePositionEnablePrereqsMet()
    {
        if(!isCalledFromCCReconciliation) // SKS_FDD_13903
        {
            return (SKS_BR_FileFormat.FileType == SKS_BR_FileType::FixedField
                || SKS_BR_FileFormat.FileType == SKS_BR_FileType::CSV)
            &&
                SKS_BR_FileFormat.UpdateEndBalance == NoYes::Yes;
        }
        else
        {
            return (SKS_BR_FileFormat.CCR_FileType == SKS_CCR_FileType::FixedField && SKS_BR_FileFormat.UpdateEndBalance == NoYes::Yes); // SKS_FDD_13903
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        boolean iscallerFrom;
        SKS_PP_Sys   sks_PP_Sys;
        SKS_PP_Bank sKS_PP_Bank;
        super();

        sks_PP_Sys = new SKS_PP_Sys();

        if (!SKS_PP_Sys.ValidateSetup(this.name()))
        {
            this.close();
        }

        // SKS_FDD_13903 -->
        if (element.args().record() && element.args().record().TableId == tablenum(SKS_PP_Bank))
        {
            sKS_PP_Bank = element.args().record();

            isCalledFromCCReconciliation =  sKS_PP_Bank.CCR_IsCCReconciliation == NoYes::Yes;
        }
        else
        {
            
            isCalledFromCCReconciliation = element.args().menuItemName() ==  menuitemdisplaystr(SKS_CCR_FileFormat) ? true : false;
            isCalledFromAPI				 = element.args().menuItemName() ==  menuitemdisplaystr(SKS_BR_APIFormat) ? true : false;
        }

        //SKS_ElectronicBankAPIChanges
        if (isCalledFromAPI && SKS_EB_FileStorage::find().StorageOption_BR != SKS_EB_BankIntegOptWithNoLicense::BankFabricEnumValue)
        {
            Box::warning("@SKS:NewLabel16", "@SKS311");
            this.close();
        }
        //SKS_ElectronicBankAPIChanges

        if(isCalledFromCCReconciliation)
        {
            this.design().caption("@SKS:SKGCCRFileFormats");
            SKS_BR_FileFormat_UpdateEndBalance.visible(false);
            SKS_BR_FileFormat_EndBalanceTypeCode.visible(false);
            SKS_BR_FileFormat_FileType.visible(false);
            SKS_BR_FileFormat_EndBalancePosition.visible(false);
            eBankRecOptionsTab.visible(false);
        }
        else
        {
            SKS_BR_FileFormat_CCR_FileType.visible(false);
            CreditCardReconciliationExtensionsTab.visible(false);
        }
        // vvv SKS_ElectronicBankAPIChanges vvv
        if (isCalledFromAPI)
        {
            this.design().caption("@SKS:NewLabel5");
            SKS_BR_FileFormat_FileType.visible(false);
            SKS_BR_FileFormat_FileFieldDelimiter.visible(false);
            SKS_BR_FileFormat_DecimalPlaces.visible(false);
            SKS_BR_FileFormat_OmitHeaderRecs.visible(false);
            SKS_BR_FileFormat_OmitTrailerRecs.visible(false);
            SKS_BR_FileFormat_DebitCreditIdentifier.visible(false);
            SKS_BR_FileFormat_ValidateTranMapping.visible(false);
            SKS_BR_FileFormat_UpdateEndBalance.visible(false);
            SKS_BR_FileFormat_EndBalanceTypeCode.visible(false);
            SKS_BR_FileFormat_EndBalancePosition.visible(false);
            SKS_BR_FileFormat_CustomFormatClass.visible(false);
            SKS_BR_FileFormat_GJPostingDate.visible(false);
            SKS_BR_FileFormat_RemoveLeadingZeros.visible(false);
            eBankRecOptionsTab.visible(false);
            SKS_BR_FileFormat_CCR_FileType.visible(false);
            CreditCardReconciliationExtensionsTab.visible(false);
            BtnFieldLayout.visible(false);
        }
        // ^^^ SKS_ElectronicBankAPIChanges ^^^
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshForm</Name>
				<Source><![CDATA[
    void refreshForm()
    {
        SKS_BR_FileFormat_ds.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFileFieldDelimiter</Name>
				<Source><![CDATA[
    public void setFileFieldDelimiter()
    {
        if(!isCalledFromCCReconciliation && !isCalledFromAPI) // SKS_ElectronicBankAPIChanges
        {
            //If delimited, and the delimter is blank, default in the the comma
            if(SKS_BR_FileFormat.FileType == SKS_BR_FileType::CSV && !SKS_BR_FileFormat.FileFieldDelimiter)
            {
                SKS_BR_FileFormat.FileFieldDelimiter = ',';
            }
            //If it is a Multicash format, set a semicolon delimiter.
            if(SKS_BR_FileFormat.FileType == SKS_BR_FileType::Multicash_COL ||
                SKS_BR_FileFormat.FileType == SKS_BR_FileType::MulticashCOLBOG ||
                SKS_BR_FileFormat.FileType == SKS_BR_FileType::MulticashCOLBAN)
            {
                SKS_BR_FileFormat.FileFieldDelimiter = ';' ;
            }
            //only blank the delimiter field if it is the file type is not delimited.
            else if(SKS_BR_FileFormat.FileType != SKS_BR_FileType::CSV)
            {
                SKS_BR_FileFormat.FileFieldDelimiter = '';
            }
        }
        else
        {
            //CCR:  If teller or delimited, delimiter default is comma
            if((SKS_BR_FileFormat.CCR_FileType == SKS_CCR_FileType::Delimited && !SKS_BR_FileFormat.FileFieldDelimiter) ||
                (SKS_BR_FileFormat.CCR_FileType == SKS_CCR_FileType::Teller && !SKS_BR_FileFormat.FileFieldDelimiter)   ||
                (SKS_BR_FileFormat.CCR_FileType == SKS_CCR_FileType::Adyen && !SKS_BR_FileFormat.FileFieldDelimiter))
            {
                SKS_BR_FileFormat.FileFieldDelimiter = ',';
            }
            else if((SKS_BR_FileFormat.CCR_FileType != SKS_CCR_FileType::Teller) 
                && (SKS_BR_FileFormat.CCR_FileType != SKS_CCR_FileType::Delimited)
                && (SKS_BR_FileFormat.CCR_FileType != SKS_CCR_FileType::Adyen))
            {
                SKS_BR_FileFormat.FileFieldDelimiter = '';
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateFieldsForMulticashFormats</Name>
				<Source><![CDATA[
    public void generateFieldsForMulticashFormats()
    {
        SKS_BR_FileFormatDetail locSKS_BR_FileFormatDetail;
        if(SKS_BR_FileFormat.FileType != SKS_BR_FileType::Multicash_COL && SKS_BR_FileFormat.FileType != SKS_BR_FileType::MulticashCOLBOG && SKS_BR_FileFormat.FileType != SKS_BR_FileType::MulticashCOLBAN)
        {
            return;
        }
       
        if(isCalledFromCCReconciliation)        //SKS_VSTS_14330--->
        {
            select firstonly RecId from locSKS_BR_FileFormatDetail where
                locSKS_BR_FileFormatDetail.FormatID == SKS_BR_FileFormat.FormatID &&
                locSKS_BR_FileFormatDetail.CCR_IsCCRFormat == NoYes::Yes;
        }
        else            //SKS_VSTS_14330<---
        {
            select firstonly RecId from locSKS_BR_FileFormatDetail where
                locSKS_BR_FileFormatDetail.FormatID == SKS_BR_FileFormat.FormatID &&
                locSKS_BR_FileFormatDetail.CCR_IsCCRFormat == NoYes::No;
        }

        if(!locSKS_BR_FileFormatDetail)
        {
            this.insertNextField(SKS_BR_FieldType::DoNotImport);// 1
            this.insertNextField(SKS_BR_FieldType::BankAccountNumber);// 2
            this.insertNextField(SKS_BR_FieldType::DoNotImport);// 3
            this.insertNextField(SKS_BR_FieldType::DoNotImport);// 4
            this.insertNextField(SKS_BR_FieldType::DoNotImport);// 5
            this.insertNextField(SKS_BR_FieldType::DoNotImport);// 6
            this.insertNextField(SKS_BR_FieldType::DoNotImport);// 7
            this.insertNextField(SKS_BR_FieldType::DoNotImport);// 8
            this.insertNextField(SKS_BR_FieldType::DoNotImport);// 9
            this.insertNextField(SKS_BR_FieldType::BankReferenceNumber);//10
            this.insertNextField(SKS_BR_FieldType::Amount);//11
            this.insertNextField(SKS_BR_FieldType::DoNotImport);//12
            this.insertNextField(SKS_BR_FieldType::DoNotImport);//13
            this.insertNextField(SKS_BR_FieldType::DateDD_MM_YY);//14
            this.insertNextField(SKS_BR_FieldType::DoNotImport);//15
            this.insertNextField(SKS_BR_FieldType::DoNotImport);//16
            this.insertNextField(SKS_BR_FieldType::TxnDescription);//17
            this.insertNextField(SKS_BR_FieldType::DoNotImport);//18
            this.insertNextField(SKS_BR_FieldType::BankCustomerReferenceNumber);//19
            this.insertNextField(SKS_BR_FieldType::TxnDescription);//20
            this.insertNextField(SKS_BR_FieldType::TxnType);//21
            this.insertNextField(SKS_BR_FieldType::DoNotImport);//22
            this.insertNextField(SKS_BR_FieldType::FranchiseCode);//23
            this.insertNextField(SKS_BR_FieldType::DoNotImport);//24
            this.insertNextField(SKS_BR_FieldType::DoNotImport);//25
            this.insertNextField(SKS_BR_FieldType::DoNotImport);//26
            this.insertNextField(SKS_BR_FieldType::DoNotImport);//27
            this.insertNextField(SKS_BR_FieldType::UniqueCode);//28
            this.insertNextField(SKS_BR_FieldType::DoNotImport);//29
            this.insertNextField(SKS_BR_FieldType::TerminalCode);//30
            this.insertNextField(SKS_BR_FieldType::VoucherNumber);//31
            this.insertNextField(SKS_BR_FieldType::DoNotImport);//32
            this.insertNextField(SKS_BR_FieldType::CardNumber);//33
            this.insertNextField(SKS_BR_FieldType::AuthorizationCode);//34
            this.insertNextField(SKS_BR_FieldType::DoNotImport);//35
            this.insertNextField(SKS_BR_FieldType::DoNotImport);//36
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>insertNextField</Name>
				<Source><![CDATA[
    private void insertNextField(SKS_BR_FieldType _SKS_BR_FieldType)
    {
        SKS_BR_FileFormatDetail locSKS_BR_FileFormatDetail;
        int locNextField;

        select firstonly FieldNbr from locSKS_BR_FileFormatDetail order by FieldNbr desc where locSKS_BR_FileFormatDetail.FormatID == SKS_BR_FileFormat.FormatID;
        if(locSKS_BR_FileFormatDetail)
            locNextField = locSKS_BR_FileFormatDetail.FieldNbr + 1;
        else
            locNextField = 1;
        locSKS_BR_FileFormatDetail = null;
        locSKS_BR_FileFormatDetail.FormatID = SKS_BR_FileFormat.FormatID;
        locSKS_BR_FileFormatDetail.FieldType = _SKS_BR_FieldType;
        locSKS_BR_FileFormatDetail.FieldNbr = locNextField;
        ttsbegin;
        locSKS_BR_FileFormatDetail.insert();
        ttscommit;
      }

]]></Source>
			</Method>
			<Method>
				<Name>userInput</Name>
				<Source><![CDATA[
    protected void userInput()
    {
        SKS_BR_ReadParseBase locSKS_BR_ReadParseBase;
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,FileFieldDelimiter)).enabled(false);
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CustomFormatClass)).enabled(False);
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CAMT053TranTypePreference)).allowEdit(false);
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,BR_CAMT053MulitCurrencyAccounts)).allowEdit(false);
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CAMT053OverrideDetailLevel)).allowEdit(false);
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CAMT053AddSpaceUstrd)).allowEdit(false); // SKS_21673
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,PrioritizeInstdAmt)).allowEdit(false);  
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CAMT53StmtNum)).allowEdit(false);
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,DebitCreditIdentifier)).allowEdit(false);
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,DebitCreditTransTypeIdentifier)).allowEdit(false);
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,MT940_PreferredTransTypes)).allowEdit(false);
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,BR_BAI2Options_AddSpaceOnCommentWrap)).allowEdit((SKS_BR_FileFormat.FileType == SKS_BR_FileType::BAI2 && !isCalledFromCCReconciliation));
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,BR_BAI2Options_IfNoteLineDelimitedBySlshRmve)).allowEdit((SKS_BR_FileFormat.FileType == SKS_BR_FileType::BAI2 && !isCalledFromCCReconciliation));
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,EndBalanceTypeCode)).allowEdit(this.EndBalanceTypeCodeEnablePrereqsMet());
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,EndBalancePosition)).allowEdit(this.EndBalancePositionEnablePrereqsMet());
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CCFeeReverseSignOnFeeAmt)).allowEdit(SKS_BR_FileFormat.CCFFeeGenerateFeeStatementLine);
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CCFeeStmtLineFileTranType)).allowEdit(SKS_BR_FileFormat.CCFFeeGenerateFeeStatementLine);
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CCFeeStmtLineDesc)).allowEdit(SKS_BR_FileFormat.CCFFeeGenerateFeeStatementLine);
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CCDepStmtLineFileTranType)).allowEdit(SKS_BR_FileFormat.CCDepGenerateDepositStatementLine);
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CCDepStmtLineDesc)).allowEdit(SKS_BR_FileFormat.CCDepGenerateDepositStatementLine);
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CCR_Adyen_DateFormatInFiles)).allowEdit(isCalledFromCCReconciliation && SKS_BR_FileFormat.CCR_FileType == SKS_CCR_FileType::Adyen);

        
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CCMarkupStmtLineFileTranType)).allowEdit(SKS_BR_FileFormat.CCMarkupGenerateStatementLine);
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CCMarkupStmtLineDesc)).allowEdit(SKS_BR_FileFormat.CCMarkupGenerateStatementLine);
        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CCMarkupReverseSignOnAmt)).allowEdit(SKS_BR_FileFormat.CCMarkupGenerateStatementLine);

        CreditCardReconciliationExtensionsTab.enabled((!isCalledFromCCReconciliation && (SKS_BR_FileFormat.FileType == SKS_BR_FileType::CSV || SKS_BR_FileFormat.FileType == SKS_BR_FileType::FixedField))
            || (isCalledFromCCReconciliation && (SKS_BR_FileFormat.CCR_FileType == SKS_CCR_FileType::Delimited || SKS_BR_FileFormat.CCR_FileType == SKS_CCR_FileType::FixedField || 
            SKS_BR_FileFormat.CCR_FileType == SKS_CCR_FileType::HeartlandFDF ||
            SKS_BR_FileFormat.CCR_FileType == SKS_CCR_FileType::Adyen        ||
            SKS_BR_FileFormat.CCR_FileType == SKS_CCR_FileType::PayPal)));

        if(!isCalledFromCCReconciliation //SKS_FDD_13903
            && !isCalledFromAPI)    // SKS_ElectronicBankAPIChanges
        {
            switch (SKS_BR_FileFormat.FileType)
            {
                //Thie following 2 cases are adjacent by design.  BAI2 & NAI have the same options
                case SKS_BR_FileType::BAI2:
                case SKS_BR_FileType::NAI:
                    SKS_BR_FileFormat_DecimalPlaces.enabled(false);
                    BtnFieldLayout.enabled(false);
                    SKS_BR_FileFormat_UpdateEndBalance.enabled(true);
                    if(SKS_BR_FileFormat.FileType == SKS_BR_FileType::BAI2)
                    {
                        SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,DebitCreditIdentifier)).allowEdit(true);
                    }

                    btnTransactionMapping.enabled(true);
                    break;
                case SKS_BR_FileType::CAMT_053_001_02:
                    SKS_BR_FileFormat_DecimalPlaces.enabled(false);
                    BtnFieldLayout.enabled(false);
                    SKS_BR_FileFormat_UpdateEndBalance.enabled(true);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CAMT053TranTypePreference)).allowEdit(true);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,BR_CAMT053MulitCurrencyAccounts)).allowEdit(true);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CAMT053OverrideDetailLevel)).allowEdit(true);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CAMT053AddSpaceUstrd)).allowEdit(true); // SKS_21673
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,PrioritizeInstdAmt)).allowEdit(true);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CAMT53StmtNum)).allowEdit(true);
                    btnTransactionMapping.enabled(true);
                    break;
                case SKS_BR_FileType::CSV:
                    SKS_BR_FileFormat_DecimalPlaces.enabled(false);
                    BtnFieldLayout.enabled(true);
                    SKS_BR_FileFormat_UpdateEndBalance.enabled(true);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,DebitCreditIdentifier)).allowEdit(true);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,FileFieldDelimiter)).enabled(true);
                    btnTransactionMapping.enabled(true);

                    break;
                case SKS_BR_FileType::FixedField:
                    SKS_BR_FileFormat_DecimalPlaces.enabled(true);
                    BtnFieldLayout.enabled(true);
                    SKS_BR_FileFormat_UpdateEndBalance.enabled(true);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,DebitCreditIdentifier)).allowEdit(true);
                    btnTransactionMapping.enabled(true);

                    break;
                case SKS_BR_FileType::Custom_Type:
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CustomFormatClass)).enabled(True);

                    if(SKS_BR_FileFormat.CustomFormatClass)
                    {
                        if (className2Id(SKS_BR_FileFormat.CustomFormatClass) > 0)
                        {
                            locSKS_BR_ReadParseBase = new SysDictClass(className2Id(SKS_BR_FileFormat.CustomFormatClass)).makeObject();
                        }
                        if(SKS_BR_FileFormat.DebitCreditIdentifier || (locSKS_BR_ReadParseBase && locSKS_BR_ReadParseBase.FormatSupportTransTypeMapping()))
                        {
                            btnTransactionMapping.enabled(true);
                        }
                        else
                        {
                            btnTransactionMapping.enabled(false);
                        }
                        if (locSKS_BR_ReadParseBase)
                        {
                            SKS_BR_FileFormat_DecimalPlaces.enabled(locSKS_BR_ReadParseBase.FormatSupportsDecimalPlaces());
                            SKS_BR_FileFormat_UpdateEndBalance.enabled(locSKS_BR_ReadParseBase.FormatSupportsUpdatingEndingBalance());
                            SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,DebitCreditIdentifier)).allowEdit(locSKS_BR_ReadParseBase.FormatSupportTransTypeCreditDebitFlag());
                            BtnFieldLayout.enabled(locSKS_BR_ReadParseBase.FormatIsCSV() || locSKS_BR_ReadParseBase.FormatISFixed());
                        }
                        else
                        {
                            SKS_BR_FileFormat_DecimalPlaces.enabled(false);
                            SKS_BR_FileFormat_UpdateEndBalance.enabled(false);
                            BtnFieldLayout.enabled(false);
                        }
                    }
                    else
                    {
                        BtnFieldLayout.enabled(true);
                        SKS_BR_FileFormat_DecimalPlaces.enabled(false);
                        SKS_BR_FileFormat_UpdateEndBalance.enabled(false);
                        btnTransactionMapping.enabled(false);
                    }

                    break;
                case SKS_BR_FileType::MT940:
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,DebitCreditTransTypeIdentifier)).allowEdit(true);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,MT940_PreferredTransTypes)).allowEdit(true);
                    break;
                case SKS_BR_FileType::NORMA_43:
                    SKS_BR_FileFormat_DecimalPlaces.enabled(false);
                    BtnFieldLayout.enabled(false);
                    SKS_BR_FileFormat_UpdateEndBalance.enabled(true);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,DebitCreditIdentifier)).allowEdit(false);
                    btnTransactionMapping.enabled(true);
                    break;
                case SKS_BR_FileType::CNAB240:
                    SKS_BR_FileFormat_DecimalPlaces.enabled(false);
                    BtnFieldLayout.enabled(false);
                    SKS_BR_FileFormat_UpdateEndBalance.enabled(true);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,DebitCreditIdentifier)).allowEdit(false);
                    btnTransactionMapping.enabled(true);
                    break;
                    
            }
        }
        else            //SKS_FDD_13903     Begin
        {
            switch(SKS_BR_FileFormat.CCR_FileType)
            {
                case SKS_CCR_FileType::Delimited:
                    SKS_BR_FileFormat_DecimalPlaces.enabled(false);
                    BtnFieldLayout.enabled(true);
                    SKS_BR_FileFormat_UpdateEndBalance.enabled(true);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,DebitCreditIdentifier)).allowEdit(true);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,FileFieldDelimiter)).enabled(true);
                    btnTransactionMapping.enabled(true);
                    SKS_BR_FileFormat_CCHeartLandValidateAccnt.allowEdit(false);
                    GenerateMarkupStatementLineGroup.allowEdit(true);
                    break;
                case SKS_CCR_FileType::FixedField:
                    SKS_BR_FileFormat_DecimalPlaces.enabled(true);
                    BtnFieldLayout.enabled(true);
                    SKS_BR_FileFormat_UpdateEndBalance.enabled(true);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,DebitCreditIdentifier)).allowEdit(true);
                    btnTransactionMapping.enabled(true);
                    SKS_BR_FileFormat_CCHeartLandValidateAccnt.allowEdit(false);
                    GenerateMarkupStatementLineGroup.allowEdit(true);
                    break;
                case SKS_CCR_FileType::Teller:
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,DebitCreditIdentifier)).allowEdit(true);
                    BtnFieldLayout.enabled(false);
                    btnTransactionMapping.enabled(true);
                    SKS_BR_FileFormat_CCHeartLandValidateAccnt.allowEdit(false);
                    GenerateMarkupStatementLineGroup.allowEdit(false);
                    break;
                case SKS_CCR_FileType::HeartlandFDF:
                    BtnFieldLayout.enabled(false);
                    btnTransactionMapping.enabled(true);    //DevOps_15980
                    SKS_BR_FileFormat_CCHeartLandValidateAccnt.allowEdit(true);
                    GenerateMarkupStatementLineGroup.allowEdit(false);
                    break;
                case SKS_CCR_FileType::Adyen:
                    BtnFieldLayout.enabled(false);
                    btnTransactionMapping.enabled(true);
                    SKS_BR_FileFormat_CCHeartLandValidateAccnt.allowEdit(false);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,DecimalPlaces)).allowEdit(false);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,OmitHeaderRecs)).allowEdit(false);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,OmitTrailerRecs)).allowEdit(false);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,DebitCreditIdentifier)).allowEdit(true);
                    GenerateMarkupStatementLineGroup.allowEdit(true);
                    break;
                case SKS_CCR_FileType::PayPal:
                    BtnFieldLayout.enabled(false);
                    btnTransactionMapping.enabled(true);
                    SKS_BR_FileFormat_CCHeartLandValidateAccnt.allowEdit(false);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,DecimalPlaces)).allowEdit(false);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,OmitHeaderRecs)).allowEdit(false);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,OmitTrailerRecs)).allowEdit(false);
                    SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,DebitCreditIdentifier)).allowEdit(false);
                    GenerateMarkupStatementLineGroup.allowEdit(false);
                    break;
            }
        }       //SKS_FDD_13903     End
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>SKS_BR_FileFormat</Name>
				<Methods>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            //Need to skip delete actions for blank format ids
            //because they will match to bank accounts that don't
            //have bank rec setup which otherwise prevents deletion.
            if(SKS_BR_FileFormat.FormatID == '')
            {
                ttsbegin;
                SKS_BR_FileFormat.skipDeleteActions();
                SKS_BR_FileFormat.delete();
                ttscommit;
            }

            super();
            element.userInput();

        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            super(_append);
            element.userInput();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            boolean ret = true;
            SKS_BR_FileFormatDetail locSKS_BR_FileFormatDetail;
            ;
           
            if(SKS_BR_FileFormat.FormatID == '')
            {
                error("@SKS2966");
                return false;
            }
            //Validate that the delimiter is supplied for delimted file format
            if (SKS_BR_FileFormat.CCR_IsCCRFormat == NoYes::No && SKS_BR_FileFormat.FileType == SKS_BR_FileType::CSV &&
                strlen(SKS_BR_FileFormat_FileFieldDelimiter.valueStr()) == 0
                && ret)
            {
                Box::warning("@SKS253","@SKS290");   // Required field

                SKS_BR_FileFormat_FileFieldDelimiter.setFocus();
                return false;
            }
            //validate that the Ending Balance code (or ending bal positiod for Delimited)
            //  is supplied records that have selected to update ending balance
            select RecId from locSKS_BR_FileFormatDetail //either way the subsequent IF goes, you're going to need this.
                        where locSKS_BR_FileFormatDetail.FormatID == SKS_BR_FileFormat.FormatID
                        && locSKS_BR_FileFormatDetail.FieldType == SKS_BR_FieldType::Balance;
            if (SKS_BR_FileFormat.UpdateEndBalance == NoYes::Yes)
            {
                if(SKS_BR_FileFormat.FileType == SKS_BR_FileType::BAI2
                            || SKS_BR_FileFormat.FileType == SKS_BR_FileType::MT940
                            || SKS_BR_FileFormat.FileType == SKS_BR_FileType::NAI
                            || SKS_BR_FileFormat.FileType == SKS_BR_FileType::CAMT_053_001_02)
                {
                    if(strlen(SKS_BR_FileFormat_EndBalanceTypeCode.valueStr()) == 0)
                    {
                        Box::warning("@SKS253","@SKS290");   // Required field
                        SKS_BR_FileFormat_EndBalanceTypeCode.setFocus();
                        return false;
                    }
                }
            }

            if(ret)
            {
                //verify the Tran Type is not all whitespace whitespace
                if(SKS_BR_FileFormat.CCFFeeGenerateFeeStatementLine && strLRTrim(SKS_BR_FileFormat.CCFeeStmtLineFileTranType) == '')
                {
                    ret = checkFailed(strFmt("@SKS1580", SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CCFeeStmtLineFileTranType)).labelText()));
                }
                //Verify the Tran Type does not begin, nor end, with whitespace
                else if(SKS_BR_FileFormat.CCFFeeGenerateFeeStatementLine && strLen(strLRTrim(SKS_BR_FileFormat.CCFeeStmtLineFileTranType)) != strLen(SKS_BR_FileFormat.CCFeeStmtLineFileTranType))
                {
                    ret = checkFailed(strFmt("@SKS:SKGCannotBeginEndWhitespace",SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CCFeeStmtLineFileTranType)).labelText()));
                }

                //verify the Tran Type is not all whitespace whitespace
                if(SKS_BR_FileFormat.CCDepGenerateDepositStatementLine && strLRTrim(SKS_BR_FileFormat.CCDepStmtLineFileTranType) == '')
                {
                    ret = checkFailed(strFmt("@SKS1580", SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CCDepStmtLineFileTranType)).labelText()));
                }
                //Verify the Tran Type does not begin, nor end, with whitespace
                else if(SKS_BR_FileFormat.CCDepGenerateDepositStatementLine && strLen(strLRTrim(SKS_BR_FileFormat.CCDepStmtLineFileTranType)) != strLen(SKS_BR_FileFormat.CCDepStmtLineFileTranType))
                {
                    ret = checkFailed(strFmt("@SKS:SKGCannotBeginEndWhitespace",SKS_BR_FileFormat_ds.object(fieldNum(SKS_BR_FileFormat,CCDepStmtLineFileTranType)).labelText()));
                }
            }

            if(SKS_BR_FileFormat.UpdateEndBalance == NoYes::Yes)
                if(ret)
                    ret = super();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();
            element.userInput();
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        public void initValue()
        {
            super();
            SKS_BR_FileFormat.RemoveLeadingZeros = NoYes::Yes;
            SKS_BR_FileFormat.CCR_IsCCRFormat = isCalledFromCCReconciliation; // SKS_FDD_13903

            //SKS_ElectronicBankAPIChanges
	        if (isCalledFromAPI)
            {
                SKS_BR_FileFormat.APIFormatType = SKS_EB_APIFormatType::API;
	        }
            //SKS_ElectronicBankAPIChanges
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// SKS_FDD_13903 - Filter the form based on caller menu item
        /// </summary>
        public void executeQuery()
        {
            QueryBuildRange qbrFormatTypeRange = this.query().dataSourceTable(tableNum(SKS_BR_FileFormat)).addRange(fieldNum(SKS_BR_FileFormat, APIFormatType)); //SKS_ElectronicBankAPIChanges
            QueryBuildRange queryBuildRange = this.query().dataSourceTable(tableNum(SKS_BR_FileFormat)).addRange(fieldNum(SKS_BR_FileFormat, CCR_IsCCRFormat));
            str             rangeVal = isCalledFromCCReconciliation == true ? enum2Str(NoYes::Yes) : enum2Str(NoYes::No);
            
            queryBuildRange.value(rangeVal);
            queryBuildRange.status(RangeStatus::Locked);

            //SKS_ElectronicBankAPIChanges
            qbrFormatTypeRange.status(RangeStatus::Locked);

			if (isCalledFromAPI)
            {
                qbrFormatTypeRange.value(queryValue(SKS_EFT_APIFormatType::API));
			}
			else
            {
                qbrFormatTypeRange.value(queryValue(SKS_EFT_APIFormatType::File));
			}
            //SKS_ElectronicBankAPIChanges

            super();
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CCDepGenerateDepositStatementLine</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                element.userInput();
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CCFFeeGenerateFeeStatementLine</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                element.userInput();
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CCMarkupGenerateStatementLine</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                element.userInput();
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>DebitCreditIdentifier</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                element.userInput();
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>FileType</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {

                element.userInput();
                element.setFileFieldDelimiter();
                super();

            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>FormatID</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                element.setFileFieldDelimiter();
                super();

            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OmitHeaderRecs</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
                int thisval;
                System.Text.StringBuilder sb = new System.Text.StringBuilder();

                ;

                thisval = str2int(SKS_BR_FileFormat_OmitHeaderRecs.valueStr());

                if(thisval < 0 )
                {
                    sb.Append("@SKS239");
                    sb.Replace('%1','0');
                    Box::stop(sb.ToString(),"@SYS36230"); //must be greater than 0

                    SKS_BR_FileFormat_OmitHeaderRecs.setFocus();

                    return false;
                }
                else if(thisval > 9999 )
                {
                    sb.Append("@SKS240");
                    sb.Replace('%1','9999');
                    Box::stop(sb.ToString(),"@SYS36230"); //musst be less than 6

                    SKS_BR_FileFormat_OmitHeaderRecs.setFocus();

                    return false;
                }

                ret = super();


                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>OmitTrailerRecs</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
                int thisval;
                System.Text.StringBuilder sb = new System.Text.StringBuilder();

                ;

                thisval = str2int(SKS_BR_FileFormat_OmitTrailerRecs.valueStr());

                if(thisval < 0 )
                {
                    sb.Append("@SKS239");
                    sb.Replace('%1','0');
                    Box::stop(sb.ToString(),"@SYS36230"); //must be greater than 0

                    SKS_BR_FileFormat_OmitTrailerRecs.setFocus();

                    return false;
                }
                else if(thisval > 9999 )
                {
                    sb.Append("@SKS240");
                    sb.Replace('%1','9999');
                    Box::stop(sb.ToString(),"@SYS36230"); //musst be less than 6

                    SKS_BR_FileFormat_OmitTrailerRecs.setFocus();

                    return false;
                }

                ret = super();


                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>UpdateEndBalance</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                element.userInput();
                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>BtnFieldLayout</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {

            element.generateFieldsForMulticashFormats();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>btnTransactionMapping</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {

            SKS_BR_FileFormatDetail SKS_BR_FileFormatDetail;
            ;

            if(!isCalledFromCCReconciliation &&// SKS_FDD_13903
                !isCalledFromAPI) //SKS_ElectronicBankAPIChanges
            {
                if (SKS_BR_FileFormat.FileType == SKS_BR_FileType::CSV ||
                    SKS_BR_FileFormat.FileType == SKS_BR_FileType::FixedField)
                {
                    // See if there is a 'Transaction type' mapping for this format id
                    select firstOnly RecId from SKS_BR_FileFormatDetail
                        where SKS_BR_FileFormatDetail.FormatID == SKS_BR_FileFormat.FormatID &&
                            SKS_BR_FileFormatDetail.FieldType == SKS_BR_FieldType::TxnType;
                    if (SKS_BR_FileFormatDetail.RecId == 0)
                    {
                        Box::info(strFmt("@SKS539", SKS_BR_FileFormat.FormatID, SKS_BR_FileFormat.FileType, SKS_BR_FieldType::TxnType), "@SKS290");
                        return;
                    }
                }
            }
            // SKS_FDD_13903 -->
            //Teller does not go into this as it always can use the trans type mapping <<<13367
            else if ((SKS_BR_FileFormat.CCR_FileType == SKS_CCR_FileType::Delimited ||
                        SKS_BR_FileFormat.CCR_FileType == SKS_CCR_FileType::FixedField) &&
					!isCalledFromAPI) //SKS_ElectronicBankAPIChanges
            {
                if(SKS_BR_FileFormat.CCR_FileType == SKS_CCR_FileType::Delimited ||
                        SKS_BR_FileFormat.CCR_FileType == SKS_CCR_FileType::FixedField)
                {
                    // See if there is a 'Transaction type' mapping for this format id
                    select firstOnly RecId from SKS_BR_FileFormatDetail
                        where SKS_BR_FileFormatDetail.FormatID == SKS_BR_FileFormat.FormatID &&
                        SKS_BR_FileFormatDetail.CCR_FieldType == SKS_CCR_FieldType::TxnType;
               
                    if (SKS_BR_FileFormatDetail.RecId == 0)
                    {
                        Box::info(strFmt("@SKS539", SKS_BR_FileFormat.FormatID, SKS_BR_FileFormat.CCR_FileType, SKS_BR_FieldType::TxnType), "@SKS290");
                        return;
                    }
                }
            }
            // SKS_FDD_13903 <--
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_BR_FileFormat_CCR_FileType</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            
            if(SKS_BR_FileFormat.CCR_FileType == SKS_CCR_FileType::HeartlandFDF)
            {
                SKS_BR_FileFormat.CCFFeeGenerateFeeStatementLine = NoYes::No;
                SKS_BR_FileFormat.CCFeeReverseSignOnFeeAmt = NoYes::No;
                SKS_BR_FileFormat.CCFeeStmtLineFileTranType = 'Fee';
                SKS_BR_FileFormat.CCFeeStmtLineDesc = 'Fee amount';
                SKS_BR_FileFormat.CCDepGenerateDepositStatementLine = NoYes::Yes;
                SKS_BR_FileFormat.CCDepStmtLineFileTranType = 'Deposit';
                SKS_BR_FileFormat.CCDepStmtLineDesc = 'Deposit transfer amount';
            }
            else if(SKS_BR_FileFormat.CCR_FileType == SKS_CCR_FileType::Adyen)
            {
                SKS_BR_FileFormat.CCFFeeGenerateFeeStatementLine = NoYes::Yes;
                SKS_BR_FileFormat.CCFeeStmtLineFileTranType = 'Fee';
                SKS_BR_FileFormat.CCFeeStmtLineDesc = 'Fee amount';
                SKS_BR_FileFormat.CCFeeReverseSignOnFeeAmt = NoYes::Yes;
                SKS_BR_FileFormat.CCDepGenerateDepositStatementLine = NoYes::Yes;
                SKS_BR_FileFormat.CCDepStmtLineFileTranType = 'Deposit';
                SKS_BR_FileFormat.CCDepStmtLineDesc = 'Deposit transfer amount';

                SKS_BR_FileFormat.CCMarkupGenerateStatementLine = NoYes::Yes;
                SKS_BR_FileFormat.CCMarkupReverseSignOnAmt = NoYes::Yes;
                SKS_BR_FileFormat.CCMarkupStmtLineDesc = 'Markup amount';
                SKS_BR_FileFormat.CCMarkupStmtLineFileTranType = 'Markup';
                if(SKS_BR_FileFormat.CCR_Adyen_DateFormatInFiles == SKS_EB_DateFormat::Blank)
                {
                    SKS_BR_FileFormat.CCR_Adyen_DateFormatInFiles = SKS_EB_DateFormat::YMD;
                }
            }
            else if(SKS_BR_FileFormat.CCR_FileType == SKS_CCR_FileType::PayPal)
            {
                SKS_BR_FileFormat.CCFFeeGenerateFeeStatementLine = NoYes::Yes;
                SKS_BR_FileFormat.CCFeeReverseSignOnFeeAmt = NoYes::No;
                SKS_BR_FileFormat.CCFeeStmtLineFileTranType = 'Fee';
                SKS_BR_FileFormat.CCFeeStmtLineDesc = 'Fee amount';
                SKS_BR_FileFormat.CCDepGenerateDepositStatementLine = NoYes::Yes;
                SKS_BR_FileFormat.CCDepStmtLineFileTranType = 'Deposit';
                SKS_BR_FileFormat.CCDepStmtLineDesc = 'Deposit transfer amount';
            }
    
            element.userInput();
            element.setFileFieldDelimiter();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_BR_FileFormat_OmitTrailerRecs</Name>
				<Type>Integer</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
            int thisval;
            System.Text.StringBuilder sb = new System.Text.StringBuilder();

            ;

            thisval = str2int(SKS_BR_FileFormat_OmitTrailerRecs.valueStr());

            if(thisval < 0 )
            {
                sb.Append("@SKS239");
                sb.Replace('%1','0');
                Box::stop(sb.ToString(),"@SKS225"); //must be greater than 0

                SKS_BR_FileFormat_OmitTrailerRecs.setFocus();

                return false;
            }
            else if(thisval > 9999 )
            {
                sb.Append("@SKS240");
                sb.Replace('%1','9999');
                Box::stop(sb.ToString(),"@SKS225"); //musst be less than 6

                SKS_BR_FileFormat_OmitTrailerRecs.setFocus();

                return false;
            }

            ret = super();


            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_BR_FileFormat_CustomFormatClass</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;

            ret = super();
            element.userInput();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            DictClass locDictClass;
            SKS_BR_CustomFormatBase locSKS_BR_CustomFormatBase;
            List locChildClassIDs = new List(Types::String);
            System.String[] locStringArray;
            int locArrayMax;
            int locArrayIndex = 0;
            Enumerator locEnumerator;
            SKS_BR_CustomFormatTemp customFormatTemp;
            SysTableLookup          sysTableLookup;
            Query                   query = new Query();
            QueryBuildDataSource    queryBuildDataSource;
            RecordInsertList        customFormatTempInsertList =  new RecordInsertList(tableNum(SKS_BR_CustomFormatTemp));      //TAS_CAR
            ;

            locSKS_BR_CustomFormatBase = new SKS_BR_CustomFormatBase();
            locDictClass = new DictClass(classIdGet(locSKS_BR_CustomFormatBase));
            locChildClassIDs = locDictClass.extendedBy(true);
            locEnumerator = locChildClassIDs.getEnumerator();

            while(locEnumerator.moveNext())
            {
                locArrayIndex++;
            }
            locStringArray = new System.String[locArrayIndex]();
            locEnumerator.reset();
            locArrayIndex = 0;
            while(locEnumerator.moveNext())
            {
                locArrayIndex++;
                locStringArray.SetValue(classId2Name(locEnumerator.current()), locArrayIndex - 1);
            }
            System.Array::Sort(locStringArray);

            locArrayMax = locStringArray.get_Count();

            locArrayIndex = 0;
            ttsbegin;
            delete_from customFormatTemp;
            ttscommit;
            while(locArrayIndex < locArrayMax)
            {
                customFormatTemp.className = locStringArray.GetValue(locArrayIndex);//locTempStr;
                customFormatTempInsertList.add(customFormatTemp);    //TAS_CAR
                locArrayIndex++;
            }
            customFormatTempInsertList.insertDatabase();            //TAS_CAR
            sysTableLookup = SysTableLookup::newParameters(customFormatTemp.TableId, this);
            queryBuildDataSource = query.addDataSource(customFormatTemp.TableId);

            sysTableLookup.addLookupfield(fieldNum(SKS_BR_CustomFormatTemp, ClassName));
            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;

            ret = super();

            if (SKS_BR_FileFormat_CustomFormatClass.text() != '' && className2Id(SKS_BR_FileFormat_CustomFormatClass.text()) == 0)
            {
                SKS_BR_FileFormat_CustomFormatClass.text('');
                ret = false;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SKS_BR_FileFormat</Name>
			<Table>SKS_BR_FileFormat</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>APIFormatType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BR_BAI2Options_AddSpaceOnCommentWrap</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BR_BAI2Options_IfNoteLineDelimitedBySlshRmve</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BR_CAMT053MulitCurrencyAccounts</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CAMT053AddSpaceUstrd</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CAMT053OverrideDetailLevel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CAMT053TranTypePreference</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CAMT53StmtNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCDepGenerateDepositStatementLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCDepStmtLineDesc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCDepStmtLineFileTranType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCFeeReverseSignOnFeeAmt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCFeeStmtLineDesc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCFeeStmtLineFileTranType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCFFeeGenerateFeeStatementLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCMarkupGenerateStatementLine</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCMarkupReverseSignOnAmt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCMarkupStmtLineDesc</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCMarkupStmtLineFileTranType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCRHeartLandValidateAccnt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCR_Adyen_DateFormatInFiles</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCR_FileType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CCR_IsCCRFormat</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomFormatClass</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DebitCreditIdentifier</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DebitCreditTransTypeIdentifier</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DecimalPlaces</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Descr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndBalancePosition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EndBalanceTypeCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileFieldDelimiter</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GJPostingDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MT940_PreferredTransTypes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OmitHeaderRecs</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OmitTrailerRecs</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrioritizeInstdAmt</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemoveLeadingZeros</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UpdateEndBalance</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidateTranMapping</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<LinkType>Active</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SKS290</Caption>
		<DataSource xmlns="">SKS_BR_FileFormat</DataSource>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">Task</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>BtnFieldLayout</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SKS617</HelpText>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataSource>SKS_BR_FileFormat</DataSource>
								<MenuItemName>SKS_BR_FileFormatDetail</MenuItemName>
								<Text>@SKS549</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>btnTransactionMapping</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SKS618</HelpText>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataSource>SKS_BR_FileFormat</DataSource>
								<MenuItemName>SKS_BR_FileDetailTranMapping</MenuItemName>
								<Text>@SKS545</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>BtnCopy</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SKS619</HelpText>
								<NeededPermission>Create</NeededPermission>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataSource>SKS_BR_FileFormat</DataSource>
								<MenuItemName>SKS_BR_FileFormatCopy</MenuItemName>
								<Text>@SKS546</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<Pattern>CustomFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>SKS_BR_FileFormat_Descr</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>FormTabControl1</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Overview</Name>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>Grid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>Grid</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_BR_FileFormat_FormatID</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>357913940</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FormatID</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_BR_FileFormat_FileType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>536870910</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FileType</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_BR_FileFormat_CCR_FileType</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CCR_FileType</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_BR_FileFormat_Descr</Name>
										<ElementPosition>715827880</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>Descr</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_BR_FileFormat_FileFieldDelimiter</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>805306365</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>FileFieldDelimiter</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_BR_FileFormat_DecimalPlaces</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>894784850</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>DecimalPlaces</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>SKS_BR_FileFormat_OmitHeaderRecs</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1073741820</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>OmitHeaderRecs</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormIntegerControl">
										<Name>SKS_BR_FileFormat_OmitTrailerRecs</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1252698790</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>Integer</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>OmitTrailerRecs</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_BR_FileFormat_DebitCreditIdentifier</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655760</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>DebitCreditIdentifier</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_BR_FileFormat_ValidateTranMapping</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1610612730</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>ValidateTranMapping</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_BR_FileFormat_UpdateEndBalance</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1789569700</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>CheckBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<BackgroundColor>WindowBackground</BackgroundColor>
										<DataField>UpdateEndBalance</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_BR_FileFormat_EndBalanceTypeCode</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1968526670</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>String</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>EndBalanceTypeCode</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_BR_FileFormat_EndBalancePosition</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>2058005158</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Type>ComboBox</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>EndBalancePosition</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_BR_FileFormat_CustomFormatClass</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CustomFormatClass</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_BR_FileFormat_GJPostingDate</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>GJPostingDate</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_BR_FileFormat_RemoveLeadingZeros</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>RemoveLeadingZeros</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
								</Controls>
								<AlternateRowShading>No</AlternateRowShading>
								<DataSource>SKS_BR_FileFormat</DataSource>
								<MultiSelect>No</MultiSelect>
								<ShowRowLabels>No</ShowRowLabels>
								<Style>Tabular</Style>
							</AxFormControl>
						</Controls>
						<Caption>@SKS178</Caption>
						<DataSource>SKS_BR_FileFormat</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>CreditCardReconciliationExtensionsTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GenerateFeeStatementLineGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_BR_FileFormat_CCFFeeGenerateFeeStatementLine</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CCFFeeGenerateFeeStatementLine</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_BR_FileFormat_CCFeeReverseSignOnFeeAmt</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CCFeeReverseSignOnFeeAmt</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_BR_FileFormat_CCFeeStmtLineFileTranType</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CCFeeStmtLineFileTranType</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_BR_FileFormat_CCFeeStmtLineDesc</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CCFeeStmtLineDesc</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SYS2826</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GenerateMarkupStatementLineGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>GenerateMarkupStatementLineGroup_CCMarkupGenerateStatementLine</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CCMarkupGenerateStatementLine</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>GenerateMarkupStatementLineGroup_CCMarkupReverseSignOnAmt</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CCMarkupReverseSignOnAmt</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GenerateMarkupStatementLineGroup_CCMarkupStmtLineFileTranType</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CCMarkupStmtLineFileTranType</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>GenerateMarkupStatementLineGroup_CCMarkupStmtLineDesc</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CCMarkupStmtLineDesc</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SKS:SKGCCRMarkup</Caption>
								<DataGroup>CreditCardStatemetMarkup</DataGroup>
								<DataSource>SKS_BR_FileFormat</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GenerateDepositStatementLineGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_BR_FileFormat_CCDepGenerateDepositStatementLine</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CCDepGenerateDepositStatementLine</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_BR_FileFormat_CCDepStmtLineFileTranType</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CCDepStmtLineFileTranType</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SKS_BR_FileFormat_CCDepStmtLineDesc</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CCDepStmtLineDesc</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SKS1276</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>HeartlandPDFGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_BR_FileFormat_CCHeartLandValidateAccnt</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CCRHeartLandValidateAccnt</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SKS:SKGCCRHeartLandFDF</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>AdyenOptionsGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_BR_FileFormat_CCR_Adyen_DateFormatInFiles</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CCR_Adyen_DateFormatInFiles</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<Caption>@SKS:SKGCCRAdyen</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SKS:SKGCCRecOptions</Caption>
						<DataSource>SKS_BR_FileFormat</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>eBankRecOptionsTab</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupCAMT053Controls</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_BR_FileFormat_CAMT053TranTypePreference</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CAMT053TranTypePreference</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_BR_FileFormat_BR_CAMT053MulitCurrencyAccounts</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>BR_CAMT053MulitCurrencyAccounts</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_BR_FileFormat_PrioritizeInstdAmt</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>PrioritizeInstdAmt</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_BR_FileFormat_CAMT53StmtNum</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CAMT53StmtNum</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_BR_FileFormat_CAMT053OverrideDetailLevel</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CAMT053OverrideDetailLevel</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_BR_FileFormat_CAMT053AddSpaceUstrd</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CAMT053AddSpaceUstrd</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
								</Controls>
								<Breakable>No</Breakable>
								<Caption>@SKS:SKGCamt53Options</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>GroupMT940Controls</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_BR_FileFormat_DebitCreditTransTypeIdentifier</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>DebitCreditTransTypeIdentifier</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>SKS_BR_FileFormat_MT940_PreferredTransTypes</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>MT940_PreferredTransTypes</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<Caption>@SKS3110</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>BAI2OptionsControlsGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_BR_FileFormat_BR_BAI2Options_AddSpaceOnCommentWrap</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>BR_BAI2Options_AddSpaceOnCommentWrap</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>SKS_BR_FileFormat_BR_BAI2Options_IfNoteLineDelimitedBySlshRmve</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>BR_BAI2Options_IfNoteLineDelimitedBySlshRmve</DataField>
										<DataSource>SKS_BR_FileFormat</DataSource>
									</AxFormControl>
								</Controls>
								<Caption>@SKS266</Caption>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@SKS:SKGCCReBankRecOptions</Caption>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>