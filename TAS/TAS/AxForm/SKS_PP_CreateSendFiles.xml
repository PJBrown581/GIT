<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SKS_PP_CreateSendFiles</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SKS_PP_CreateSendFiles extends FormRun
{

    SKS_PP_FileNbr gPPFileNbr;
    Str gExitKeepDelete;

    str SelectFileNumber;
    boolean PPFileNameCanChange;
    SKS_EB_CommProcess gSKS_EB_CommProcess;
    str lastNextActionDisplay;

}
]]></Source>
			</Method>
			<Method>
				<Name>abandonChanges</Name>
				<Source><![CDATA[
    void abandonChanges()
    {
        SKS_PP_File tmpSKS_PP_File;
        SKS_PP_FileNbr SKS_PP_FileNbr;
    
           ;
    
        SKS_PP_FileNbr = element.editSelectFileNumber( false, '');
    
        ttsbegin;
    
        while  select forupdate tmpSKS_PP_File where tmpSKS_PP_File.FileNbr == SKS_PP_FileNbr
        {
            tmpSKS_PP_File.Selected = false;
            tmpSKS_PP_File.update();
        }
    
    
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearSelected</Name>
				<Source><![CDATA[
    void clearSelected()
    {
        element.editSelectFileNumber( true, '');
        nextactiondisplay.selectText(enum2str(SKS_PP_NextActionDisplay::Select));
        nextactiondisplay.enabled(false);
        BeginProcessing.enabled(false);
        PrintReport.enabled(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        super();
        element.abandonChanges();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editSelectFileNumber</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    edit SKS_PP_FileNbr editSelectFileNumber( boolean set, SKS_PP_FileNbr value )
    {
        if (set)
        {
            SelectFileNumber = value;
        }
    
        return SelectFileNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>EnableControlsFromAction</Name>
				<Source><![CDATA[
    void EnableControlsFromAction()
    {
    
        str test;    
    
        test = nextactiondisplay.getText(nextactiondisplay.selection());
        if ( test != Enum2str(SKS_PP_NextActionDisplay::Select))
        {
            BeginProcessing.enabled(true);
            PrintReport.enabled(true);
        }
        else
        {
            BeginProcessing.enabled(false);
            PrintReport.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableFileButtons</Name>
				<Source><![CDATA[
    private void enableFileButtons()
    {
        boolean fileExists;
        str errfilePathName;
        str logfilePathName;
        SKS_EB_FileHub fileHub = SKS_EB_FileHub::construct(DSSKS_PP_File.SKS_BF_BankIntType);
        boolean enableFileButton(str _FileExtension) // begin sub method
        {
            boolean locRtnval = DSSKS_PP_File.FileName != '';
            if(locRtnval)
                {
                    if(!DSSKS_PP_File.LogErrFilesChecked && !DSSKS_PP_File.ErrFileExist && !DSSKS_PP_File.LogFileExist )
                    {
                        //set error files
                        errfilePathName = DSSKS_PP_File.FilePath + '\\Log\\' + DSSKS_PP_File.FileName + '.err';
                        fileHub.runFileInquire(errfilePathName);
                        locRtnval = fileHub.attrFileExists();
                        DSSKS_PP_File.ErrFileExist = locRtnval? NoYes::Yes : NoYes::No;
                        //set log file
                        errfilePathName = DSSKS_PP_File.FilePath + '\\Log\\' + DSSKS_PP_File.FileName + '.log';
                        fileHub.runFileInquire(errfilePathName);
                        locRtnval = fileHub.attrFileExists();
                        DSSKS_PP_File.LogFileExist = locRtnval? NoYes::Yes : NoYes::No;
                        //indicate that this record has been checked for logs or errors
                        DSSKS_PP_File.LogErrFilesChecked = NoYes::Yes;
                    }
                    //set the return value for whichever file type was requested
                    locRtnval = _FileExtension == 'err' ? DSSKS_PP_File.ErrFileExist : DSSKS_PP_File.LogFileExist;
            }
            return locRtnval;
        } // end sub method enableFileButton
        boolean enableErrorFileButton(){return enableFileButton('err');}
        boolean enableLogFileButton(){return enableFileButton('log');}

        ErrorFile.enabled(enableErrorFileButton());
        logfile.enabled(enableLogFileButton());
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        SKS_PP_Sys   sks_PP_Sys;
        SKS_PP_500PPBas dd500PP;
        int result;
        SKS_PP_Setup sks_PP_Setup;
        ;
    
        super();
    
        lastNextActionDisplay = '';
        sks_PP_Sys = new SKS_PP_Sys();
    
        if (!sks_PP_Sys.ValidateSetup(this.name()))
        {
            this.close();
        }
        else
        {
    
            select * from sks_PP_Setup;
            PPFileNameCanChange = sks_PP_Setup.PPFileNameCanChange == NoYes::Yes;
 
    
            select count(ChequeTotal) from DSSKS_PP_File;
            if ( DSSKS_PP_File.ChequeTotal == 0)
            {
                //  If no PP records, then display Welcome.
                Box::info("@SKS156","@SKS155");
            }
            dd500PP = new SKS_PP_500PPBas();
            result = dd500PP.IsRegistered('PP');
            if (result != 1)
            {
                box::warning("@SKS326");
                this.close();
            }

            BeginProcessing.enabled(false);
            printReport.value(sks_PP_Setup.PPAuditRpt);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>LineStatusUpdates</Name>
				<Source><![CDATA[
    void LineStatusUpdates()
    {
        SKS_PP_Bank locSKS_PP_Bank;
        SKS_PP_Setup    locSKS_PP_Setup;
        BankChequeTable locBankChequeTable;
        ;
    
        if(DSSKS_PP_File.ChequeCount > 0)
        {
            select firstOnly crossCompany  SKS_PP_FileNbr, DataAreaId, recid  from locBankChequeTable
                where locBankChequeTable.SKS_PP_File_RecId == DSSKS_PP_File.RecId;
            changeCompany(locBankChequeTable.company())
            {
                select firstOnly locSKS_PP_Setup;
            }
        }
        else
        {
            select locSKS_PP_Setup;
        }
        SelectViewBatches.enabled(true);
    
        if(DSSKS_PP_File.KeepDelete == SKS_PP_FileStatus::NotProcessed)
        {
            SelectViewBatches.menuItemName('SKS_PP_SelectViewFiles');
        }
        else
        {
            SelectViewBatches.menuItemName('SKS_PP_ViewCompletedFiles');
        }
    
        if(DSSKS_PP_File.KeepDelete == SKS_PP_FileStatus::Completed)
        {
            DSSKS_PP_File_ds.allowDelete(false);
        }
        else
        {
            DSSKS_PP_File_ds.allowDelete(true);
        }
    
        DSSKS_PP_File_FilePath.enabled(false);
        if ( DSSKS_PP_File.FormatId != '')
        {
            if ( PPFileNameCanChange == true && DSSKS_PP_File.KeepDelete == SKS_PP_FileStatus::NotProcessed && DSSKS_PP_File.SKS_BF_BankIntType ==  SKS_BF_BankIntType::FileHubLocal)
            {
                DSSKS_PP_File_FilePath.enabled(true);
                DSSKS_PP_File_FileName.enabled(true);
            }
            else
            {
                DSSKS_PP_File_FilePath.enabled(false);
                DSSKS_PP_File_FileName.enabled(false);
            }
    
            if (DSSKS_PP_File.KeepDelete == SKS_PP_FileStatus::NotProcessed)
            {
                locSKS_PP_Bank = SKS_PP_CreateFile::findBankByFileNbr(DSSKS_PP_File);
                DSSKS_PP_File.FileName = SKS_PP_CreateFile::getFileName(DSSKS_PP_File.FileNbr, locSKS_PP_Bank, locSKS_PP_Setup, DSSKS_PP_File.SKS_BF_BankIntType);
                DSSKS_PP_File.FilePath = DSSKS_PP_File.SKS_BF_BankIntType == SKS_BF_BankIntType::BankFabric ? locSKS_PP_Bank.PPBankFabricLocation : locSKS_PP_Bank.PPPath;
    
            }
        }
        else if ( PPFileNameCanChange == false)
        {
            DSSKS_PP_File.FilePath = '';
            DSSKS_PP_File.FileName = '';
        }
    
        this.enableFileButtons();
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadSKS_PP_Bank</Name>
				<Source><![CDATA[
    public void loadSKS_PP_Bank()
    {
        if(strLen(DSSKS_PP_File.CommID))
        {
            select gSKS_EB_CommProcess where gSKS_EB_CommProcess.CommID == DSSKS_PP_File.CommID;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>openFile</Name>
				<Source><![CDATA[
    public void openFile(str fileName)
    {
        Browser br = new Browser();
        br.navigate(fileName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>openTestWriteFile</Name>
				<Source><![CDATA[
    protected boolean openTestWriteFile(str pathname, str filename)
    {
        SKS_EB_FileHub fileHub = SKS_EB_FileHub::construct();
        str testFile = pathname + '\\' + filename +  '.SKTest';
        
        fileHub.parmThrowErrorIfException(false);
        fileHub.runFileCreate(testfile, 'Test file');

        if (fileHub.errorHasException())
        {
            error(fileHub.errorException());
            return false;
        }
        else
        {
            fileHub.runFileDelete(testfile);
            return true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshParent</Name>
				<Source><![CDATA[
    public void refreshParent()
    {
        DSSKS_PP_File_DS.research();
    }

]]></Source>
			</Method>
			<Method>
				<Name>TestFile</Name>
				<Source><![CDATA[
    public boolean TestFile(str _Path, str _File)
    {
        if(DSSKS_PP_File.SKS_BF_BankIntType == SKS_BF_BankIntType::FileHubLocal)
        {
            if(!SKS_EB_FileHub::directoryExistsForm(_Path))
            {
                return false;
            }
    
            if ( !element.openTestWriteFile(_Path , _File))
            {
                return false;
            }
        }
    
        return true;
    
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>DSSKS_PP_File</Name>
				<Methods>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        public boolean validateDelete()
        {
            boolean ret = true;
            BankChequeTable tmpBankChequeTable;
            Container companies;
            ;
        
            if ( DSSKS_PP_File.KeepDelete == SKS_PP_FileStatus::FileCreated)
            {
                // Warning!  This file was created, but not completed.  If you delete the checks in the file will be available
                // to be reselected into another Positive Pay file.  Are you sure you want to continue and delete this file?
                if ( Box::yesNo( "@SKS238", DialogButton::No, "@SKS155") == DialogButton::No)
                {
                    ret = false;
                }
            }
            else
            {
                ret = super();
            }
        
            if ( ret == true && strlen(DSSKS_PP_File.FileNbr) > 0)
            {
                // Clear the Bank Checks.
                ttsbegin;
                companies = SKS_EB_VirtualCompany::getPosPayCompanies();
                while  select forupdate crossCompany:companies tmpBankChequeTable
                order by tmpBankChequeTable.dataAreaId
                        where tmpBankChequeTable.SKS_PP_File_RecId == DSSKS_PP_File.RecId
                {
                    changeCompany(tmpBankChequeTable.dataAreaId)
                    {
                        tmpBankChequeTable.SKS_PP_Selected = false;
                        tmpBankChequeTable.SKS_PP_FileNbr = '';
                        tmpBankChequeTable.SKS_PP_File_RecId = 0;
                        tmpBankChequeTable.update();
                    }
                }
                ttscommit;
            }
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        public void init()
        {
        
            QueryBuildDataSource    qbs;
        
            super();
        
            qbs = this.query().dataSourceTable(tablenum(SKS_PP_File));
        
            qbs.addSortField(fieldname2id(tablenum(SKS_PP_File), fieldstr(SKS_PP_File,FileNbr)),SortOrder::Descending);
        
        
        
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
        
            super();
             SelectViewBatches.enabled(false);
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            super(_append);
        
            ttsBegin;
            DSSKS_PP_File.FileNbr = NumberSeq::newGetNum(SKS_PP_Setup::numRefPositivePayNextFileNumb()).num();
            DSSKS_PP_File.SKS_BF_BankIntType =   SKS_EB_FileStorage::getBankIntType(SKS_EB_Module::PP);
            ttsCommit;
            SelectViewBatches.enabled(true);
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            ret = super();
        
            element.loadSKS_PP_Bank();
        
            element.LineStatusUpdates();
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>FileName</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
                int result;
            
                ret = super();
            
                // Invalid File characters: \ / : * ? " < > |
            
                result = strFind( DSSKS_PP_File.FileName,  '\/:*?<>|\"\\', 1, strLen(DSSKS_PP_File.FileName));
            
                if ( result != 0)
                {
                    Box::warning("@SKS165","@SKS155"); // MSG_FILENAME_CONTAINS_ILLEGAL_CHAR: 24207
                    return false;
                }
            
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>FilePath</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
            
                ret = super();
            
                if ( !element.TestFile(DSSKS_PP_File.FilePath,'TEST') )
                {
                    return false;
                }
                return true;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Selected</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
            
                ret = super();
            
            
                if ( DSSKS_PP_File.FileNbr != element.editSelectFileNumber( false, '') )
                {
            
                    if ( strlen( element.editSelectFileNumber( false, '')) > 0)
                    {
                        // --------------------------------------------------
                        // Only one File can be selected at a time
                        // --------------------------------------------------
                        Box::warning("@SKS163","@SKS155"); // MSG_ONLY_ONE_FILE_SELECTED_AT_A_TIME:24214
                        return false;
                    }
                    else
                    {
                        // --------------------------------------------------
                        // Can only select if some batches have been attached
                        // --------------------------------------------------
                        // Use BatchCount here as Void batches can have a zero Total Value
                        if ( DSSKS_PP_File.ChequeCount == 0)
                        {
                            Box::warning("@SKS164","@SKS155"); // MSG_CANNOT_SELECT_NO_BATCHES_SELECTED:24208
                            return false;
                        }
                        // -------------------------------------------------------
                        // If not yet processed, then test filename/path
                        // -------------------------------------------------------
                        else if ( DSSKS_PP_File.KeepDelete != SKS_PP_FileStatus::FileCreated  &&
                                  DSSKS_PP_File.KeepDelete != SKS_PP_FileStatus::Completed &&
                                  DSSKS_PP_File.KeepDelete != SKS_PP_FileStatus::Kept)
                        {
            
                            if ( element.TestFile( DSSKS_PP_File.FilePath, DSSKS_PP_File.FileName) == false)
                            {
                                // Message already displayed in TesFile().
                                return false;
                            }
                        }
            
                    }
                }
            
                return true;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
            
                if ( this.getValue() == false)
                {
                    if ( DSSKS_PP_File.FileNbr == element.editSelectFileNumber( false, '') )
                    {
                        element.clearSelected();
                    }
                }
                else
                {
            
                        element.editSelectFileNumber( true,  DSSKS_PP_File.FileNbr);
                        NextActionDisplay.clear();
            
                        switch  ( DSSKS_PP_File.KeepDelete)
                        {
                            case  SKS_PP_FileStatus::FileCreated:
                                // Warning - File has been Created, Next Action set to Complete/Keep...
                                nextactiondisplay.add(Enum2str(SKS_PP_NextActionDisplay::CreateSendFile));
                                nextactiondisplay.add(Enum2str(SKS_PP_NextActionDisplay::CompleteKeep));
                                nextactiondisplay.add(Enum2str(SKS_PP_NextActionDisplay::PrintAudit));
                                nextactiondisplay.add(Enum2str(SKS_PP_NextActionDisplay::RetryComm));

                                nextactiondisplay.selectText(enum2str(SKS_PP_NextActionDisplay::CompleteKeep));                                
                                box::info("@SKS168","@SKS155"); // MSG_FILE_TRANSMITTED: 24201 - Note - this file has already been Created - Next Action will be set to Complete/Keep.  To recreate the file, set Next Action to Create & Send.
                                break;
                            case  SKS_PP_FileStatus::Completed:
                                // Warning - File has been Sent/Processed.....
                                nextactiondisplay.add(Enum2str(SKS_PP_NextActionDisplay::Select));
                                nextactiondisplay.add(Enum2str(SKS_PP_NextActionDisplay::CreateSendFile));
                                nextactiondisplay.add(Enum2str(SKS_PP_NextActionDisplay::PrintAudit));
            
                                nextactiondisplay.selectText(enum2str(SKS_PP_NextActionDisplay::Select));                                
                                box::warning("@SKS169","@SKS155"); // MSG_FILE_TRANSMITTED_KEPT: 24203 - WARNING - this file has already been Completed.  If you want to recreate and send, set Next Action to Create & Send.
                                break;
                            case  SKS_PP_FileStatus::CommFailed:
                                nextactiondisplay.add(Enum2str(SKS_PP_NextActionDisplay::RetryComm));
                                nextactiondisplay.add(Enum2str(SKS_PP_NextActionDisplay::CreateSendFile));
                                nextactiondisplay.add(Enum2str(SKS_PP_NextActionDisplay::CompleteKeep));
                            
                                nextactiondisplay.selectText(enum2str(SKS_PP_NextActionDisplay::RetryComm));
                                // Not Processed or In Process,  Only allow Create & Send for these Keep/Deletes
                                break;
                        default:
                                nextactiondisplay.add(Enum2str(SKS_PP_NextActionDisplay::CreateSendFile));

                                nextactiondisplay.selectText(enum2str(SKS_PP_NextActionDisplay::CreateSendFile));                                
                                // Not Processed or In Process,  Only allow Create & Send for these Keep/Deletes
                                break;
                        }
            
                        nextactiondisplay.enabled(true);
                        element.EnableControlsFromAction();
                }
            
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>SKS_EB_CommProcess</Name>
				<Methods>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        public void write()
        {
            //Form is never trying to write this record but AX will return error on write/validate
            //if this Outer joined record is not present
            return;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            //Form is never trying to write this record but AX will return error on write/validate
            //if this Outer joined record is not present
            return true;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>BeginProcessing</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
        
            SKS_PP_500PPBas dd500PP;
            SKS_PP_NextActionDisplay action;
            SKS_EB_CommProcess locSKS_EB_CommProcess;
            container companies;
        
                dd500PP = new SKS_PP_500PPBas();
                companies = SKS_EB_VirtualCompany::getPosPayCompanies();
                select firstOnly crossCompany:companies * from locSKS_EB_CommProcess where locSKS_EB_CommProcess.CommID == DSSKS_PP_File.CommID;

            str strNextActionDisplay = nextactiondisplay.getText(nextactiondisplay.selection());

            switch(strNextActionDisplay)
                {
                    case Enum2str(SKS_PP_NextActionDisplay::CompleteKeep):
                        action = SKS_PP_NextActionDisplay::CompleteKeep;
                        break;
                    case Enum2str(SKS_PP_NextActionDisplay::CreateSendFile):
                        action = SKS_PP_NextActionDisplay::CreateSendFile;
                        break;
                    case Enum2str(SKS_PP_NextActionDisplay::PrintAudit):
                        action = SKS_PP_NextActionDisplay::PrintAudit;
                        break;
                    case Enum2str(SKS_PP_NextActionDisplay::Send):
                        action = SKS_PP_NextActionDisplay::Send;
                        break;
                    case Enum2str(SKS_PP_NextActionDisplay::RetryComm):
                        action = SKS_PP_NextActionDisplay::RetryComm;
                        break;
                }
        
            if(!SKS_EB_FileHub::directoryExistsForm(DSSKS_PP_File.filepath, DSSKS_PP_File.SKS_BF_BankIntType))
            {
                return;
            }

            gPPFileNbr = element.editSelectFileNumber(false,'');
            dd500PP.AProcess_PP(gPPFileNbr,
                                action,
                                PrintReport.value(),
                                locSKS_EB_CommProcess,
                                SKS_PP_Caller::CreateAndSendForm, false);
            super();
        
            DSSKS_PP_File_ds.reread();
            DSSKS_PP_File_ds.refresh();
        
            DSSKS_PP_File.Selected = false;
            element.clearSelected();
        
            element.LineStatusUpdates();        
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LogFile</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            str sFileName;
            str filePathName;

            sFileName = DSSKS_PP_File.FileName + '.log';
            filepathname = DSSKS_PP_File.filePath + '\\Log\\' + sFileName;

            super();
            SKS_EB_FileHub::fileDisplayForm(filepathname,DSSKS_PP_File.SKS_BF_BankIntType);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ErrorFile</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            str sFileName;
            str filePathName;

            sFileName = DSSKS_PP_File.FileName + '.err';
            filepathname = DSSKS_PP_File.filePath + '\\Log\\' + sFileName;

            super();
            SKS_EB_FileHub::fileDisplayForm(filepathname,DSSKS_PP_File.SKS_BF_BankIntType);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>NextActionDisplay</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        public int selectionChange()
        {
            int ret;
        
            ret = super();
        
            element.EnableControlsFromAction();
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
            str test;
            str msg = '';
        
            ret = super();
        
            test = nextactiondisplay.getText(nextactiondisplay.selection());
        
            if ( strcmp( lastNextActionDisplay, test) )
            {
        
                if ( test != Enum2str(SKS_PP_NextActionDisplay::PrintAudit) &&  test != Enum2str(SKS_PP_NextActionDisplay::Select))
                {
                    if ( test == Enum2str(SKS_PP_NextActionDisplay::CreateSendFile) || test == Enum2str(SKS_PP_NextActionDisplay::CompleteKeep))
                    {
                        // Create/Send or Complete/Keep - check path/filemame
                        if (  !element.TestFile(DSSKS_PP_File.FilePath,'TEST'))
                        {
                            return false;
                        }
                    }
        
                    if ( DSSKS_PP_File.KeepDelete == SKS_PP_FileStatus::FileCreated && test != Enum2str(SKS_PP_NextActionDisplay::CompleteKeep))
                    {
                        msg = "@SKS176"; // 24215; // MSG_ALREADY_TRANSMITTED -This file has already been Created.  Are you sure you want to continue?
                    }
                    else if ( DSSKS_PP_File.KeepDelete == SKS_PP_FileStatus::Completed)
                    {
                         msg = "@SKS177"; // 24216; // MSG_ALREADY_TRANSMITTED_KEPT - This file has already been Completed.  Are you sure you want to continue?
                    }
        
                    if ( strlen(msg) > 0)
                    {
                        if ( Box::yesNo( msg, DialogButton::No, "@SKS155") == DialogButton::No)
                        {
                            return false;
                        }
                    }
        
                }
                lastNextActionDisplay = test;
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>DSSKS_PP_File</Name>
			<Table>SKS_PP_File</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>BankFabricFileNameName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChequeCount</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ChequeTotal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileNbr</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FilePath</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormatId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>KeepDelete</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Module</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Ret_DelFile</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Ret_GoodRecs</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Ret_WrkBankAccountId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Selected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_BF_BankIntType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TransmitDate</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<LinkType>Active</LinkType>
			<Index>FileNbrIdx</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>SKS_EB_CommProcess</Name>
			<Table>SKS_EB_CommProcess</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AutoPost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BatchJobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BRPostImportScriptPath</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>BRPreImportScriptPath</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommTimeout</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CommUserProg</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreateSendCpny</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Description</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Direction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileComplete</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileCompletionTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileCreateType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Module</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RelocBatchJobId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RelocClass</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RelocCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RelocEFTFormatId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RelocFilePath</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RelocLBFormatId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RestrictFormatComp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ServerSideComm</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_DD_AutoPost</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_DD_FileComplete</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_DD_FileCompletionTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>DSSKS_PP_File</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SKS765</Caption>
		<DataSource xmlns="">DSSKS_PP_File</DataSource>
		<HideIfEmpty xmlns="">No</HideIfEmpty>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">SimpleList</Style>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>SelectViewBatches</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>858993458</ElementPosition>
								<Enabled>No</Enabled>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SKS735</HelpText>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<DataSource>DSSKS_PP_File</DataSource>
								<MenuItemName>SKS_PP_SelectViewFiles</MenuItemName>
								<Text>@SKS148</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonSeparatorControl">
								<Name>Separator</Name>
								<ElementPosition>1288490187</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ButtonSeparator</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>BeginProcessing</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1717986916</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SKS734</HelpText>
								<LeftMode>AutoRight</LeftMode>
								<NeededPermission>Update</NeededPermission>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SKS151</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>LogFile</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1825361098</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SKS2483</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SYS88403</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ErrorFile</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1932735281</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SKS2474</HelpText>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SKS2473</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Body</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>PrintReport</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1073741822</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Label>@SKS152</Label>
						<Style>Toggle</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>NextActionDisplay</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<EnumType>SKS_PP_NextActionDisplay</EnumType>
						<Items />
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<Columnspace>10</Columnspace>
				<ColumnspaceMode>Fixed</ColumnspaceMode>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>DSSKS_PP_File_Selected</Name>
						<ElementPosition>390451572</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<NeededPermission>Update</NeededPermission>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<BackgroundColor>WindowBackground</BackgroundColor>
						<DataField>Selected</DataField>
						<DataSource>DSSKS_PP_File</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DSSKS_PP_File_FileNbr</Name>
						<AllowEdit>No</AllowEdit>
						<ElementPosition>585677358</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>FileNbr</DataField>
						<DataSource>DSSKS_PP_File</DataSource>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormDateControl">
						<Name>DSSKS_PP_File_TransmitDate</Name>
						<ElementPosition>780903144</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Date</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>TransmitDate</DataField>
						<DataSource>DSSKS_PP_File</DataSource>
						<Label>@SKS2482</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>DSSKS_PP_File_KeepDelete</Name>
						<ElementPosition>976128930</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>KeepDelete</DataField>
						<DataSource>DSSKS_PP_File</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormIntegerControl">
						<Name>DSSKS_PP_File_JournalCount</Name>
						<ElementPosition>1171354716</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Integer</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ChequeCount</DataField>
						<DataSource>DSSKS_PP_File</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>DSSKS_PP_File_JournalTotal</Name>
						<ElementPosition>1366580502</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ChequeTotal</DataField>
						<DataSource>DSSKS_PP_File</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DSSKS_PP_File_FormatId</Name>
						<ElementPosition>1561806288</ElementPosition>
						<Enabled>No</Enabled>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>FormatId</DataField>
						<DataSource>DSSKS_PP_File</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>SKS_EB_CommProcess_CommID</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1626881550</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>CommID</DataField>
						<DataSource>DSSKS_PP_File</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>SKS_EB_CommProcess_FileCreateType</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1691956812</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ComboBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>FileCreateType</DataField>
						<DataSource>SKS_EB_CommProcess</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>DSSKS_PP_File_SKS_BF_BankIntType</Name>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>SKS_BF_BankIntType</DataField>
						<DataSource>DSSKS_PP_File</DataSource>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DSSKS_PP_File_FilePath</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1757032074</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>200</Width>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>FilePath</DataField>
						<DataSource>DSSKS_PP_File</DataSource>
						<LookupButton>Always</LookupButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DSSKS_PP_File_FileName</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1952257860</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<Width>100</Width>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>FileName</DataField>
						<DataSource>DSSKS_PP_File</DataSource>
					</AxFormControl>
				</Controls>
				<AlternateRowShading>No</AlternateRowShading>
				<DataSource>DSSKS_PP_File</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
				<VisibleCols>9</VisibleCols>
				<VisibleColsMode>Fixed</VisibleColsMode>
				<VisibleRows>10</VisibleRows>
				<VisibleRowsMode>Fixed</VisibleRowsMode>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>