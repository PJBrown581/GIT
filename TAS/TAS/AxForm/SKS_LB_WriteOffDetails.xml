<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SKS_LB_WriteOffDetails</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SKS_LB_WriteOffDetails extends FormRun
{
    LedgerDimensionDefaultAccountController     freeTextInvoiceDefaultAccountController;
    LedgerDimensionDefaultAccountController     generalLedgerDefaultAccountController;
    SKS_LB_WriteoffRules lSKS_LB_WriteoffRules;
}
]]></Source>
			</Method>
			<Method>
				<Name>changeFreeTextLedgerCompany</Name>
				<Source><![CDATA[
    public void changeFreeTextLedgerCompany(SelectableDataArea _company)
    {
        RefRecId newCoaRecId;
       /* if (_company != currentLedgerCompany)
        {
            currentLedgerCompany = _company;
            newCoaRecId = Ledger::findByLegalEntity(CompanyInfo::findDataArea(_company).RecId).ChartOfAccounts;
            currentCOARecId = newCoaRecId;
        }*/
        newCoaRecId = Ledger::findByLegalEntity(CompanyInfo::findDataArea(_company).RecId).ChartOfAccounts;
        freeTextInvoiceDefaultAccountController.parmDataAreaId(_company);
        freeTextInvoiceDefaultAccountController.parmCurrentLedgerCOA(newCoaRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeGLLedgerCompany</Name>
				<Source><![CDATA[
    public void changeGLLedgerCompany(SelectableDataArea _company)
    {
        RefRecId newCoaRecId;
        newCoaRecId = Ledger::findByLegalEntity(CompanyInfo::findDataArea(_company).RecId).ChartOfAccounts;
    
        generalLedgerDefaultAccountController.parmDataAreaId(_company);
        generalLedgerDefaultAccountController.parmCurrentLedgerCOA(newCoaRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enabledisable</Name>
				<Source><![CDATA[
    public void enabledisable()
    {
        if(SKS_LB_WriteoffDetails.AutoRev == NoYes::Yes)
        {
            if(SKS_LB_WriteoffDetails.RevReasonCode != '')
            {
                SKS_LB_WriteoffDetails_ds.object(fieldNum(SKS_LB_WriteoffDetails, RevLedgerDimension)).allowEdit(false);
            }
            else
            {
                SKS_LB_WriteoffDetails_ds.object(fieldNum(SKS_LB_WriteoffDetails, RevLedgerDimension)).allowEdit(true);
            }
            SKS_LB_WriteoffDetails_ds.object(fieldNum(SKS_LB_WriteoffDetails, RevReasonCode)).allowEdit(true);
        }
        else
        {
            SKS_LB_WriteoffDetails_ds.object(fieldNum(SKS_LB_WriteoffDetails, RevLedgerDimension)).allowEdit(false);
            SKS_LB_WriteoffDetails_ds.object(fieldNum(SKS_LB_WriteoffDetails, RevReasonCode)).allowEdit(false);
        }
    
        if(SKS_LB_WriteoffDetails.ReasonCode != '')
        {
            SKS_LB_WriteoffDetails_ds.object(fieldNum(SKS_LB_WriteoffDetails, CRLedgerDimension)).allowEdit(false);
        }
        else
        {
            SKS_LB_WriteoffDetails_ds.object(fieldNum(SKS_LB_WriteoffDetails, CRLedgerDimension)).allowEdit(true);
        }
    
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {   
        super();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>SKS_LB_WriteoffDetails</Name>
				<Methods>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        public void linkActive()
        {
            super();
            lSKS_LB_WriteoffRules = element.args().record();
        
        }

]]></Source>
					</Method>
					<Method>
						<Name>create</Name>
						<Source><![CDATA[
        public void create(boolean _append = false)
        {
            super(_append);
            SKS_LB_WriteoffDetails.CustomerCompany = curext();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        public boolean validateWrite()
        {
            SKS_LB_WriteOffDetails  lsks_lb_writeoffdetails;
            AmountCur               absThresholdAmount;
            boolean                 ret;
        
            ret = super();
        
            if(ret && SKS_lb_writeoffDetails.ReasonCode == '' || (SKS_LB_WriteoffDetails.AutoRev && SKS_LB_WriteoffDetails.RevReasonCode == ''))
            {
                if(lSKS_lb_writeoffRules.ReqReason == NoYes::Yes)
                {
                    error(strFmt("@SKS3525", lSKS_lb_writeoffRules.WriteoffId));
                    ret = false;
                }
            }
        
            if(ret && SKS_LB_WriteoffDetails.CRLedgerDimension == 0)
            {
                error("@SKS3745");
                ret = false;
            }
        
            if(ret && SKS_LB_WriteOffDetails.AutoRev == NoYes::Yes)
            {
                if(SKS_LB_WriteOffDetails.RevLedgerDimension == 0)
                {
                    error("@SKS3519");
                    ret = false;
                }
            }
        
            if(ret)
            {
                select firstOnly lsks_lb_writeoffdetails where lsks_lb_writeoffdetails.ReasonCode == sks_lb_writeoffdetails.ReasonCode
                    && lsks_lb_writeoffdetails.CustomerCompany == SKS_LB_WriteoffDetails.CustomerCompany
                    && lsks_lb_writeoffdetails.SKS_LB_WriteoffRules == sks_lb_writeoffdetails.SKS_LB_WriteoffRules
                    && lsks_lb_writeoffdetails.RecId != SKS_LB_WriteoffDetails.RecId;
        
                if(lsks_lb_writeoffdetails)
                {
                    error("@SKS3573");
                    ret = false;
                }
            }
        
            if(ret && SKS_LB_WriteoffDetails.ThresholdAmount != 0)
            {
                absthresholdamount = SKS_LB_writeOffDetails.ThresholdAmount;
                select firstOnly lsks_lb_writeoffdetails where lsks_lb_writeoffdetails.ThresholdAmount == SKS_LB_WriteoffDetails.ThresholdAmount
                    && lsks_lb_writeoffdetails.CustomerCompany == SKS_LB_Writeoffdetails.CustomerCompany
                    && lsks_lb_writeoffdetails.SKS_LB_WriteoffRules == sks_lb_writeoffdetails.SKS_LB_WriteoffRules
                    && lsks_lb_writeoffdetails.RecId != SKS_LB_WriteoffDetails.RecId;
        
                if(lsks_lb_writeoffdetails)
                {
                    error("@SKS3574");
                    ret = false;
                }
            }
        
            if(ret && lSKS_LB_WriteoffRules.CreditLimit != 0 && SKS_LB_WriteoffDetails.AutoCR &&
                SKS_LB_WriteoffDetails.ThresholdAmount > lSKS_LB_WriteoffRules.CreditLimit)
            {
                error(strFmt("@SKS6233", lSKS_LB_WriteoffRules.CreditLimit));
                ret = false;
            }
        
            if(ret && (lSKS_LB_WriteoffRules.CreditLimit != 0 || lSKS_LB_WriteoffRules.DebitLimit != 0 ) &&
                    SKS_LB_WriteoffDetails.ThresholdAmount > lSKS_LB_WriteoffRules.CreditLimit &&
                    SKS_LB_WriteoffDetails.ThresholdAmount > lSKS_LB_WriteoffRules.DebitLimit)
            {
                error("@SKS6234");
                ret = false;
            }
        
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            ret = super();
        
            if(ret)
            {
                element.enabledisable();
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>AutoCR</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                boolean ret;
            
                ret = super();
            
                if(SKS_LB_WriteoffDetails.ThresholdAmount == 0)
                {
                    ret = false;
                    error("@SKS3561");
                }
            
                return ret;
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>CRLedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                return freeTextInvoiceDefaultAccountController.resolveReference();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ReasonCode</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                SKS_LB_ReasonAccounts  sks_lb_reasonaccounts;
                boolean ret;
            
                ret = super();
            
                changeCompany(SKS_LB_WriteoffDetails.CustomerCompany)
                {
                    if(ret && SKS_LB_WriteoffDetails.ReasonCode != '')
                    {
                        select firstOnly LedgerDimension, offsetLedgerdimension from sks_lb_reasonaccounts where sks_lb_reasonaccounts.ReasonCode == SKS_LB_WriteoffDetails.reasoncode;
            
                        if(sks_lb_reasonaccounts.LedgerDimension == 0)
                        {
                            error(strFmt("@SKS3527", SKS_LB_WriteoffDetails.CustomerCompany));
                            ret = false;
                        }
                    }
                }
            
                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                SKS_LB_ReasonAccounts  sks_lb_reasonaccounts;
            
                super();
            
                if(SKS_LB_WriteoffDetails.ReasonCode == '')
                {
                    SKS_LB_WriteoffDetails_ds.object(fieldNum(SKS_LB_WriteoffDetails, CRLedgerDimension)).allowEdit(true);
                    SKS_LB_WriteoffDetails.CROffsetLedgerDimension = 0;
                    SKS_LB_WriteoffDetails.CRLedgerDimension = 0;
                }
                else
                {
                    changeCompany(SKS_LB_WriteoffDetails.CustomerCompany)
                    {
                        select firstOnly LedgerDimension, offsetLedgerdimension from sks_lb_reasonaccounts where sks_lb_reasonaccounts.ReasonCode == SKS_LB_WriteoffDetails.reasoncode;
                        SKS_LB_WriteoffDetails.CRLedgerDimension = SKS_LB_ReasonAccounts.ledgerdimension;
                        SKS_LB_WriteoffDetails.CROffsetLedgerDimension = SKS_LB_ReasonAccounts.offsetledgerdimension;
                        SKS_LB_WriteoffDetails_ds.object(fieldNum(SKS_LB_WriteoffDetails, CRLedgerDimension)).allowEdit(false);
                    }
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RevLedgerDimension</DataField>
						<Methods>
							<Method>
								<Name>resolveReference</Name>
								<Source><![CDATA[
            public Common resolveReference(FormReferenceControl _formReferenceControl)
            {
                return generalLedgerDefaultAccountController.resolveReference();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>RevReasonCode</DataField>
						<Methods>
							<Method>
								<Name>validate</Name>
								<Source><![CDATA[
            public boolean validate()
            {
                SKS_LB_ReasonAccounts  sks_lb_reasonaccounts;
                boolean ret;
            
                ret = super();
                changeCompany(SKS_LB_WriteoffDetails.CustomerCompany)
                {
                    if(ret && SKS_LB_WriteoffDetails.RevReasonCode != '')
                    {
                        select firstOnly LedgerDimension, offsetLedgerdimension from sks_lb_reasonaccounts where sks_lb_reasonaccounts.ReasonCode == SKS_LB_WriteoffDetails.Revreasoncode;
            
                        if(sks_lb_reasonaccounts.LedgerDimension == 0)
                        {
                            error(strFmt("@SKS3527", SKS_LB_WriteoffDetails.CustomerCompany));
                            ret = false;
                        }
                    }
                }
            
                return ret;
            }

]]></Source>
							</Method>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                SKS_LB_ReasonAccounts  sks_lb_reasonaccounts;
            
                super();
            
                if(SKS_LB_WriteoffDetails.RevReasonCode == '')
                {
                    SKS_LB_WriteoffDetails_ds.object(fieldNum(SKS_LB_WriteoffDetails, RevLedgerDimension)).allowEdit(true);
                    SKS_LB_WriteoffDetails.RevOffsetLedgerDimension = 0;
                    SKS_LB_WriteoffDetails.RevLedgerDimension = 0;
                }
                else
                {
                    changeCompany(SKS_LB_WriteoffDetails.CustomerCompany)
                    {
                        select firstOnly OffsetLedgerDimension, ledgerdimension from sks_lb_reasonaccounts where sks_lb_reasonaccounts.ReasonCode == SKS_LB_WriteoffDetails.RevReasonCode;
                        SKS_LB_WriteoffDetails.RevOffsetLedgerDimension = SKS_LB_ReasonAccounts.OffsetLedgerDimension;
                        SKS_LB_WriteoffDetails.RevLedgerDimension = SKS_LB_ReasonAccounts.LedgerDimension;
                        SKS_LB_WriteoffDetails_ds.object(fieldNum(SKS_LB_WriteoffDetails, RevLedgerDimension)).allowEdit(false);
                    }
                }
            
            
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ThresholdAmount</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            public void modified()
            {
                super();
            
                if(SKS_LB_WriteoffDetails.ThresholdAmount == 0)
                {
                    SKS_LB_WriteoffDetails.AutoCR = NoYes::No;
                }
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>SKS_LB_WriteoffDetails_ReasonCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query query = new Query();
            QueryBuildDataSource queryBuildDataSource;
            QueryBuildRange queryBuildRange;
        
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(ReasonTable), this);
            changeCompany(SKS_LB_WriteoffDetails.CustomerCompany)
            {
                sysTableLookup.addLookupField(fieldNum(ReasonTable, Reason));
        
                queryBuildDataSource = query.addDataSource(tableNum(ReasonTable));
        
                queryBuildRange = queryBuildDataSource.addRange(fieldNum(ReasonTable, Cust));
                queryBuildRange.value('1');
        
                sysTableLookup.parmQuery(query);
        
                sysTableLookup.performFormLookup();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_LB_WriteOffDetails_AutoCRLedgerDimension</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean isValid;
        
            isValid = super();            
        
            return isValid;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_LB_WriteoffDetails_AutoCRAutoRev</Name>
				<Type>CheckBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            if(SKS_LB_WriteoffDetails.AutoRev == NoYes::Yes)
            {
                SKS_LB_WriteoffDetails_ds.object(fieldNum(SKS_LB_WriteoffDetails, RevReasonCode)).allowEdit(true);
                SKS_LB_WriteoffDetails_ds.object(fieldNum(SKS_LB_WriteoffDetails, RevLedgerDimension)).allowEdit(true);
            }
            else
            {
                SKS_LB_WriteoffDetails.RevReasonCode = '';
                SKS_LB_WriteoffDetails_ds.object(fieldNum(SKS_LB_WriteoffDetails, RevReasonCode)).allowEdit(false);
                SKS_LB_WriteoffDetails_ds.object(fieldNum(SKS_LB_WriteoffDetails, RevLedgerDimension)).allowEdit(false);
                SKS_LB_WriteoffDetails.RevOffsetLedgerDimension = 0;
                SKS_LB_WriteoffDetails.RevLedgerDimension = 0;
                SKS_LB_WriteoffDetails_ds.research(true);
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_LB_WriteoffDetails_RevReasonCode</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            Query query = new Query();
            QueryBuildDataSource queryBuildDataSource;
            QueryBuildRange queryBuildRange;
        
            SysTableLookup sysTableLookup = SysTableLookup::newParameters(tableNum(ReasonTable), this);
            changeCompany(SKS_LB_WriteoffDetails.CustomerCompany)
            {
                sysTableLookup.addLookupField(fieldNum(ReasonTable, Reason));
        
                queryBuildDataSource = query.addDataSource(tableNum(ReasonTable));
        
                queryBuildRange = queryBuildDataSource.addRange(fieldNum(ReasonTable, Cust));
                queryBuildRange.value('1');
        
                sysTableLookup.parmQuery(query);
        
                sysTableLookup.performFormLookup();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SKS_LB_WriteOffDetails_RevLedgerDimension</Name>
				<Type>SegmentedEntry</Type>
				<Methods>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean isValid;
        
            isValid = super();     
        
            return isValid;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SKS_LB_WriteoffDetails</Name>
			<Table>SKS_LB_WriteoffDetails</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AutoCR</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AutoRev</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CRLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CROffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CustomerCompany</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReasonCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevOffsetLedgerDimension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RevReasonCode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SKS_LB_WriteoffRules</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ThresholdAmount</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SKS3503</Caption>
		<DataSource xmlns="">SKS_LB_WriteoffDetails</DataSource>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">SimpleList</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<ElementPosition>429496729</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>RecordBasics</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>SKS_LB_GLCROffsetLedgerDimension</Name>
								<ElementPosition>1073741823</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SKS3528</HelpText>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>SKS_LB_GLCROffsetLedgerDimension</MenuItemName>
								<Text>@SKS3504</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonSeparatorControl">
								<Name>Separator</Name>
								<ElementPosition>1227133512</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>ButtonSeparator</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>SKS_LB_GLRevOffsetLedgerDimension</Name>
								<ElementPosition>1687308579</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SKS3529</HelpText>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>SKS_LB_GLRevOffsetLedgerDimension</MenuItemName>
								<Text>@SKS3524</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<ArrangeMethod>Vertical</ArrangeMethod>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<ElementPosition>1288490187</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<TypeName>str</TypeName>
									<Value>GridDetails</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<TypeName>str</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>GridDetails</Name>
				<ElementPosition>1431655764</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>SKS_LB_WriteoffDetails_CustomerCompany</Name>
						<ElementPosition>429496728</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>CustomerCompany</DataField>
						<DataSource>SKS_LB_WriteoffDetails</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>SKS_LB_WriteoffDetails_ReasonCode</Name>
						<ElementPosition>644245092</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ReasonCode</DataField>
						<DataSource>SKS_LB_WriteoffDetails</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormSegmentedEntryControl">
						<Name>SKS_LB_WriteOffDetails_AutoCRLedgerDimension</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>858993456</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>SegmentedEntry</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension>
							<Name>SegmentedEntryControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>parmControllerClassName</Name>
									<Type>String</Type>
									<TypeName>str</TypeName>
									<Value>LedgerDimensionDefaultAccountController</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmIsDefaultAccount</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmValidateBlockedForManualEntry</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmLockMainAccountSegment</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmPostingType</Name>
									<Type>Enum</Type>
									<TypeName>LedgerPostingType</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmIncludeTotalAccounts</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmIncludeFinancialAccounts</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmAccountTypeEnumName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
						<DataSource>SKS_LB_WriteoffDetails</DataSource>
						<ReferenceField>CRLedgerDimension</ReferenceField>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>SKS_LB_WriteoffDetails_ThresholdAmount</Name>
						<ElementPosition>1073741820</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ThresholdAmount</DataField>
						<DataSource>SKS_LB_WriteoffDetails</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>SKS_LB_WriteoffDetails_AutoCR</Name>
						<ElementPosition>1288490184</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<BackgroundColor>WindowBackground</BackgroundColor>
						<DataField>AutoCR</DataField>
						<DataSource>SKS_LB_WriteoffDetails</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>SKS_LB_WriteoffDetails_AutoCRAutoRev</Name>
						<ElementPosition>1503238548</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<BackgroundColor>WindowBackground</BackgroundColor>
						<DataField>AutoRev</DataField>
						<DataSource>SKS_LB_WriteoffDetails</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>SKS_LB_WriteoffDetails_RevReasonCode</Name>
						<ElementPosition>1717986914</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>RevReasonCode</DataField>
						<DataSource>SKS_LB_WriteoffDetails</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormSegmentedEntryControl">
						<Name>SKS_LB_WriteOffDetails_RevLedgerDimension</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1932735280</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>SegmentedEntry</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension>
							<Name>SegmentedEntryControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>parmControllerClassName</Name>
									<Type>String</Type>
									<TypeName>str</TypeName>
									<Value>LedgerDimensionDefaultAccountController</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmIsDefaultAccount</Name>
									<Type>Enum</Type>
									<TypeName>boolean</TypeName>
									<Value>False</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmValidateBlockedForManualEntry</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmLockMainAccountSegment</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmPostingType</Name>
									<Type>Enum</Type>
									<TypeName>LedgerPostingType</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmIncludeTotalAccounts</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmIncludeFinancialAccounts</Name>
									<Type>Enum</Type>
									<TypeName>NoYes</TypeName>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>parmAccountTypeEnumName</Name>
									<Type>String</Type>
									<Value>RevLedgerDimension</Value>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
						<DataSource>SKS_LB_WriteoffDetails</DataSource>
						<ReferenceField>RevLedgerDimension</ReferenceField>
					</AxFormControl>
				</Controls>
				<AlternateRowShading>No</AlternateRowShading>
				<DataSource>SKS_LB_WriteoffDetails</DataSource>
				<MultiSelect>No</MultiSelect>
				<ShowRowLabels>No</ShowRowLabels>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>