<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SKS_LB_RemitAnalyzeTest</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SKS_LB_RemitAnalyzeTest extends FormRun
{
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        Args largs = element.args();

        this.design().caption(largs.parm());

    }

]]></Source>
			</Method>
			<Method>
				<Name>testRule</Name>
				<Source><![CDATA[
    public void testRule(SKS_LB_RemitTxtParse _rule, str _txt)
    {
        if(_rule.SKS_LB_DataSearchType == SKS_LB_DataSearchType::RegularExpression)
        {
            System.Text.RegularExpressions.Match myMatch = System.Text.RegularExpressions.Regex::Match(_txt, _rule.RegularExpression);

            if(myMatch.Length == 0)
            {
                info("@SKS:SKGNothingFound");
            }

            while(myMatch.get_Success())
            {
                if(_rule.RemoveLeadingZeroes)
                {
                    info(_rule.AXPrefix
                            + SKS_PP_StringFormats::strLTrimZeroes(myMatch.get_Value())
                            + _rule.AXSuffix);
                }
                else
                {
                    info(_rule.AXPrefix
                            + myMatch.get_Value()
                            + _rule.AXSuffix);
                }

                myMatch = myMatch.NextMatch();
            }
        }
        else
        {
            str lExpr = '[0-9]{' + int642str(_rule.NumberMin) + ',' + int642str(_rule.Numbermax) + '}';

            System.Text.RegularExpressions.Match myMatch = System.Text.RegularExpressions.Regex::Match(_txt, lExpr);

            if(myMatch.Length == 0)
            {
                info("@SKS:SKGNothingFound");
            }

            while(myMatch.get_Success())
            {
                if(_rule.RestrictNumberRange)
                {
                    if(str2int64(myMatch.get_Value()) >= _rule.MinValue
                            && str2int64(myMatch.get_Value()) <= _rule.maxValue)
                    {
                        if(_rule.RemoveLeadingZeroes)
                        {
                            info(_rule.AXPrefix
                                + SKS_PP_StringFormats::strLTrimZeroes(myMatch.get_Value())
                                + _rule.AXSuffix);
                        }
                        else
                        {
                            info(_rule.AXPrefix
                                    + myMatch.get_Value()
                                    + _rule.AXSuffix);
                        }
                    }
                }
                else
                {
                    if(_rule.RemoveLeadingZeroes)
                    {
                        info(_rule.AXPrefix
                            + SKS_PP_StringFormats::strLTrimZeroes(myMatch.get_Value())
                            + _rule.AXSuffix);
                    }
                    else
                    {
                        info(_rule.AXPrefix
                            + myMatch.get_Value()
                            + _rule.AXSuffix);
                    }
                }

                myMatch = myMatch.NextMatch();
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>AnalyzeButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Clicked event on the ANalyze button Event handler
        /// </summary>
        public void clicked()
        {
            Args lArgs = element.args();
            if(lArgs.record() is SKS_LB_RemitTxtAnalysis)
            {
                SKS_LB_RemitTxtAnalysis remitGroup = lArgs.record();
                SKS_LB_RemitTxtParse parseRule;

                setPrefix(remitGroup.RuleId);

                while select * from parseRule where parseRule.SKS_LB_RemitTxtAnalysis == remitGroup.RuleId
                {
                    setPrefix(parseRule.Description);
                    element.testRule(parseRule, analyzetxt.valueStr());
                }
            }
            else
            {
                SKS_LB_RemitTxtParse parseRule = lArgs.record();

                setPrefix(parseRule.Description);
                element.testRule(parseRule, analyzetxt.valueStr());
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SKS:SKGRemitTextAnalysis</Caption>
		<DialogSize xmlns="">Large</DialogSize>
		<Pattern xmlns="">DialogDoubleTabs</Pattern>
		<PatternVersion xmlns="">1.3</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>HeaderSectionGroup</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<Visible>No</Visible>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<ColumnsMode>Fill</ColumnsMode>
				<FrameType>None</FrameType>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>TabbedContent</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>AnalyzeTabPage</Name>
						<Pattern>FillText</Pattern>
						<PatternVersion>UX7 1.0</PatternVersion>
						<Type>TabPage</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>AnalyzeTxt</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>String</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Alignment>Left</Alignment>
								<DisplayHeight>100</DisplayHeight>
								<DisplayLength>500</DisplayLength>
								<ExtendedDataType>SKS_BR_NoteMemo</ExtendedDataType>
								<MultiLine>Yes</MultiLine>
							</AxFormControl>
						</Controls>
						<Caption>@SKS:SKGRemitTextAnalysis</Caption>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>FormTabControl2</Name>
				<Type>Tab</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>FormTabPageControl2</Name>
						<Pattern>FillText</Pattern>
						<PatternVersion>UX7 1.0</PatternVersion>
						<Type>TabPage</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FormStringControl1</Name>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>String</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Label>@SKS:SKGRemitTextAnalysis</Label>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ControlButtons</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>AnalyzeButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<Text>@SYS117478</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>