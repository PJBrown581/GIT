<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_NG_ACCESSBANK_180</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_NG_ACCESSBANK_180
/// </summary>
class SKS_EFT_FormatMetaData_NG_ACCESSBANK_180 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230220';
        dataContractVersion = '1.0';
        conFormatID = ['NG-ACCESSBANK-180'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,1,1,'','','','',0,'XXXXXXXX','Company Id','','',0,'NG - Access Bank - 180',0,'','','NG-ACCESSBANK-180',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'NG-ACCESSBANK-180',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('NG-ACCESSBANK-180'):
                paymSpecList = this.getPaymSpecsMetaData_NG_ACCESSBANK_180();
                break;
        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_NG_ACCESSBANK_180</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_NG_ACCESSBANK_180()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Same day Payment',1,'SDPAY','','SDPAY','TRADE PAY',0,'NG-ACCESSBANK-180',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('NG-ACCESSBANK-180'):
                notesList = this.getNotesMetaData_NG_ACCESSBANK_180();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_NG_ACCESSBANK_180</Name>
				<Source><![CDATA[
    private container getNotesMetaData_NG_ACCESSBANK_180()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['NG-ACCESSBANK-180','SDPAY','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment pecifications.:--Vendor ebanking details > Payment specifications > Additional fields.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('NG-ACCESSBANK-180'):
                validationsList = this.getValidationsMetaData_NG_ACCESSBANK_180();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_NG_ACCESSBANK_180</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_NG_ACCESSBANK_180()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NG-ACCESSBANK-180','SDPAY','','Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Transaction Record > Field 3 > User Nominated Account Number','Bank account number',0,'AccountNum','','',0,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NG-ACCESSBANK-180','SDPAY','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','Transaction Record > Field 2 > User branch','Routing Number related to Bank',0,'RegistrationNum','','',0,0,'1','6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NG-ACCESSBANK-180','SDPAY','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','Transaction record > Homing Account Name','Name related to Vendor','16','WBeneName','','',1,0,1,'30',0,0]);

        //B2B
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NG-ACCESSBANK-180','SDPAY','','Bank(offset account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number','Transaction Record > Field 3 > User Nominated Account Number','Account Number related to Bank(offset account)','24','AccountNum','','',0,0,1,'11',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NG-ACCESSBANK-180','SDPAY','','Bank(offset account)Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','Transaction Record > Field 2 > User branch','Routing Number related to Bank',24,'RegistrationNum','','',0,0,'1','6',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NG-ACCESSBANK-180','SDPAY','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','Transaction record > Homing Account Name','Name related to Company(account LE)','28','Name','','',1,0,1,'30',0,'4','',0]);

        //CNP
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NG-ACCESSBANK-180','SDPAY','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Transaction Record > Field 3 > User Nominated Account Number','Bank account number',0,'AccountNum','','',0,0,1,'11',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NG-ACCESSBANK-180','SDPAY','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','Transaction Record > Field 2 > User branch','Routing Number related to Bank',0,'RegistrationNum','','',0,0,'1','6',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NG-ACCESSBANK-180','SDPAY','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Transaction record > Homing Account Name','Name related to Customer','35','WBeneName','','',1,0,1,'30',0,'6']);
       

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['NG-ACCESSBANK-180','TypeOfAccount','Type Of Account']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['NG-ACCESSBANK-180','EntryClass','Entry Class']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NG-ACCESSBANK-180','TypeOfAccount','Current (Cheque) Account','1']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NG-ACCESSBANK-180','TypeOfAccount','Savings Account','2']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NG-ACCESSBANK-180','TypeOfAccount','Transmission Account','3']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NG-ACCESSBANK-180','TypeOfAccount','Bond Account','4']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NG-ACCESSBANK-180','TypeOfAccount','Subscription Share Account','6']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NG-ACCESSBANK-180','EntryClass','Bank Use - Credit Transfer','88']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NG-ACCESSBANK-180','EntryClass','BankservAfrica Use - Service Charge','91']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NG-ACCESSBANK-180','EntryClass','BankservAfrica Use','92']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NG-ACCESSBANK-180','EntryClass','BankservAfrica Use','93']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NG-ACCESSBANK-180','EntryClass','Bank Use - Credit Card Merchant-Electronic Funds Transfer','94']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NG-ACCESSBANK-180','EntryClass','Bank Use - Credit Card Holder - Electronic Funds Transfer','95']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NG-ACCESSBANK-180','EntryClass','Bank Use - Commission Payment, Garage Card','96']);

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('NG-ACCESSBANK-180'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_NG_ACCESSBANK_180();
                break;
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_NG_ACCESSBANK_180</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_NG_ACCESSBANK_180()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NG-ACCESSBANK-180','NG-ACCESSBANK-180','SDPAY','TypeOfAccount','Type Of Account',0,'TypeOfAccount','',0,'','','Transaction Record > Type of Account']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NG-ACCESSBANK-180','NG-ACCESSBANK-180','SDPAY','EntryClass','Entry Class',0,'EntryClass','',0,'','','Transaction Record > Entry Class']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NG-ACCESSBANK-180','NG-ACCESSBANK-180','SDPAY','UserAbbrvtName','User Abbrivated Name',1,'UserAbbrvtName','',1,'','XXXXXXXXXX','Transaction Record > Field > 15 > User Reference / Originator Reference']);
        
        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['NG-ACCESSBANK-180','TestLiveIndicator','Test /Live indicator ']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NG-ACCESSBANK-180','TestLiveIndicator','TEST','TEST']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NG-ACCESSBANK-180','TestLiveIndicator','LIVE','LIVE']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('NG-ACCESSBANK-180'):
                paymSpecList = this.getFileFormatFieldsMetaData_NG_ACCESSBANK_180();
                break;
        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_NG_ACCESSBANK_180</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_NG_ACCESSBANK_180()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NG-ACCESSBANK-180','NG-ACCESSBANK-180','InstallationIdCode','Installation Id Code',1,'InstallationIdCode','',1,'','XXXX','User Header > User code']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NG-ACCESSBANK-180','NG-ACCESSBANK-180','TestLiveIndicator','Test/Live Indicator',0,'TestLiveIndicator','',0,'','','File control record > Test/Live Indicator']);
        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>