<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_UK_HSBC_XML_US_AR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_UK_HSBC_XML_US_AR extends SKS_EFT_Format_ISO_20022_00800102
/// </summary>
class SKS_EFT_Format_UK_HSBC_XML_US_AR extends SKS_EFT_Format_ISO_20022_00800102
{
    #define.FormatVersion('20220808')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl(XmlElement _nodePmftTpInf)//SKS_VSTS_13670
    {
        //------------------------------------------------------------------------------------------------------
        //          2.8: SvcLvl
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeSvcLvl;
        str value;

        switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
        {
            case 'ACH-CCD':
            case 'ACH-PPD':
            case 'ACH-CTX':
            case 'ACH-CCP':
                value = 'NURG';
                break;
        }
    
        if(value)
        {
            //          2.8: SvcLvl
            nodeSvcLvl = _nodePmftTpInf.appendChild(xmlDoc.createElement('SvcLvl'));
    
            //              2.9: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSvcLvl, 'Cd', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_PmtId</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_PmtId(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.29: PmtId
        //              2.31: EndToEndId
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodePmtId;
    
        //          2.28: PmtId
        nodePmtId = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('PmtId'));

        //              2.29: InstrId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'InstrId', SKS_PP_StringFormats::strRight(mSKS_EFT_FileDetail.PaymentReference, 35));
    
        //              2.31: EndToEndId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId', SKS_PP_StringFormats::strRight(mSKS_EFT_FileDetail.PaymentReference, 35));
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_Dbtr</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_Dbtr(XmlElement _node_DrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.72: Dbtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtr;
    
        //          2.72: Dbtr
        nodeDbtr = _node_DrctDbtTxInf.appendChild(xmlDoc.createElement('Dbtr'));
    
        //              Nm
        this.node_DrctDbtTxInf_Dbtr_Nm(nodeDbtr);
        
        //           PstlAdr
        this.node_DrctDbtTxInf_Dbtr_PstlAdr(nodeDbtr);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_Dbtr_Nm</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_Dbtr_Nm(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.72: Dbtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
    
        //              Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeDbtr, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail.AccountName), 22);//SKS_VSTS_13766
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_Dbtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_Dbtr_PstlAdr(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.72: Dbtr
        //              PstlAdr
        str address;

        if(mSKS_EFT_FileDetail.AccountNum && mSKS_EFT_FileDetail.AccountType == LedgerJournalACType::Cust)
        {
            msks_EFT_FileDetail_CustAddress = sks_EFT_FileDetail_CustAddress::find(mSKS_EFT_FileDetail.RecId); 
            
            address = msks_EFT_FileDetail_CustAddress.CustAddr;

            if(msks_EFT_FileDetail_CustAddress.CustAddr2)
            {
                address += msks_EFT_FileDetail_CustAddress.CustAddr2;
            }
            this.node_PstlAdr(_nodeDbtr, msks_EFT_FileDetail_CustAddress.CustCountryRegionId, address, msks_EFT_FileDetail_CustAddress.CustZipPostal, msks_EFT_FileDetail_CustAddress.CustCity, 75, '', '');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_DbtrAcct(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.73: DbtrAcct
        //              Id
        //                  Othr
        //                      Id
        //              Tp
        //              Nm
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;
        XmlElement nodeOthr;
        XmlElement nodeDbtrAcctTp;
        str value;
    
        if(mSKS_EFT_FileDetail.DepBankAcct || mSKS_EFT_FileDetail.DepBankIBAN)
        {
            //          2.73: DbtrAcct
            nodeDbtrAcct = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
            //              Id
            nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
    
            if(mSKS_EFT_FileDetail.DepBankIBAN)
            {
                //                  IBAN
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN);
            }
            else
            {
                //                  Othr
                nodeOthr = nodeDbtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
                //                      Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.DepBankAcct, 34);
            }
    
            //              Tp
            if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::SavingsAccount)
            {
                value = 'SVGS';
            }
            else
            {
                value = 'CACC';
            }
    
            if(value)
            {
                //              Tp
                nodeDbtrAcctTp = nodeDbtrAcct.appendChild(xmlDoc.createElement('Tp'));
    
                //                  Cd/Ptry
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctTp, 'Cd', value);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_DbtrAgt(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.70: DbtrAgt
        //              FinInstnId
        //                  BIC
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
    
        if(mSKS_EFT_FileDetail.DepBankTransit)
        {
            //          2.77: DbtrAgt
            nodeDbtrAgt = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('DbtrAgt'));
    
            //              FinInstnId
            nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
            //                  ClrSysMmbId
            nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
            //                  MmbId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 35);

            select msks_EFT_FileDetail_BankAddress where
                    msks_EFT_FileDetail_BankAddress.RefRecId == mSKS_EFT_FileDetail.RecID
                    && msks_EFT_FileDetail_BankAddress.AddressType == SKS_EFT_AddressType::CustBankAddress;

            //                  PstlAdr
            this.node_PstlAdr(nodeFinInstnId, this.getLogisticsAddressCountryISO(msks_EFT_FileDetail_BankAddress.CountryRegionId), msks_EFT_FileDetail_BankAddress.Addr, msks_EFT_FileDetail_BankAddress.Zipcode, msks_EFT_FileDetail_BankAddress.City);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_Id</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty_Id(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      InitgPty
        //          Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOther;
        str initgPtyId;

        initgPtyId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('HSBCConnectCustId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
    
        if(initgPtyId)
        {
            //          Id
            nodeId = _nodeInitgPty.appendChild(xmlDoc.createElement('Id'));
    
            //              OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            //                  Other
            nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
            //                          Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', this.CharacterReplacement(initgPtyId), 35);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_Nm</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_Nm(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          Nm
        //------------------------------------------------------------------------------------------------------
    
        //          Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail.FileACHCompanyName), 16, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          Nm
        //------------------------------------------------------------------------------------------------------
        str address;
        mSKS_EFT_FileDetail_BankAccount = SKS_EFT_FileDetail_BankAccount::find(mSKS_EFT_FileDetail.RecId);

        address = mSKS_EFT_FileDetail_BankAccount.Addr;

        if(mSKS_EFT_FileDetail_BankAccount.Addr2)
        {
            address += mSKS_EFT_FileDetail_BankAccount.Addr2;
        }
    
        this.node_PstlAdr(_nodeCdtr, mSKS_EFT_FileDetail_BankAccount.CountryRegionId, address, mSKS_EFT_FileDetail_BankAccount.ZipPostal, mSKS_EFT_FileDetail_BankAccount.City, 70, '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_Id(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          Id
        //              OrgId
        //                  Othr
        //                      Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOthr;
        str cdtrId;
    
        cdtrId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CreditorId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
    
        if(cdtrId)
        {
            //          Id
            nodeId = _nodeCdtr.appendChild(xmlDoc.createElement('Id'));
    
            //              OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            //                  Other
            nodeOthr = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
            //                          Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', this.CharacterReplacement(cdtrId), 10);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_CdtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: CdtrAcct
        //          Id
        //              IBAN
        //              Othr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
        XmlElement nodeOthr;
    
        if(mSKS_EFT_FileDetail.BankBankAcct)
        {
            //      2.20: CdtrAcct
            nodeCdtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
            //          Id
            nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
            //              Othr
            nodeOthr = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
            //                  Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.BankBankAcct, 34);

            //              Ccy
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcct, 'Ccy', mSKS_EFT_FileDetail.CurrencyCode);//SKS_VSTS_13809
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_PmtInf_CdtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.17: CdtrAgt
        //               FinInstnId
        //                     ClrSysMmbId
        //                          MmbId
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmBId;
    
        //      2.21: CdtrAgt
        nodeCdtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('CdtrAgt'));
    
        //          FinInstnId
        nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
        
        if(mSKS_EFT_FileDetail.BankBankTransit != '')
        {
            //              ClrSysMmbId
            nodeClrSysMmBId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
            //                  Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmBId, 'MmbId', mSKS_EFT_FileDetail.BankBankTransit, 35);
        }
    
        select msks_EFT_FileDetail_BankAddress where
                    msks_EFT_FileDetail_BankAddress.RefRecId == mSKS_EFT_FileDetail.RecID
                    && msks_EFT_FileDetail_BankAddress.AddressType == SKS_EFT_AddressType::BankAddress;
    
        if(msks_EFT_FileDetail_BankAddress)
        {
            //              PstlAdr
            //                  Ctry
            this.node_PstlAdr(nodeFinInstnId, msks_EFT_FileDetail_BankAddress.CountryRegionId, msks_EFT_FileDetail_BankAddress.Addr, msks_EFT_FileDetail_BankAddress.ZipCode, msks_EFT_FileDetail_BankAddress.City, 70, '', '');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_LclInstrm</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_LclInstrm(XmlElement _nodePmtTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.11: LclInstrm
        //              2.13: Prtry
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeLclInstrm;
    
        str value;
    
        switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
        {
            case 'ACH-CCD':
            case 'ACH-PPD':
            case 'ACH-CTX':
            case 'ACH-CCP':
                value = subStr(mSKS_EFT_FileFormatPaymSpec.PaymSpec, strLen(mSKS_EFT_FileFormatPaymSpec.PaymSpec), -3);
                break;
        }
        if(value != '')
        {
            //          2.11: LclInstrm
            nodeLclInstrm = _nodePmtTpInf.appendChild(xmlDoc.createElement('LclInstrm'));
            
            //            2.12: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Cd', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_CdtrNodes</Name>
				<Source><![CDATA[
    protected void node_PmtInf_CdtrNodes(XmlElement _nodePmtInf)
    {
        //      2.19: Cdtr
        this.node_PmtInf_Cdtr(_nodePmtInf);
    
        //      2.20: CdtrAcct
        this.node_PmtInf_CdtrAcct(_nodePmtInf);
    
        //      2.21: CdtrAgt
        this.node_PmtInf_CdtrAgt(_nodePmtInf);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          Nm
        //          PstlAdr
        //          Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtr;
    
        //      2.19: Cdtr
        nodeCdtr = nodePmtInf.appendChild(xmlDoc.createElement('Cdtr'));
    
        //          Nm
        this.node_PmtInf_Cdtr_Nm(nodeCdtr);

        //          PstlAdr
        this.node_PmtInf_Cdtr_PstlAdr(nodeCdtr);
    
        //          Id
        this.node_PmtInf_Cdtr_Id(nodeCdtr);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_RmtInf(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //              RmtInf
        //------------------------------------------------------------------------------------------------------
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        XmlElement nodeRmtInf;
        str invDetailsString;
        boolean firstRec = true;
    
        while select InvoiceNumber, RecordSummaryRecId from invSKS_EFT_FileDetail
            where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                && invSKS_EFT_FileDetail.InvoiceNumber != ''
        {
            if(firstRec)
            {
                //              RmtInf
                nodeRmtInf = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                firstRec = false;
            }
    
            invDetailsString += strFmt('%1, ', invSKS_EFT_FileDetail.InvoiceNumber);
        }
    
        if(invDetailsString)
        {
            invDetailsString = subStr(invDetailsString, 1, strLen(invDetailsString)-2);
    
            //                  Ustrd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(invDetailsString), 140);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>