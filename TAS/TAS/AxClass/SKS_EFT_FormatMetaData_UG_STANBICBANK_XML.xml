<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_UG_STANBICBANK_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_UG_STANBICBANK_XML
/// </summary>
class SKS_EFT_FormatMetaData_UG_STANBICBANK_XML Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230309';
        dataContractVersion = '1.0';
        conFormatID = ['UG-STANBICBANK-XML-KE','UG-STANBICBANK-XML'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,1,1,'','','','',0,'','','','',0,'UG - Stanbic Bank - XML - Kenya',0,'','','UG-STANBICBANK-XML-KE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UG-STANBICBANK-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,1,1,'','','','',0,'','','','',0,'UG - Stanbic Bank - XML',0,'','','UG-STANBICBANK-XML',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UG-STANBICBANK-XML',1,1,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('UG-STANBICBANK-XML-KE'):
                paymSpecList = this.getPaymSpecsMetaData_UG_STANBICBANK_XML_KE();
                break;

            case ('UG-STANBICBANK-XML'):
                paymSpecList = this.getPaymSpecsMetaData_UG_STANBICBANK_XML();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UG_STANBICBANK_XML_KE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UG_STANBICBANK_XML_KE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Payments',1,'DOMESTIC','','DOMESTIC','TRADE PAY',0,'UG-STANBICBANK-XML-KE',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,1,0,0,0,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UG_STANBICBANK_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UG_STANBICBANK_XML()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Value Dated Payments',1,'DOM','','DOM','TRADE PAY',0,'UG-STANBICBANK-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,1,0,0,0,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('UG-STANBICBANK-XML-KE'):
                notesList = this.getNotesMetaData_UG_STANBICBANK_XML_KE();
                break;
        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UG_STANBICBANK_XML_KE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UG_STANBICBANK_XML_KE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','-This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.:-Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('UG-STANBICBANK-XML-KE'):
                validationsList = this.getValidationsMetaData_UG_STANBICBANK_XML_KE();
                break;

            case ('UG-STANBICBANK-XML'):
                validationsList = this.getValidationsMetaData_UG_STANBICBANK_XML();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UG_STANBICBANK_XML</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UG_STANBICBANK_XML()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,'0',1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','','0','0',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','0','0',1,'15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',1,0,1,'66',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,'1',1,'33',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr2','','',1,'1',1,'33',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/Region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3','0',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3','0',1,'34',0,0]);    
  
  
        //B2B
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',1,0,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',3,0,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Bank(offset account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number','PmtInf > DbtrAcct > Othr > Id','Account Number related to Bank(offset account)','24','AccountNum','','',3,0,1,'34',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,0,'1','11',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Bank(offset account)Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank(offset account)','24','RegistrationNum','','','0','0',1,'15',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','',3,0,'1','11',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','26','RegistrationNum','','','3',0,1,'15',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',1,0,1,'66',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Company(account LE) Country/Region','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Company(account LE)','34','CountryRegionId','','',1,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Company(account LE) Address 1','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Street','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to Company(account LE)','34','Street','','',1,'1',1,'33',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',3,0,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',3,0,1,'34',0,'4','',0]);
        

        //CNP
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',1,0,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','',3,0,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,0,'1','11',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','0','0',1,'15',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Customer Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','',3,0,'1','11',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Customer Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','1','RegistrationNum','','','3',0,1,'15',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',1,0,1,'66',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Customer Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Customer','35','WBeneCountryRegionId','','',1,1,'',0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Customer Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr','','',1,'1',1,'33',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Customer Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr2','','',1,'1',1,'33',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',3,0,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML','DOM','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',3,0,1,'34',0,'6']);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UG_STANBICBANK_XML_KE</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UG_STANBICBANK_XML_KE()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,'2',1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','','3','2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','3','2',1,'15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,0,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > Nm','Name related to Vendor Bank','16','WBenBankName','','',1,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to vendor bank','16','WBenBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'66',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,'2',1,'33',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr2','','',1,'2',1,'33',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Vendor City','16','WBeneCity','','',1,'2',1,'33',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','State related to vendor','16','WBeneState','','',1,'2',1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/Region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3','2',1,'35',0,0]);
        
        //B2B
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',1,2,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank Country code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','23','WOrdPartyCountryRegionId','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',3,0,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank(offset account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number','PmtInf > DbtrAcct > Othr > Id','Account Number related to Bank(offset account)','24','AccountNum','','',3,0,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',3,2,'1','11',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank(offset account)Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank(offset account)','24','RegistrationNum','','','3','2',1,'15',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','',3,1,'0','11',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','26','RegistrationNum','','','3',0,1,'15',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank(account) Bank Name','Cash and bank management > Select bank account > edit > Address > Name','PmtInf > CdTrfTxInf > CdtrAgt > Nm','Name related to Bank(account) Bank Name','26','Name','','',1,0,1,'70',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank(account) Country','Cash and bank management > Select bank account > edit > Address > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to Bank(account) ','29','CountryRegionId','','',1,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,0,1,'66',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Company(account LE) Country/Region','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Company(account LE)','34','CountryRegionId','','',1,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Company(account LE) Address 1','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Street','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to Company(account LE)','34','Street','','',1,'2',1,'33',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Company(account LE) ZIP/Postal Code','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','ZIP/Postal code  related to Company(account LE)','34','ZipCode','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Company(account LE) City','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to Company(account LE)','34','City','','',1,1,1,'33',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',3,2,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',3,2,1,'35',0,'4','',0]);
        

        //CNP
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',1,2,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank Country code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','',3,0,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',3,0,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',3,2,'1','11',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','3','2',1,'15',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Customer Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','',3,1,'0','11',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Customer Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','1','RegistrationNum','','','3',0,1,'15',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Customer Bank Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Nm','Customer Bank Name','35','WBenBankName','','',1,0,1,'70',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Customer bank Country','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to Customer bank','35','WBenBankCountryRegionId','','',1,1,'',0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,0,1,'66',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Customer Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Customer','35','WBeneCountryRegionId','','',1,1,'',0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Customer Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr','','',1,'2',1,'33',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Customer Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr2','','',1,'2',1,'33',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine ','ZIP/Postal code  related to Customer','35','WBeneZipPostal','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine','Customer city','35','WBeneCity','','',1,1,1,'33',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',3,2,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UG-STANBICBANK-XML-KE','DOMESTIC','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',3,2,1,'35',0,'6']);
        

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UG-STANBICBANK-XML','InstrPrty','Instruction priority']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UG-STANBICBANK-XML','SvcLvlCd','Service Level Code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UG-STANBICBANK-XML','LclInstrm','Local Instrument']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UG-STANBICBANK-XML','CtgyPurp','Category Purpose']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UG-STANBICBANK-XML','ServiceType','Service Type']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UG-STANBICBANK-XML','ChrgBr','Charge Bearer']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UG-STANBICBANK-XML','ResStatus','Resident Status (1/2)']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UG-STANBICBANK-XML','Gender','Gender(M/F)']);
        

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','InstrPrty','Normal payment','NORM']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','InstrPrty','Urgent payment','HIGH']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','SvcLvlCd','Urgent payment','URGP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','SvcLvlCd','Non-Urgent payment','NURG']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','SvcLvlCd','Same Day Value','SDVA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','LclInstrm','Available funds','AVAIL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','LclInstrm','Credit facility','CREDIT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','CtgyPurp','Salary','61']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','CtgyPurp','Pension','62']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','CtgyPurp','P.A.Y.E.','63']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','CtgyPurp','Salary Deduction: Mortgage and Bond Repayment','64']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','CtgyPurp','Salary Deduction: Insurance Premium','65']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','CtgyPurp','Mortgage Bond Repayment','66']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','CtgyPurp','Value Added Tax (VAT payment)','67']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','CtgyPurp','Salary Deduction: Miscellaneous','69']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','CtgyPurp','Annuity','70']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','CtgyPurp','Dividend','71']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','CtgyPurp','Interest','72']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','CtgyPurp','Agents Commission','75']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','CtgyPurp','Insurance Premium Refund','80']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','CtgyPurp','Payment to Creditor','81']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','CtgyPurp','Payment of Insurance Claims','82']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','CtgyPurp','Medical Aid Refunds','83']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','CtgyPurp','Unit Trust Repurchase','86']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','Qualifier','Service Type','SVT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','Qualifier','Bank to Bank Information','BTB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','Qualifier','Customs Client Number','CCN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','Qualifier','Cannot Catogorize','CNC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','Qualifier','Compliance Type','CPT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','Qualifier','Exchange Control Approval','ECA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','Qualifier','Entity Details','ENT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','ResStatus','1','1']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','ResStatus','2','2']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','Gender','Male','M']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','Gender','Female','F']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','Chrgbr','Borne by Creditor','CRED']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','Chrgbr','Borne by Debtor','DEBT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','Chrgbr','Shared','SHAR']);
       


        

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('UG-STANBICBANK-XML-KE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UG_STANBICBANK_XML_KE();
                break;

            case ('UG-STANBICBANK-XML'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UG_STANBICBANK_XML();
                break;
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UG_STANBICBANK_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UG_STANBICBANK_XML()
    {
        container   paymSpecFieldsList;


        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UG-STANBICBANK-XML','UG-STANBICBANK-XML','DOM','InstrPrty','Instruction priority',0,'InstrPrty','',0,'','','PmtInf > InstrPrty']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UG-STANBICBANK-XML','UG-STANBICBANK-XML','DOM','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UG-STANBICBANK-XML','UG-STANBICBANK-XML','DOM','CdtrId','Creditor Id',1,'CdtrId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UG_STANBICBANK_XML_KE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UG_STANBICBANK_XML_KE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UG-STANBICBANK-XML','UG-STANBICBANK-XML-KE','DOMESTIC','InstrPrty','Instruction priority',0,'InstrPrty','',0,'','','PmtInf > InstrPrty']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UG-STANBICBANK-XML','UG-STANBICBANK-XML-KE','DOMESTIC','SvcLvlCd','Service Level Code',0,'SvcLvlCd','',0,'','','PmtInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UG-STANBICBANK-XML','UG-STANBICBANK-XML-KE','DOMESTIC','LclInstrm','Local Instrument',0,'LclInstrm','',0,'','','PmtInf > LclInstrm > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UG-STANBICBANK-XML','UG-STANBICBANK-XML-KE','DOMESTIC','CtgyPurp','Category Purpose',0,'CtgyPurp','',0,'','','PmtInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UG-STANBICBANK-XML','UG-STANBICBANK-XML-KE','DOMESTIC','Qualifier','Qualifier',0,'Qualifier','',0,'','','PmtInf > CdtTrfTxInf > InstrForCdtrAgt > InstrInf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UG-STANBICBANK-XML','UG-STANBICBANK-XML-KE','DOMESTIC','InstrInf','Instruction Information',1,'InstrInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > CdtTrfTxInf > InstrForCdtrAgt > InstrInf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UG-STANBICBANK-XML','UG-STANBICBANK-XML-KE','DOMESTIC','ResStatus','Resident Status',0,'ResStatus','',0,'','','Cdtr > Id > PrvtId > Other > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UG-STANBICBANK-XML','UG-STANBICBANK-XML-KE','DOMESTIC','Gender','Gender',0,'Gender','',0,'','','Cdtr > Id > PrvtId > Other > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UG-STANBICBANK-XML','UG-STANBICBANK-XML-KE','DOMESTIC','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        
        
        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UG-STANBICBANK-XML','BtchBookg','Batch Booking(Y/N)']);

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','BtchBookg','Y','Y']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UG-STANBICBANK-XML','BtchBookg','N','N']);

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('UG-STANBICBANK-XML-KE'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_UG_STANBICBANK_XML_KE();
                break;

            case ('UG-STANBICBANK-XML'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_UG_STANBICBANK_XML();
                break;
        }
        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_UG_STANBICBANK_XML</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_UG_STANBICBANK_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UG-STANBICBANK-XML','UG-STANBICBANK-XML','InitgPtyId','Initiatingparty ID',1,'InitgPtyId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UG-STANBICBANK-XML','UG-STANBICBANK-XML-KE','BtchBookg','Batch Booking (Y/N)',0,'BtchBookg','',0,'','','PmtInf > BtchBookg']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_UG_STANBICBANK_XML_KE</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_UG_STANBICBANK_XML_KE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UG-STANBICBANK-XML','UG-STANBICBANK-XML-KE','InitgPtyId','Initiatingparty ID',1,'InitgPtyId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UG-STANBICBANK-XML','UG-STANBICBANK-XML-KE','InitgPtySchme','Initiatingparty Scheme',1,'InitgPtySchme','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > SchmeNm > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UG-STANBICBANK-XML','UG-STANBICBANK-XML-KE','BtchBookg','Batch Booking (Y/N)',0,'BtchBookg','',0,'','','PmtInf > BtchBookg']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UG-STANBICBANK-XML','UG-STANBICBANK-XML-KE','DebtorId','Debtor ID',1,'DebtorId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','Dbtr > Id > OrgId > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UG-STANBICBANK-XML','UG-STANBICBANK-XML-KE','DebtorschemeNm','Debtor scheme Name',1,'DebtorschemeNm','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','Dbtr > Id > OrgId > Othr  > SchmeNm > Prtry']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
       
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>