<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFTAR_IHBJournalCreatePostDelegate</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Delegate to create the IHB journal
/// </summary>
class SKS_EFTAR_IHBJournalCreatePostDelegate
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>LedgerJournalCheckPost_runInternalPostPostJournalDelegate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create and post the IHB Journals.
    /// </summary>
    /// <param name="_ledgerJournalCheckPost">The instance of the <c>LedgerJournalCheckPost</c> class.</param>
    /// <param name="_postingSuccess">A boolean value indicating if the journal was posted successfully.</param>
    /// <param name="_intercompanyPostingSuccess">A boolean value indicating if the intercompany part of the journal was posted successfully.</param>
    // SKS_FDD_9536
    [SubscribesTo(classStr(LedgerJournalCheckPost), delegateStr(LedgerJournalCheckPost, runInternalPostPostJournalDelegate))]
    public static void LedgerJournalCheckPost_runInternalPostPostJournalDelegate(LedgerJournalCheckPost _ledgerJournalCheckPost, boolean _postingSuccess, boolean _intercompanyPostingSuccess)
    {
        LedgerJournalTable          ledgerJournalTable = _ledgerJournalCheckPost.parmLedgerJournalTable();
        SKS_EFTAR_PaymJourCreate    sKS_EFTAR_PaymJourCreate;
        LedgerJournalTrans          ledgerJournalTrans;

        SKS_EFT_FileHistory         lSKS_EFT_FileHistory;
        LedgerJournalTrans          ledgerJournalTransLoc;
        LedgerJournalTrans          lledgerJournalTransLoc;
        SKS_BR_BankTran             sKS_BR_BankTran;
        SKS_EFTAR_IHBReversal       sKS_EFTAR_IHBReversal = new SKS_EFTAR_IHBReversal();
        SKS_PP_Setup                locSKS_PP_Setup; //13903
        
        // SKS_FDD_9664 <--
        locSKS_PP_Setup = SKS_PP_Setup::find();
        if(locSKS_PP_Setup.IHB_Active && ledgerJournalTable.IsExtVendNettingJournal == NoYes::No) // Only do logic if IHB is active
        {
            if (_postingSuccess &&
                _intercompanyPostingSuccess &&
                (ledgerJournalTable.JournalType == LedgerJournalType::CustPayment ||
                    ledgerJournalTable.JournalType == LedgerJournalType::Daily) &&
                !ledgerJournalTable.ledgerJournalName().SKS_IHB_PaymentRequestJournal &&
                !ledgerJournalTable.SKS_EFTAR_IsIHBJournal)
            {
                // SKS_FDD_9664 -->
                select firstonly reverse RecId, OutboundFileRecId, Action from lSKS_EFT_FileHistory
                    where lSKS_EFT_FileHistory.JournalNum == ledgerJournalTable.JournalNum &&
                        lSKS_EFT_FileHistory.Action == SKS_EFT_ActionHistory::paymReversalCreated;

 
                if(lSKS_EFT_FileHistory.OutboundFileRecId)
                {
                    sKS_EFTAR_IHBReversal.setledgerJournalId(ledgerJournalTable.JournalNum);
                    sKS_EFTAR_IHBReversal.run();
                    return;
                }

                select firstonly RecId from lledgerJournalTransLoc
                    where lledgerJournalTransLoc.JournalNum == ledgerJournalTable.JournalNum
                        && lledgerJournalTransLoc.SKS_EFTAR_RevOrigRecId;
                if(lledgerJournalTransLoc.RecId > 0)
                {
                    sKS_EFTAR_IHBReversal.setledgerJournalId(ledgerJournalTable.JournalNum);
                    sKS_EFTAR_IHBReversal.run();
                    return;
                }
                // vvv BR Reversals vvv
                select count(RecId) from ledgerJournalTransLoc
                    where ledgerJournalTransLoc.JournalNum == ledgerJournalTable.JournalNum
                        && ledgerJournalTransLoc.SKS_BR_BankTranRecId
                join sKS_BR_BankTran
                    where sKS_BR_BankTran.RecId == ledgerJournalTransLoc.SKS_BR_BankTranRecId
                        && sKS_BR_BankTran.RevVoucher == ledgerJournalTransLoc.Voucher;
                
                if(ledgerJournalTransLoc.RecId > 0)
                {
                    sKS_EFTAR_IHBReversal.setledgerJournalId(ledgerJournalTable.JournalNum);
                    sKS_EFTAR_IHBReversal.setLedgeralTransCount(int642int(ledgerJournalTransLoc.RecId));
                    sKS_EFTAR_IHBReversal.run();
                    return;
                }
                // ^^^ BR Reversals ^^^

                //DEFAULT BEHAVIOR
                //  vvv if you didn't fall into any of the previous if logics, do the following
                sKS_EFTAR_PaymJourCreate = new SKS_EFTAR_PaymJourCreate();
                sKS_EFTAR_PaymJourCreate.setledgerJournalTable(ledgerJournalTable);
                sKS_EFTAR_PaymJourCreate.run();
                
            }
            else
            {
                select count(RecId) from ledgerJournalTrans
                    where ledgerJournalTrans.JournalNum == ledgerJournalTable.JournalNum &&
                    ledgerJournalTrans.SKS_IHB_InterComp == NoYes::Yes;

                if(ledgerJournalTrans.RecId > 0)
                {
                    sKS_EFTAR_PaymJourCreate = new SKS_EFTAR_PaymJourCreate();
                    sKS_EFTAR_PaymJourCreate.setLeadgeralTransCount(int642int(ledgerJournalTrans.RecId));
                    sKS_EFTAR_PaymJourCreate.setledgerJournalTable(ledgerJournalTable);
                    sKS_EFTAR_PaymJourCreate.run();
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>