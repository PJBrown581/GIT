<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_ZBI_UP_176</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_ZBI_UP_176 Extends SKS_PP_Format
{
    //ZBI Upload Template 2
    //Pos 1:       1  Item Type 1 for issue 2 for void
    //Pos 2-18:    17 Bank Account Number - Require
    //Pos 19-28    10 Check Number  right Justified and Left Zero Filled
    //Pos 29-34    6  Date of Issue-Format (mmddyy)
    //Pos 35-45    11 Check Amt     right Justified and Left Zero Filled
    //Pos 46-75    30 Blank - Additional Data
    //Pos 76-125   50 Vendor Name
    //Pos 126-175  50 Blank
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        int Mult;
        str ItemType;
        ;
    
    
        //Convert negative void numbers to positives
        Mult = 1;
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = '2';
        }
        else
        {
            ItemType = '1';
        }
    
    
        sb.Append(ItemType);
        sb.Append(SKS_PP_StringFormats::strFill(17, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(SKS_PP_StringFormats::strFill(11,  num2str(mSKS_PP_FileDetail.ChkCuryAmt, 0, 2, 1, 0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(30,'', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(50,mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(50,'', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>