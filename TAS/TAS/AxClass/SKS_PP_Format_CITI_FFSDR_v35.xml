<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_CITI_FFSDR_v35</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_CITI_FFSDR_v35 Extends SKS_PP_Format_BankGroup
{
    #define.Separator('#')
    int chkCount;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        // Citibank - US Flat File version 3.5 - SDR (Same day reconciliation)
        //Seq.    CitiDirect Field Name    M/O/N    Max     Field Size/Type    Business Rules
        //1        Placeholder                M        1X        Field must be delimited by a # symbol
        //2        Payment Method            M        3X        Value "SDR" should be reflected.
        //3        Service Request Type    M        2X        Applicable values are:
        //          IS – Add Issuance
        //          VO – Void Issuance – Only applicable for 0.00 Issuance.
        //          ST – Stop Payment
        //4        Account Number          M        10X        Mandatory and length will be supported up to 10X
        //5        Single / Range            M        1X        Default “S”
        //6        Account Currency        N        3X        Client need not pass value for this field. It will be augmented based on the account number.
        //7        Account Name            N        35X        Client need not pass value for this field. It will be augmented based on the account number.
        //8        Issue Date                M        8X        Mandatory and applicable for Add Issuance.
        //      Default to System date (Offset, 0)
        //          If value passed, format should be YYYYMMDD.
        //9        Check Amount            M        9.2X    Mandatory and applicable for Add Issuance and Stop Payment.
        //          Default “0.00”
        //10    Check Serial Number        M        10X        Mandatory for Add Issuance, Void Issuance and Stop Payment.
        //11    Plan Number                O        10X        Applicable only for Add Issuance and Void Issuance
        //12    Additional Data            O        45X        Applicable only for Add Issuance.
        //13    Issued Payee Name 1        O        60X        Applicable only for Add Issuance.
        //14    Issued Payee Name 2        O        60X        Applicable only for Add Issuance.
        //15    FSI                        O        5X        Applicable only for Add Issuance and Void Issuance.
        //16    Rule-off Date            M        8X        Applicable only for Add Issuance and Void Issuance.
        //          Format: YYYYMMDD
        //17    Placeholder                O        1X
        //18    Placeholder                O        1X
        //19    Duplicate Seq Number    N        5X        Not applicable
        //20    Stop                    N        1X        Not applicable
        //21    Void Date                O        8X        Applicable ONLY for Void Issuance.
        //22    Placeholder                O        1X
        //23    Placeholder                O        1X
        //24    Cents Compare            N        1X        Not applicable
        //25    Void                    N        1X        Not applicable
        //26    Placeholder                O        1X
        //27    Comments                N        50X        Not applicable
        //28    Payee                    N        25X        Not applicable
    
        int Mult = 1;
        str ItemType;
        date ruleOffDate;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
        chkCount++;
        if(chkCount > 200)
        {
            mErrorText = "@SKS3750"; // Only 200 checks can be included per file.
        }
    
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'VO';
            Mult = 0;
        }
        else
        {
            ItemType = 'IS';
        }
    
        //1        Placeholder
        sb.Append(this.wrapField());
    
        //2        Payment Method
        sb.Append(this.wrapField('SDR'));
    
        //3        Service Request Type
        sb.Append(this.wrapField(ItemType));
    
        //4        Account Number
        sb.Append(this.wrapField(mSKS_PP_FileDetail.BnkBankAcct));
    
        //5        Single / Range
        sb.Append(this.wrapField('S'));
    
        //6        Account Currency
        sb.Append(this.wrapField());
    
        //7        Account Name
        sb.Append(this.wrapField());
    
        //8        Issue Date
        sb.Append(this.wrapField(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_PP_FileDetail.ChkDocDate)));
    
        //9        Check Amount
        sb.Append(this.wrapField(num2Str(mSKS_PP_FileDetail.ChkCuryAmt * Mult, 1, 2, 1, 0)));
    
        //10    Check Serial Number
        sb.Append(this.wrapField(mSKS_PP_FileDetail.ChkRefNbr));
    
        //11    Plan Number
        sb.Append(this.wrapField());
    
        //12    Additional Data
        sb.Append(this.wrapField());
    
        //13    Issued Payee Name 1
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            sb.Append(this.wrapField());
        }
        else
        {
            sb.Append(this.wrapField(subStr(mSKS_PP_FileDetail.VendName,1,60)));
        }
    
        //14    Issued Payee Name 2
        sb.Append(this.wrapField());
    
        //15    FSI
        sb.Append(this.wrapField());
    
        //16    Rule-off Date
        ruleOffDate = Global::dateEndMth(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()));
        sb.Append(this.wrapField(SKS_PP_StringFormats::strDateYYYYMMDD(ruleOffDate)));
    
        //17    Placeholder
        sb.Append(this.wrapField());
    
        //18    Placeholder
        sb.Append(this.wrapField());
    
        //19    Duplicate Seq Number
        sb.Append(this.wrapField());
    
        //20    Stop
        sb.Append(this.wrapField());
    
        //21    Void Date
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            sb.Append(this.wrapField(SKS_PP_StringFormats::strDateYYYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()))));
        }
        else
        {
            sb.Append(this.wrapField());
        }
    
        //22    Placeholder
        sb.Append(this.wrapField());
    
        //23    Placeholder
        sb.Append(this.wrapField());
    
        //24    Cents Compare
        sb.Append(this.wrapField());
    
        //25    Void
        sb.Append(this.wrapField());
    
        //26    Placeholder
        sb.Append(this.wrapField());
    
        //27    Comments
        sb.Append(this.wrapField());
    
        //28    Payee
        sb.Append(this.wrapField());
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '', boolean _Delimit = true)
    {
        if(_Delimit)
        {
            return _field + #Separator;
        }
        else
        {
            return _field;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>