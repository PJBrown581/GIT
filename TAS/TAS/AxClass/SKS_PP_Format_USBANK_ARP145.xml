<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_USBANK_ARP145</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_USBANK_ARP145 Extends SKS_PP_Format_BankGroup
{
    int mTotal_Cnt;
    real mAmtTotal;
    BankAccount mBnkBankAcct;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>trimFields</Name>
				<Source><![CDATA[
    protected str trimFields(str _value)
    {
        return strRem(_value, '\t');
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    // US Bank - ARP - 145  (ARP Standard Issue Input Format for Mainframe Data Transmission/FTP
        // Each Record will contain 145 Characters
        // The decimal place is implied
        // Multiple Accounts Allowed
    
    // Pos 01-02    5   Record Code '01'
        // Pos 03-14    12  Account Number (Numeric)
        // Pos 15-24    10  Serial/Check Number (Numeric)
        // Pos 25-36    12  Amount ($$$$$$$$$$¢¢)
        // Pos 37-44    8   Issue Date (MMDDYYYY)
        // Pos 45       1   V for void or Blank ("V" or " ")
        // Pos 46-85    40  First Payee Name
        // Pos 86-125   40  Second payee Name
        // Pos 126-143  18  Filler "Blank"
        // Pos 144-145  2   CR/LF
    
    
    protected str txtDetail()
    {
        Str ItemType;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        //here we set the current bank account.  This will be used when a Group Footer prints,
        //as it needs to to know what bank account the footer is for.
        mBnkBankAcct = mSKS_PP_FileDetail.BnkBankAcct;
    
        //For an issue, use a space, else use a "V"
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
            ItemType = 'V';
        else
            ItemType = ' ';
    
        mTotal_Cnt++;
        mAmtTotal = mAmtTotal + abs(mSKS_PP_FileDetail.ChkCuryAmt);
    
        sb.Append('01');
        sb.Append(SKS_PP_StringFormats::strFill(12, this.trimFields(mSKS_PP_FileDetail.BnkBankAcct), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(mSKS_PP_FileDetail.ChkCuryAmt,12));
        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(ItemType);//length 1
        sb.Append(SKS_PP_StringFormats::strFill(40, this.trimFields(mSKS_PP_FileDetail.VendName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(40,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(18,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    // US Bank - ARP - 145  (ARP Standard Issue Input Format for Mainframe Data Transmission/FTP
        // Each Record will contain 145 Characters
        // The decimal place is implied
        //
        // Pos 01-02    2   Record Code '02'
        // Pos 03-14    12  Account Number (Numeric)
        // Pos 15-24    10  Total Detail Records (Numeric)
        // Pos 25-36    12  Total Amount ($$$$$$$$$$¢¢)
        // Pos 37-143   107 Blank/Filler (spaces)
        // Pos 144-145  2   CR/LF
    
    protected str txtGroupTrailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        sb.Append('02');
        sb.Append(SKS_PP_StringFormats::strFill(12, this.trimFields(mBnkBankAcct), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, int2str(mTotal_Cnt), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(mAmtTotal,12));
        sb.Append(SKS_PP_StringFormats::strFill(107, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //clear Group Trailer accumulators
        mTotal_Cnt = 0;
        mAmtTotal = 0;
    
        //we will return this value to be printed to the file
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>