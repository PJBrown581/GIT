<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_TH_BBL_ICASH</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_TH_BBL_ICASH Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_TH_BBL_ICASH Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20221108';
        dataContractVersion = '1.0';
        conFormatID = ['TH-BBL-ICASH'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'XXXXXXXXXXXXXXXXXXXX','Company Id','','',0,'Thailand - Bangkok Bank - iCash',0,'','','TH-BBL-ICASH',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,'',0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'TH-BBL-ICASH',0,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('TH-BBL-ICASH'):
                paymSpecList = this.getPaymSpecsMetaData_TH_BBL_ICASH();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_TH_BBL_ICASH</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_TH_BBL_ICASH()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Domestic Direct Credit',1,'DIR CREDIT','','DIR CREDIT','TRADE PAY',0,'TH-BBL-ICASH',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'SMART - Low Value Payment',1,'SMART','','SMART','TRADE PAY',0,'TH-BBL-ICASH',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Payroll Payment',1,'PAYROLL','','PAYROLL','TRADE PAY',0,'TH-BBL-ICASH',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'BAHTNET - Urgent/Priority',1,'BAHTNET','','BAHTNET','TRADE PAY',0,'TH-BBL-ICASH',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('TH-BBL-ICASH'):
                notesList = this.getNotesMetaData_TH_BBL_ICASH();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_TH_BBL_ICASH</Name>
				<Source><![CDATA[
    private container getNotesMetaData_TH_BBL_ICASH()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['TH-BBL-ICASH','DIR CREDIT','-The Company Tax registration number is set on Organization administration > Organization > Legal entities > Tax registration tab.::AP Bank account > Payment Specifications fields:-Company id is required and set on the File Info tab.:-Company Account is the Bank account number.::Vendor Bank account fields:-Bank code is stored in the Bank groups field.::Vendor eBanking details > Payment specification > Wire transfer/IAT-1 tab fields:-Beneficiary Name and Address information is stored in the Beneficiary section of the Wire transfer/IAT-1 tab. Name is required.:-Credit advice may be set to Yes or No on the Advice field in the Beneficiary section and will default to No if left blank.:-The type of advice is set on the Mail handling field in the Beneficiary section.:--Vendor Fax and Phone numbers are set on the Vendor. Email is set on the email tab of Vendor eBanking details.:-Payee charge code is required and set in the Charges field on the Other notes section of the Wire transfer/IAT-1 tab.::Thailand Withholding tax fields:-Payee tax ID is on the set on the Payment Journal > Payment tab.:-WHT Income Type is set on the Central bank purpose code field on the Payment Journal > Bank tab.:-WHT Deduct Rate is set on the Value field in General Ledger > Withholding tax groups > Setup.:-WHT form type is set on the ']);
        notesList = ConIns(notesList,conLen(notesList)+1,['TH-BBL-ICASH','SMART','-The BOT service type of payment is required and set on the Central bank purpose code field on Payment journal > Payment tab.:-The Company Tax registration number is set on Organization administration > Organization > Legal entities > Tax registration tab.::AP Bank account > Payment Specifications fields:-Company id is required and set on the File Info tab.:-Company Account is the Bank account number.:-Product code is required and set on the Wire/IAT ordering party tab.::Vendor eBanking details > Payment specification > Wire transfer/IAT-1 tab fields:-Beneficiary Name and Address information is stored in the Beneficiary section of the Wire transfer/IAT-1 tab. Name is required.:-Credit advice may be set to Yes or No on the Advice field in the Beneficiary section and will default to No if left blank.:-The type of advice is set on the Mail handling field in the Beneficiary section.:--Vendor Fax and Phone numbers are set on the Vendor. Email is set on the email tab of Vendor eBanking details.:-Payee charge code is required and set in the Charges field on the Other notes section of the Wire transfer/IAT-1 tab.::Thailand Withholding tax fields:-Payee tax ID is on the set on the Payment Journal > Payment tab.:-WHT Income Type is set on the Central bank purpose code field on the Payment Journal > Bank tab.:-WHT Deduct Rate is set on the Value field in General Ledger > Withholding tax groups > Setup.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['TH-BBL-ICASH','PAYROLL','-The Company Tax registration number is set on Organization administration > Organization > Legal entities > Tax registration tab.::AP Bank account > Payment Specifications fields:-Company id is required and set on the File Info tab.:-Company Account is the Bank account number.::Vendor Bank account fields:-Bank code is stored in the Bank groups field.::Vendor eBanking details > Payment specification > Wire transfer/IAT-1 tab fields:-Beneficiary Name and Address information is stored in the Beneficiary section of the Wire transfer/IAT-1 tab. Name is required.:-Credit advice may be set to Yes or No on the Advice field in the Beneficiary section and will default to No if left blank.:-The type of advice is set on the Mail handling field in the Beneficiary section.:--Vendor Fax and Phone numbers are set on the Vendor. Email is set on the email tab of Vendor eBanking details.:-Payee charge code is required and set in the Charges field on the Other notes section of the Wire transfer/IAT-1 tab.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['TH-BBL-ICASH','BAHTNET','-The Company Tax registration number is set on Organization administration > Organization > Legal entities > Tax registration tab.::AP Bank account > Payment Specifications fields:-Company id is required and set on the File Info tab.:-Company Account is the Bank account number.::Vendor Bank account fields:-Bank code is stored in the Bank groups field.::Vendor eBanking details > Payment specification > Wire transfer/IAT-1 tab fields:-Beneficiary Name and Address information is stored in the Beneficiary section of the Wire transfer/IAT-1 tab. Name is required.:-Credit advice may be set to Yes or No on the Advice field in the Beneficiary section and will default to No if left blank.:-The type of advice is set on the Mail handling field in the Beneficiary section.:--Vendor Fax and Phone numbers are set on the Vendor. Email is set on the email tab of Vendor eBanking details.:-Payee charge code is required and set in the Charges field on the Other notes section of the Wire transfer/IAT-1 tab.::Thailand Withholding tax fields:-Payee tax ID is on the set on the Payment Journal > Payment tab.:-WHT Income Type is set on the Central bank purpose code field on the Payment Journal > Bank tab.:-WHT Deduct Rate is set on the Value field in General Ledger > Withholding tax groups > Setup.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['TH-BBL-ICASH','Charges','Charges']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['TH-BBL-ICASH','BeneAdviceType','Bene Advice Type']); //----10
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['TH-BBL-ICASH','DeliveryMethod','Delivery Method']);  //  -----5

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['TH-BBL-ICASH','Charges','Payor','OUR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['TH-BBL-ICASH','Charges','Beneficiary','BEN']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['TH-BBL-ICASH','BeneAdviceType','Yes','Y']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['TH-BBL-ICASH','BeneAdviceType','No','N']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['TH-BBL-ICASH','DeliveryMethod','Email','Email']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['TH-BBL-ICASH','DeliveryMethod','Fax','Fax']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['TH-BBL-ICASH','DeliveryMethod','Phone','Phone']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('TH-BBL-ICASH'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_TH_BBL_ICASH();
                break;
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_TH_BBL_ICASH</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_TH_BBL_ICASH()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['TH-BBL-ICASH','TH-BBL-ICASH','DIR CREDIT','Charges','Charges',0,'Charges','',0,'','','Payment Details > Field No.33 Charges']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['TH-BBL-ICASH','TH-BBL-ICASH','SMART','Charges','Charges',0,'Charges','',0,'','','Payment Details > Field No.33 Charges']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['TH-BBL-ICASH','TH-BBL-ICASH','PAYROLL','Charges','Charges',0,'Charges','',0,'','','Payment Details > Field No.33 Charges']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['TH-BBL-ICASH','TH-BBL-ICASH','BAHTNET','Charges','Charges',0,'Charges','',0,'','','Payment Details > Field No.33 Charges']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['TH-BBL-ICASH','TH-BBL-ICASH','DIR CREDIT','BeneAdviceType','Bene Advice Type',0,'BeneAdviceType','',0,'','','Payment Details > Field No.19 Advice Media/Bene Advice Type']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['TH-BBL-ICASH','TH-BBL-ICASH','SMART','BeneAdviceType','Bene Advice Type',0,'BeneAdviceType','',0,'','','Payment Details > Field No.19 Advice Media/Bene Advice Type']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['TH-BBL-ICASH','TH-BBL-ICASH','PAYROLL','BeneAdviceType','Bene Advice Type',0,'BeneAdviceType','',0,'','','Payment Details > Field No.19 Advice Media/Bene Advice Type']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['TH-BBL-ICASH','TH-BBL-ICASH','BAHTNET','BeneAdviceType','Bene Advice Type',0,'BeneAdviceType','',0,'','','Payment Details > Field No.19 Advice Media/Bene Advice Type']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['TH-BBL-ICASH','TH-BBL-ICASH','DIR CREDIT','DeliveryMethod','Delivery Method',0,'DeliveryMethod','',0,'','','Payment Details > Field No.53 Delivery Method']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['TH-BBL-ICASH','TH-BBL-ICASH','SMART','DeliveryMethod','Delivery Method',0,'DeliveryMethod','',0,'','','Payment Details > Field No.53 Delivery Method']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['TH-BBL-ICASH','TH-BBL-ICASH','PAYROLL','DeliveryMethod','Delivery Method',0,'DeliveryMethod','',0,'','','Payment Details > Field No.53 Delivery Method']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['TH-BBL-ICASH','TH-BBL-ICASH','BAHTNET','DeliveryMethod','Delivery Method',0,'DeliveryMethod','',0,'','','Payment Details > Field No.53 Delivery Method']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3
        
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['TH-BBL-ICASH','*','FormatLookup','*','*','']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('TH-BBL-ICASH'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_TH_BBL_ICASH();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_TH_BBL_ICASH</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_TH_BBL_ICASH()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['TH-BBL-ICASH','TH-BBL-ICASH','ProductCode','Product Code',1,'ProductCode','',0,'','XXXXX','Product Code']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('TH-BBL-ICASH'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('ProductCode', gSKS_EFT_Bank.W01);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('TH-BBL-ICASH'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('DeliveryMethod', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneAdvice)
                {
                    this.updateVendorFields('BeneAdviceType', gSKS_EFT_VendorPaym.WBeneAdvice, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>