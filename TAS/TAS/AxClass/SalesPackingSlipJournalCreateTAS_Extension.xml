<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesPackingSlipJournalCreateTAS_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(ClassStr(SalesPackingSlipJournalCreate))]
final class SalesPackingSlipJournalCreateTAS_Extension
{
    private CustPaymTermId salesOrderPaymentSKS;
    public SalesTable salesTableSKSCCA;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkNoThrow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether a journal should be created.
    /// </summary>
    /// <returns>
    /// true if a journal should be created; otherwise, false.
    /// </returns>
    /// <remarks>
    /// If a journal is not created, no exception is thrown.A journal is not created if it contains no
    /// lines.
    /// </remarks>
    protected boolean checkNoThrow()
    {
        // CCA-Code moved to this method from super() call to override implementation
        // in SalesPackingSlipJournalCreate class.
        boolean ret = this.linesExists();
        PositiveNumber captureToAuthAmtDiffPct;

        salesTableSKSCCA = this.sourceTable() as SalesTable;
        NoYes isMCREnableOrderCompletion = RetailMCRChannelTable::mcrEnableOrderCompletion(salesTableSKSCCA);

        if (ret && !this.proforma() && !(salesTable.mcrIsCallCenter() && isMCREnableOrderCompletion))
        {
            // CCA-If standard SO packing slip pre-authorization is disabled then
            // temporarily change the payment type to skip call to creditCardDoPreAuthorize()
            // method in the base class and return true;
            SKS_PP_Setup sKS_PP_SetupSKSCCA = SKS_PP_Setup::find();
            if (sKS_PP_SetupSKSCCA.ModCC == NoYes::Yes)
            {                
                if (salesTableSKSCCA.isCreditCardPaymentType() && CustParameters::find().CreditCardPreAuthorization &&
                    SalesTotals_Sales::construct(salesTableSKSCCA, SalesUpdate::All).totalAmount() > 0)
                {
                    if (sKS_PP_SetupSKSCCA.CCDisableStdSOPackSlipPreAuth == NoYes::Yes || salesTableSKSCCA.ProjId ||
                        (sKS_PP_SetupSKSCCA.CCSkipSONewAuthForPartialShip == NoYes::Yes &&
                         salesTableSKSCCA.SKS_CC_SkipAutoAuthDueToPartialShip == NoYes::Yes))
                    {
                        salesOrderPaymentSKS = salesTableSKSCCA.Payment;
                        salesTableSKSCCA.Payment = '';
                    }
                    else
                    {
                        // CCA-Used for '% allowance - capture amount over auth amount' functionality.
                        // Temporarily change the payment type to skip call to creditCardDoPreAuthorize()
                        // method in the base class and execute custom SKS method in our class which
                        // will determine if sales order open amount is greater than auth amount but within tolerance.
                        // See implementation further below.
                        captureToAuthAmtDiffPct = CreditCardAccountSetup::findActive().SKS_CC_CaptureAmtOverAuthAmtPct;
                        if (captureToAuthAmtDiffPct)
                        {
                            salesOrderPaymentSKS = salesTableSKSCCA.Payment;
                            salesTableSKSCCA.Payment = '';
                        }
                    }
                }
            }
        }

        ret = next checkNoThrow();

        // CCA-If standard payment type was temporarily removed to skip
        // SO packing slip pre-authorization in the base class
        // then restore the original payment value here.
        if (salesOrderPaymentSKS && salesTableSKSCCA && !salesTableSKSCCA.Payment)
        {
            salesTableSKSCCA.Payment = salesOrderPaymentSKS;
        }

        // CCA-Used for '% allowance - capture amount over auth amount' functionality.
        // Call custom method to peform pre-auth as needed.
        if (captureToAuthAmtDiffPct)
        {            
            ret = salesTableSKSCCA.sKS_CC_CreditCardDoPreAuthorize(false);
        }
        else
        {
            if (ret && salesTableSKSCCA.mcrIsCallCenter() && !isMCREnableOrderCompletion)
            {
                ret = salesTableSKSCCA.creditCardDoPreAuthorize(false);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>