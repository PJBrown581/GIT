<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_BOA_EPAY_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_BOA_EPAY_CSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_US_BOA_EPAY_CSV extends SKS_EFT_Format
{
    #define.FormatVersion('20220119')
    #define.Separator(',')
    #define.DoubleQuotes('"')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '', int _fieldLength = 0, boolean _addSeparator = true)
    {
        str text;
        ;
        if(_fieldLength > 0)
        {
            text = subStr(_field, 1, _fieldLength);
        }
        else
        {
            text = _field;
        }
        if(_addSeparator)
        {
            if(text != '' && strContains(text, ','))
            {
                text = #DoubleQuotes + text + #DoubleQuotes + #Separator;
            }
            else
            {
                text = text + #Separator;
            }
        }
        return text;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;

        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId      //SKS#DevOps:15522
            {
                // Details
                this.rec_Details(invSKS_EFT_FileDetail);
            }
            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Details</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_Details
    /// </summary>
    /// <param name = "invSKS_EFT_FileDetail">invSKS_EFT_FileDetail</param>
    /// <returns>true</returns>
    boolean rec_Details(SKS_EFT_FileDetail invSKS_EFT_FileDetail)
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        //1     Batch #
        sb.Append(this.wrapField(mSKS_EFT_File.FileNbr));
        
        //2     Vendor Id
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.AccountNum));

        //3     Vendor Name
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName)));

        //4     Payment #
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference)));

        //5     Total Payment Amount
        sb.Append(this.wrapField(num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0)));

        //6     Pay Date        
        sb.Append(this.wrapField(date2str(mSKS_EFT_FileDetail.PaymentTransDate, 123, DateDay::Digits2, DateSeparator::Slash, DateMonth::Digits2, DateSeparator::Slash, DateYear::Digits4)));

        //7     Invoice Number
        sb.Append(this.wrapField(this.CharacterReplacement(invSKS_EFT_FileDetail.InvoiceNumber)));

        //8     Invoice Amount
        sb.Append(this.wrapField(num2str(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0)));

        //9     ePay Comments
        sb.Append(this.wrapField(this.CharacterReplacement(invSKS_EFT_FileDetail.InvoiceTransactionTxt), 0, false));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
              order by mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>