<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_EU_BNP_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_EU_BNP_CSV Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_EU_BNP_CSV Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220608';
        dataContractVersion = '1.0';
        conFormatID = ['EU-BNP-CSV-PL'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'EU - BNP - CSV - Poland',0,'','','EU-BNP-CSV-PL',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',0,0,'',0,0,1,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'EU-BNP-CSV',1,1,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('EU-BNP-CSV-PL'):
                paymSpecList = this.getPaymSpecsMetaData_EU_BNP_CSV_PL();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_EU_BNP_CSV_PL</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_EU_BNP_CSV_PL()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic payments with voluntary split',1,'DOM-SPLITV','','DOM-SPLITV','TRADE PAY',0,'EU-BNP-CSV-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic payments',1,'DOM','','DOM','TRADE PAY',0,'EU-BNP-CSV-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic payments split',1,'SPLIT','','DOM-SPLIT','TRADE PAY',0,'EU-BNP-CSV-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('EU-BNP-CSV-PL'):
                notesList = this.getNotesMetaData_EU_BNP_CSV_PL();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_EU_BNP_CSV_PL</Name>
				<Source><![CDATA[
    private container getNotesMetaData_EU_BNP_CSV_PL()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['EU-BNP-CSV-PL','DOM-SPLITV','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Vat number is stored in the Vendor master > Invoice and delivery tab > Tax exempt number.::-Payment description is stored in the Payment journal > Description field']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-BNP-CSV-PL','DOM','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-BNP-CSV-PL','DOM-SPLIT','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Vat number is stored in the Vendor master > Invoice and delivery tab > Tax exempt number.::-Payment description is stored in the Payment journal > Description field']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('EU-BNP-CSV-PL'):
                validationsList = this.getValidationsMetaData_EU_BNP_CSV_PL();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_EU_BNP_CSV_PL</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_EU_BNP_CSV_PL()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLITV','','Bank IBAN','Cash and bank management > Select bank account > edit > General tab > Identification(group) > IBAN','Field 6 > Payer’s account number NRB format','Bank IBAN',0,'IBAN','','',0,0,1,'28',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLITV','','Bank IBAN','Cash and bank management > Select bank account > edit > General tab > Identification(group) > IBAN','Field 6 > Payer’s account number NRB format','Bank IBAN',0,'BankIBAN','','',0,0,1,'28',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLITV','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','Field 7 > Contractor\'s account number NRB format','IBAN related to vendor','9','BankIBAN','','',0,0,1,'28',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLITV','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Field 8 > Payer details','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLITV','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Field 8 > Payer details','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLITV','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Field 8 > Payer details','Address related to bank','15','WOrdPartyAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLITV','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','Field 8 > Payer details','Address related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLITV','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Field 8 > Payer details','City related to bank','15','WOrdPartyCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLITV','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Field 8 > Payer details','ZipCode related to bank','15','WOrdPartyZipCode','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLITV','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field 9 > Contractor\'s details','Name related to Vendor','16','WBeneName','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLITV','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field 9 > Contractor\'s details','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLITV','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field 9 > Contractor\'s details','Address related to vendor','16','WBeneAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLITV','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field 9 > Contractor\'s details','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLITV','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Field 9 > Contractor\'s details','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLITV','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Field 9 > Contractor\'s details','Vendor city','16','WBeneCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM','','Bank IBAN','Cash and bank management > Select bank account > edit > General tab > Identification(group) > IBAN','Field 6 > Payer’s account number NRB format','Bank IBAN',0,'IBAN','','',0,0,1,'28',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','Field 7 > Contractor\'s account number NRB format','IBAN related to vendor','9','BankIBAN','','',0,0,1,'28',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Field 8 > Payer details','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Field 8 > Payer details','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Field 8 > Payer details','Address related to bank','15','WOrdPartyAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','Field 8 > Payer details','Address related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Field 8 > Payer details','City related to bank','15','WOrdPartyCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Field 8 > Payer details','ZipCode related to bank','15','WOrdPartyZipCode','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field 9 > Contractor\'s details','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field 9 > Contractor\'s details','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field 9 > Contractor\'s details','Address related to vendor','16','WBeneAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field 9 > Contractor\'s details','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Field 9 > Contractor\'s details','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Field 9 > Contractor\'s details','Vendor city','16','WBeneCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLIT','','Bank IBAN','Cash and bank management > Select bank account > edit > General tab > Identification(group) > IBAN','Field 6 > Payer’s account number NRB format','Bank IBAN',0,'IBAN','','',0,0,1,'28',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLIT','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','Field 7 > Contractor\'s account number NRB format','IBAN related to vendor','9','BankIBAN','','',0,0,1,'28',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLIT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Field 8 > Payer details','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLIT','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Field 8 > Payer details','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLIT','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Field 8 > Payer details','Address related to bank','15','WOrdPartyAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLIT','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','Field 8 > Payer details','Address related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLIT','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Field 8 > Payer details','City related to bank','15','WOrdPartyCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLIT','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Field 8 > Payer details','ZipCode related to bank','15','WOrdPartyZipCode','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLIT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field 9 > Contractor\'s details','Name related to Vendor','16','WBeneName','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLIT','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field 9 > Contractor\'s details','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLIT','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field 9 > Contractor\'s details','Address related to vendor','16','WBeneAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLIT','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field 9 > Contractor\'s details','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLIT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Field 9 > Contractor\'s details','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-CSV-PL','DOM-SPLIT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Field 9 > Contractor\'s details','Vendor city','16','WBeneCity','','',0,0,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV-PL','EU-BNP-CSV-PL','PaymSpecFields','DOM-WSPLT','SettlementNo','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV-PL','EU-BNP-CSV-PL','PaymSpecFields','DOM-WOSPLT','SettlementNo','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatNotes','DOM-WSPLT','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatNotes','DOM-WOSPLT','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-WSPLT','0','AccountNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-WSPLT','9','AccountNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-WSPLT','0','AccountNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-WSPLT','9','AccountNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-WSPLT','15','WOrdPartyName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-WSPLT','15','WOrdPartyCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-WSPLT','15','WOrdPartyAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-WSPLT','15','WOrdPartyAddr2']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-WSPLT','15','WOrdPartyCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-WSPLT','15','WOrdPartyZipCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-WSPLT','16','WBeneName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-WSPLT','16','WBeneCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-WSPLT','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-WSPLT','16','WBeneAddr2']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-WSPLT','16','WBeneZipPostal']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-WSPLT','16','WBeneCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-SPLITV','0','BankIBAN']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-SPLITV','9','AccountNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM','0','AccountNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM','9','AccountNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM','0','BankIBAN']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-SPLIT','0','AccountNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-SPLIT','9','AccountNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','EU-BNP-CSV-PL','FormatValidations','DOM-SPLIT','0','BankIBAN']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','*','FormatValidations','*','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-CSV','*','FormatLookup','*','*','']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('EU-BNP-CSV-PL'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_EU_BNP_CSV_PL();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_EU_BNP_CSV_PL</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_EU_BNP_CSV_PL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-BNP-CSV-PL','EU-BNP-CSV-PL','PayBankRefNum','Payers bank reference number',1,'PayBankRefNum','',1,'','XXXXXXXX','Payers bank reference number']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('EU-BNP-CSV-PL'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('PayBankRefNum', gSKS_EFT_Bank.W01);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>