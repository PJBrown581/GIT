<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_DK_NETS_LS_DEBTORINFO_AR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_DK_NETS_LS_DEBTORINFO_AR   extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_DK_NETS_LS_DEBTORINFO_AR   extends SKS_EFT_Format
{
    #define.FormatVersion('20230403')
    AmountMST payAmount_580;
    AmountMST payAmount_585;    
    str paymentDate, payAmount;
    str taxNum;
    int debtor;
    SKS_EB_BankTable    lSKS_EB_BankTable;
    TransDate previousDate;
    boolean firstRec = true;
    SKS_EFT_FileDetail sKS_EFT_FileDetail;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        while(mSKS_EFT_FileDetail)
        {
            this.getSKS_EFTAR_Bank();

            if(firstRec)
            {
                this.rec_DataDeliveryStart();//SKS_VSTS_14643
                firstRec = false;
            }

            if(previousDate !=  mSKS_EFT_FileDetail.PaymentTransDate)//SKS_VSTS_14643
            {
                this.rec_Creditor();
                previousDate =  mSKS_EFT_FileDetail.PaymentTransDate;
            }

            this.rec_CollectionOrDisbursement();

            select count(RecId) from  sKS_EFT_FileDetail
                order by sKS_EFT_FileDetail.PaymentTransDate asc
                where sKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                sKS_EFT_FileDetail.PaymentTransDate == previousDate &&
                sKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                sKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary;//SKS_VSTS_14643

            if(debtor == sKS_EFT_FileDetail.RecId)//SKS_VSTS_14643
            {
                this.rec_DataDeliveryEnd();
                
                debtor = 0;
                payAmount_580 = 0;
                payAmount_585 = 0;
            }
            next mSKS_EFT_FileDetail;           
            sKS_EFT_FileDetail.clear();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_DataDeliveryStart</Name>
				<Source><![CDATA[
    public boolean rec_DataDeliveryStart()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                                 Position      Size
        // 1    Record type                                             (  01-  03)      3
        // 2    Filler                                                  (  04-  08)      5
        // 3    Filler                                                  (  09-  23)      15
        // 4    Filler                                                  (  24-  30)      7
        // 5    Data Supplier identification                            (  31-  36)      6
        // 6    Delivery type                                           (  37-  38)      2
        // 7    Year                                                    (  39-  40)      2
        // 8    Month                                                   (  41-  42)      2
        // 9    Date                                                    (  43-  44)      2
        // 10   Filler                                                  (  45-  45)      1
        // 11   Filler/TEST                                             (  46-  49)      4
        // 12   Filler                                                  (  50-  50)      1
        // 13   Filler                                                  (  51-  53)      3
        // 14   Filler                                                  (  54-  62)      9
        // 15   Data Supplier no.                                       (  63-  70)      8
        // 16   Check CVR no.                                           (  71-  71)      1
        // 17   Filler                                                  (  72-  80)      9        
        //------------------------------------------------------------------------------------------------------

        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        BankAccountTable   lBankAccountTable;
        SKS_PP_Bank         lSKS_PP_Bank;
        DirPartyTable       lDirPartyTable;
        CustTable           lCustTable;
        str todayDate;


        //Nbr   Content                                                 
        // 1    Record type                                             01-  03
        sb.Append('000');

        // 2    Filler                                                  04-  08
        sb.Append(SKS_PP_StringFormats::strFill(5, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 3    Filler                                                  09-  23
        sb.Append('000000000000000');

        // 4    Filler                                                  24-  30
        sb.Append(SKS_PP_StringFormats::strFill(7, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        if(lBankAccountTable.AccountID != mSKS_EFT_FileDetail.BankAccountId)
        {
            // Get Bank account
            lBankAccountTable = BankAccountTable::find(mSKS_EFT_FileDetail.BankAccountId);
        }

        // 5    Data Supplier identification                            31-  36
        sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::space, SKS_PP_FillSide::Right));   //SKS_VSTS_14592

        // 6    Delivery type                                           37-  38
        sb.Append('40');

        todayDate = date2str(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()), 321, DateDay::Digits2, DateSeparator::None, DateMonth::Digits2, DateSeparator::None, DateYear::Digits2);
        
        // 7    Year                                                    39-  40
        sb.Append(subStr(todayDate, 1, 2));

        // 8    Month                                                   41-  42
        sb.Append(subStr(todayDate, 3, 2));

        // 9    Date                                                    43-  44
        sb.Append(subStr(todayDate, 5, 2));

        // 10   Filler                                                  45-  45
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::space, SKS_PP_FillSide::Right));

        // 11   Filler/TEST                                                  46-  49
        str fillerTest;

        fillerTest = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('FillerTest', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        sb.Append(SKS_PP_StringFormats::strFill(4, fillerTest, SKS_PP_FillCharacter::space, SKS_PP_FillSide::Right));

        // 12   Filler                                                  50-  50
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::space, SKS_PP_FillSide::Right));

        // 13   Filler                                                  51-  53
        
        lCustTable = CustTable::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum);

        select firstonly * from lDirPartyTable where lDirPartyTable.RecId == lCustTable.Party;
        if(lDirPartyTable.LanguageId == 'en-us')
        {
            sb.Append(SKS_PP_StringFormats::strFill(3, 'ENG', SKS_PP_FillCharacter::space, SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::space, SKS_PP_FillSide::Right));
        }
        
        // 14   Filler                                                  54-  62
        sb.Append(SKS_PP_StringFormats::strFill(9, '', SKS_PP_FillCharacter::space, SKS_PP_FillSide::Right));

        // 15   Data Supplier no.                                       63-  70
        select firstonly lSKS_PP_Bank where lSKS_PP_Bank.BankAccountId == lBankAccountTable.AccountId
            join lSKS_EB_BankTable where lSKS_EB_BankTable.BankAccountID == lSKS_PP_Bank.BankID;

        sb.Append(SKS_PP_StringFormats::strFill(8, lSKS_EB_BankTable.CreditorNumber3, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));  //SKS_VSTS_14592

        // 16   Check CVR no.                                           71-  71
        sb.Append('X');

        // 17   Filler                                                  72-  80
        sb.Append(SKS_PP_StringFormats::strFill(9, '', SKS_PP_FillCharacter::space, SKS_PP_FillSide::Right));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Creditor</Name>
				<Source><![CDATA[
    public boolean rec_Creditor()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                                 Position      Size
        // 1    Record type                                             (  01-  03)      3
        // 2    Creditor number                                         (  04-  08)      5
        // 3    Filler                                                  (  09-  23)      15
        // 4    Year                                                    (  24-  25)      2
        // 5    Month                                                   (  26-  27)      2
        // 6    Date                                                    (  28-  29)      2
        // 7    Filler                                                  (  30-  43)      14
        // 8    Filler                                                  (  44-  80)      37
        //------------------------------------------------------------------------------------------------------

        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        SKS_PP_Bank         lSKS_PP_Bank;
        BankAccountTable   lBankAccountTable;

        //Nbr   Content
        // 1    Record type                                             01-  03
        sb.Append('001');

        // 2    Creditor number                                         04-  08
        lBankAccountTable = BankAccountTable::find(mSKS_EFT_FileDetail.BankAccountId);

        select firstonly lSKS_PP_Bank where lSKS_PP_Bank.BankAccountId == lBankAccountTable.AccountId
            join lSKS_EB_BankTable where lSKS_EB_BankTable.BankAccountID == lSKS_PP_Bank.BankID;

        sb.Append(SKS_PP_StringFormats::strFill(5, lSKS_EB_BankTable.CreditorNumber4, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));  //SKS_VSTS_14592

        // 3    Filler                                                  09-  23
        sb.Append('000000000000000');

        paymentDate = SKS_PP_StringFormats::strDateYYMMDD(mSKS_EFT_FileDetail.PaymentTransDate, DateSeparator::None);

        // 4    Year                                                    24-  25
        sb.Append(subStr(paymentDate, 1, 2));

        // 5    Month                                                   26-  27
        sb.Append(subStr(paymentDate, 3, 2));

        // 6    Date                                                    28-  29
        sb.Append(subStr(paymentDate, 5, 2));

        // 7    Filler                                                  30-  43
        sb.Append(SKS_PP_StringFormats::strFill(14, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 8    Filler                                                  44-  80
        sb.Append(SKS_PP_StringFormats::strFill(37, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));



        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_CollectionOrDisbursement</Name>
				<Source><![CDATA[
    public boolean rec_CollectionOrDisbursement()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                                 Position      Size
        // 1    Record type                                             (  01-  03)      3
        // 2    Creditor number                                         (  04-  08)      5
        // 3    Customer no.                                            (  09-  23)      15
        // 4    Filler                                                  (  24-  45)      22
        // 5    Amount                                                  (  46-  56)      11
        // 6    Filler                                                  (  57-  80)      24
        //------------------------------------------------------------------------------------------------------

        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str compositeKey, acctNum;          //SKS#DevOps:15356
        SKS_PP_Bank         lSKS_PP_Bank;
        BankAccountTable   lBankAccountTable;

        //Nbr   Content
        debtor++;//SKS_VSTS_14643

        // 1    Record type                                             01-  03
        if(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur > 0)
        {
            sb.Append('580');
            payAmount_580 += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        }
        else
        {
            sb.Append('585');
            payAmount_585 += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        }
        // 2    Creditor number                                         04-  08
        lBankAccountTable = BankAccountTable::find(mSKS_EFT_FileDetail.BankAccountId);

        select firstonly lSKS_PP_Bank where lSKS_PP_Bank.BankAccountId == lBankAccountTable.AccountId
            join lSKS_EB_BankTable where lSKS_EB_BankTable.BankAccountID == lSKS_PP_Bank.BankID;

        sb.Append(SKS_PP_StringFormats::strFill(5, lSKS_EB_BankTable.CreditorNumber4, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 3    Customer no.                                            09-  23
        acctNum = SKS_PP_StringFormats::strFill(15, mSKS_EFT_FileDetail.AccountNum, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left); //SKS#DevOps:15356
        sb.Append(acctNum);//SKS_VSTS_14581

        // 4    Filler                                                  24-  45
        sb.Append(SKS_PP_StringFormats::strFill(22, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 5    Amount                                                  46-  56
        payAmount = SKS_PP_StringFormats::strMoney(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur), 11);
        sb.Append(payAmount);

        // 6    Filler                                                  57-  80
        sb.Append(SKS_PP_StringFormats::strFill(24, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        compositeKey = paymentDate + acctNum + payAmount;           //SKS#DevOps:15356

        this.addFieldElement(gXmlNodeDetailFieldValues, 'CompositeKey', compositeKey, mSKS_EFT_FileDetail.RecId);       

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_DataDeliveryEnd</Name>
				<Source><![CDATA[
    public boolean rec_DataDeliveryEnd()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                                 Position      Size
        // 1    Record type                                             (  01-  03)      3
        // 2    Creditor no.                                            (  04-  08)      5
        // 3    Filler                                                  (  09-  23)      15
        // 4    Number of debtors                                       (  24-  30)      7
        // 5    Amount - collection                                     (  31-  43)      13
        // 6    Amount – disbursement                                   (  44-  56)      13
        // 7   Filler                                                   (  57-  80)      24
        //------------------------------------------------------------------------------------------------------
        
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        SKS_PP_Bank         lSKS_PP_Bank;
        BankAccountTable   lBankAccountTable;

        //Nbr   Content
        // 1    Record type                                             01-  03
        sb.Append('999');

        // 2    Creditor no.                                            04-  08      
        lBankAccountTable = BankAccountTable::find(mSKS_EFT_FileDetail.BankAccountId);

        select firstonly lSKS_PP_Bank where lSKS_PP_Bank.BankAccountId == lBankAccountTable.AccountId
            join lSKS_EB_BankTable where lSKS_EB_BankTable.BankAccountID == lSKS_PP_Bank.BankID;

        sb.Append(SKS_PP_StringFormats::strFill(5, lSKS_EB_BankTable.CreditorNumber4, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 3    Filler                                                  09-  23
        sb.Append('999999999999999');

        // 4    Number of debtors                                       24-  30
        sb.Append(SKS_PP_StringFormats::strFill(7, num2Str(debtor,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 5    Amount - collection                                     31-  43
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(payAmount_580), 13));

        // 6    Amount – disbursement                                   44-  56
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(payAmount_585), 13));

        // 7   Filler                                                   57-  80
        sb.Append(SKS_PP_StringFormats::strFill(24, '', SKS_PP_FillCharacter::space, SKS_PP_FillSide::Right));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>