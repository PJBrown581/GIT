<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_CY_HELLENICBANK_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_CY_HELLENICBANK_XML Class
/// </summary>
class SKS_EFT_Format_CY_HELLENICBANK_XML extends SKS_EFT_Format_ISO_20022_001001003_FD

{
    #define.FormatVersion('20221212')
    #define.SEPA('SEPA')
    #define.NURG('NURG')
    #define.SDVA('SDVA')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_PmtId</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_CdtTrfTxInf_PmtId
    /// </summary>
    /// <param name = "_nodeCdtTrfTxInf">_nodeCdtTrfTxInf</param>
    protected void node_CdtTrfTxInf_PmtId(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.28: PmtId
        //              2.30: EndToEndId
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodePmtId;
    
        //          2.28: PmtId
        nodePmtId = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('PmtId'));

        //              2.30: EndToEndId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'InstrId', SKS_PP_StringFormats::strRight(mSKS_EFT_FileDetail.PaymentReference, 35));
    
        //              2.30: EndToEndId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId', SKS_PP_StringFormats::strRight(mSKS_EFT_FileDetail.PaymentReference, 35));
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Id</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_PmtInf_Dbtr_Id
    /// </summary>
    /// <param name = "_nodeDbtr">_nodeDbtr</param>
    protected void node_PmtInf_Dbtr_Id(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          9.1.12: Id
        //              9.1.13: OrgId
      
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePrvtId;
        XmlElement nodeOrgId;
       
    
        if( mSKS_EFT_Bank.WOrdPartySWIFTNo != '')
        {
            //          9.1.12: PrvtId
            nodePrvtId = _nodeDbtr.appendChild(xmlDoc.createElement('PrvtId'));
    
            //              9.1.13: OrgId
            nodeOrgId = nodePrvtId.appendChild(xmlDoc.createElement('OrgId'));
    
    
            //                  9.1.14: BICOrBEI
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOrgId, 'BICOrBEI', mSKS_EFT_Bank.WOrdPartySWIFTNo, 11);
        }
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl_Cd</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_PmtInf_PmtTpInf_SvcLvl_Cd
    /// </summary>
    /// <param name = "_nodeSvcLvl">_nodeSvcLvl</param>
    protected void node_PmtInf_PmtTpInf_SvcLvl_Cd(XmlElement _nodeSvcLvl)
    {
        //------------------------------------------------------------------------------------------------------
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
        str value;

        switch(mSKS_EFT_FileDetail.PaymSpec)
        {
            case #SEPA:
                value = 'SEPA';
                break;
            case #NURG:
                value = 'NURG';
                break;
            case #SDVA:
                value = 'SDVA';
                break;
        }


        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Cd', value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_Id</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_GrpHdr_InitgPty_Id
    /// </summary>
    /// <param name = "_nodeInitgPty">_nodeInitgPty</param>
    protected void node_GrpHdr_InitgPty_Id(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          9.1.12: Id
        //              9.1.13: OrgId
        //                  9.1.15: Othr
        //                      9.1.1.16: Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePrvtId;
        XmlElement nodeOrgId;
        XmlElement nodeOther;
        str InitgPtyId;

        InitgPtyId = SKS_EFT_Format::getCodelookupvalue('InitgPtyId', mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookupBank);
    
        this.getSKS_EFT_FileFormatPaymSpec();
    
        if(InitgPtyId != '')
        {
            //          9.1.12: PrvtId
            nodePrvtId = _nodeInitgPty.appendChild(xmlDoc.createElement('PrvtId'));
    
            //              9.1.13: OrgId
            nodeOrgId = nodePrvtId.appendChild(xmlDoc.createElement('OrgId'));
    
            //                  9.1.15: Other
            nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
            //                      9.1.1.16: Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', this.CharacterReplacement(InitgPtyId), 15);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_CtgyPurp</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_PmtInf_PmtTpInf_CtgyPurp
    /// </summary>
    /// <param name = "_nodePmftTpInf">_nodePmftTpInf</param>
    protected void node_PmtInf_PmtTpInf_CtgyPurp(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.14: CtgyPurp
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCtgyPurp;
        str value;

        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CtgyPurp', mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookup));

        if(value)
        {
            //          2.14: CtgyPurp
            nodeCtgyPurp = _nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
            //              2.15: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', value, 4);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr_Nm</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_CdtTrfTxInf_Cdtr_Nm
    /// </summary>
    /// <param name = "_nodeCdtr">_nodeCdtr</param>
    protected void node_CdtTrfTxInf_Cdtr_Nm(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.79: Cdtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
        str name = mSKS_EFT_FileDetail.AccountName;

        if(mRemittanceName != '')
        {
            name = mRemittanceName;
        }
        //              Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', this.CharacterReplacement(name), 35);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_PmtInf_Cdtr_PstlAdr
    /// </summary>
    /// <param name = "_nodeCdtr">_nodeCdtr</param>
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
        
        this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrLine1, mRemittanceZipCode, mRemittanceCity, 0, mRemittanceAdrLine2, mRemittanceState);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_CdtTrfTxInf_CdtrAcct
    /// </summary>
    /// <param name = "_nodeCdtTrfTxInf">_nodeCdtTrfTxInf</param>
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  Othr
        //                  Id
        //              Tp/Ptry
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
        
        if(mSKS_EFT_FileDetail.DepBankIBAN != '')
        {
            //          2.80: CdtrAcct
            nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
            //              Id
            nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));

            //                  IBAN
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN, 34);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //                  BIC
        //                  PstlAdr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;

        if(mSKS_EFT_FileDetail.DepSwiftNo)
        {
            //          2.77: CdtrAgt
            nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));
    
            //              FinInstnId
            nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
            //                  BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 11, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_ChrgBr</Name>
				<Source><![CDATA[
    /// <summary>
    ///node_PmtInf_ChrgBr
    /// </summary>
    /// <param name = "_nodePmtInf">_nodePmtInf</param>
    protected void node_PmtInf_ChrgBr(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.24 ChrgBr
        //------------------------------------------------------------------------------------------------------
        // Override in format if element is needed
    
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'ChrgBr', this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ChrgBr', mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookup)), 0, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_BtchBookg</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_PmtInf_BtchBookg
    /// </summary>
    /// <param name = "_nodePmtInf">_nodePmtInf</param>
    protected void node_PmtInf_BtchBookg(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.23 BtchBookg
        //------------------------------------------------------------------------------------------------------
        
        //      2.23 BtchBookg
        if(strUpr(this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Btchbkg', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank))) == 'N')
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'BtchBookg', 'false');
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'BtchBookg', 'true');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Nm</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_PmtInf_Dbtr_Nm
    /// </summary>
    /// <param name = "_nodeDbtr">_nodeDbtr</param>
    protected void node_PmtInf_Dbtr_Nm(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          Nm
        //------------------------------------------------------------------------------------------------------

        //          Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeDbtr, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName), 35, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_PmtInf_DbtrAcct
    /// </summary>
    /// <param name = "_nodePmtInf">_nodePmtInf</param>
    protected void node_PmtInf_DbtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: DbtrAcct
        //          Id
        //              IBAN
        //              Othr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;

        if(mSKS_EFT_FileDetail.BankBankIBAN)
        {
            //      2.20: DbtrAcct
            nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));

            //          Id
            nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));

            //              IBAN
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN', mSKS_EFT_FileDetail.BankBankIBAN, 34);

            //              Ccy
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcct, 'Ccy', mSKS_EFT_FileDetail.CurrencyCode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAgt</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_PmtInf_DbtrAgt
    /// </summary>
    /// <param name = "_nodePmtInf">_nodePmtInf</param>
    protected void node_PmtInf_DbtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.21: DbtrAgt
        //          FinInstnId
        //              BIC
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
    
        if(mSKS_EFT_FileDetail.BankBankSwiftNo)
        {
            //      2.21: DbtrAgt
            nodeDbtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAgt'));
    
            //          FinInstnId
            nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
            //              BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.BankBankSwiftNo, 11, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_CdtTrfTxInf_RmtInf
    /// </summary>
    /// <param name = "_nodeCdtTrfTxInf">_nodeCdtTrfTxInf</param>
    protected void node_CdtTrfTxInf_RmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeRmtInf;
        str        invNumbers;
    
        invNumbers = this.getInvoiceNbrs();
        if(invNumbers)
        {
            //          2.98: RmtInf
            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
    
            //              2.99: Ustrd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    /// <summary>
    /// selectPaymentRecords
    /// </summary>
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
            join mSKS_EFT_FileDetail_BenBank
            join mSKS_EFT_FileDetail_Intermediary
              order by mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_BenBank.RefRecId &&
            mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_Intermediary.RefRecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>