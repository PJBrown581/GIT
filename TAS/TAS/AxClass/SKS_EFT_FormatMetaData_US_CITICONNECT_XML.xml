<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_CITICONNECT_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_CITICONNECT_XML Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_CITICONNECT_XML Extends SKS_EFT_Format_MetaData
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230524';
        dataContractVersion = '1.0';
        conFormatID = ['US-CITICONNECT-XML-EC','US-CITICONNECT-XML-CR','US-CITICONNECT-XML-DO','US-CITICONNECT-XML-SV','US-CITICONNECT-XML-GT','US-CITICONNECT-XML-PR','US-CITICONNECT-XML-AR','US-CITICONNECT-XML-CL','US-CITICONNECT-XML-CO','US-CITICONNECT-XML-PE','US-CITICONNECT-XML-CN','US-CITICONNECT-XML-CA','US-CITICONNECT-XML-US','US-CITICONNECT-XML-AT','US-CITICONNECT-XML-BE','US-CITICONNECT-XML-DE','US-CITICONNECT-XML-FI','US-CITICONNECT-XML-FR','US-CITICONNECT-XML-IE','US-CITICONNECT-XML-LU','US-CITICONNECT-XML-NL','US-CITICONNECT-XML-GB','US-CITICONNECT-XML-SE','US-CITICONNECT-XML-DK','US-CITICONNECT-XML-IT','US-CITICONNECT-XML-NO','US-CITICONNECT-XML-KR','US-CITICONNECT-XML-NZ','US-CITICONNECT-XML-TW','US-CITICONNECT-XML-JO','US-CITICONNECT-XML-AE','US-CITICONNECT-XML-MX','US-CITICONNECT-XML-AU','US-CITICONNECT-XML-BR','US-CITICONNECT-XML-CZ','US-CITICONNECT-XML-HK','US-CITICONNECT-XML-MO','US-CITICONNECT-XML-HN','US-CITICONNECT-XML-HU','US-CITICONNECT-XML-ID','US-CITICONNECT-XML-IN','US-CITICONNECT-XML-JP','US-CITICONNECT-XML-KE','US-CITICONNECT-XML-MY','US-CITICONNECT-XML-PA','US-CITICONNECT-XML-PH','US-CITICONNECT-XML-PL','US-CITICONNECT-XML-RO','US-CITICONNECT-XML-RU','US-CITICONNECT-XML-SG','US-CITICONNECT-WL-XML-AG','US-CITICONNECT-WL-XML-MO','US-CITICONNECT-WL-XML-FJ','US-CITICONNECT-WL-XML-BO','US-CITICONNECT-WL-XML-IS','US-CITICONNECT-XML-SK','US-CITICONNECT-XML-TH','US-CITICONNECT-XML-TR','US-CITICONNECT-XML-UA','US-CITICONNECT-XML-UY','US-CITICONNECT-XML-VE','US-CITICONNECT-XML-ZA','US-CITICONNECT-WL-XML-AU','US-CITICONNECT-WL-XML-CA','US-CITICONNECT-WL-XML-SG','US-CITICONNECT-WL-XML-GB','US-CITICONNECT-WL-XML-JM','US-CITICONNECT-WL-XML-US','US-CITICONNECT-WL-XML-AL','US-CITICONNECT-WL-XML-DZ','US-CITICONNECT-WL-XML-AO','US-CITICONNECT-WL-XML-AT','US-CITICONNECT-WL-XML-BS','US-CITICONNECT-WL-XML-BH','US-CITICONNECT-WL-XML-BD','US-CITICONNECT-WL-XML-BY','US-CITICONNECT-WL-XML-BE','US-CITICONNECT-WL-XML-BJ','US-CITICONNECT-WL-XML-BW','US-CITICONNECT-WL-XML-BR','US-CITICONNECT-WL-XML-BN','US-CITICONNECT-WL-XML-BG','US-CITICONNECT-WL-XML-BF','US-CITICONNECT-WL-XML-KH','US-CITICONNECT-WL-XML-CM','US-CITICONNECT-WL-XML-TD','US-CITICONNECT-WL-XML-CL','US-CITICONNECT-WL-XML-CN','US-CITICONNECT-WL-XML-CO','US-CITICONNECT-WL-XML-CD','US-CITICONNECT-WL-XML-CR','US-CITICONNECT-WL-XML-CI','US-CITICONNECT-WL-XML-HR','US-CITICONNECT-WL-XML-CY','US-CITICONNECT-WL-XML-CZ','US-CITICONNECT-WL-XML-DK','US-CITICONNECT-WL-XML-EG','US-CITICONNECT-WL-XML-EE','US-CITICONNECT-WL-XML-ET','US-CITICONNECT-WL-XML-FI','US-CITICONNECT-WL-XML-FR','US-CITICONNECT-WL-XML-GA','US-CITICONNECT-WL-XML-GE','US-CITICONNECT-WL-XML-DE','US-CITICONNECT-WL-XML-GH','US-CITICONNECT-WL-XML-GR','US-CITICONNECT-WL-XML-GT','US-CITICONNECT-WL-XML-GW','US-CITICONNECT-WL-XML-GY','US-CITICONNECT-WL-XML-HK','US-CITICONNECT-WL-XML-HU','US-CITICONNECT-WL-XML-IN','US-CITICONNECT-WL-XML-ID','US-CITICONNECT-WL-XML-IL','US-CITICONNECT-WL-XML-IT','US-CITICONNECT-WL-XML-JP','US-CITICONNECT-WL-XML-JO','US-CITICONNECT-WL-XML-KZ','US-CITICONNECT-WL-XML-KE','US-CITICONNECT-WL-XML-KW','US-CITICONNECT-WL-XML-LV','US-CITICONNECT-WL-XML-LB','US-CITICONNECT-WL-XML-LU','US-CITICONNECT-WL-XML-MY','US-CITICONNECT-WL-XML-MT','US-CITICONNECT-WL-XML-MX','US-CITICONNECT-WL-XML-MD','US-CITICONNECT-WL-XML-MA','US-CITICONNECT-WL-XML-MZ','US-CITICONNECT-WL-XML-NA','US-CITICONNECT-WL-XML-NL','US-CITICONNECT-WL-XML-NZ','US-CITICONNECT-WL-XML-NE','US-CITICONNECT-WL-XML-NG','US-CITICONNECT-WL-XML-NO','US-CITICONNECT-WL-XML-OM','US-CITICONNECT-WL-XML-PK','US-CITICONNECT-WL-XML-PG','US-CITICONNECT-WL-XML-PE','US-CITICONNECT-WL-XML-PH','US-CITICONNECT-WL-XML-PL','US-CITICONNECT-WL-XML-PT','US-CITICONNECT-WL-XML-QA','US-CITICONNECT-WL-XML-IE','US-CITICONNECT-WL-XML-RO','US-CITICONNECT-WL-XML-RU','US-CITICONNECT-WL-XML-SA','US-CITICONNECT-WL-XML-SK','US-CITICONNECT-WL-XML-ZA','US-CITICONNECT-WL-XML-KR','US-CITICONNECT-WL-XML-ES','US-CITICONNECT-WL-XML-LK','US-CITICONNECT-WL-XML-SE','US-CITICONNECT-WL-XML-CH','US-CITICONNECT-WL-XML-TW','US-CITICONNECT-WL-XML-TZ','US-CITICONNECT-WL-XML-TH','US-CITICONNECT-WL-XML-TG','US-CITICONNECT-WL-XML-TN','US-CITICONNECT-WL-XML-TR','US-CITICONNECT-WL-XML-UG','US-CITICONNECT-WL-XML-AE','US-CITICONNECT-WL-XML-VN','US-CITICONNECT-WL-XML-ZM','US-CITICONNECT-WL-XML-AZ','US-CITICONNECT-WL-XML-BM','US-CITICONNECT-WL-XML-DO','US-CITICONNECT-WL-XML-HN','US-CITICONNECT-WL-XML-LA','US-CITICONNECT-WL-XML-LI','US-CITICONNECT-WL-XML-LT','US-CITICONNECT-WL-XML-MM','US-CITICONNECT-WL-XML-MN','US-CITICONNECT-WL-XML-MR','US-CITICONNECT-WL-XML-MU','US-CITICONNECT-WL-XML-MW','US-CITICONNECT-WL-XML-RW','US-CITICONNECT-WL-XML-SN','US-CITICONNECT-WL-XML-SI','US-CITICONNECT-WL-XML-SZ','US-CITICONNECT-WL-XML-TT','US-CITICONNECT-WL-XML-UY','US-CITICONNECT-WL-XML-NP','US-CITICONNECT-WL-XML-RS','US-CITICONNECT-WL-XML-SC','US-CITICONNECT-WL-XML-PY','US-CITICONNECT-WL-XML-UZ','US-CITICONNECT-WL-XML-MC','US-CITICONNECT-WL-XML-AM','US-CITICONNECT-WL-XML-ME','US-CITICONNECT-XML-TN','US-CITICONNECT-XML-PY','US-CITICONNECT-XML-IL','US-CITICONNECT-WL-PPW-XML','US-CITICONNECT-WL-XML-BA','US-CITICONNECT-WL-XML-BB','US-CITICONNECT-WL-XML-MK','US-CITICONNECT-XML-VN','US-CITICONNECT-WL-XML-MG','US-CITICONNECT-WL-XML-ML','US-CITICONNECT-WL-XML-KM','US-CITICONNECT-WL-XML-HT', 'US-CITICONNECT-WL-XML-GM', 'US-CITICONNECT-WL-XML-NI', 'US-CITICONNECT-WL-XML-MV', 'US-CITICONNECT-WL-XML-GN'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'US-CitiConnect-Ecuador-ISO20022',0,'','','US-CITICONNECT-XML-EC',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'US-CitiConnect-Costa Rica-ISO20022',0,'','','US-CITICONNECT-XML-CR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'US-CitiConnect-Dominican Republic-ISO20022',0,'','','US-CITICONNECT-XML-DO',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'US-CitiConnect-El Salvador-ISO20022',0,'','','US-CITICONNECT-XML-SV',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'US-CitiConnect-Guatemala-ISO20022',0,'','','US-CITICONNECT-XML-GT',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'US-CitiConnect-Puerto Rico-ISO20022',0,'','','US-CITICONNECT-XML-PR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'US-CitiConnect-Argentina-ISO20022',0,'','','US-CITICONNECT-XML-AR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'US-CitiConnect-Chile-ISO20022',0,'','','US-CITICONNECT-XML-CL',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'US-CitiConnect-Columbia-ISO20022',0,'','','US-CITICONNECT-XML-CO',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'US-CitiConnect-Peru-ISO20022',0,'','','US-CITICONNECT-XML-PE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-China-ISO20022',0,'','','US-CITICONNECT-XML-CN',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Canada - ISO20022',0,'','','US-CITICONNECT-XML-CA',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,1,'','','','',0,'','','','',0,'US-CitiConnect-United States-ISO20022',0,'','','US-CITICONNECT-XML-US',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-Austria-ISO20022',0,'','','US-CITICONNECT-XML-AT',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-Belgium-ISO20022',0,'','','US-CITICONNECT-XML-BE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-Germany-ISO20022',0,'','','US-CITICONNECT-XML-DE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-Finland-ISO20022',0,'','','US-CITICONNECT-XML-FI',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-France-ISO20022',0,'','','US-CITICONNECT-XML-FR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-Ireland-ISO20022',0,'','','US-CITICONNECT-XML-IE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-Luxembourg-ISO20022',0,'','','US-CITICONNECT-XML-LU',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-Netherlands-ISO20022',0,'','','US-CITICONNECT-XML-NL',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-United Kingdom-ISO20022',0,'','','US-CITICONNECT-XML-GB',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-Sweden-ISO20022',0,'','','US-CITICONNECT-XML-SE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-Denmark-ISO20022',0,'','','US-CITICONNECT-XML-DK',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-Italy-ISO20022',0,'','','US-CITICONNECT-XML-IT',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-Norway-ISO20022',0,'','','US-CITICONNECT-XML-NO',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-South Korea-ISO20022',0,'','','US-CITICONNECT-XML-KR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-New Zealand-ISO20022',0,'','','US-CITICONNECT-XML-NZ',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-Taiwan-ISO20022',0,'','','US-CITICONNECT-XML-TW',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-Jordan-ISO20022',0,'','','US-CITICONNECT-XML-JO',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-United Arab Emirates-ISO20022',0,'','','US-CITICONNECT-XML-AE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',0,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Mexico - ISO20022',0,'','','US-CITICONNECT-XML-MX',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-Australia-ISO20022',0,'','','US-CITICONNECT-XML-AU',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Brazil - ISO20022',0,'','','US-CITICONNECT-XML-BR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','',0,0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Czech Republic - ISO20022',0,'','','US-CITICONNECT-XML-CZ',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Hong Kong - ISO20022',0,'','','US-CITICONNECT-XML-HK',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','',0,0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Maca0 - ISO20022',0,'','','US-CITICONNECT-XML-MO',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','',0,0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Hounduras - ISO20022',0,'','','US-CITICONNECT-XML-HN',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','',0,0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Hungary - ISO20022',0,'','','US-CITICONNECT-XML-HU',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Indonesia - ISO20022',0,'','','US-CITICONNECT-XML-ID',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','',0,0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - India - ISO20022',0,'','','US-CITICONNECT-XML-IN',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Japan - ISO20022',0,'','','US-CITICONNECT-XML-JP',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,1,1,'','','','',0,'','','','',0,'US - CitiConnect - Kenya - ISO20022',0,'','','US-CITICONNECT-XML-KE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Malaysia - ISO20022',0,'','','US-CITICONNECT-XML-MY',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Panama - ISO20022',0,'','','US-CITICONNECT-XML-PA',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','',0,0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Philippines - ISO20022',0,'','','US-CITICONNECT-XML-PH',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','',0,0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,1,1,'','','','',0,'','','','',0,'US - CitiConnect - Poland - ISO20022',0,'','','US-CITICONNECT-XML-PL',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Romania - ISO20022',0,'','','US-CITICONNECT-XML-RO',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Russia - ISO20022',0,'','','US-CITICONNECT-XML-RU',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Singapore - ISO20022',0,'','','US-CITICONNECT-XML-SG',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','',0,0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Antigua-ISO20022',0,'','','US-CITICONNECT-WL-XML-AG',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Macao-ISO20022',0,'','','US-CITICONNECT-WL-XML-MO',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Fiji-ISO20022',0,'','','US-CITICONNECT-WL-XML-FJ',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Bolivia-ISO20022',0,'','','US-CITICONNECT-WL-XML-BO',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Iceland-ISO20022',0,'','','US-CITICONNECT-WL-XML-IS',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Slovakia - ISO20022',0,'','','US-CITICONNECT-XML-SK',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Thailand - ISO20022',0,'','','US-CITICONNECT-XML-TH',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','',0,0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Turkey - ISO20022',0,'','','US-CITICONNECT-XML-TR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Ukraine - ISO20022',0,'','','US-CITICONNECT-XML-UA',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','',0,0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Uruguay - ISO20022',0,'','','US-CITICONNECT-XML-UY',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','',0,0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Venezuela - ISO20022',0,'','','US-CITICONNECT-XML-VE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','',0,0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - South Africa - ISO20022',0,'','','US-CITICONNECT-XML-ZA',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','',0,0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Australia-ISO20022',0,'','','US-CITICONNECT-WL-XML-AU',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Canada-ISO20022',0,'','','US-CITICONNECT-WL-XML-CA',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Singapore-ISO20022',0,'','','US-CITICONNECT-WL-XML-SG',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-United Kingdom-ISO20022',0,'','','US-CITICONNECT-WL-XML-GB',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-United States of America-ISO20022',0,'','','US-CITICONNECT-WL-XML-US',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Albania-ISO20022',0,'','','US-CITICONNECT-WL-XML-AL',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Algeria-ISO20022',0,'','','US-CITICONNECT-WL-XML-DZ',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Angola-ISO20022',0,'','','US-CITICONNECT-WL-XML-AO',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Austria-ISO20022',0,'','','US-CITICONNECT-WL-XML-AT',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Bahamas-ISO20022',0,'','','US-CITICONNECT-WL-XML-BS',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Bahrain-ISO20022',0,'','','US-CITICONNECT-WL-XML-BH',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Bangladesh-ISO20022',0,'','','US-CITICONNECT-WL-XML-BD',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Belarus-ISO20022',0,'','','US-CITICONNECT-WL-XML-BY',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Belgium-ISO20022',0,'','','US-CITICONNECT-WL-XML-BE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Benin-ISO20022',0,'','','US-CITICONNECT-WL-XML-BJ',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Botswana-ISO20022',0,'','','US-CITICONNECT-WL-XML-BW',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Brazil-ISO20022',0,'','','US-CITICONNECT-WL-XML-BR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Brunei-ISO20022',0,'','','US-CITICONNECT-WL-XML-BN',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Bulgaria-ISO20022',0,'','','US-CITICONNECT-WL-XML-BG',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Burkina Faso-ISO20022',0,'','','US-CITICONNECT-WL-XML-BF',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Cambodia-ISO20022',0,'','','US-CITICONNECT-WL-XML-KH',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Cameroon-ISO20022',0,'','','US-CITICONNECT-WL-XML-CM',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Chad-ISO20022',0,'','','US-CITICONNECT-WL-XML-TD',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Chile-ISO20022',0,'','','US-CITICONNECT-WL-XML-CL',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-China-ISO20022',0,'','','US-CITICONNECT-WL-XML-CN',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Colombia-ISO20022',0,'','','US-CITICONNECT-WL-XML-CO',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Congo-ISO20022',0,'','','US-CITICONNECT-WL-XML-CD',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Costa Rica-ISO20022',0,'','','US-CITICONNECT-WL-XML-CR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Cote D\'ivoire-ISO20022',0,'','','US-CITICONNECT-WL-XML-CI',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Croatia-ISO20022',0,'','','US-CITICONNECT-WL-XML-HR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Cyprus-ISO20022',0,'','','US-CITICONNECT-WL-XML-CY',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Czech Republic-ISO20022',0,'','','US-CITICONNECT-WL-XML-CZ',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Denmark-ISO20022',0,'','','US-CITICONNECT-WL-XML-DK',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Egypt-ISO20022',0,'','','US-CITICONNECT-WL-XML-EG',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Estonia-ISO20022',0,'','','US-CITICONNECT-WL-XML-EE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Ethiopia-ISO20022',0,'','','US-CITICONNECT-WL-XML-ET',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Finland-ISO20022',0,'','','US-CITICONNECT-WL-XML-FI',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-France-ISO20022',0,'','','US-CITICONNECT-WL-XML-FR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Gabon-ISO20022',0,'','','US-CITICONNECT-WL-XML-GA',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Georgia-ISO20022',0,'','','US-CITICONNECT-WL-XML-GE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Germany-ISO20022',0,'','','US-CITICONNECT-WL-XML-DE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Ghana-ISO20022',0,'','','US-CITICONNECT-WL-XML-GH',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Greece-ISO20022',0,'','','US-CITICONNECT-WL-XML-GR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Guatemala-ISO20022',0,'','','US-CITICONNECT-WL-XML-GT',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Guinea-Bissau-ISO20022',0,'','','US-CITICONNECT-WL-XML-GW',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Guyana-ISO20022',0,'','','US-CITICONNECT-WL-XML-GY',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Hong Kong-ISO20022',0,'','','US-CITICONNECT-WL-XML-HK',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Hungary-ISO20022',0,'','','US-CITICONNECT-WL-XML-HU',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-India-ISO20022',0,'','','US-CITICONNECT-WL-XML-IN',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Indonesia-ISO20022',0,'','','US-CITICONNECT-WL-XML-ID',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Israel-ISO20022',0,'','','US-CITICONNECT-WL-XML-IL',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Italy-ISO20022',0,'','','US-CITICONNECT-WL-XML-IT',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Japan-ISO20022',0,'','','US-CITICONNECT-WL-XML-JP',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Jordan-ISO20022',0,'','','US-CITICONNECT-WL-XML-JO',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Kazakhstan-ISO20022',0,'','','US-CITICONNECT-WL-XML-KZ',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Kenya-ISO20022',0,'','','US-CITICONNECT-WL-XML-KE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Kuwait-ISO20022',0,'','','US-CITICONNECT-WL-XML-KW',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Latvia-ISO20022',0,'','','US-CITICONNECT-WL-XML-LV',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Lebanon-ISO20022',0,'','','US-CITICONNECT-WL-XML-LB',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Luxembourg-ISO20022',0,'','','US-CITICONNECT-WL-XML-LU',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Malaysia-ISO20022',0,'','','US-CITICONNECT-WL-XML-MY',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Malta-ISO20022',0,'','','US-CITICONNECT-WL-XML-MT',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Mexico-ISO20022',0,'','','US-CITICONNECT-WL-XML-MX',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Moldova-ISO20022',0,'','','US-CITICONNECT-WL-XML-MD',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Morocco-ISO20022',0,'','','US-CITICONNECT-WL-XML-MA',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Mozambique-ISO20022',0,'','','US-CITICONNECT-WL-XML-MZ',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Namibia-ISO20022',0,'','','US-CITICONNECT-WL-XML-NA',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Netherlands-ISO20022',0,'','','US-CITICONNECT-WL-XML-NL',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-New Zealand-ISO20022',0,'','','US-CITICONNECT-WL-XML-NZ',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Niger-ISO20022',0,'','','US-CITICONNECT-WL-XML-NE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Nigeria-ISO20022',0,'','','US-CITICONNECT-WL-XML-NG',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Norway-ISO20022',0,'','','US-CITICONNECT-WL-XML-NO',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Oman-ISO20022',0,'','','US-CITICONNECT-WL-XML-OM',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Pakistan-ISO20022',0,'','','US-CITICONNECT-WL-XML-PK',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Papua New Guinea-ISO20022',0,'','','US-CITICONNECT-WL-XML-PG',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Peru-ISO20022',0,'','','US-CITICONNECT-WL-XML-PE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Philippines-ISO20022',0,'','','US-CITICONNECT-WL-XML-PH',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Poland-ISO20022',0,'','','US-CITICONNECT-WL-XML-PL',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Portugal-ISO20022',0,'','','US-CITICONNECT-WL-XML-PT',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Qatar-ISO20022',0,'','','US-CITICONNECT-WL-XML-QA',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Republic of Ireland-ISO20022',0,'','','US-CITICONNECT-WL-XML-IE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Romania-ISO20022',0,'','','US-CITICONNECT-WL-XML-RO',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Russia-ISO20022',0,'','','US-CITICONNECT-WL-XML-RU',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Saudi Arabia-ISO20022',0,'','','US-CITICONNECT-WL-XML-SA',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Slovakia-ISO20022',0,'','','US-CITICONNECT-WL-XML-SK',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-South Africa-ISO20022',0,'','','US-CITICONNECT-WL-XML-ZA',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-South Korea-ISO20022',0,'','','US-CITICONNECT-WL-XML-KR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Spain-ISO20022',0,'','','US-CITICONNECT-WL-XML-ES',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Sri Lanka-ISO20022',0,'','','US-CITICONNECT-WL-XML-LK',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Sweden-ISO20022',0,'','','US-CITICONNECT-WL-XML-SE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Switzerland-ISO20022',0,'','','US-CITICONNECT-WL-XML-CH',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Taiwan-ISO20022',0,'','','US-CITICONNECT-WL-XML-TW',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Tanzania-ISO20022',0,'','','US-CITICONNECT-WL-XML-TZ',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Thailand-ISO20022',0,'','','US-CITICONNECT-WL-XML-TH',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Togo-ISO20022',0,'','','US-CITICONNECT-WL-XML-TG',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Tunisia-ISO20022',0,'','','US-CITICONNECT-WL-XML-TN',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Turkey-ISO20022',0,'','','US-CITICONNECT-WL-XML-TR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Uganda-ISO20022',0,'','','US-CITICONNECT-WL-XML-UG',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-United Arab Emirates-ISO20022',0,'','','US-CITICONNECT-WL-XML-AE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Viet Nam-ISO20022',0,'','','US-CITICONNECT-WL-XML-VN',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Zambia-ISO20022',0,'','','US-CITICONNECT-WL-XML-ZM',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Azerbaijan-ISO20022',0,'','','US-CITICONNECT-WL-XML-AZ',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Bermuda-ISO20022',0,'','','US-CITICONNECT-WL-XML-BM',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Dominican Republic-ISO20022',0,'','','US-CITICONNECT-WL-XML-DO',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Honduras-ISO20022',0,'','','US-CITICONNECT-WL-XML-HN',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Laos PDR-ISO20022',0,'','','US-CITICONNECT-WL-XML-LA',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Liechtenstein-ISO20022',0,'','','US-CITICONNECT-WL-XML-LI',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Lithuania-ISO20022',0,'','','US-CITICONNECT-WL-XML-LT',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Myanmar-ISO20022',0,'','','US-CITICONNECT-WL-XML-MM',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Mongolia-ISO20022',0,'','','US-CITICONNECT-WL-XML-MN',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Mauritania-ISO20022',0,'','','US-CITICONNECT-WL-XML-MR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Mauritius-ISO20022',0,'','','US-CITICONNECT-WL-XML-MU',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Malawi-ISO20022',0,'','','US-CITICONNECT-WL-XML-MW',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Rwanda-ISO20022',0,'','','US-CITICONNECT-WL-XML-RW',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Senegal-ISO20022',0,'','','US-CITICONNECT-WL-XML-SN',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Slovenia-ISO20022',0,'','','US-CITICONNECT-WL-XML-SI',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Swaziland-ISO20022',0,'','','US-CITICONNECT-WL-XML-SZ',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Trinidad And Tobago-ISO20022',0,'','','US-CITICONNECT-WL-XML-TT',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Uruguay-ISO20022',0,'','','US-CITICONNECT-WL-XML-UY',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Nepal-ISO20022',0,'','','US-CITICONNECT-WL-XML-NP',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 0 0:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Serbia-ISO20022',0,'','','US-CITICONNECT-WL-XML-RS',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Seychelles-ISO20022',0,'','','US-CITICONNECT-WL-XML-SC',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Paraguay-ISO20022',0,'','','US-CITICONNECT-WL-XML-PY',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Uzbekistan-ISO20022',0,'','','US-CITICONNECT-WL-XML-UZ',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Monaco-ISO20022',0,'','','US-CITICONNECT-WL-XML-MC',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Armenia-ISO20022',0,'','','US-CITICONNECT-WL-XML-AM',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Montenegro-ISO20022',0,'','','US-CITICONNECT-WL-XML-ME',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Tunisia - ISO20022',0,'','','US-CITICONNECT-XML-TN',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Paraguay - ISO20022',0,'','','US-CITICONNECT-XML-PY',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - CitiConnect - Israel - ISO20022',0,'','','US-CITICONNECT-XML-IL',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','',0,0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-PayPalWallet-ISO20022',0,'','','US-CITICONNECT-WL-PPW-XML',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Bosnia and Herzegovina-ISO20022',0,'','','US-CITICONNECT-WL-XML-BA',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Barbados-ISO20022',0,'','','US-CITICONNECT-WL-XML-BB',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Madagascar-ISO20022',0,'','','US-CITICONNECT-WL-XML-MG',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Mali-ISO20022',0,'','','US-CITICONNECT-WL-XML-ML',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Comoros-ISO20022',0,'','','US-CITICONNECT-WL-XML-KM',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Gambia-ISO20022',0,'','','US-CITICONNECT-WL-XML-GM',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Macedonia-ISO20022',0,'','','US-CITICONNECT-WL-XML-MK',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-Vitenam-ISO20022',0,'','','US-CITICONNECT-XML-VN',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Haiti-ISO20022',0,'','','US-CITICONNECT-WL-XML-HT',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Nicaragua-ISO20022',0,'','','US-CITICONNECT-WL-XML-NI',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Jamaica-ISO20022',0,'','','US-CITICONNECT-WL-XML-JM',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Maldives-ISO20022',0,'','','US-CITICONNECT-WL-XML-MV',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiConnect-WorldLink-Guinea-ISO20022',0,'','','US-CITICONNECT-WL-XML-GN',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITICONNECT-XML',1,1,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-CITICONNECT-XML-EC'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_EC();
                break;

            case ('US-CITICONNECT-XML-CR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_CR();
                break;

            case ('US-CITICONNECT-XML-DO'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_DO();
                break;

            case ('US-CITICONNECT-XML-SV'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_SV();
                break;

            case ('US-CITICONNECT-XML-GT'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_GT();
                break;

            case ('US-CITICONNECT-XML-PR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_PR();
                break;

            case ('US-CITICONNECT-XML-AR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_AR();
                break;

            case ('US-CITICONNECT-XML-CL'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_CL();
                break;

            case ('US-CITICONNECT-XML-CO'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_CO();
                break;

            case ('US-CITICONNECT-XML-PE'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_PE();
                break;

            case ('US-CITICONNECT-XML-CN'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_CN();
                break;

            case ('US-CITICONNECT-XML-CA'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_CA();
                break;

            case ('US-CITICONNECT-XML-US'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_US();
                break;

            case ('US-CITICONNECT-XML-AT'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_AT();
                break;

            case ('US-CITICONNECT-XML-BE'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_BE();
                break;

            case ('US-CITICONNECT-XML-DE'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_DE();
                break;

            case ('US-CITICONNECT-XML-FI'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_FI();
                break;

            case ('US-CITICONNECT-XML-FR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_FR();
                break;

            case ('US-CITICONNECT-XML-IE'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_IE();
                break;

            case ('US-CITICONNECT-XML-LU'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_LU();
                break;

            case ('US-CITICONNECT-XML-NL'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_NL();
                break;

            case ('US-CITICONNECT-XML-GB'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_GB();
                break;

            case ('US-CITICONNECT-XML-SE'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_SE();
                break;

            case ('US-CITICONNECT-XML-DK'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_DK();
                break;

            case ('US-CITICONNECT-XML-IT'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_IT();
                break;

            case ('US-CITICONNECT-XML-NO'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_NO();
                break;

            case ('US-CITICONNECT-XML-KR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_KR();
                break;

            case ('US-CITICONNECT-XML-NZ'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_NZ();
                break;

            case ('US-CITICONNECT-XML-TW'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_TW();
                break;

            case ('US-CITICONNECT-XML-JO'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_JO();
                break;

            case ('US-CITICONNECT-XML-AE'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_AE();
                break;

            case ('US-CITICONNECT-XML-MX'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_MX();
                break;

            case ('US-CITICONNECT-XML-AU'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_AU();
                break;

            case ('US-CITICONNECT-XML-BR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_BR();
                break;

            case ('US-CITICONNECT-XML-CZ'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_CZ();
                break;

            case ('US-CITICONNECT-XML-HK'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_HK();
                break;

            case ('US-CITICONNECT-XML-MO'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_MO();
                break;

            case ('US-CITICONNECT-XML-HN'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_HN();
                break;

            case ('US-CITICONNECT-XML-HU'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_HU();
                break;

            case ('US-CITICONNECT-XML-ID'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_ID();
                break;

            case ('US-CITICONNECT-XML-IN'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_IN();
                break;

            case ('US-CITICONNECT-XML-JP'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_JP();
                break;

            case ('US-CITICONNECT-XML-KE'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_KE();
                break;

            case ('US-CITICONNECT-XML-MY'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_MY();
                break;

            case ('US-CITICONNECT-XML-PA'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_PA();
                break;

            case ('US-CITICONNECT-XML-PH'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_PH();
                break;

            case ('US-CITICONNECT-XML-PL'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_PL();
                break;

            case ('US-CITICONNECT-XML-RO'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_RO();
                break;

            case ('US-CITICONNECT-XML-RU'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_RU();
                break;

            case ('US-CITICONNECT-XML-SG'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_SG();
                break;

            case ('US-CITICONNECT-WL-XML-AG'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AG();
                break;

            case ('US-CITICONNECT-WL-XML-MO'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MO();
                break;

            case ('US-CITICONNECT-WL-XML-FJ'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_FJ();
                break;

            case ('US-CITICONNECT-WL-XML-BO'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BO();
                break;

            case ('US-CITICONNECT-WL-XML-IS'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_IS();
                break;

            case ('US-CITICONNECT-XML-SK'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_SK();
                break;

            case ('US-CITICONNECT-XML-TH'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_TH();
                break;

            case ('US-CITICONNECT-XML-TR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_TR();
                break;

            case ('US-CITICONNECT-XML-UA'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_UA();
                break;

            case ('US-CITICONNECT-XML-UY'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_UY();
                break;

            case ('US-CITICONNECT-XML-VE'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_VE();
                break;

            case ('US-CITICONNECT-XML-ZA'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_ZA();
                break;

            case ('US-CITICONNECT-WL-XML-AU'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AU();
                break;

            case ('US-CITICONNECT-WL-XML-CA'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CA();
                break;

            case ('US-CITICONNECT-WL-XML-SG'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SG();
                break;

            case ('US-CITICONNECT-WL-XML-GB'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GB();
                break;

            case ('US-CITICONNECT-WL-XML-US'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_US();
                break;

            case ('US-CITICONNECT-WL-XML-AL'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AL();
                break;

            case ('US-CITICONNECT-WL-XML-DZ'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_DZ();
                break;

            case ('US-CITICONNECT-WL-XML-AO'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AO();
                break;

            case ('US-CITICONNECT-WL-XML-AT'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AT();
                break;

            case ('US-CITICONNECT-WL-XML-BS'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BS();
                break;

            case ('US-CITICONNECT-WL-XML-BH'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BH();
                break;

            case ('US-CITICONNECT-WL-XML-BD'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BD();
                break;

            case ('US-CITICONNECT-WL-XML-BY'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BY();
                break;

            case ('US-CITICONNECT-WL-XML-BE'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BE();
                break;

            case ('US-CITICONNECT-WL-XML-BJ'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BJ();
                break;

            case ('US-CITICONNECT-WL-XML-BW'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BW();
                break;

            case ('US-CITICONNECT-WL-XML-BR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BR();
                break;

            case ('US-CITICONNECT-WL-XML-BN'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BN();
                break;

            case ('US-CITICONNECT-WL-XML-BG'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BG();
                break;

            case ('US-CITICONNECT-WL-XML-BF'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BF();
                break;

            case ('US-CITICONNECT-WL-XML-KH'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_KH();
                break;

            case ('US-CITICONNECT-WL-XML-CM'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CM();
                break;

            case ('US-CITICONNECT-WL-XML-TD'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TD();
                break;

            case ('US-CITICONNECT-WL-XML-CL'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CL();
                break;

            case ('US-CITICONNECT-WL-XML-CN'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CN();
                break;

            case ('US-CITICONNECT-WL-XML-CO'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CO();
                break;

            case ('US-CITICONNECT-WL-XML-CD'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CD();
                break;

            case ('US-CITICONNECT-WL-XML-CR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CR();
                break;

            case ('US-CITICONNECT-WL-XML-CI'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CI();
                break;

            case ('US-CITICONNECT-WL-XML-HR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_HR();
                break;

            case ('US-CITICONNECT-WL-XML-CY'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CY();
                break;

            case ('US-CITICONNECT-WL-XML-CZ'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CZ();
                break;

            case ('US-CITICONNECT-WL-XML-DK'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_DK();
                break;

            case ('US-CITICONNECT-WL-XML-EG'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_EG();
                break;

            case ('US-CITICONNECT-WL-XML-EE'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_EE();
                break;

            case ('US-CITICONNECT-WL-XML-ET'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ET();
                break;

            case ('US-CITICONNECT-WL-XML-FI'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_FI();
                break;

            case ('US-CITICONNECT-WL-XML-FR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_FR();
                break;

            case ('US-CITICONNECT-WL-XML-GA'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GA();
                break;

            case ('US-CITICONNECT-WL-XML-GE'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GE();
                break;

            case ('US-CITICONNECT-WL-XML-GN'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GN();
                break;

            case ('US-CITICONNECT-WL-XML-DE'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_DE();
                break;

            case ('US-CITICONNECT-WL-XML-GH'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GH();
                break;

            case ('US-CITICONNECT-WL-XML-GR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GR();
                break;

            case ('US-CITICONNECT-WL-XML-GT'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GT();
                break;

            case ('US-CITICONNECT-WL-XML-GW'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GW();
                break;

            case ('US-CITICONNECT-WL-XML-GY'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GY();
                break;

            case ('US-CITICONNECT-WL-XML-HT'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_HT();
                break;

            case ('US-CITICONNECT-WL-XML-HK'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_HK();
                break;

            case ('US-CITICONNECT-WL-XML-HU'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_HU();
                break;

            case ('US-CITICONNECT-WL-XML-IN'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_IN();
                break;

            case ('US-CITICONNECT-WL-XML-ID'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ID();
                break;

            case ('US-CITICONNECT-WL-XML-IL'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_IL();
                break;

            case ('US-CITICONNECT-WL-XML-IT'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_IT();
                break;

            case ('US-CITICONNECT-WL-XML-JP'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_JP();
                break;

            case ('US-CITICONNECT-WL-XML-JO'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_JO();
                break;

            case ('US-CITICONNECT-WL-XML-KZ'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_KZ();
                break;

            case ('US-CITICONNECT-WL-XML-KE'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_KE();
                break;

            case ('US-CITICONNECT-WL-XML-KW'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_KW();
                break;

            case ('US-CITICONNECT-WL-XML-LV'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LV();
                break;

            case ('US-CITICONNECT-WL-XML-LB'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LB();
                break;

            case ('US-CITICONNECT-WL-XML-MG'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MG();
                break;

            case ('US-CITICONNECT-WL-XML-ML'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ML();
                break;
   
            case ('US-CITICONNECT-WL-XML-KM'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_KM();
                break;

            case ('US-CITICONNECT-WL-XML-GM'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GM();
                break;
   
            case ('US-CITICONNECT-WL-XML-LU'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LU();
                break;

            case ('US-CITICONNECT-WL-XML-MY'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MY();
                break;

            case ('US-CITICONNECT-WL-XML-MT'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MT();
                break;

            case ('US-CITICONNECT-WL-XML-MX'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MX();
                break;

            case ('US-CITICONNECT-WL-XML-MD'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MD();
                break;

            case ('US-CITICONNECT-WL-XML-MA'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MA();
                break;

            case ('US-CITICONNECT-WL-XML-MZ'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MZ();
                break;

            case ('US-CITICONNECT-WL-XML-NA'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NA();
                break;

            case ('US-CITICONNECT-WL-XML-NL'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NL();
                break;

            case ('US-CITICONNECT-WL-XML-NZ'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NZ();
                break;

            case ('US-CITICONNECT-WL-XML-NE'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NE();
                break;

            case ('US-CITICONNECT-WL-XML-NG'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NG();
                break;

            case ('US-CITICONNECT-WL-XML-NO'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NO();
                break;

            case ('US-CITICONNECT-WL-XML-OM'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_OM();
                break;

            case ('US-CITICONNECT-WL-XML-PK'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PK();
                break;

            case ('US-CITICONNECT-WL-XML-PG'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PG();
                break;

            case ('US-CITICONNECT-WL-XML-PE'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PE();
                break;

            case ('US-CITICONNECT-WL-XML-PH'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PH();
                break;

            case ('US-CITICONNECT-WL-XML-PL'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PL();
                break;

            case ('US-CITICONNECT-WL-XML-PT'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PT();
                break;

            case ('US-CITICONNECT-WL-XML-QA'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_QA();
                break;

            case ('US-CITICONNECT-WL-XML-IE'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_IE();
                break;

            case ('US-CITICONNECT-WL-XML-RO'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_RO();
                break;

            case ('US-CITICONNECT-WL-XML-RU'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_RU();
                break;

            case ('US-CITICONNECT-WL-XML-SA'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SA();
                break;

            case ('US-CITICONNECT-WL-XML-SK'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SK();
                break;

            case ('US-CITICONNECT-WL-XML-ZA'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ZA();
                break;

            case ('US-CITICONNECT-WL-XML-KR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_KR();
                break;

            case ('US-CITICONNECT-WL-XML-ES'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ES();
                break;

            case ('US-CITICONNECT-WL-XML-LK'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LK();
                break;

            case ('US-CITICONNECT-WL-XML-SE'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SE();
                break;

            case ('US-CITICONNECT-WL-XML-CH'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CH();
                break;

            case ('US-CITICONNECT-WL-XML-TW'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TW();
                break;

            case ('US-CITICONNECT-WL-XML-TZ'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TZ();
                break;

            case ('US-CITICONNECT-WL-XML-TH'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TH();
                break;

            case ('US-CITICONNECT-WL-XML-TG'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TG();
                break;

            case ('US-CITICONNECT-WL-XML-TN'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TN();
                break;

            case ('US-CITICONNECT-WL-XML-TR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TR();
                break;

            case ('US-CITICONNECT-WL-XML-UG'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_UG();
                break;

            case ('US-CITICONNECT-WL-XML-AE'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AE();
                break;

            case ('US-CITICONNECT-WL-XML-VN'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_VN();
                break;

            case ('US-CITICONNECT-WL-XML-ZM'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ZM();
                break;

            case ('US-CITICONNECT-WL-XML-AZ'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AZ();
                break;

            case ('US-CITICONNECT-WL-XML-BM'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BM();
                break;

            case ('US-CITICONNECT-WL-XML-DO'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_DO();
                break;

            case ('US-CITICONNECT-WL-XML-HN'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_HN();
                break;

            case ('US-CITICONNECT-WL-XML-LA'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LA();
                break;

            case ('US-CITICONNECT-WL-XML-LI'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LI();
                break;

            case ('US-CITICONNECT-WL-XML-LT'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LT();
                break;

            case ('US-CITICONNECT-WL-XML-MM'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MM();
                break;

            case ('US-CITICONNECT-WL-XML-MN'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MN();
                break;

            case ('US-CITICONNECT-WL-XML-MR'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MR();
                break;

            case ('US-CITICONNECT-WL-XML-MU'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MU();
                break;

            case ('US-CITICONNECT-WL-XML-MW'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MW();
                break;

            case ('US-CITICONNECT-WL-XML-RW'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_RW();
                break;

            case ('US-CITICONNECT-WL-XML-SN'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SN();
                break;

            case ('US-CITICONNECT-WL-XML-SI'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SI();
                break;

            case ('US-CITICONNECT-WL-XML-SZ'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SZ();
                break;

            case ('US-CITICONNECT-WL-XML-TT'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TT();
                break;

            case ('US-CITICONNECT-WL-XML-UY'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_UY();
                break;

            case ('US-CITICONNECT-WL-XML-NP'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NP();
                break;

            case ('US-CITICONNECT-WL-XML-RS'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_RS();
                break;

            case ('US-CITICONNECT-WL-XML-SC'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SC();
                break;

            case ('US-CITICONNECT-WL-XML-PY'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PY();
                break;

            case ('US-CITICONNECT-WL-XML-UZ'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_UZ();
                break;

            case ('US-CITICONNECT-WL-XML-MC'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MC();
                break;

            case ('US-CITICONNECT-WL-XML-AM'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AM();
                break;

            case ('US-CITICONNECT-WL-XML-ME'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ME();
                break;

            case ('US-CITICONNECT-XML-TN'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_TN();
                break;

            case ('US-CITICONNECT-XML-PY'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_PY();
                break;

            case ('US-CITICONNECT-XML-IL'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_IL();
                break;

            case ('US-CITICONNECT-WL-PPW-XML'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_PPW_XML();
                break;

            case ('US-CITICONNECT-WL-XML-BA'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BA();
                break;

            case ('US-CITICONNECT-WL-XML-BB'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BB();
                break;

            case ('US-CITICONNECT-WL-XML-MK'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MK();
                break;

            case ('US-CITICONNECT-XML-VN'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_XML_VN();
                break;

            case ('US-CITICONNECT-WL-XML-NI'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NI();
                break;

            case ('US-CITICONNECT-WL-XML-JM'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_JM();
                break;

            case ('US-CITICONNECT-WL-XML-MV'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MV();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_EC</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_EC()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Book Transfer-440',1,'BKT-440','','BKT-440','TRADE PAY',0,'US-CITICONNECT-XML-EC',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Crossborder Funds Transfer-442',1,'CBFT-442','','CBFT-442','TRADE PAY',0,'US-CITICONNECT-XML-EC',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Customer Check-468',1,'CHK-468','','CHK-468','TRADE PAY',0,'US-CITICONNECT-XML-EC',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer-441',1,'DFT-441','','DFT-441','TRADE PAY',0,'US-CITICONNECT-XML-EC',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_CR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_CR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Book Transfer-440',1,'BKT-440','','BKT-440','TRADE PAY',0,'US-CITICONNECT-XML-CR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer-441',1,'DFT-441','','DFT-441','TRADE PAY',0,'US-CITICONNECT-XML-CR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Crossborder Funds Transfer-442',1,'CBFT-442','','CBFT-442','TRADE PAY',0,'US-CITICONNECT-XML-CR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Manager Check-460',1,'CHK-460','','CHK-460','TRADE PAY',0,'US-CITICONNECT-XML-CR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Customer Check-462',1,'CHK-462','','CHK-462','TRADE PAY',0,'US-CITICONNECT-XML-CR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_DO</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_DO()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Book Transfer-440',1,'BKT-440','','BKT-440','TRADE PAY',0,'US-CITICONNECT-XML-DO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer-441',1,'DFT-441','','DFT-441','TRADE PAY',0,'US-CITICONNECT-XML-DO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Crossborder Funds Transfer-442',1,'CBFT-442','','CBFT-442','TRADE PAY',0,'US-CITICONNECT-XML-DO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Manager Check-465',1,'CHK-465','','CHK-465','TRADE PAY',0,'US-CITICONNECT-XML-DO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_SV</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_SV()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Book Transfer-440',1,'BKT-440','','BKT-440','TRADE PAY',0,'US-CITICONNECT-XML-SV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer-441',1,'DFT-441','','DFT-441','TRADE PAY',0,'US-CITICONNECT-XML-SV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Crossborder Funds Transfer-442',1,'CBFT-442','','CBFT-442','TRADE PAY',0,'US-CITICONNECT-XML-SV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Customer Check-469',1,'CHK-469','','CHK-469','TRADE PAY',0,'US-CITICONNECT-XML-SV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_GT</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_GT()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Book Transfer-440',1,'BKT-440','','BKT-440','TRADE PAY',0,'US-CITICONNECT-XML-GT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer-441',1,'DFT-441','','DFT-441','TRADE PAY',0,'US-CITICONNECT-XML-GT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Crossborder Funds Transfer-442',1,'CBFT-442','','CBFT-442','TRADE PAY',0,'US-CITICONNECT-XML-GT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Manager Check-470',1,'CHK-470','','CHK-470','TRADE PAY',0,'US-CITICONNECT-XML-GT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Customer Check-471',1,'CHK-471','','CHK-471','TRADE PAY',0,'US-CITICONNECT-XML-GT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Manager Check-472',1,'CHK-472','','CHK-472','TRADE PAY',0,'US-CITICONNECT-XML-GT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Customer Check-473',1,'CHK-473','','CHK-473','TRADE PAY',0,'US-CITICONNECT-XML-GT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_PR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_PR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Cash Concentration and Disbursement (CCD)-490',0,'CCD','','CCD','TRADE PAY',0,'US-CITICONNECT-XML-PR',0,1,0,1,1,0,0,1,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Prearranged Payment and Deposit (PPD)-497',0,'PPD','','PPD','DIRECT PAY',0,'US-CITICONNECT-XML-PR',0,1,0,1,1,0,0,1,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Fund Transfer-607',1,'FT-607','','FT-607','TRADE PAY',0,'US-CITICONNECT-XML-PR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Customer Check-487',1,'CHK-487','','CHK-487','TRADE PAY',0,'US-CITICONNECT-XML-PR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Manager Check-488',1,'CHK-487','','CHK-488','TRADE PAY',0,'US-CITICONNECT-XML-PR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_AR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_AR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Book Transfer-440',1,'BKT-440','','BKT-440','TRADE PAY',0,'US-CITICONNECT-XML-AR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer-441',1,'DFT-441','','DFT-441','TRADE PAY',0,'US-CITICONNECT-XML-AR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Deferred Customer Check-443',1,'CHK-443','','CHK-443','TRADE PAY',0,'US-CITICONNECT-XML-AR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Customer Check-445',1,'CHK-445','','CHK-445','TRADE PAY',0,'US-CITICONNECT-XML-AR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_CL</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_CL()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Book Transfer-440',1,'BKT-440','','BKT-440','TRADE PAY',0,'US-CITICONNECT-XML-CL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer-441',1,'DFT-441','','DFT-441','TRADE PAY',0,'US-CITICONNECT-XML-CL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Crossborder Funds Transfer-442',1,'CBFT-442','','CBFT-442','TRADE PAY',0,'US-CITICONNECT-XML-CL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Manager Check-455',1,'CHK-455','','CHK-455','TRADE PAY',0,'US-CITICONNECT-XML-CL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_CO</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_CO()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Book Transfer-440',1,'BKT-440','','BKT-440','TRADE PAY',0,'US-CITICONNECT-XML-CO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Manager Check-458',1,'CHK-458','','CHK-458','TRADE PAY',0,'US-CITICONNECT-XML-CO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer-441',1,'DFT-441','','DFT-441','TRADE PAY',0,'US-CITICONNECT-XML-CO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_PE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_PE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Book Transfer-440',1,'BKT-440','','BKT-440','TRADE PAY',0,'US-CITICONNECT-XML-PE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer-441',1,'DFT-441','','DFT-441','TRADE PAY',0,'US-CITICONNECT-XML-PE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Crossborder Funds Transfer-442',1,'CBFT-442','','CBFT-442','TRADE PAY',0,'US-CITICONNECT-XML-PE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Manager Check-484',1,'CHK-484','','CHK-484','TRADE PAY',0,'US-CITICONNECT-XML-PE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Manager Check-486',1,'CHK-486','','CHK-486','TRADE PAY',0,'US-CITICONNECT-XML-PE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_CN</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_CN()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'RMB OTC Payment-894',1,'OTC-894','','OTC-894','TRADE PAY',0,'US-CITICONNECT-XML-CN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,1,0,'',0,0,0,0,0,'Crossborder Funds Transfer-392',1,'CBFT-392','','CBFT-392','TRADE PAY',0,'US-CITICONNECT-XML-CN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'Crossborder Funds Transfer-896',1,'CBFT-896','','CBFT-896','TRADE PAY',0,'US-CITICONNECT-XML-CN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Domestic Funds Transfer - 391',1,'DFT-391','','DFT-391','TRADE PAY',0,'US-CITICONNECT-XML-CN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'China Paylink Cheque - 402',1,'CHK-402','','CHK-402','TRADE PAY',0,'US-CITICONNECT-XML-CN',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'China Paylink Giro - 400',1,'PLG-400','','PLG-400','TRADE PAY',0,'US-CITICONNECT-XML-CN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'China Payroll Giro - 401',1,'PRL-401','','PRL-401','TRADE PAY',0,'US-CITICONNECT-XML-CN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_CA</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_CA()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Canadian ACH-460',1,'CACH-460','','CACH-460','TRADE PAY',0,'US-CITICONNECT-XML-CA',0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Book Transfer - 602',1,'BKT-602','','BKT-602','TRADE PAY',0,'US-CITICONNECT-XML-CA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer - 603',1,'DFT-603','','DFT-603','TRADE PAY',0,'US-CITICONNECT-XML-CA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Crossborder Funds Transfer - 604',1,'CBFT-604','','CBFT-604','TRADE PAY',0,'US-CITICONNECT-XML-CA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Canada Check RRD Printing - 20',1,'CHK-20','','CHK-20','TRADE PAY',0,'US-CITICONNECT-XML-CA',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'CHK-20-Canadian Checks Delivered By Canadian Mail',1,'CHK-20','','CHK20CAMAL','TRADE PAY',0,'US-CITICONNECT-XML-CA',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'CHK-20-Canadian Checks Delivered By FedEx Overnight To Payee',1,'CHK-20','','CHK20CAFED','TRADE PAY',0,'US-CITICONNECT-XML-CA',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'CHK-20-Canadian Fedex Overnight to Solera Holdings',1,'CHK-20','','CHKCAFED02','TRADE PAY',0,'US-CITICONNECT-XML-CA',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'CHK-20-Canadian Fedex Overnight to Audatex NA',1,'CHK-20','','CHKCAFED03','TRADE PAY',0,'US-CITICONNECT-XML-CA',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Canada CPS CA ACH Adv MiscPyt - 706',1,'CPS-706','','CPS-706','TRADE PAY',0,'US-CITICONNECT-XML-CA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Canada CitiDirect CA ACH No Adv Type 450 - 780',1,'ACH-780','','ACH-780','TRADE PAY',0,'US-CITICONNECT-XML-CA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_US</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_US()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Cash Concentration and Disbursement (CCD)',1,'ACH-CCD','','ACH-CCD','TRADE PAY',0,'US-CITICONNECT-XML-US',0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Prearranged Payment and Deposit (PPD)',1,'ACH-PPD','','ACH-PPD','DIRECT PAY',0,'US-CITICONNECT-XML-US',0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Corporate Trade Exchange (CTX)',1,'ACH-CTX','','ACH-CTX','TRADE PAY',0,'US-CITICONNECT-XML-US',0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Book Transfer-500',1,'BKT-500','','BKT-500','TRADE PAY',0,'US-CITICONNECT-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Worldlink Wire-571',1,'WLW-571','','WLW-571','TRADE PAY',0,'US-CITICONNECT-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'Funds Transfer-499',1,'FT-499','','FT-499','TRADE PAY',0,'US-CITICONNECT-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'US ACH Credit CCD and CCD+ 502',1,'ACH-CCD','','CCD-502','TRADE PAY',0,'US-CITICONNECT-XML-US',0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'US ACH Credit PPD and PPD+ 503',1,'PPD-503','','PPD-503','DIRECT PAY',0,'US-CITICONNECT-XML-US',0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'USD Predef Wire w/Advice',1,'CPS-28','','CPS-28','TRADE PAY',0,'US-CITICONNECT-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'USD Freeform Wire w/Advice',1,'CPS-29','','CPS-29','TRADE PAY',0,'US-CITICONNECT-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Citidirect Foreign Currency Payment',1,'USFCP-821','','USFCP-821','TRADE PAY',0,'US-CITICONNECT-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'US ACH Credit CCD+ - 2',1,'ACH-CCP','','ACH-CCP','DIRECT PAY',0,'US-CITICONNECT-XML-US',0,1,0,1,1,0,0,1,1,0,0,1,0,0,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'US ACH Credit PPD+ - 4',1,'ACH-PPP','','ACH-PPP','DIRECT PAY',0,'US-CITICONNECT-XML-US',0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'US ACH Credit CCD+ with Advice - 14',1,'CCDP-14','','CCDP-14','DIRECT PAY',0,'US-CITICONNECT-XML-US',0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'US ACH Credit CTX with Advice - 17',1,'CTX-17','','CTX-17','DIRECT PAY',0,'US-CITICONNECT-XML-US',0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'US Check RRD Printing - 19',1,'CHK-19','','CHK-19','DIRECT PAY',0,'US-CITICONNECT-XML-US',0,1,0,1,1,0,0,0,1,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'CHK-19-Canadian Checks Delivered By Canadian Mail',1,'CHK-19','','CHK19CAMAL','TRADE PAY',0,'US-CITICONNECT-XML-US',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'CHK-19-US Checks Delivered By FedEx Overnight To Payee',1,'CHK-19','','CHK19USFED','TRADE PAY',0,'US-CITICONNECT-XML-US',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'CHK-19-Canadian Checks Delivered By FedEx Overnight To Payee',1,'CHK-19','','CHK19CAFED','TRADE PAY',0,'US-CITICONNECT-XML-US',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'CHK-19-US Fedex Overnight to Solera Holdings',1,'CHK-19','','CHKUSFED02','TRADE PAY',0,'US-CITICONNECT-XML-US',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'CHK-19-US Fedex Overnight to Audatex NA',1,'CHK-19','','CHKUSFED03','TRADE PAY',0,'US-CITICONNECT-XML-US',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'CHK-19-Canadian Fedex Overnight to Solera Holdings',1,'CHK-19','','CHKCAFED02','TRADE PAY',0,'US-CITICONNECT-XML-US',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'CHK-19-Canadian Fedex Overnight to Audatex NA',1,'CHK-19','','CHKCAFED03','TRADE PAY',0,'US-CITICONNECT-XML-US',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'US Issuance Payment - 585',1,'CHK-585','','CHK-585','DIRECT PAY',0,'US-CITICONNECT-XML-US',0,1,0,1,1,0,0,0,1,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'US ACH Credit CTX Expanded Addendum - 942',1,'CTX-942','','CTX-942','DIRECT PAY',0,'US-CITICONNECT-XML-US',0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Corporate Trade Exchange (CTX) - 950',1,'CTX-950','','CTX-950','TRADE PAY',0,'US-CITICONNECT-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cash Deposit Machine - 950',1,'CDM-950','','CDM-950','TRADE PAY',0,'US-CITICONNECT-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check Payment - 950',1,'CHK-950','','CHK-950','TRADE PAY',0,'US-CITICONNECT-XML-US',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Trade payables',1,'TRADE','','TRADE','DIRECT PAY',0,'US-CITICONNECT-XML-US',0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_AT</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_AT()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,1,'',0,0,0,0,0,'ACH - SEPA Clearing',1,'ACH-SEPA','','ACH-SEPA','TRADE PAY',0,'US-CITICONNECT-XML-AT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border - Domestic/International',1,'CB-WIRE','','CB-WIRE','TRADE PAY',0,'US-CITICONNECT-XML-AT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_BE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_BE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,1,'',0,0,0,0,0,'ACH - SEPA Clearing',1,'ACH-SEPA','','ACH-SEPA','TRADE PAY',0,'US-CITICONNECT-XML-BE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border - Domestic/International',1,'CB-WIRE','','CB-WIRE','TRADE PAY',0,'US-CITICONNECT-XML-BE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_DE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_DE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,1,'',0,0,0,0,0,'ACH - SEPA Clearing',1,'ACH-SEPA','','ACH-SEPA','TRADE PAY',0,'US-CITICONNECT-XML-DE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border - Domestic/International',1,'CB-WIRE','','CB-WIRE','TRADE PAY',0,'US-CITICONNECT-XML-DE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA Credit Transfer RB 6.0 - Bulk Debit Posting - 848',1,'SEPA-848','','SEPA-848','TRADE PAY',0,'US-CITICONNECT-XML-DE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA Credit Transfer Same Day - Bulk Debit Posting - 939',1,'SEPA-939','','SEPA-939','TRADE PAY',0,'US-CITICONNECT-XML-DE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_FI</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_FI()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,1,'',0,0,0,0,0,'ACH - SEPA Clearing',1,'ACH-SEPA','','ACH-SEPA','TRADE PAY',0,'US-CITICONNECT-XML-FI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border - Domestic/International',1,'CB-WIRE','','CB-WIRE','TRADE PAY',0,'US-CITICONNECT-XML-FI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_FR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_FR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,1,'',0,0,0,0,0,'ACH - SEPA Clearing',1,'ACH-SEPA','','ACH-SEPA','TRADE PAY',0,'US-CITICONNECT-XML-FR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border - Domestic/International',1,'CB-WIRE','','CB-WIRE','TRADE PAY',0,'US-CITICONNECT-XML-FR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_IE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_IE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,1,'',0,0,0,0,0,'ACH - SEPA Clearing',1,'ACH-SEPA','','ACH-SEPA','TRADE PAY',0,'US-CITICONNECT-XML-IE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border - Domestic/International',1,'CB-WIRE','','CB-WIRE','TRADE PAY',0,'US-CITICONNECT-XML-IE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_LU</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_LU()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,1,'',0,0,0,0,0,'ACH - SEPA Clearing',1,'ACH-SEPA','','ACH-SEPA','TRADE PAY',0,'US-CITICONNECT-XML-LU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border - Domestic/International',1,'CB-WIRE','','CB-WIRE','TRADE PAY',0,'US-CITICONNECT-XML-LU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_NL</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_NL()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,1,'',0,0,0,0,0,'ACH - SEPA Clearing',1,'ACH-SEPA','','ACH-SEPA','TRADE PAY',0,'US-CITICONNECT-XML-NL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border - Domestic/International',1,'CB-WIRE','','CB-WIRE','TRADE PAY',0,'US-CITICONNECT-XML-NL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_GB</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_GB()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,1,'',0,0,0,0,0,'ACH - SEPA Clearing',1,'ACH-SEPA','','ACH-SEPA','TRADE PAY',0,'US-CITICONNECT-XML-GB',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'ACH - Direct credit',1,'ACH-DC','','ACH-DC','TRADE PAY',0,'US-CITICONNECT-XML-GB',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border - Domestic/International',1,'CB-WIRE','','CB-WIRE','TRADE PAY',0,'US-CITICONNECT-XML-GB',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'CitiDirect Funds Transfer - 392',1,'CDFT-392','','CDFT-392','TRADE PAY',0,'US-CITICONNECT-XML-GB',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'Single Immediate Payment - 962',1,'SIP-962','','SIP-962','TRADE PAY',0,'US-CITICONNECT-XML-GB',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA Credit Transfer RB 6.0 - Bulk Debit Posting - 848',1,'SEPA-848','','SEPA-848','TRADE PAY',0,'US-CITICONNECT-XML-GB',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA Credit Transfer Same Day - Bulk Debit Posting - 939',1,'SEPA-939','','SEPA-939','TRADE PAY',0,'US-CITICONNECT-XML-GB',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_SE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_SE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'ACH - Plus Girot',1,'ACH-PG','','ACH-PG','TRADE PAY',0,'US-CITICONNECT-XML-SE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH - Bank Girot SIT - 147',1,'ACH-BG','','ACH-BG','TRADE PAY',0,'US-CITICONNECT-XML-SE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border - Domestic/International',1,'CB-WIRE','','CB-WIRE','TRADE PAY',0,'US-CITICONNECT-XML-SE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Sweden ACH Pyt w/o Adv - 150',1,'ACH-150','','ACH-150','TRADE PAY',0,'US-CITICONNECT-XML-SE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_DK</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_DK()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'ACH - Direct credit',1,'ACH-DC','','ACH-DC','TRADE PAY',0,'US-CITICONNECT-XML-DK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border - Domestic/International',1,'CB-WIRE','','CB-WIRE','TRADE PAY',0,'US-CITICONNECT-XML-DK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Denmark ACH-Pyt - 208',1,'ACH-208','','ACH-208','TRADE PAY',0,'US-CITICONNECT-XML-DK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_IT</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_IT()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,1,'',0,0,0,0,0,'ACH - Direct credit',1,'ACH-DC','','ACH-DC','TRADE PAY',0,'US-CITICONNECT-XML-IT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border - Domestic/International',1,'CB-WIRE','','CB-WIRE','TRADE PAY',0,'US-CITICONNECT-XML-IT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_NO</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_NO()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'ACH - Direct credit',1,'ACH-DC','','ACH-DC','TRADE PAY',0,'US-CITICONNECT-XML-NO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'ACH - Direct credit KID',1,'ACH-KID','','ACH-KID','TRADE PAY',0,'US-CITICONNECT-XML-NO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border - Domestic/International',1,'CB-WIRE','','CB-WIRE','TRADE PAY',0,'US-CITICONNECT-XML-NO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_KR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_KR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer - 391',1,'DOM-391','','DOM-391','TRADE PAY',0,'US-CITICONNECT-XML-KR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border Funds Transfer - 392',1,'CB-392','','CB-392','TRADE PAY',0,'US-CITICONNECT-XML-KR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Book Transfer - 393',1,'BKT-393','','BKT-393','TRADE PAY',0,'US-CITICONNECT-XML-KR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Korean Paylink Payroll - 414',1,'PRL-414','','PRL-414','TRADE PAY',0,'US-CITICONNECT-XML-KR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_NZ</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_NZ()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,0,0,0,'',0,0,0,0,0,'Direct Credit - 417',1,'DC-417','','DC-417','TRADE PAY',0,'US-CITICONNECT-XML-NZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Bank Cheque - 416',1,'CHECK-416','','CHECK-416','TRADE PAY',0,'US-CITICONNECT-XML-NZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer - 391',1,'DOM-391','','DOM-391','TRADE PAY',0,'US-CITICONNECT-XML-NZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer - 391 - Real Time Gross Settlement',1,'DOM-391','','DOM-391-RT','TRADE PAY',0,'US-CITICONNECT-XML-NZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border Funds Transfer - 392',1,'CB-392','','CB-392','TRADE PAY',0,'US-CITICONNECT-XML-NZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Book Transfer - 393',1,'BKT-393','','BKT-393','TRADE PAY',0,'US-CITICONNECT-XML-NZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_TW</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_TW()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,0,0,0,'',0,0,0,0,0,'Paylink IBRS - 429',1,'IBRS-429','','IBRS-429','TRADE PAY',0,'US-CITICONNECT-XML-TW',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,0,0,0,'',0,0,0,0,0,'IBRS Vendor - 430',1,'IBRS-430','','IBRS-430','TRADE PAY',0,'US-CITICONNECT-XML-TW',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Paylink Check - 427',1,'CHECK-427','','CHECK-427','TRADE PAY',0,'US-CITICONNECT-XML-TW',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border Funds Transfer - 392',1,'CB-392','','CB-392','TRADE PAY',0,'US-CITICONNECT-XML-TW',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Book Transfer - 393',1,'BKT-393','','BKT-393','TRADE PAY',0,'US-CITICONNECT-XML-TW',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_JO</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_JO()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH Payments - 964',1,'ACH-964','','ACH-964','TRADE PAY',0,'US-CITICONNECT-XML-JO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'CEEMA MGR Cheque through CITIDIRECT - 815',1,'CHECK-815','','CHECK-815','TRADE PAY',0,'US-CITICONNECT-XML-JO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer - 555',1,'DFT-555','','DFT-555','TRADE PAY',0,'US-CITICONNECT-XML-JO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border Funds Transfer - 574',1,'CBFT-574','','CBFT-574','TRADE PAY',0,'US-CITICONNECT-XML-JO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_AE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_AE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border Funds Transfer - 574',1,'CBFT-574','','CBFT-574','TRADE PAY',0,'US-CITICONNECT-XML-AE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer - 574',1,'DFT-574','','DFT-574','TRADE PAY',0,'US-CITICONNECT-XML-AE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Managers Check - 804',1,'CHK-804','','CHK-804','TRADE PAY',0,'US-CITICONNECT-XML-AE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_MX</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_MX()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Mexican Manager Check - 496',1,'CHK-496','','CHK-496','TRADE PAY',0,'US-CITICONNECT-XML-MX',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Banamex - Managers Check - 834',1,'CHK-834','','CHK-834','TRADE PAY',0,'US-CITICONNECT-XML-MX',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Banamex Window Payment - 835',1,'BWPMT-835','','BWPMT-835','TRADE PAY',0,'US-CITICONNECT-XML-MX',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Banamex - Book Transfer - 440',1,'BKT-440','','BKT-440','TRADE PAY',0,'US-CITICONNECT-XML-MX',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Fund Transfer - 441',1,'DFT-441','','DFT-441','TRADE PAY',0,'US-CITICONNECT-XML-MX',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border Fund Transfer - 442',1,'CBFT-442','','CBFT-442','TRADE PAY',0,'US-CITICONNECT-XML-MX',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Banamex Cross Border Fund Transfer - 827',1,'CBFT-827','','CBFT-827','TRADE PAY',0,'US-CITICONNECT-XML-MX',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Banamex Domestic Interbank Transfer - 828',1,'DIBT-828','','DIBT-828','TRADE PAY',0,'US-CITICONNECT-XML-MX',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Banamex Domestic - Payroll Payment - 831',1,'DPRL-831','','DPRL-831','TRADE PAY',0,'US-CITICONNECT-XML-MX',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Banamex Domestic - Pension Payment - 832',1,'DPENS-832','','DPENS-832','TRADE PAY',0,'US-CITICONNECT-XML-MX',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Banamex - Book Transfer - 833',1,'BKT-833','','BKT-833','TRADE PAY',0,'US-CITICONNECT-XML-MX',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_AU</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_AU()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Australia Direct Entry - 397',1,'DE-397','','DE-397','TRADE PAY',0,'US-CITICONNECT-XML-AU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Australia Payroll - 398',1,'PRL-398','','PRL-398','TRADE PAY',0,'US-CITICONNECT-XML-AU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'BPAY Payment Enhancement - 889',1,'BPAY-889','','BPAY-889','TRADE PAY',0,'US-CITICONNECT-XML-AU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Australia Bank Cheque - 396',1,'CHK-396','','CHK-396','TRADE PAY',0,'US-CITICONNECT-XML-AU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer - 391',1,'DOM-391','','DOM-391','TRADE PAY',0,'US-CITICONNECT-XML-AU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border Funds Transfer - 392',1,'CB-392','','CB-392','TRADE PAY',0,'US-CITICONNECT-XML-AU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Book Transfer - 393',1,'BKT-393','','BKT-393','TRADE PAY',0,'US-CITICONNECT-XML-AU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_BR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_BR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Brazil Book Transfer - 440',1,'BKT-440','','BKT-440','TRADE PAY',0,'US-CITICONNECT-XML-BR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Brazil Domestic Fund Transfer - 441',1,'DOM-441','','DOM-441','TRADE PAY',0,'US-CITICONNECT-XML-BR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Brazil Reserve Transfer - 453',1,'RT-453','','RT-453','TRADE PAY',0,'US-CITICONNECT-XML-BR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Brazilian Diphased Liquidation - 454',1,'DL-454','','DL-454','TRADE PAY',0,'US-CITICONNECT-XML-BR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Brazil Title Payment - 451',1,'TLPAY-451','','TLPAY-451','TRADE PAY',0,'US-CITICONNECT-XML-BR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_CZ</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_CZ()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Payments - 317',1,'DOM-317','','DOM-317','TRADE PAY',0,'US-CITICONNECT-XML-CZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Czech  Republic Domestic Fund Transfer - 555',1,'DOM-555','','DOM-555','TRADE PAY',0,'US-CITICONNECT-XML-CZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH - SEPA Clearing',1,'SEPA','','ACH-SEPA','TRADE PAY',0,'US-CITICONNECT-XML-CZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Czech Republic Express Payment - 888',1,'XPRS-888','','XPRS-888','TRADE PAY',0,'US-CITICONNECT-XML-CZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Czech Republic Domestic Funds Transfer - 555',1,'DFT-555','','DFT-555','TRADE PAY',0,'US-CITICONNECT-XML-CZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Czech Republic Cross Border Funds Transfer - 574',1,'CBFT-574','','CBFT-574','TRADE PAY',0,'US-CITICONNECT-XML-CZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_HK</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_HK()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Hong Kong Autopay - 403',1,'ATPAY-403','','ATPAY-403','TRADE PAY',0,'US-CITICONNECT-XML-HK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Hong Kong Paylink Cheque - 405',1,'CHK-405','','CHK-405','TRADE PAY',0,'US-CITICONNECT-XML-HK',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Hong Kong PayLink Cheque - 405',1,'CHECK-405','','CHECK-405','TRADE PAY',0,'US-CITICONNECT-XML-HK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer - 391',1,'DOM-391','','DOM-391','TRADE PAY',0,'US-CITICONNECT-XML-HK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border Funds Transfer - 392',1,'CB-392','','CB-392','TRADE PAY',0,'US-CITICONNECT-XML-HK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Hong Kong Book Transfer - 393',1,'BKT-393','','BKT-393','TRADE PAY',0,'US-CITICONNECT-XML-HK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_MO</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_MO()
    {
        container   paymSpecList;

        
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border Funds Transfer - 392',1,'CB-392','','CB-392','TRADE PAY',0,'US-CITICONNECT-XML-MO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_HN</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_HN()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Hounduras Domestic Fund Transfer - 441',1,'DOM-441','','DOM-441','TRADE PAY',0,'US-CITICONNECT-XML-HN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_HU</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_HU()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Hungary - Domestic Giro Payment - 303',1,'DOM-303','','DOM-303','TRADE PAY',0,'US-CITICONNECT-XML-HU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Hungary Domestic Intergiro2 Transfer - 903',1,'DOM-903','','DOM-903','TRADE PAY',0,'US-CITICONNECT-XML-HU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Hungary Cross Border Funds Transfer - 574',1,'CBFT-574','','CBFT-574','TRADE PAY',0,'US-CITICONNECT-XML-HU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_ID</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_ID()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Indonesia Domestic Fund Transfer - 391',1,'DOM-391','','DOM-391','TRADE PAY',0,'US-CITICONNECT-XML-ID',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Indonesia LLG Vendor - 408',1,'LLG-408','','LLG-408','TRADE PAY',0,'US-CITICONNECT-XML-ID',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_IN</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_IN()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'India Corporate Cheque - 436',1,'CHK-436','','CHK-436','TRADE PAY',0,'US-CITICONNECT-XML-IN',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'India Demand Draft - 437',1,'DD-437','','DD-437','TRADE PAY',0,'US-CITICONNECT-XML-IN',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'India DFT payment EFT - 540',1,'DOM-540','','DOM-540','TRADE PAY',0,'US-CITICONNECT-XML-IN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'India DFT Salary Payments - 914',1,'DFT-914','','DFT-914','TRADE PAY',0,'US-CITICONNECT-XML-IN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'India DFT payment CPCOTH - 541',1,'DFT-541','','DFT-541','TRADE PAY',0,'US-CITICONNECT-XML-IN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'India Domestic Funds Transfer RTGS - 539',1,'RTGS-539','','RTGS-539','TRADE PAY',0,'US-CITICONNECT-XML-IN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'India Tax Payments/Direct Tax - 908',1,'TAX-908','','TAX-908','TRADE PAY',0,'US-CITICONNECT-XML-IN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'India Indirect Tax/Custom Duty - 927',1,'TAX-927','','TAX-927','TRADE PAY',0,'US-CITICONNECT-XML-IN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'India Indirect Tax/Professional Entry Tax - 947',1,'TAX-947','','TAX-947','TRADE PAY',0,'US-CITICONNECT-XML-IN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'India Cross Border Service Funds Transfer - 392',1,'IFT-CB392','','IFT-CB392','TRADE PAY',0,'US-CITICONNECT-XML-IN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'India Import A1 Payments - 862',1,'CDT-862','','CDT-862','TRADE PAY',0,'US-CITICONNECT-XML-IN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_JP</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_JP()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Japan Domestic Fund Transfer - 391',1,'WIRE-391','','WIRE-391','TRADE PAY',0,'US-CITICONNECT-XML-JP',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border Funds Transfer - 392',1,'WIRE-392','','WIRE-392','TRADE PAY',0,'US-CITICONNECT-XML-JP',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Japan - Furikomi - Domestic Yen - 410',1,'BKT-410','','BKT-410','TRADE PAY',0,'US-CITICONNECT-XML-JP',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Japan Book Transfer - 393',1,'BKT-393','','BKT-393','TRADE PAY',0,'US-CITICONNECT-XML-JP',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Japan ACH - 410',1,'ACH-410','','ACH-410','TRADE PAY',0,'US-CITICONNECT-XML-JP',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_KE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_KE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Kenya Domestic Fund Transfer - 555',1,'DOM-555','','DOM-555','TRADE PAY',0,'US-CITICONNECT-XML-KE',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_MY</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_MY()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Malaysia Domestic Fund Transfer - 391',1,'DOM-391','','DOM-391','TRADE PAY',0,'US-CITICONNECT-XML-MY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Malaysia Funds Transfer - Cross Border - 392',1,'CB-392','','CB-392','TRADE PAY',0,'US-CITICONNECT-XML-MY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Malaysia PayLink Giro - 527',1,'PLG-527','','PLG-527','TRADE PAY',0,'US-CITICONNECT-XML-MY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'PayLink Giro - 527',1,'GIRO-527','','GIRO-527','TRADE PAY',0,'US-CITICONNECT-XML-MY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Paylink check - 415',1,'CHK-415','','CHK-415','TRADE PAY',0,'US-CITICONNECT-XML-MY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer - 391',1,'DFT-391','','DFT-391','TRADE PAY',0,'US-CITICONNECT-XML-MY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Crossborder Funds Transfer - 392',1,'CBFT-392','','CBFT-392','TRADE PAY',0,'US-CITICONNECT-XML-MY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Book transfer - 393',1,'BKT-393','','BKT-393','TRADE PAY',0,'US-CITICONNECT-XML-MY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_PA</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_PA()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Panama Domestic Fund Transfer - 441',1,'DOM-441','','DOM-441','TRADE PAY',0,'US-CITICONNECT-XML-PA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Panama Customer Check - 478',1,'CHK-478','','CHK-478','TRADE PAY',0,'US-CITICONNECT-XML-PA',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_PH</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_PH()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Philippines Paylink Cheque - 418',1,'CHK-418','','CHK-418','TRADE PAY',0,'US-CITICONNECT-XML-PH',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_PL</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_PL()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Poland Domestic Fund Transfer - 555',1,'DOM-555','','DOM-555','TRADE PAY',0,'US-CITICONNECT-XML-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Poland Domestic Payments - 325',1,'DOM-325','','DOM-325','TRADE PAY',0,'US-CITICONNECT-XML-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Poland Domestic Funds Transfer - 555',1,'DFT-555','','DFT-555','TRADE PAY',0,'US-CITICONNECT-XML-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH - SEPA Clearing',1,'SEPA','','ACH-SEPA','TRADE PAY',0,'US-CITICONNECT-XML-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Poland Internal Revenue Payment/Tax payment - 592',1,'TAX-592','','TAX-592','TRADE PAY',0,'US-CITICONNECT-XML-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Poland Local VAT Split Payment - 984',1,'VAT-984','','VAT-984','TRADE PAY',0,'US-CITICONNECT-XML-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Poland Cross Border Funds Transfer - 574',1,'CBFT-574','','CBFT-574','TRADE PAY',0,'US-CITICONNECT-XML-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA Credit Transfer Same Day-Individual Debit Posting-938',1,'SEPA-938','','SEPA-938','TRADE PAY',0,'US-CITICONNECT-XML-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_RO</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_RO()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Romania Domestic Payments - 332',1,'DOM-332','','DOM-332','TRADE PAY',0,'US-CITICONNECT-XML-RO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Romania Ordinary Domestic Payment - 789',1,'DOM-789','','DOM-789','TRADE PAY',0,'US-CITICONNECT-XML-RO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Romania Cross Border Funds Transfer - 574',1,'CBFT-574','','CBFT-574','TRADE PAY',0,'US-CITICONNECT-XML-RO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_RU</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_RU()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Russian Federation Domestic Fund Transfer - 548',1,'DOM-548','','DOM-548','TRADE PAY',0,'US-CITICONNECT-XML-RU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_SG</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_SG()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Singapore Cross Border Funds Transfer - 392',1,'CB-392','','CB-392','TRADE PAY',0,'US-CITICONNECT-XML-SG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Singapore giro - 421',1,'GIRO-421','','GIRO-421','TRADE PAY',0,'US-CITICONNECT-XML-SG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'Singapore Book Transfer-393',1,'BKT-393','','BKT-393','TRADE PAY',0,'US-CITICONNECT-XML-SG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'Singapore USD Paylink Cheque-423',1,'CHK-423','','CHK-423','TRADE PAY',0,'US-CITICONNECT-XML-SG',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'Singapore Paylink Cheque-420',1,'CHK-420','','CHK-420','TRADE PAY',0,'US-CITICONNECT-XML-SG',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'Singapore Payroll-422',1,'PRL-422','','PRL-422','TRADE PAY',0,'US-CITICONNECT-XML-SG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'Domestic Funds Transfer-391',1,'DFT-391','','DFT-391','TRADE PAY',0,'US-CITICONNECT-XML-SG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Singapore Batch Funds Transfer - 551',1,'BFT-551','','BFT-551','TRADE PAY',0,'US-CITICONNECT-XML-SG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AG</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AG()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-AG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-AG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MO</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MO()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_FJ</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_FJ()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-FJ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-FJ',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-FJ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-FJ',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BO</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BO()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_IS</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_IS()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-IS',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-IS',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MV</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MV()
    {
        container   paymSpecList;
        
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);             
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_SK</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_SK()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA Credit Transfer Same Day-Individual Debit Posting - 938',1,'SEPA-938','','SEPA-938','TRADE PAY',0,'US-CITICONNECT-XML-SK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_TH</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_TH()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Thailand Paylink Payroll - 426',1,'PRL-426','','PRL-426','TRADE PAY',0,'US-CITICONNECT-XML-TH',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Thailand Paylink Autopay - 424',1,'ATPAY-424','','ATPAY-424','TRADE PAY',0,'US-CITICONNECT-XML-TH',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Thailand Paylink Cheque - 425',1,'CHK-425','','CHK-425','TRADE PAY',0,'US-CITICONNECT-XML-TH',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_TR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_TR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Turkey Domestic Fund Transfer - 555',1,'DOM-555','','DOM-555','TRADE PAY',0,'US-CITICONNECT-XML-TR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Turkey Book Transfer - 547',1,'BKT-547','','BKT-547','TRADE PAY',0,'US-CITICONNECT-XML-TR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Turkey Cross Border Funds Transfer - 574',1,'CBFT-574','','CBFT-574','TRADE PAY',0,'US-CITICONNECT-XML-TR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Turkey SSK Payment - 853',1,'SSK-853','','SSK-853','TRADE PAY',0,'US-CITICONNECT-XML-TR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_UA</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_UA()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Ukraine Domestic Fund Transfer - 555',1,'DOM-555','','DOM-555','TRADE PAY',0,'US-CITICONNECT-XML-UA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_UY</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_UY()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Fund Transfer - 441',1,'DFT-441','','DFT-441','TRADE PAY',0,'US-CITICONNECT-XML-UY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Book Transfer-440',1,'BKT-440','','BKT-440','TRADE PAY',0,'US-CITICONNECT-XML-UY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Crossborder Funds Transfer-442',1,'CBFT-442','','CBFT-442','TRADE PAY',0,'US-CITICONNECT-XML-UY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Manager Check-493',1,'CHK-493','','CHK-493','TRADE PAY',0,'US-CITICONNECT-XML-UY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Manager Check-494',1,'CHK-494','','CHK-494','TRADE PAY',0,'US-CITICONNECT-XML-UY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_VE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_VE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Venezuela Domestic Fund Transfer - 441',1,'DOM-441','','DOM-441','TRADE PAY',0,'US-CITICONNECT-XML-VE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_ZA</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_ZA()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'South Africa ACH - 809',1,'ACH-809','','ACH-809','TRADE PAY',0,'US-CITICONNECT-XML-ZA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'South Africa Cross Border Funds Transfer - 574',1,'WIRE-574','','WIRE-574','TRADE PAY',0,'US-CITICONNECT-XML-ZA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AU</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AU()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH World Link Payments - 949',1,'ACH-WL','','ACH-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-AU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-AU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-AU',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH World Link Reverse Contract Payments - 949',1,'ACH-WL','','ACH-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-AU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-AU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-AU',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CA</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CA()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH World Link Payments - 949',1,'ACH-WL','','ACH-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-CA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-CA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-CA',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH World Link Reverse Contract Payments - 949',1,'ACH-WL','','ACH-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CA',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SG</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SG()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH World Link Payments - 949',1,'ACH-WL','','ACH-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-SG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-SG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-SG',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH World Link Reverse Contract Payments - 949',1,'ACH-WL','','ACH-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-SG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-SG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-SG',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GB</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GB()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH World Link Payments - 949',1,'ACH-WL','','ACH-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-GB',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-GB',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-GB',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-GB',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH World Link Reverse Contract Payments - 949',1,'ACH-WL','','ACH-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-GB',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-GB',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-GB',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-GB',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_US</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_US()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH World Link Payments - 949',1,'ACH-WL','','ACH-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-US',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH World Link Reverse Contract Payments - 949',1,'ACH-WL','','ACH-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-US',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AL</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AL()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-AL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-AL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_DZ</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_DZ()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-DZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-DZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AO</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AO()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-AO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-AO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AT</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AT()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-AT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-AT',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-AT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-AT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-AT',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-AT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BS</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BS()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BS',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BS',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BH</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BH()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BH',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BH',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BH',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BH',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BD</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BD()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Organization Wire WL Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BD',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Individual Wire WL Payments - 949',1,'WIRE-WL','','WIRE-WL-I','TRADE PAY',0,'US-CITICONNECT-WL-XML-BD',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Organization Wire WL Reve Contr Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BD',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Individual Wire WL Rev Contr Payments - 949',1,'WIRE-WL','','WIRE-WLIRC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BD',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BY</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BY()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BE',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BE',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BJ</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BJ()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BJ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BJ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BW</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BW()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BW',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BW',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BN</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BN()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BN',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BN',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BG</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BG()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Individual Wire WL Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Organization Wire WL Payments - 949',1,'WIRE-WL','','WIRE-WL-O','TRADE PAY',0,'US-CITICONNECT-WL-XML-BG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Individual Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Organization Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WLORC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BF</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BF()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BF',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BF',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_KH</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_KH()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-KH',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-KH',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CM</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CM()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-CM',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CM',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TD</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TD()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-TD',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-TD',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CL</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CL()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-CL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CN</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CN()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Individual Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-CN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Organization Wire WL Payments - 949',1,'WIRE-WL','','WIRE-WL-O','TRADE PAY',0,'US-CITICONNECT-WL-XML-CN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Individual Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Organization Wire WL Rev Contr Payments - 949',1,'WIRE-WL','','WIRE-WLORC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CO</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CO()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-CO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CD</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CD()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-CD',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CD',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-CR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CI</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CI()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-CI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_HR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_HR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-HR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-HR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-HR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-HR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CY</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CY()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-CY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-CY',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-CY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CY',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CZ</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CZ()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-CZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-CZ',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-CZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CZ',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_DK</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_DK()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-DK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-DK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-DK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-DK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_EG</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_EG()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-EG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-EG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_EE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_EE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-EE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-EE',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-EE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-EE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-EE',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-EE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ET</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ET()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-ET',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-ET',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_FI</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_FI()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-FI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-FI',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-FI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-FI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-FI',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-FI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_FR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_FR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-FR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-FR',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-FR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-FR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-FR',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-FR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GA</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GA()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-GA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-GA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-GE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-GE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_DE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_DE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-DE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-DE',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-DE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-DE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-DE',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-DE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GH</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GH()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-GH',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-GH',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-GR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-GR',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-GR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-GR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-GR',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-GR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GT</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GT()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-GT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-GT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GW</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GW()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-GW',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-GW',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GY</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GY()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-GY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-GY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_HT</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_HT()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-HT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_HK</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_HK()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-HK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-HK',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-HK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-HK',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_HU</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_HU()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-HU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-HU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-HU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-HU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_IN</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_IN()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-IN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-IN',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-IN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-IN',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ID</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ID()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-ID',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-ID',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-ID',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-ID',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_IL</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_IL()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-IL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-IL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_IT</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_IT()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-IT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-IT',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-IT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-IT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-IT',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-IT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_JP</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_JP()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-JP',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-JP',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-JP',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-JP',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_JO</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_JO()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-JO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-JO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_KZ</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_KZ()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-KZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-KZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_KE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_KE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-KE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-KE',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-KE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-KE',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_KW</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_KW()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-KW',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-KW',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-KW',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-KW',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LV</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LV()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-LV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-LV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-LV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-LV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LB</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LB()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-LB',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-LB',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LU</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LU()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-LU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-LU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-LU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-LU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MY</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MY()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MT</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MT()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MT',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MT',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MX</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MX()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MX',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MX',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MX',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MX',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MD</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MD()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MD',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MD',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MA</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MA()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MA',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MA',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MZ</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MZ()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NA</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NA()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-NA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-NA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NL</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NL()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-NL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-NL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-NL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-NL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NZ</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NZ()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-NZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-NZ',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-NZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-NZ',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-NE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-NE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NG</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NG()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-NG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-NG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NO</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NO()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-NO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-NO',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-NO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-NO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-NO',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-NO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_OM</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_OM()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-OM',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-OM',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-OM',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-OM',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PK</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PK()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Corporation Wire WL Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-PK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Individual CNIC Wire WL Payments - 949',1,'WIRE-WL','','WIRE-WL-IC','TRADE PAY',0,'US-CITICONNECT-WL-XML-PK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Individual CNIC Wire WL Rev Contr Payments - 949',1,'WIRE-WL','','WIREWLICRC','TRADE PAY',0,'US-CITICONNECT-WL-XML-PK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Individual SNIC Wire WL Payments - 949',1,'WIRE-WL','','WIRE-WL-IS','TRADE PAY',0,'US-CITICONNECT-WL-XML-PK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Individual SNIC Wire WL Rev Contr Payments - 949',1,'WIRE-WL','','WIREWLISRC','TRADE PAY',0,'US-CITICONNECT-WL-XML-PK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Individual Passport Wire WL Payments - 949',1,'WIRE-WL','','WIRE-WL-IP','TRADE PAY',0,'US-CITICONNECT-WL-XML-PK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Individual Passport Wire WL Rev Contr Payments - 949',1,'WIRE-WL','','WIREWLIPRC','TRADE PAY',0,'US-CITICONNECT-WL-XML-PK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Corporation Wire WL Reve Contr Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-PK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PG</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PG()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-PG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-PG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-PE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-PE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PH</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PH()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-PH',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-PH',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-PH',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-PH',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PL</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PL()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PT</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PT()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-PT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-PT',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-PT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-PT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-PT',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-PT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_QA</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_QA()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-QA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-QA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_IE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_IE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-IE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-IE',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-IE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-IE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-IE',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-IE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_RO</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_RO()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-RO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-RO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-RO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-RO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_RU</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_RU()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Organization Wire WL Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-RU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Individual Wire WL Payments - 949',1,'WIRE-WL','','WIRE-WL-I','TRADE PAY',0,'US-CITICONNECT-WL-XML-RU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Organization Wire WL Reve Contr Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-RU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Individual Wire WL Rev Contr Payments - 949',1,'WIRE-WL','','WIRE-WLIRC','TRADE PAY',0,'US-CITICONNECT-WL-XML-RU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SA</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SA()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-SA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-SA',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-SA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-SA',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SK</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SK()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-SK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-SK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-SK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-SK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ZA</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ZA()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-ZA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-ZA',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-ZA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-ZA',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_KR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_KR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-KR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-KR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ES</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ES()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-ES',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-ES',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-ES',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-ES',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-ES',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-ES',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LK</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LK()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-LK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-LK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-SE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-SE',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-SE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-SE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-SE',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-SE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CH</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_CH()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-CH',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-CH',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-CH',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CH',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CH',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-CH',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TW</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TW()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-TW',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-TW',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TZ</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TZ()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-TZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-TZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TH</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TH()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-TH',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-TH',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-TH',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-TH',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TG</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TG()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-TG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-TG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TN</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TN()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-TN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-TN',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-TN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-TN',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-TR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-TR',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-TR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-TR',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_UG</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_UG()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-UG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-UG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-AE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Payments - 949',1,'CHK-WL','','CHK-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-AE',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-AE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check World Link Reverse Contract Payments - 949',1,'CHK-WL','','CHK-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-AE',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_VN</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_VN()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-VN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-VN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ZM</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ZM()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-ZM',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-ZM',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AZ</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AZ()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-AZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-AZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BM</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BM()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BM',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BM',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_DO</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_DO()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-DO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-DO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_HN</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_HN()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-HN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-HN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LA</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LA()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-LA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-LA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LI</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LI()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-LI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-LI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-LI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-LI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LT</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_LT()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-LT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-LT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-LT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-LT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MM</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MM()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MM',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MM',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MN</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MN()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MR',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MU</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MU()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MW</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MW()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MW',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MW',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_RW</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_RW()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-RW',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-RW',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SN</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SN()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-SN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-SN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SI</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SI()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-SI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-SI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-SI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-SI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SZ</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SZ()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-SZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-SZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TT</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_TT()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-TT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-TT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_UY</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_UY()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-UY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-UY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NP</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NP()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-NP',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-NP',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_RS</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_RS()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-RS',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-RS',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SC</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_SC()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-SC',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-SC',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PY</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_PY()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-PY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-PY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_UZ</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_UZ()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-UZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-UZ',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MC</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MC()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MC',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Payments - 949',1,'SEPA-WL','','SEPA-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MC',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MC',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA World Link Reverse Contract Payments - 949',1,'SEPA-WL','','SEPA-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MC',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AM</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_AM()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-AM',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-AM',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ME</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ME()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-ME',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-ME',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_TN</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_TN()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Paylink Cheques - 815',1,'CHK-815','','CHK-815','TRADE PAY',0,'US-CITICONNECT-XML-TN',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Book Transfer - 547',1,'BKT-547','','BKT-547','TRADE PAY',0,'US-CITICONNECT-XML-TN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer - 555',1,'DOM-555','','DOM-555','TRADE PAY',0,'US-CITICONNECT-XML-TN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border Funds Transfer - 574',1,'CBFT-574','','CBFT-574','TRADE PAY',0,'US-CITICONNECT-XML-TN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_PY</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_PY()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Funds Transfer-441',1,'DFT-441','','DFT-441','TRADE PAY',0,'US-CITICONNECT-XML-PY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Crossborder Funds Transfer-442',1,'CBFT-442','','CBFT-442','TRADE PAY',0,'US-CITICONNECT-XML-PY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Instant Payment',1,'INSTPAY','','INSTPAY','TRADE PAY',0,'US-CITICONNECT-XML-PY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_IL</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_IL()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Israel Domestic Funds Transfer - 555',1,'DOM-555','','DOM-555','TRADE PAY',0,'US-CITICONNECT-XML-IL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Israel Cross Border Funds Transfer - 574',1,'CBFT-574','','CBFT-574','TRADE PAY',0,'US-CITICONNECT-XML-IL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Israel RTGS - 605',1,'RTGS-605','','RTGS-605','TRADE PAY',0,'US-CITICONNECT-XML-IL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_PPW_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_PPW_XML()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'World Link Pay Pal Wallet payments',1,'PPW-WL','','PPW-WL','TRADE PAY',0,'US-CITICONNECT-WL-PPW-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'World Link Pay Pal Wallet Reverse Contract Payments',1,'PPW-WL','','PPW-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-PPW-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'World Link Pay Pal Wallet payments for Phone numbers',1,'PPW-PH-WL','','PPW-PH-WL','TRADE PAY',0,'US-CITICONNECT-WL-PPW-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'World Link PPW Reverse Contract Payments for Phone numbers',1,'PPW-PH-WL','','PPW-PHWLRC','TRADE PAY',0,'US-CITICONNECT-WL-PPW-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BA</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BA()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BB</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_BB()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-BB',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-BB',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MK</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MK()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MG</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_MG()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-MG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-MG',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NI</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_NI()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-NI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-NI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_JM</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_JM()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-JM',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-JM',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ML</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_ML()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-ML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_KM</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_KM()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-KM',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GM</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GM()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-GM',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GN</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_WL_XML_GN()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Payments - 949',1,'WIRE-WL','','WIRE-WL','TRADE PAY',0,'US-CITICONNECT-WL-XML-GN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire World Link Reverse Contract Payments - 949',1,'WIRE-WL','','WIRE-WL-RC','TRADE PAY',0,'US-CITICONNECT-WL-XML-GN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITICONNECT_XML_VN</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITICONNECT_XML_VN()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'Domestic Funds Transfer-391',1,'DFT-391','','DFT-391','TRADE PAY',0,'US-CITICONNECT-XML-VN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,1,0,'',0,0,0,0,0,'Crossborder Funds Transfer-392',1,'CBFT-392','','CBFT-392','TRADE PAY',0,'US-CITICONNECT-XML-VN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-CITICONNECT-XML-EC'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_EC();
                break;

            case ('US-CITICONNECT-XML-CR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_CR();
                break;

            case ('US-CITICONNECT-XML-DO'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_DO();
                break;

            case ('US-CITICONNECT-XML-SV'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_SV();
                break;

            case ('US-CITICONNECT-XML-GT'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_GT();
                break;

            case ('US-CITICONNECT-XML-PR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_PR();
                break;

            case ('US-CITICONNECT-XML-AR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_AR();
                break;

            case ('US-CITICONNECT-XML-CL'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_CL();
                break;

            case ('US-CITICONNECT-XML-CO'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_CO();
                break;

            case ('US-CITICONNECT-XML-PE'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_PE();
                break;

            case ('US-CITICONNECT-XML-CN'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_CN();
                break;

            case ('US-CITICONNECT-XML-CA'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_CA();
                break;

            case ('US-CITICONNECT-XML-US'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_US();
                break;

            case ('US-CITICONNECT-XML-AT'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_AT();
                break;

            case ('US-CITICONNECT-XML-BE'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_BE();
                break;

            case ('US-CITICONNECT-XML-DE'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_DE();
                break;

            case ('US-CITICONNECT-XML-FI'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_FI();
                break;

            case ('US-CITICONNECT-XML-FR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_FR();
                break;

            case ('US-CITICONNECT-XML-IE'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_IE();
                break;

            case ('US-CITICONNECT-XML-LU'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_LU();
                break;

            case ('US-CITICONNECT-XML-NL'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_NL();
                break;

            case ('US-CITICONNECT-XML-GB'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_GB();
                break;

            case ('US-CITICONNECT-XML-SE'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_SE();
                break;

            case ('US-CITICONNECT-XML-DK'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_DK();
                break;

            case ('US-CITICONNECT-XML-IT'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_IT();
                break;

            case ('US-CITICONNECT-XML-NO'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_NO();
                break;

            case ('US-CITICONNECT-XML-KR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_KR();
                break;

            case ('US-CITICONNECT-XML-NZ'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_NZ();
                break;

            case ('US-CITICONNECT-XML-TW'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_TW();
                break;

            case ('US-CITICONNECT-XML-JO'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_JO();
                break;

            case ('US-CITICONNECT-XML-AE'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_AE();
                break;

            case ('US-CITICONNECT-XML-MX'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_MX();
                break;

            case ('US-CITICONNECT-XML-AU'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_AU();
                break;

            case ('US-CITICONNECT-XML-BR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_BR();
                break;

            case ('US-CITICONNECT-XML-CZ'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_CZ();
                break;

            case ('US-CITICONNECT-XML-HK'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_HK();
                break;

            case ('US-CITICONNECT-XML-MO'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_MO();
                break;

            case ('US-CITICONNECT-XML-HN'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_HN();
                break;

            case ('US-CITICONNECT-XML-HU'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_HU();
                break;

            case ('US-CITICONNECT-XML-ID'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_ID();
                break;

            case ('US-CITICONNECT-XML-IN'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_IN();
                break;

            case ('US-CITICONNECT-XML-JP'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_JP();
                break;

            case ('US-CITICONNECT-XML-KE'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_KE();
                break;

            case ('US-CITICONNECT-XML-MY'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_MY();
                break;

            case ('US-CITICONNECT-XML-PA'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_PA();
                break;

            case ('US-CITICONNECT-XML-PH'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_PH();
                break;

            case ('US-CITICONNECT-XML-PL'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_PL();
                break;

            case ('US-CITICONNECT-XML-RO'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_RO();
                break;

            case ('US-CITICONNECT-XML-RU'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_RU();
                break;

            case ('US-CITICONNECT-XML-SG'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_SG();
                break;

            case ('US-CITICONNECT-WL-XML-AG'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_AG();
                break;

            case ('US-CITICONNECT-WL-XML-MO'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_MO();
                break;

            case ('US-CITICONNECT-WL-XML-FJ'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_FJ();
                break;

            case ('US-CITICONNECT-WL-XML-BO'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_BO();
                break;

            case ('US-CITICONNECT-WL-XML-IS'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_IS();
                break;

            case ('US-CITICONNECT-XML-SK'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_SK();
                break;

            case ('US-CITICONNECT-XML-TH'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_TH();
                break;

            case ('US-CITICONNECT-XML-TR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_TR();
                break;

            case ('US-CITICONNECT-XML-UA'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_UA();
                break;

            case ('US-CITICONNECT-XML-UY'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_UY();
                break;

            case ('US-CITICONNECT-XML-VE'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_VE();
                break;

            case ('US-CITICONNECT-XML-ZA'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_ZA();
                break;

            case ('US-CITICONNECT-WL-XML-AU'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_AU();
                break;

            case ('US-CITICONNECT-WL-XML-CA'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_CA();
                break;

            case ('US-CITICONNECT-WL-XML-SG'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_SG();
                break;

            case ('US-CITICONNECT-WL-XML-GB'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_GB();
                break;

            case ('US-CITICONNECT-WL-XML-US'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_US();
                break;

            case ('US-CITICONNECT-WL-XML-AL'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_AL();
                break;

            case ('US-CITICONNECT-WL-XML-DZ'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_DZ();
                break;

            case ('US-CITICONNECT-WL-XML-AO'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_AO();
                break;

            case ('US-CITICONNECT-WL-XML-AT'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_AT();
                break;

            case ('US-CITICONNECT-WL-XML-BS'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_BS();
                break;

            case ('US-CITICONNECT-WL-XML-BH'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_BH();
                break;

            case ('US-CITICONNECT-WL-XML-BD'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_BD();
                break;

            case ('US-CITICONNECT-WL-XML-BY'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_BY();
                break;

            case ('US-CITICONNECT-WL-XML-BE'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_BE();
                break;

            case ('US-CITICONNECT-WL-XML-BJ'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_BJ();
                break;

            case ('US-CITICONNECT-WL-XML-BW'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_BW();
                break;

            case ('US-CITICONNECT-WL-XML-BR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_BR();
                break;

            case ('US-CITICONNECT-WL-XML-BN'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_BN();
                break;

            case ('US-CITICONNECT-WL-XML-BG'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_BG();
                break;

            case ('US-CITICONNECT-WL-XML-BF'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_BF();
                break;

            case ('US-CITICONNECT-WL-XML-KH'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_KH();
                break;

            case ('US-CITICONNECT-WL-XML-CM'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_CM();
                break;

            case ('US-CITICONNECT-WL-XML-TD'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_TD();
                break;

            case ('US-CITICONNECT-WL-XML-CL'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_CL();
                break;

            case ('US-CITICONNECT-WL-XML-CN'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_CN();
                break;

            case ('US-CITICONNECT-WL-XML-CO'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_CO();
                break;

            case ('US-CITICONNECT-WL-XML-CD'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_CD();
                break;

            case ('US-CITICONNECT-WL-XML-CR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_CR();
                break;

            case ('US-CITICONNECT-WL-XML-CI'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_CI();
                break;

            case ('US-CITICONNECT-WL-XML-HR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_HR();
                break;

            case ('US-CITICONNECT-WL-XML-CY'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_CY();
                break;

            case ('US-CITICONNECT-WL-XML-CZ'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_CZ();
                break;

            case ('US-CITICONNECT-WL-XML-DK'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_DK();
                break;

            case ('US-CITICONNECT-WL-XML-EG'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_EG();
                break;

            case ('US-CITICONNECT-WL-XML-EE'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_EE();
                break;

            case ('US-CITICONNECT-WL-XML-ET'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_ET();
                break;

            case ('US-CITICONNECT-WL-XML-FI'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_FI();
                break;

            case ('US-CITICONNECT-WL-XML-FR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_FR();
                break;

            case ('US-CITICONNECT-WL-XML-GA'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_GA();
                break;

            case ('US-CITICONNECT-WL-XML-GE'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_GE();
                break;

            case ('US-CITICONNECT-WL-XML-DE'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_DE();
                break;

            case ('US-CITICONNECT-WL-XML-GH'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_GH();
                break;

            case ('US-CITICONNECT-WL-XML-GR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_GR();
                break;

            case ('US-CITICONNECT-WL-XML-GT'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_GT();
                break;

            case ('US-CITICONNECT-WL-XML-GW'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_GW();
                break;

            case ('US-CITICONNECT-WL-XML-GY'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_GY();
                break;

            case ('US-CITICONNECT-WL-XML-HT'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_HT();
                break;

            case ('US-CITICONNECT-WL-XML-HK'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_HK();
                break;

            case ('US-CITICONNECT-WL-XML-HU'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_HU();
                break;

            case ('US-CITICONNECT-WL-XML-IN'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_IN();
                break;

            case ('US-CITICONNECT-WL-XML-ID'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_ID();
                break;

            case ('US-CITICONNECT-WL-XML-IL'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_IL();
                break;

            case ('US-CITICONNECT-WL-XML-IT'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_IT();
                break;

            case ('US-CITICONNECT-WL-XML-JP'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_JP();
                break;

            case ('US-CITICONNECT-WL-XML-JO'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_JO();
                break;

            case ('US-CITICONNECT-WL-XML-KZ'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_KZ();
                break;

            case ('US-CITICONNECT-WL-XML-KE'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_KE();
                break;

            case ('US-CITICONNECT-WL-XML-KW'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_KW();
                break;

            case ('US-CITICONNECT-WL-XML-LV'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_LV();
                break;

            case ('US-CITICONNECT-WL-XML-LB'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_LB();
                break;

            case ('US-CITICONNECT-WL-XML-LU'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_LU();
                break;

            case ('US-CITICONNECT-WL-XML-MY'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_MY();
                break;

            case ('US-CITICONNECT-WL-XML-MT'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_MT();
                break;

            case ('US-CITICONNECT-WL-XML-MX'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_MX();
                break;

            case ('US-CITICONNECT-WL-XML-MD'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_MD();
                break;

            case ('US-CITICONNECT-WL-XML-MA'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_MA();
                break;
    
            case ('US-CITICONNECT-WL-XML-MG'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_MG();
                break;
    
            case ('US-CITICONNECT-WL-XML-ML'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_ML();
                break;
    
            case ('US-CITICONNECT-WL-XML-KM'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_KM();
                break;

            case ('US-CITICONNECT-WL-XML-GM'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_GM();
                break;

            case ('US-CITICONNECT-WL-XML-GN'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_GN();
                break;

            case ('US-CITICONNECT-WL-XML-NI'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_NI();
                break;

            case ('US-CITICONNECT-WL-XML-MZ'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_MZ();
                break;

            case ('US-CITICONNECT-WL-XML-NA'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_NA();
                break;

            case ('US-CITICONNECT-WL-XML-NL'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_NL();
                break;

            case ('US-CITICONNECT-WL-XML-NZ'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_NZ();
                break;

            case ('US-CITICONNECT-WL-XML-NE'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_NE();
                break;

            case ('US-CITICONNECT-WL-XML-NG'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_NG();
                break;

            case ('US-CITICONNECT-WL-XML-NO'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_NO();
                break;

            case ('US-CITICONNECT-WL-XML-OM'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_OM();
                break;

            case ('US-CITICONNECT-WL-XML-PK'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_PK();
                break;

            case ('US-CITICONNECT-WL-XML-PG'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_PG();
                break;

            case ('US-CITICONNECT-WL-XML-PE'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_PE();
                break;

            case ('US-CITICONNECT-WL-XML-PH'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_PH();
                break;

            case ('US-CITICONNECT-WL-XML-PL'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_PL();
                break;

            case ('US-CITICONNECT-WL-XML-PT'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_PT();
                break;

            case ('US-CITICONNECT-WL-XML-QA'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_QA();
                break;

            case ('US-CITICONNECT-WL-XML-IE'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_IE();
                break;

            case ('US-CITICONNECT-WL-XML-RO'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_RO();
                break;

            case ('US-CITICONNECT-WL-XML-RU'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_RU();
                break;

            case ('US-CITICONNECT-WL-XML-SA'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_SA();
                break;

            case ('US-CITICONNECT-WL-XML-SK'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_SK();
                break;

            case ('US-CITICONNECT-WL-XML-ZA'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_ZA();
                break;

            case ('US-CITICONNECT-WL-XML-KR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_KR();
                break;

            case ('US-CITICONNECT-WL-XML-ES'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_ES();
                break;

            case ('US-CITICONNECT-WL-XML-LK'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_LK();
                break;

            case ('US-CITICONNECT-WL-XML-SE'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_SE();
                break;

            case ('US-CITICONNECT-WL-XML-CH'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_CH();
                break;

            case ('US-CITICONNECT-WL-XML-TW'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_TW();
                break;

            case ('US-CITICONNECT-WL-XML-TZ'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_TZ();
                break;

            case ('US-CITICONNECT-WL-XML-TH'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_TH();
                break;

            case ('US-CITICONNECT-WL-XML-TG'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_TG();
                break;

            case ('US-CITICONNECT-WL-XML-TN'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_TN();
                break;

            case ('US-CITICONNECT-WL-XML-TR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_TR();
                break;

            case ('US-CITICONNECT-WL-XML-UG'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_UG();
                break;

            case ('US-CITICONNECT-WL-XML-AE'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_AE();
                break;

            case ('US-CITICONNECT-WL-XML-VN'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_VN();
                break;

            case ('US-CITICONNECT-WL-XML-ZM'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_ZM();
                break;

            case ('US-CITICONNECT-WL-XML-AZ'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_AZ();
                break;

            case ('US-CITICONNECT-WL-XML-BM'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_BM();
                break;

            case ('US-CITICONNECT-WL-XML-DO'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_DO();
                break;

            case ('US-CITICONNECT-WL-XML-HN'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_HN();
                break;

            case ('US-CITICONNECT-WL-XML-LA'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_LA();
                break;

            case ('US-CITICONNECT-WL-XML-LI'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_LI();
                break;

            case ('US-CITICONNECT-WL-XML-LT'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_LT();
                break;

            case ('US-CITICONNECT-WL-XML-MM'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_MM();
                break;

            case ('US-CITICONNECT-WL-XML-MN'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_MN();
                break;

            case ('US-CITICONNECT-WL-XML-MR'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_MR();
                break;

            case ('US-CITICONNECT-WL-XML-MU'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_MU();
                break;

            case ('US-CITICONNECT-WL-XML-MW'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_MW();
                break;

            case ('US-CITICONNECT-WL-XML-RW'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_RW();
                break;

            case ('US-CITICONNECT-WL-XML-SN'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_SN();
                break;

            case ('US-CITICONNECT-WL-XML-SI'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_SI();
                break;

            case ('US-CITICONNECT-WL-XML-SZ'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_SZ();
                break;

            case ('US-CITICONNECT-WL-XML-TT'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_TT();
                break;

            case ('US-CITICONNECT-WL-XML-UY'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_UY();
                break;

            case ('US-CITICONNECT-WL-XML-NP'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_NP();
                break;

            case ('US-CITICONNECT-WL-XML-RS'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_RS();
                break;

            case ('US-CITICONNECT-WL-XML-SC'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_SC();
                break;

            case ('US-CITICONNECT-WL-XML-PY'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_PY();
                break;

            case ('US-CITICONNECT-WL-XML-UZ'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_UZ();
                break;

            case ('US-CITICONNECT-WL-XML-MC'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_MC();
                break;

            case ('US-CITICONNECT-WL-XML-AM'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_AM();
                break;

            case ('US-CITICONNECT-WL-XML-ME'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_ME();
                break;

            case ('US-CITICONNECT-XML-TN'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_TN();
                break;

            case ('US-CITICONNECT-XML-PY'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_PY();
                break;

            case ('US-CITICONNECT-XML-IL'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_IL();
                break;

            case ('US-CITICONNECT-WL-PPW-XML'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_PPW_XML();
                break;

            case ('US-CITICONNECT-WL-XML-BA'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_BA();
                break;

            case ('US-CITICONNECT-WL-XML-BB'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_BB();
                break;

            case ('US-CITICONNECT-WL-XML-MK'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_MK();
                break;

            case ('US-CITICONNECT-XML-VN'):
                notesList = this.getNotesMetaData_US_CITICONNECT_XML_VN();
                break;

            case ('US-CITICONNECT-WL-XML-JM'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_JM();
                break;

            case ('US-CITICONNECT-WL-XML-MV'):
                notesList = this.getNotesMetaData_US_CITICONNECT_WL_XML_MV();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_EC</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_EC()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-EC','CBFT-442','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name is required and is stored in the Beneficiary Name region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Creditor > Postal Address is stored in Beneficiary section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Country Code is required.:-Either the Routing number or SWIFT code is required on Vendor bank account.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Beneficiary account is the Vendor Bank account number.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.:-The Unstructured Remittance Information field may be overridden using the RmtOvr field on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields. If not overridden this field will hold the Invoice numbers of the transaction.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-EC','DFT-441','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-EC','BKT-440','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name is required and is stored in the Beneficiary Name region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Creditor > Postal Address is stored in Beneficiary section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Country Code is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used.:-Beneficiary account is the Vendor Bank account number.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-EC','CHK-468','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab.:--These fields are populated on the Vendor Addresses tab. The Country/region is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_CR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_CR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CR','CBFT-442','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name is required and is stored in the Beneficiary Name region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Creditor > Postal Address is stored in Beneficiary section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Country Code is required.:-Either the Routing number or SWIFT code is required on Vendor bank account.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Beneficiary account is the Vendor Bank account number.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.:-The Unstructured Remittance Information field may be overridden using the RmtOvr field on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields. If not overridden this field will hold the Invoice numbers of the transaction.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CR','DFT-441','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CR','BKT-440','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name is required and is stored in the Beneficiary Name region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Creditor > Postal Address is stored in Beneficiary section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Country Code is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used.:-Beneficiary account is the Vendor Bank account number.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CR','CHK-460','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab.:--These fields are populated on the Vendor Addresses tab. The Country/region is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CR','CHK-462','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab.:--These fields are populated on the Vendor Addresses tab. The Country/region is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_DO</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_DO()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-DO','BKT-440','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name is required and is stored in the Beneficiary Name region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Creditor > Postal Address is stored in Beneficiary section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Country Code is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used.:-Beneficiary account is the Vendor Bank account number.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-DO','DFT-441','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-Debtor Id is required and stored in the Id field of the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-DO','CBFT-442','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Id is required and stored in the Id field of the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name is required and is stored in the Beneficiary Name region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Creditor > Postal Address is stored in Beneficiary section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Country Code is required.:-Either the Routing number or SWIFT code is required on Vendor bank account.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Beneficiary account is the Vendor Bank account number.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.:-The Unstructured Remittance Information field may be overridden using the RmtOvr field on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields. If not overridden this field will hold the Invoice numbers of the transaction.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-DO','CHK-465','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Id is required and stored in the Id field of the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab.:--These fields are populated on the Vendor Addresses tab. The Country/region is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_JM</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_JM()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-JM','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-JM','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_MV</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_MV()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MV','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MV','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_SV</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_SV()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-SV','BKT-440','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name is required and is stored in the Beneficiary Name region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Creditor > Postal Address is stored in Beneficiary section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Country Code is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used.:-Beneficiary account is the Vendor Bank account number.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-SV','DFT-441','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-SV','CBFT-442','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name is required and is stored in the Beneficiary Name region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Creditor > Postal Address is stored in Beneficiary section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Country Code is required.:-Either the Routing number or SWIFT code is required on Vendor bank account.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Beneficiary account is the Vendor Bank account number.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.:-The Unstructured Remittance Information field may be overridden using the RmtOvr field on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields. If not overridden this field will hold the Invoice numbers of the transaction.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-SV','CHK-469','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab.:--These fields are populated on the Vendor Addresses tab. The Country/region is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_GT</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_GT()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-GT','BKT-440','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name is required and is stored in the Beneficiary Name region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Creditor > Postal Address is stored in Beneficiary section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Country Code is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used. :-Beneficiary account is the Vendor Bank account number.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-GT','DFT-441','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-GT','CBFT-442','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name is required and is stored in the Beneficiary Name region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Creditor > Postal Address is stored in Beneficiary section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Country Code is required.:-Either the Routing number or SWIFT code is required on Vendor bank account.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Beneficiary account is the Vendor Bank account number.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.:-The Unstructured Remittance Information field may be overridden using the RmtOvr field on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields. If not overridden this field will hold the Invoice numbers of the transaction.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-GT','CHK-470','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab.:--These fields are populated on the Vendor Addresses tab. The Country/region is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-GT','CHK-471','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab.:--These fields are populated on the Vendor Addresses tab. The Country/region is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-GT','CHK-472','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab.:--These fields are populated on the Vendor Addresses tab. The Country/region is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in the Tax exempt number field on the Vendor > Invoice and delivery tab.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-GT','CHK-473','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab.:--These fields are populated on the Vendor Addresses tab. The Country/region is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_PR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_PR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PR','CCD','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PR','PPD','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Id is required and stored in the Id field of the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name is required and is stored in the Beneficiary Name region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Creditor > Postal Address is stored in Beneficiary section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Country Code is required.:-The Routing code is required on Vendor bank account.:-The IBAN code is required on Vendor bank account.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Beneficiary account is the Vendor Bank account number.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.::-The Unstructured Remittance Information field may be overridden using the RmtInf field on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PR','FT-607','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.::-The Unstructured Remittance Information field may be overridden using the RmtInf field on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-Creditor Name is required and is stored in the Beneficiary Name region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Creditor > Postal Address is stored in Beneficiary section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Country Code is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-Beneficiary account is the Vendor Bank account number.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PR','CHK-487','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab.:--These fields are populated on the Vendor Addresses tab. The Country/region is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PR','CHK-488','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab.:--These fields are populated on the Vendor Addresses tab. The Country/region is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_AR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_AR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-AR','DFT-441','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-AR','BKT-440','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-AR','CHK-443','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-AR','CHK-445','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_CL</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_CL()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CL','CBFT-442','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name is required and is stored in the Beneficiary Name region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Creditor > Postal Address is stored in Beneficiary section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Country Code is required.:-Either the Routing number or SWIFT code is required on Vendor bank account.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Beneficiary account is the Vendor Bank account number.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.:-The Unstructured Remittance Information field may be overridden using the RmtOvr field on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields. If not overridden this field will hold the Invoice numbers of the transaction.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CL','DFT-441','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CL','BKT-440','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name is required and is stored in the Beneficiary Name region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Creditor > Postal Address is stored in Beneficiary section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Country Code is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used.:-Beneficiary account is the Vendor Bank account number.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CL','CHK-455','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_CO</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_CO()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CO','DFT-441','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CO','BKT-440','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CO','CHK-458','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab.:--These fields are populated on the Vendor Addresses tab. The Country/region is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used. :-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_PE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_PE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PE','CBFT-442','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name is required and is stored in the Beneficiary Name region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Creditor > Postal Address is stored in Beneficiary section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Country Code is required.:-Either the Routing number or SWIFT code is required on Vendor bank account.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Beneficiary account is the Vendor Bank account number.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.:-The Unstructured Remittance Information field may be overridden using the RmtOvr field on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields. If not overridden this field will hold the Invoice numbers of the transaction.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PE','DFT-441','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PE','BKT-440','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name is required and is stored in the Beneficiary Name region field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications.:-Creditor > Postal Address is stored in Beneficiary section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Country Code is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used.:-Beneficiary account is the Vendor Bank account number.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PE','CHK-484','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab.:--These fields are populated on the Vendor Addresses tab. The Country/region is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PE','CHK-486','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Creditor Name and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab.:--These fields are populated on the Vendor Addresses tab. The Country/region is required.:-Creditor Identification must be Organization or Private individual and if left blank it will default to Organization. This field is found on the Code lookup fields tab of EFT+ file formats > Payment specifications and on Vendor eBanking details > Payment specifications > Additional fields.:-The Beneficiary tax id is required and is stored in either of these fields:--The Tax exempt number field on the Vendor > Invoice and delivery tab.:--The Beneficiary Tax Id field on Vendor eBanking details > Payment specifications > Additional fields and will take precedence if both fields are used.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_CN</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_CN()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CN','OTC-894','-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name.:-Debtor Name and Postal Address are set in EFT+ bank account > AP EFT+ > Wire/IAT ordering party tab. Name is required.:-Debtor Agent BIC is required and stored on the SWIFT code in the Cash and bank management > Bank Accounts screen.:-Creditor Agent Name and Postal Address are set in the Beneficiary bank section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Name is required.:-Creditor Name and Postal Address are set in Beneficiary section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications.:-Beneficiary account is the Vendor Bank account number.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are set.:--BIC will be included if the SWIFT code is populated.:--MmbId will be included if the Bank id is populated.:-Remittance Location method may be set on the Beneficiary Mail Handling field in the Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CN','DFT-391','-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name.:-Remittance Location method may be set on the Beneficiary Mail Handling field in the Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CN','CBFT-392','Review Code lookup fields:-EFT+ file formats > Payment specifications.:-Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name.:-Debtor Name and Postal Address are set in EFT+ bank account > AP EFT+ > Wire/IAT ordering party tab. Name is required.:-Debtor Agent BIC is required and set on the SWIFT code in the Cash and bank management > Bank Accounts screen.:-Creditor Agent Name and Postal Address are set in the Beneficiary bank section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Name and Country/region are required.:-Creditor Name and Postal Address are set in Beneficiary section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Name is required.:-The Routing number or SWIFT code is required on Vendor bank account.:-Beneficiary account is the Vendor Bank account number.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are set.:--BIC will be included if the SWIFT code is populated.:--MmbId will be included if the Bank id is populated.:-Creditor agent instruction is set on the Payment Journal > Payment tab > Central Bank purpose code.:--These values are set on the Purpose text field on Cash and bank management > Payment Purpose codes.:-Remittance Location method may be set on the Beneficiary Mail Handling field in the Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CN','CBFT-896','-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name.:-Debtor Name and Postal Address are set in EFT+ bank account > AP EFT+ > Wire/IAT ordering party tab. Name is required.:-Debtor Agent BIC is required and stored on the SWIFT code in the Cash and bank management > Bank Accounts screen.:-Creditor Agent Name and Postal Address are set in the Beneficiary bank section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications. Name is required.:-Creditor Name and Postal Address are set in Beneficiary section of Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications.:-Beneficiary account is the Vendor Bank account number.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab of Vendor eBanking details > Payment specifications are set.:--BIC will be included if the SWIFT code is populated.:--MmbId will be included if the Bank id is populated.:-Creditor agent instruction is set in the Central Bank purpose code on the Payment Journal > Payment tab.:--These values are set on the Purpose text field on Cash and bank management > Payment Purpose codes.:-Remittance Location method may be set on the Beneficiary Mail Handling field in the Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CN','PLG-400','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Instruction for Debtor Agent is set in the Payment journal > Payment tab > Central bank purpose code field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CN','PRL-401','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Instruction for Debtor Agent is set in the Payment journal > Payment tab > Central bank purpose code field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CN','CHK-402','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_CA</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_CA()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CA','CACH-460','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CA','BKT-602','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CA','DFT-603','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CA','CBFT-604','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CA','CHK-20','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CA','CHK20CAMAL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Bank Account Routing/Transit number field in the Cash and bank management > Bank Accounts screen is required.:-Debtor Account number is the Bank Account number.::-Wire/IAT ordering party tab of EFT+ bank account > AP EFT+ fields:-Debtor Name and Debtor Postal Address are stored on the Name and Address fields.::Vendor ebanking details > Payment specification fields:-Creditor Name is required and is stored in the Beneficiary Name field on the Wire transfer/IAT-1 tab.:-Creditor Postal Address is stored in Beneficiary section of the Wire transfer/IAT - 1 tab.:-Charge bearer is stored in the Charges field in the Other notes section of the Wire transfer/IAT - 1 tab.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.::-Additional information is stored in the Invoice journal > Line > Description field.::-AP Email is stored in the eBanking suite parameters > EFT+ defaults > AP EFT+ setup > E-mail notification > Reply to e-mail']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CA','CHK20CAFED','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Bank Account Routing/Transit number field  in the Cash and bank management > Bank Accounts screen is required.:-Debtor Account number is the Bank Account number.::-Wire/IAT ordering party tab of EFT+ bank account > AP EFT+ fields:-Debtor Name and Debtor Postal Address are stored on the Name and Address fields.::Vendor ebanking details > Payment specification fields:-Creditor Name is required and is stored in the Beneficiary Name field on the Wire transfer/IAT-1 tab.:-Creditor Postal Address is stored in Beneficiary section of the Wire transfer/IAT - 1 tab.:-Charge bearer is stored in the Charges field in the Other notes section of the Wire transfer/IAT - 1 tab.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.::-Additional information is stored in the Invoice journal > Line > Description field.::-AP Email is stored in the eBanking suite parameters > EFT+ defaults > AP EFT+ setup > E-mail notification > Reply to e-mail']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CA','CHKCAFED02','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Bank Account Routing/Transit number field  in the Cash and bank management > Bank Accounts screen is required.:-Debtor Account number is the Bank Account number.::-Wire/IAT ordering party tab of EFT+ bank account > AP EFT+ fields:-Debtor Name and Debtor Postal Address are stored on the Name and Address fields.::Vendor ebanking details > Payment specification fields:-Creditor Name is required and is stored in the Beneficiary Name field on the Wire transfer/IAT-1 tab.:-Creditor Postal Address is stored in Beneficiary section of the Wire transfer/IAT - 1 tab.:-Charge bearer is stored in the Charges field in the Other notes section of the Wire transfer/IAT - 1 tab.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.::-Additional information is stored in the Invoice journal > Line > Description field.::-AP Email is stored in the eBanking suite parameters > EFT+ defaults > AP EFT+ setup > E-mail notification > Reply to e-mail']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CA','CHKCAFED03','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Bank Account Routing/Transit number field  in the Cash and bank management > Bank Accounts screen is required.:-Debtor Account number is the Bank Account number.::-Wire/IAT ordering party tab of EFT+ bank account > AP EFT+ fields:-Debtor Name and Debtor Postal Address are stored on the Name and Address fields.::Vendor ebanking details > Payment specification fields:-Creditor Name is required and is stored in the Beneficiary Name field on the Wire transfer/IAT-1 tab.:-Creditor Postal Address is stored in Beneficiary section of the Wire transfer/IAT - 1 tab.:-Charge bearer is stored in the Charges field in the Other notes section of the Wire transfer/IAT - 1 tab.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.::-Additional information is stored in the Invoice journal > Line > Description field.::-AP Email is stored in the eBanking suite parameters > EFT+ defaults > AP EFT+ setup > E-mail notification > Reply to e-mail']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CA','CPS-706','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CA','ACH-780','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_US</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_US()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','ACH-CCD','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','ACH-PPD','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','ACH-CTX','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','BKT-500','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','WLW-571','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field..:--Member Identification is the Routing number.:--Routing number type must be set to SC if the Routing number contains a UK Sort code or FW if it contains a FedWire code.:-WorldLink Client Id is set in the WorldLink Id field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','FT-499','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','CCD-502','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','PPD-503','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Debtor Agent BIC is required and is stored on the SWIFT code field in the Cash and bank management > Bank Accounts screen.:-Debtor Account number is the Bank Account number.::Wire/IAT ordering party tab of EFT+ bank account > AP EFT+ fields:-Debtor Name and Debtor Postal Address are stored on the Name and Address fields.::Vendor ebanking details > Payment specification fields:-Creditor Name is required and is stored in the Beneficiary Name field on the Wire transfer/IAT-1 tab.:-Creditor Postal Address is stored in Beneficiary section of the Wire transfer/IAT - 1 tab.:-Creditor Agent Name is required and stored on the Name field in the Beneficiary bank section of the Wire transfer/IAT - 1 tab.:-Creditor Agent Postal Address is stored on the Address field in the Beneficiary bank section of the Wire transfer/IAT - 1 tab.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','ACH-CCP','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','ACH-PPP','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','CCDP-14','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','CTX-17','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','CHK-19','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','CHKUSFED02','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Bank Account Routing/Transit number field in the Cash and bank management > Bank Accounts screen is required.:-Debtor Account number is the Bank Account number.::-Wire/IAT ordering party tab of EFT+ bank account > AP EFT+ fields:-Debtor Name and Debtor Postal Address are stored on the Name and Address fields.::Vendor ebanking details > Payment specification fields:-Creditor Name is required and is stored in the Beneficiary Name field on the Wire transfer/IAT-1 tab.:-Creditor Postal Address is stored in Beneficiary section of the Wire transfer/IAT - 1 tab.:-Charge bearer is stored in the Charges field in the Other notes section of the Wire transfer/IAT - 1 tab.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.::-Additional information is stored in the Invoice journal > Line > Description field.::-AP Email is stored in the eBanking suite parameters > EFT+ defaults > AP EFT+ setup > E-mail notification > Reply to e-mail']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','CHKUSFED03','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Bank Account Routing/Transit number field in the Cash and bank management > Bank Accounts screen is required.:-Debtor Account number is the Bank Account number.::-Wire/IAT ordering party tab of EFT+ bank account > AP EFT+ fields:-Debtor Name and Debtor Postal Address are stored on the Name and Address fields.::Vendor ebanking details > Payment specification fields:-Creditor Name is required and is stored in the Beneficiary Name field on the Wire transfer/IAT-1 tab.:-Creditor Postal Address is stored in Beneficiary section of the Wire transfer/IAT - 1 tab.:-Charge bearer is stored in the Charges field in the Other notes section of the Wire transfer/IAT - 1 tab.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.::-Additional information is stored in the Invoice journal > Line > Description field.::-AP Email is stored in the eBanking suite parameters > EFT+ defaults > AP EFT+ setup > E-mail notification > Reply to e-mail']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','CHKCAFED02','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Bank Account Routing/Transit number field in the Cash and bank management > Bank Accounts screen is required.:-Debtor Account number is the Bank Account number.::-Wire/IAT ordering party tab of EFT+ bank account > AP EFT+ fields:-Debtor Name and Debtor Postal Address are stored on the Name and Address fields.::Vendor ebanking details > Payment specification fields:-Creditor Name is required and is stored in the Beneficiary Name field on the Wire transfer/IAT-1 tab.:-Creditor Postal Address is stored in Beneficiary section of the Wire transfer/IAT - 1 tab.:-Charge bearer is stored in the Charges field in the Other notes section of the Wire transfer/IAT - 1 tab.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.::-Additional information is stored in the Invoice journal > Line > Description field.::-AP Email is stored in the eBanking suite parameters > EFT+ defaults > AP EFT+ setup > E-mail notification > Reply to e-mail']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','CHKCAFED03','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Bank Account Routing/Transit number field in the Cash and bank management > Bank Accounts screen is required.:-Debtor Account number is the Bank Account number.::-Wire/IAT ordering party tab of EFT+ bank account > AP EFT+ fields:-Debtor Name and Debtor Postal Address are stored on the Name and Address fields.::Vendor ebanking details > Payment specification fields:-Creditor Name is required and is stored in the Beneficiary Name field on the Wire transfer/IAT-1 tab.:-Creditor Postal Address is stored in Beneficiary section of the Wire transfer/IAT - 1 tab.:-Charge bearer is stored in the Charges field in the Other notes section of the Wire transfer/IAT - 1 tab.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.::-Additional information is stored in the Invoice journal > Line > Description field.::-AP Email is stored in the eBanking suite parameters > EFT+ defaults > AP EFT+ setup > E-mail notification > Reply to e-mail']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','CHK-585','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','CTX-942','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','CPS-28','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','CPS-29','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','USFCP-821','-Group Header > Initiating Party Name is mandatory and is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','CHK19CAMAL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Bank Account Routing/Transit number field in the Cash and bank management > Bank Accounts screen is required.:-Debtor Account number is the Bank Account number.::-Wire/IAT ordering party tab of EFT+ bank account > AP EFT+ fields:-Debtor Name and Debtor Postal Address are stored on the Name and Address fields.::Vendor ebanking details > Payment specification fields:-Creditor Name is required and is stored in the Beneficiary Name field on the Wire transfer/IAT-1 tab.:-Creditor Postal Address is stored in Beneficiary section of the Wire transfer/IAT - 1 tab.:-Charge bearer is stored in the Charges field in the Other notes section of the Wire transfer/IAT - 1 tab.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.::-Vendor eBanking Details > Vendor > Vendor e-mail or E-mail 2 :--Vendor email will populate only if Vendor e-mail check box is populated.::-AP Email is stored in the eBanking suite parameters > EFT+ defaults > AP EFT+ setup > E-mail notification > Reply to e-mail']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','CHK19USFED','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Bank Account Routing/Transit number field in the Cash and bank management > Bank Accounts screen is required.:-Debtor Account number is the Bank Account number.::-Wire/IAT ordering party tab of EFT+ bank account > AP EFT+ fields:-Debtor Name and Debtor Postal Address are stored on the Name and Address fields.::Vendor ebanking details > Payment specification fields:-Creditor Name is required and is stored in the Beneficiary Name field on the Wire transfer/IAT-1 tab.:-Creditor Postal Address is stored in Beneficiary section of the Wire transfer/IAT - 1 tab.:-Charge bearer is stored in the Charges field in the Other notes section of the Wire transfer/IAT - 1 tab.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.::-Vendor eBanking Details > Vendor > Vendor e-mail or E-mail 2 :--Vendor email will populate only if Vendor e-mail check box is populated.::-AP Email is stored in the eBanking suite parameters > EFT+ defaults > AP EFT+ setup > E-mail notification > Reply to e-mail']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','CHK19CAFED','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Bank Account Routing/Transit number field in the Cash and bank management > Bank Accounts screen is required.:-Debtor Account number is the Bank Account number.::-Wire/IAT ordering party tab of EFT+ bank account > AP EFT+ fields:-Debtor Name and Debtor Postal Address are stored on the Name and Address fields.::Vendor ebanking details > Payment specification fields:-Creditor Name is required and is stored in the Beneficiary Name field on the Wire transfer/IAT-1 tab.:-Creditor Postal Address is stored in Beneficiary section of the Wire transfer/IAT - 1 tab.:-Charge bearer is stored in the Charges field in the Other notes section of the Wire transfer/IAT - 1 tab.:-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.::-Vendor eBanking Details > Vendor > Vendor e-mail or E-mail 2 :--Vendor email will populate only if Vendor e-mail check box is populated.::-AP Email is stored in the eBanking suite parameters > EFT+ defaults > AP EFT+ setup > E-mail notification > Reply to e-mail']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','CTX-950','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Wire/IAT ordering party tab of EFT+ bank account > AP EFT+ fields:-Debtor Name and Debtor Postal Address are stored on the Name and Address fields.::-Cash and Bank Management > Bank accounts:-Routing/Transit number is required.:-Bank Account number and it is required.::-Vendor Bank accounts:-Either IBAN or Bank accont number is required. If both are exist then IBAN will take precedence.:-Either Swift code or Routing number is required.If both are required then SWIFT code will take precedence.::-Vendor ebanking details > Payment specification fields:-Creditor Name is required and is stored in the Beneficiary Name field on the Wire transfer/IAT-1 tab.:-Creditor Postal Address is stored in Beneficiary section of the Wire transfer/IAT - 1 tab.:-Creditor Agent Postal Address is stored on the Address field in the Beneficiary bank section of the Wire transfer/IAT - 1 tab.::-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','CDM-950','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Wire/IAT ordering party tab of EFT+ bank account > AP EFT+ fields:-Debtor Name and Debtor Postal Address are stored on the Name and Address fields.::-Cash and Bank Management > Bank accounts:-Routing/Transit number is required.:-Bank Account number and it is required.::-Vendor Bank accounts:-Either IBAN or Bank accont number is required. If both are exist then IBAN will take precedence.:-Either Swift code or Routing number is required.If both are required then SWIFT code will take precedence.::-Vendor ebanking details > Payment specification fields:-Creditor Name is required and is stored in the Beneficiary Name field on the Wire transfer/IAT-1 tab.:-Creditor Postal Address is stored in Beneficiary section of the Wire transfer/IAT - 1 tab.:-Creditor Agent Postal Address is stored on the Address field in the Beneficiary bank section of the Wire transfer/IAT - 1 tab.::-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','CHK-950','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Bank Account Routing/Transit number in the Cash and bank management > Bank Accounts screen is required.:-Debtor Account number is the Bank Account number.::-Wire/IAT ordering party tab of EFT+ bank account > AP EFT+ fields:-Debtor Name and Debtor Postal Address are stored on the Name and Address fields.::-Vendor ebanking details > Payment specification fields:-Creditor Name is required and is stored in the Beneficiary Name field on the Wire transfer/IAT-1 tab.:-Creditor Postal Address is stored in Beneficiary section of the Wire transfer/IAT - 1 tab.::-Intermediary Agent 1 information will be included if either the SWIFT code or Bank id fields on the Intermediary bank section of the Wire transfer/IAT-2 tab are populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > BIC will be included if the SWIFT code field is populated.:--PmtInf > CdtTrfTxInf > IntrmyAg1 > FinInstnId > ClrSysMmbId > MmbId will be included if the Bank id field is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-US','TRADE','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_AT</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_AT()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-AT','ACH-SEPA','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.::Vendor Bank Account fields:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-AT','CB-WIRE','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:-SWIFT code is required.::Vendor Bank Account fields:-Either the Bank account number or the IBAN is required. If both are set, IBAN will take precedence.:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_BE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_BE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-BE','ACH-SEPA','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.::Vendor Bank Account fields:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.::OCR Reference Number:-OCR number comes from the Invoice payment id number.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-BE','CB-WIRE','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:-SWIFT code is required.::Vendor Bank Account fields:-Either the Bank account number or the IBAN is required. If both are set, IBAN will take precedence.:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_DE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_DE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-DE','ACH-SEPA','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field..::Vendor Bank Account fields:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-DE','CB-WIRE','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:-SWIFT code is required.::Vendor Bank Account fields:--Either IBAN or Bank account number is required. If both are set IBAN will take precedence:--Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-DE','SEPA-848','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-OCR Reference Number:--OCR number comes from the Invoice payment id number.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-DE','SEPA-939','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-OCR Reference Number:--OCR number comes from the Invoice payment id number.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_FI</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_FI()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-FI','ACH-SEPA','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.::Vendor Bank Account fields:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-FI','CB-WIRE','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:-SWIFT code is required.::Vendor Bank Account fields:-Either the Bank account number or the IBAN is required. If both are set, IBAN will take precedence.:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_FR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_FR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-FR','ACH-SEPA','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.::Vendor Bank Account fields:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-FR','CB-WIRE','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:-SWIFT code is required.::Vendor Bank Account fields:-Either the Bank account number or the IBAN is required. If both are set, IBAN will take precedence.:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_IE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_IE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-IE','ACH-SEPA','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.::Vendor Bank Account fields:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-IE','CB-WIRE','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_LU</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_LU()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-LU','ACH-SEPA','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.::Vendor Bank Account fields:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-LU','CB-WIRE','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:-SWIFT code is required.::Vendor Bank Account fields:-Either the Bank account number or the IBAN is required. If both are set, IBAN will take precedence.:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_NL</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_NL()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-NL','ACH-SEPA','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.::Vendor Bank Account fields:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.::Payment Id is set on the Payment ID field on the Payment tab of the Payment Journal.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-NL','CB-WIRE','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:-SWIFT code is required.::Vendor Bank Account fields:-Either the Bank account number or the IBAN is required. If both are set, IBAN will take precedence.:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_GB</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_GB()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-GB','ACH-SEPA','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-GB','ACH-DC','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-GB','CB-WIRE','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-GB','SEPA-848','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-OCR Reference Number:--OCR number comes from the Invoice payment id number.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-GB','SEPA-939','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-GB','CDFT-392','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-GB','SIP-962','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_SE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_SE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-SE','ACH-PG','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name is required and stored on Name field.:-PstCd is required and stored on Zip/postal code.:-TwnNm is required and stored on city.:-Country code is stored on Country/region field and it is required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:-SWIFT code is required.::Vendor Bank Account fields:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.::OCR Reference Number:-OCR number comes from the Invoice payment id number.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-SE','ACH-BG','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-SE','CB-WIRE','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:-SWIFT code is required.::Vendor Bank Account fields:-Either the Bank account number or the IBAN is required. If both are set, IBAN will take precedence.:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-SE','ACH-150','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Payment Id comes from the Accounts payable > Invoices > Invoice journal']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_DK</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_DK()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-DK','ACH-DC','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:-SWIFT code is required.::Vendor Bank Account fields:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-DK','CB-WIRE','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:-SWIFT code is required.::Vendor Bank Account fields:-Either the Bank account number or the IBAN is required. If both are set, IBAN will take precedence.:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-DK','ACH-208','Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_IT</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_IT()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-IT','ACH-DC','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:-SWIFT code is required.::Vendor Bank Account fields:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-IT','CB-WIRE','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:-SWIFT code is required.::Vendor Bank Account fields:-Either the Bank account number or the IBAN is required. If both are set, IBAN will take precedence.:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_NO</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_NO()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-NO','ACH-DC','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:-SWIFT code is required.::Vendor Bank Account fields:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-NO','ACH-KID','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-NO','CB-WIRE','Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:-Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:-Debtor Name and Country/region are required.::Cash and bank management module > Bank Account:-Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:-SWIFT code is required.::Vendor Bank Account fields:-Either the Bank account number or the IBAN is required. If both are set, IBAN will take precedence.:-Either the Routing number or SWIFT code is required. If the Routing number is used, then the Creditor Identification Code Lookup must be set.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name is required and is stored in the Beneficiary Name region field.:-Creditor agent Country code is required and is stored in the Beneficiary bank Country/Region field.:-Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field and is required.:--Building number is stored in the Address 2 field and is required.:--City, Zip/postal and Country Code are required.:-The charges bearer is set on the Charges indicator field in the Other notes section.::Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_KR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_KR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-KR','DOM-391','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Remittance method is set on Mail handling field of Beneficiary section.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-KR','CB-392','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--SWIFT code is required.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Remittance method is set on Mail handling field of Beneficiary section.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.:--Beneficiary bank name is stored on Beneficiary bank section.:--The charges bearer field is mandatory and set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-KR','BKT-393','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Either the SWIFT code or routing number is required. If both are exists then Swift code will take precedence.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Remittance method is set on Mail handling field of Beneficiary section.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-KR','PRL-414','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_NZ</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_NZ()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-NZ','DC-417','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Remittance method is set on Mail handling field of Beneficiary section.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-NZ','CHECK-416','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-NZ','DOM-391','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Routing number is required.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Remittance method is set on Mail handling field of Beneficiary section.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.:--Beneficiary bank name is required and stored on Beneficiary bank section.:--The charges bearer is set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-NZ','DOM-391-RT','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Routing number is required.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Remittance method is set on Mail handling field of Beneficiary section.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.:--Beneficiary bank name is required and stored on Beneficiary bank section.:--The charges bearer is set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-NZ','CB-392','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--SWIFT code is required.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Remittance method is set on Mail handling field of Beneficiary section.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.:--Beneficiary bank name is required and stored on Beneficiary bank section.:--Beneficiary bank country code is required.:--The charges bearer is set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-NZ','BKT-393','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Either the Routing number or SWIFT code is required. If both are exists then Swift code will take precedence.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Remittance method is set on Mail handling field of Beneficiary section.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_TW</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_TW()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-TW','IBRS-429','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Remittance method is set on Mail handling field of Beneficiary section.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-TW','IBRS-430','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Remittance method is set on Mail handling field of Beneficiary section.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-TW','CHECK-427','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-TW','CB-392','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--SWIFT code is required.::-Creditor:--Name is mandatory and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Remittance method is set on Mail handling field of Beneficiary section.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.:--Beneficiary bank name is stored on Beneficiary bank section.:--Beneficiary bank country code is required.:--The charges bearer is set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-TW','BKT-393','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Either the Routing number or SWIFT code is required. If both are exists then Swift code will take precedence.::-Creditor:--Name and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Remittance method is set on Mail handling field of Beneficiary section.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_JO</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_JO()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-JO','ACH-964','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is stored in Name.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Either IBAN or Bank account number is required.If both are exist then IBAN will take the precedence.:--SWIFT code is required.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Remittance method is set on Mail handling field of Beneficiary section.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.:--The charges bearer field is mandatory and set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-JO','CHECK-815','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is stored in Name.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.:--The charges bearer field is mandatory and set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-JO','DFT-555','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is stored in Name.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Either IBAN or Bank account number is required.If both are exist then IBAN will take the precedence.:--SWIFT code is required.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Remittance method is set on Mail handling field of Beneficiary section.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.:--The charges bearer field is mandatory and set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-JO','CBFT-574','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is stored in Name.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Either IBAN or Bank account number is required.If both are exist then IBAN will take the precedence.:--SWIFT code is required.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--The charges bearer field is mandatory and set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_AE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_AE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-AE','CBFT-574','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is stored in Name.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Either IBAN or Bank account number is required.If both are exists then IBAN will take the precedence.:--SWIFT code is required.::-Vendor Bank Account fields:--Either IBAN or Bank account number is required.If both are exist then IBAN will take the precedence.:--SWIFT code is required.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Remittance method is set on Mail handling field of Beneficiary section.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.:--The charges bearer field is mandatory and set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-AE','DFT-574','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-AE','CHK-804','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is stored in Name.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Either IBAN or Bank account number is required.If both are exists then IBAN will take the precedence.:--SWIFT code is required.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.:--Remittance method is set on Mail handling field of Beneficiary section.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_MX</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_MX()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MX','CHK-496','This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ file formats > Payment specifications > Code lookup fields tab and Vendor eBanking details > Payment specifications > Additional fields:--Creditor Identification must be Organization or Private individual and if left blank it will default to Organization.:--If both are set Organization will take precedence.:--Set the Cheque Type.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MX','CHK-834','This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field > Wire/IAT ordering party tab:--Debtor Name is stored on Name field.:--Strt is stored in Address 1 field.:--Bldng num is stored in Address 2.:--City,Zip/postal&Ctry Code are stored there specific fields.::-Cash and bank management module > Bank Account:--Bank acct num is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Set either IBAN or Bank acct num.If both are set IBAN will take precedence.:--Set either SWIFT code or routing number.If both are set SWIFT code will take precedence.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is reqd and stored in Beneficiary Name field.:--Creditor > Postal Address info is stored in Beneficiary section.:--Address 1 field is required.:--Set Address 2 field.:--City,State & Zip/postal are stored on there specific fields.:--Ctry Code is required.::-EFT+ file formats > Payment specifications > Code lookup fields tab and Vendor eBanking details > Payment specifications > Additional fields:--Creditor Identification must be Organization or Private individual and if left blank it will default to Organization.:--If both are set Organization will take precedence.:--Set the Cheque Type.::-Accounts Payable > All Vendors > Vendor:--Tax exempt num is stored on Invoice and delivery tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:--IntrmyAgt BIC or Bank Id will be included if SWIFT code or Bank Id on Intrmy bank section is populated.:--Ctry is stored on Country/region field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MX','BWPMT-835','This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field > Wire/IAT ordering party tab:--Debtor Name is stored on Name field.:--Street is stored in Address 1 field.:--Building number is stored in Address 2.:--City,Zip/postal and Country Code are stored there specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Routing number is mandatory.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required and stored in Beneficiary Name field.:--Creditor > Postal Address info is stored in Beneficiary section.:--Set Address 1 field.:--Set Address 2 field.:--City is required and stored on City field:--State and Zip/postal are stored on there specific fields.:--Country Code is required.::-EFT+ file formats > Payment specifications > Code lookup fields tab and Vendor eBanking details > Payment specifications > Additional fields:--Creditor Identification must be Organization or Private individual and if left blank it will default to Organization.:--If both are set Organization will take precedence.::-Accounts Payable > All Vendors > Vendor:--Tax exempt number is stored on Invoice and delivery tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:--Intermediary Agent BIC or Bank Id will be included if SWIFT code or Bank Id on Intermediary bank section is populated.:--Country is stored on Country/region field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MX','BKT-440','This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field > Wire/IAT ordering party tab:--Debtor Name is stored on Name field.:--Street is stored in Address 1 field.:--Building number is stored in Address 2.:--City, Zip/postal and Country Code are stored there specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Either SWIFT code or Routing number is mandatory. If both are set SWIFT code will take precedence.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required and stored in Beneficiary Name field.:--Creditor > Postal Address info is stored in Beneficiary section.:--Set Address 1 field.:--Set Address 2 field.:--City, State and Zip/postal are stored on there specific fields.:--Country Code is required.::-EFT+ file formats > Payment specifications > Code lookup fields tab and Vendor eBanking details > Payment specifications > Additional fields:--Creditor Identification must be Organization or Private individual and if left blank it will default to Organization.:--If both are set Organization will take precedence.::-Accounts Payable > All Vendors > Vendor:--Tax exempt number is required and stored on Invoice and delivery tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:--Intermediary Agent BIC or Bank Id will be included if SWIFT code or Bank Id on Intermediary bank section is populated.:--Country is stored on Country/region field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MX','DFT-441','This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ file formats > Payment specifications > Code lookup fields tab and Vendor eBanking details > Payment specifications > Additional fields:--Creditor Identification must be Organization or Private individual and if left blank it will default to Organization.:--If both are set Organization will take precedence.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MX','CBFT-442','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MX','CBFT-827','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field > Wire/IAT ordering party tab:--Debtor Name is stored on Name field.:--Street is stored in Address 1 field.:--Building number is stored in Address 2.:--City, Zip/postal and Country Code are stored there specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:-- SWIFT code is mandatory. ::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is stored in Beneficiary Name field.:--Creditor > Postal Address info is stored in Beneficiary section.:--Set Address 1 field.:--Set Address 2 field.:-- City, State, Zip/postal and Country code are stored on their specific fields.:--The charges bearer is set on the Charges indicator field in the Other notes section  and it is mandatory.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:--Intermediary Agent BIC or Bank Id will be included if SWIFT code or Bank Id on Intermediary bank section is populated.:--Country is stored on Country/region field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MX','DIBT-828','This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ file formats > Payment specifications > Code lookup fields tab and Vendor eBanking details > Payment specifications > Additional fields:--Creditor Identification must be Organization or Private individual and if left blank it will default to Organization.:--If both are set Organization will take precedence.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MX','DPRL-831','This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field > Wire/IAT ordering party tab:--Debtor Name is stored on Name field.:--Street is stored in Address 1 field.:--Building number is stored in Address 2.:--City, Zip/postal and Country Code are stored there specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Routing number is mandatory. ::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required and stored in Beneficiary Name field.:--Creditor > Postal Address info is stored in Beneficiary section.:--Set Address 1 field.:--Set Address 2 field.:--City, State and Zip/postal are stored on their specific fields.:--Country code is required.::-EFT+ file formats > Payment specifications > Code lookup fields tab and Vendor eBanking details > Payment specifications > Additional fields:--Creditor Identification must be Organization or Private individual and if left blank it will default to Organization.:--If both are set Organization will take precedence.::-Accounts Payable > All Vendors > Vendor:--Tax exempt number is stored on Invoice and delivery tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:--Intermediary Agent BIC or Bank Id will be included if SWIFT code or Bank Id on Intermediary bank section is populated.:--Country is stored on Country/region field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MX','DPENS-832','This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field > Wire/IAT ordering party tab:--Debtor Name is stored on Name field.:--Street is stored in Address 1 field.:--Building number is stored in Address 2.:--City, Zip/postal and Country Code are stored there specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Routing number is mandatory. ::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required and stored in Beneficiary Name field.:--Creditor > Postal Address info is stored in Beneficiary section.:--Set Address 1 field.:--Set Address 2 field.:--City, State and Zip/postal are stored on their specific fields.:--Country code is required.::-EFT+ file formats > Payment specifications > Code lookup fields tab and Vendor eBanking details > Payment specifications > Additional fields:--Creditor Identification must be Organization or Private individual and if left blank it will default to Organization.:--If both are set Organization will take precedence.::-Accounts Payable > All Vendors > Vendor:--Tax exempt number is stored on Invoice and delivery tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:--Intermediary Agent BIC or Bank Id will be included if SWIFT code or Bank Id on Intermediary bank section is populated.:--Country is stored on Country/region field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MX','BKT-833','This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ file formats > Payment specifications > Code lookup fields tab and Vendor eBanking details > Payment specifications > Additional fields:--Creditor Identification must be Organization or Private individual and if left blank it will default to Organization.:--If both are set Organization will take precedence.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_AU</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_AU()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-AU','DE-397','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-AU','PRL-398','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-AU','CHK-396','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:--Debtor branch id is stored in the Branch Id field.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-AU','DOM-391','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Routing number is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:--The charges bearer field is mandatory and set on the Charges indicator field in the Other notes section.:-Beneficiary bank:--Beneficiary country code is stored in the Country/region field.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-AU','CB-392','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--SWIFT code is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:--The charges bearer field is mandatory and set on the Charges indicator field in the Other notes section.:-Beneficiary bank:--Beneficiary bank name is stored in the name field.:--Beneficiary bank country code is required and stored in the Country/region field.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-AU','BKT-393','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. :--Debtor branch id is stored in the Branch Id field.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-AU','BPAY-889','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Customer reference number is required and stored in the Id field.:--Debtor Name is required.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_BR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_BR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-BR','BKT-440','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-BR','DOM-441','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-BR','RT-453','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-BR','DL-454','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-BR','TLPAY-451','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Instruction for Debtor Agent is set in the Payment journal > Payment tab > Central bank purpose code field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_CZ</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_CZ()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CZ','DOM-317','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CZ','DOM-555','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CZ','ACH-SEPA','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is stored in the Name field.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Either IBAN or Bank account number is required.If both are exists then IBAN will take precedence.:--SWIFT code is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:-Beneficiary bank:--Beneficiary bank name is required.:--Beneficiary country code is stored in the Country/region field.:--Beneficiary bank addresses are stored on their specific fields.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CZ','XPRS-888','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is stored in the Name field.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Routing number is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:-Beneficiary bank:--Beneficiary bank name is required.:--Beneficiary country code is stored in the Country/region field.:--Beneficiary bank addresses are stored on their specific fields.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CZ','DFT-555','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is stored in the Name field.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Routing number is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:-Beneficiary bank:--Beneficiary bank name is required.:--Beneficiary country code is stored in the Country/region field.:--Beneficiary bank addresses are stored on their specific fields.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-CZ','CBFT-574','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is stored in the Name field.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--SWIFT code is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:-Beneficiary bank:--Beneficiary bank name is required.:--Beneficiary country code is stored in the Country/region field.:--Beneficiary bank addresses are stored on their specific fields.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_HK</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_HK()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-HK','ATPAY-403','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-HK','CHECK-405','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Remittance method is set on Mail handling field of Beneficiary section.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-HK','CHK-405','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-HK','DOM-391','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Swift code is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:--Remittance method is set on Mail handling field of Beneficiary section.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.:--The charges bearer field is mandatory and set on the Charges indicator field in the Other notes section.:-Beneficiary bank:--Beneficiary country code is stored in the Country/region field.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-HK','CB-392','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--SWIFT code is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:--Remittance method is set on Mail handling field of Beneficiary section.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.:--The charges bearer field is mandatory and set on the Charges indicator field in the Other notes section.:-Beneficiary bank:--Beneficiary bank name is stored in the name field.:--Beneficiary bank country code is required and stored in the Country/region field.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-HK','BKT-393','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Either the SWIFT code or routing number is required. If both are exists then Swift code will take precedence.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_MO</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_MO()
    {
        container   notesList;

        
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MO','CB-392','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--SWIFT code is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:--Remittance method is set on Mail handling field of Beneficiary section.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.:--The charges bearer field is mandatory and set on the Charges indicator field in the Other notes section.:-Beneficiary bank:--Beneficiary bank name is stored in the name field.:--Beneficiary bank country code is required and stored in the Country/region field.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_HN</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_HN()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-HN','DOM-441','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_HU</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_HU()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-HU','DOM-303','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-HU','DOM-903','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-HU','CBFT-574','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_ID</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_ID()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-ID','DOM-391','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-ID','LLG-408','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_IN</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_IN()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-IN','CHK-436','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-IN','DD-437','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-IN','DOM-540','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-IN','DFT-914','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-IN','DFT-541','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-IN','RTGS-539','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-IN','TAX-908','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-IN','TAX-927','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-IN','TAX-947','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-IN','IFT-CB392','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-IN','CDT-862','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_JP</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_JP()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-JP','DOM-391','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-JP','BKT-410','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-JP','BKT-393','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Either the SWIFT code or routing number is required. If both are exists then Swift code will take precedence.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-JP','ACH-410','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required and stored in the Name field.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:--Batch booking value stored in the Batch booking(Y/N) field.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Routing number is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Second address line stores in Address line 2.:--Third address line stores Zip/Postal code and City fields.::-Beneficiary Bank:--Beneficiary bank Country is required and stored in the Country/Region field.:--Address stored in the Address field.:--The charges bearer field is mandatory and set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.:--Intermediary Agent address stored on their specific fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-JP','WIRE-391','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required and stored in the Name field.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:--Batch booking value stored in the Batch booking(Y/N) field.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Routing number is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Second address line stores in Address line 2.:--Third address line stores Zip/Postal code and City fields.::-Beneficiary Bank:--Beneficiary bank Country is required and stored in the Country/Region field.:--Address stored in the Address field.:--The charges bearer field is mandatory and set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.:--Intermediary Agent address stored on their specific fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-JP','WIRE-392','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required and stored in the Name field.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:--Batch booking value stored in the Batch booking(Y/N) field.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--SWIFT code is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Second address line stores in Address line 2.:--Third address line stores Zip/Postal code and City fields.::-Beneficiary Bank:--Beneficiary bank name is required and stored in the Name field.:--Beneficiary bank Country is required and stored in the Country/Region field.:--Address stored in the Address field.:--The charges bearer field is mandatory and set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.:--Intermediary Agent address stored on their specific fields.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_KE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_KE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-KE','DOM-555','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_MY</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_MY()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MY','GIRO-527','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field > Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor country is stored in the Country/Region field.:--First address line stored in the Address 1 field.:--Second address line stored in the Zip/Postal code and City fields.:--Debtor branch id stored in the Debtor Branch code field.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Either IBAN or Bank account number is required.If both are exist IBAN will take the precedence.:--Either SWIFT code or routing number is required. If both are exists SWIFT code will take the precedence. is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required.:--Creditor country is stored in the Country/Region field.:--First address line stored in the Address 1 field.:--Second address line stored in the Zip/Postal code and City fields.:-Remittance Location method may be set on the Beneficiary Mail Handling field.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.:--Creditor agent Country/Region is stored on Beneficiary bank section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:--Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MY','CHK-415','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field > Wire/IAT ordering party tab:--Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:--Debtor Name is required.:--Debtor country is stored in the Country/Region field.:--First address line stored in the Address 1 field.:--Second address line stored in the Zip/Postal code and City fields.:--Debtor branch id stored in the Debtor Branch code field.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required stored in the Name field.:--Creditor country is stored in the Country/Region field.:--First address line stored in the Address 1 field.:--Second address line stored in the Zip/Postal code and City fields.:-Remittance Location method may be set on the Beneficiary Mail Handling field.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:--Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MY','DFT-391','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field > Wire/IAT ordering party tab:--Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:--Debtor Name is required.:--Debtor country is stored in the Country/Region field.:--First address line stored in the Address 1 field.:--Second address line stored in the Zip/Postal code and City fields.:--Debtor branch id stored in the Debtor Branch code field.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Either Routing number or SWIFT Code is required.If both are exist then Routing number will take the precedence.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required.:--Creditor country is stored in the Country/Region field.:--First address line stored in the Address 1 field.:--Second address line stored in the Zip/Postal code and City fields.:-Remittance Location method may be set on the Beneficiary Mail Handling field.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.:--Creditor agent Country/Region is stored on Beneficiary bank section.:--The charges bearer is set on the Charges indicator field in the Other notes section::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:--Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MY','CBFT-392','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field > Wire/IAT ordering party tab:--Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:--Debtor Name is required.:--Debtor country is stored in the Country/Region field.:--First address line stored in the Address 1 field.:--Second address line stored in the Zip/Postal code and City fields.:--Debtor branch id stored in the Debtor Branch code field.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Either SWIFT code or routing number is required.If bothare exists then SWIFT code will take the precedence.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required.:--Creditor country is stored in the Country/Region field.:--First address line stored in the Address 1 field.:--Second address line stored in the Zip/Postal code and City fields.:-Remittance Location method may be set on the Beneficiary Mail Handling field.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.:--Creditor agent Country/Region is stored on Beneficiary bank section.:--The charges bearer is set on the Charges indicator field in the Other notes section::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:--Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MY','BKT-393','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field > Wire/IAT ordering party tab:--Initiating Party Identification is set in the Bank Id on the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.:--Debtor Name is required.:--Debtor country is stored in the Country/Region field.:--First address line stored in the Address 1 field.:--Second address line stored in the Zip/Postal code and City fields.:--Debtor branch id stored in the Debtor Branch code field.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Either SWIFT code or routing number is required.If bothare exists then SWIFT code will take the precedence.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required.:--Creditor country is stored in the Country/Region field.:--First address line stored in the Address 1 field.:--Second address line stored in the Zip/Postal code and City fields.:-Remittance Location method may be set on the Beneficiary Mail Handling field.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.:--Creditor agent Country/Region is stored on Beneficiary bank section.:--The charges bearer is set on the Charges indicator field in the Other notes section::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:--Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MY','DOM-391','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MY','CB-392','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-MY','PLG-527','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_PA</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_PA()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PA','DOM-441','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PA','CHK-478','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_PH</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_PH()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PH','CHK-418','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_PL</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_PL()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PL','DOM-555','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PL','DOM-325','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PL','ACH-SEPA','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is stored in the Name field.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Either IBAN or Bank account number is required.If both are exists then IBAN will take precedence.:--SWIFT code is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:-Beneficiary bank:--Beneficiary bank name is required.:--Beneficiary country code is stored in the Country/region field.:--Beneficiary bank addresses are stored on their specific fields.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PL','DFT-555','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is stored in the Name field.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Either IBAN or Bank account number is required.If both are exist then IBAN will take precedence.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Routing number is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:-Beneficiary bank:--Beneficiary bank name is required.:--Beneficiary country code is stored in the Country/region field.:--Beneficiary bank addresses are stored on their specific fields.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PL','CBFT-574','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is stored in the Name field.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--SWIFT code is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:-Beneficiary bank:--Beneficiary bank name is required.:--Beneficiary country code is stored in the Country/region field.:--Beneficiary bank addresses are stored on their specific fields.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PL','TAX-592','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.:-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is stored in the Name field.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Either IBAN or Bank account number is required.If both are exist then IBAN will take precedence.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Routing number is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:-Beneficiary bank:--Beneficiary bank name is required.:--Beneficiary country code is stored in the Country/region field.:--Beneficiary bank addresses are stored on their specific fields.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PL','VAT-984','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.:-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is stored in the Name field.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Either IBAN or Bank account number is required.If both are exist then IBAN will take precedence.:--SWIFT code is required.::-Vendor Bank Account fields:--Either IBAN or Bank account number is required.If both are exist then IBAN will take precedence.:--Routing number is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:-Beneficiary bank:--Beneficiary bank name is required.:--Beneficiary country code is stored in the Country/region field.:--Beneficiary bank addresses are stored on their specific fields.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PL','SEPA-938','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_RO</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_RO()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-RO','DOM-332','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-RO','DOM-789','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-RO','CBFT-574','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);


        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_RU</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_RU()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-RU','DOM-548','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Accounts payable > Vendor > Invoice and delivery tab:--The Tax Id is stored on the Tax exempt number field.:--With hold tax amount will be calculate only if Calculating with hold tax check box and With hold tax group were selected.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_SG</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_SG()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-SG','CB-392','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-SG','GIRO-421','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-SG','DFT-391','-Initiating Party Name is set in Organization administration > Setup > Organization > Legal entities > Name.:-Remittance Location method may be set on the Beneficiary Mail Handling field in the Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-SG','BKT-393','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Either IBAN or Bank account number is required. If both are exists then IBAN will take the precedence.:--Routing number is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:--Remittance method is set on Mail handling field of Beneficiary section.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.:-Beneficiary bank:--Beneficiary country code is stored in the Country/region field.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-SG','CHK-423','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:--Remittance method is set on Mail handling field of Beneficiary section.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.:-Beneficiary bank:--Beneficiary country code is stored in the Country/region field.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-SG','CHK-420','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:--Remittance method is set on Mail handling field of Beneficiary section.:--If Fax, Remittance location Electronic Address will be populated if a primary fax address exists on the Vendor.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.:-Beneficiary bank:--Beneficiary country code is stored in the Country/region field.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-SG','PRL-422','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Routing number is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:-Beneficiary bank:--Beneficiary country code is stored in the Country/region field.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-SG','BFT-551','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Address is stored on their specific fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Either the SWIFT code or routing number is required. If both are exists then Swift code will take precedence.::-Creditor:--Name is required and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab. These fields are populated on the Vendor Addresses tab.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_AG</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_AG()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AG','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AG','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_MO</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_MO()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MO','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MO','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_FJ</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_FJ()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-FJ','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-FJ','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-FJ','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-FJ','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_BO</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_BO()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BO','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BO','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_IS</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_IS()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IS','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IS','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_SK</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_SK()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-SK','SEPA-938','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_TH</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_TH()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-TH','PRL-426','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-TH','ATPAY-424','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Accounts payable > Vendor > Invoice and delivery tab:--With hold tax amount will be calculate only if Calculating with hold tax check box and With hold tax group were selected.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-TH','CHK-425','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Accounts payable > Vendor > Invoice and delivery tab:--With hold tax amount will be calculate only if Calculating with hold tax check box and With hold tax group were selected.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_TR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_TR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-TR','DOM-555','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Accounts payable > Vendor > Invoice and delivery tab:--The Tax Id is stored on the Tax exempt number field.:--With hold tax amount will be calculate only if Calculating with hold tax check box and With hold tax group were selected.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-TR','BKT-547','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Either IBAN or Bank account number is required.If both are exists then IBAN will take precedence.:--SWIFT code is required.::-Vendor Bank Account fields:--Either IBAN or Bank account number is required.If both are exists then IBAN will take precedence.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:-Beneficiary bank:--Beneficiary country code is stored in the Country/region field.:--Beneficiary addresses are stored on their specific fields.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-TR','CBFT-574','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Either IBAN or Bank account number is required.If both are exists then IBAN will take precedence.:--SWIFT code is required.::-Vendor Bank Account fields:--Either IBAN or Bank account number is required.If both are exists then IBAN will take precedence.:--SWIFT code is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:--The charges bearer field is mandatory and set on the Charges indicator field in the Other notes section.:-Beneficiary bank:--Beneficiary country code is stored in the Country/region field.:--Beneficiary addresses are stored on their specific fields.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-TR','SSK-853','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields. ::-Cash and bank management module > Bank Account:--Either IBAN or Bank account number is required.If both are exists then IBAN will take precedence.:--SWIFT code is required.::-Vendor Bank Account fields:--Either IBAN or Bank account number is required.If both are exists then IBAN will take precedence.:--SWIFT code is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:--The charges bearer field is mandatory and set on the Charges indicator field in the Other notes section.:-Beneficiary bank:--Beneficiary country code is stored in the Country/region field.:--Beneficiary addresses are stored on their specific fields.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.::-Legal entity address will print only if purpose of Address is selected as a APEFT in the Organization administration > Address and contact information purposes.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_UA</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_UA()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-UA','DOM-555','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Accounts payable > Vendor > Invoice and delivery tab:--The Tax Id is stored on the Tax exempt number field.:--With hold tax amount will be calculate only if Calculating with hold tax check box and With hold tax group were selected.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_UY</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_UY()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-UY','BKT-440','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field > Wire/IAT ordering party tab:--Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Either SWIFT code or Routing number is mandatory. If both are set SWIFT code will take precedence.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required and stored in Beneficiary Name field.:--Creditor > Postal Address info is stored in Beneficiary section.:--Country Code is required.:--Remittance location method information is set on the Mail handling field on Beneficiary section.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-UY','CBFT-442','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field > Wire/IAT ordering party tab:--Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Either SWIFT code or Routing number is mandatory. If both are set SWIFT code will take precedence.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required and stored in Beneficiary Name field.:--Creditor > Postal Address info is stored in Beneficiary section.:--Country Code is required.:--Beneficiary bank country code is required.:--Remittance location method information is set on the Mail handling field on Beneficiary section.:--The charge bearer is set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:--Intermediary Agent BIC or Bank Id will be included if SWIFT code or Bank Id on Intermediary bank section is populated.:--Country is stored on Country/region field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-UY','CHK-493','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field > Wire/IAT ordering party tab:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab.:--These fields are populated on the Vendor Addresses tab. The Country/region is required.:--Remittance location method information is set on the Mail handling field on Beneficiary section.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-UY','CHK-494','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.:-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field > Wire/IAT ordering party tab:-Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Creditor Name and Postal Address are stored in the Remittance location field on the Payment Journal > Remittance tab.:--These fields are populated on the Vendor Addresses tab. The Country/region is required.:--Remittance location method information is set on the Mail handling field on Beneficiary section.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_VE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_VE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-VE','DOM-441','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_ZA</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_ZA()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-ZA','ACH-809','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-ZA','WIRE-574','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is stored in the Name field.:--Debtor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Swift code is stored in the SWIFT code field.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Creditor country is stored in the Country/region field.:--First address line stores Address line 1 and Address line 2 fields.:--Second address line stores Zip/Postal code and City fields.:--Remittance method is set on Mail handling field of Beneficiary section.:--eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.::-Beneficiary Bank:--Beneficiary bank name stored in the Name field.:--Beneficiary bank Country stored in the Country/Region field.:--Address stored in the Address field.:--The charges bearer field is mandatory and set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.:--Intermediary Agent name is stored in the Name field.:--Intermediary Agent address stored on their specific fields.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_AU</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_AU()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AU','ACH-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AU','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AU','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AU','ACH-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AU','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AU','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_CA</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_CA()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CA','ACH-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CA','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code are stored in the Address field separated by Semi colon(;)']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CA','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CA','ACH-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CA','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code are stored in the Address field separated by Semi colon(;)']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CA','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_SG</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_SG()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SG','ACH-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SG','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SG','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SG','ACH-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SG','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SG','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_GB</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_GB()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GB','ACH-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GB','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GB','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GB','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GB','ACH-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GB','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GB','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GB','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_US</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_US()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-US','ACH-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-US','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-US','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-US','ACH-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-US','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-US','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_AL</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_AL()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AL','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AL','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_DZ</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_DZ()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-DZ','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose code.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-DZ','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose code.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_AO</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_AO()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AO','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AO','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_AT</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_AT()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AT','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AT','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AT','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AT','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AT','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AT','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_BS</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_BS()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BS','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose code and it will print only if payment amount is greater than 10000']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BS','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose code and it will print only if payment amount is greater than 10000']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_BH</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_BH()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BH','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BH','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BH','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BH','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_BD</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_BD()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BD','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose text.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BD','WIRE-WL-I','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose text.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BD','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose text.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BD','WIRE-WLIRC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose text.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_BY</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_BY()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BY','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BY','WIRE-WL-RC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_BE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_BE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BE','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BE','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BE','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BE','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BE','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BE','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_BJ</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_BJ()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BJ','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BJ','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_BW</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_BW()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BW','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BW','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_BR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_BR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BR','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BR','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_BN</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_BN()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BN','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BN','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BN','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BN','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_BG</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_BG()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BG','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BG','WIRE-WL-O','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BG','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BG','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BG','WIRE-WLORC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BG','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_BF</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_BF()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BF','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BF','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_KH</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_KH()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-KH','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-KH','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_CM</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_CM()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CM','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CM','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_TD</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_TD()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TD','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TD','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_CL</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_CL()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CL','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code are stored in the Address field separated by Semi colon(;)::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CL','WIRE-WL-RC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code are stored in the Address field separated by Semi colon(;)']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_CN</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_CN()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CN','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code and Country sub division are stored in the Address field separated by Semi colon(;)::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CN','WIRE-WL-O','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code and Country sub division are stored in the Address field separated by Semi colon(;)::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CN','WIRE-WL-RC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code and Country sub division are stored in the Address field separated by Semi colon(;)']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CN','WIRE-WLORC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code and Country sub division are stored in the Address field separated by Semi colon(;)']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_CO</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_CO()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CO','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CO','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_CD</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_CD()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CD','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CD','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_CR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_CR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CR','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CR','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_CI</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_CI()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CI','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CI','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_HR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_HR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-HR','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-HR','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-HR','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-HR','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_CY</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_CY()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CY','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CY','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CY','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CY','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CY','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CY','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_CZ</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_CZ()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CZ','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CZ','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CZ','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CZ','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CZ','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CZ','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_DK</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_DK()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-DK','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-DK','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-DK','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-DK','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_EG</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_EG()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-EG','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-EG','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_EE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_EE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-EE','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-EE','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-EE','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-EE','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-EE','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-EE','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_ET</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_ET()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ET','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ET','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_FI</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_FI()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-FI','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-FI','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-FI','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-FI','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-FI','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-FI','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_FR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_FR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-FR','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-FR','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-FR','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-FR','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-FR','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-FR','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_GA</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_GA()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GA','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GA','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_GE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_GE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GE','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GE','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_DE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_DE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-DE','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-DE','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-DE','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-DE','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-DE','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-DE','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_GH</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_GH()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GH','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GH','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_GR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_GR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GR','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GR','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GR','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GR','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GR','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GR','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_GT</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_GT()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GT','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GT','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_GW</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_GW()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GW','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GW','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_GY</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_GY()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GY','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GY','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_HT</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_HT()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-HT','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_HK</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_HK()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-HK','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-HK','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-HK','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-HK','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_HU</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_HU()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-HU','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-HU','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-HU','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-HU','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_IN</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_IN()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IN','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IN','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IN','WIRE-WL-RC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IN','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_ID</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_ID()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ID','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose code.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ID','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ID','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose code.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ID','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_IL</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_IL()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IL','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code, country sub division are stored in the Address field separated by Semi colon(;)']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IL','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code, country sub division are stored in the Address field separated by Semi colon(;)']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_IT</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_IT()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IT','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IT','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IT','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IT','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IT','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IT','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_JP</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_JP()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-JP','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-JP','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-JP','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-JP','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_JO</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_JO()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-JO','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-JO','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_KZ</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_KZ()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-KZ','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-KZ','WIRE-WL-RC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_KE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_KE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-KE','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code, country sub division are stored in the Address field separated by Semi colon(;)']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-KE','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-KE','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code, country sub division are stored in the Address field separated by Semi colon(;)']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-KE','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_KW</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_KW()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-KW','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-KW','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-KW','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-KW','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_LV</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_LV()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LV','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LV','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LV','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LV','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_LB</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_LB()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LB','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LB','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_LU</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_LU()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LU','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LU','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LU','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LU','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_MY</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_MY()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MY','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose code.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MY','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose code.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_MT</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_MT()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MT','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MT','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MT','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MT','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MT','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MT','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_MX</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_MX()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MX','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MX','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MX','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MX','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_MD</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_MD()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MD','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MD','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_MA</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_MA()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MA','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MA','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MA','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MA','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_MZ</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_MZ()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MZ','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MZ','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_NA</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_NA()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NA','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NA','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_NL</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_NL()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NL','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NL','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NL','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NL','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_NZ</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_NZ()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NZ','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NZ','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NZ','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NZ','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_NE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_NE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NE','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NE','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_NG</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_NG()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NG','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NG','WIRE-PY','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NG','WIRE-UZ','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NG','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_NO</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_NO()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NO','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NO','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NO','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NO','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NO','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NO','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_MG</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_MG()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MG','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MG','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_NI</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_NI()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NI','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NI','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_ML</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_ML()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ML','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_KM</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_KM()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-KM','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_GM</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_GM()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GM','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_GN</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_GN()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GN','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-GN','WIRE-WL-RC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_OM</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_OM()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-OM','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-OM','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-OM','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-OM','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_PK</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_PK()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PK','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code are stored in the Address field separated by Semi colon(;)::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose text.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PK','WIRE-WL-IC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code are stored in the Address field separated by Semi colon(;)::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose text.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PK','WIREWLICRC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code are stored in the Address field separated by Semi colon(;)::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose text.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PK','WIRE-WL-IS','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code are stored in the Address field separated by Semi colon(;)::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose text.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PK','WIREWLISRC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code are stored in the Address field separated by Semi colon(;)::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose text.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PK','WIRE-WL-IP','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code are stored in the Address field separated by Semi colon(;)::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose text.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PK','WIREWLIPRC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code are stored in the Address field separated by Semi colon(;)::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose text.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PK','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code are stored in the Address field separated by Semi colon(;)::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose text.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_PG</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_PG()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PG','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PG','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_PE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_PE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PE','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PE','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_PH</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_PH()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PH','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PH','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PH','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PH','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_PL</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_PL()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PL','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PL','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PL','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PL','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_PT</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_PT()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PT','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PT','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PT','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PT','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PT','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PT','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_QA</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_QA()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-QA','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-QA','WIRE-WL-RC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_IE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_IE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IE','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IE','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IE','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IE','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IE','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-IE','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_RO</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_RO()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-RO','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-RO','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-RO','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-RO','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_RU</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_RU()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-RU','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-RU','WIRE-WL-I','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-RU','WIRE-WL-RC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-RU','WIRE-WLIRC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_SA</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_SA()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SA','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SA','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SA','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SA','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_SK</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_SK()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SK','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SK','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SK','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SK','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_ZA</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_ZA()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ZA','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ZA','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ZA','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ZA','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_KR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_KR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-KR','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-KR','WIRE-WL-RC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_ES</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_ES()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ES','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ES','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ES','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ES','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ES','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ES','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_LK</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_LK()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LK','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LK','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_SE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_SE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SE','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SE','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SE','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SE','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SE','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SE','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_CH</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_CH()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CH','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CH','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CH','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CH','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CH','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-CH','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_TW</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_TW()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TW','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TW','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_TZ</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_TZ()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TZ','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TZ','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_TH</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_TH()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TH','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose code.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TH','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TH','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Unstructured data stored in the Payment journal > Lines > Payment tab > Central bank purpose code.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TH','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_TG</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_TG()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TG','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TG','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_TN</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_TN()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TN','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TN','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TN','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TN','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_TR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_TR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TR','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TR','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TR','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TR','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_UG</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_UG()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-UG','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code are stored in the Address field separated by Semi colon(;)']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-UG','WIRE-WL-RC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code are stored in the Address field separated by Semi colon(;)']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_AE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_AE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AE','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AE','CHK-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AE','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AE','CHK-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_VN</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_VN()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-VN','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-VN','WIRE-WL-RC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_ZM</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_ZM()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ZM','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ZM','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_AZ</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_AZ()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AZ','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AZ','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_BM</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_BM()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BM','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BM','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_DO</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_DO()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-DO','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-DO','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_HN</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_HN()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-HN','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-HN','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_LA</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_LA()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LA','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LA','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_LI</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_LI()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LI','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LI','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LI','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LI','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_LT</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_LT()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LT','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LT','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LT','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-LT','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_MM</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_MM()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MM','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MM','WIRE-WL-RC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_MN</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_MN()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MN','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code, country sub division are stored in the Address field separated by Semi colon(;)']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MN','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code, country sub division are stored in the Address field separated by Semi colon(;)']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_MR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_MR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MR','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code, country sub division are stored in the Address field separated by Semi colon(;)']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MR','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code, country sub division are stored in the Address field separated by Semi colon(;)']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_MU</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_MU()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MU','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MU','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_MW</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_MW()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MW','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MW','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_RW</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_RW()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-RW','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code, country sub division are stored in the Address field separated by Semi colon(;)']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-RW','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1 > Beneficiary bank > Street name, Building number, Postal code, country sub division are stored in the Address field separated by Semi colon(;)']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_SN</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_SN()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SN','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SN','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_SI</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_SI()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SI','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SI','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SI','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SI','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_SZ</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_SZ()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SZ','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SZ','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_TT</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_TT()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TT','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-TT','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_UY</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_UY()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-UY','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-UY','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_NP</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_NP()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NP','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-NP','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_RS</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_RS()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-RS','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-RS','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_SC</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_SC()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SC','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-SC','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_PY</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_PY()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-PY','WIRE-WL-RC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_UZ</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_UZ()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-UZ','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_MC</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_MC()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MC','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MC','SEPA-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MC','WIRE-WL-RC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MC','SEPA-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_AM</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_AM()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AM','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-AM','WIRE-WL-RC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_ME</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_ME()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ME','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-For destination country payment:--Purpose of payment or Reason of payment info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--Phone number and Email info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-ME','WIRE-WL-RC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_TN</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_TN()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-TN','CHK-815','This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-TN','BKT-547','Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-TN','DOM-555','Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-TN','CBFT-574','Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_PY</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_PY()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PY','DFT-441','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field > Wire/IAT ordering party tab:--Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Routing number is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required and stored in Beneficiary Name field.:--Creditor > Postal Address info is stored in Beneficiary section.:--Country Code is required.:--Remittance location method information is set on the Mail handling field on Beneficiary section.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PY','CBFT-442','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field > Wire/IAT ordering party tab:--Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Either SWIFT code or Routing number is mandatory. If both are set SWIFT code will take precedence.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required and stored in Beneficiary Name field.:--Creditor > Postal Address info is stored in Beneficiary section.:--Country Code is required.:--Beneficiary bank country code is required.:--Remittance location method information is set on the Mail handling field on Beneficiary section.:--The charge bearer is set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:--Intermediary Agent BIC or Bank Id will be included if SWIFT code or Bank Id on Intermediary bank section is populated.:--Country is stored on Country/region field.']);
        notesList = conIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-PY','INSTPAY','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field > Wire/IAT ordering party tab:--Debtor Name and Debtor Postal Address are stored in the Wire/IAT ordering party tab of EFT+ bank account > AP EFT+.::-Cash and bank management module > Bank Account:--Bank account number is required.:--SWIFT code is required.::-Vendor Bank Account fields:--Bank account number is required.:--Either SWIFT code or Routing number is mandatory. If both are set SWIFT code will take precedence.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required and stored in Beneficiary Name field.:--Creditor > Postal Address info is stored in Beneficiary section.:--Country Code is required.:--Beneficiary bank country code is required.:--Remittance location method information is set on the Mail handling field on Beneficiary section.:--The charge bearer is set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:--Intermediary Agent BIC or Bank Id will be included if SWIFT code or Bank Id on Intermediary bank section is populated.:--Country is stored on Country/region field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_IL</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_IL()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-IL','DOM-555','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-IL','CBFT-574','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-IL','RTGS-605','-Initiating Party Name is required and stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_PPW_XML</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_PPW_XML()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-PPW-XML','PPW-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-PPW-XML','PPW-PH-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-PPW-XML','PPW-WL-RC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-PPW-XML','PPW-PHWLRC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_BA</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_BA()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BA','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BA','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_BB</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_BB()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BB','WIRE-WL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-BB','WIRE-WL-RC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_WL_XML_MK</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_WL_XML_MK()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MK','WIRE-WL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-WL-XML-MK','WIRE-WL-RC','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITICONNECT_XML_VN</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITICONNECT_XML_VN()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-VN','DFT-391','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITICONNECT-XML-VN','CBFT-392','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;
        SKS_EFT_FormatMetaData_US_CITICONNECT_XML_Extend lSKS_EFT_FormatMetaData_US_CITICONNECT_XML_Extend;

        lSKS_EFT_FormatMetaData_US_CITICONNECT_XML_Extend = new SKS_EFT_FormatMetaData_US_CITICONNECT_XML_Extend();

        validationsList = lSKS_EFT_FormatMetaData_US_CITICONNECT_XML_Extend.getValidationsMetaData(_formatID);

        return validationsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','OrgPrvId','Organization or Private Individual']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','BenBankEC441','Beneficiary bank-Ecuador-441']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','AccType','Account type']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypeEC440','Document Type-Ecuador-440']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypeEC441','Document Type-Ecuador-441']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypeEC468','Document Type-Ecuador-468']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DestBrnchEC','Destination branch-Ecuador']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','ScvCd','Service level code name']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','BenBankCR441','Beneficiary bank-Costa Rica-441']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypeCR','Document Type-Costa Rica']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DestBrnchCR','Destination branch-Costa Rica']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','BenBankDO441','Beneficiary bank-Dominican Republic-441']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypeDO441','Document Type-Dominican Republic-441']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DestBrnchDO','Destination branch-Dominican Republic']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','BenBankSV441','Beneficiary bank-El Salvador-441']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypeSV440','Document Type-El Salvador-440']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypeSV441','Document Type-El Salvador-441']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypeSV469','Document Type-El Salvador-469']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DestBrnchSV','Destination branch-El Salvador']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','BenBankGT441','Beneficiary bank-Guatemala-441']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypeGT441','Document Type-Guatemala-441']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DestBrnchGT','Destination branch-Guatemala']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypePR','Document Type-Puerto Rico-487']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DestBrnchPR','Destination branch-Puerto Rico']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','BenBankAR441','Beneficiary bank-Argentina-441']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypeAR440','Document Type-Argentina-440']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypeAR441','Document Type-Argentina-441']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DestBrnchAR','Destination branch-Argentina']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','RmtOvr','Unstructured remittance info']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','BenBankCL441','Beneficiary bank-Chile-441']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','CenBankCL442','Central bank-Chile-442']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypeCL440','Document Type-Chile-440']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypeCL441','Document Type-Chile-441']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypeCL455','Document Type-Chile-455']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DestBrnchCL','Destination branch-Chile']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','BenBankCO441','Beneficiary bank-Columbia-441']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DestBrnchCO','Destination branch-Columbia']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypeCO440','Document Type-Columbia-440']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypeCO441','Document Type-Columbia-441']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','BenBankPE441','Beneficiary bank-Peru-441']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypePE440','Document Type-Peru-440']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypePE441','Document Type-Peru-441']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DocTypePE484','Document Type-Peru-484']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DestBrnchPE','Destination branch-Peru']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','ARState','Beneficiary State-Argentina']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','ChkType','Check type code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','Cd','Transaction Type Code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','ChqType','BankCheque or CertifiedCustomerCheque or CustomerCheque']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','RmtInf','Unstructured remittance info']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','CenBankCode','Central Bank Code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','InstrForCdtrAgt','Instruction For Creditor Agent']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DestBrnchUS','Destination branch-UnitedStates']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DestBrnchPA','Destination branch-Panama']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','Rate','Rate']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','AddtlInf','Additional Information']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','Mtd','WHT Payor Code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','FrmsCd','WHT Tax Form']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','BeneType','Beneficiary Type']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','ResStatus','Residential Status']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','TransType','Transaction Type']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','TransFacilityType','Transaction Facility Type']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','PurpCode','Payment purpose code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','PurpCodePS','Payment purpose code for Palestine']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','PurpCodeCNS1','Payment purpose code for CNS1']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','PurpCodeCNS2','Payment purpose code for CNS2']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment Category Code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','CtgyPurp','Category Purpose']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','BenId','Beneficiary Id']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','BenAcctTpCd','BeneficiaryAccountType']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','BenAcctTpPrtry','BenAcctTpPrtry']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','Purp','Purpose of payment']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','PaymDetails','Payment Details']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','BenBankMX441','Beneficiary bank routing code - Mexico']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','TypeOfPaym','Type of payment']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','TypeOfPayment','Type of payment']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DlvryMtd','Delivery Method code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DestBrnchUY','Destination branch-Uruguay']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','CenBankPY442','Central bank-Paraguay-442']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','CenBankPY441','Central bank-Paraguay-441']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','ChrgBr','Charge bearer']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','AdmstnZn','AdministrationZone']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','DbtrId','Debtor Id']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','ILInstrInf','IL Instruction Information']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','SpclHndlgCode','Special Handling Code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','InstrInf','Instruction Information']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','ITRSCode','ITRS Code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','RmtLctnMtd','Remittance location method']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','PurpOfPmt','Purpose Of Payment']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','PurpOfPmtTN','Purpose Of Payment for Tunisia']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','ActivitySector','Company Activity Sector']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','PurpCodeIN','Payment purpose code for India']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','PurpOfPmtPK','Purpose Of Payment for Pakistan']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','RelationPK','Relationship between Beneficiary and the Ultimate Remitter']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','PurpOfPmtMY','Purpose Of Payment for Malaysia']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','InstrInfMO','Instruction Information']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','OrgPrvId','Organization','OrgId']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','OrgPrvId','Private Individual','PrvtId']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankEC441','BANCO AMAZONAS','001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankEC441','BANCO BOLIVARIANO','002']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankEC441','BANCO COFIEC','005']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','AccType','Savings','SVGS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','AccType','Checking','CACC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeEC440','SIMPLE','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeEC440','CROSSED','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeEC440','CERTIFICATED','03']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeEC441','SIMPLE','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeEC441','CROSSED','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeEC441','CERTIFICATED','03']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeEC468','SIMPLE','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeEC468','CROSSED','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeEC468','CERTIFICATED','03']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchEC','Guayaquil','001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchEC','Quito','002']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchEC','Guayaquil Batch','003']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','RmtOvr','ISD:105','ISD:105']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ScvCd','Book Transaction','BKTR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ScvCd','Non-urgent Payment','NURG']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ScvCd','Urgent Payment','URGP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ChrgBr','NotUsed','']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ChrgBr','Our','DEBT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ChrgBr','Beneficiary','CRED']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ChrgBr','Shared','SHAR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankCR441','Banco Central','100']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankCR441','Bac San Jose','102']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankCR441','HSBC','104']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeCR','Default','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeCR','TEF','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchCR','Citibank','001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankDO441','Banco Popular','003']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankDO441','Banco BHD','004']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankDO441','Banco del Progreso','005']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeDO441','Automated Payroll','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeDO441','Third Party Payments','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeDO441','Automated Collections','03']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeDO441','Loan Payments','04']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeDO441','Credit cards Payments','05']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeDO441','Account transfers','06']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchDO','JOHN F. KENNEDY','001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchDO','ROMULO BETANCOURT','002']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchDO','OZAMA','003']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankSV441','CITIBANK N.A.','000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankSV441','BANCO CUSCATLAN','009']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeSV440','Supplier','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeSV440','Payroll','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeSV441','Supplier','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeSV441','Payroll','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeSV469','Supplier','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeSV469','Payroll','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchSV','Citibank','001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchSV','Cheques handed to customer in Citi Branch','994']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchSV','Cheques delivered to customer\'s office','995']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchSV','Interbank Payments','998']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankGT441','BANCO DE GUATEMALA','001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankGT441','BCO LOS TRABAJADORES','012']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankGT441','BANCO INMOBILIARIO','013']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankGT441','BANCO INDUSTRIAL','015']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankGT441','BCO.DESARROLLO RURAL','016']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankGT441','BANCO INTERNACIONAL','019']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankGT441','BANCO REFORMADOR','028']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankGT441','CITIBANK N.A. SUCURSAL GUATEMALA','030']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankGT441','VIVIBANCO','036']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeGT441','Otros-Others','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeGT441','Impuestos-Tax','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeGT441','Planillas-Payroll','03']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeGT441','IGSS-Social Security','04']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeGT441','Comisiones-Sales Commisions','05']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeGT441','Viaticos-Travel Expenses','06']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeGT441','Creditcard - Credit Cards','07']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeGT441','Proveedor-Suppliers','08']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchGT','Casa Central','000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchGT','Citibank','001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchGT','Retiro Por Mostrador','994']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchGT','Correo al cliente','995']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchGT','Correo al Benef','997']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchGT','Gateway','927']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchPR','Pickup at Main Citibank Location','994']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchPR','Regular US Mail to the Customer','995']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchPR','Regular US Mail to the Beneficiary','998']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchPR','Special/Custom Handling','990']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchPR','Special/Custom Handling','999']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypePR','default','00']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankAR441','AB AMRO BANK N.V.','005']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankAR441','BCO DE GALICIA Y BS.','007']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankAR441','LLOYDS BANK (BLSA) L','010']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeAR440','Default','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeAR440','Salary-No Credit Taxes','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeAR441','Provider payment thru COELSA','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeAR441','Salary payment through COELSA','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeAR441','Salary payment through DATANET','05']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeAR441','Provider payment through DATANET','06']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeAR441','Inter-Company transfer through DATANET','07']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchAR','CASA CENTRAL','000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchAR','BELGRANDO','002']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchAR','PILAR','003']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankCL441','BCO DE CHILE','001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankCL441','BCO INTERNACIONAL','009']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankCL441','DRESDNER BANQUE NAT','011']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeCL440','Supplier','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeCL440','Payroll','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeCL441','Supplier','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeCL441','Payroll','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeCL455','Supplier','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeCL455','Payroll','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchCL','CITI AHUMADA','001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchCL','OF CLTE AHU','002']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchCL','ATLAS PTO MONTT','003']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CenBankCL442','Communication-Construction-Transport','20000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CenBankCL442','Computer Science','20002']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CenBankCL442','Managerial-Professional-Honorary-Technical','20005']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankCO441','BANCO REPUBLICA','000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankCO441','BANCO DE BOGOTA','001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankCO441','BANCO POPULAR','002']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchCO','Bogotá Chico','104']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchCO','Bogotá Avenida Chile','106']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchCO','Bogotá Santa Bárbara','110']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeCO440','Proveedores','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeCO440','Nómina','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeCO440','Seguros','03']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeCO441','Proveedores','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeCO441','Nómina','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypeCO441','Seguros','03']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankPE441','BANCO DE CREDITO','002']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankPE441','INTERBANC','003']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankPE441','SCOTIA BANK','009']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypePE440','TRANSF. ORDINARIAS (CCE)','20']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypePE440','HABERES (CCE)','21']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypePE440','PROVEEDORES (CCE)','22']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypePE441','TRANSF. ORDIN. OTRO TIT.','20']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypePE441','HABERES QUINTA CATEGORIA','21']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypePE441','PROVEEDORES (CCE)','22']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypePE484','TRANSF. ORDINARIAS (CCE) 01','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypePE484','TRANSF. ORDINARIAS (CCE) 20','20']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DocTypePE484','HABERES (CCE)','21']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchPE','OFICINA PRINCIPAL','001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchPE','ENTREGA EN AGENCIA 002','002']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchPE','ENTREGA EN AGENCIA 003','003']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchPE','ENTREGA EN AGENCIA 004','004']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchPE','DEPOSITOS OTROS BCOS','099']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Equity for establishment of new company abroad from residents','CEA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Purchase of real estate abroad from residents','PPA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Debt instruments intragroup loans securities deposits foreign','DIF']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Equity other than investment fund shares in t related companies abroad','FSA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Investment fund shares foreign','FIA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Trading of foreign debt securities less than year in t related company','DSA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Trading of foreign debt securities more than year in t related company','DLA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Financial derivatives foreign','FDA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Receipts or payments from residents bank account or deposits abroad','AFA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Drawings or Repayments on loans extended to n - residents - short term','SLA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Drawings or Repayments on loans extended to n - residents - long term','LLA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Leasing abroad','LEA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Repos on foreign securities','RFS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Trade credits and advances receivable','TCR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Equity for establishment of new company in UAE from non-residents','CEL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Purchase of real estate in the UAE from n - residents','PPL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Debt instruments intragroup loans securities deposits in the UAE','DIL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Equity other than investment fund shares in t related companies UAE','FSL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Investment fund shares in the UAE','FIL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Trading of securities issued by residents less than year in t company','DSL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Trading of securities issued by residents more than year in t company','DLL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Financial derivatives in the UAE','FDL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Receipts or payments from personal n-resident bank account in the UAE','AFL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Drawings or Repayments on foreign loans to residents - short term','SLL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Drawings or Repayments on foreign loans to residents - long term','LLL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Leasing in the UAE','LEL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Repos on securities issued by residents','RLS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Trade credits and advances payable','TCP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Educational Support','EDU']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Allowances','ALW']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Advance payment against EOS','AES']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Leave Salary','LAS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Overtime','OVT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Tickets','TKT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Salary Advance','SAA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Compensation','COP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Commission','COM']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','End of Service','EOS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Bonus','BON']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Pension','PEN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Utility Bill Payments','UTL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Pre-Paid Reloadable & Personalized Debit Card Payments','DCP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Loan Disbursements','LND']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Loan Interest Payments','LIP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','IPO Subscriptions','IPO']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Refunds or Reversals on IPO subscriptions','POR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Rent Payments','RNT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Loan Charges','LNC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Equated Monthly Instalments','EMI']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Dividend Payouts','DIV']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Agency Commission','ACM']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Corporate Card Payment','CCP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','POS Merchant Settlement','POS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Monetary Claim Reimbursements Medical Insurance or Auto Insurance etc','MCR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Personal Investments','PIN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Commercial Investments','CIN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Credit Card Payments','CRP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Goods Bought or Sold','GDS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Processing repair and maintenance services on goods','GMS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Sea transport','STS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Air transport','ATS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Other modes of transport','OTS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Travel','STR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Construction','SCO']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Insurance services','INS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Financial services','FIS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Charges for the use of intellectual property royalties','IPC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Telecommunication services','TCS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Computer services','ITS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Information services','IFS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Research and development services','RDS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Professional and management consulting services','PMS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Technical trade-related and other business services','TTS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Personal cultural audio visual and recreational services','PRS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Government goods and services embassies etc','GOS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Salary','SAL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Intra group dividends','IGD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Intra group interest on debt','IID']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Profits on Islamic products','PIP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Profits or rents on real estate','PRR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Dividends on equity not intra group','DOE']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Income on investment funds shares','ISH']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Interest on securities more than a year','ISL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Interest on securities less than a year','ISS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Income on loans','IOL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Income on deposits','IOD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Government related income taxes tariffs capital transfers etc','GRI']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Charitable Contributions','CHC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Cd','Family Support','FAM']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenId','a Bank','a Bank']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenId','Not a Bank','Not a Bank']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Adj/Rev/Ref Imports','10000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-other goods','10101']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-cap goods','10102']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-gold','10103']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-platinum','10104']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-crude oil','10105']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-refined petroleum products','10106']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-diamonds','10107']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-steel','10108']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-coal','10109']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-iron ore','10110']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-import SAPO','10111']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-other goods IU','10201']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-cap goods IU','10202']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-gold IU','10203']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-platinum IU','10204']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-crude oil IU','10205']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-refined petroleum products IU','10206']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-diamonds IU','10207']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-steel IU','10208']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-coal IU','10209']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-iron ore IU','10210']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import adv paymt-import SAPO IU','10211']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-other goods','10301']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-capital goods','10302']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-gold','10303']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-platinum','10304']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-crude oil','10305']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-refined petroleum products','10306']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-diamonds','10307']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-steel','10308']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-coal','10309']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-iron ore','10310']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-import SAPO','10311']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-other goods IU','10401']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-capital goods IU','10402']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-gold IU','10403']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-platinum IU','10404']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-crude oil IU','10405']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-refined petroleum products IU','10406']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-diamonds IU','10407']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-steel IU','10408']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-coal IU','10409']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-iron ore IU','10410']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-import SAPO IU','10411']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Consumables acquired in port','10500']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Repayment of trade finance for imports','10600']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-less than R500','10700']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Import payment-passenger baggage no MRN','10800']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment-goods no physical import','10901']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment- gold no physical import','10902']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment-platinum no physical import','10903']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment-crude oil no physical import','10904']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment-refined petroleum prod no physical import','10905']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment-diamonds no physical import','10906']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment-steel no physical import','10907']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment-coal no physical import','10908']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment-iron ore no physical import','10909']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Merchanting transaction','11000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Adj/Rev/Ref I/P and services','20000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Rights-licences reprod/distrib','20100']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Rights-patents/inventions','20200']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Rights-patterns/designs','20300']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Rights-copyrights','20400']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Rights-franchises/trademarks','20500']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Acquisition-patents/inventions','21000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Acquisition-patterns/designs','21100']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Acquisition-copyrights','21200']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Acquisition-franchises/trademarks','21300']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Paymt-research/dev services','22000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Funding-research/dev','22100']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Acquisition-manuscripts/sound recordings/films','22500']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Paymt-prod motion pict/radio/TV prog/music','22600']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Purch ownership rights of software','23000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Computer services maint/repair/consult','23100']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Purch custom software/licenses','23200']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Purch non-custom software-phys med periodic lic','23300']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Purch non-custom software-phys med perpetual use','23400']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Purch non-custom software-d/load period lic','23500']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Purch non-custom software-d/load single payment','23600']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Fees for processing-other materials','24001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Fees for processing-gold','24002']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Fees for processing-platinum','24003']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Fees for processing-crude oil','24004']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Fees for processing-refined petroleum products','24005']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Fees for processing-diamonds','24006']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Fees for processing-steel','24007']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Fees for processing-coal','24008']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Fees for processing-iron ore','24009']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Repairs/Maint on machinery and equipment','24100']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Architect/Engineering and other technical services','24200']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Agric/Mining/Waste treatmt/Depollution services','24300']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Travel services NRes-business travel','25000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Travel services NRes-holiday travel','25100']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Travel services Res-business travel','25500']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Travel services Res-holiday travel','25600']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Paymt travel services 3rd parties-business travel','26000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Paymt travel services 3rd parties-holiday travel','26100']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Paymt telecommunication services','26500']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Paymt information services data/news','26600']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for passenger services-road','27001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for passenger services-rail','27002']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for passenger services-sea','27003']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for passenger services-air','27004']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for freight services-road','27101']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for freight services-rail','27102']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for freight services-sea','27103']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for freight services-air','27104']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for other transport services-road','27201']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for other transport services-rail','27202']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for other transport services-sea','27203']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for other transport services-air','27204']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for postal and courier services-road','27301']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for postal and courier services-rail','27302']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for postal and courier services-sea','27303']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for postal and courier services-air','27304']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Commission and fees','27500']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Financial service fees charged for advice provided','27600']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for construction services','28000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for government services','28100']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Diplomatic transfers','28200']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Tuition fees','28500']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for legal services','28700']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for accounting services','28800']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for management consulting services','28900']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for public relation services','29000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for advertising & market research services','29100']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for managerial services','29200']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for medical and dental services','29300']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for educational services','29400']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Operational leasing','29500']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for cultural and recreational services','29600']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Payment for other business services','29700']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Adj/Rev/Ref for income/yields on financial assets','30000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Dividends','30100']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Branch profits','30200']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Comp pd by Res to Res emp temp abrd','30300']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Comp pd by Res to NRes employee','30400']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Comp pd by Res to migrant worker employee','30500']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Comp pd by Res to frgn nat contract worker','30600']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Commission or brokerage','30700']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Rental','30800']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Int pd to NRes in respect of shareholders loans','30904']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Int pd to NRes in respect of third party loans','30905']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Int pd to NRes in respect of trade finance loans','30906']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Int pd to NRes in respect of a bond','30907']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Interest paid not in respect of loans','30908']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Fee-inward listed securities derivatives individual','31201']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Fee-inward listed securities derivatives corporate','31202']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Fee-inward listed securities derivatives bank','31203']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Fee-inward listed securities derivatives institution','31204']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Adj/Rev/Ref transfers of a current nature','40000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Gifts','40100']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Annual contributions','40200']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Contrib-social security schemes','40300']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Contrib-foreign charitable/religious/cultural','40400']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Other donations / aid to a foreign Government','40500']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Other donations / aid to a foreign private sector','40600']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Pensions','40700']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Annuities-pension related','40800']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Inheritances','40900']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Alimony','41000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Tax-Income tax','41101']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Tax-VAT refunds','41102']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Tax-Other','41103']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Insurance premiums-non life/short term','41200']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Insurance claims-non life/short term','41300']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Insurance premiums-life','41400']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Insurance claims-life','41500']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Migrant worker remittances','41600']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Foreign national contract worker remittances','41700']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Adj/Rev/Ref capital transfers and emigrants','50000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Donations by SA Government for fixed assets','50100']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Donations by corporate entities for fixed assets','50200']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Disinvestmt property by NRes corporate entity','50300']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Investmt property by a Res corporate entity','50400']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Disinvestmt property by NRes individual','51001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Disinvestmt NRes individual - other','51002']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Investmt Res indiv above inv allow-Shares','51101']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Investmt Res indiv above inv allow-Bonds','51102']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Investmt Res indiv above inv allow-MM','51103']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Investmt Res indiv above inv allow-Dep frgn bank','51104']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Investmt Res indiv above inv allow-Mut funds/CIS','51105']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Investmt Res indiv above inv allow-Property','51106']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Investmt Res indiv above inv allow-Other','51107']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Frgn investmt Res indiv inv allow-Shares','51201']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Frgn investmt Res indiv inv allow-Bonds','51202']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Frgn investmt Res indiv inv allow-MM','51203']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Frgn investmt Res indiv inv allow-Dep frgn bank','51204']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Frgn investmt Res indiv inv allow-Mut funds/CIS','51205']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Frgn investmt Res indiv inv allow-Property','51206']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Frgn investmt Res indiv inv allow-Other','51207']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Investmt Res indiv from local source to RFCA','51300']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Frgn investmt Res indiv from RFCA-Shares','51401']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Frgn investmt Res indiv from RFCA-Bonds','51402']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Frgn investmt Res indiv from RFCA-MM','51403']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Frgn investmt Res indiv from RFCA-Dep frgn bank','51404']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Frgn investmt Res indiv from RFCA-Mut funds/CIS','51405']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Frgn investmt Res indiv from RFCA-Property','51406']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Frgn investmt Res indiv from RFCA-Other','51407']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Re-trf cap repat for indiv investmt-Shares','51501']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Re-trf cap repat for indiv investmt-Bonds','51502']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Re-trf cap repat for indiv investmt-MM','51503']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Re-trf cap repat for indiv investmt-Dep frgn bank','51504']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Re-trf cap repat for indiv investmt-Mut funds/CIS','51505']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Re-trf cap repat for indiv investmt-Property','51506']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Re-trf cap repat for indiv investmt-Other','51507']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Emigration frgn cap allowance-fixed property','53001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Emigration frgn cap allowance-listed investments','53002']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Emigration frgn cap allowance-unlisted investments','53003']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Emigration frgn cap allowance-insurance policies','53004']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Emigration frgn cap allowance-cash','53005']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Emigration frgn cap allowance-debtors','53006']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Emigration frgn cap allowance-cap distrib from trusts','53007']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Emigration frgn cap allowance-other assets','53008']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Adj/Rev/Ref fin inv/disinv/prudential investmts','60000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Sale proceeds pd to NRes-Listed shares','60101']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Sale proceeds pd to NRes-Non-listed shares','60102']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Disinvestmt by NRes-MM','60200']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Disinvestmt by NRes-listed bonds','60301']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Disinvestmt by Nres-non-listed bonds','60302']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Shr investmt Res entity-Agric hunting forestry fishing','60501']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Shr investmt Res entity-Mining quarrying exploration','60502']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Shr investmt Res entity-Manufacturing','60503']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Shr investmt Res entity-Electricity gas water supply','60504']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Shr investmt Res entity-Construction','60505']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Shr investmt Res entity-W/sale retail repairs hotel etc','60506']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Shr investmt Res entity-Transport communication','60507']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Shr investmt Res entity-Financial services','60508']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Shr investmt Res entity-Comm social personal serv','60509']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Inward listed securities equity individual','61001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Inward listed securities equity corporate','61002']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Inward listed securities equity bank','61003']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Inward listed securities equity institution','61004']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Inward listed securities debt individual','61101']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Inward listed securities debt corporate','61102']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Inward listed securities debt bank','61103']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Inward listed securities debt institution','61104']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Inward listed securities derivatives individual','61201']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Inward listed securities derivatives corporate','61202']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Inward listed securities derivatives bank','61203']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Inward listed securities derivatives institution','61204']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Investmt Res instit investorâ€“Asset Manager','61501']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Investmt Res instit investorâ€“CIS','61502']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Investmt Res instit investorâ€“Retirement Fund','61503']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Investmt Res instit investorâ€“Life Linked','61504']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Investmt Res instit investorâ€“Life Non Linked','61505']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Bank prudential investment','61600']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Adj/Rev/Ref related to derivatives','70000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Options â€“ listed','70101']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Options â€“ unlisted','70102']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Futures â€“ listed','70201']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Futures â€“ unlisted','70202']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Warrants â€“ listed','70301']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Warrants â€“ unlisted','70302']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Gold hedging â€“ listed','70401']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Gold hedging â€“ unlisted','70402']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Derivative not specified above â€“ listed','70501']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Derivative not specified above â€“ unlisted','70502']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Adj/Rev/Ref loan and misc payments','80000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Repaymt trade fin drawn down in SA','80100']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Repaymt internat bond drawn down','80200']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Repaymt by Res of loan from NRes S/holder','80300']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Repaymt by Res of loan NRes third party','80400']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Loan by Res to Res temporarily abroad','81000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Individual loan to NRes','81500']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Study loan to NRes','81600']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Shareholders loan to NRes','81700']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Third party loan to NRes','81800']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Trade finance to NRes','81900']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Rand collections for the credit of vostro accounts','83100']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymentCtgyCd','Cr/Dt card co settlemts/Money remitter settlemts','83300']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenAcctTpCd','FUTSUU','FU']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenAcctTpCd','TOUZA','TO']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenAcctTpCd','CHOCHIKU','TI']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenAcctTpCd','SONOTA','SO']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenAcctTpPrtry','Ordinary savings account','FU']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenAcctTpPrtry','Checking account','TO']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenAcctTpPrtry','Savings account','TI']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenAcctTpPrtry','Other accounts','SO']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','TypeOfPaym','Residence rent','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','TypeOfPaym','Office rent','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','TypeOfPaym','Other rents','03']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','TypeOfPaym','Payroll payment','04']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','TypeOfPaym','Credit card payment','05']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','TypeOfPaym','Payment to account','99']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','TypeOfPayment','Residence rent','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','TypeOfPayment','Office rent','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','TypeOfPayment','Other rents','03']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','TypeOfPayment','Other payments','99']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','TypeOfPayment','Cash Advance','61']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','TypeOfPayment','Cash Against Documents','62']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','TypeOfPayment','Cash Against Goods','63']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','CAPITAL FEDERAL','00']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','BUENOS AIRES','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','CATAMARCA','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','CORDOBA','03']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','CORRIENTES','04']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','ENTRE RIOS','05']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','JUJUY','06']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','MENDOZA','07']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','LA RIOJA','08']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','SALTA','09']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','SAN JUAN','10']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','SAN LUIS','11']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','SANTA FE','12']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','SANTIAGO DEL ESTERO','13']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','TUCUMAN','14']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','CHACO','16']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','CHUBUT','17']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','FORMOSA','18']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','MISIONES','19']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','NEUQUEN','20']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','LA PAMPA','21']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','RIO NEGRO','22']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','SANTA CRUZ','23']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ARState','TIERRA DEL FUEGO','24']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ChqType','BankCheque','BCHQ']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ChqType','CertifiedCustomerCheque','CCCH']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ChqType','CustomerCheque','CCHQ']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','RmtInf','/NAAL/OTHER','/NAAL/OTHER']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','RmtInf','/NAAL/DISBURMENT','/NAAL/DISBURMENT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','RmtInf','/NAAL/COLLECTION','/NAAL/COLLECTION']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','InstrForCdtrAgt','Traditional Chinese','TC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','InstrForCdtrAgt','Simplified Chinese','SC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymDetails','Resident','RESIDENT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PaymDetails','Non resident','NON-RESIDENT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CtgyPurp','Salary','61']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CtgyPurp','Payment to creditors','81']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CtgyPurp','Sameday Soonestvalue','88']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CtgyPurp','TwoDay Value Payment','85']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CtgyPurp','Payroll','99']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Healthcompensations','alimonies','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Furikomi','21']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Salary','11']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Bonus','12']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Sundry Credit','20']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Standing Instruction Credit','21']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Salary Credit','22']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Dividend Credit','23']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Inward Remittance Credit','24']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Proceeds of Bill','25']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Salary Commission Pension(DEFAULT)','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Dividend','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Interest','03']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Goods and Services Payment','04']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Stock Selling','05']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Tax Refund','06']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Health compensations alimonies','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Executive documents for salaries and copyright dues','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Salaries pmnt orders of tax inspections for transfers of tax debt','03']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Misc. monetary claims','04']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Purp','Other payment orders','05']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Rate','Vat 0% included','04']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Rate','VAT 10 % included','05']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Rate','Vat 18% included','06']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','AddtlInf','VAT Included','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','AddtlInf','Vat Not Applicable','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','AddtlInf','Vat Paid Separately','03']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Mtd','Pays tax for only one time',1]);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Mtd','Pays tax every time','2']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Mtd','Deducts tax at source','3']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','Mtd','Others','4']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','FrmsCd','Phor Ngor Dor 1 Kor',1]);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','FrmsCd','Phor Ngor Dor 1 Kor Special','2']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','FrmsCd','Phor Ngor Dor 2','3']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','FrmsCd','Phor Ngor Dor 3','4']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','FrmsCd','Phor Ngor Dor 2 Kor','5']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','FrmsCd','Phor Ngor DOr 3 Kor','6']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','FrmsCd','Phor Ngor Dor 53','7']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','AddtlInf','VAT flag Y','Y']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','AddtlInf','VAT flag N','N']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BeneType','Individual',1]);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BeneType','Corporate','2']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BeneType','Government','3']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ResStatus','Resident',1]);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ResStatus','Non-Resident','2']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','TransType','Transfer between Customers','50']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','TransType','Government Transactions','51']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','TransType','Reversal/Return','59']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','TransFacilityType','Teller',1]);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','TransFacilityType','e-Channel','2']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCode','Other capital receipts not included elsewhere','P0099']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCode','Other travel receipts','P0306']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCode','Receipts of passenger fare - Airlines','P0220']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCode','Other receipts by Airlines companies','P0221']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCode','Postal and courier service by Air','P0224']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodeCNS1','227020 computer software service fee','计算软件服务费']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodeCNS1','227030 news subscription fees','新闻简报订阅费']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodeCNS1','321000 foreign employee salary','外籍员工工资']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodeCNS1','228050 headhunting fee','猎头费']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodeCNS2','227020 computer software service fee','计算软件服务费']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodeCNS2','227030 news subscription fees','新闻简报订阅费']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodeCNS2','321000 foreign employee salary','外籍员工工资']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodeCNS2','228050 headhunting fee','猎头费']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANXICO','001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','SCOTIABANK','002']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANAMEX','003']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BBVABANCOMER','004']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANCO SANTANDER','009']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANCO HSBC','010']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANCOMEXT','012']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANOBRAS','013']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANJERCITO','015']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANORTE IXE','018']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','NAFIN','022']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','INBURSA','031']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','INTERACCIONES','032']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','MIFEL','033']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','INVEX','035']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','TOKIO','037']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','PAGOMATICO/INVE','040']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','INVESTA BANK','042']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','AFIRME S.A.','043']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','AMEX BANK','044']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BAJIO','046']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BAMSA','047']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANREGIO','048']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANSI','049']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANCO MONEX','055']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','JP MORGAN','059']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','CREDIT SUISSE','063']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANSEFI','064']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANCO AZTECA','065']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','DEUTSCHE BANK MEXICO','066']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANCO VE POR MAS S.A','067']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANCO DE AHORRO FAMS','069']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANCO MULTIVA','070']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','UBS BANK MEXICO','071']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANCO AUTOFIN MEXICO','072']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANCO BARCLAYS','073']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','CONSUBANCO','074']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANCOPPEL','076']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANCO COMPARTAMOS','077']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANCO ACTINVER','078']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','INTERCAM BANCO','079']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','ABC CAPITAL','080']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','VOLSKWAGEN BANK S.A.','081']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','CONSULTORIAINT BANCO','082']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','TESOFE','084']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','HIPOTECARIA FEDERAL','085']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','enBankMX441','BANCO BASE S.A.','145']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANKAOOL','147']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','PAGATODO','148']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','FORJADORES','149']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANCO INMOBILIARIO','150']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','DONDE BANCO','151']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BM BANCREA','152']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','CHIHUAHUA','153']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BANCO FINTERRA','154']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','ICBC','155']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','SABADELL','156']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','CASA BOLSA MONEX','600']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','CASA BOLSA GBM','601']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','MASARI CASA CAMB','602']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','VALUE CASA DE BOLSA','605']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','CB BASE INTERNAC','606']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','CASA BOLSA VECTOR','608']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BYB','610']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','MULTIVALORES','613']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','ACCIVAL','614']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','MERIL LYNCH CASA B','615']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','FINAMEX','616']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','VALORES MEXICANOS','617']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','MAPFRE TEPEYAC','619']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','PROFUTURO GNP AFORE','620']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','ACTINVER CASA BOLSA','621']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','OACTIN','622']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','SKANDIA VIDA','623']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','CASA CAMBIO TAMIBE','625']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','DEUSTCHE CASA BOLSA','626']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','ZURICH COMPANIA SEG','627']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','ZURICH VIDA COMP SEG','628']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','INTERCAM CASA BOLSA','630']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','VANGUARDIA CASA BOLS','631']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','FINCOMUN','634']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','HDI SEGUROS','636']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','ORDER','637']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','AKALA','638']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','JP MORGAN CASA BOLSA','640']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','OPERADORAREC REFORMA','642']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','C DE BOLSA BANORTE','644']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','SOFOM STP','646']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','EVERCORE','648']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','SKANDIA OPERA FONDOS','649']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','SEG MTY NEW YORK','651']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','SOLUCION ASEA SFP','652']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','KUSPIT CASA DE BOLSA','653']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','JP SOFIEXPRESS','655']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','UNGARA','656']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','ASP INTEGRA OPC','659']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','LIBERTAD','670']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','CAJA POP HUASTECA','671']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','GNP','673']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','AXA SEGUROS SA DE CV','674']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','FICREA SA DE CV','675']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','CAJA POP MEXICANA','677']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','AFORE SURA SA DE CV','678']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','FND','679']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','CRISTOBAL COLON','680']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','PRINCIPAL AFORE','681']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','PERSEVERANCIA','682']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','CAJA TELMEX','683']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','FONDO (FIRA)','685']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','INVERCAP','686']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','INFONAVIT','687']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','FOMPED','689']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','BTG PACTUAL','691']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BenBankMX441','INDEVAL','902']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodePS','Wages and Salaries','10']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodePS','Retirements Wages and Salaries','11']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodePS','End of service Indemnity','12']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodePS','Family Aid or Family Assistance','13']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodePS','Legacy/Heritance','14']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CtgyPurpPrtry','Agency Commission','ACM']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CtgyPurpPrtry','Advance Payment Against EOS','AES']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CtgyPurpPrtry','Allowance','ALW']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CtgyPurpPrtry','Air Transport','ATS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CtgyPurpPrtry','Bonus','BON']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CtgyPurpPrtry','Corporate Card Payments','CCP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CtgyPurpPrtry','Charitable Contributions','CHC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CtgyPurpPrtry','Commercial Investments','CIN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CtgyPurpPrtry','Commission','COM']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DlvryMtd','Courier To Creditor(Vendor address)','CRCD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DlvryMtd','Mail To Creditor(Vendor address)','MLCD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DlvryMtd','Registered Mail To Creditor(Vendor address)','RGCD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DlvryMtd','Mail To Final Agent(Vendor address)','MLFA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DlvryMtd','Courier To Debtor(Bank address)','CRDB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DlvryMtd','Mail To Debtor(Bank address)','MLDB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DlvryMtd','Registered Mail To Debtor(Bank address)','RGDB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DlvryMtd','Hold for Beneficiary(Vendor address)','PUCD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DlvryMtd','Hold for Customer(Bank address)','PUDB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DlvryMtd','Courier To Final Agent','CRFA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DlvryMtd','Pick Up By Final Agent','PUFA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DlvryMtd','Registered Mail To Final Agent','RGFA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DlvryMtd','To be collected at Citibank by the applicant','CBYA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DlvryMtd','Mailed to beneficiary by Citibank','MAIL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DlvryMtd','Returned to ordering party','RET']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DlvryMtd','Counter with receipt','C/R']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DlvryMtd','Counter without receipt','C/OR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchUY','CASA CENTRAL 000','000']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchUY','CASA CENTRAL 001','001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchUY','CASA CENTRAL MOSTRADOR','003']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DestBrnchUY','CORREO AL BENEF','997']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CenBankPY442','Foreign Trade - goods and services','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CenBankPY442','Investment in financial instruments','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CenBankPY442','Suppliers Payments','20']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CenBankPY442','Credit card Payments','21']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CenBankPY441','Foreign Trade - goods and services','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CenBankPY441','Investment in financial instruments','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CenBankPY441','Suppliers Payments','20']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','CenBankPY441','Credit card Payments','21']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','AdmstnZn','Faster Payment','F']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','AdmstnZn','Sorbnet','S']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DbtrId','Taxpayer Id','N']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DbtrId','Pesel','P']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DbtrId','Regon','R']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DbtrId','ID Card',1]);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DbtrId','Passport','2']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','DbtrId','Other Document','3']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ILInstrInf','One Time Credit','006']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ILInstrInf','Salary Payment','001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ILInstrInf','Remitter - Salary Payment','101']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ILInstrInf','Remitter - One time credit','106']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','InstrInf','MAIL DRAFT TO BENE','/REC/MAIL DRAFT TO BENE']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','InstrInf','RETURN TO ORDERING PARTY','/REC/RETURN TO ORDERING PARTY']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','SpclHndlgCode','Overnight to Payor','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','SpclHndlgCode','Overnight to Beneficiary/Payee','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ITRSCode','Exports','1100']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ITRSCode','Imports','1200']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ITRSCode','Sea transport','2110']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ITRSCode','Air transport','2120']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ITRSCode','Other transport','2130']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ITRSCode','Manufacturing services','3100']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ITRSCode','Maintenance and repair services','3200']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ITRSCode','Construction abroad','3310']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ITRSCode','Construction in Myanmar','3320']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ITRSCode','Insurance premiums','3410']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','RmtLctnMtd','Fax','FAXI']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','RmtLctnMtd','eMail','EMAL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','RmtLctnMtd','Post','POST']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmt','Agency Commissions','ACM']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmt','Advance payment against EOS','AES']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmt','Receipts or payments from personal residents bank account or deposits abroad','AFA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmt','Receipts or payments from personal non-resident bank account in BAH','AFL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmt','Allowance','ALW']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmt','Air transport','ATS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmt','Bonus','BON']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmt','Corporate Card Payment','CCP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtTN','Import Export FOB FAS or Equiv','0111']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtTN','Import Export CAF CIF or Equiv','0112']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtTN','Non-Commercial Purchase/Sale','0113']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtTN','Purchases and Sales of Parts of','0114']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtTN','Purchases and Sales of Fuel','0115']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtTN','Purchases and Sales of Products C','0116']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtTN','Purchases and Sales of Products D','0117']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtTN','Purchases and Sales of Software','0118']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtTN','International Trading and Brokerage','0120']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ActivitySector','Agriculture forestry and fishing','A']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ActivitySector','Extractive industries','B']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ActivitySector','Manufacturing industry','C']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ActivitySector','Production and distribution of electricity gas steam and air conditioning','D']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ActivitySector','Water production and distribution sanitation waste management and pollution control','E']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ActivitySector','Construction','F']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ActivitySector','Trade repair of automobiles and motorcycles','G']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','ActivitySector','Accommodation and catering','I']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodeIN','Indian investment abroad in equity capital (shares)','S0001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodeIN','Indian investment abroad in debt securities','S0002']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodeIN','Indian investment abroad in branches','S0003']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodeIN','Indian investment abroad in subsidiaries and associates','S0004']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodeIN','Indian investment abroad in real estate','S0005']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodeIN','Repatriation of Foreign Direct Investment in India in equity shares','S0006']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodeIN','Repatriation of Foreign Direct Investment in India in debt securities','S0007']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodeIN','Repatriation of Foreign Direct Investment in India in real estate','S0008']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodeIN','Repatriation of Foreign Portfolio Investment in India in equity shares','S0009']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpCodeIN','Repatriation of Foreign Portfolio Investment in India in debt securities','S0010']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtPK','Official Travel — Gov','9031']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtPK','Nonresident Patient for Medical','9061']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtPK','Tourists Pak National','9081']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtPK','Construction Services','9111']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtPK','Life Insurance & Pension Serv','9121']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtPK','Non-Life Insurance Services','9141']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtPK','Purchases and Sales of Products D','0117']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','RelationPK','Payment on behalf of Employer to Employee','Payment to Customer']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','RelationPK','Payment on behalf of Employer to Supplier','Payment to Supplier']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtMY','Education services','16830']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtMY','Education-related','13500']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtMY','Buildings/machine rentals','16780']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtMY','Income tax (private)','21241']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtMY','Income tax (gov sector)','21131']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtMY','Telecommunication service','16100']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtMY','Benefits for employees','14320']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtMY','Passenger fare by air','11210']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtMY','Fare for transportation','11230']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtMY','Airport services','12110']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtMY','Business travel purchases','3210']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtMY','Organizations abroad','15200']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtMY','Financial service charges','16410']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtMY','Legal services','16771']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtMY','Other Business Services','16793']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtMY','Health services','16820']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtMY','Recreational services','16840']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','PurpOfPmtMY','Other personal services','16850']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','InstrInfMO','MAIL TO ORDERING PARTY','MAIL TO ORDERING PARTY']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','InstrInfMO','RETURN TO HONGKONG OFFICE','RETURN TO HONGKONG OFFICE']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','InstrInfMO','MAIL TO BENE','MAIL TO BENE']);


        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData</Name>
				<Source><![CDATA[
    protected container getFormatLookupsMetaData(str _formatID)
    {
        container   formatLookupsList;

        //Metadata column names of data elements

        switch (_formatID)
        {
            case ('US-CITICONNECT-XML-CN'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_CN();
                break;

            case ('US-CITICONNECT-XML-CA'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_CA();
                break;

            case ('US-CITICONNECT-XML-US'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_US();
                break;

            case ('US-CITICONNECT-XML-DE'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_DE();
                break;

            case ('US-CITICONNECT-XML-GB'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_GB();
                break;

            case ('US-CITICONNECT-XML-KR'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_KR();
                break;

            case ('US-CITICONNECT-XML-NZ'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_NZ();
                break;

            case ('US-CITICONNECT-XML-TW'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_TW();
                break;

            case ('US-CITICONNECT-XML-JO'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_JO();
                break;

            case ('US-CITICONNECT-XML-AE'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_AE();
                break;

            case ('US-CITICONNECT-XML-MX'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_MX();
                break;

            case ('US-CITICONNECT-XML-AU'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_AU();
                break;

            case ('US-CITICONNECT-XML-BR'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_BR();
                break;

            case ('US-CITICONNECT-XML-HK'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_HK();
                break;

            case ('US-CITICONNECT-XML-HN'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_HN();
                break;

            case ('US-CITICONNECT-XML-ID'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_ID();
                break;

            case ('US-CITICONNECT-XML-IN'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_IN();
                break;

            case ('US-CITICONNECT-XML-JP'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_JP();
                break;

            case ('US-CITICONNECT-XML-MY'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_MY();
                break;

            case ('US-CITICONNECT-XML-PA'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_PA();
                break;

            case ('US-CITICONNECT-XML-PH'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_PH();
                break;

            case ('US-CITICONNECT-XML-SG'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_SG();
                break;

            case ('US-CITICONNECT-XML-SK'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_SK();
                break;

            case ('US-CITICONNECT-XML-TH'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_TH();
                break;

            case ('US-CITICONNECT-XML-TR'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_TR();
                break;

            case ('US-CITICONNECT-XML-UY'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_UY();
                break;

            case ('US-CITICONNECT-XML-VE'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_VE();
                break;

            case ('US-CITICONNECT-XML-ZA'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_ZA();
                break;

            case ('US-CITICONNECT-WL-XML-UZ'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_WL_XML_UZ();
                break;

            case ('US-CITICONNECT-XML-TN'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_TN();
                break;

            case ('US-CITICONNECT-XML-PY'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_PY();
                break;

            case ('US-CITICONNECT-XML-IL'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_IL();
                break;

            case ('US-CITICONNECT-XML-VN'):
                formatLookupsList = this.getFormatLookupsMetaData_US_CITICONNECT_XML_VN();
                break;

        }

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_CN</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_CN()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-CN','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-CN','5','eMail','EMAL']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-CN','5','Post','POST']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-CN','6','NotUsed','']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-CN','6','Our','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-CN','6','Beneficiary','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-CN','6','Shared','SHAR']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_CA</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_CA()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-CA','6','Borne by Debtor','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-CA','6','Borne by Creditor','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-CA','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-CA','5','eMail','EMAL']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_US</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_US()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-US','6','SHARED','SHAR']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-US','6','DEBTOR','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-US','6','CREDITOR','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-US','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-US','5','eMail','EMAL']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-US','5','CA check del by mail','/ADVCD///TMP04']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-US','5','US check del by FedEx','/ADVCD/01//TMP01']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-US','5','CA check del by FedEx','/ADVCD/01//TMP04']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_DE</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_DE()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-DE','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-DE','5','eMail','EMAL']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_GB</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_GB()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-GB','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-GB','5','eMail','EMAL']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-GB','6','BorneByCreditor','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-GB','6','BorneByDebtor','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-GB','6','Shared','SHAR']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_KR</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_KR()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-KR','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-KR','5','eMail','EMAL']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-KR','6','BorneByDebtor','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-KR','6','BorneByCreditor','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-KR','6','Shared','SHAR']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_NZ</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_NZ()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-NZ','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-NZ','5','eMail','EMAL']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-NZ','6','BorneByDebtor','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-NZ','6','BorneByCreditor','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-NZ','6','Shared','SHAR']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_TW</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_TW()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-TW','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-TW','5','eMail','EMAL']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-TW','6','BorneByDebtor','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-TW','6','BorneByCreditor','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-TW','6','Shared','SHAR']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_JO</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_JO()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-JO','5','eMail','EMAL']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-JO','6','BorneByDebtor','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-JO','6','BorneByCreditor','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-JO','6','Shared','SHAR']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_AE</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_AE()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-AE','6','BorneByDebtor','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-AE','6','BorneByCreditor','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-AE','6','Shared','SHAR']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-AE','5','eMail','EMAL']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_MX</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_MX()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-MX','6','Debtor','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-MX','6','Creditor','CRED']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_AU</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_AU()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-AU','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-AU','5','eMail','EMAL']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-AU','6','BorneByCreditor','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-AU','6','BorneByDebtor','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-AU','6','Shared','SHAR']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_BR</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_BR()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-BR','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-BR','5','eMail','EMAL']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_HK</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_HK()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-HK','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-HK','5','eMail','EMAL']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-HK','6','BorneByCreditor','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-HK','6','BorneByDebtor','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-HK','6','Shared','SHAR']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_HN</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_HN()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-HN','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-HN','5','eMail','EMAL']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_ID</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_ID()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-ID','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-ID','5','eMail','EMAL']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-ID','6','BorneByDebtor','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-ID','6','BorneByCreditor','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-ID','6','Shared','SHAR']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_IN</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_IN()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-IN','5','eMail','EMAL']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-IN','5','Fax','FAXI']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_JP</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_JP()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-JP','6','Debtor','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-JP','6','Beneficiary','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-JP','6','Shared','SHAR']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_MY</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_MY()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-MY','6','Borne by Debtor','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-MY','6','Borne by Creditor','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-MY','6','Shared','SHAR']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-MY','5','eMail','EMAL']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-MY','5','Fax','FAXI']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_PA</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_PA()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-PA','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-PA','5','eMail','EMAL']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_PH</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_PH()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-PH','5','eMail','EMAL']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-PH','5','Fax','FAXI']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_SG</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_SG()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-SG','6','Borne by Debtor','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-SG','6','Borne by Creditor','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-SG','6','Shared','SHAR']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-SG','5','eMail','EMAL']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-SG','5','Fax','FAXI']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_SK</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_SK()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-SK','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-SK','5','eMail','EMAL']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_TH</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_TH()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-TH','6','Borne by Debtor','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-TH','5','eMail','EMAL']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-TH','5','Fax','FAXI']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_TR</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_TR()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-TR','6','Our','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-TR','6','Beneficiary','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-TR','6','Shared','SHAR']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-TR','5','eMail','EMAL']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-TR','5','Fax','FAXI']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_UY</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_UY()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-UY','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-UY','5','eMail','EMAL']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-UY','6','SHARED','SHAR']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-UY','6','DEBTOR','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-UY','6','CREDITOR','CRED']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_VE</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_VE()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-VE','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-VE','5','eMail','EMAL']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_ZA</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_ZA()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-ZA','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-ZA','5','eMail','EMAL']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-ZA','6','Our','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-ZA','6','Beneficiary','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-ZA','6','Shared','SHAR']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_WL_XML_UZ</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_WL_XML_UZ()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-WL-XML-UZ','6','Shared by bene&cust','SHAR']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_TN</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_TN()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-TN','6','Shared','SHAR']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-TN','6','BorneByDebtor','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-TN','6','BorneByCreditor','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-TN','6','Payor pays charges','OUR']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_PY</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_PY()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-PY','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-PY','5','eMail','EMAL']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_IL</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_IL()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-IL','6','Beneficiary','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-IL','6','Our','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-IL','6','Shared','SHAR']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData_US_CITICONNECT_XML_VN</Name>
				<Source><![CDATA[
    private container getFormatLookupsMetaData_US_CITICONNECT_XML_VN()
    {
        container   formatLookupsList;

        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-VN','6','Debtor','DEBT']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-VN','6','Beneficiary','CRED']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-VN','6','Shared','SHAR']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-VN','5','Fax','FAXI']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-VN','5','eMail','EMAL']);
        formatLookupsList = ConIns(formatLookupsList,conLen(formatLookupsList)+1,['US-CITICONNECT-XML-VN','5','Post','POST']);

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('US-CITICONNECT-XML-EC'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_EC();
                break;

            case ('US-CITICONNECT-XML-CR'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_CR();
                break;

            case ('US-CITICONNECT-XML-DO'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_DO();
                break;

            case ('US-CITICONNECT-XML-SV'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_SV();
                break;

            case ('US-CITICONNECT-XML-GT'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_GT();
                break;

            case ('US-CITICONNECT-XML-PR'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_PR();
                break;

            case ('US-CITICONNECT-XML-AR'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_AR();
                break;

            case ('US-CITICONNECT-XML-CL'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_CL();
                break;

            case ('US-CITICONNECT-XML-CO'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_CO();
                break;

            case ('US-CITICONNECT-XML-PE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_PE();
                break;

            case ('US-CITICONNECT-XML-CN'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_CN();
                break;

            case ('US-CITICONNECT-XML-CA'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_CA();
                break;

            case ('US-CITICONNECT-XML-US'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_US();
                break;

            case ('US-CITICONNECT-XML-DE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_DE();
                break;

            case ('US-CITICONNECT-XML-GB'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_GB();
                break;

            case ('US-CITICONNECT-XML-NZ'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_NZ();
                break;

            case ('US-CITICONNECT-XML-TW'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_TW();
                break;

            case ('US-CITICONNECT-XML-JO'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_JO();
                break;

            case ('US-CITICONNECT-XML-KR'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_KR();
                break;

            case ('US-CITICONNECT-XML-AE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_AE();
                break;

            case ('US-CITICONNECT-XML-MX'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_MX();
                break;

            case ('US-CITICONNECT-XML-AU'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_AU();
                break;

            case ('US-CITICONNECT-XML-BR'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_BR();
                break;

            case ('US-CITICONNECT-XML-CZ'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_CZ();
                break;

            case ('US-CITICONNECT-XML-HK'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_HK();
                break;

            case ('US-CITICONNECT-XML-MO'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_MO();
                break;

            case ('US-CITICONNECT-XML-HU'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_HU();
                break;

            case ('US-CITICONNECT-XML-HN'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_HN();
                break;

            case ('US-CITICONNECT-XML-IN'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_IN();
                break;

            case ('US-CITICONNECT-XML-ID'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_ID();
                break;

            case ('US-CITICONNECT-XML-JP'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_JP();
                break;

            case ('US-CITICONNECT-XML-MY'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_MY();
                break;

            case ('US-CITICONNECT-XML-NL'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_NL();
                break;

            case ('US-CITICONNECT-XML-PA'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_PA();
                break;

            case ('US-CITICONNECT-XML-PH'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_PH();
                break;

            case ('US-CITICONNECT-XML-PL'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_PL();
                break;

            case ('US-CITICONNECT-XML-RO'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_RO();
                break;

            case ('US-CITICONNECT-XML-RU'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_RU();
                break;

            case ('US-CITICONNECT-XML-SG'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_SG();
                break;

            case ('US-CITICONNECT-WL-XML-AG'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AG();
                break;

            case ('US-CITICONNECT-WL-XML-MO'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MO();
                break;

            case ('US-CITICONNECT-WL-XML-FJ'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_FJ();
                break;

            case ('US-CITICONNECT-WL-XML-BO'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BO();
                break;

            case ('US-CITICONNECT-XML-SK'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_SK();
                break;

            case ('US-CITICONNECT-XML-TH'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_TH();
                break;

            case ('US-CITICONNECT-XML-TR'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_TR();
                break;

            case ('US-CITICONNECT-XML-UA'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_UA();
                break;

            case ('US-CITICONNECT-XML-UY'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_UY();
                break;

            case ('US-CITICONNECT-XML-VE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_VE();
                break;

            case ('US-CITICONNECT-XML-ZA'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_ZA();
                break;

            case ('US-CITICONNECT-WL-XML-AU'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AU();
                break;

            case ('US-CITICONNECT-WL-XML-CA'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CA();
                break;

            case ('US-CITICONNECT-WL-XML-SG'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SG();
                break;

            case ('US-CITICONNECT-WL-XML-GB'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GB();
                break;

            case ('US-CITICONNECT-WL-XML-US'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_US();
                break;

            case ('US-CITICONNECT-WL-XML-AL'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AL();
                break;

            case ('US-CITICONNECT-WL-XML-DZ'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_DZ();
                break;

            case ('US-CITICONNECT-WL-XML-AO'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AO();
                break;

            case ('US-CITICONNECT-WL-XML-AT'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AT();
                break;

            case ('US-CITICONNECT-WL-XML-BS'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BS();
                break;

            case ('US-CITICONNECT-WL-XML-BH'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BH();
                break;

            case ('US-CITICONNECT-WL-XML-BD'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BD();
                break;

            case ('US-CITICONNECT-WL-XML-BY'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BY();
                break;

            case ('US-CITICONNECT-WL-XML-BE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BE();
                break;

            case ('US-CITICONNECT-WL-XML-BJ'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BJ();
                break;

            case ('US-CITICONNECT-WL-XML-BW'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BW();
                break;

            case ('US-CITICONNECT-WL-XML-BR'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BR();
                break;

            case ('US-CITICONNECT-WL-XML-BN'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BN();
                break;

            case ('US-CITICONNECT-WL-XML-BG'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BG();
                break;

            case ('US-CITICONNECT-WL-XML-BF'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BF();
                break;

            case ('US-CITICONNECT-WL-XML-KH'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_KH();
                break;

            case ('US-CITICONNECT-WL-XML-CM'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CM();
                break;

            case ('US-CITICONNECT-WL-XML-TD'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TD();
                break;

            case ('US-CITICONNECT-WL-XML-CL'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CL();
                break;

            case ('US-CITICONNECT-WL-XML-CN'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CN();
                break;

            case ('US-CITICONNECT-WL-XML-CO'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CO();
                break;

            case ('US-CITICONNECT-WL-XML-CD'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CD();
                break;

            case ('US-CITICONNECT-WL-XML-CR'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CR();
                break;

            case ('US-CITICONNECT-WL-XML-CI'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CI();
                break;

            case ('US-CITICONNECT-WL-XML-HR'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_HR();
                break;

            case ('US-CITICONNECT-WL-XML-CY'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CY();
                break;

            case ('US-CITICONNECT-WL-XML-CZ'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CZ();
                break;

            case ('US-CITICONNECT-WL-XML-DK'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_DK();
                break;

            case ('US-CITICONNECT-WL-XML-EG'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_EG();
                break;

            case ('US-CITICONNECT-WL-XML-EE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_EE();
                break;

            case ('US-CITICONNECT-WL-XML-ET'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ET();
                break;

            case ('US-CITICONNECT-WL-XML-FI'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_FI();
                break;

            case ('US-CITICONNECT-WL-XML-FR'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_FR();
                break;

            case ('US-CITICONNECT-WL-XML-GA'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GA();
                break;

            case ('US-CITICONNECT-WL-XML-GE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GE();
                break;

            case ('US-CITICONNECT-WL-XML-DE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_DE();
                break;

            case ('US-CITICONNECT-WL-XML-GH'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GH();
                break;

            case ('US-CITICONNECT-WL-XML-GR'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GR();
                break;

            case ('US-CITICONNECT-WL-XML-GT'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GT();
                break;

            case ('US-CITICONNECT-WL-XML-GW'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GW();
                break;

            case ('US-CITICONNECT-WL-XML-GY'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GY();
                break;

            case ('US-CITICONNECT-WL-XML-HT'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_HT();
                break;

            case ('US-CITICONNECT-WL-XML-HK'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_HK();
                break;

            case ('US-CITICONNECT-WL-XML-HU'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_HU();
                break;

            case ('US-CITICONNECT-WL-XML-IN'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_IN();
                break;

            case ('US-CITICONNECT-WL-XML-ID'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ID();
                break;

            case ('US-CITICONNECT-WL-XML-IL'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_IL();
                break;

            case ('US-CITICONNECT-WL-XML-IT'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_IT();
                break;

            case ('US-CITICONNECT-WL-XML-IS'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_IS();
                break;

            case ('US-CITICONNECT-WL-XML-JP'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_JP();
                break;

            case ('US-CITICONNECT-WL-XML-JO'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_JO();
                break;

            case ('US-CITICONNECT-WL-XML-KZ'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_KZ();
                break;

            case ('US-CITICONNECT-WL-XML-KE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_KE();
                break;

            case ('US-CITICONNECT-WL-XML-KM'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_KM();
                break;

            case ('US-CITICONNECT-WL-XML-GM'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GM();
                break;

            case ('US-CITICONNECT-WL-XML-GN'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GN();
                break;

            case ('US-CITICONNECT-WL-XML-KW'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_KW();
                break;

            case ('US-CITICONNECT-WL-XML-LV'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LV();
                break;

            case ('US-CITICONNECT-WL-XML-LB'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LB();
                break;

            case ('US-CITICONNECT-WL-XML-LU'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LU();
                break;

            case ('US-CITICONNECT-WL-XML-MY'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MY();
                break;

            case ('US-CITICONNECT-WL-XML-MT'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MT();
                break;

            case ('US-CITICONNECT-WL-XML-MX'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MX();
                break;

            case ('US-CITICONNECT-WL-XML-MD'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MD();
                break;

            case ('US-CITICONNECT-WL-XML-MA'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MA();
                break;

            case ('US-CITICONNECT-WL-XML-MZ'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MZ();
                break;

            case ('US-CITICONNECT-WL-XML-NA'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NA();
                break;

            case ('US-CITICONNECT-WL-XML-NL'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NL();
                break;

            case ('US-CITICONNECT-WL-XML-NZ'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NZ();
                break;

            case ('US-CITICONNECT-WL-XML-NE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NE();
                break;

            case ('US-CITICONNECT-WL-XML-NG'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NG();
                break;

            case ('US-CITICONNECT-WL-XML-NO'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NO();
                break;

            case ('US-CITICONNECT-WL-XML-OM'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_OM();
                break;

            case ('US-CITICONNECT-WL-XML-PK'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PK();
                break;

            case ('US-CITICONNECT-WL-XML-PG'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PG();
                break;

            case ('US-CITICONNECT-WL-XML-PE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PE();
                break;

            case ('US-CITICONNECT-WL-XML-PH'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PH();
                break;

            case ('US-CITICONNECT-WL-XML-PL'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PL();
                break;

            case ('US-CITICONNECT-WL-XML-PT'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PT();
                break;

            case ('US-CITICONNECT-WL-XML-QA'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_QA();
                break;

            case ('US-CITICONNECT-WL-XML-IE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_IE();
                break;

            case ('US-CITICONNECT-WL-XML-RO'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_RO();
                break;

            case ('US-CITICONNECT-WL-XML-RU'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_RU();
                break;

            case ('US-CITICONNECT-WL-XML-SA'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SA();
                break;

            case ('US-CITICONNECT-WL-XML-SK'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SK();
                break;

            case ('US-CITICONNECT-WL-XML-ZA'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ZA();
                break;

            case ('US-CITICONNECT-WL-XML-KR'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_KR();
                break;

            case ('US-CITICONNECT-WL-XML-ES'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ES();
                break;

            case ('US-CITICONNECT-WL-XML-LK'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LK();
                break;

            case ('US-CITICONNECT-WL-XML-SE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SE();
                break;

            case ('US-CITICONNECT-WL-XML-CH'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CH();
                break;

            case ('US-CITICONNECT-WL-XML-TW'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TW();
                break;

            case ('US-CITICONNECT-WL-XML-TZ'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TZ();
                break;

            case ('US-CITICONNECT-WL-XML-TH'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TH();
                break;

            case ('US-CITICONNECT-WL-XML-TG'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TG();
                break;

            case ('US-CITICONNECT-WL-XML-TN'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TN();
                break;

            case ('US-CITICONNECT-WL-XML-TR'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TR();
                break;

            case ('US-CITICONNECT-WL-XML-UG'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_UG();
                break;

            case ('US-CITICONNECT-WL-XML-AE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AE();
                break;

            case ('US-CITICONNECT-WL-XML-VN'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_VN();
                break;

            case ('US-CITICONNECT-WL-XML-ZM'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ZM();
                break;

            case ('US-CITICONNECT-WL-XML-AZ'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AZ();
                break;

            case ('US-CITICONNECT-WL-XML-BM'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BM();
                break;

            case ('US-CITICONNECT-WL-XML-DO'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_DO();
                break;

            case ('US-CITICONNECT-WL-XML-HN'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_HN();
                break;

            case ('US-CITICONNECT-WL-XML-LA'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LA();
                break;

            case ('US-CITICONNECT-WL-XML-LI'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LI();
                break;

            case ('US-CITICONNECT-WL-XML-LT'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LT();
                break;

            case ('US-CITICONNECT-WL-XML-MM'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MM();
                break;

            case ('US-CITICONNECT-WL-XML-MN'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MN();
                break;

            case ('US-CITICONNECT-WL-XML-MR'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MR();
                break;

            case ('US-CITICONNECT-WL-XML-MU'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MU();
                break;

            case ('US-CITICONNECT-WL-XML-MW'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MW();
                break;

            case ('US-CITICONNECT-WL-XML-RW'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_RW();
                break;

            case ('US-CITICONNECT-WL-XML-SN'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SN();
                break;

            case ('US-CITICONNECT-WL-XML-SI'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SI();
                break;

            case ('US-CITICONNECT-WL-XML-SZ'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SZ();
                break;

            case ('US-CITICONNECT-WL-XML-TT'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TT();
                break;

            case ('US-CITICONNECT-WL-XML-UY'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_UY();
                break;

            case ('US-CITICONNECT-WL-XML-NP'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NP();
                break;

            case ('US-CITICONNECT-WL-XML-RS'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_RS();
                break;

            case ('US-CITICONNECT-WL-XML-SC'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SC();
                break;

            case ('US-CITICONNECT-WL-XML-PY'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PY();
                break;

            case ('US-CITICONNECT-WL-XML-UZ'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_UZ();
                break;

            case ('US-CITICONNECT-WL-XML-MC'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MC();
                break;

            case ('US-CITICONNECT-WL-XML-AM'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AM();
                break;

            case ('US-CITICONNECT-WL-XML-ME'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ME();
                break;

            case ('US-CITICONNECT-XML-TN'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_TN();
                break;

            case ('US-CITICONNECT-XML-PY'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_PY();
                break;

            case ('US-CITICONNECT-XML-IL'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_IL();
                break;

            case ('US-CITICONNECT-WL-PPW-XML'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_PPW_XML();
                break;

            case ('US-CITICONNECT-WL-XML-MK'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MK();
                break;

            case ('US-CITICONNECT-WL-XML-ML'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ML();
                break;

            case ('US-CITICONNECT-WL-XML-NI'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NI();
                break;

            case ('US-CITICONNECT-WL-XML-MG'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MG();
                break;

            case ('US-CITICONNECT-XML-VN'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_XML_VN();
                break;

            case ('US-CITICONNECT-WL-XML-MV'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MV();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_EC</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_EC()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','DFT-441','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','BKT-440','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','CHK-468','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','DFT-441','BenBrnchId','Beneficiary Branch Id',1,'','',0,'0001','XXXXXXXX','PmtInf > CdtTrfTxInf > CdtrAgt > BrnchId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','DFT-441','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','BKT-440','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','CHK-468','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','DFT-441','BenBankRC','Beneficiary bank routing code',0,'BenBankEC441','BANCO AMAZONAS',1,'','','PmtInf > CdtTrfTxInf > CdtrAgt > FinInstnId > ClrSysMmbId > MmbId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','BKT-440','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','DFT-441','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','CBFT-442','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','BKT-440','DocTypeCd','Document Type code',0,'DocTypeEC440','SIMPLE',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','DFT-441','DocTypeCd','Document Type code',0,'DocTypeEC441','SIMPLE',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','CHK-468','DocTypeCd','Document Type code',0,'DocTypeEC468','SIMPLE',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','BKT-440','DestBrnch','Destination branch',0,'DestBrnchEC','Quito',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','DFT-441','DestBrnch','Destination branch',0,'DestBrnchEC','Quito',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','CHK-468','DestBrnch','Destination branch',0,'DestBrnchEC','Quito',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','BKT-440','SvcLvlCd','Service level code',0,'ScvCd','Book Transaction',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','DFT-441','SvcLvlCd','Service level code',0,'ScvCd','Non-urgent Payment',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','CBFT-442','SvcLvlCd','Service level code',0,'ScvCd','Urgent Payment',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','CHK-468','Chqtp','Cheque Type',1,'','',0,'CCHQ','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','BKT-440','LclInstrm','Local Instrument code',1,'','',0,'CITI440','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','DFT-441','LclInstrm','Local Instrument code',1,'','',0,'CITI441','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','CBFT-442','LclInstrm','Local Instrument code',1,'','',0,'CITI442','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','CHK-468','LclInstrm','Local Instrument code',1,'','',0,'CITI468','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','CBFT-442','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-EC','CBFT-442','RmtOvr','Remittance information override',0,'RmtOvr','ISD:105',0,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_CR</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_CR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','DFT-441','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','BKT-440','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','CHK-460','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','CHK-462','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','DFT-441','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','BKT-440','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','CHK-462','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','CHK-460','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','DFT-441','BenBrnchId','Beneficiary Branch Id',1,'','',0,'0001','XXXXXXXX','PmtInf > CdtTrfTxInf > CdtrAgt > BrnchId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','DFT-441','BenBankRC','Beneficiary bank routing code',0,'BenBankCR441','Banco Central',1,'','','PmtInf > CdtTrfTxInf > CdtrAgt > FinInstnId > ClrSysMmbId > MmbId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','BKT-440','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','DFT-441','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','CBFT-442','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','CBFT-442','RmtOvr','Remittance information override',1,'','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','DFT-441','DocTypeCd','Document Type code',0,'DocTypeCR','Default',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','BKT-440','DestBrnch','Destination branch',0,'DestBrnchCR','Citibank',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','DFT-441','DestBrnch','Destination branch',0,'DestBrnchCR','Citibank',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','CHK-460','DestBrnch','Destination branch',0,'DestBrnchCR','Citibank',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','CHK-462','DestBrnch','Destination branch',0,'DestBrnchCR','Citibank',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','BKT-440','SvcLvlCd','Service level code',0,'ScvCd','Book Transaction',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','DFT-441','SvcLvlCd','Service level code',0,'ScvCd','Non-urgent Payment',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','CBFT-442','SvcLvlCd','Service level code',0,'ScvCd','Urgent Payment',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','CHK-460','Chqtp','Cheque Type',1,'','',0,'','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','CHK-462','Chqtp','Cheque Type',1,'','',0,'','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','BKT-440','LclInstrm','Local Instrument code',1,'','',0,'CITI440','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','DFT-441','LclInstrm','Local Instrument code',1,'','',0,'CITI441','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','CBFT-442','LclInstrm','Local Instrument code',1,'','',0,'CITI442','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','CHK-460','LclInstrm','Local Instrument code',1,'','',0,'CITI468','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','CHK-462','LclInstrm','Local Instrument code',1,'','',0,'CITI468','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CR','CBFT-442','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_DO</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_DO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','DFT-441','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','BKT-440','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','CHK-465','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','DFT-441','BenBrnchId','Beneficiary Branch Id',1,'','',0,'0001','XXXXXXXX','PmtInf > CdtTrfTxInf > CdtrAgt > BrnchId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','DFT-441','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','BKT-440','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','CHK-465','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','DFT-441','BenBankRC','Beneficiary bank routing code',0,'BenBankDO441','Banco Popular',1,'','','PmtInf > CdtTrfTxInf > CdtrAgt > FinInstnId > ClrSysMmbId > MmbId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','BKT-440','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','DFT-441','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','CBFT-442','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','CBFT-442','RmtOvr','Remittance information override',1,'','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','DFT-441','DocTypeCd','Document Type code',0,'DocTypeDO441','Automated Payroll',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','BKT-440','DestBrnch','Destination branch',0,'DestBrnchDO','JOHN F. KENNEDY',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','DFT-441','DestBrnch','Destination branch',0,'DestBrnchDO','JOHN F. KENNEDY',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','CHK-465','DestBrnch','Destination branch',0,'DestBrnchDO','JOHN F. KENNEDY',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','BKT-440','SvcLvlCd','Service level code',0,'ScvCd','Book Transaction',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','DFT-441','SvcLvlCd','Service level code',0,'ScvCd','Non-urgent Payment',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','CBFT-442','SvcLvlCd','Service level code',0,'ScvCd','Urgent Payment',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','CHK-465','Chqtp','Cheque Type',1,'','',0,'CCHQ','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','BKT-440','LclInstrm','Local Instrument code',1,'','',0,'CITI440','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','DFT-441','LclInstrm','Local Instrument code',1,'','',0,'CITI441','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','CBFT-442','LclInstrm','Local Instrument code',1,'','',0,'CITI442','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','CHK-465','LclInstrm','Local Instrument code',1,'','',0,'CITI465','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DO','CBFT-442','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_SV</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_SV()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','DFT-441','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','BKT-440','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','CHK-469','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','DFT-441','BenBrnchId','Beneficiary Branch Id',1,'','',0,'0001','XXXXXXXX','PmtInf > CdtTrfTxInf > CdtrAgt > BrnchId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','DFT-441','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','BKT-440','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','CHK-469','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','DFT-441','BenBankRC','Beneficiary bank routing code',0,'BenBankSV441','CITIBANK N.A.',1,'','','PmtInf > CdtTrfTxInf > CdtrAgt > FinInstnId > ClrSysMmbId > MmbId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','BKT-440','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','DFT-441','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','CBFT-442','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','CBFT-442','RmtOvr','Remittance information override',1,'','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','BKT-440','DocTypeCd','Document Type code',0,'DocTypeSV440','Supplier',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','DFT-441','DocTypeCd','Document Type code',0,'DocTypeSV441','Supplier',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','CHK-469','DocTypeCd','Document Type code',0,'DocTypeSV469','Supplier',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','BKT-440','DestBrnch','Destination branch',0,'DestBrnchSV','Citibank',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','DFT-441','DestBrnch','Destination branch',0,'DestBrnchSV','Citibank',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','CHK-469','DestBrnch','Destination branch',0,'DestBrnchSV','Citibank',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','BKT-440','SvcLvlCd','Service level code',0,'ScvCd','Book Transaction',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','DFT-441','SvcLvlCd','Service level code',0,'ScvCd','Non-urgent Payment',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','CBFT-442','SvcLvlCd','Service level code',0,'ScvCd','Urgent Payment',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','CHK-469','Chqtp','Cheque Type',1,'','',0,'','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','BKT-440','LclInstrm','Local Instrument code',1,'','',0,'CITI440','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','DFT-441','LclInstrm','Local Instrument code',1,'','',0,'CITI441','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','CBFT-442','LclInstrm','Local Instrument code',1,'','',0,'CITI442','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','CHK-469','LclInstrm','Local Instrument code',1,'','',0,'CITI469','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SV','CBFT-442','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_GT</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_GT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','DFT-441','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','BKT-440','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-470','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-471','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-472','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-473','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','DFT-441','BenBrnchId','Beneficiary Branch Id',1,'','',0,'0001','XXXXXXXX','PmtInf > CdtTrfTxInf > CdtrAgt > BrnchId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','DFT-441','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','BKT-440','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-470','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-471','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-472','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-473','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','DFT-441','BenBankRC','Beneficiary bank routing code',0,'BenBankGT441','BANCO DE GUATEMALA',1,'','','PmtInf > CdtTrfTxInf > CdtrAgt > FinInstnId > ClrSysMmbId > MmbId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','BKT-440','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','DFT-441','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CBFT-442','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CBFT-442','RmtOvr','Remittance information override',1,'','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','DFT-441','DocTypeCd','Document Type code',0,'DocTypeGT441','Otros-Others',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','BKT-440','DestBrnch','Destination branch',0,'DestBrnchGT','Casa Central',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','DFT-441','DestBrnch','Destination branch',0,'DestBrnchGT','Casa Central',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-470','DestBrnch','Destination branch',0,'DestBrnchGT','Casa Central',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-471','DestBrnch','Destination branch',0,'DestBrnchGT','Casa Central',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-472','DestBrnch','Destination branch',0,'DestBrnchGT','Casa Central',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-473','DestBrnch','Destination branch',0,'DestBrnchGT','Casa Central',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','BKT-440','SvcLvlCd','Service level code',0,'ScvCd','Book Transaction',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','DFT-441','SvcLvlCd','Service level code',0,'ScvCd','Non-urgent Payment',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CBFT-442','SvcLvlCd','Service level code',0,'ScvCd','Urgent Payment',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-470','Chqtp','Cheque Type',1,'','',0,'','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-471','Chqtp','Cheque Type',1,'','',0,'CCHQ','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-472','Chqtp','Cheque Type',1,'','',0,'','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-473','Chqtp','Cheque Type',1,'','',0,'CCHQ','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','BKT-440','LclInstrm','Local Instrument code',1,'','',0,'CITI440','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','DFT-441','LclInstrm','Local Instrument code',1,'','',0,'CITI441','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CBFT-442','LclInstrm','Local Instrument code',1,'','',0,'CITI442','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-470','LclInstrm','Local Instrument code',1,'','',0,'CITI470','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-471','LclInstrm','Local Instrument code',1,'','',0,'CITI471','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-472','LclInstrm','Local Instrument code',1,'','',0,'CITI472','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CHK-473','LclInstrm','Local Instrument code',1,'','',0,'CITI473','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GT','CBFT-442','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_PR</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_PR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','CHK-487','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','CHK-488','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','CHK-487','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','CHK-488','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','CCD','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','PPD','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','FT-607','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','CHK-487','DocTypeCd','Document Type code',0,'DocTypePR','default',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','CHK-487','DestBrnch','Destination branch',0,'DestBrnchPR','Special/Custom Handling',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','CHK-488','DestBrnch','Destination branch',0,'DestBrnchPR','Special/Custom Handling',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','CCD','SvcLvlCd','Service level code',0,'ScvCd','Non-urgent Payment',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','PPD','SvcLvlCd','Service level code',0,'ScvCd','Non-urgent Payment',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','FT-607','SvcLvlCd','Service level code',0,'ScvCd','Urgent Payment',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','CHK-487','Chqtp','Cheque Type',1,'','',0,'CCHQ','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','CCD','LclInstrm','Local Instrument code',1,'','',0,'CITI490','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','PPD','LclInstrm','Local Instrument code',1,'','',0,'CITI497','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','PPD','RmtInf','Remittance information',0,'RmtInf','/NAAL/OTHER',0,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','FT-607','LclInstrm','Local Instrument code',1,'','',0,'CITI607','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','CHK-487','LclInstrm','Local Instrument code',1,'','',0,'CITI487','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PR','CHK-488','LclInstrm','Local Instrument code',1,'','',0,'CITI488','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_AR</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_AR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','BKT-440','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','DFT-441','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','CHK-443','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','CHK-445','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','DFT-441','BenBrnchId','Beneficiary Branch Id',1,'','',1,'0001','XXXXXXXX','PmtInf > CdtTrfTxInf > CdtrAgt > BrnchId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','DFT-441','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','BKT-440','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','CHK-443','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','CHK-445','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','DFT-441','BenBankRC','Beneficiary bank routing code',0,'BenBankAR441','AB AMRO BANK N.V.',1,'','','PmtInf > CdtTrfTxInf > CdtrAgt > FinInstnId > ClrSysMmbId > MmbId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','BKT-440','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','DFT-441','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','BKT-440','DocTypeCd','Document Type code',0,'DocTypeAR440','Default',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','DFT-441','DocTypeCd','Document Type code',0,'DocTypeAR441','Salary payment through COELSA',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','BKT-440','DestBrnch','Destination branch',0,'DestBrnchAR','CASA CENTRAL',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','DFT-441','DestBrnch','Destination branch',0,'DestBrnchAR','CASA CENTRAL',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','CHK-443','DestBrnch','Destination branch',0,'DestBrnchAR','CASA CENTRAL',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','CHK-445','DestBrnch','Destination branch',0,'DestBrnchAR','CASA CENTRAL',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','BKT-440','SvcLvlCd','Service level code',0,'ScvCd','Book Transaction',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','DFT-441','SvcLvlCd','Service level code',0,'ScvCd','Non-urgent Payment',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','CHK-443','Chqtp','Cheque Type',1,'','',0,'CCHQ','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','CHK-445','Chqtp','Cheque Type',1,'','',0,'CCHQ','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','BKT-440','LclInstrm','Local Instrument code',1,'','',0,'CITI440','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','DFT-441','LclInstrm','Local Instrument code',1,'','',0,'CITI441','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','CHK-443','LclInstrm','Local Instrument code',1,'','',0,'CITI443','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','CHK-445','LclInstrm','Local Instrument code',1,'','',0,'CITI445','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','BKT-440','ARState','Beneficiary State',0,'ARState','CAPITAL FEDERAL',1,'','','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','DFT-441','ARState','Beneficiary State',0,'ARState','CAPITAL FEDERAL',1,'','','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','CHK-443','ARState','Beneficiary State',0,'ARState','CAPITAL FEDERAL',1,'','','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','CHK-445','ARState','Beneficiary State',0,'ARState','CAPITAL FEDERAL',1,'','','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_CL</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_CL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','DFT-441','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','BKT-440','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','CHK-455','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','DFT-441','BenBrnchId','Beneficiary Branch Id',1,'','',0,'0001','XXXXXXXX','PmtInf > CdtTrfTxInf > CdtrAgt > BrnchId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','DFT-441','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','BKT-440','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','CHK-455','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','DFT-441','BenBankRC','Beneficiary bank routing code',0,'BenBankCL441','BCO DE CHILE',1,'','','PmtInf > CdtTrfTxInf > CdtrAgt > FinInstnId > ClrSysMmbId > MmbId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','BKT-440','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','DFT-441','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','CBFT-442','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','BKT-440','DocTypeCd','Document Type code',0,'DocTypeCL440','Supplier',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','DFT-441','DocTypeCd','Document Type code',0,'DocTypeCL441','Supplier',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','CHK-455','DocTypeCd','Document Type code',0,'DocTypeCL455','Supplier',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','BKT-440','DestBrnch','Destination branch',0,'DestBrnchCL','CITI AHUMADA',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','DFT-441','DestBrnch','Destination branch',0,'DestBrnchCL','CITI AHUMADA',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','CHK-455','DestBrnch','Destination branch',0,'DestBrnchCL','CITI AHUMADA',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','BKT-440','SvcLvlCd','Service level code',0,'ScvCd','Book Transaction',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','DFT-441','SvcLvlCd','Service level code',0,'ScvCd','Non-urgent Payment',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','CBFT-442','SvcLvlCd','Service level code',0,'ScvCd','Urgent Payment',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','CHK-455','Chqtp','Cheque Type',1,'','',0,'CCHQ','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','BKT-440','LclInstrm','Local Instrument code',1,'','',0,'CITI440','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','DFT-441','LclInstrm','Local Instrument code',1,'','',0,'CITI441','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','CBFT-442','LclInstrm','Local Instrument code',1,'','',0,'CITI442','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','CHK-455','LclInstrm','Local Instrument code',1,'','',0,'CITI455','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','CBFT-442','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','CBFT-442','RmtOvr','Remittance information override',1,'','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','CBFT-442','CenBankCode','Central Bank Code',0,'CenBankCL442','Communication-Construction-Transport',1,'','','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Inf']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_CO</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_CO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','DFT-441','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','BKT-440','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','CHK-458','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','DFT-441','BenBrnchId','Beneficiary Branch Id',1,'','',0,'0001','XXXXXXXX','PmtInf > CdtTrfTxInf > CdtrAgt > BrnchId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','DFT-441','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','BKT-440','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','CHK-458','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','DFT-441','BenBankRC','Beneficiary bank routing code',0,'BenBankCO441','BANCO REPUBLICA',1,'','','PmtInf > CdtTrfTxInf > CdtrAgt > FinInstnId > ClrSysMmbId > MmbId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','BKT-440','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','DFT-441','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','BKT-440','DocTypeCd','Document Type code',0,'DocTypeCO440','Nómina',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','DFT-441','DocTypeCd','Document Type code',0,'DocTypeCO441','Nómina',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','BKT-440','DestBrnch','Destination branch',0,'DestBrnchCO','Bogotá Chico',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','DFT-441','DestBrnch','Destination branch',0,'DestBrnchCO','Bogotá Chico',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','CHK-458','DestBrnch','Destination branch',0,'DestBrnchCO','Bogotá Chico',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','BKT-440','SvcLvlCd','Service level code',0,'ScvCd','Book Transaction',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','DFT-441','SvcLvlCd','Service level code',0,'ScvCd','Non-urgent Payment',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','BKT-440','LclInstrm','Local Instrument code',1,'','',0,'CITI440','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','DFT-441','LclInstrm','Local Instrument code',1,'','',0,'CITI441','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CO','CHK-458','LclInstrm','Local Instrument code',1,'','',0,'CITI458','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_PE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_PE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','DFT-441','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','BKT-440','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','CHK-484','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','CHK-486','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','DFT-441','BenBrnchId','Beneficiary Branch Id',1,'','',0,'0001','XXXXXXXX','PmtInf > CdtTrfTxInf > CdtrAgt > BrnchId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','DFT-441','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','BKT-440','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','CHK-484','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','CHK-486','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','DFT-441','BenBankRC','Beneficiary bank routing code',0,'BenBankPE441','BANCO DE CREDITO',1,'','','PmtInf > CdtTrfTxInf > CdtrAgt > FinInstnId > ClrSysMmbId > MmbId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','BKT-440','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','DFT-441','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','CBFT-442','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','BKT-440','DocTypeCd','Document Type code',0,'DocTypePE440','PROVEEDORES (CCE)',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','DFT-441','DocTypeCd','Document Type code',0,'DocTypePE441','PROVEEDORES (CCE)',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','CHK-484','DocTypeCd','Document Type code',0,'DocTypePE484','TRANSF. ORDINARIAS (CCE) 01',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','BKT-440','DestBrnch','Destination branch',0,'DestBrnchPE','OFICINA PRINCIPAL',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','DFT-441','DestBrnch','Destination branch',0,'DestBrnchPE','OFICINA PRINCIPAL',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','CHK-484','DestBrnch','Destination branch',0,'DestBrnchPE','ENTREGA EN AGENCIA 004',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','CHK-486','DestBrnch','Destination branch',0,'DestBrnchPE','ENTREGA EN AGENCIA 004',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','BKT-440','SvcLvlCd','Service level code',0,'ScvCd','Book Transaction',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','DFT-441','SvcLvlCd','Service level code',0,'ScvCd','Non-urgent Payment',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','CBFT-442','SvcLvlCd','Service level code',0,'ScvCd','Urgent Payment',1,'','','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','BKT-440','LclInstrm','Local Instrument code',1,'','',0,'CITI440','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','DFT-441','LclInstrm','Local Instrument code',1,'','',0,'CITI441','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','CBFT-442','LclInstrm','Local Instrument code',1,'','',0,'CITI442','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','CHK-484','LclInstrm','Local Instrument code',1,'','',0,'CITI484','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','CHK-486','LclInstrm','Local Instrument code',1,'','',0,'CITI486','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','CBFT-442','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PE','CBFT-442','RmtOvr','Remittance information override',1,'','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_CN</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_CN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','CBFT-392','PurpCodeCNS1','Purpose code for CNS1',0,'PurpCodeCNS1','',0,'','','PmtInf > CdtTrfTxInf > InstrForCdtrAgt > InstrInf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','CBFT-392','PurpCodeCNS2','Purpose code for CNS2',0,'PurpCodeCNS1','',0,'','','PmtInf > CdtTrfTxInf > InstrForCdtrAgt > InstrInf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','PLG-400','Purp','Purpose of transaction',1,'Purp','',0,'','XX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','CHK-402','DlvryMtd','Delivery Method',0,'DlvryMtd','Mailed to beneficiary by Citibank',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','CHK-402','Chqtp','Cheque Type',1,'','',0,'CCHQ','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','CBFT-392','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','CBFT-896','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','CHK-402','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','DFT-391','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','OTC-894','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','PLG-400','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','PRL-401','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','CBFT-392','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','CBFT-896','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','CHK-402','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','DFT-391','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','OTC-894','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','PLG-400','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','PRL-401','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_CA</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_CA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHK-20','DlvryMtd','Delivery Method',0,'DlvryMtd','',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHK20CAMAL','DlvryMtd','Delivery Method',0,'DlvryMtd','',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHK20CAFED','DlvryMtd','Delivery Method',0,'DlvryMtd','',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHKCAFED02','DlvryMtd','Delivery Method',0,'DlvryMtd','',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHKCAFED03','DlvryMtd','Delivery Method',0,'DlvryMtd','',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHK-20','DestBrnch','Destination branch',1,'DestBrnchCA','',0,'','XXXXX','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHK-20','SpclHndlgCode','Special Handling Code',0,'SpclHndlgCode','',0,'','','PmtInf > CdtTrfTxInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHK-20','FormCode','Form Code',1,'FormCode','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHK20CAMAL','SpclHndlgCode','Special Handling Code',0,'SpclHndlgCode','',0,'','','PmtInf > CdtTrfTxInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHK20CAMAL','FormCode','Form Code',1,'FormCode','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHK20CAFED','SpclHndlgCode','Special Handling Code',0,'SpclHndlgCode','',0,'','','PmtInf > CdtTrfTxInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHK20CAFED','FormCode','Form Code',1,'FormCode','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHKCAFED02','SpclHndlgCode','Special Handling Code',0,'SpclHndlgCode','',0,'','','PmtInf > CdtTrfTxInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHKCAFED02','FormCode','Form Code',1,'FormCode','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHKCAFED03','SpclHndlgCode','Special Handling Code',0,'SpclHndlgCode','',0,'','','PmtInf > CdtTrfTxInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHKCAFED03','FormCode','Form Code',1,'FormCode','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Ustrd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','ACH-780','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','BKT-602','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CACH-460','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CBFT-604','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHK-20','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHK20CAFED','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHK20CAMAL','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHKCAFED02','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHKCAFED03','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CPS-706','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','DFT-603','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','ACH-780','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','BKT-602','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CACH-460','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CBFT-604','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHK-20','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHK20CAFED','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHK20CAMAL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHKCAFED02','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CHKCAFED03','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','CPS-706','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','DFT-603','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_US</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_US()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHK-19','SpecHanCodes','Special Handling Codes',1,'SpecHanCodes','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','RltdRmtInf>RmtId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHK-19','AddrLogo','Address Logo',1,'AddrLogo','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','RltdRmtInf>RmtId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHK-19','AdvTempNo','Advice Template Number',1,'AdvTempNo','',0,'TMP01','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','RltdRmtInf>RmtId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHK-19','DlvryMtd','Delivery Method',0,'DlvryMtd','',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHK-19','Chqtp','Cheque Type',1,'ChkType','',0,'BCHQ','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHK-19','DestBrnch','Destination branch',1,'DestBrnchUS','',0,'','XXXXX','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CTX-942','Purp','Entity Assigned Number',1,'Purp','',0,'','XXXXXX','PmtInf > CdtTrfTxInf > Purp > Prtry']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','ACH-CCD','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','ACH-CCP','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','ACH-CTX','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','ACH-PPD','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','ACH-PPP','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','BKT-500','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CCD-502','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CCDP-14','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CDM-950','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHK-19','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHK19CAFED','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHK19CAMAL','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHK19USFED','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHK-585','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHK-950','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHKCAFED02','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHKCAFED03','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHKUSFED02','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHKUSFED03','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CPS-28','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CPS-29','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CTX-17','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CTX-942','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CTX-950','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','FT-499','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','PPD-503','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','USFCP-821','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','WLW-571','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','ACH-CCD','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','ACH-CCP','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','ACH-CTX','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','ACH-PPD','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','ACH-PPP','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','BKT-500','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CCD-502','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CCDP-14','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CDM-950','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHK-19','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHK19CAFED','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHK19CAMAL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHK19USFED','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHK-585','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHK-950','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHKCAFED02','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHKCAFED03','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHKUSFED02','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CHKUSFED03','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CPS-28','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CPS-29','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CTX-17','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CTX-942','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','CTX-950','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','FT-499','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','PPD-503','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','USFCP-821','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','WLW-571','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','FT-499','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        
        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_DE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_DE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DE','SEPA-848','Purp','Purpose of transaction',1,'Purp','',1,'','XXXX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DE','SEPA-939','Purp','Purpose of transaction',1,'Purp','',1,'','XXXX','PmtInf > CdtTrfTxInf > Purp > Prtry']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DE','ACH-SEPA','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DE','CB-WIRE','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DE','SEPA-848','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DE','SEPA-939','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DE','ACH-SEPA','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DE','CB-WIRE','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DE','SEPA-848','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DE','SEPA-939','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_GB</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_GB()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','SEPA-848','Purp','Purpose of transaction',1,'Purp','',1,'','XXXX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','SEPA-939','Purp','Purpose of transaction',1,'Purp','',1,'','XXXX','PmtInf > CdtTrfTxInf > Purp > Prtry']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','ACH-DC','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','ACH-SEPA','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','CB-WIRE','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','CDFT-392','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','SEPA-848','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','SEPA-939','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','SIP-962','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','ACH-DC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','ACH-SEPA','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','CB-WIRE','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','CDFT-392','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','SEPA-848','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','SEPA-939','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','SIP-962','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','CB-WIRE','CentralBankCode','Central Bank Code',1,'CentralBankCode','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > InstrForCdtrAgt > InstrInf']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_NZ</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_NZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-NZ','CHECK-416','DlvryMtd','Delivery Method',0,'DlvryMtd','',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-NZ','BKT-393','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-NZ','CB-392','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-NZ','CHECK-416','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-NZ','DC-417','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-NZ','DOM-391','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-NZ','DOM-391-RT','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-NZ','BKT-393','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-NZ','CB-392','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-NZ','CHECK-416','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-NZ','DC-417','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-NZ','DOM-391','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-NZ','DOM-391-RT','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_TW</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_TW()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TW','CHECK-427','DlvryMtd','Delivery Method',0,'DlvryMtd','',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TW','CB-392','CenBankCode','Central Bank Code',1,'Inf','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Inf']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TW','BKT-393','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TW','CB-392','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TW','CHECK-427','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TW','IBRS-429','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TW','IBRS-430','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TW','BKT-393','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TW','CB-392','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TW','CHECK-427','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TW','IBRS-429','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TW','IBRS-430','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_JO</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_JO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JO','CHECK-815','Chqtp','Cheque Type',1,'ChkType','',0,'BCHQ','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JO','CHECK-815','DlvryMtd','Delivery Method',0,'DlvryMtd','',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JO','ACH-964','Purp','User community specific purpose',1,'Purp','',1,'','XXXX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JO','DFT-555','Purp','User community specific purpose',1,'Purp','',1,'','XXXX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JO','CBFT-574','Purp','User community specific purpose',1,'Purp','',1,'','XXXX','PmtInf > CdtTrfTxInf > Purp > Prtry']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JO','ACH-964','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JO','CBFT-574','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JO','CHECK-815','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JO','DFT-555','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JO','ACH-964','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JO','CBFT-574','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JO','CHECK-815','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JO','DFT-555','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_KR</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_KR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-KR','BKT-393','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-KR','CB-392','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-KR','DOM-391','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-KR','PRL-414','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-KR','BKT-393','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-KR','CB-392','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-KR','DOM-391','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-KR','PRL-414','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_AE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_AE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AE','CHK-804','DlvryMtd','Delivery Method',0,'DlvryMtd','',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AE','CBFT-574','Cd','Transaction Type Code',0,'Cd','',1,'','XXX','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AE','DFT-574','Cd','Transaction Type Code',0,'Cd','',1,'','XXX','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AE','DFT-574','Ustrd-Prefix','Unstructed remittance information Prefix',1,'Ustrd - RmtInfo','',0,'/REF/','XXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AE','CBFT-574','Ustrd-Prefix','Unstructed remittance information Prefix',1,'Ustrd - RmtInfo','',0,'/REF/','XXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);


        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AE','CBFT-574','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AE','CHK-804','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AE','DFT-574','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AE','CBFT-574','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AE','CHK-804','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AE','DFT-574','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_MX</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_MX()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','CHK-496','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','CHK-834','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','BWPMT-835','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','BKT-440','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','DFT-441','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','DIBT-828','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','DPRL-831','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','DPENS-832','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','BKT-833','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','CHK-496','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','CHK-834','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','BWPMT-835','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','BKT-440','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','DFT-441','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','DIBT-828','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','DPRL-831','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','DPENS-832','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','BKT-833','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','CHK-496','Chqtp','Cheque Type',1,'','',0,'CCHQ','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','CHK-834','Chqtp','Cheque Type',1,'','',0,'CCHQ','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','BKT-440','BenBankRC','Beneficiary bank routing code',1,'BenBankMX440','BANAMEX',0,'003','','PmtInf > CdtTrfTxInf > CdtrAgt > FinInstnId > ClrSysMmbId > MmbId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','DFT-441','BenBankRC','Beneficiary bank routing code',0,'BenBankMX441','',0,'','','PmtInf > CdtTrfTxInf > CdtrAgt > FinInstnId > ClrSysMmbId > MmbId']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','BKT-440','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','BKT-833','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','BWPMT-835','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','CBFT-442','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','CBFT-827','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','CHK-496','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','CHK-834','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','DFT-441','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','DIBT-828','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','DPENS-832','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MX','DPRL-831','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_AU</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_AU()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AU','DE-397','Purp','Transaction Type',1,'Purp','',0,'50','XX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AU','BPAY-889','BillerCode','Biller Code',1,'BillerCode','',0,'','XXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > Othr > SchmeNm > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AU','CHK-396','DlvryMtd','Delivery Method',0,'DlvryMtd','',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AU','PRL-398','Purp','Transaction type',1,'Purp','',1,'','XX','PmtInf > CdtTrfTxInf > Purp > Prtry']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AU','BKT-393','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AU','BPAY-889','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AU','CB-392','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AU','CHK-396','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AU','DE-397','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AU','DOM-391','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AU','PRL-398','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AU','BKT-393','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AU','BPAY-889','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AU','CB-392','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AU','CHK-396','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AU','DE-397','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AE','CBFT-574','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AU','DOM-391','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AU','PRL-398','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_BR</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_BR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-BR','BKT-440','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-BR','BKT-440','Purp','Purpose of transaction',1,'Purp','',1,'','XX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-BR','DOM-441','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-BR','DOM-441','Purp','Purpose of transaction',1,'Purp','',1,'','XX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-BR','RT-453','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-BR','RT-453','Purp','Purpose of transaction',1,'Purp','',1,'','XX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-BR','DL-454','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-BR','DL-454','Purp','Purpose of transaction',1,'Purp','',1,'','XX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-BR','TLPAY-451','Purp','Purpose of transaction',1,'Purp','',1,'','XX','PmtInf > CdtTrfTxInf > Purp > Prtry']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-BR','BKT-440','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-BR','DL-454','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-BR','DOM-441','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-BR','RT-453','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-BR','TLPAY-451','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_CZ</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_CZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CZ','CBFT-574','ChrgBr','Charge bearer',0,'ChrgBr','Our',1,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_HK</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_HK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HK','CHECK-405','DlvryMtd','Delivery Method',0,'DlvryMtd','Mailed to beneficiary by Citibank',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HK','CHECK-405','InstrForCdtrAgt','InstructionForCreditorAgent',0,'InstrForCdtrAgt','Traditional Chinese',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HK','ATPAY-403','Purp','Purpose of transaction',1,'Purp','',1,'','XXX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HK','CHK-405','DlvryMtd','Delivery Method',0,'DlvryMtd','',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HK','CB-392','InstrInf','Instruction Information',0,'InstrInf','',0,'','','PmtInf > CdtTrfTxInf > InstrForCdtrAgt > InstrInf']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HK','ATPAY-403','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HK','BKT-393','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HK','CB-392','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HK','CHECK-405','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HK','CHK-405','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HK','DOM-391','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HK','ATPAY-403','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HK','BKT-393','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HK','CB-392','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HK','CHECK-405','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HK','CHK-405','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HK','DOM-391','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_MO</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_MO()
    {
        container   paymSpecFieldsList;

       
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MO','CB-392','InstrInfMO','Instruction Information',0,'InstrInfMO','',0,'','','PmtInf > CdtTrfTxInf > InstrForCdtrAgt > InstrInf']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_HN</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_HN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HN','DOM-441','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HN','DOM-441','Purp','Purpose of transaction',1,'Purp','',1,'','XX','PmtInf > CdtTrfTxInf > Purp > Prtry']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HN','DOM-441','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_HU</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_HU()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-HU','CBFT-574','ChrgBr','Charge bearer',0,'ChrgBr','Our',1,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_ID</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_ID()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-ID','DOM-391','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-ID','LLG-408','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-ID','DOM-391','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-ID','LLG-408','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_IN</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_IN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','CHK-436','Chqtp','Cheque Type',1,'ChkType','',0,'CCHQ','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','CHK-436','DlvryMtd','Delivery Method',0,'DlvryMtd','',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','DD-437','Chqtp','Cheque Type',1,'ChkType','',0,'DRFT','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','DD-437','DlvryMtd','Delivery Method',0,'DlvryMtd','',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','TAX-908','CertId','Certificate Identification',1,'CertId','',1,'','XXXXXX','PmtInf > CdtTrfTxInf > Tax > Rcrd > CertId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','TAX-908','TaxHeadCode','Tax Head Code',1,'TaxHeadCode','',1,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Tax > Rcrd > AddtlInf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','TAX-908','TaxMinorHeadCode','Tax Minor HeadCode',1,'TaxMinorHeadCode','',1,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Tax > Rcrd > AddtlInf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','TAX-927','IECode','IE Code',1,'IECode','',1,'','XXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Tax > Dbtr > TaxId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','TAX-927','PortCode','Port Code',1,'PortCode','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Tax > Rcrd > Ctgy']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','TAX-927','ChallanNumber','Challan Number',1,'ChallanNumber','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Tax > Rcrd > CertId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','TAX-927','BOENumber','BOE Number',1,'BOENumber','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Tax > Rcrd > FrmsCd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','TAX-947','SRINOrTINNumber','SRIN Or TINNumber',1,'SRINOrTINNumber','',0,'','XXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Tax > Dbtr > TaxId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','TAX-947','TaxState','Tax State',1,'TaxState','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Tax > Rcrd > Tp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','TAX-947','VRNOrTRNNumber','VRN Or TRNNumber',1,'VRNOrTRNNumber','',1,'','XXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Tax > Rcrd > CertId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','TAX-947','TextLabelValue','Text Label Value',1,'TextLabelValue','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Tax > Rcrd > FrmsCd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','CDT-862','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','CHK-436','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','DD-437','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','IFT-CB392','PurpCodeIN','Purpose Codes for Indian payments',0,'PurpCodeIN','',0,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','DFT-541','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','DFT-914','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','DOM-540','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','IFT-CB392','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','RTGS-539','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','TAX-908','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','TAX-927','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','TAX-947','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','CHK-436','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','DD-437','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','DOM-540','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','DFT-914','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','RTGS-539','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','IFT-CB392','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','CHK-436','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','DD-437','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','DOM-540','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','DFT-914','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','RTGS-539','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','IFT-CB392','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_JP</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_JP()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JP','BKT-410','Purp','Transaction type',0,'Purp','Furikomi',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JP','WIRE-392','Origin','Origin',1,'Origin','',0,'','XXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Inf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JP','WIRE-392','ShippingLocation','ShippingLocation',1,'ShippingLocation','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Inf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JP','WIRE-392','PurpFunds','Purpose of Funds',1,'PurpFunds','',0,'','XXXX','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Inf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JP','ACH-410','BenAcctTpPrtry','Beneficiary account type',0,'BenAcctTpPrtry','Ordinary savings account',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JP','WIRE-391','BenAcctTpCd','BeneficiaryAccountType',0,'BenAcctTpCd','',1,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Tp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JP','ACH-410','Purp','Purpose of payment',0,'Purp','Furikomi',1,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JP','ACH-410','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JP','BKT-393','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JP','BKT-410','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JP','WIRE-391','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JP','WIRE-392','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_MY</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_MY()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','CHK-415','DlvryMtd','Delivery Method',0,'DlvryMtd','',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','CBFT-392','PaymDetails','Payment Details',0,'PaymDetails','Resident',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','DFT-391','PaymDetails','Payment Details',0,'PaymDetails','Resident',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','GIRO-527','PaymDetails','Payment Details',0,'PaymDetails','Resident',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','CHK-415','PaymDetails','Payment Details',0,'PaymDetails','Resident',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','BKT-393','PaymDetails','Payment Details',0,'PaymDetails','Resident',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','BKT-393','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','CB-392','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','CBFT-392','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','CHK-415','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','DFT-391','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','DOM-391','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','GIRO-527','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','PLG-527','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','BKT-393','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','CB-392','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','CBFT-392','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','CHK-415','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','DFT-391','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','DOM-391','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','GIRO-527','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','PLG-527','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_PA</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_PA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PA','DOM-441','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PA','DOM-441','Purp','Purpose of transaction',1,'Purp','',1,'','XX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PA','CHK-478','Chqtp','Cheque Type',1,'ChkType','',0,'CCHQ','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PA','CHK-478','DestBrnch','Destination branch',1,'DestBrnchPA','',0,'','XXX','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PA','CHK-478','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PA','CHK-478','Purp','Purpose of transaction',1,'Purp','',1,'','XX','PmtInf > CdtTrfTxInf > Purp > Prtry']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PA','DOM-441','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PA','CHK-478','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_PH</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_PH()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PH','CHK-418','DlvryMtd','Delivery Method',0,'DlvryMtd','',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PH','CHK-418','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_PL</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_PL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PL','TAX-592','regnId','RegistrationIdentification',1,'regnId','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Tax > Dbtr > RegnId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PL','TAX-592','Type','Type',1,'Type','',1,'','XXXXX','PmtInf > CdtTrfTxInf > Tax > Rcrd > Tp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PL','TAX-592','FrmsCd','FormsCode',1,'FrmsCd','',1,'','XXXXXXX','PmtInf > CdtTrfTxInf > Tax > Rcrd > FrmsCd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PL','TAX-592','DbtrId','Debtor Id',0,'DbtrId','Taxpayer Id',1,'','','PmtInf > Dbtr > Id > PrvtId > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PL','VAT-984','BenetaxId','Beneficiary Tax Identification Number',1,'BenetaxId','',1,'','XXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Tax > Cdtr > TaxId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PL','VAT-984','AdmstnZn','AdministrationZone',0,'AdmstnZn','',1,'','','PmtInf > CdtTrfTxInf > Tax > AdmstnZn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PL','SEPA-938','Purp','Purpose of transaction',1,'Purp','',1,'','XXXX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PL','CBFT-574','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_RO</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_RO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-RO','DOM-332','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-RO','CBFT-574','ChrgBr','Charge bearer',0,'ChrgBr','Our',1,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_RU</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_RU()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-RU','DOM-548','Purp','Priority Code',0,'Purp','Other payment orders',1,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-RU','DOM-548','Rate','Tax rate',0,'Rate','',1,'','','PmtInf > CdtTrfTxInf > Tax > Rcrd > TaxAmt > Rate']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-RU','DOM-548','AddtlInf','Additional information',0,'AddtlInf','',1,'','','PmtInf > CdtTrfTxInf > Tax > Rcrd > AddtlInf']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_SG</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_SG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','GIRO-421','Purp','Transaction type',0,'Purp','Sundry Credit',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','PRL-422','Purp','Transaction Type',0,'Purp','Salary Credit',0,'','XX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','CHK-423','DlvryMtd','Delivery Method',0,'DlvryMtd','',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','CHK-420','DlvryMtd','Delivery Method',0,'DlvryMtd','',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','BFT-551','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','BKT-393','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','CB-392','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','CHK-420','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','CHK-423','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','DFT-391','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','GIRO-421','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','PRL-422','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','BFT-551','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','BKT-393','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','CB-392','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','CHK-420','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','CHK-423','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','DFT-391','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','GIRO-421','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SG','PRL-422','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AG</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AG','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AG','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AG','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AG','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MO</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MO','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MO','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MO','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MO','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_FJ</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_FJ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FJ','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FJ','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FJ','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FJ','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BO</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BO','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BO','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BO','WIRE-WL','RsnForPmt','Reason for payment',1,'RsnForPmt','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BO','WIRE-WL-RC','RsnForPmt','Reason for payment',1,'RsnForPmt','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MV</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MV()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MV','WIRE-WL','RsnForPmt','Reason for payment',1,'RsnForPmt','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MV','WIRE-WL-RC','RsnForPmt','Reason for payment',1,'RsnForPmt','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_SK</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_SK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SK','SEPA-938','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SK','SEPA-938','Purp','Purpose of transaction',1,'Purp','',1,'','XXXX','PmtInf > CdtTrfTxInf > Purp > Prtry']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SK','SEPA-938','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_TH</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_TH()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TH','PRL-426','Purp','Transaction type',1,'Purp','',0,'SALA','XXXX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TH','ATPAY-424','Mtd','WHT Payor Code',0,'Mtd','Pays tax for only one time',0,'','','PmtInf > CdtTrfTxInf > Tax > Mtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TH','ATPAY-424','FrmsCd','WHT Tax Form',0,'FrmsCd','',0,'','','PmtInf > CdtTrfTxInf > Tax > Rcrd > FrmsCd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TH','ATPAY-424','WHTFormDetails','Transaction type',1,'AddtlInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TH','ATPAY-424','Purp','Transaction type',0,'Purp','Salary Commission Pension(DEFAULT)',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TH','CHK-425','Mtd','WHT Payor Code',0,'Mtd','Pays tax for only one time',0,'','','PmtInf > CdtTrfTxInf > Tax > Mtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TH','CHK-425','FrmsCd','WHT Tax Form',0,'FrmsCd','',0,'','','PmtInf > CdtTrfTxInf > Tax > Rcrd > FrmsCd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TH','CHK-425','WHTFormDetails','Transaction type',1,'AddtlInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TH','CHK-425','Purp','Transaction type',0,'Purp','Salary Commission Pension(DEFAULT)',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TH','CHK-425','DlvryMtd','Delivery Method',0,'DlvryMtd','',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TH','ATPAY-424','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TH','CHK-425','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TH','PRL-426','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TH','ATPAY-424','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TH','CHK-425','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TH','PRL-426','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_TR</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_TR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','BKT-547','TypeOfPaym','Type of Payment',0,'TypeOfPaym','Payment to account',0,'','XX','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Inf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','DOM-555','TypeOfPaym','Type of Payment',0,'TypeOfPaym','Payment to account',0,'','XX','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Inf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','CBFT-574','TypeOfPayment','Type of Payment',0,'TypeOfPayment','Other payments',0,'','XX','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Inf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','SSK-853','PaymPeriod','SSK payment period(MMYYYY)',1,'PaymPeriod','',1,'','XXXXXX','PmtInf > CdtTrfTxInf > InstrForCdtrAgt > InstrInf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','SSK-853','StampDutyAmt','Stamp Duty Amount',1,'StampDutyAmt','',1,'','XXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > InstrForCdtrAgt > InstrInf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','SSK-853','UnemploymentAmt','Unemployment Amount',1,'UnemploymentAmt','',1,'','XXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > InstrForCdtrAgt > InstrInf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','SSK-853','NetpremiumAmt','Net premium Amount',1,'NetpremiumAmt','',1,'','XXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > InstrForCdtrAgt > InstrInf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','DOM-555','Chqtp','Cheque Type',1,'ChkType','',0,'BCHQ','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','DOM-555','Purp','Transaction type',0,'Purp','',0,'','','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','DOM-555','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','DOM-555','AddtlInf','Additional information',0,'AddtlInf','',1,'','','PmtInf > CdtTrfTxInf > Tax > Rcrd > AddtlInf']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','BKT-547','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','CBFT-574','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','DOM-555','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','SSK-853','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','BKT-547','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','CBFT-574','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','DOM-555','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','SSK-853','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_UA</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_UA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UA','DOM-555','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UA','DOM-555','AddtlInf','Additional information',0,'AddtlInf','VAT flag N',1,'','','PmtInf > CdtTrfTxInf > Tax > Rcrd > AddtlInf']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_UY</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_UY()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','DFT-441','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','BKT-440','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CBFT-442','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CHK-493','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CHK-494','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','BKT-440','DocTypeCd','Purpose of transaction',1,'Purp','',1,'','XX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','DFT-441','DocTypeCd','Purpose of transaction',1,'Purp','',1,'','XX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CHK-493','DocTypeCd','Purpose of transaction',1,'Purp','',1,'','XX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CHK-494','DocTypeCd','Purpose of transaction',1,'Purp','',1,'','XX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','BKT-440','BenTaxId','Beneficiary Tax Id',1,'','',1,'','XXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','DFT-441','BenTaxId','Beneficiary Tax Id',1,'','',1,'','XXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CBFT-442','BenTaxId','Beneficiary Tax Id',1,'','',1,'','XXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CHK-493','BenTaxId','Beneficiary Tax Id',1,'','',1,'','XXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CHK-494','BenTaxId','Beneficiary Tax Id',1,'','',1,'','XXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','DFT-441','BenBrnchId','Beneficiary Branch Id',1,'','',0,'0001','XXXXXXXX','PmtInf > CdtTrfTxInf > CdtrAgt > BrnchId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','BKT-440','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','DFT-441','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CBFT-442','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CHK-493','DestBrnch','Destination branch',0,'DestBrnchUY','CASA CENTRAL 000',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CHK-494','DestBrnch','Destination branch',0,'DestBrnchUY','CASA CENTRAL 000',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CHK-493','Chqtp','Cheque Type',0,'ChqType','CustomerCheque',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp > (BCHQ or CCCH or CCHQ)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CHK-494','Chqtp','Cheque Type',0,'ChqType','CustomerCheque',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp > (BCHQ or CCCH or CCHQ)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CHK-493','LclInstrm','Local Instrument code',1,'','',0,'CITI493','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CHK-494','LclInstrm','Local Instrument code',1,'','',0,'CITI494','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','BKT-440','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CBFT-442','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CHK-493','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CHK-494','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','DFT-441','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','BKT-440','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CBFT-442','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CHK-493','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','CHK-494','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','DFT-441','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_VE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_VE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-VE','DOM-441','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-VE','DOM-441','Purp','Purpose of transaction',1,'Purp','',1,'','XX','PmtInf > CdtTrfTxInf > Purp > Prtry']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-VE','DOM-441','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_ZA</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_ZA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-ZA','ACH-809','SvcLvlCd','Service Level Code',1,'SvcLvlCd','',0,'','XXXX','PmtInf > PmtTpInf > SvcLvl > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-ZA','ACH-809','CtgyPurp','Category Purpose',0,'CtgyPurp','Payment to creditors',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-ZA','ACH-809','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-ZA','WIRE-574','BenId','Beneficiary Id',0,'BenId','Not a Bank',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-ZA','WIRE-574','InstrForCdtrAgt','InstructionForCreditorAgent',1,'InstrForCdtrAgt','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > InstrForCdtrAgt > InstrInf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-ZA','WIRE-574','PaymentCtgyCd','Payment Category Code',0,'PaymentCtgyCd','',1,'','XXXXX','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-ZA','WIRE-574','RefNum','Movement Reference Number',1,'RefNum','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Inf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-ZA','WIRE-574','LoanRefNum','Loan Reference Number',1,'LoanRefNum','',0,'','XXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Inf']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-ZA','ACH-809','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-ZA','WIRE-574','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-ZA','ACH-809','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-ZA','WIRE-574','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AU</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AU()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AU','ACH-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AU','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AU','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AU','ACH-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AU','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AU','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AU','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AU','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AU','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AU','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CA</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CA','ACH-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CA','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CA','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CA','ACH-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CA','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CA','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CA','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CA','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CA','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CA','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CA','ACH-WL','TransactionCode','Purpose of payment code',1,'TransactionCode','',1,'','XXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CA','ACH-WL-RC','TransactionCode','Purpose of payment code',1,'TransactionCode','',1,'','XXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SG</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SG','ACH-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SG','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SG','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SG','ACH-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SG','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SG','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SG','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SG','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SG','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SG','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GB</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GB()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GB','ACH-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GB','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GB','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GB','ACH-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GB','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GB','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GB','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GB','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GB','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GB','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_US</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_US()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','WIRE-WL','TAXID','Tax Id',1,'TAXID','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','ACH-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','ACH-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','WIRE-WL-RC','TAXID','Tax Id',1,'TAXID','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','WIRE-WL','PurpCode','Palestine Purpose code',0,'PurpCodePS','',0,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','WIRE-WL-RC','PurpCode','Palestine Purpose code',0,'PurpCodePS','',0,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AL</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AL','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AL','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AL','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AL','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AL','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AL','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_DZ</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_DZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DZ','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DZ','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DZ','WIRE-WL','PurpCode','Central Bank Transaction Code',1,'PurpCode','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DZ','WIRE-WL-RC','PurpCode','Central Bank Transaction Code',1,'PurpCode','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DZ','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DZ','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DZ','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DZ','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AO</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AO','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AO','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AO','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AO','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AO','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AO','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AT</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AT','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AT','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AT','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AT','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AT','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AT','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AT','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AT','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BS</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BS()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BS','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BS','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BS','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BS','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BS','WIRE-WL','PurpPmt','Purpose of payment',1,'PurpPmt','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BS','WIRE-WL-RC','PurpPmt','Purpose of payment',1,'PurpPmt','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BS','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BS','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BH</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BH()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BH','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BH','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BH','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BH','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BH','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BH','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BH','WIRE-WL','PurpOfPmt','Purpose Of Payment',0,'PurpOfPmt','',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BH','WIRE-WL-RC','PurpOfPmt','Purpose Of Payment',0,'PurpOfPmt','',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BH','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BH','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BD</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BD()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BD','WIRE-WL','RmtInf','Remittance information',1,'RmtInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BD','WIRE-WL-I','RmtInf','Remittance information',1,'RmtInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BD','WIRE-WL-I','Nationality','Nationality for Individuals',1,'Nationality','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BD','WIRE-WLIRC','Nationality','Nationality for Individuals',1,'Nationality','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BD','WIRE-WL-RC','RmtInf','Remittance information',1,'RmtInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BD','WIRE-WLIRC','RmtInf','Remittance information',1,'RmtInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BD','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BD','WIRE-WL-I','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BD','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BD','WIRE-WLIRC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BD','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BD','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BD','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BD','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BY</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BY()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BY','WIRE-WL','RsnForPmt','Reason for payment',1,'RsnForPmt','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BY','WIRE-WL-RC','TaxId','Tax Id',1,'TaxId','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BY','WIRE-WL-RC','RsnForPmt','Reason for payment',1,'RsnForPmt','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BY','WIRE-WL','TAXID','Tax Id',1,'TAXID','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BY','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BY','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BY','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BY','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BY','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BY','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BE','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BE','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BE','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BE','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BE','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BE','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BE','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BE','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BJ</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BJ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BJ','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BJ','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BJ','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BJ','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BJ','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BJ','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BW</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BW()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BW','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BW','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BW','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BW','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BW','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BW','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BR</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BR','WIRE-WL','TAXID','Tax Id',1,'TAXID','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BR','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BR','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BR','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BR','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BR','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BR','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BN</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BN','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BN','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BN','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BN','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BN','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BN','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BG</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','WIRE-WL','DOB','Date Of Birth',1,'DOB','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','WIRE-WL','BudgPaymts','Budgetary payments details',1,'BudgPaymts','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','WIRE-WL-RC','DOB','Date Of Birth',1,'DOB','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','WIRE-WL-RC','BudgPaymts','Budgetary payments details',1,'BudgPaymts','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','WIRE-WL-O','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','WIRE-WLORC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','WIRE-WL-O','BudgPaymts','Budgetary payments details',1,'BudgPaymts','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','WIRE-WLORC','BudgPaymts','Budgetary payments details',1,'BudgPaymts','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','WIRE-WL-O','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','WIRE-WLORC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BF</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BF()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BF','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BF','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BF','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BF','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BF','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BF','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_KH</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_KH()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KH','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KH','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KH','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KH','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KH','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KH','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CM</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CM()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CM','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CM','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CM','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CM','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CM','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CM','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TD</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TD()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TD','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TD','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TD','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TD','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TD','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TD','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CL</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CL','WIRE-WL','RsnForPmt','Reason for payment',1,'RsnForPmt','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CL','WIRE-WL-RC','TaxId','Tax Id',1,'TaxId','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CL','WIRE-WL','TAXID','Tax Id',1,'TAXID','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CL','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CL','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CL','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CL','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CL','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CL','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CL','WIRE-WL-RC','RsnForPmt','Reason for payment',1,'RsnForPmt','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CN</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CN','WIRE-WL','RmtInf','Remittance information(Beneficiary date of birth is recommended for payments)',1,'RmtInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CN','WIRE-WL','PurpCode','Purpose code',1,'PurpCode','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > InstrForCdtrAgt > InstrInf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CN','WIRE-WL-O','PurpCode','Purpose code',1,'PurpCode','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > InstrForCdtrAgt > InstrInf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CN','WIRE-WL-RC','PurpCode','Purpose code',1,'PurpCode','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > InstrForCdtrAgt > InstrInf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CN','WIRE-WLORC','PurpCode','Purpose code',1,'PurpCode','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > InstrForCdtrAgt > InstrInf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CN','WIRE-WL-RC','RmtInf','Remittance information(Beneficiary date of birth is recommended for payments)',1,'RmtInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CN','WIRE-WL','DOB','Date Of Birth',1,'DOB','',1,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CN','WIRE-WL-RC','DOB','Date Of Birth',1,'DOB','',1,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CN','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CN','WIRE-WL-O','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CN','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CN','WIRE-WLORC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CN','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CN','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CN','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CN','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CO</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CO','WIRE-WL','TAXID','Tax Id',1,'TAXID','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CO','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CO','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CO','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CO','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CO','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CO','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CD</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CD()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CD','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CD','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CD','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CD','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CD','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CD','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CR</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CR','WIRE-WL','TAXID','Tax Id',1,'TAXID','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CR','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CR','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CR','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CR','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CR','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CR','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CI</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CI()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CI','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CI','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CI','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CI','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CI','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CI','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_HR</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_HR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HR','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HR','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HR','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HR','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HR','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HR','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CY</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CY()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CY','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CY','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CY','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CY','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CY','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CY','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CY','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CY','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CZ</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CZ','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CZ','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CZ','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CZ','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CZ','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CZ','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CZ','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CZ','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_DK</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_DK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DK','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DK','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DK','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DK','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DK','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DK','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_EG</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_EG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-EG','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-EG','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-EG','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-EG','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-EG','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-EG','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_EE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_EE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-EE','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-EE','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-EE','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-EE','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-EE','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-EE','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-EE','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-EE','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ET</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ET()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ET','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ET','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ET','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ET','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ET','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ET','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ET','WIRE-WL','RsnForPmt','Reason for payment',1,'RsnForPmt','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ET','WIRE-WL-RC','RsnForPmt','Reason for payment',1,'RsnForPmt','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_FI</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_FI()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FI','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FI','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FI','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FI','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FI','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FI','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FI','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FI','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_FR</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_FR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FR','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FR','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FR','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FR','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FR','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FR','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FR','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FR','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GA</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GA','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GA','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GA','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GA','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GA','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GA','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GE','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GE','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GE','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GE','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GE','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GE','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_DE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_DE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DE','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DE','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DE','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DE','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DE','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DE','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DE','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DE','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GH</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GH()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GH','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GH','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GH','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GH','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GH','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GH','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GR</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GR','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GR','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GR','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GR','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GR','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GR','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GR','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GR','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GT</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GT','WIRE-WL','TAXID','Tax Id',1,'TAXID','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GT','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GT','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GT','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GT','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GT','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GT','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_IS</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_IS()
    {
        container   paymSpecFieldsList;


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GW</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GW()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GW','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GW','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GW','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GW','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GW','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GW','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GY</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GY()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GY','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GY','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GY','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GY','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GY','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GY','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GY','WIRE-WL','RsnForPmt','Reason for payment',1,'RsnForPmt','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GY','WIRE-WL-RC','RsnForPmt','Reason for payment',1,'RsnForPmt','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_HT</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_HT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HT','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HT','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_HK</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_HK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HK','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HK','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HK','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HK','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HK','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HK','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HK','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HK','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_HU</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_HU()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HU','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HU','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HU','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HU','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HU','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HU','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_IN</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_IN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IN','WIRE-WL','PurpCode','Payment purpose code',0,'PurpCode','',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IN','WIRE-WL-RC','PurpCode','Payment purpose code',0,'PurpCode','',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IN','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IN','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IN','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IN','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IN','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IN','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IN','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IN','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ID</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ID()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','WIRE-WL','BeneType','Beneficiary Type',0,'BeneType','',1,'','','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr > AdrLine']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','WIRE-WL-RC','BeneType','Beneficiary Type',0,'BeneType','',1,'','','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr > AdrLine']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','WIRE-WL-RC','ResStatus','Residential Status',0,'ResStatus','',1,'','','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr > AdrLine']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','WIRE-WL-RC','TransType','Transaction Type',0,'TransType','',1,'','','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr > AdrLine']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','WIRE-WL-RC','TransFacilityType','Transaction Facility Type',0,'TransFacilityType','',1,'','','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr > AdrLine']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','WIRE-WL','ResStatus','Residential Status',0,'ResStatus','',1,'','','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr > AdrLine']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','WIRE-WL','TransType','Transaction Type',0,'TransType','',1,'','','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr > AdrLine']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','WIRE-WL','TransFacilityType','Transaction Facility Type',0,'TransFacilityType','',1,'','','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr > AdrLine']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','WIRE-WL','RsnForPmt','Reason for payment',1,'RsnForPmt','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','WIRE-WL-RC','RsnForPmt','Reason for payment',1,'RsnForPmt','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_IL</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_IL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IL','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IL','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IL','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IL','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IL','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IL','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_IT</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_IT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IT','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IT','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IT','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IT','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IT','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IT','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IT','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IT','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_JP</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_JP()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-JP','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-JP','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-JP','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-JP','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-JP','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-JP','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-JP','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-JP','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_JO</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_JO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-JO','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-JO','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-JO','WIRE-WL','PurpCode','Purpose of transaction',1,'PurpCode','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-JO','WIRE-WL-RC','PurpCode','Purpose of transaction',1,'PurpCode','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-JO','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-JO','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-JO','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-JO','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_KZ</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_KZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KZ','WIRE-WL','RmtInf','Remittance information',1,'RmtInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KZ','WIRE-WL-RC','RmtInf','Remittance information',1,'RmtInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KZ','WIRE-WL','IINBIN','Individual/ Business Identification code',1,'IINBIN','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KZ','WIRE-WL','EKNP','Single Payment Classification Code',1,'EKNP','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KZ','WIRE-WL','BudgetCode','Budget Code',1,'BudgetCode','',0,'','XXXXXX','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KZ','WIRE-WL-RC','IINBIN','Individual/ Business Identification code',1,'IINBIN','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KZ','WIRE-WL-RC','EKNP','Single Payment Classification Code',1,'EKNP','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KZ','WIRE-WL-RC','BudgetCode','Budget Code',1,'BudgetCode','',0,'','XXXXXX','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KZ','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KZ','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KZ','WIRE-WL','RsnForPmt','Reason for payment',1,'RsnForPmt','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KZ','WIRE-WL-RC','RsnForPmt','Reason for payment',1,'RsnForPmt','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KZ','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KZ','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KZ','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KZ','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_KE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_KE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KE','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KE','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KE','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KE','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KE','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KE','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KE','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KE','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_KW</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_KW()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KW','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KW','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KW','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KW','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KW','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KW','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KW','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KW','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LV</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LV()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LV','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LV','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LV','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LV','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LV','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LV','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LB</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LB()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LB','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LB','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LB','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LB','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LB','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LB','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LU</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LU()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LU','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LU','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LU','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LU','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LU','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LU','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MY</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MY()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MY','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MY','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MY','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MY','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MY','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MY','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MY','WIRE-WL','PurpOfPmtMY','Purpose of payment Malaysia',0,'PurpOfPmtMY','',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MY','WIRE-WL-RC','PurpOfPmtMY','Purpose of payment Malaysia',0,'PurpOfPmtMY','',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MT</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MT','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MT','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MT','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MT','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MT','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MT','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MT','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MT','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MX</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MX()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MX','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MX','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MX','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MX','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MX','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MX','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MX','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MX','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MD</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MD()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MD','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MD','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MD','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MD','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MD','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MD','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MA</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MA','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MA','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MA','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MA','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MA','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MA','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MA','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MA','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MZ</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MZ','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MZ','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MZ','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MZ','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MZ','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MZ','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NA</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NA','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NA','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NA','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NA','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NA','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NA','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_NL</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_NL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-NL','CB-WIRE','CentralBankCode','Central Bank Code',1,'CentralBankCode','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > InstrForCdtrAgt > InstrInf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-NL','CB-WIRE','PurposeCode','Purpose Code',1,'PurposeCode','',0,'','XXX','PmtInf > CdtTrfTxInf > Rmtinf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NL</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NL','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NL','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NL','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NL','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NL','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NL','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NZ</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NZ','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NZ','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NZ','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NZ','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NZ','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NZ','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NZ','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NZ','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NE','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NE','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NE','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NE','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NE','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NE','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NG</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NG','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NG','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NG','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NG','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NG','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NG','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NO</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NO','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NO','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NO','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NO','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NO','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NO','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NO','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NO','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_OM</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_OM()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-OM','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-OM','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-OM','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-OM','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-OM','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-OM','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-OM','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-OM','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PK</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL','NTN','National Tax Number',1,'NTN','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);


        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL-IC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIREWLICRC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL-IS','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIREWLISRC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL-IP','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIREWLIPRC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIREWLICRC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL-IS','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIREWLISRC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL-IP','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIREWLIPRC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL-IS','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIREWLISRC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL-IC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIREWLICRC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL-IP','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIREWLIPRC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL-IS','PurpOfPmtPK','Purpose Of Payment for Pakistan',0,'PurpOfPmtPK','',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIREWLISRC','PurpOfPmtPK','Purpose Of Payment for Pakistan',0,'PurpOfPmtPK','',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL-IC','PurpOfPmtPK','Purpose Of Payment for Pakistan',0,'PurpOfPmtPK','',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIREWLICRC','PurpOfPmtPK','Purpose Of Payment for Pakistan',0,'PurpOfPmtPK','',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL-IP','PurpOfPmtPK','Purpose Of Payment for Pakistan',0,'PurpOfPmtPK','',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIREWLIPRC','PurpOfPmtPK','Purpose Of Payment for Pakistan',0,'PurpOfPmtPK','',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL-RC','PurpOfPmtPK','Purpose Of Payment for Pakistan',0,'PurpOfPmtPK','',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL','PurpOfPmtPK','Purpose Of Payment for Pakistan',0,'PurpOfPmtPK','',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL-IS','RelationPK','Relationship between Beneficiary and the Ultimate Remitter','',0,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIREWLISRC','RelationPK','Relationship between Beneficiary and the Ultimate Remitter','',0,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL-IC','RelationPK','Relationship between Beneficiary and the Ultimate Remitter','',0,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIREWLICRC','RelationPK','Relationship between Beneficiary and the Ultimate Remitter','',0,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL-IP','RelationPK','Relationship between Beneficiary and the Ultimate Remitter','',0,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIREWLIPRC','RelationPK','Relationship between Beneficiary and the Ultimate Remitter','',0,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL-RC','RelationPK','Relationship between Beneficiary and the Ultimate Remitter','',0,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','WIRE-WL','RelationPK','Relationship between Beneficiary and the Ultimate Remitter',0,'RelationPK','',0,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        
        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PG</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PG','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PG','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PG','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PG','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PG','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PG','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PE','WIRE-WL','TAXID','Tax Id',1,'TAXID','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PE','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PE','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PE','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PE','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PE','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PE','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PH</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PH()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PH','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PH','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PH','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PH','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PH','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PH','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PH','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PH','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PL</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PL','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PL','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PL','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PL','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PL','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PL','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PT</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PT','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PT','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PT','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PT','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PT','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PT','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PT','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PT','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_QA</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_QA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-QA','WIRE-WL','RmtInf','Remittance information',1,'RmtInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-QA','WIRE-WL-RC','RmtInf','Remittance information',1,'RmtInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-QA','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-QA','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-QA','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-QA','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-QA','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-QA','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_IE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_IE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IE','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IE','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IE','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IE','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IE','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IE','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IE','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IE','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_RO</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_RO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RO','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RO','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RO','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RO','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RO','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RO','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_RU</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_RU()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL','RmtInf','Remittance information',1,'RmtInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL-I','RmtInf','Remittance information',1,'RmtInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL-RC','RmtInf','Remittance information',1,'RmtInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WLIRC','RmtInf','Remittance information',1,'RmtInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL','UIN','Unique payment identifier',1,'UIN','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > InstrForCdtrAgt']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL-I','UIN','Unique payment identifier',1,'UIN','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > InstrForCdtrAgt']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL-RC','UIN','Unique payment identifier',1,'UIN','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > InstrForCdtrAgt']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WLIRC','UIN','Unique payment identifier',1,'UIN','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > InstrForCdtrAgt']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL','IINBIN','Individual/ Business Identification code',1,'IINBIN','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL-I','IINBIN','Individual/ Business Identification code',1,'IINBIN','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL','KPP','Beneficiary KPP',1,'KPP','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > PstlAdr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL-I','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WLIRC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL','VOCode','VO Code',1,'VOCode','',1,'','XXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL-I','VOCode','VO Code',1,'VOCode','',1,'','XXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL-RC','VOCode','VO Code',1,'VOCode','',1,'','XXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WLIRC','VOCode','VO Code',1,'VOCode','',1,'','XXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WL-I','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','WIRE-WLIRC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SA</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SA','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SA','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SA','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SA','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SA','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SA','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SA','WIRE-WL','PurpPmt','Purpose of payment',1,'PurpPmt','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SA','WIRE-WL-RC','PurpPmt','Purpose of payment',1,'PurpPmt','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SA','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SA','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SK</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SK','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SK','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SK','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SK','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SK','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SK','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ZA</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ZA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ZA','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ZA','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ZA','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ZA','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ZA','WIRE-WL','PurpCode','Purpose of transaction',1,'PurpCode','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ZA','WIRE-WL-RC','PurpCode','Purpose of transaction',1,'PurpCode','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ZA','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ZA','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ZA','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ZA','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_KR</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_KR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KR','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KR','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KR','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KR','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KR','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KR','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ES</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ES()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ES','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ES','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ES','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ES','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ES','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ES','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ES','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ES','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LK</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LK','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LK','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LK','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LK','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LK','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LK','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SE','WIRE-WL','BudgetPaymts','Budgetary payments details',1,'BudgetPaymts','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > InstrForCdtrAgt']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SE','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SE','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SE','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SE','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SE','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SE','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SE','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SE','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CH</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_CH()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CH','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CH','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CH','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CH','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CH','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CH','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CH','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CH','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TW</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TW()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TW','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TW','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TW','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TW','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TW','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TW','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TZ</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TZ','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TZ','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TZ','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TZ','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TZ','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TZ','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TH</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TH()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TH','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TH','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TH','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TH','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TH','WIRE-WL','PurpCode','Purpose of transaction',1,'PurpCode','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TH','WIRE-WL-RC','PurpCode','Purpose of transaction',1,'PurpCode','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TH','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TH','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TH','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TH','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TG</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TG','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TG','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TG','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TG','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TG','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TG','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TN</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TN','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TN','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TN','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TN','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TN','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TN','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TN','WIRE-WL','PurpOfPmtTN','Purpose Of Payment',0,'PurpOfPmtTN','',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TN','WIRE-WL-RC','PurpOfPmtTN','Purpose Of Payment',0,'PurpOfPmtTN','',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TN','WIRE-WL','ActivitySector','Company Activity Sector',0,'ActivitySector','',0,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TN','WIRE-WL-RC','ActivitySector','Company Activity Sector',0,'ActivitySector','',0,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TN','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TN','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TN','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TN','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TR</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TR','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TR','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TR','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TR','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TR','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TR','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TR','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TR','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_UG</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_UG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UG','WIRE-WL','RmtInf','Remittance information( Payment Registration Number)',1,'RmtInf','',0,'','XXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UG','WIRE-WL-RC','RmtInf','Remittance information( Payment Registration Number)',1,'RmtInf','',0,'','XXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UG','WIRE-WL','PRN','Payment Registration Number',1,'PRN','',0,'','XXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UG','WIRE-WL-RC','PRN','Payment Registration Number',1,'PRN','',0,'','XXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UG','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UG','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UG','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UG','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UG','WIRE-WL','PurpPmt','Purpose of payment',1,'PurpPmt','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UG','WIRE-WL-RC','PurpPmt','Purpose of payment',1,'PurpPmt','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UG','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UG','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AE','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AE','CHK-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AE','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AE','CHK-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AE','CHK-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',1,'','','PmtInf > CdtTrfTxInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AE','CHK-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',1,'','','PmtInf > CdtTrfTxInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AE','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',1,'','','PmtInf > CdtTrfTxInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AE','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',1,'','','PmtInf > CdtTrfTxInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AE','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AE','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_VN</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_VN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-VN','WIRE-WL','RmtInf','Remittance information',1,'RmtInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-VN','WIRE-WL-RC','RmtInf','Remittance information',1,'RmtInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-VN','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-VN','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-VN','WIRE-WL','PurpCode','Purpose of transaction',1,'PurpCode','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-VN','WIRE-WL-RC','PurpCode','Purpose of transaction',1,'PurpCode','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-VN','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-VN','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-VN','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-VN','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ZM</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ZM()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ZM','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ZM','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ZM','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ZM','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ZM','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ZM','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AZ</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AZ','WIRE-WL','TAXID','Tax Id',1,'TAXID','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AZ','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AZ','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AZ','WIRE-WL','RsnForPmt','Reason for payment',1,'RsnForPmt','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AZ','WIRE-WL-RC','RsnForPmt','Reason for payment',1,'RsnForPmt','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AZ','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AZ','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AZ','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AZ','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BM</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BM()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BM','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BM','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BM','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BM','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BM','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BM','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_DO</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_DO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DO','WIRE-WL','TAXID','Tax Id',1,'TAXID','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DO','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DO','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DO','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DO','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DO','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DO','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_HN</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_HN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HN','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HN','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HN','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HN','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HN','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HN','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LA</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LA','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LA','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LA','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LA','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LA','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LA','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LI</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LI()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LI','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LI','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LI','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LI','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LI','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LI','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LT</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_LT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LT','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LT','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LT','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LT','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LT','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LT','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MM</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MM()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MM','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MM','WIRE-WL','ITRSCode','ITRS Code',0,'ITRSCode','',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MM','WIRE-WL-RC','ITRSCode','ITRS Code',0,'ITRSCode','',1,'','','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MM','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MM','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MM','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MM','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MM','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MN</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MN','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MN','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MN','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MN','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MN','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MN','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MR</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MR','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MR','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MR','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MR','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MR','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MR','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MU</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MU()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MU','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MU','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MU','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MU','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MU','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MU','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MW</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MW()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MW','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MW','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MW','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MW','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MW','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MW','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_RW</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_RW()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RW','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RW','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RW','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RW','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RW','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RW','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SN</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SN','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SN','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SN','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SN','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SN','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SN','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SI</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SI()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SI','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SI','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SI','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SI','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SI','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SI','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SZ</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SZ','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SZ','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SZ','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SZ','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SZ','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SZ','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TT</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_TT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TT','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TT','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TT','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TT','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TT','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TT','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_UY</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_UY()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UY','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UY','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UY','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UY','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UY','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UY','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NP</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NP()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NP','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NP','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NP','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NP','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NP','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NP','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_RS</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_RS()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RS','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RS','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RS','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RS','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RS','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RS','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SC</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_SC()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SC','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SC','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SC','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SC','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SC','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SC','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PY</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_PY()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PY','WIRE-WL','TAXID','Tax Id',1,'TAXID','',1,'','XXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PY','WIRE-WL-RC','TAXID','Tax Id',1,'TAXID','',1,'','XXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PY','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PY','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PY','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PY','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PY','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PY','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_UZ</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_UZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UZ','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UZ','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UZ','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UZ','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UZ','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UZ','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MC</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MC()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MC','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MC','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MC','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MC','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MC','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MC','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AM</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_AM()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AM','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AM','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AM','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AM','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AM','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AM','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ME</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ME()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ME','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ME','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ME','WIRE-WL','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ME','WIRE-WL-RC','CtgyPurpPrtry','Purpose codes for UAE(AED) Payments',0,'CtgyPurpPrtry','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ME','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ME','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_TN</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_TN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TN','CHK-815','DlvryMtd','Delivery Method',0,'DlvryMtd','Hold for Customer(Bank address)',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TN','BKT-547','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TN','CBFT-574','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TN','CHK-815','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TN','DOM-555','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_PY</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_PY()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PY','DFT-441','LclInstrm','Local Instrument code',1,'','',0,'CITI441','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PY','CBFT-442','LclInstrm','Local Instrument code',1,'','',0,'CITI442','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > PmtTpInf > LclInstrm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PY','CBFT-442','ChrgBr','Charges bearer',0,'ChrgBr','Our',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PY','DFT-441','BenBrnchId','Beneficiary Branch Id',1,'','',0,'0001','XXXXXXXX','PmtInf > CdtTrfTxInf > CdtrAgt > BrnchId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PY','DFT-441','BenTaxId','Beneficiary Tax Id',1,'','',1,'','XXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PY','DFT-441','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PY','CBFT-442','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PY','CBFT-442','CenBankCode','Central Bank Code',0,'CenBankPY442','Suppliers Payments',1,'','','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Inf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PY','DFT-441','CenBankCode','Central Bank Code',0,'CenBankPY441','Suppliers Payments',1,'','','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Inf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PY','INSTPAY','DestBrnch','Destination branch',1,'DestBrnch','',0,001,'XXX','PmtInf > CdtTrfTxInf > ChqInstr > PrtLctn']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PY','INSTPAY','CenBankCode','Central Bank Code',1,'CenBankCode','',1,'','XX','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Inf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PY','INSTPAY','CdtrId','Creditor Identification',0,'OrgPrvId','Organization',0,'','','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PY','INSTPAY','BenAcctTpCd','Beneficiary account code',0,'AccType','Savings',0,'','','PmtInf > CdtTrfTxInf > CdtrAcct > Othr > Tp > (Cd or Prtry)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PY','INSTPAY','DocTypeCode','Document Type code',1,'DocTypeCode','',0,'','XX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PY','INSTPAY','BenTaxId','Beneficiary Tax Id',1,'','',0,'','XXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > Id > (OrgId or PrvId) > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PY','DFT-441','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PY','CBFT-442','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_IL</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_IL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IL','DOM-555','ILInstrInf','IL Instruction information',0,'ILInstrInf','',0,'','','PmtInf > CdtTrfTxInf > InstrForCdtrAgt > InstrInf']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IL','CBFT-574','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IL','DOM-555','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IL','RTGS-605','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_PPW_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_PPW_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-PPW-XML','PPW-WL','PayPalEmail','PayPal email',1,'PayPalEmail','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > CtctDtls > EmailAdr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-PPW-XML','PPW-PH-WL','PayPalPhone','PayPal phone',1,'PayPalPhone','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-PPW-XML','PPW-WL-RC','PayPalEmail','PayPal email',1,'PayPalEmail','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > Cdtr > CtctDtls > EmailAdr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-PPW-XML','PPW-PHWLRC','PayPalPhone','PayPal phone',1,'PayPalPhone','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BB</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_BB()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BB','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BB','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MK</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MK','WIRE-WL','RsnForPmt','Reason for payment',1,'RsnForPmt','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MK','WIRE-WL-RC','RsnForPmt','Reason for payment',1,'RsnForPmt','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MK','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',1,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MK','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',1,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MK','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MK','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MG</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_MG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MG','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MG','WIRE-WL-RC','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MG','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',1,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MG','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',1,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MG','WIRE-WL','RsnForPmt','Reason for payment',1,'RsnForPmt','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MG','WIRE-WL-RC','RsnForPmt','Reason for payment',1,'RsnForPmt','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NI</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_NI()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NI','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',1,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NI','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',1,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ML</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_ML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ML','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ML','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',1,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_KM</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_KM()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KM','WIRE-WL','PurpOfPmtGYDBBD','Purpose of payment for GYD and BBD payments',1,'PurpOfPmtGYDBBD','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KM','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',1,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GM</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GM()
    {
        container   paymSpecFieldsList;
        
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GM','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',1,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GN</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_WL_XML_GN()
    {
        container   paymSpecFieldsList;
        
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GN','WIRE-WL','ChrgBr','Charges bearer',0,'ChrgBr','Our',1,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GN','WIRE-WL-RC','ChrgBr','Charges bearer',0,'ChrgBr','Our',1,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GN','WIRE-WL','RsnForPmt','Reason for payment',1,'RsnForPmt','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GN','WIRE-WL-RC','RsnForPmt','Reason for payment',1,'RsnForPmt','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GN','WIRE-WL','BankCodeGN','Bank Code',1,'BankCodeGN','',0,'','XXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GN','WIRE-WL-RC','BankCodeGN','Bank Code',1,'BankCodeGN','',0,'','XXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GN','WIRE-WL','AgencyCode','Agency Code',1,'AgencyCode','',0,'','XXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GN','WIRE-WL-RC','AgencyCode','Agency Code',1,'AgencyCode','',0,'','XXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GN','WIRE-WL','KeyGN','Key CN',1,'KeyGN','',0,'','XX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GN','WIRE-WL-RC','KeyGN','Key CN',1,'KeyGN','',0,'','XX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITICONNECT_XML_VN</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITICONNECT_XML_VN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-VN','DFT-391','PurposeCode','Purpose Code',1,'PurposeCode','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-VN','CBFT-392','PurposeCode','Purpose Code',1,'PurposeCode','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RmtInf > Ustrd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-VN','DFT-391','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-VN','CBFT-392','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-VN','DFT-391','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-VN','CBFT-392','ChrgBr','Charges bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        //container   conDelete;
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatValidations','*','16','WChargesIndic']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatValidations','*','16','WBeneMailHandling']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatValidations','*','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatValidations','*','15','W02']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatValidations','*','15','W03']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatValidations','*','15','W04']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatValidations','*','3','Invoice']);
  
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatValidations','CHK-WL','16','WBeneName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatValidations','CHK-WL','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatValidations','CHK-WL','16','WBeneAddr2']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatValidations','CHK-WL','16','WBeneZipPostal']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatValidations','CHK-WL','16','WBeneCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatValidations','CHK-WL','16','WBeneCountryRegionId']);  
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatValidations','CHK-WL-RC','16','WBeneName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatValidations','CHK-WL-RC','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatValidations','CHK-WL-RC','16','WBeneAddr2']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatValidations','CHK-WL-RC','16','WBeneZipPostal']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatValidations','CHK-WL-RC','16','WBeneCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','*','FormatValidations','CHK-WL-RC','16','WBeneCountryRegionId']);
  

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','','CodeLookup','BenType','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','','CodeLookup','BenBankGB932','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','','CodeLookupValues','BenType','Individual','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','','CodeLookupValues','BenType','Corporate','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','','CodeLookupValues','BenType','Government','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','','CodeLookupValues','BenBankGB932','CHAPS Branch Sort code','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','','CodeLookupValues','BenBankGB932','Irish Sort code','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','','CodeLookupValues','BenBankGB932','SWIFT','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','','CodeLookupValues','BenBankGB932','FEDWIRE ROUTING NUMBER','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','','CodeLookupValues','InstrInf','MAIL DRAFT TO BENE','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','','CodeLookupValues','InstrInf','RETURN TO ORDERING PARTY','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CN','PaymSpecFields','CBFT-392','ChrgBr','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','PaymSpecFields','CDFT-392','BenBankRC','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','PaymSpecFields','DOM-441','CdtrId','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','PaymSpecFields','DOM-441','Purp','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','PaymSpecFields','CHK-WL','DlvryMtd','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','PaymSpecFields','CHK-WL-RC','DlvryMtd','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','PaymSpecFields','DOM-441','DocTypeCd','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','PaymSpecFields','DOM-441','BenTaxId','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','PaymSpecFields','DOM-441','BenBrnchId','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','PaymSpecFields','DOM-441','BenAcctTpCd','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JP','PaymSpecFields','ACH-410','BenAcctTpCd','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KR','PaymSpecFields','WIRE-WL','BenId','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','PaymSpecFields','WIRE-WL','TaxID1','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','PaymSpecFields','WIRE-WL','TaxID2','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','PaymSpecFields','WIRE-WL-RC','TaxID1','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','PaymSpecFields','WIRE-WL-RC','TaxID2','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','PaymSpecFields','WIRE-WL-RC','BenType','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KR','PaymSpecFields','WIRE-WL-RC','BenId','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','PaymSpecFields','WIRE-WL','BudgetPaymts','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','PaymSpecFields','WIRE-WL','BenType','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AE','PaymSpecFields','WIRE-WL','PurpCode','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AE','PaymSpecFields','WIRE-WL-RC','PurpCode','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BA','PaymSpecFields','WIRE-WL','RsnForPmt','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BA','PaymSpecFields','WIRE-WL-RC','RsnForPmt','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-UY','FormatNotes','DOM-441','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','FormatValidations','CHK-455','1','IBAN']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','FormatValidations','ACH-DC','9','BankIBAN']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','FormatValidations','SIP-962','9','BankIBAN']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','FormatValidations','USFCP-821','9','WBenBankName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','FormatValidations','CCD-502','9','WBenBankName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','FormatValidations','FT-499','9','WBenBankName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','FormatValidations','FT-499','16','WCrePartyAcct']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','FormatValidations','FT-499','16','WCrePartyName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','FormatValidations','PPD-503','9','WBenBankName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TH','FormatValidations','CHK-425','1','IBAN']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','FormatValidations','DOM-555','1','IBAN']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DE','FormatValidations','WIRE-WL','15','WOrdPartyAddr2']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AZ','FormatValidations','WIRE-WL','11','VATNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DE','FormatValidations','WIRE-WL-RC','15','WOrdPartyAddr2']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AZ','FormatValidations','WIRE-WL-RC','11','VATNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','FormatValidations','ACH-DC','0','IBAN']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','FormatValidations','CHK-19','16','WBeneName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','FormatValidations','CHK-19','16','WBeneCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','FormatValidations','CHK-19','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','FormatValidations','CHK-19','16','WBeneAddr2']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','FormatValidations','CHK-19','16','WBeneZipPostal']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','FormatValidations','CHK-19','16','WBeneCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','PaymSpecFields','CB-WIRE','CenBankCode','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-NL','PaymSpecFields','CB-WIRE','CenBankCode','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','PaymentSpecs','PPD-503','','']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PK','PaymSpecFields','*','CNIC','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PK','PaymSpecFields','*','SNIC','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PK','PaymSpecFields','*','Passport','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-PK','PaymSpecFields','*','RsnForPmt','']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BY','FormatValidations','WIRE-WL','0','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CL','FormatValidations','CHK-455','1','AccountNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AR','FormatValidations','*','1','AccountNum']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KM','PaymSpecFields','WIRE-WL-RC','PurpOfPmtGYDBBD','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KM','PaymSpecFields','WIRE-WL-RC','ChrgBr','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ML','PaymSpecFields','WIRE-WL-RC','PurpOfPmtGYDBBD','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ML','PaymSpecFields','WIRE-WL-RC','ChrgBr','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IS','PaymSpecFields','WIRE-WL-RC','PurpOfPmtGYDBBD','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IS','PaymSpecFields','WIRE-WL','PurpOfPmtGYDBBD','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DE','PaymSpecFields','SEPA-858','ChrgBr','']);

        return deleteList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITICONNECT-XML','BtchBookg','Batch Booking (Y/N)']);

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BtchBookg','Y','Y']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITICONNECT-XML','BtchBookg','N','N']);

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('US-CITICONNECT-WL-PPW-XML'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_PPW_XML();
                break;
            case ('US-CITICONNECT-WL-XML-AE'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AE();
                break;
            case ('US-CITICONNECT-WL-XML-AG'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AG();
                break;
            case ('US-CITICONNECT-WL-XML-AL'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AL();
                break;
            case ('US-CITICONNECT-WL-XML-AM'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AM();
                break;
            case ('US-CITICONNECT-WL-XML-AO'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AO();
                break;
            case ('US-CITICONNECT-WL-XML-AT'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AT();
                break;
            case ('US-CITICONNECT-WL-XML-AU'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AU();
                break;
            case ('US-CITICONNECT-WL-XML-AZ'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AZ();
                break;
            case ('US-CITICONNECT-WL-XML-BA'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BA();
                break;
            case ('US-CITICONNECT-WL-XML-BB'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BB();
                break;
            case ('US-CITICONNECT-WL-XML-BD'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BD();
                break;
            case ('US-CITICONNECT-WL-XML-BE'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BE();
                break;
            case ('US-CITICONNECT-WL-XML-BF'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BF();
                break;
            case ('US-CITICONNECT-WL-XML-BG'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BG();
                break;
            case ('US-CITICONNECT-WL-XML-BH'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BH();
                break;
            case ('US-CITICONNECT-WL-XML-BJ'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BJ();
                break;
            case ('US-CITICONNECT-WL-XML-BM'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BM();
                break;
            case ('US-CITICONNECT-WL-XML-BN'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BN();
                break;
            case ('US-CITICONNECT-WL-XML-BO'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BO();
                break;
            case ('US-CITICONNECT-WL-XML-BR'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BR();
                break;
            case ('US-CITICONNECT-WL-XML-BS'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BS();
                break;
            case ('US-CITICONNECT-WL-XML-BW'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BW();
                break;
            case ('US-CITICONNECT-WL-XML-BY'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BY();
                break;
            case ('US-CITICONNECT-WL-XML-CA'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CA();
                break;
            case ('US-CITICONNECT-WL-XML-CD'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CD();
                break;
            case ('US-CITICONNECT-WL-XML-CH'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CH();
                break;
            case ('US-CITICONNECT-WL-XML-CI'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CI();
                break;
            case ('US-CITICONNECT-WL-XML-CL'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CL();
                break;
            case ('US-CITICONNECT-WL-XML-CM'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CM();
                break;
            case ('US-CITICONNECT-WL-XML-CN'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CN();
                break;
            case ('US-CITICONNECT-WL-XML-CO'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CO();
                break;
            case ('US-CITICONNECT-WL-XML-CR'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CR();
                break;
            case ('US-CITICONNECT-WL-XML-CY'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CY();
                break;
            case ('US-CITICONNECT-WL-XML-CZ'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CZ();
                break;
            case ('US-CITICONNECT-WL-XML-DE'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_DE();
                break;
            case ('US-CITICONNECT-WL-XML-DK'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_DK();
                break;
            case ('US-CITICONNECT-WL-XML-DO'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_DO();
                break;
            case ('US-CITICONNECT-WL-XML-DZ'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_DZ();
                break;
            case ('US-CITICONNECT-WL-XML-EE'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_EE();
                break;
            case ('US-CITICONNECT-WL-XML-EG'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_EG();
                break;
            case ('US-CITICONNECT-WL-XML-ES'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_ES();
                break;
            case ('US-CITICONNECT-WL-XML-ET'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_ET();
                break;
            case ('US-CITICONNECT-WL-XML-FI'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_FI();
                break;
            case ('US-CITICONNECT-WL-XML-FJ'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_FJ();
                break;
            case ('US-CITICONNECT-WL-XML-FR'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_FR();
                break;
            case ('US-CITICONNECT-WL-XML-GA'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GA();
                break;
            case ('US-CITICONNECT-WL-XML-MV'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MV();
                break;
            case ('US-CITICONNECT-WL-XML-GB'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GB();
                break;
            case ('US-CITICONNECT-WL-XML-GE'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GE();
                break;
            case ('US-CITICONNECT-WL-XML-GH'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GH();
                break;
            case ('US-CITICONNECT-WL-XML-GN'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GN();
                break;
            case ('US-CITICONNECT-WL-XML-GR'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GR();
                break;
            case ('US-CITICONNECT-WL-XML-GT'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GT();
                break;
            case ('US-CITICONNECT-WL-XML-GW'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GW();
                break;
            case ('US-CITICONNECT-WL-XML-GY'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GY();
                break;
            case ('US-CITICONNECT-WL-XML-HT'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_HT();
                break;
            case ('US-CITICONNECT-WL-XML-HK'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_HK();
                break;
            case ('US-CITICONNECT-WL-XML-HN'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_HN();
                break;
            case ('US-CITICONNECT-WL-XML-HR'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_HR();
                break;
            case ('US-CITICONNECT-WL-XML-HU'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_HU();
                break;
            case ('US-CITICONNECT-WL-XML-ID'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_ID();
                break;
            case ('US-CITICONNECT-WL-XML-IE'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_IE();
                break;
            case ('US-CITICONNECT-WL-XML-IL'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_IL();
                break;
            case ('US-CITICONNECT-WL-XML-IN'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_IN();
                break;
            case ('US-CITICONNECT-WL-XML-IS'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_IS();
                break;
            case ('US-CITICONNECT-WL-XML-IT'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_IT();
                break;
            case ('US-CITICONNECT-WL-XML-JO'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_JO();
                break;
            case ('US-CITICONNECT-WL-XML-JM'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_JM();
                break;
            case ('US-CITICONNECT-WL-XML-JP'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_JP();
                break;
            case ('US-CITICONNECT-WL-XML-KE'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_KE();
                break;
            case ('US-CITICONNECT-WL-XML-KH'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_KH();
                break;
            case ('US-CITICONNECT-WL-XML-KR'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_KR();
                break;
            case ('US-CITICONNECT-WL-XML-KW'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_KW();
                break;
            case ('US-CITICONNECT-WL-XML-KZ'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_KZ();
                break;
            case ('US-CITICONNECT-WL-XML-LA'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LA();
                break;
            case ('US-CITICONNECT-WL-XML-LB'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LB();
                break;
            case ('US-CITICONNECT-WL-XML-LI'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LI();
                break;
            case ('US-CITICONNECT-WL-XML-LK'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LK();
                break;
            case ('US-CITICONNECT-WL-XML-LT'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LT();
                break;
            case ('US-CITICONNECT-WL-XML-LU'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LU();
                break;
            case ('US-CITICONNECT-WL-XML-LV'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LV();
                break;
            case ('US-CITICONNECT-WL-XML-MA'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MA();
                break;
            case ('US-CITICONNECT-WL-XML-MC'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MC();
                break;
            case ('US-CITICONNECT-WL-XML-MD'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MD();
                break;
            case ('US-CITICONNECT-WL-XML-ME'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_ME();
                break;
            case ('US-CITICONNECT-WL-XML-MG'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MG();
                break;
            case ('US-CITICONNECT-WL-XML-MK'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MK();
                break;
            case ('US-CITICONNECT-WL-XML-MM'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MM();
                break;
            case ('US-CITICONNECT-WL-XML-MN'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MN();
                break;
            case ('US-CITICONNECT-WL-XML-MO'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MO();
                break;
            case ('US-CITICONNECT-WL-XML-MR'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MR();
                break;
            case ('US-CITICONNECT-WL-XML-MT'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MT();
                break;
            case ('US-CITICONNECT-WL-XML-MU'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MU();
                break;
            case ('US-CITICONNECT-WL-XML-MW'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MW();
                break;
            case ('US-CITICONNECT-WL-XML-MX'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MX();
                break;
            case ('US-CITICONNECT-WL-XML-MY'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MY();
                break;
            case ('US-CITICONNECT-WL-XML-MZ'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MZ();
                break;
            case ('US-CITICONNECT-WL-XML-NA'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NA();
                break;
            case ('US-CITICONNECT-WL-XML-NE'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NE();
                break;
            case ('US-CITICONNECT-WL-XML-NG'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NG();
                break;
            case ('US-CITICONNECT-WL-XML-NI'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NI();
                break;
            case ('US-CITICONNECT-WL-XML-NL'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NL();
                break;
            case ('US-CITICONNECT-WL-XML-NO'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NO();
                break;
            case ('US-CITICONNECT-WL-XML-NP'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NP();
                break;
            case ('US-CITICONNECT-WL-XML-NZ'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NZ();
                break;
            case ('US-CITICONNECT-WL-XML-OM'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_OM();
                break;
            case ('US-CITICONNECT-WL-XML-PE'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PE();
                break;
            case ('US-CITICONNECT-WL-XML-PG'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PG();
                break;
            case ('US-CITICONNECT-WL-XML-PH'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PH();
                break;
            case ('US-CITICONNECT-WL-XML-PK'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PK();
                break;
            case ('US-CITICONNECT-WL-XML-PL'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PL();
                break;
            case ('US-CITICONNECT-WL-XML-PT'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PT();
                break;
            case ('US-CITICONNECT-WL-XML-PY'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PY();
                break;
            case ('US-CITICONNECT-WL-XML-QA'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_QA();
                break;
            case ('US-CITICONNECT-WL-XML-RO'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_RO();
                break;
            case ('US-CITICONNECT-WL-XML-RS'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_RS();
                break;
            case ('US-CITICONNECT-WL-XML-RU'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_RU();
                break;
            case ('US-CITICONNECT-WL-XML-RW'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_RW();
                break;
            case ('US-CITICONNECT-WL-XML-SA'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SA();
                break;
            case ('US-CITICONNECT-WL-XML-SC'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SC();
                break;
            case ('US-CITICONNECT-WL-XML-SE'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SE();
                break;
            case ('US-CITICONNECT-WL-XML-SG'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SG();
                break;
            case ('US-CITICONNECT-WL-XML-SI'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SI();
                break;
            case ('US-CITICONNECT-WL-XML-SK'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SK();
                break;
            case ('US-CITICONNECT-WL-XML-SN'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SN();
                break;
            case ('US-CITICONNECT-WL-XML-SZ'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SZ();
                break;
            case ('US-CITICONNECT-WL-XML-TD'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TD();
                break;
            case ('US-CITICONNECT-WL-XML-TG'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TG();
                break;
            case ('US-CITICONNECT-WL-XML-TH'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TH();
                break;
            case ('US-CITICONNECT-WL-XML-TN'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TN();
                break;
            case ('US-CITICONNECT-WL-XML-TR'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TR();
                break;
            case ('US-CITICONNECT-WL-XML-TT'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TT();
                break;
            case ('US-CITICONNECT-WL-XML-TW'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TW();
                break;
            case ('US-CITICONNECT-WL-XML-TZ'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TZ();
                break;
            case ('US-CITICONNECT-WL-XML-UG'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_UG();
                break;
            case ('US-CITICONNECT-WL-XML-US'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_US();
                break;
            case ('US-CITICONNECT-WL-XML-UY'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_UY();
                break;
            case ('US-CITICONNECT-WL-XML-UZ'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_UZ();
                break;
            case ('US-CITICONNECT-WL-XML-VN'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_VN();
                break;
            case ('US-CITICONNECT-WL-XML-ZA'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_ZA();
                break;
            case ('US-CITICONNECT-WL-XML-ZM'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_ZM();
                break;
            case ('US-CITICONNECT-XML-AT'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_AT();
                break;
            case ('US-CITICONNECT-XML-AU'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_AU();
                break;
            case ('US-CITICONNECT-XML-BE'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_BE();
                break;
            case ('US-CITICONNECT-XML-CA'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_CA();
                break;
            case ('US-CITICONNECT-XML-DE'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_DE();
                break;
            case ('US-CITICONNECT-XML-DK'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_DK();
                break;
            case ('US-CITICONNECT-XML-FI'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_FI();
                break;
            case ('US-CITICONNECT-XML-FR'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_FR();
                break;
            case ('US-CITICONNECT-XML-GB'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_GB();
                break;
            case ('US-CITICONNECT-XML-IE'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_IE();
                break;
            case ('US-CITICONNECT-XML-IN'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_IN();
                break;
            case ('US-CITICONNECT-XML-IT'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_IT();
                break;
            case ('US-CITICONNECT-XML-JP'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_JP();
                break;
            case ('US-CITICONNECT-XML-LU'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_LU();
                break;
            case ('US-CITICONNECT-XML-MY'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_MY();
                break;
            case ('US-CITICONNECT-XML-NL'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_NL();
                break;
            case ('US-CITICONNECT-XML-NO'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_NO();
                break;
            case ('US-CITICONNECT-XML-SE'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_SE();
                break;
            case ('US-CITICONNECT-XML-SK'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_SK();
                break;
            case ('US-CITICONNECT-XML-TR'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_TR();
                break;
            case ('US-CITICONNECT-XML-US'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITICONNECT_XML_US();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_PPW_XML</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_PPW_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-PPW-XML','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AE</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AE','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);
        
        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AG</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AG','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AL</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AL','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AM</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AM()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AM','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AO</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AO','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AT</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AT','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AU</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AU()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AU','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AZ</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_AZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-AZ','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BA</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BA','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BB</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BB()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BB','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BD</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BD()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BD','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BE</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BE','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BF</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BF()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BF','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BG</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BG','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BH</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BH()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BH','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BJ</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BJ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BJ','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BM</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BM()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BM','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BN</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BN','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BO</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BO','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BR</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BR','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BS</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BS()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BS','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BW</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BW()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BW','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BY</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_BY()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-BY','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CA</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CA','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CD</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CD()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CD','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CH</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CH()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CH','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CI</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CI()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CI','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CL</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CL','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CM</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CM()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CM','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CN</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CN','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CO</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CO','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CR</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CR','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CY</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CY()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CY','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CZ</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_CZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-CZ','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_DE</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_DE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DE','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_DK</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_DK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DK','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_DO</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_DO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DO','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_DZ</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_DZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-DZ','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_EE</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_EE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-EE','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_EG</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_EG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-EG','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_ES</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_ES()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ES','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_ET</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_ET()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ET','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_FI</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_FI()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FI','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_FJ</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_FJ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FJ','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_FR</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_FR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-FR','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GA</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GA','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MV</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MV()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MV','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GB</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GB()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GB','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GE</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GE','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GH</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GH()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GH','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GN</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GN','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GR</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GR','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GT</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GT','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GW</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GW()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GW','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GY</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_GY()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-GY','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_HT</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_HT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HT','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_HK</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_HK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HK','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_HN</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_HN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HN','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_HR</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_HR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HR','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_HU</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_HU()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-HU','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_ID</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_ID()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ID','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_IE</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_IE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IE','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_IL</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_IL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IL','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_IN</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_IN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IN','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_IS</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_IS()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IS','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_IT</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_IT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-IT','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_JO</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_JO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-JO','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_JM</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_JM()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-JM','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_JP</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_JP()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-JP','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_KE</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_KE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KE','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_KH</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_KH()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KH','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_KR</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_KR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KR','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_KW</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_KW()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KW','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_KZ</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_KZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-KZ','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LA</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LA','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LB</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LB()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LB','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LI</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LI()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LI','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LK</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LK','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LT</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LT','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LU</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LU()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LU','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LV</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_LV()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-LV','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MA</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MA','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MC</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MC()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MC','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MD</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MD()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MD','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_ME</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_ME()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ME','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MK</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MK','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MG</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MG','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MM</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MM()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MM','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MN</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MN','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MO</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MO','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MR</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MR','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MT</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MT','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MU</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MU()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MU','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MW</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MW()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MW','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MX</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MX()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MX','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MY</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MY()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MY','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MZ</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_MZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-MZ','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NA</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NA','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NE</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NE','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NG</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NG','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NI</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NI()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NI','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NL</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NL','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NO</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NO','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NP</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NP()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NP','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NZ</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_NZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-NZ','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_OM</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_OM()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-OM','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PE</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PE','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PG</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PG','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PH</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PH()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PH','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PK</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PK','UltRmtTaxID','Ultimate Remitter Tax ID',1,'UltRmtTaxID','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','RmtInf > Ustrd']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PL</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PL','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PT</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PT','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PY</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_PY()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-PY','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_QA</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_QA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-QA','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_RO</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_RO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RO','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_RS</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_RS()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RS','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_RU</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_RU()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RU','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_RW</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_RW()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-RW','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SA</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SA','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SC</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SC()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SC','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SE</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SE','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SG</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SG','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SI</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SI()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SI','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SK</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SK','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SN</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SN','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SZ</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_SZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-SZ','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TD</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TD()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TD','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TG</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TG','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TH</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TH()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TH','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TN</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TN','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TR</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TR','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TT</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TT','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TW</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TW()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TW','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TZ</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_TZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-TZ','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_UG</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_UG()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UG','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_US</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_US()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-US','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_UY</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_UY()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UY','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_UZ</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_UZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-UZ','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_VN</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_VN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-VN','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_ZA</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_ZA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ZA','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_ZM</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_WL_XML_ZM()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-WL-XML-ZM','InitgPtyId','WorldLink Client ID',1,'InitgPtyId','',1,'','XXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_AT</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_AT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AT','BankId','Bank id',1,'BankId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_AU</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_AU()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-AU','DbtrAgtBranchId','Branch Id',1,'DbtrAgtBranchId','',0,'','XXX','DbtrAgt > BrnchId > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_BE</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_BE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-BE','BankId','Bank id',1,'BankId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_CA</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_CA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-CA','InitgPtyId','Company Id',1,'InitgPtyId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_DE</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_DE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DE','BankId','Bank id',1,'BankId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_DK</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_DK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-DK','BankId','Bank id',1,'BankId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_FI</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_FI()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-FI','BankId','Bank id',1,'BankId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_FR</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_FR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-FR','BankId','Bank id',1,'BankId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_GB</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_GB()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-GB','BankId','Bank id',1,'BankId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_IE</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_IE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IE','BankId','Bank id',1,'BankId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_IN</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_IN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','PANID','PAN ID',1,'PANID','',0,'','XXXXXXXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > Orgid > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','TAXID','TAX ID',1,'TAXID','',0,'','XXXXXXXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > Orgid > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IN','InitgPtyId','Initiating Party Id',1,'InitgPtyId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_IT</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_IT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-IT','BankId','Bank id',1,'BankId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_JP</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_JP()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-JP','BtchBookg','Batch Booking (Y/N)',0,'BtchBookg','',0,'','','PmtInf > BtchBookg']);
        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_LU</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_LU()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-LU','BankId','Bank id',1,'BankId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_MY</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_MY()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-MY','DbtrAgtBranchId','Branch Id',1,'DbtrAgtBranchId','',0,'','XXX','DbtrAgt > BrnchId > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_NL</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_NL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-NL','BankId','Bank id',1,'BankId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_NO</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_NO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-NO','BankId','Bank id',1,'BankId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_SE</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_SE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SE','BankId','Bank id',1,'BankId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_SK</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_SK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-SK','BankId','Bank id',1,'BankId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_TR</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_TR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','TAXID','TAX ID',1,'TAXID','',0,'','XXXXXXXXXXX','PmtInf > Dbtr > Id > Orgid > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','RegistryNo','Registry No',1,'RegistryNo','',0,'','XXXXXXXXXXXXXXXXXXXXXXX','PmtInf > DbtrAgt > BranchId > Nm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-TR','DbtrAgtBranchId','Debtor Branch Code',1,'DbtrAgtBranchId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > Orgid > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITICONNECT_XML_US</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITICONNECT_XML_US()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','InitgPtyId','WorldLink Id',1,'InitgPtyId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','FwdgAgtScheme','Forwarding Agent Scheme',1,'FwdgAgtScheme','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > FwdgAgt > FinInstnId > Id > Othr > SchemeNm > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITICONNECT-XML','US-CITICONNECT-XML-US','TAXID','Tax ID',1,'TAXID','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    public void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('US-CITICONNECT-WL-PPW-XML'):
            case ('US-CITICONNECT-WL-XML-AE'):
            case ('US-CITICONNECT-WL-XML-AG'):
            case ('US-CITICONNECT-WL-XML-AL'):
            case ('US-CITICONNECT-WL-XML-AM'):
            case ('US-CITICONNECT-WL-XML-AO'):
            case ('US-CITICONNECT-WL-XML-AT'):
            case ('US-CITICONNECT-WL-XML-AU'):
            case ('US-CITICONNECT-WL-XML-AZ'):
            case ('US-CITICONNECT-WL-XML-BA'):
            case ('US-CITICONNECT-WL-XML-BB'):
            case ('US-CITICONNECT-WL-XML-BD'):
            case ('US-CITICONNECT-WL-XML-BE'):
            case ('US-CITICONNECT-WL-XML-BF'):
            case ('US-CITICONNECT-WL-XML-BG'):
            case ('US-CITICONNECT-WL-XML-BH'):
            case ('US-CITICONNECT-WL-XML-BJ'):
            case ('US-CITICONNECT-WL-XML-BM'):
            case ('US-CITICONNECT-WL-XML-BN'):
            case ('US-CITICONNECT-WL-XML-BO'):
            case ('US-CITICONNECT-WL-XML-BR'):
            case ('US-CITICONNECT-WL-XML-BS'):
            case ('US-CITICONNECT-WL-XML-BW'):
            case ('US-CITICONNECT-WL-XML-BY'):
            case ('US-CITICONNECT-WL-XML-CA'):
            case ('US-CITICONNECT-WL-XML-CD'):
            case ('US-CITICONNECT-WL-XML-CH'):
            case ('US-CITICONNECT-WL-XML-CI'):
            case ('US-CITICONNECT-WL-XML-CL'):
            case ('US-CITICONNECT-WL-XML-CM'):
            case ('US-CITICONNECT-WL-XML-CN'):
            case ('US-CITICONNECT-WL-XML-CO'):
            case ('US-CITICONNECT-WL-XML-CR'):
            case ('US-CITICONNECT-WL-XML-CY'):
            case ('US-CITICONNECT-WL-XML-CZ'):
            case ('US-CITICONNECT-WL-XML-DE'):
            case ('US-CITICONNECT-WL-XML-DK'):
            case ('US-CITICONNECT-WL-XML-DO'):
            case ('US-CITICONNECT-WL-XML-DZ'):
            case ('US-CITICONNECT-WL-XML-EE'):
            case ('US-CITICONNECT-WL-XML-EG'):
            case ('US-CITICONNECT-WL-XML-ES'):
            case ('US-CITICONNECT-WL-XML-ET'):
            case ('US-CITICONNECT-WL-XML-FI'):
            case ('US-CITICONNECT-WL-XML-FJ'):
            case ('US-CITICONNECT-WL-XML-FR'):
            case ('US-CITICONNECT-WL-XML-GA'):
            case ('US-CITICONNECT-WL-XML-GB'):
            case ('US-CITICONNECT-WL-XML-GE'):
            case ('US-CITICONNECT-WL-XML-GH'):
            case ('US-CITICONNECT-WL-XML-GR'):
            case ('US-CITICONNECT-WL-XML-GT'):
            case ('US-CITICONNECT-WL-XML-GW'):
            case ('US-CITICONNECT-WL-XML-GY'):
            case ('US-CITICONNECT-WL-XML-HT'):
            case ('US-CITICONNECT-WL-XML-HK'):
            case ('US-CITICONNECT-WL-XML-HN'):
            case ('US-CITICONNECT-WL-XML-HR'):
            case ('US-CITICONNECT-WL-XML-HU'):
            case ('US-CITICONNECT-WL-XML-ID'):
            case ('US-CITICONNECT-WL-XML-IE'):
            case ('US-CITICONNECT-WL-XML-IL'):
            case ('US-CITICONNECT-WL-XML-IN'):
            case ('US-CITICONNECT-WL-XML-IS'):
            case ('US-CITICONNECT-WL-XML-IT'):
            case ('US-CITICONNECT-WL-XML-JO'):
            case ('US-CITICONNECT-WL-XML-JP'):
            case ('US-CITICONNECT-WL-XML-KE'):
            case ('US-CITICONNECT-WL-XML-KH'):
            case ('US-CITICONNECT-WL-XML-KR'):
            case ('US-CITICONNECT-WL-XML-KW'):
            case ('US-CITICONNECT-WL-XML-KZ'):
            case ('US-CITICONNECT-WL-XML-LA'):
            case ('US-CITICONNECT-WL-XML-LB'):
            case ('US-CITICONNECT-WL-XML-LI'):
            case ('US-CITICONNECT-WL-XML-LK'):
            case ('US-CITICONNECT-WL-XML-LT'):
            case ('US-CITICONNECT-WL-XML-LU'):
            case ('US-CITICONNECT-WL-XML-LV'):
            case ('US-CITICONNECT-WL-XML-MA'):
            case ('US-CITICONNECT-WL-XML-MC'):
            case ('US-CITICONNECT-WL-XML-MD'):
            case ('US-CITICONNECT-WL-XML-ME'):
            case ('US-CITICONNECT-WL-XML-MK'):
            case ('US-CITICONNECT-WL-XML-MM'):
            case ('US-CITICONNECT-WL-XML-MN'):
            case ('US-CITICONNECT-WL-XML-MO'):
            case ('US-CITICONNECT-WL-XML-MR'):
            case ('US-CITICONNECT-WL-XML-MT'):
            case ('US-CITICONNECT-WL-XML-MU'):
            case ('US-CITICONNECT-WL-XML-MW'):
            case ('US-CITICONNECT-WL-XML-MX'):
            case ('US-CITICONNECT-WL-XML-MY'):
            case ('US-CITICONNECT-WL-XML-MZ'):
            case ('US-CITICONNECT-WL-XML-NA'):
            case ('US-CITICONNECT-WL-XML-NE'):
            case ('US-CITICONNECT-WL-XML-NG'):
            case ('US-CITICONNECT-WL-XML-NL'):
            case ('US-CITICONNECT-WL-XML-NO'):
            case ('US-CITICONNECT-WL-XML-NP'):
            case ('US-CITICONNECT-WL-XML-NZ'):
            case ('US-CITICONNECT-WL-XML-OM'):
            case ('US-CITICONNECT-WL-XML-PE'):
            case ('US-CITICONNECT-WL-XML-PG'):
            case ('US-CITICONNECT-WL-XML-PH'):
            case ('US-CITICONNECT-WL-XML-PL'):
            case ('US-CITICONNECT-WL-XML-PT'):
            case ('US-CITICONNECT-WL-XML-PY'):
            case ('US-CITICONNECT-WL-XML-QA'):
            case ('US-CITICONNECT-WL-XML-RO'):
            case ('US-CITICONNECT-WL-XML-RS'):
            case ('US-CITICONNECT-WL-XML-RU'):
            case ('US-CITICONNECT-WL-XML-RW'):
            case ('US-CITICONNECT-WL-XML-SA'):
            case ('US-CITICONNECT-WL-XML-SC'):
            case ('US-CITICONNECT-WL-XML-SE'):
            case ('US-CITICONNECT-WL-XML-SG'):
            case ('US-CITICONNECT-WL-XML-SI'):
            case ('US-CITICONNECT-WL-XML-SK'):
            case ('US-CITICONNECT-WL-XML-SN'):
            case ('US-CITICONNECT-WL-XML-SZ'):
            case ('US-CITICONNECT-WL-XML-TD'):
            case ('US-CITICONNECT-WL-XML-TG'):
            case ('US-CITICONNECT-WL-XML-TH'):
            case ('US-CITICONNECT-WL-XML-TN'):
            case ('US-CITICONNECT-WL-XML-TR'):
            case ('US-CITICONNECT-WL-XML-TT'):
            case ('US-CITICONNECT-WL-XML-TW'):
            case ('US-CITICONNECT-WL-XML-TZ'):
            case ('US-CITICONNECT-WL-XML-UG'):
            case ('US-CITICONNECT-WL-XML-US'):
            case ('US-CITICONNECT-WL-XML-UY'):
            case ('US-CITICONNECT-WL-XML-UZ'):
            case ('US-CITICONNECT-WL-XML-VN'):
            case ('US-CITICONNECT-WL-XML-ZA'):
            case ('US-CITICONNECT-WL-XML-ZM'):
            case ('US-CITICONNECT-WL-XML-NI'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('InitgPtyId', gSKS_EFT_Bank.W01);
                }
                break;
            case ('US-CITICONNECT-XML-AT'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('BankId', gSKS_EFT_Bank.W01);
                }
                break;
            case ('US-CITICONNECT-XML-AU'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('DbtrAgtBranchId', gSKS_EFT_Bank.W01);
                }
                break;
            case ('US-CITICONNECT-XML-BE'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('BankId', gSKS_EFT_Bank.W01);
                }
                break;
            case ('US-CITICONNECT-XML-CA'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('InitgPtyId', gSKS_EFT_Bank.W01);
                }
                break;
            case ('US-CITICONNECT-XML-DE'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('BankId', gSKS_EFT_Bank.W01);
                }
                break;
            case ('US-CITICONNECT-XML-DK'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('BankId', gSKS_EFT_Bank.W01);
                }
                break;
            case ('US-CITICONNECT-XML-FI'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('BankId', gSKS_EFT_Bank.W01);
                }
                break;
            case ('US-CITICONNECT-XML-FR'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('BankId', gSKS_EFT_Bank.W01);
                }
                break;
            case ('US-CITICONNECT-XML-GB'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('BankId', gSKS_EFT_Bank.W01);
                }
                break;
            case ('US-CITICONNECT-XML-IE'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('BankId', gSKS_EFT_Bank.W01);
                }
                break;
            case ('US-CITICONNECT-XML-IN'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('PANID', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('TAXID', gSKS_EFT_Bank.W02);
                }
                if(gSKS_EFT_Bank.W03)
                {
                    this.updateBankFields('InitgPtyId', gSKS_EFT_Bank.W03);
                }
                break;
            case ('US-CITICONNECT-XML-IT'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('BankId', gSKS_EFT_Bank.W01);
                }
                break;
            case ('US-CITICONNECT-XML-JP'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('BtchBookg', gSKS_EFT_Bank.W01, true);
                }
                break;
            case ('US-CITICONNECT-XML-LU'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('BankId', gSKS_EFT_Bank.W01);
                }
                break;
            case ('US-CITICONNECT-XML-MY'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('DbtrAgtBranchId', gSKS_EFT_Bank.W01);
                }
                break;
            case ('US-CITICONNECT-XML-NL'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('BankId', gSKS_EFT_Bank.W01);
                }
                break;
            case ('US-CITICONNECT-XML-NO'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('BankId', gSKS_EFT_Bank.W01);
                }
                break;
            case ('US-CITICONNECT-XML-SE'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('BankId', gSKS_EFT_Bank.W01);
                }
                break;
            case ('US-CITICONNECT-XML-SK'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('BankId', gSKS_EFT_Bank.W01);
                }
                break;
            case ('US-CITICONNECT-XML-TR'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('TAXID', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('RegistryNo', gSKS_EFT_Bank.W02);
                }
                if(gSKS_EFT_Bank.W03)
                {
                    this.updateBankFields('DbtrAgtBranchId', gSKS_EFT_Bank.W03);
                }
                break;
            case ('US-CITICONNECT-XML-US'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('InitgPtyId', gSKS_EFT_Bank.W01);
                }
                break;
            case ('US-CITICONNECT-XML-PK'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('InitgPtyId', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('UltRmtTaxID', gSKS_EFT_Bank.W02);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    public void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('US-CITICONNECT-XML-CN'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-CA'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-US'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-DE'):
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-GB'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-NZ'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-TW'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-JO'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-KR'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-AE'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-MX'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
            case ('US-CITICONNECT-XML-AU'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-BR'):
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-HK'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-HN'):
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-ID'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-IN'):
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-JP'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
            case ('US-CITICONNECT-XML-MY'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-PA'):
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-PH'):
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-SG'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-SK'):
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-TH'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-TR'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-UY'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-VE'):
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-ZA'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-TN'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-PY'):
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
            case ('US-CITICONNECT-XML-IL'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
            case ('US-CITICONNECT-XML-VN'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>