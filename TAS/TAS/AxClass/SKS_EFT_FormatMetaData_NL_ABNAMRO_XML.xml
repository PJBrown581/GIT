<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_NL_ABNAMRO_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_NL_ABNAMRO_XML Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_NL_ABNAMRO_XML Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20221116';
        dataContractVersion = '1.0';
        conFormatID = ['NL-ABNAMRO-XML'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'NL-ABNAMRO bank-XML-ISO20022',0,'','','NL-ABNAMRO-XML',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'NL-ABNAMRO-XML',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('NL-ABNAMRO-XML'):
                paymSpecList = this.getPaymSpecsMetaData_NL_ABNAMRO_XML();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_NL_ABNAMRO_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_NL_ABNAMRO_XML()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA Credit transfer',1,'SEPA','','SEPA','TRADE PAY',0,'NL-ABNAMRO-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH Payments',1,'ACH','','ACH','TRADE PAY',0,'NL-ABNAMRO-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'WIRE Payments',1,'WIRE','','WIRE','TRADE PAY',0,'NL-ABNAMRO-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Bank Cheques',1,'CHK','','CHK','TRADE PAY',0,'NL-ABNAMRO-XML',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('NL-ABNAMRO-XML'):
                notesList = this.getNotesMetaData_NL_ABNAMRO_XML();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_NL_ABNAMRO_XML</Name>
				<Source><![CDATA[
    private container getNotesMetaData_NL_ABNAMRO_XML()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['NL-ABNAMRO-XML','SEPA','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['NL-ABNAMRO-XML','ACH','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['NL-ABNAMRO-XML','WIRE','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['NL-ABNAMRO-XML','CHK','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Payment Id store in the Accounts payable > Invoice journal > Invoice tab > Payment Id']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('NL-ABNAMRO-XML'):
                validationsList = this.getValidationsMetaData_NL_ABNAMRO_XML();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_NL_ABNAMRO_XML</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_NL_ABNAMRO_XML()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','SEPA','','Dbtr Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ID','PmtInf > Dbtr > Id > OrgId > Othr > Id','Bank Id ','15','WOrdPartyId','','',0,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','SEPA','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','SEPA','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','SEPA','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','SEPA','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','SEPA','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','SEPA','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','SEPA','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','SEPA','','Vendor Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift code ','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related  Vendor','9','SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','SEPA','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','SEPA','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','SEPA','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','SEPA','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','SEPA','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Vendor city','16','WBeneCity','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','SEPA','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','CHK','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','CHK','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','CHK','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Address related to bank','15','WOrdPartyAddr','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','CHK','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','CHK','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','CHK','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','CHK','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','CHK','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','CHK','','Bank Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','','3',1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','CHK','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','CHK','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','CHK','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','CHK','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','CHK','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','Vendor city','16','WBeneCity','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Address related to bank','15','WOrdPartyAddr','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Bank Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','','3',1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Intermediary Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank Id','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id  related to vendor','16','WIntBankId','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Intermediary Bank Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > Ctry','Intermediary Bank Country related to vendor','16','WIntBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Intermediary Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > AdrLine','Intermediary Bank Address related to vendor','16','WIntBankAddr','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Intermediary Bank Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address 2','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > AdrLine','Intermediary Bank Address related to vendor','16','WIntBankAddr2','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Intermediary Bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > City','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > AdrLine','City','16','WIntBankCity','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > Nm','Name related to Vendor','16','WBenBankName','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Vendor bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to vendor bank','16','WBenBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Vendor bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Address','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > AdrLine','Address related to vendor bank','16','WBenBankAddr','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','Vendor city','16','WBeneCity','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','ACH','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Address related to bank','15','WOrdPartyAddr','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Bank Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','','3',1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Intermediary Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank Id','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id  related to vendor','16','WIntBankId','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Intermediary Bank Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > Ctry','Intermediary Bank Country related to vendor','16','WIntBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Intermediary Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > AdrLine','Intermediary Bank Address related to vendor','16','WIntBankAddr','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Intermediary Bank Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address 2','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > AdrLine','Intermediary Bank Address related to vendor','16','WIntBankAddr2','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Intermediary Bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > City','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > AdrLine','City','16','WIntBankCity','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > Nm','Name related to Vendor','16','WBenBankName','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Vendor bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to vendor bank','16','WBenBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Vendor bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Address','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > AdrLine','Address related to vendor bank','16','WBenBankAddr','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','Vendor city','16','WBeneCity','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ABNAMRO-XML','WIRE','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,0,0,0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['NL-ABNAMRO-XML','DlvryMtd','Delivery Method code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['NL-ABNAMRO-XML','Chqtp','Cheque type']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['JP-MUFGBANK-XML','Charges','Charges']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ABNAMRO-XML','DlvryMtd','Courier To Creditor(Vendor address)','CRCD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ABNAMRO-XML','DlvryMtd','Courier To Debtor(Bank address)','CRDB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ABNAMRO-XML','DlvryMtd','Mail To Debtor(Bank address)','MLDB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ABNAMRO-XML','DlvryMtd','Registered Mail To Creditor(Vendor address)','RGCD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ABNAMRO-XML','DlvryMtd','Registered Mail To Debtor(Bank address)','RGDB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ABNAMRO-XML','Chqtp','Bank Cheque','BCHQ']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ABNAMRO-XML','Chqtp','Draft','DRFT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ABNAMRO-XML','Chqtp','Electronic Draft','ELDR']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ABNAMRO-XML','Charges','Service Level','SLEV']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ABNAMRO-XML','Charges','BorneByCreditor','CRED']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ABNAMRO-XML','Charges','BorneByDebtor','DEBT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ABNAMRO-XML','Charges','Shared','SHAR']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('NL-ABNAMRO-XML'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_NL_ABNAMRO_XML();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_NL_ABNAMRO_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_NL_ABNAMRO_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ABNAMRO-XML','NL-ABNAMRO-XML','CHK','DlvryMtd','Delivery Method',0,'DlvryMtd','',1,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ABNAMRO-XML','NL-ABNAMRO-XML','CHK','Chqtp','Cheque Type',0,'Chqtp','',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > ChqTp']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ABNAMRO-XML','NL-ABNAMRO-XML','ACH','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ABNAMRO-XML','NL-ABNAMRO-XML','WIRE','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ABNAMRO-XML','NL-ABNAMRO-XML','CHK','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ABNAMRO-XML','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ABNAMRO-XML','*','FormatValidations','*','16','WChargesIndic']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ABNAMRO-XML','*','FormatValidations','*','1','AccountNum']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('NL-ABNAMRO-XML'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>