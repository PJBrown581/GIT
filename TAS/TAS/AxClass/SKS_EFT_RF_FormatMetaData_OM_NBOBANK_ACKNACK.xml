<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_RF_FormatMetaData_OM_NBOBANK_ACKNACK</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SKS_EFT_RF_FormatMetaData_OM_NBOBANK_ACKNACK Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
        productVersion = '';
        formatGroupVersion = '20210512';
        conFormatID = ['OM-NBOBANK-ACKNACK'];
        formatfiletype = 'EFTInbound';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundFormatMetaData</Name>
				<Source><![CDATA[
    protected container getInboundFormatMetaData()
    {
        container   inboundFormatList;

        //Metadata column names of data elements
        ////FormatId,Description,Selected,ProductVersion,FormatVersion

        inboundFormatList = ConIns(inboundFormatList,conLen(inboundFormatList)+1,[productVersion,formatGroupVersion,'OM-NBOBANK-ACKNACK','OM - National Bank Of Oman - ACK/NACK',0]);

        return inboundFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundStatusMetaData</Name>
				<Source><![CDATA[
    protected container getInboundStatusMetaData(str _formatID)
    {
        container   inboundStatusList;

        //Metadata column names of data elements
        //FormatId,StatusType,StatusId,StatusIdDisplay,Origin

        switch (_formatID)
        {
            case ('OM-NBOBANK-ACKNACK'):
                inboundStatusList = this.getInboundStatusMetaData_OM_NBOBANK_ACKNACK();
                break;

        }

        return inboundStatusList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundStatusMetaData_OM_NBOBANK_ACKNACK</Name>
				<Source><![CDATA[
    private container getInboundStatusMetaData_OM_NBOBANK_ACKNACK()
    {
        container   inboundStatusList;

        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['OM-NBOBANK-ACKNACK',0,'<Empty>','Empty status id',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['OM-NBOBANK-ACKNACK',1,'<Empty>','Empty status id',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['OM-NBOBANK-ACKNACK',0,1,'Accepted',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['OM-NBOBANK-ACKNACK',0,'2','Rejected',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['OM-NBOBANK-ACKNACK',0,'3','Partially Accepted',1]);

        return inboundStatusList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundRCodeMetaData</Name>
				<Source><![CDATA[
    protected container getInboundRCodeMetaData(str _formatID)
    {
        container   reasonCodeList;

        //Metadata column names of data elements
        //FormatId,ReasonCode,ReasonDesc,Origin

        switch (_formatID)
        {
            case ('OM-NBOBANK-ACKNACK'):
                reasonCodeList = this.getInboundRCodeMetaData_OM_NBOBANK_ACKNACK();
                break;

        }

        return reasonCodeList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundRCodeMetaData_OM_NBOBANK_ACKNACK</Name>
				<Source><![CDATA[
    private container getInboundRCodeMetaData_OM_NBOBANK_ACKNACK()
    {
        container   reasonCodeList;

        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['OM-NBOBANK-ACKNACK','<Empty>','Empty reason code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['OM-NBOBANK-ACKNACK','R01','Insufficient funds',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['OM-NBOBANK-ACKNACK','R02','Account closed',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['OM-NBOBANK-ACKNACK','R03','No account/unable to locate account',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['OM-NBOBANK-ACKNACK','R04','Invalid account number',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['OM-NBOBANK-ACKNACK','R05','Reserved',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['OM-NBOBANK-ACKNACK','R06','Returned per ODFIs request',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['OM-NBOBANK-ACKNACK','R07','Authorization revoked by customer',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['OM-NBOBANK-ACKNACK','R08','Payment stopped or stop payment on item',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['OM-NBOBANK-ACKNACK','R09','Uncollected funds',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['OM-NBOBANK-ACKNACK','R10','Customer advises not authorized',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['OM-NBOBANK-ACKNACK','R11','Check truncation entry return',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['OM-NBOBANK-ACKNACK','R12','Branch sold to another DFI',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['OM-NBOBANK-ACKNACK','R13','RDFI not qualified to participate',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['OM-NBOBANK-ACKNACK','R14','Representative payee deceased or unable to continue in that capacity',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['OM-NBOBANK-ACKNACK','R15','Beneficiary of account holder deceased',1]);

        return reasonCodeList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   conDelete;
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>