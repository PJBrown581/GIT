<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_IBERIABANK_93</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_IBERIABANK_93  Extends SKS_PP_Format_BankGroup
{
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        //  Field                       Start Position      End         Length
        //  Account Number                      1           16          16
        //  Check Serial Number                 17          27          11
        //  Transaction Amount                  28          45          18
        //  Issue Date                          46          51          6  MMDDYY
        //  Payee                               52          86          35
        //  Void Date                           87          92          6  MMDDYY
        //  Issue/Void Indicator                93          94          1
    
    
        int Mult;
        str ItemType;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        //Convert negative void numbers to positives
        Mult = 1;
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
            if(mSKS_PP_FileDetail.chkcuryamt < 0)
            {
                Mult = -1;
            }
        }
        else
        {
            ItemType = 'I';
        }
    
        //  Account Number                      1           16          16
        sb.Append(SKS_PP_StringFormats::strFill(16, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //  Check Serial Number                 17          27          11
        sb.Append(SKS_PP_StringFormats::strFill(11, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //  Transaction Amount                  28          45          18
        sb.Append(SKS_PP_StringFormats::strMoney(Mult * mSKS_PP_FileDetail.ChkCuryAmt, 18));

        //  Issue Date                          46          51          6  MMDDYY
        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(mSKS_PP_FileDetail.ChkDocDate));

        //  Payee                               52          86          35
        sb.Append(SKS_PP_StringFormats::strFill(35,mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  Void Date                           87          92          6  MMDDYY
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            sb.Append(SKS_PP_StringFormats::strDateMMDDYY(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        //  Issue/Void Indicator                93          94          1
        sb.Append(ItemType);
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>