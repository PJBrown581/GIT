<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_EU_BNP_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_EU_BNP_XML Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_EU_BNP_XML Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20221117';
        dataContractVersion = '1.0';
        conFormatID = ['EU-BNP-XML','EU-BNP-XML-ES'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'EU - BNP Paribas - SEPA Credit Transfer - ISO20022',0,'','','EU-BNP-XML',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'EU-BNP-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,1,'','','','',0,'','','','',0,'EU - BNP Paribas - SEPA Credit Transfer - ISO20022 - Spain',0,'','','EU-BNP-XML-ES',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'EU-BNP-XML',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('EU-BNP-XML'):
                paymSpecList = this.getPaymSpecsMetaData_EU_BNP_XML();
                break;

            case ('EU-BNP-XML-ES'):
                paymSpecList = this.getPaymSpecsMetaData_EU_BNP_XML_ES();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_EU_BNP_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_EU_BNP_XML()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Normal SEPA Payment',1,'SEPA-NOR','','SEPA-NOR','TRADE PAY',0,'EU-BNP-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Urgent SEPA Payment',1,'SEPA-URG','','SEPA-URG','TRADE PAY',0,'EU-BNP-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Intra Company SEPA Payment',1,'SEPA-INTC','','SEPA-INTC','TRADE PAY',0,'EU-BNP-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA Salary Payment',1,'SEPA-PRL','','SEPA-PRL','TRADE PAY',0,'EU-BNP-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International Non SEPA Transactions',1,'INTL','','INTL','TRADE PAY',0,'EU-BNP-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_EU_BNP_XML_ES</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_EU_BNP_XML_ES()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Normal domestic payments',1,'SEPA-NOR','','SEPA-NOR','TRADE PAY',0,'EU-BNP-XML-ES',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA Salary Payment',1,'SEPA-PRL','','SEPA-PRL','TRADE PAY',0,'EU-BNP-XML-ES',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Bank Draft letter cheque',1,'CHK','','CHK','TRADE PAY',0,'EU-BNP-XML-ES',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,1,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Confirming',1,'CONFIRM','','CONFIRM','TRADE PAY',0,'EU-BNP-XML-ES',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Single unitary payments',1,'SIN-UNI','','SIN-UNI','TRADE PAY',0,'EU-BNP-XML-ES',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Multipel unitary payments',1,'MUL-UNI','','MUL-UNI','TRADE PAY',0,'EU-BNP-XML-ES',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Multipel mass payments',1,'MUL-MASS','','MUL-MASS','TRADE PAY',0,'EU-BNP-XML-ES',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('EU-BNP-XML'):
                notesList = this.getNotesMetaData_EU_BNP_XML();
                break;

            case ('EU-BNP-XML-ES'):
                notesList = this.getNotesMetaData_EU_BNP_XML_ES();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_EU_BNP_XML</Name>
				<Source><![CDATA[
    private container getNotesMetaData_EU_BNP_XML()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['EU-BNP-XML','SEPA-NOR','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-BNP-XML','SEPA-URG','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-BNP-XML','SEPA-INTC','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-BNP-XML','SEPA-PRL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-BNP-XML','INTL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_EU_BNP_XML_ES</Name>
				<Source><![CDATA[
    private container getNotesMetaData_EU_BNP_XML_ES()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['EU-BNP-XML-ES','SEPA-NOR','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-BNP-XML-ES','SEPA-PRL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-BNP-XML-ES','CHK','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment pecifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-BNP-XML-ES','CONFIRM','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Remittance Location method may be set on the Beneficiary Mail Handling field in the Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications.:--If eMail, Remittance location Electronic Address will be populated if a primary eMail address exists on the Vendor.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-BNP-XML-ES','SIN-UNI','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment pecifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-BNP-XML-ES','MUL-UNI','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-BNP-XML-ES','MUL-MASS','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('EU-BNP-XML'):
                validationsList = this.getValidationsMetaData_EU_BNP_XML();
                break;

            case ('EU-BNP-XML-ES'):
                validationsList = this.getValidationsMetaData_EU_BNP_XML_ES();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_EU_BNP_XML</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_EU_BNP_XML()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-NOR','','Initiating party Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','GrpHdr > InitgPty > Id > Orgid > PrtryId > Id','InitgPty Id related to bank','15','WOrdPartyId','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-NOR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-NOR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-NOR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-NOR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-NOR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-NOR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-NOR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-NOR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-URG','','Initiating party Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','GrpHdr > InitgPty > Id > Orgid > PrtryId > Id','InitgPty Id related to bank','15','WOrdPartyId','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-URG','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-URG','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-URG','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-URG','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-URG','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-URG','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-URG','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-URG','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-INTC','','Initiating party Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','GrpHdr > InitgPty > Id > Orgid > PrtryId > Id','InitgPty Id related to bank','15','WOrdPartyId','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-INTC','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-INTC','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-INTC','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-INTC','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-INTC','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-INTC','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-INTC','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-PRL','','Initiating party Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','GrpHdr > InitgPty > Id > Orgid > PrtryId > Id','InitgPty Id related to bank','15','WOrdPartyId','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-PRL','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-PRL','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-PRL','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-PRL','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-PRL','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-PRL','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-PRL','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-PRL','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','SEPA-PRL','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','INTL','','Initiating party Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','GrpHdr > InitgPty > Id > Orgid > PrtryId > Id','InitgPty Id related to bank','15','WOrdPartyId','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','INTL','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','INTL','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','INTL','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','INTL','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','INTL','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',3,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','INTL','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',3,0,1,'14',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','INTL','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','INTL','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML','INTL','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,'','',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_EU_BNP_XML_ES</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_EU_BNP_XML_ES()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','Summary Record > Payer Account Number','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',1,0,'9','9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','Bank SWIFT Code','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > SWIFT Code','Summary Record > Payer Routing Number','SWIFT Code related to Bank',0,'SWIFTNo','','',0,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','SWIFT Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > SWIFT Code','Payee Details > Payee Routing Number','SWIFT Code related to Vendor','9','SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Nm ','Beneficiary Bank Name','16','WBenBankName','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address','PmtInf > CdTrfTxInf > CdtrAgt > AdrLine','Beneficiary Bank Address','16','WBenBankAddr','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','Vendor Bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Ctry','Beneficiary Bank Name','16','WBenBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','Summary Record > Payer Account Number','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',1,0,'9','9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','Bank SWIFT Code','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > SWIFT Code','Summary Record > Payer Routing Number','SWIFT Code related to Bank',0,'SWIFTNo','','',0,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','SWIFT Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > SWIFT Code','Payee Details > Payee Routing Number','SWIFT Code related to Vendor','9','SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Nm ','Beneficiary Bank Name','16','WBenBankName','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address','PmtInf > CdTrfTxInf > CdtrAgt > AdrLine','Beneficiary Bank Address','16','WBenBankAddr','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','Vendor Bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Ctry','Beneficiary Bank Name','16','WBenBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','Summary Record > Payer Account Number','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',1,0,'9','9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','Bank SWIFT Code','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > SWIFT Code','Summary Record > Payer Routing Number','SWIFT Code related to Bank',0,'SWIFTNo','','',0,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','SWIFT Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > SWIFT Code','Payee Details > Payee Routing Number','SWIFT Code related to Vendor','9','SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Nm ','Beneficiary Bank Name','16','WBenBankName','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address','PmtInf > CdTrfTxInf > CdtrAgt > AdrLine','Beneficiary Bank Address','16','WBenBankAddr','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','Vendor Bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Ctry','Beneficiary Bank Name','16','WBenBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','Summary Record > Payer Account Number','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',1,0,'9','9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','Bank SWIFT Code','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > SWIFT Code','Summary Record > Payer Routing Number','SWIFT Code related to Bank',0,'SWIFTNo','','',0,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','SWIFT Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > SWIFT Code','Payee Details > Payee Routing Number','SWIFT Code related to Vendor','9','SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Nm ','Beneficiary Bank Name','16','WBenBankName','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address','PmtInf > CdTrfTxInf > CdtrAgt > AdrLine','Beneficiary Bank Address','16','WBenBankAddr','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','Vendor Bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Ctry','Beneficiary Bank Name','16','WBenBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','Summary Record > Payer Account Number','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',1,0,'9','9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','Bank SWIFT Code','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > SWIFT Code','Summary Record > Payer Routing Number','SWIFT Code related to Bank',0,'SWIFTNo','','',0,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','SWIFT Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > SWIFT Code','Payee Details > Payee Routing Number','SWIFT Code related to Vendor','9','SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Nm ','Beneficiary Bank Name','16','WBenBankName','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address','PmtInf > CdTrfTxInf > CdtrAgt > AdrLine','Beneficiary Bank Address','16','WBenBankAddr','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','Vendor Bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Ctry','Beneficiary Bank Name','16','WBenBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','Summary Record > Payer Account Number','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',1,0,'9','9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','Bank SWIFT Code','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > SWIFT Code','Summary Record > Payer Routing Number','SWIFT Code related to Bank',0,'SWIFTNo','','',0,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','SWIFT Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > SWIFT Code','Payee Details > Payee Routing Number','SWIFT Code related to Vendor','9','SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Nm ','Beneficiary Bank Name','16','WBenBankName','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address','PmtInf > CdTrfTxInf > CdtrAgt > AdrLine','Beneficiary Bank Address','16','WBenBankAddr','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','Vendor Bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Ctry','Beneficiary Bank Name','16','WBenBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','Summary Record > Payer Account Number','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',1,0,'9','9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','Bank SWIFT Code','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > SWIFT Code','Summary Record > Payer Routing Number','SWIFT Code related to Bank',0,'SWIFTNo','','',0,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','SWIFT Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > SWIFT Code','Payee Details > Payee Routing Number','SWIFT Code related to Vendor','9','SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Nm ','Beneficiary Bank Name','16','WBenBankName','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address','PmtInf > CdTrfTxInf > CdtrAgt > AdrLine','Beneficiary Bank Address','16','WBenBankAddr','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','Vendor Bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Ctry','Beneficiary Bank Name','16','WBenBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','Summary Record > Payer Account Number','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',1,0,'9','9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','Bank SWIFT Code','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > SWIFT Code','Summary Record > Payer Routing Number','SWIFT Code related to Bank',0,'SWIFTNo','','',0,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','SWIFT Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > SWIFT Code','Payee Details > Payee Routing Number','SWIFT Code related to Vendor','9','SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Nm ','Beneficiary Bank Name','16','WBenBankName','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address','PmtInf > CdTrfTxInf > CdtrAgt > AdrLine','Beneficiary Bank Address','16','WBenBankAddr','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','Vendor Bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Ctry','Beneficiary Bank Name','16','WBenBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,0,1,'34',0,0]);

        //B2C
        
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','Name','TAS > TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','Country/region','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','Summary Record > Payer Account Number','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','','3',0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',1,0,'9','9',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','Bank SWIFT Code','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > SWIFT Code','Summary Record > Payer Routing Number','SWIFT Code related to Bank',0,'SWIFTNo','','',0,0,1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','SWIFT Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','Payee Details > Payee Routing Number','SWIFT Code related to Vendor','1','SWIFTNo','','','3',0,1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','1','RegistrationNum','','','3',0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Customer bank accounts > General tab > Additional Identification (fast tab) > Bank Account Number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','1','AccountNum','','',1,0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-NOR','','IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Customer bank accounts > General tab > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN','1','BankIBAN','','',0,0,1,'34',0,6]);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','Name','TAS > TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','Country/region','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','Summary Record > Payer Account Number','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','','3',0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',1,0,'9','9',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','Bank SWIFT Code','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > SWIFT Code','Summary Record > Payer Routing Number','SWIFT Code related to Bank',0,'SWIFTNo','','',0,0,1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','SWIFT Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code SWIFT Code','Payee Details > Payee Routing Number','SWIFT Code related to Vendor','1','SWIFTNo','','','3',0,1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','1','RegistrationNum','','','3',0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Customer bank accounts > General tab > Additional Identification (fast tab) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','1','AccountNum','','',1,0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SEPA-PRL','','IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Customer bank accounts > General tab > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','1','BankIBAN','','',0,0,1,'34',0,6]);

          
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','Country/region','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','Summary Record > Payer Account Number','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','','3',0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',1,0,'9','9',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','Bank SWIFT Code','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > SWIFT Code','Summary Record > Payer Routing Number','SWIFT Code related to Bank',0,'SWIFTNo','','',0,0,1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','SWIFT Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','Payee Details > Payee Routing Number','SWIFT Code related to Vendor','1','SWIFTNo','','','3',0,1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','Routing number','TTAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','1','RegistrationNum','','','3',0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','1','AccountNum','','',1,0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CHK','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','1','BankIBAN','','',0,0,1,'34',0,6]);
  
  
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','Country/region','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','Summary Record > Payer Account Number','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','','3',0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',1,0,'9','9',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','Bank SWIFT Code','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > SWIFT Code','Summary Record > Payer Routing Number','SWIFT Code related to Bank',0,'SWIFTNo','','',0,0,1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','SWIFT Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > SWIFT Code','Payee Details > Payee Routing Number','SWIFT Code related to Vendor','1','SWIFTNo','','','3',0,1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','1','RegistrationNum','','','3',0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','1','AccountNum','','',1,0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','INTL','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','1','BankIBAN','','',0,0,1,'34',0,6]);
  
  
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','Country/region','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','Summary Record > Payer Account Number','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','','3',0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',1,0,'9','9',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','Bank SWIFT Code','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > SWIFT Code','Summary Record > Payer Routing Number','SWIFT Code related to Bank',0,'SWIFTNo','','',0,0,1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','SWIFT Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > SWIFT Code','Payee Details > Payee Routing Number','SWIFT Code related to Vendor','1','SWIFTNo','','','3',0,1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','1','RegistrationNum','','','3',0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','1','AccountNum','','',1,0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','SIN-UNI','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','1','BankIBAN','','',0,0,1,'34',0,6]);
  
  
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','Country/region','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','Summary Record > Payer Account Number','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','','3',0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',1,0,'9','9',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','Bank SWIFT Code','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > SWIFT Code','Summary Record > Payer Routing Number','SWIFT Code related to Bank',0,'SWIFTNo','','',0,0,1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','SWIFT Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > SWIFT Code','Payee Details > Payee Routing Number','SWIFT Code related to Vendor','1','SWIFTNo','','','3',0,1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','1','RegistrationNum','','','3',0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','1','AccountNum','','',1,0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-UNI','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','1','BankIBAN','','',0,0,1,'34',0,6]);
  
  
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','Country/region','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','Summary Record > Payer Account Number','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','','3',0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',1,0,'9','9',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','Bank SWIFT Code','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > SWIFT Code','Summary Record > Payer Routing Number','SWIFT Code related to Bank',0,'SWIFTNo','','',0,0,1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','SWIFT Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > SWIFT Code','Payee Details > Payee Routing Number','SWIFT Code related to Vendor','1','SWIFTNo','','','3',0,1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','1','RegistrationNum','','','3',0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','1','AccountNum','','',1,0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','MUL-MASS','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','1','BankIBAN','','',0,0,1,'34',0,6]);
  
  
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','Country/region','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','Summary Record > Payer Account Number','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','','3',0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',1,0,'9','9',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','Bank SWIFT Code','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > SWIFT Code','Summary Record > Payer Routing Number','SWIFT Code related to Bank',0,'SWIFTNo','','',0,0,1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','SWIFT Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > SWIFT Code','Payee Details > Payee Routing Number','SWIFT Code related to Vendor','1','SWIFTNo','','','3',0,1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','1','RegistrationNum','','','3',0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','1','AccountNum','','',1,0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-XML-ES','CONFIRM','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','1','BankIBAN','','',0,0,1,'34',0,6]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['EU-BNP-XML','DlvryMtd','Delivery Method code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['EU-BNP-XML','Charges','Charges']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['EU-BNP-XML','RmtLctnMtd','Remittance location method']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-XML','DlvryMtd','CRCD','CRCD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-XML','DlvryMtd','CRDB','CRDB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-XML','DlvryMtd','CRFA','CRFA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-XML','DlvryMtd','MLCD','MLCD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-XML','DlvryMtd','MLDB','MLDB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-XML','DlvryMtd','MLFA','MLFA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-XML','DlvryMtd','PUCD','PUCD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-XML','DlvryMtd','PUDB','PUDB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-XML','DlvryMtd','PUFA','PUFA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-XML','DlvryMtd','RGCD','RGCD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-XML','DlvryMtd','RGDB','RGDB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-XML','DlvryMtd','RGFA','RGFA']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-XML','Charges','BorneByDebtor','DEBT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-XML','Charges','BorneByCreditor','CRED']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-XML','Charges','Shared','SHAR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-XML','Charges','Service level','SLEV']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-XML','RmtLctnMtd','eMail','EMAL']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('EU-BNP-XML-ES'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_EU_BNP_XML_ES();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_EU_BNP_XML_ES</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_EU_BNP_XML_ES()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-BNP-XML','EU-BNP-XML-ES','CHK','DlvryMtd','Delivery Method',0,'DlvryMtd','',0,'','XXXX','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-BNP-XML','EU-BNP-XML-ES','SIN-UNI','BenBankRC','Beneficiary bank routing code',1,'BenBankRC','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > CdtrAgt > FinInstnId > ClrSysMmbId > ClrSysId > Id']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-BNP-XML','EU-BNP-XML-ES','CHK','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-BNP-XML','EU-BNP-XML-ES','SIN-UNI','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-BNP-XML','EU-BNP-XML-ES','CONFIRM','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-BNP-XML','EU-BNP-XML-ES','SEPA-NOR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-BNP-XML','EU-BNP-XML-ES','SEPA-PRL','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-BNP-XML','EU-BNP-XML-ES','MUL-UNI','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-BNP-XML','EU-BNP-XML-ES','MUL-MASS','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-BNP-XML','EU-BNP-XML-ES','CONFIRM','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','PaymSpecFields','INTL','BenBankRC','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatNotes','INTL','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SEPA-NOR','15','WOrdPartyAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SEPA-NOR','15','WOrdPartyZipCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SEPA-NOR','15','WOrdPartyCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SEPA-NOR','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SEPA-NOR','16','WBeneZipPostal']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SEPA-NOR','16','WBeneCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SEPA-NOR','16','WBeneCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SEPA-PRL','15','WOrdPartyAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SEPA-PRL','15','WOrdPartyZipCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SEPA-PRL','15','WOrdPartyCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SEPA-PRL','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SEPA-PRL','16','WBeneZipPostal']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SEPA-PRL','16','WBeneCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SEPA-PRL','16','WBeneCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','CHK','15','WOrdPartyAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','CHK','15','WOrdPartyZipCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','CHK','15','WOrdPartyCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','CHK','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','CHK','16','WBeneZipPostal']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','CHK','16','WBeneCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','CHK','16','WBeneCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','INTL','15','WOrdPartyAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','INTL','15','WOrdPartyZipCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','INTL','15','WOrdPartyCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','INTL','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','INTL','16','WBeneZipPostal']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','INTL','16','WBeneCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','INTL','16','WBeneCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SIN-UNI','15','WOrdPartyAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SIN-UNI','15','WOrdPartyZipCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SIN-UNI','15','WOrdPartyCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SIN-UNI','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SIN-UNI','16','WBeneZipPostal']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SIN-UNI','16','WBeneCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SIN-UNI','16','WBeneCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','MUL-UNI','15','WOrdPartyAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','MUL-UNI','15','WOrdPartyZipCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','MUL-UNI','15','WOrdPartyCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','MUL-UNI','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','MUL-UNI','16','WBeneZipPostal']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','MUL-UNI','16','WBeneCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','MUL-UNI','16','WBeneCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','MUL-MASS','15','WOrdPartyAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','MUL-MASS','15','WOrdPartyZipCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','MUL-MASS','15','WOrdPartyCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','MUL-MASS','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','MUL-MASS','16','WBeneZipPostal']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','MUL-MASS','16','WBeneCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','MUL-MASS','16','WBeneCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','CONFIRM','15','WOrdPartyAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','CONFIRM','15','WOrdPartyZipCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','CONFIRM','15','WOrdPartyCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','CONFIRM','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','CONFIRM','16','WBeneZipPostal']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','CONFIRM','16','WBeneCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','CONFIRM','16','WBeneCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-NOR','15','WOrdPartyAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-NOR','15','WOrdPartyCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-NOR','15','WOrdPartyZipCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-NOR','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-NOR','16','WBeneZipPostal']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-NOR','16','WBeneCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-URG','15','WOrdPartyAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-URG','15','WOrdPartyCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-URG','15','WOrdPartyZipCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-URG','16','WBeneCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-URG','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-URG','16','WBeneZipPostal']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-URG','16','WBeneCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-INTC','15','WOrdPartyAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-INTC','15','WOrdPartyCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-INTC','15','WOrdPartyZipCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-INTC','16','WBeneCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-INTC','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-INTC','16','WBeneZipPostal']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-INTC','16','WBeneCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-PRL','15','WOrdPartyAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-PRL','15','WOrdPartyCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-PRL','15','WOrdPartyZipCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-PRL','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-PRL','16','WBeneZipPostal']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','SEPA-PRL','16','WBeneCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','INTL','15','WOrdPartyAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','INTL','15','WOrdPartyCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','INTL','15','WOrdPartyZipCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','INTL','16','WBeneCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','INTL','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','INTL','16','WBeneZipPostal']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML','FormatValidations','INTL','16','WBeneCity']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SEPA-NOR','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','*','FormatValidations','*','16','WChargesIndic']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-XML','EU-BNP-XML-ES','FormatValidations','SEPA-NOR','0','']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('EU-BNP-XML-ES'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_EU_BNP_XML_ES();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_EU_BNP_XML_ES</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_EU_BNP_XML_ES()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-BNP-XML','EU-BNP-XML-ES','CIFNIFCode','CIF or NIF code',1,'CIFNIFCode','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > Dbtr > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('EU-BNP-XML-ES'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('CIFNIFCode', gSKS_EFT_Bank.W01);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('EU-BNP-XML-ES'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>