<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_CH_SIX_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_CH_SIX_XML extends SKS_EFT_Format_ISO_20022_001001003
/// </summary>
class SKS_EFT_Format_CH_SIX_XML extends SKS_EFT_Format_ISO_20022_001001003_FD
{
    #define.FormatVersion('20220902')
    #define.ZA1('ZA1')
    #define.ZA2_1('ZA2-1')
    #define.ZA2_2('ZA2-2')
    #define.ZA3('ZA3')
    #define.ZA4('ZA4')
    #define.ZA5('ZA5')
    #define.ZA6('ZA6')
    #define.QRR('QRR')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty(XmlElement _nodeGrpHdr)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          Nm
        //          Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeInitgPty;
        XmlElement nodeCtctDtls;

        //      1.8: InitgPty
        nodeInitgPty = _nodeGrpHdr.appendChild(xmlDoc.createElement('InitgPty'));

        //          Nm
        this.node_GrpHdr_InitgPty_Nm(nodeInitgPty);

        if(mSKS_EFT_FileDetail.TransactionCode == #ZA3  ||
            mSKS_EFT_FileDetail.PaymSpec == 'ZA4-HIGH'  ||
            mSKS_EFT_FileDetail.PaymSpec == 'ZA6-HIGH'  ||
            mSKS_EFT_FileDetail.TransactionCode == #QRR)
        {
            if(mSKS_EFT_FileDetail.TransactionCode != #QRR)
            {
                //          Id
                this.node_GrpHdr_InitgPty_Id(nodeInitgPty);
            }

            nodeCtctDtls = nodeInitgPty.appendChild(xmlDoc.createElement('CtctDtls'));

            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtctDtls, 'Nm', mSKS_EFT_FileDetail_BankAccount.WOrdPartyName, 70);
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_Id</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty_Id(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          9.1.12: Id
        //              9.1.13: OrgId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOthr;
        str InitiatingPartyId;

        InitiatingPartyId = SKS_EFT_Format::getCodelookupvalue('InitiatingPartyId', mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookupBank);
    
        this.getSKS_EFT_FileFormatPaymSpec();
    
        if(InitiatingPartyId || mSKS_EFT_FileDetail_BankAccount.WOrdPartySWIFTNo)
        {
            //          9.1.12: Id
            nodeId = _nodeInitgPty.appendChild(xmlDoc.createElement('Id'));
    
            //              9.1.13: OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            if(mSKS_EFT_FileDetail_BankAccount.WOrdPartySWIFTNo)//SKS_VSTS_14811
            {
                //                  9.1.14: BICOrBEI
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOrgId, 'BICOrBEI', mSKS_EFT_FileDetail_BankAccount.WOrdPartySWIFTNo, 11);
            }
            else
            {
                //                      9.1.15 Othr
                nodeOthr = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
                //                              Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', this.CharacterReplacement(InitiatingPartyId));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  IBAN
        //------------------------------------------------------------------------------------------------------

        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
        XmlElement nodeAcct;
        VendBankAccount vendBankAccount;
        vendBankAccount = VendBankAccount::findByCompany(msks_eft_FileDetail.AccountCompany, msks_eft_FileDetail.AccountNum, msks_eft_FileDetail.DepBankAccountId);//DevOps20059

        if(mSKS_EFT_FileDetail.DepBankIBAN || mSKS_EFT_FileDetail.DepBankAcct || vendBankAccount.QRIBAN_CH)
        {
            //          2.80: CdtrAcct
            nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));

            //              Id
            nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));

            
            if( mSKS_EFT_FileFormatPaymSpec.TransactionCode == #QRR)//DevOps20059
            {
                if(vendBankAccount.QRIBAN_CH && mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId=='CHE')
                {
                    //                  QR IBAN
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', vendBankAccount.QRIBAN_CH);
                }
                else if(mSKS_EFT_FileDetail.DepBankIBAN && mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId != 'CHE')
                {
                    //                  IBAN
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN);
                }
                else if(mSKS_EFT_FileDetail.DepBankAcct)
                {
                    //                  Othr
                    nodeAcct = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));

                    //                   Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAcct, 'Id', mSKS_EFT_FileDetail.DepBankAcct);
                }
            }
            else if(mSKS_EFT_FileDetail.DepBankIBAN &&
              (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA3      ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA4      ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA5      ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA6      ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA2_2))
            {
                //                  IBAN
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN);
            }
            else if(mSKS_EFT_FileDetail.DepBankAcct &&
                    (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA3      ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA1      ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA4      ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA6      ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA2_1    ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA2_2))
            {
                //                  Othr
                nodeAcct = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));

                //                   Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAcct, 'Id', mSKS_EFT_FileDetail.DepBankAcct);
                
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
        XmlElement nodeClrSysId;

        if((mSKS_EFT_FileDetail.DepSwiftNo || mSKS_EFT_FileDetail.DepBankTransit) &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ZA1 &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ZA2_1 &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #QRR)
        {
            //          2.77: CdtrAgt
            nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));
            //              FinInstnId
            nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));

            if(mSKS_EFT_FileDetail.DepSwiftNo)
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo);
            }

            else if(mSKS_EFT_FileDetail.DepBankTransit && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ZA5)
            {
                //          ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                //              ClrSysId
                nodeClrSysId = nodeClrSysMmbId.appendChild(xmlDoc.createElement('ClrSysId'));
                
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA6)
                {
                    //                  Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', 'ITNCC');
                }
                else
                {
                    //                  Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', 'CHBCC');
                }

                //          MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit);
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA2_2 && mSKS_EFT_FileDetail.DepBankAcct)
            {
                //                  Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', mSKS_EFT_FileDetail_BenBank.BenBankName, 70, false);

                //                  Othr
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('Othr'));

                //                      Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'Id', mSKS_EFT_FileDetail.DepBankAcct, 35);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt1</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_IntrmyAgt1(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.71: IntrmyAgt1
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                      MmbId
        //                  Nm
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------

        XmlElement nodeIntrmyAgt1;
        XmlElement nodeFinInstnId;

        if(mSKS_EFT_FileDetail_Intermediary.IntBankSwift != '' &&
           (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA4 ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA6))
        {
            //          2.71: IntrmyAgt1
            nodeIntrmyAgt1 = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt1'));

            //              FinInstnId
            nodeFinInstnId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('FinInstnId'));

            //                  BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC',mSKS_EFT_FileDetail_Intermediary.IntBankSwift);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_PmtId</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_PmtId(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.28: PmtId
        //                  InstrId
        //              2.30: EndToEndId
        //------------------------------------------------------------------------------------------------------

        XmlElement nodePmtId;

        //          2.28: PmtId
        nodePmtId = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('PmtId'));


        //                  InstrId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'InstrId', SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 35));

        //              2.30: EndToEndId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId', SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 35));
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #ZA3:
            case #ZA4:
            case #ZA6:
            case #ZA2_1:
            case #ZA2_2:
                this.node_CdtTrfTxInf_RmtInf_Ustrd(_nodeCdtTrfTxInf);
                break;
            case #ZA5:
            case #ZA1:
            case #QRR:
                this.node_CdtTrfTxInf_RmtInf_Strd(_nodeCdtTrfTxInf);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_Strd</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf_Strd(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeRmtInf;
        XmlElement nodeStrd;
        XmlElement nodeCdtrRefInf;
        XmlElement nodeTp;
        XmlElement nodeCdOrPrtry;
        VendTrans  vendTrans;
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        vendTrans = null;
        LedgerJournalTrans ledgerJournalTrans;
        
        
        while select PaymId, VendTransRecId from  invSKS_EFT_FileDetail where
            invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId && invSKS_EFT_FileDetail.InvoiceNumber != ''
        {
            select firstonly PaymentNotes from ledgerJournalTrans where ledgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;

            if(invSKS_EFT_FileDetail.PaymId || ledgerJournalTrans.PaymentNotes)
            {
                //          2.98: RmtInf
                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                //              2.100: Strd
                nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));

                if(invSKS_EFT_FileDetail.PaymId)
                {
                    //          2.120: CdtrRefInf
                    nodeCdtrRefInf = nodeStrd.appendChild(xmlDoc.createElement('CdtrRefInf'));

                    if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA5)
                    {
                        //              2.121: Tp
                        nodeTp = nodeCdtrRefInf.appendChild(xmlDoc.createElement('Tp'));

                        //                  2.122: CdOrPrtry
                        nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));

                        //                      2.123: Cd
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'SCOR');
                    }
                    else if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == #QRR)
                    {
                        //              2.121: Tp
                        nodeTp = nodeCdtrRefInf.appendChild(xmlDoc.createElement('Tp'));

                        //                  2.122: CdOrPrtry
                        nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));

                        //                      2.123: Cd
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Prtry', #QRR);
                    }

                    //               2.126: Ref
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', invSKS_EFT_FileDetail.PaymId, 0, false);
                }
                if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == #QRR  &&
                    ledgerJournalTrans.PaymentNotes)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeStrd, 'AddtlRmtInf', ledgerJournalTrans.PaymentNotes);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_Ustrd</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf_Ustrd(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeRmtInf;
        str invNumbers;

        invNumbers = this.getInvoiceNbrs();

        if(invNumbers)
        {
            //          2.98: RmtInf
            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

            //              2.99: Ustrd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf()
    {
        //------------------------------------------------------------------------------------------------------
        //  2.0: PmtInf
        //      2.1: PmtInfId
        //      2.2: PmtMtd
        //      2.4: NbOfTxs
        //           BtchBookg
        //      2.5: CtrlSum
        //      2.6: PmtTpInf
        //      2.17: ReqdExctnDt
        //      2.19: Dbtr
        //      2.20: DbtrAcct
        //      2.21: DbtrAgt
        //------------------------------------------------------------------------------------------------------
        batchCount++;

        //  2.0: PmtInf
        nodePmtInf = nodeRoot.appendChild(xmlDoc.createElement('PmtInf'));

        //      2.1: PmtInfId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtInfId', SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr + '-' + int2str(batchCount),35));

        //      2.2: PmtMtd
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'TRF');

        //      2.3: BtchBookg
        this.node_PmtInf_BtchBookg(nodePmtInf);

        //      2.6: PmtTpInf
        this.node_PmtInf_PmtTpInf(nodePmtInf);

        //      2.17: ReqdExctnDt
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'ReqdExctnDt', SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate, DateSeparator::Hyphen));

        this.node_PmtInf_DbtrNodes(nodePmtInf);

        //      2.24 ChrgBr
        this.node_PmtInf_ChrgBr(nodePmtInf);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_BtchBookg</Name>
				<Source><![CDATA[
    protected void node_PmtInf_BtchBookg(XmlElement _BtchBookg)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.3: BtchBookg
        //------------------------------------------------------------------------------------------------------
       
        //              2.3: BtchBookg
        str btchbkg;

        btchbkg = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Btchbkg', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        if(strUpr(btchbkg) == 'Y')
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _BtchBookg, 'BtchBookg', 'true');
        }
        else if(strUpr(btchbkg) == 'N')
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _BtchBookg, 'BtchBookg', 'false');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA5  ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA6)
        {
            this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity, 0, mRemittanceAdrline2);
        }
        else
        {
            this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity, 0, mRemittanceAdrline2, mRemittanceState, true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_ChrgBr(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.24 ChrgBr
        //------------------------------------------------------------------------------------------------------

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA5)
        {
            //      2.24 ChrgBr
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'ChrgBr', 'SLEV');
        }
        else
        {
            //      2.24 ChrgBr
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'ChrgBr', this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Chrgbr', mSKS_EFT_FileDetail.RecId)),0,false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          Nm
        //------------------------------------------------------------------------------------------------------

        XmlElement nodeDbtr;

        //      2.19: Dbtr
        nodeDbtr = nodePmtInf.appendChild(xmlDoc.createElement('Dbtr'));

        //          Nm
        this.node_PmtInf_Dbtr_Nm(nodeDbtr);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Nm</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Nm(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          Nm
        //------------------------------------------------------------------------------------------------------
    
        //          Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeDbtr, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName), 70, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: DbtrAcct
        //          Id
        //              IBAN

        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;
        XmlElement nodeOthr;
        XmlElement nodeDbtrAcctTp;
        str btchbkg;

        btchbkg = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Btchbkg', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));//DevOps20059


        if(mSKS_EFT_FileDetail.BankBankIBAN  || mSKS_EFT_FileDetail.BankBankAcct)
        {
            //      2.20: DbtrAcct
            nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));

            //          Id
            nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));

            if(mSKS_EFT_FileDetail.BankBankIBAN )
            {
                //              IBAN
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN',mSKS_EFT_FileDetail.BankBankIBAN );
            }
            else
            {
                //              Othr
                nodeOthr = nodeDbtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
                //                  Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.BankBankAcct);
            }
            if(mSKS_EFT_FileFormatPaymSpec.PaymSpec==#QRR && strUpr(btchbkg)=='Y')//DevOps20059
            {
                nodeDbtrAcctTp = nodeDbtrAcct.appendChild(xmlDoc.createElement('Tp'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctTp, 'Prtry', 'CWD');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.21: DbtrAgt
        //          FinInstnId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmBId;
        XmlElement nodeClrSysId;

        if(mSKS_EFT_FileDetail.BankBankSwiftNo || mSKS_EFT_FileDetail.BankBankTransit)
        {
            //      2.21: DbtrAgt
            nodeDbtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAgt'));

            //          FinInstnId
            nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));

            if(mSKS_EFT_FileDetail.BankBankSwiftNo)
            {
                //          BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.BankBankSwiftNo);
            }

            else if(mSKS_EFT_FileDetail.BankBankTransit)
            {
                //              ClrSysMmbId
                nodeClrSysMmBId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                //              ClrSysId
                nodeClrSysId = nodeClrSysMmbId.appendChild(xmlDoc.createElement('ClrSysId'));

                //                  Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', 'CHBCC');

                //          MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.BankBankTransit);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.6: PmtTpInf
        //          2.7: InstrPrty
        //          2.8: SvcLvl
        //          2.11: LclInstrm
        //          2.14: CtgyPurp
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePmtTpInf;
        XmlElement nodeSvcLvl;
        XmlElement nodeLclInstrm;
        str value;
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ZA4 &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ZA6  &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ZA3 &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #QRR)
        {
            //      2.6: PmtTpInf
            nodePmtTpInf = _nodePmtInf.appendChild(xmlDoc.createElement('PmtTpInf'));

            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA5)
            {
                //          2.8: SvcLvl
                nodeSvcLvl = nodePmtTpInf.appendChild(xmlDoc.createElement('SvcLvl'));
    
                //              2.9: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSvcLvl, 'Cd', 'SEPA');
            }

            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA1   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA2_1 ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA2_2)
            {
                //              LclInstrm
                nodeLclInstrm = nodePmtTpInf.appendChild(xmlDoc.createElement('LclInstrm'));
            
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ZA1:
                        value = 'CH01';
                        break;
                    case #ZA2_1:
                        value = 'CH02';
                        break;
                    case #ZA2_2:
                        value = 'CH03';
                        break;
                }

                //                  Prtry
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Prtry', value);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'ZA3-HIGH' ||mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'ZA4-HIGH'||mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'ZA6-HIGH' || mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'ZA3' )
        {
            str value1;
         
            //      2.6: PmtTpInf
            nodePmtTpInf = _nodePmtInf.appendChild(xmlDoc.createElement('PmtTpInf'));
            switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
            {
               
                case 'ZA3':
                    value1    = 'NORM';
                    break;
              
                case 'ZA3-HIGH':
                case 'ZA4-HIGH':
                case 'ZA6-HIGH':
                    value1 = 'HIGH';
                    break;
            }

            if(value1)
            {
                //                InstrPrtry
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtTpInf, 'InstrPrty', value1, 0, false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_MessageRoot</Name>
				<Source><![CDATA[
    protected void node_MessageRoot()
    {
        nodeRoot = xmlDoc.appendChild(xmlDoc.createElement('Document'));
        SKS_EFT_Format::xmlsetAttributeText(nodeRoot, 'xmlns:schemaLocation', 'http://www.six-interbank-clearing.com/de/pain.001.001.03.ch.02.xsd pain.001.001.03.ch.02.xsd');
        SKS_EFT_Format::xmlsetAttributeText(nodeRoot, 'xmlns:xsi', 'http://www.w3.org/2001/XMLSchema-instance');
        SKS_EFT_Format::xmlsetAttributeText(nodeRoot, 'xmlns', 'http://www.six-interbank-clearing.com/de/pain.001.001.03.ch.02.xsd');
        nodeRoot = nodeRoot.appendChild(xmlDoc.createElement('CstmrCdtTrfInitn'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]

    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
          order by mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
        join mSKS_EFT_FileDetail_Intermediary
        join mSKS_EFT_FileDetail_BankAccount
        join mSKS_EFT_FileDetail_VendAddress
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail_Intermediary.RefRecId == mSKS_EFT_FileDetail.RecId &&
                mSKS_EFT_FileDetail_BankAccount.RefRecId == mSKS_EFT_FileDetail.RecId &&
                mSKS_EFT_FileDetail_VendAddress.RefRecId == mSKS_EFT_FileDetail.RecId;
            
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>