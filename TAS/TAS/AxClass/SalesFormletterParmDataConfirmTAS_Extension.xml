<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesFormletterParmDataConfirmTAS_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(ClassStr(SalesFormletterParmDataConfirm))]
final class SalesFormletterParmDataConfirmTAS_Extension
{
    

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mcrAllowCreateParmLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether the specified sales line should be allowed to be
    ///     included on sales order confirmations.
    /// </summary>
    /// <param name="_salesLine">
    ///     The <c>SalesLine</c> record for which this method includes on
    ///     sales order confirmation or not.
    /// </param>
    /// <param name="_salesTable">
    ///     The sales order header record associated with the <c>SalesLine</c>.
    /// </param>
    /// <returns>
    ///     true if the sales order line should be included on the sales order confirmation;
    ///     otherwise, false.
    /// </returns>
    /// <remarks>
    ///     SKS-CCA: IF parameter to use confirmation is set then check if the
    ///     authorization on the payment record (in case of a credit card payment) is stale.
    ///     If auth is stale do not allow.
    ///     Do not process continuity item lines.
    ///     Do not process continuity child orders with payment issues.
    /// </remarks>
    protected boolean mcrAllowCreateParmLine(SalesLine _salesLine, salesTable _salesTable)
    {
        boolean allowCreateParmLine = next mcrAllowCreateParmLine(_salesLine, _salesTable);
     
        SKS_PP_Setup sKS_PP_SetupLocal = SKS_PP_Setup::find();        
        if (allowCreateParmLine && sKS_PP_SetupLocal.ModCC == NoYes::Yes && sKS_PP_SetupLocal.CCAutoPreAuthOnSalesOrderConf == NoYes::Yes)
        {
            if (RetailMCRChannelTable::mcrEnableOrderCompletion(_salesTable))
            {
                if (allowCreateParmLine
                    && !this.mcrAllowCreateCheck(_salesLine, _salesTable))
                {
                    allowCreateParmLine = false;
                }

                // Do not allow the continuity order lines with payment issues to be processed.
                if (allowCreateParmLine
                    && !_salesLine.mcrCanContinuityLinePick())
                {
                    allowCreateParmLine = false;
                }

                // If a transaction is being paid for by a credit card, check to see
                // if the credit card authorization for that card is not stale. If
                // the authorization is stale, then the sales order should be moved
                // to pending the authorization status set back to reauthorize
                if (allowCreateParmLine)
                {
                    allowCreateParmLine = MCRCustPaymTable::processIfAuthStale(_salesTable.RecId);
                }
            }
        }

        return allowCreateParmLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>