<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_BOA_PAYMODEX_FIXED</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_BOA_PAYMODEX_FIXED Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_BOA_PAYMODEX_FIXED Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220614';
        dataContractVersion = '1.0';
        conFormatID = ['US-BOA-PAYMODEX-FIXED'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'US - Bank of America - Paymode - X - Fixed File',0,'','','US-BOA-PAYMODEX-FIXED',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,1,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-BOA-PAYMODEX-FIXED',0,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-BOA-PAYMODEX-FIXED'):
                paymSpecList = this.getPaymSpecsMetaData_US_BOA_PAYMODEX_FIXED();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_BOA_PAYMODEX_FIXED</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_BOA_PAYMODEX_FIXED()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check',1,'CHK','','CHK','TRADE PAY',0,'US-BOA-PAYMODEX-FIXED',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH',1,'ACH','','ACH','DIRECT PAY',0,'US-BOA-PAYMODEX-FIXED',0,0,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-BOA-PAYMODEX-FIXED'):
                notesList = this.getNotesMetaData_US_BOA_PAYMODEX_FIXED();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_BOA_PAYMODEX_FIXED</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_BOA_PAYMODEX_FIXED()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-PAYMODEX-FIXED','CHK','-Vendor bank debit is not supported by this format.:-Divert indicator is stored in the Account info tab of Vendor eBanking details > Payment specification defaults.:-Additional payment information may be stored in the Payment ID field on the Invoice journal.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-PAYMODEX-FIXED','ACH','-Vendor bank debit is not supported by this format.:-Divert indicator is stored in the Account info tab of Vendor eBanking details > Payment specification defaults.:-Additional payment information may be stored in the Payment ID field on the Invoice journal.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-BOA-PAYMODEX-FIXED'):
                validationsList = this.getValidationsMetaData_US_BOA_PAYMODEX_FIXED();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_BOA_PAYMODEX_FIXED</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_BOA_PAYMODEX_FIXED()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-PAYMODEX-FIXED','CHK','','Name','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Remittance Location','GAP700P type Records > 9th Position > Vendor Name','Vendor Name','12','Name','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-PAYMODEX-FIXED','CHK','','Address','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address Tab > Street','GAP700P type Records > 11th and 12th Position > Vendor Address Line 1 and 2','Vendor Address Line 1 and 2','10','Street','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-PAYMODEX-FIXED','CHK','','City','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address Tab > City','GAP700P type Records > 14th Position > Vendor City','Vendor City','10','City','','',0,1,1,'15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-PAYMODEX-FIXED','CHK','','State','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address Tab > State','GAP700P type Records > 15th Position > Vendor State','Vendor State','10','State','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-PAYMODEX-FIXED','CHK','','ZIP/Postal Code','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address Tab > ZIP/Postal','GAP700P type Records > 16th Position > Vendor Zip','Vendor Zip','10','ZipCode','','',0,1,1,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-PAYMODEX-FIXED','CHK','','Country/Region','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address Tab > Country/Region','GAP700P type Records > 17th Position > Vendor Country','Vendor Country','10','CountryRegionId','','',0,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-PAYMODEX-FIXED','CHK','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','GAP700P type Records > 4th Position > Transit Number','Disbursing Bank ID (ABA Routing Transit',0,'RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-PAYMODEX-FIXED','CHK','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','GAP700P type Records > 5th Position > Bank Account','Bank Account',0,'AccountNum','','',0,0,1,'17',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-PAYMODEX-FIXED','ACH','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','GAP700P type Records > 9th Position > Beneficiary Name','Beneficiary Name','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-PAYMODEX-FIXED','ACH','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','GAP700P type Records > 11th Position > Vendor Address Line 1','Vendor Address Line 1','16','WBeneAddr','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-PAYMODEX-FIXED','ACH','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','GAP700P type Records > 12th and 13th Position > Vendor Address Line 2','Vendor Address Line 2','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-PAYMODEX-FIXED','ACH','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','GAP700P type Records > 14th Position > Vendor City','Vendor City','16','WBeneCity','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-PAYMODEX-FIXED','ACH','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','GAP700P type Records > 15th Position > Vendor State','Vendor State','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-PAYMODEX-FIXED','ACH','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','GAP700P type Records > 16th Position > Vendor Zip','Vendor Zip','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-PAYMODEX-FIXED','ACH','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','GAP700P type Records > 17th Position > Vendor Country','Vendor Country','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-PAYMODEX-FIXED','ACH','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','GAP700P type Records > 4th Position > Transit Number','Disbursing Bank ID (ABA Routing Transit',0,'RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-PAYMODEX-FIXED','ACH','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','GAP700P type Records > 5th Position > Bank Account','Bank Account',0,'AccountNum','','',0,0,1,'17',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('US-BOA-PAYMODEX-FIXED'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_BOA_PAYMODEX_FIXED();
                break;
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_BOA_PAYMODEX_FIXED</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_BOA_PAYMODEX_FIXED()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-PAYMODEX-FIXED','US-BOA-PAYMODEX-FIXED','CHK','CollctngPaymodexId','Collecting Paymode-X id',1,'CollctngPaymodexId','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXX','GAP700P type Records > 6th Position > Vendor Account ID']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-PAYMODEX-FIXED','US-BOA-PAYMODEX-FIXED','ACH','CollctngPaymodexId','Collecting Paymode-X id',1,'CollctngPaymodexId','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXX','GAP700P type Records > 6th Position > Vendor Account ID']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-PAYMODEX-FIXED','US-BOA-PAYMODEX-FIXED','CHK','DivertIndicator','Divert indicator',1,'DivertIndicator','',0,'','XXXXX','GAP700P type Records > 18th Position > Divert Indicator']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-PAYMODEX-FIXED','US-BOA-PAYMODEX-FIXED','ACH','DivertIndicator','Divert indicator',1,'DivertIndicator','',0,'','XXXXX','GAP700P type Records > 18th Position > Divert Indicator']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-PAYMODEX-FIXED','US-BOA-PAYMODEX-FIXED','FormatValidations','*','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-PAYMODEX-FIXED','US-BOA-PAYMODEX-FIXED','FormatValidations','*','16','BE01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-PAYMODEX-FIXED','US-BOA-PAYMODEX-FIXED','FormatValidations','*','16','BE02']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch(_formatID)
        {
            case ('US-BOA-PAYMODEX-FIXED'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_BOA_PAYMODEX_FIXED();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_BOA_PAYMODEX_FIXED</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_BOA_PAYMODEX_FIXED()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-PAYMODEX-FIXED','US-BOA-PAYMODEX-FIXED','PaymodexId','Disbursing Paymode-X id',1,'PaymodexId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GAP700P type Records > 3th Position > Disbursing Paymode-X ID']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        if(gSKS_EFT_Bank.W01)
        {
            this.updateBankFields('PaymodexId', gSKS_EFT_Bank.W01);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vednor code lookpus from BE0X and Legacu code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        if(gSKS_EFT_VendorPaym.BE01)
        {
            this.updateVendorFields('CollctngPaymodexId', gSKS_EFT_VendorPaym.BE01);
        }
        if(gSKS_EFT_VendorPaym.BE02)
        {
            this.updateVendorFields('DivertIndicator', gSKS_EFT_VendorPaym.BE02);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>