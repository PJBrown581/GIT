<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_CO_HELMBANK_426</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_CO_HELMBANK_426 extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_CO_HELMBANK_426 extends SKS_EFT_Format
{
    #define.FormatVersion('20220330')
    #define.ACH('ACH')
    int seqNum;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_Bank
            this.getSKS_EFT_Bank();

            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();

            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            // Company identification record
            this.rec_TransactionFile();

            next mSKS_EFT_FileDetail;
        }
        seqNum = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_TransactionFile</Name>
				<Source><![CDATA[
    public boolean rec_TransactionFile()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Description                                                     Length      Position
        // 1    Registration identifier                                          1          (  1 -   1)
        // 2    Sequence                                                         4          (  2 -   5)
        // 3    Date of transaction                                              6          (  6 -  11)
        // 4    Identification Type                                              2          ( 12 -  13)
        // 5    Identification number from the vendor / third party              15         ( 14 -  28)
        // 6    Name of the vendor / third party                                 22         ( 29 -  51)
        // 7    Official signal                                                  1          ( 52 -  52)
        // 8    Office code for check delivery                                   3          ( 53 -  55)
        // 9    Vendor / third party Bank code                                   3          ( 56 -  58)
        //10    Vendor / third party Type of account                             3          ( 59 -  61)
        //11    Vendor / third party Account number                              17         ( 62 -  78)        
        //12    Transaction type                                                 2          ( 79 -  80)
        //13    Value                                                            14         ( 81 -  94)
        //14    Reference                                                        20         ( 95 -  114)
        //15    Observation                                                      80         ( 115 - 194)
        //16    E-mail from vendor / third party                                 100        ( 195 - 294)            
        //17    Phone 1 of vendor / third party                                  14         ( 295 - 308)    
        //18    Telephone 2 of vendor / third party                              14         ( 309 - 322)
        //19    Fax number of the vendor / third party                           14         ( 323 - 336)
        //20    Address of the vendor / third party                              40         ( 337 - 376)
        //21    Vendor / third party Country                                     4          ( 377 - 380)
        //22    Dept. Of the vendor / third party                                4          ( 381 - 384)
        //23    City of vendor / third party                                     5          ( 385 - 389)
        //24    Type of identification of client                                 2          ( 390 - 391)
        //25    Customerâ€™s Identification #                                      15         ( 392 - 406)
        //26    Customer account type                                            3          ( 407 - 409)
        //27    Account number                                                   17         ( 410 - 426)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();        
        str address, idType, primaryEmail;
        
        seqNum++;
        // 1    Registration identifier                                          1          (  1 -   1)
        sb.Append('1');

        // 2    Sequence                                                         5          (  2 -   6)
        sb.Append(SKS_PP_StringFormats::strFill(5, num2Str(seqNum, 0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 3    Date of transaction                                              6          (  7 -  12)
        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(mSKS_EFT_FileDetail.EffectiveDate));

        // 4    Identification Type                                              2          ( 13 -  14)
        idType = this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('IdentificationType', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId));
        sb.Append(SKS_PP_StringFormats::strFill(2, idType, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 5    Identification number from the vendor / third party              15         ( 15 -  29)
        sb.Append(SKS_PP_StringFormats::strFill(15, this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('IdentificationNum', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 6    Name of the vendor / third party                                 22         ( 30 -  51)
        sb.Append(SKS_PP_StringFormats::strFill(22, this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 7    Official signal                                                  1          ( 52 -  52)
        sb.Append('N');

        // 8    Office code for check delivery                                   3          ( 53 -  55)
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));

        // 9    Vendor / third party Bank code                                   3          ( 56 -  58)
        sb.Append(SKS_PP_StringFormats::strFill(3, this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('BankCode', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 10    Vendor / third party Type of account                             3          ( 59 -  61)
        sb.Append(SKS_PP_StringFormats::strFill(3, this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('VendAcctType', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //11    Vendor / third party Account number                              17         ( 62 -  78)
        sb.Append(SKS_PP_StringFormats::strFill(17, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //12    Transaction type                                                 2          ( 79 -  80)
        if(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur > 0)
        {
            sb.Append('DB');
        }
        else
        {
            sb.Append('CR');
        }

        //13    Value                                                            14         ( 81 -  94)
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur), 14));
        str cmpnyName = 'PAGOS' + mSKS_EFT_Bank.ACHCompanyName;
        //14    Reference                                                        20         ( 95 -  114)
        sb.Append(SKS_PP_StringFormats::strFill(20, cmpnyName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //15    Observation                                                      80         ( 115 - 194)
        sb.Append(SKS_PP_StringFormats::strFill(80, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //16    E-mail from vendor / third party                                 100        ( 195 - 294)
        primaryEmail = LogisticsElectronicAddress::findPrimary(mSKS_EFT_VendorPaym.LogisticsLocationRecID, LogisticsElectronicAddressMethodType::Email).Locator;
        sb.Append(SKS_PP_StringFormats::strFill(100, primaryEmail , SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //17    Phone 1 of vendor / third party                                  14         ( 295 - 308)
        sb.Append(SKS_PP_StringFormats::strFill(14, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //18    Telephone 2 of vendor / third party                              14         ( 309 - 322)
        sb.Append(SKS_PP_StringFormats::strFill(14, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //19    Fax number of the vendor / third party                           14         ( 323 - 336)
        sb.Append(SKS_PP_StringFormats::strFill(14, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //20    Address of the vendor / third party                              40         ( 337 - 376)
        if(mSKS_EFT_VendorPaym.WBeneAddr)
        {
            address += mSKS_EFT_VendorPaym.WBeneAddr;
        }
        if(address)
        {
            address += ' '+ mSKS_EFT_VendorPaym.WBeneAddr2;
        }
        sb.Append(SKS_PP_StringFormats::strFill(40, this.CharacterReplacement(address), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));


        //21    Vendor / third party Country                                     4          ( 377 - 380)
        sb.Append(SKS_PP_StringFormats::strFill(4, this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneCountryRegionId), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //22    Dept. Of the vendor / third party                                4          ( 381 - 384)
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //23    City of vendor / third party                                     5          ( 385 - 389)
        sb.Append(SKS_PP_StringFormats::strFill(5, mSKS_EFT_VendorPaym.WBeneCity, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //24    Type of identification of client                                 2          ( 390 - 391)
        sb.Append('03');

        //25    Customerâ€™s Identification #                                      15         ( 392 - 406)
        str companyIdentifctn;

        companyIdentifctn = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CompanyIdentifctn', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        sb.Append(SKS_PP_StringFormats::strFill(15, this.CharacterReplacement(companyIdentifctn), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //26    Customer account type                                            3          ( 407 - 409)
        sb.Append(SKS_PP_StringFormats::strFill(3, this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('CustAcctType', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //27    Account number                                                   17         ( 410 - 426)
        sb.Append(SKS_PP_StringFormats::strFill(17, mSKS_EFT_FileDetail.BankBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>