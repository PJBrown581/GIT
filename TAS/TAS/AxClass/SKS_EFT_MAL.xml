<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_MAL</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_EFT_MAL extends SKS_EFT_Format
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAddressContactInfo</Name>
				<Source><![CDATA[
    protected str getAddressContactInfo(RemittanceLocation _WBeneRemittanceLocation, LogisticsElectronicAddressMethodType _Type)
    {
        LogisticsLocation           lLogisticsLocation;
        LogisticsElectronicAddress  lLogisticsElectronicAddress;
        ;
    
        select firstonly Location, Locator, Type from lLogisticsElectronicAddress join ParentLocation from lLogisticsLocation
                                             order by lLogisticsElectronicAddress.RecId
                                                where lLogisticsLocation.ParentLocation == _WBeneRemittanceLocation &&
                                                      lLogisticsLocation.RecID == lLogisticsElectronicAddress.Location &&
                                                      lLogisticsElectronicAddress.Locator != '' &&
                                                      lLogisticsElectronicAddress.Type == _Type;
    
        return strRem(lLogisticsElectronicAddress.Locator, '.');
    }

]]></Source>
			</Method>
			<Method>
				<Name>getContactEmail</Name>
				<Source><![CDATA[
    protected str getContactEmail(RecId _RecId)
    {
        LogisticsElectronicAddress lLogisticsElectronicAddress;
        ;
    
        select firstOnly Locator from lLogisticsElectronicAddress where lLogisticsElectronicAddress.RecId == _RecId;
    
        return lLogisticsElectronicAddress.Locator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getContactName</Name>
				<Source><![CDATA[
    protected str getContactName(RecId _RecId)
    {
        LogisticsElectronicAddress lLogisticsElectronicAddress;
        ;
    
        select firstOnly lLogisticsElectronicAddress where lLogisticsElectronicAddress.RecId == _RecId;
    
        return lLogisticsElectronicAddress.Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findElectronicAddressInfoByPartyLocationRole</Name>
				<Source><![CDATA[
    protected str findElectronicAddressInfoByPartyLocationRole(
        DirPartyRecId _party,
        LogisticsLocationRoleName _roleName,
        LogisticsElectronicAddressMethodType _type = LogisticsElectronicAddressMethodType::None)
    {
        DirPartyLocation partyLocation;
        LogisticsLocation logisticsLocation;
        LogisticsLocation logisticsLocationParent;
        LogisticsElectronicAddress logisticsElectronicAddress;

        while select partyLocation where partyLocation.Party == _party
        {
            if(strScan(partyLocation.locationRoleNames(), _roleName, 1, strLen(partyLocation.locationRoleNames())))
            {
                logisticsLocation = logisticsLocation::find(partyLocation.Location);
                if(logisticsLocation.RecId)
                {
                    if(_type != LogisticsElectronicAddressMethodType::None)
                    {
                        select firstonly RecId from logisticsLocationParent join logisticsElectronicAddress
                             where logisticsLocationParent.ParentLocation == logisticsLocation.RecId
                                && logisticsElectronicAddress.Location == logisticsLocationParent.RecId
                                && logisticsElectronicAddress.Type == _type
                                && logisticsElectronicAddress.Locator != '';

                        return logisticsElectronicAddress.Locator;
                    }
                    else
                    {
                        return logisticsLocation.Description;
                    }
                }
            }
        }
        return '';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>