<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_CAPITALONE_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_CAPITALONE_XML extends SKS_PP_Format_BankGroup
{
    XmlDocument gXmlDocument;
    SKS_PP_Bank gSKS_PP_Bank;
    BankAccountTable gBankAccountTable;
    XmlNode gNodeRoot;    
    XmlNode locXMLNode;
    int gNbOfTxs;
    real gCtrlSum;
    boolean gInPmt;
    date gPrevDate;
    SKS_PP_ChequeType gPrevSKS_PP_ChequeType;
    int gPmtInfIdCounter;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtFormatHeader</Name>
				<Source><![CDATA[
    protected str txtFormatHeader()
    {
        gXmlDocument = XmlDocument::newBlank();
        this.node_MessageRoot();

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_MessageRoot</Name>
				<Source><![CDATA[
    protected void node_MessageRoot()
    {
        gNodeRoot = gXmlDocument.appendChild(gXmlDocument.createElement('Chkissues'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>sectionGroupHeader</Name>
				<Source><![CDATA[
    protected void sectionGroupHeader()
    {
        container company;

        if(mPrevBankAccount != mSKS_PP_FileDetail.BnkBankAcct
            || mSKS_PP_FileDetail.ChkDocDate != gPrevDate
            || mSKS_PP_FileDetail.ChkType != gPrevSKS_PP_ChequeType)
        {
            company = [mSKS_PP_FileDetail.ChkCpnyId];
            if(mPrevBankAccount != mSKS_PP_FileDetail.BnkBankAcct)
            {
                gSKS_PP_Bank = null;
                gBankAccountTable = null;
                select crossCompany:company gBankAccountTable
                join gSKS_PP_Bank
                where gSKS_PP_Bank.BankAccountId == gBankAccountTable.AccountID
                    && gSKS_PP_Bank.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;
            }
    
            gPrevDate = mSKS_PP_FileDetail.ChkDocDate;
            gPrevSKS_PP_ChequeType = mSKS_PP_FileDetail.ChkType;              
    
            //locXMLNode = gNodeRoot.selectSingleNode('checks');
            locXMLNode = SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    gNodeRoot,
                    'checks',
                    '',
                    0,
                        true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    protected void selectPaymentRecords()
    {
        select * from mSKS_PP_FileDetail
            order by mSKS_PP_FileDetail.BnkBankAcct,
                    mSKS_PP_FileDetail.ChkDocDate,
                    mSKS_PP_FileDetail.ChkType
            where mSKS_PP_FileDetail.FileNbr == mFileNumber
                    && mSKS_PP_FileDetail.RecSection == SKS_PP_RecSection::Payments;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    public str txtDetail()
    {
        XmlNode locTempNode;
        int Mult = 1;
        str voidIndicator;    
        
        gCtrlSum += mSKS_PP_FileDetail.ChkCuryAmt;
    
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            if(mSKS_PP_FileDetail.ChkCuryAmt < 0)
            {
                Mult = -1;
                voidIndicator = 'V';
            }
        }
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(gXmlDocument, locXMLNode, 'check', '', 0, true);        

        SKS_EFT_Format::xmlAppendChildNodeText(gXmlDocument, locTempNode,'accountnumber', mSKS_PP_FileDetail.BnkBankAcct, 10, true);

        SKS_EFT_Format::xmlAppendChildNodeText(gXmlDocument, locTempNode,'checknumber', mSKS_PP_FileDetail.ChkRefNbr, 10, true);

        SKS_EFT_Format::xmlAppendChildNodeText(gXmlDocument, locTempNode,'checkamount', Num2Str(mSKS_PP_FileDetail.ChkCuryAmt * Mult, 0, 2, 1,0), 10, true);

        SKS_EFT_Format::xmlAppendChildNodeText(gXmlDocument, locTempNode,'issuedate', SKS_PP_StringFormats::strDateYYMMDD(mSKS_PP_FileDetail.ChkDocDate, DateSeparator::None), 6, true);

        SKS_EFT_Format::xmlAppendChildNodeText(gXmlDocument, locTempNode,'payeename', mSKS_PP_FileDetail.VendName, 80, true);
        
        SKS_EFT_Format::xmlAppendChildNodeText(gXmlDocument, locTempNode,'voidindicator', voidIndicator, 1, true);

        
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtFormatTrailer</Name>
				<Source><![CDATA[
    protected str txtFormatTrailer()
    {
        return gXmlDocument.toString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>