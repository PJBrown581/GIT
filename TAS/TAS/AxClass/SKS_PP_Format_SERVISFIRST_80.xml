<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_SERVISFIRST_80</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// PP 80 char Format for SERVIS FIRST bank
/// </summary>
class SKS_PP_Format_SERVISFIRST_80 extends SKS_PP_Format_BankGroup
{
    //Servis First Bank
    //Standard Positive Pay
    //             1-10    10      Serial Number
    //             11-16    6      Issue Date (MMDDYY)
    //             17-26    9      Amount
    //             27-28    2      Constant(01)
    //             29-38   10      Account Number
    //             39-53   15      Payee name
    //             54-80   27      Filler

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        int mult;
        str itemType;
        str amt;
        ;
        sb.Append('');
    
        //Convert negative void numbers to positives
        mult = 1;
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            itemType = '02';
            if(mSKS_PP_FileDetail.chkcuryamt < 0)
            {
                mult = -1;
            }
        }
        else
        {
            itemType = '01';
        }
    
        amt =  SKS_PP_StringFormats::strMoney(mult * mSKS_PP_FileDetail.ChkCuryAmt, 10);
    
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(amt);
        sb.Append(itemtype);
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(15, mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(27, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>