<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_MX_HSBC_TIP_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_MX_HSBC_TIP_CSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_MX_HSBC_TIP_CSV extends SKS_EFT_Format
{
    #define.FormatVersion('20220517')
    int  mBatchCount;
    #define.Separator(',')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        BankAccountId prevBankAccount;
    
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();
    
            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();
    
            if(prevBankAccount != mSKS_EFT_FileDetail.BankAccountId)
            {
                this.rec_Header();
            }
    
            this.rec_Details();
    
            prevBankAccount = mSKS_EFT_FileDetail.BankAccountId;
    
            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Details</Name>
				<Source><![CDATA[
    //  1       Account Type
    //  2       Bank Code
    //  3       Beneficiary Account
    //  4       Beneficiary Name
    //  5       Amount
    //  6       Numeric Reference
    //  7       Alphanumeric Reference
    //  8       Beneficiary  Tax ID*
    //  9       VAT amount*
    //  10      Beneficiary   E-mail*
    boolean rec_Details()
    {
        str accType;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        //  1       Account Type
        accType = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CdtrAcctTp', mSKS_EFT_FileDetail.RecId));

        sb.Append(this.wrapField(accType, true));
    
        //  2       Bank Code
        if(accType == 'CLA')
        {
            sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.DepBankAcct,1,3)));
        }
        else
        {
            sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.DepBankTransit,1,3)));
        }
        //  3       Beneficiary Account
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(20, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));
    
        //  4       Beneficiary Name
        sb.Append(this.wrapField(strRem(subStr(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneName), 1, 40), ',')));
    
        //  5       Amount
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(14, num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0, 2, 1, 0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));
    
        //  6       Numeric Reference
        sb.Append(this.wrapField(subStr(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), strlen(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference)), -7)));
    
        //  7       Alphanumeric Reference
        sb.Append(this.wrapField(strRem(subStr(mSKS_EFT_FileFormatPaymSpec.PaymSpecName, 1, 40), ','), false));
    
        this.fileWrite(sb.ToString());
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Header</Name>
				<Source><![CDATA[
    //  1       Debit Account
    //  2       Value Date
    //  3       Tax ID
    //  4       Currency
    //  5       Batch Number
    boolean rec_Header()
    {
        CompanyInfo  companyInfo;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str batNumber;
    
        mBatchCount++;
    
        //  1       Debit Account
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.BankBankAcct, 1, 10)));
    
        //  2       Value Date
        sb.Append(this.wrapField(date2str(mSKS_EFT_FileDetail.EffectiveDate + 1, 123, DateDay::Digits2, DateSeparator::None, DateMonth::Digits2, DateSeparator::None, DateYear::Digits4, DateFlags::None)));
    
        companyInfo = CompanyInfo::findDataArea(mSKS_EFT_VendorPaym.VendCompany);
    
        //  3        Tax ID
        sb.Append(this.wrapField(strRem(subStr(this.CharacterReplacement(companyInfo.Rfc_MX), 1, 18), ',')));
    
        //  4       Currency
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.PaymentCurrencyCode));
    
        //  5       Batch Number
        batNumber = mSKS_EFT_File.FileNbr + '-' + num2str(mBatchCount, 0 , 0, 0, 0);
        sb.Append(this.wrapField(strRem(subStr(batNumber, strLen(batNumber),-40), ','), false));
    
        this.fileWrite(sb.ToString());
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '', boolean _addSeparator = true)
    {
        str text;
    
        text = _field;
    
        if(_addSeparator)
        {
            text += #Separator;
        }
        return text;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>