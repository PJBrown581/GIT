<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_US_TDBank_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_US_TDBank_XML extends SKS_PP_Format_XML
{
    LogisticsAddressCountryRegion mLogisticsAddressCountryRegion;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>node_MsgId</Name>
				<Source><![CDATA[
    protected XmlNode node_MsgId(XmlNode _XmlNode)
    {
        return  SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    _XmlNode,
                    'MsgId',
                    mSKS_PP_File.FileNbr,
                    9,
                    true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_InitgPty</Name>
				<Source><![CDATA[
    protected XmlNode node_InitgPty(XmlNode _XmlNodel)
    {
    
        XmlNode locTempNode = _XmlNodel;
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locTempNode,
                    'InitgPty',
                    '',
                    0,
                    true);
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locTempNode,
                    'Id',
                    '',
                    0,
                    true);
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locTempNode,
                    'OrgId',
                    '',
                    0,
                    true);
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locTempNode,
                    'Othr',
                    '',
                    true);
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locTempNode,
                    'Id',
                    gSKS_PP_Bank.PP01,
                    10);
    
        return locTempNode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInfId</Name>
				<Source><![CDATA[
    protected XmlNode node_PmtInfId(XmlNode _XmlNode)
    {
        return SKS_EFT_Format::xmlAppendChildNodeText(
                        gXmlDocument,
                        _XmlNode,
                        'PmtInfId',
                        mSKS_PP_File.FileNbr + '_' + int2str(gPmtInfIdCounter),
                        9,
                        true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtTpInf</Name>
				<Source><![CDATA[
    protected XmlNode node_PmtTpInf(XmlNode _XmlNode)
    {
    
        this.setLclInstrm_Cd('CHK');
    
        return super(_XmlNode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_Dbtr</Name>
				<Source><![CDATA[
    protected XmlNode node_Dbtr(XmlNode _XmlNode)
    {
        XmlNode locTempNode = _XmlNode,locPstlAdr;
        container company;
        LogisticsPostalAddress lLogisticsPostalAddress;

        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locTempNode,
                    'Dbtr',
                    '',
                    0,
                    true);
        
        company = [mSKS_PP_FileDetail.ChkCpnyId];
        select crossCompany:company gBankAccountTable
            join gSKS_PP_Bank
                where gSKS_PP_Bank.BankAccountId == gBankAccountTable.AccountID
                    && gSKS_PP_Bank.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;

        select firstonly Location from lLogisticsPostalAddress where lLogisticsPostalAddress.Location == gBankAccountTable.Location;

        //this node has no children so there is no reason to catch the return
        this.node_Nm(locTempNode,gBankAccountTable.Name, 35);

        if(lLogisticsPostalAddress.CountryRegionId)
        {
            locPstlAdr = SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locTempNode,
                    'PstlAdr',
                    '',
                    0,
                    true);
            SKS_EFT_Format::xmlAppendChildNodeText(
                                gXmlDocument,
                                locPstlAdr,//NOTE: here we are adding a child to the previous node
                                'Ctry',
                                this.getLogisticsAddressCountryRegionISO(lLogisticsPostalAddress.CountryRegionId),
                                2);
        }

        this.node_Dbtr_Id(locTempNode);
        return locTempNode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_Dbtr_Id</Name>
				<Source><![CDATA[
    protected XmlNode node_Dbtr_Id(XmlNode _XmlNode)
    {
        XmlNode locTempNode = _XmlNode;
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                        gXmlDocument,
                        locTempNode,
                        'Id',
                        '',
                        0,
                        true);

        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                                    gXmlDocument,
                                    locTempNode,//NOTE: here we are adding a child to the previous node
                                    'OrgId',
                                    '',
                                    0,
                                    true);
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                                        gXmlDocument,
                                        locTempNode,//NOTE: here we are adding a child to the previous node
                                        'Othr',
                                        '',
                                        0,
                                        true);
        SKS_EFT_Format::xmlAppendChildNodeText(
                                            gXmlDocument,
                                            locTempNode,//NOTE: here we are adding a child to the previous node
                                            'Id',
                                            gSKS_PP_Bank.PP02,
                                            10,
                                            true);
        return locTempNode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DbtrAcct</Name>
				<Source><![CDATA[
    protected XmlNode node_DbtrAcct(XmlNode _XmlNode)
    {
        XmlNode locTempNode = _XmlNode;
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locTempNode,
                    'DbtrAcct',
                    '',
                    0,
                    true);
        this.node_DbtrAcct_Id(locTempNode);

        SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locTempNode,
                    'Ccy',
                    gBankAccountTable.CurrencyCode,
                    3,
                    true);
        return locTempNode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_EndToEndId</Name>
				<Source><![CDATA[
    protected XmlNode node_EndToEndId(XmlNode _XmlNode)
    {
        return SKS_EFT_Format::xmlAppendChildNodeText(
                        gXmlDocument,
                        _XmlNode,
                        'EndToEndId',
                        mSKS_PP_FileDetail.ChkRefNbr,
                        10,
                        true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_Othr</Name>
				<Source><![CDATA[
    protected XmlNode node_Othr(XmlNode _XmlNode)
    {
        XmlNode locTempNode = _XmlNode;
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                            gXmlDocument,
                            locTempNode,
                            'Othr',
                            '',
                            0,
                            true);
        this.node_Id(locTempNode, mSKS_PP_FileDetail.BnkBankAcct,12);
        return locTempNode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_FinInstnId</Name>
				<Source><![CDATA[
    protected XmlNode node_FinInstnId(XmlNode _XmlNode)
    {
        XmlNode locTempNode = _XmlNode;
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                        gXmlDocument,
                        locTempNode,
                        'FinInstnId',
                        '',
                        0,
                        true);
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                        gXmlDocument,
                        locTempNode,
                        'Othr',
                        '',
                        0,
                        true);
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                        gXmlDocument,
                        locTempNode,
                        'Id',
                        mSKS_PP_FileDetail.BnkBankTransit,
                        9,
                        true);
        return locTempNode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf</Name>
				<Source><![CDATA[
    protected XmlNode node_CdtTrfTxInf(XmlNode _XmlNode)
    {
        XmlNode locTempNode = _XmlNode;
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                gXmlDocument,
                locTempNode,
                'CdtTrfTxInf',
                '',
                0,
                true);
        this.node_PmtId(locTempNode);
        this.node_Amt(locTempNode);
        this.node_Cdtr(locTempNode);
        return locTempNode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_Cdtr</Name>
				<Source><![CDATA[
    protected XmlNode node_Cdtr(XmlNode _XmlNode)
    {
        XmlNode locTempNode = _XmlNode;
        VendTable vendTable;
        DirPartyPostalAddressView dirPartyPostalAddressView;
       
        vendTable = VendTable::find(mSKS_PP_FileDetail.VendorAccount);

        select * from dirPartyPostalAddressView
            where dirPartyPostalAddressView.Party == vendTable.Party;

        if(mSKS_PP_FileDetail.VendName)
        {
            locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                        gXmlDocument,
                        locTempNode,
                        'Cdtr',
                        '',
                        0,
                        true);
            //Assign Child Nodes
            //no need to catch return; the following node has no children
            this.node_Nm(locTempNode,mSKS_PP_FileDetail.VendName,35);

            locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                            gXmlDocument,
                            locTempNode,
                            'PstlAdr',
                            '',
                            0,
                            true);

            SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locTempNode,
                    'Pstcd',
                    dirPartyPostalAddressView.ZipCode,
                    15,
                    true);
            
            SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locTempNode,
                    'TwnNm',
                    dirPartyPostalAddressView.City,
                    30,
                    true);
            SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locTempNode,
                    'CtrySubDvsn',
                    dirPartyPostalAddressView.State,
                    2,
                    true);
            SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locTempNode,
                    'Ctry',
                    this.getLogisticsAddressCountryRegionISO(dirPartyPostalAddressView.CountryRegionId),
                    2,
                    true);
            SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locTempNode,
                    'AdrLine',
                    dirPartyPostalAddressView.Street,
                    35,
                    true);
        }
        return locTempNode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLogisticsAddressCountryRegionISO</Name>
				<Source><![CDATA[
    private LogisticsAddressCountryRegionISOCode getLogisticsAddressCountryRegionISO(LogisticsAddressCountryRegionId _countryRegion)
    {
        str value;
        ;
        if(_countryRegion != '' && strLen(_countryRegion) > 2)
        {
            if(mLogisticsAddressCountryRegion.CountryRegionId != _countryRegion)
            {
                mLogisticsAddressCountryRegion = LogisticsAddressCountryRegion::find(_countryRegion);
            }
            value = mLogisticsAddressCountryRegion.ISOcode;
        }
        else
        {
            value = _countryRegion;
        }
        return value;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>