<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_NORTHGEORGIA_80</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_NORTHGEORGIA_80 Extends SKS_PP_Format_BankGroup
{
    SKS_PP_Bank gSKS_PP_Bank;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        //Bank of North Georgia - 80
        //  1 - 1       Constant 'C' 1!A
        //  2 - 4       Bank Number 3!n
        //  5 - 6       FILLER '00' 2!n
        //  7 -16       Account Number 10!n
        //  17-17       FILLER ' ' 1!A
        //  18-18       'R' for ISSUeS or 'V' for voids 1!a
        //  19-19       Action INdicator 'A' for ADD, or 'D' for Delete 1!a
        //  20-20       FILLER ' ' 1!A
        //  21-30       Check serial number 10!n
        //  31-40       Amount. Positive Number. Implied decimal 10!n
        //  41-46       Issue Date MMDDYY 6!n
        //  47-66       User Info 20x
        //  67-80       FILLER ' ' 14!A
        System.Text.StringBuilder sb;
        SKS_PP_StringFormats formats = new SKS_PP_StringFormats();
        int locMult = 1;
        str locItemType = 'R';
        str locActionIndicator = 'A';
        ;
    
        sb = new System.Text.StringBuilder();
        if(gSKS_PP_Bank.BankAccountId != mSKS_PP_FileDetail.ChkBankAcct)
            select firstonly crosscompany PP01, BankAccountId from gSKS_PP_Bank
                where gSKS_PP_Bank.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct
                && gSKS_PP_Bank.dataAreaId == mSKS_PP_FileDetail.ChkCpnyId;
    
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            locItemType = 'V';
            if(mSKS_PP_FileDetail.ChkCuryAmt < 0)
            {
               locMult = -1;
            }
        }
        else
        {
            locItemType = 'R';
        }
    
        sb.Append('C');
        sb.Append(SKS_PP_StringFormats::strFill(3,gSkS_PP_Bank.PP01, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(2,'',SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10,mSKS_PP_FileDetail.BnkBankAcct,SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        sb.Append(locItemType);
        sb.Append(locActionIndicator);
        sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(mSKS_PP_FileDetail.ChkCuryAmt, 10));
        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(SKS_PP_StringFormats::strFill(20, mSKS_PP_FileDetail.vendname, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(14, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        sb.ToString();
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>