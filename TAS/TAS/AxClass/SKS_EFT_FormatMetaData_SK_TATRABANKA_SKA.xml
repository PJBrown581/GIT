<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_SK_TATRABANKA_SKA</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_SK_TATRABANKA_SKA Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_SK_TATRABANKA_SKA Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220609';
        dataContractVersion = '1.0';
        conFormatID = ['SK-TATRABANKA-SKA'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'SK - Tatra banka - SKA',0,'','','SK-TATRABANKA-SKA',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,'','','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'SK-TATRABANKA-SKA',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('SK-TATRABANKA-SKA'):
                paymSpecList = this.getPaymSpecsMetaData_SK_TATRABANKA_SKA();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_SK_TATRABANKA_SKA</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_SK_TATRABANKA_SKA()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Slovak foreign payment system',1,'FPS','','FPS','TRADE PAY',0,'SK-TATRABANKA-SKA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('SK-TATRABANKA-SKA'):
                notesList = this.getNotesMetaData_SK_TATRABANKA_SKA();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_SK_TATRABANKA_SKA</Name>
				<Source><![CDATA[
    private container getNotesMetaData_SK_TATRABANKA_SKA()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['SK-TATRABANKA-SKA','Wire-HV','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('SK-TATRABANKA-SKA'):
                validationsList = this.getValidationsMetaData_SK_TATRABANKA_SKA();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_SK_TATRABANKA_SKA</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_SK_TATRABANKA_SKA()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No',':03: > Ordering party Swift address','Swift code related to Bank',0,'SWIFTNo','','',0,0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','1:F01 > bank code of ordering party','IBAN related to Bank',0,'IBAN','','',0,'2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number',':52D: > Ordering party account number','party account number',0,'AccountNum','','',0,0,1,'16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name',':05: > Ordering party name and address','Ordering Party Name','15','WOrdPartyName','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1',':05: > Ordering party name and address','Ordering party address 1','15','WOrdPartyAddr','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2',':05: > Ordering party name and address','Ordering party address 2','15','WOrdPartyAddr2','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code',':05: > Ordering party name and address','Ordering Party Postal Code','15','WOrdPartyZipCode','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City',':05: > Ordering party name and address','Ordering Party City','15','WOrdPartyCity','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province',':05: > Ordering party name and address','Ordering party state','15','WOrdPartyState','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region',':05: > Ordering party name and address','Ordering party ISO Country Code','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','2:I100 > bank code of ordering party','Swift Code related to Vendor','9','SWIFTNo','','',0,'2','8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','Vendor Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country',':52D: > Beneficiary country','Beneficiary Country Code of Residency','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','Vendor bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name',':57D: > Beneficiary bank name','Receiving Bank Name','16','WBenBankName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','Vendor bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Address',':57D: > Beneficiary bank address','Address related to vendor bank','16','WBenBankAddr','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','Vendor bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City',':57D: > Beneficiary bank address','City related to vendor bank','16','WBenBankCity','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','Vendor bank Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region',':57DD: > Beneficiary bank country','Beneficiary Bank ISO Country Code','16','WBenBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number',':59: > Beneficiary account number','Beneficiary account number','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name',':59: > Beneficiary name','Beneficiary name','16','WBeneName','','',0,0,'3','140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1',':59: > Beneficiary address','Beneficiary address','16','WBeneAddr','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SK-TATRABANKA-SKA','FPS','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City',':59: > Beneficiary address','Beneficiary City','16','WBeneCity','','',1,1,'','',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['SK-TATRABANKA-SKA','CostAccount','CostAccounting']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['SK-TATRABANKA-SKA','CostAccount','Expenses of bene/ordering party','BN1']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['SK-TATRABANKA-SKA','CostAccount','Ordering party expenses','OUR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['SK-TATRABANKA-SKA','CostAccount','Beneficiary expenses','BN2']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData</Name>
				<Source><![CDATA[
    protected container getFormatLookupsMetaData(str _formatID)
    {
        container   formatLookupsList;

        //Metadata column names of data elements

        switch (_formatID)
        {
        }

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('SK-TATRABANKA-SKA'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_SK_TATRABANKA_SKA();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_SK_TATRABANKA_SKA</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_SK_TATRABANKA_SKA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SK-TATRABANKA-SKA','SK-TATRABANKA-SKA','FPS','CostAccount','CostAccounting',0,'CostAccount','Expenses of bene/ordering party',1,'','',':71A: >  cost accounting']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>