<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_SCB_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_SCB_XML extends SKS_EFT_Format_ISO_20022_001001003
/// </summary>
class SKS_EFT_Format_SCB_XML extends SKS_EFT_Format_ISO_20022_001001003
{
    #define.FormatVersion('20220117')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl_Cd</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl_Cd(XmlElement _nodeSvcLvl)
    {
        //------------------------------------------------------------------------------------------------------
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
    
        //              2.9: Cd
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == 'RTGS')
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Cd', 'URGP');
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == 'BKT')
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Cd', 'BKTR');
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Cd', 'NURG');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_CtgyPurp</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_CtgyPurp(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.14: CtgyPurp
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCtgyPurp;
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == 'RTGS' ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == 'ACH-DC')
        {
            //          2.14: CtgyPurp
            nodeCtgyPurp = _nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
            //              2.15: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', 'SUPP');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt1</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_IntrmyAgt1(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.71: IntrmyAgt1
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                      MmbId
        //                  Nm
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeIntrmyAgt1;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
        XmlElement nodeClrSysId;
        str value;
    
        if(mSKS_EFT_VendorPaym.WIntBankSwift != '' || mSKS_EFT_VendorPaym.WIntBankId != '')
        {
            //          2.71: IntrmyAgt1
            nodeIntrmyAgt1 = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt1'));
    
            //              FinInstnId
            nodeFinInstnId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(mSKS_EFT_VendorPaym.WIntBankSwift != '')
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_VendorPaym.WIntBankSwift, 0, false);
            }
    
            //                  ClrSysMmbId
            else if(mSKS_EFT_VendorPaym.WIntBankId != '')
            {
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                
                switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
                {
                    case 'IN-SCB-XML':
                        value = 'INFSC';
                        break;
                    case 'ZA-SCB-XML':
                        value = 'ZANCC';
                        break;
                    default:
                        value = '';
                }
                if(value)
                {
                    //              ClrSysId
                    nodeClrSysId = nodeClrSysMmbId.appendChild(xmlDoc.createElement('ClrSysId'));
                    //                  Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', value, 0);
                }
                //                      MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_VendorPaym.WIntBankId, 0, false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePstlAdr;
    
        if((mRemittanceZipCode != '' || mRemittanceCity != '' || mRemittanceCountryRegionId != '' || mRemittanceAdrline1 != '' || mRemittanceAdrline2 != '') ||
            mRemittanceState != '')
        {
            //      PstlAdr
            nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));
    
            //          StrtNm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'StrtNm', this.CharacterReplacement(mRemittanceAdrline1), 70, false);
    
            //          BldgNb
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'BldgNb', this.CharacterReplacement(mRemittanceAdrline2), 16, false);
    
            //          PstCd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'PstCd', mRemittanceZipCode, 16, false);
    
            //          TwnNm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', this.CharacterReplacement(mRemittanceCity), 35, false);
    
            //          CtrySubDvsn
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'CtrySubDvsn', this.CharacterReplacement(mRemittanceState), 35, false);
    
            //          Ctry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', mRemittanceCountryRegionId, 2, false);
    
        }        
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  IBAN
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
        XmlElement nodeCdtrAcctIdOthr;
    
        //          2.80: CdtrAcct
        nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
        //              Id
        nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
        if(mSKS_EFT_FileDetail.DepBankIBAN != '')
        {
            //                  IBAN
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN);
        }
        else
        {
            //                  Othr
            nodeCdtrAcctIdOthr = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
            //                  Id   
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctIdOthr, 'Id', mSKS_EFT_FileDetail.DepBankAcct);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98 : RmtInf
        //          2.100: Strd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeRmtInf;
        XmlElement nodeStrd;
        XmlElement nodeTp;
        XmlElement nodeCdOrPrtry;
        Boolean firstRec = true;
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        XmlElement nodeRfrdDocAmt;
        XmlElement nodeRfrdDocInf;
    
        while select  invSKS_EFT_FileDetail
            where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
               && invSKS_EFT_FileDetail.InvoiceNumber != ''
        {
            if(firstRec)
            {
                //          2.98: RmtInf
                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                firstRec = false;
            }
    
            //               2.100: Strd
            nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));
            //              2.101: RfrdDocInf
            nodeRfrdDocInf = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocInf'));
    
            //              2.121: Tp
            nodeTp = nodeRfrdDocInf.appendChild(xmlDoc.createElement('Tp'));
    
            //                  2.122: CdOrPrtry
            nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));
    
            //              2.104: Cd
            if(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur <= 0)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'CINV');
    
                //               2.126: Ref
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', invSKS_EFT_FileDetail.InvoiceNumber, 0, false);
                //              2.108: RltdDt
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
            }
            else
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'CREN');
                //               2.126: Ref
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', invSKS_EFT_FileDetail.InvoiceNumber, 0, false);
                //              2.108: RltdDt
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
            }
            //              2.109 RfrdDocAmt
            nodeRfrdDocAmt = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocAmt'));
    
            this.node_RmtInf_Amt(nodeRfrdDocAmt, invSKS_EFT_FileDetail);

            if(invSKS_EFT_FileDetail.InvoiceTransactionTxt != '')
            {
                //              2.129: AddtlRmtInf
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeStrd, 'AddtlRmtInf', invSKS_EFT_FileDetail.InvoiceTransactionTxt, 0, false);                
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_RmtInf_Amt</Name>
				<Source><![CDATA[
    protected void node_RmtInf_Amt(XmlElement _nodeRfrdDocAmt, SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.42: Amt
        //              CdtNoteAmt
        //              DuePyblAmt
        //------------------------------------------------------------------------------------------------------
        XmlElement  currentElement;
        AmountMST   gross = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        AmountMST   Discount = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
        AmountMST   Remitted;
        AmountMST   CreditNote;
    
        if(_invSKS_EFT_FileDetail.InvoiceSettleAmountCur > 0)
        {
            Gross = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            Discount = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
            Remitted = 0;
            CreditNote = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        }
        else
        {
            Gross = (_invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur) * -1;
            Discount = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur * -1;
            Remitted = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1;
            CreditNote = 0;
        }
    
        if(Remitted != 0)
        {
            //      DuePyblAmt
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DuePyblAmt', num2str(Remitted,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
            
            //      DscntApldAmt
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DscntApldAmt', num2str(Discount,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
        else
        {
            //      CdtNoteAmt
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'CdtNoteAmt', num2str(CreditNote,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);            
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                  BankBrnchCode
        //------------------------------------------------------------------------------------------------------

        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeBrnchId;
        str value;

        //          2.77: CdtrAgt
        nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));

        //              FinInstnId
        nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));

        if(mSKS_EFT_FileDetail.DepSwiftNo != '' &&
        (mSKS_EFT_FileFormatPaymSpec.FormatId == 'IN-SCB-XML' ||
        (mSKS_EFT_FileFormatPaymSpec.FormatId == 'ZA-SCB-XML' && mSKS_EFT_FileFormatPaymSpec.TransactionCode != 'ACH-DC')))
        {
            //                  BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 0, false);
        }

        //                  ClrSysMmbId
        this.node_CdtTrfTxInf_CdtrAgt_MmbId(nodeFinInstnId);

        //              BrnchId
        value = SKS_EFT_Format::getValueFromCode('BrnchId', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId);

        if(value != '')
        {
            nodeBrnchId = nodeCdtrAgt.appendChild(xmlDoc.createElement('BrnchId'));

            //              Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBrnchId, 'Id', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt_MmbId</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt_MmbId(XmlElement _nodeFinInstnId)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.77: CdtrAgent
        //          MmbId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeClrSysMmbId;
        str value;

        value = SKS_EFT_Format::getValueFromCode('ClrSysMmbId', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId);

        if(value != '' && (mSKS_EFT_FileFormatPaymSpec.FormatId == 'IN-SCB-XML' || mSKS_EFT_FileFormatPaymSpec.FormatId == 'ZA-SCB-XML')
                    && mSKS_EFT_FileFormatPaymSpec.TransactionCode != 'BKT')
        {
            nodeClrSysMmbId = _nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId',value, 0, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Purp</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Purp(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.86: Purp
        //              Prtry
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        str value;

        value = this.getBankPurposeCode();

        if(!value)
        {
            value = SKS_EFT_Format::getValueFromCode('Purp', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId);
        }

        if(value)
        {
            nodeId = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Purp'));

            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeId, 'Prtry', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankPurposeCode</Name>
				<Source><![CDATA[
    private str getBankPurposeCode()
    {
        LedgerJournalTrans      ledgerJournalTrans;
        BankCentralBankPurpose  bankCentralBankPurpose;

        select Code from bankCentralBankPurpose join BankCentralBankPurposeCode from ledgerJournalTrans
            where bankCentralBankPurpose.Code == ledgerJournalTrans.BankCentralBankPurposeCode
               && ledgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;

        return bankCentralBankPurpose.Code;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChrgBr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.51 ChrgBr
        //------------------------------------------------------------------------------------------------------
    
        //      2.51 ChrgBr
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'ChrgBr', '', 0, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_Id(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //     Cdtr
        //          Id
        //              OrgId
        //                  Othr
        //                      Id
        //                      SchemeName
        //          or
        //              PrvtId
        //                  Othr
        //                      Id
        //                      SchemeName
        //------------------------------------------------------------------------------------------------------

        XmlElement nodeId;
        XmlElement nodeOrgPvtId;
        XmlElement nodeOthr;

        if(mSKS_EFT_FileFormatPaymSpec.FormatId == 'ZA-SCB-XML' &&  mSKS_EFT_FileFormatPaymSpec.TransactionCode == 'BKT')
        {
            //          Id
            nodeId = _nodeCdtr.appendChild(xmlDoc.createElement('Id'));
            
            //          PrvtId
            nodeOrgPvtId = nodeId.appendChild(xmlDoc.createElement('PrvtId'));            

            //          Othr
            nodeOthr = nodeOrgPvtId.appendChild(xmlDoc.createElement('Othr'));

            //          Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_VendorPaym.VendAccount);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>