<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_CITIBANK_ARP</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_CITIBANK_ARP Extends SKS_PP_Format_BankGroup
{
    Str mCpnyNa;
    int mChkCount;
    real mChkSum;
    Str mBnkBankAct;
        // CITIBANK-ARP POSITIVE PAY FORMAT - Detail Record
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    // Pos 01-01    1        Record Type 'D'
        // Pos 02-04    3        Bank Number (by state - DC='008', PP02)
        // Pos 05-14    10       Account number - RJ-LZF
        // Pos 15-21    7        Not Used - blanks
        // Pos 22-22    1        Void check indicator ('V'oid, ' ' blank otherwise)
        // Pos 23-32    10       Check number - RJ-LZF
        // Pos 33-42    10       Check Amount (zeroes for void)
        // Pos 43-50    8        Issue date of check (YYYYMMDD)
        // Pos 51-65    15       Additional data
        // Pos 66-80    15       Blanks
        // Pos 81-160   80       Payee Information
    protected str txtDetail()
    {
        int Mult = 1;
        str ItemType;
        SKS_PP_Bank bSKS_PP_Bank_1;
        Container company;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
            if(mSKS_PP_FileDetail.ChkCuryAmt < 0)
            {
                Mult = -1;
            }
        }
        else
        {
            mChkCount++;
            ItemType = ' ';
            mChkSum = mChkSum + mSKS_PP_FileDetail.ChkCuryAmt;
        }
    
        company = [mSKS_PP_FileDetail.ChkCpnyId];
        select crossCompany:company PP02 from bSKS_PP_Bank_1 where bSKS_PP_Bank_1.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;
    
    
        mCpnyNa =  bSKS_PP_Bank_1.PP02;
        mBnkBankAct = mSKS_PP_FileDetail.BnkBankAcct;
    
        sb.Append('D');
        sb.Append(SKS_PP_StringFormats::strFill(3, bSKS_PP_Bank_1.PP02, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(7, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(ItemType);
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(strRem(strRTrim(StrLTrim(SKS_PP_StringFormats::strFill(11, Num2Str(mSKS_PP_FileDetail.ChkCuryAmt * Mult,1, 2, 1,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left))),'.'));
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(80, mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupHeader</Name>
				<Source><![CDATA[
    // CITIBANK-ARP POSITIVE PAY FORMAT - Header Record
    
        // Pos 01-01    1        Record Type 'H'
        // Pos 02-31    30       Company Name
        // Pos 32-39    8        Effective Date (yyyymmdd)
        // Pos 40-80    41       Blanks
    protected str txtGroupHeader()
    {
        SKS_PP_Bank bSKS_PP_Bank_1;
        Container company;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
        company = [mSKS_PP_FileDetail.ChkCpnyId];
        select crossCompany:company PP01 from bSKS_PP_Bank_1 where bSKS_PP_Bank_1.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;
        sb.Append('H');
        sb.Append(SKS_PP_StringFormats::strFill(30, bSKS_PP_Bank_1.PP01, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_PP_FileDetail.ChkDocDate));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    // CITIBANK-ARP POSITIVE PAY FORMAT - Trailer Record
    
        // Pos 01-01    1        Record Type 'T'
        // Pos 02-04    3        Bank Number (by state - DC='008', PP02)
        // Pos 05-14    10       Account number - RJ-LZF
        // Pos 15-22    8        Not Used - blanks
        // Pos 23-32    10       Check Issued Rec Count (Voided checks are NOT included)
        // Pos 33-42    10       Total Dollar Amount (Only include totals for Issued records)
        // Pos 43-80    38       Blanks
    protected str txtGroupTrailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        sb.Append('T');
        sb.Append(SKS_PP_StringFormats::strFill(3, mCpnyNa, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(10, mBnkBankAct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(10, int2str(mChkCount), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(mChkSum, 10));
    
        mChkCount = 0;
        mChkSum = 0;
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>