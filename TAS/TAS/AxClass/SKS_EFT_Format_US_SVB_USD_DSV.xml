<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_SVB_USD_DSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_SVB_USD_DSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_US_SVB_USD_DSV extends SKS_EFT_Format
{
    #define.FormatVersion('20220624')
    #define.Separator('|')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_Bank
            this.getSKS_EFT_Bank();

            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();

            // Detail lines
            this.rec_Payment();

            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Payment</Name>
				<Source><![CDATA[
    boolean rec_Payment()
    {
        //BP Deviation Documented
        str paymentNotes;

        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        //1     Processing date
        str Effdate = Date2str(mSKS_EFT_File.EffectiveDate, 123, DateDay::Digits2, DateSeparator::None, DateMonth::Digits2, DateSeparator::None,
    DateYear::Digits4, DateFlags::None);
        sb.Append(Effdate);
        sb.Append(#Separator);

        //2     Debit account
        sb.Append(mSKS_EFT_FileDetail.BankBankAcct);
        sb.Append(#Separator);

        //3     Transaction amount
        sb.Append(num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,2));
        sb.Append(#Separator);


        //4     Beneficiary's account
        sb.Append(mSKS_EFT_FileDetail.DepBankAcct);
        sb.Append(#Separator);

        //5     Beneficiary name
        sb.Append(mSKS_EFT_VendorPaym.WBeneName);
        sb.Append(#Separator);

        //6      Beneficiary address 1
        sb.Append(mSKS_EFT_VendorPaym.WBeneAddr);
        sb.Append(#Separator);

        // 7    Beneficiary address 2
        sb.Append(mSKS_EFT_VendorPaym.WBeneAddr2); // Street
        sb.Append(#Separator);

        // 8    Beneficiary address 3
        sb.Append(mSKS_EFT_VendorPaym.WBeneCity + ' ' + mSKS_EFT_VendorPaym.WBeneState + ' ' + mSKS_EFT_VendorPaym.WBeneZipPostal); // Town
        sb.Append(#Separator);

        //9     Beneficiary bank Name
        sb.Append(mSKS_EFT_VendorPaym.WBenBankName);
        sb.Append(#Separator);

        //10   Bank city/state
        sb.Append(mSKS_EFT_VendorPaym.WBenBankCity);
        sb.Append(#Separator);

        //11    ABA or SWIFT
        if (mSKS_EFT_FileDetail.DepSwiftNo)
        {
            sb.Append(mSKS_EFT_FileDetail.DepSwiftNo);
        }
        else
        {
            sb.Append(mSKS_EFT_FileDetail.DepBankTransit);
        }
        sb.Append(#Separator);

        // 12   Originator-to-beneficiary instructions
        paymentNotes = strReplace(strReplace(this.getJournalPaymentNotes(), '\n', ' '), '\r', ' ');
        sb.Append(substr(paymentNotes, 1, 140));
        sb.Append(#Separator);
        
        // 13   Bank-to-Bank instructions 1
        sb.Append(substr(mSKS_EFT_VendorPaym.WBankInst1, 1, 35));
        sb.Append(#Separator);
        
        // 14   Bank-to-Bank instructions 2
        sb.Append(substr(mSKS_EFT_VendorPaym.WBankInst2, 1, 35));
        sb.Append(#Separator);
        
        // 15   Bank-to-Bank instructions 3
        sb.Append(substr(mSKS_EFT_VendorPaym.WBankInst3, 1, 35));
        sb.Append(#Separator);
        
        // 16   Bank-to-Bank instructions 4
        sb.Append(substr(mSKS_EFT_VendorPaym.WBankInst4, 1, 35));
        sb.Append(#Separator);
        
        // 17   Bank-to-Bank instructions 5
        sb.Append(substr(mSKS_EFT_VendorPaym.WBankInst5, 1, 35));
        sb.Append(#Separator);
        
        // 18   Bank-to-Bank instructions 6
        sb.Append(substr(mSKS_EFT_VendorPaym.WBankInst6, 1, 35));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJournalPaymentNotes</Name>
				<Source><![CDATA[
    private str getJournalPaymentNotes()
    {
        LedgerJournalTrans ledgerJournalTrans;
        
        select crossCompany PaymentNotes from ledgerJournalTrans where
                ledgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;
        
        return ledgerJournalTrans.PaymentNotes;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>