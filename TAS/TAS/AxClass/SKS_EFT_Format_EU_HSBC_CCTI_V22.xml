<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_EU_HSBC_CCTI_V22</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class extends SKS_EFT_Format_ISO_20022_001001003_FD
/// </summary>
class SKS_EFT_Format_EU_HSBC_CCTI_V22 extends SKS_EFT_Format_ISO_20022_001001003_FD
{
    //------------------------------------------------------------------------------------------------------
    /// <summary>
    /// The HSBC CCTI V22 format uses the nodes from the base SEPA CREDIT format.
    /// It overrides some of the nodes.
    /// </summary>
    //------------------------------------------------------------------------------------------------------
    #define.FormatVersion('20230520')
    #define.UKBACS('UK-BACS')
    #define.UKFP('UK-FP')
    #define.UKCHPRPT('UK-CH-PRPT')
    #define.UKCHURGP('UK-CH-URGP')
    #define.UKCHSDVA('UK-CH-SDVA')
    #define.HKPRPT('PRPT-HK')
    #define.HKURGP('URGP-HK')
    #define.HKNURG('NURG-HK')
    #define.HKCHK('CHK-HK')
    #define.SGPRPT('PRPT-SG')
    #define.SGURGP('URGP-SG')
    #define.SGNURG('NURG-SG')
    #define.SGCHK('CHK-SG')
    #define.THSTRF('STRF-TH')
    #define.THNTRF('NTRF-TH')
    #define.THBAHTUP('BAHT-UP-TH')
    #define.THOSTRUP('OSTR-UP-TH')
    #define.THPRPT('PRPT-TH')
    #define.THCHK('CHK-TH')
    #define.CAURGP('URGP-CA')
    #define.CA450('CA-450')
    #define.MONURG('NURG-MO')
    #define.MOURGP('URGP-MO')
    #define.MOPRPT('PRPT-MO')
    #define.RTGSSDVA('RTGS-SDVA')
    #define.RTGSURGP('RTGS-URGP')
    #define.JPHVP('JP-HVP')
    #define.JPZPP('JP-ZPP')
    #define.MXSPID('MX-SPID')
    #define.MXCBPMT('MX-CB-PMT')
    #define.MXDOMWIR('MX-DOM-WIR')
    #define.AUHVP('AU-HVP')
    #define.AULVP('AU-LVP')                         //SKG#DevOps:14815
    #define.USHVP('US-HVP')
    #define.USLVP('US-LVP')
    #define.USLVP_CTX('USLVP-CTX')                  //SKG#DevOps:16686
    #define.NZHVP('NZ-HVP')
    #define.SEPA('SEPA')                            //SKG#VSTS:10636
    #define.BMACHLV('BM-ACH-LV')                    //SKG#VSTS:10942
    #define.BMWIREHV('BM-WIRE-HV')                  //SKG#VSTS:10942
    #define.IEEURLV('IE-EUR-LV')                    //SKG#VSTS:10942
    #define.IEINTHV('IE-INT-HV')                    //SKG#VSTS:10942

    #define.CACHK('CHK-CA')
    #define.MXACH('MX-ACH')
    #define.CH01('CH01')
    #define.CH03('CH03')
    #define.CH_URGP_HV('CH-URGP-HV')                //SKG#VSTS:13984

    #define.SGTT('TT-SG')               //SKS_VSTS_13732
    #define.SGRTGS('RTGS-SG')           //SKS_VSTS_13732
    #define.SGFAST('FAST-SG')           //SKS_VSTS_13732
    #define.SGACH('ACH-SG')             //SKS_VSTS_13732

    #define.INTLPMT('INTL-PMT')//SKS_VSTS_13941
    #define.NURGZA('NURG-ZA') //SKS_VSTS_14034
    #define.URGPZA('URGP-ZA') //SKS_VSTS_14034
    #define.INTLZA('INTL-ZA') //SKS_VSTS_14034

    #define.LVPMT('LV-PMT')//SKS_VSTS_14858

    #define.CACBACH('CA-CB-ACH') //SKS_DevOps_15476

    #define.VNLVP('VN-LVP')//SKS#DevOps:15528

    #define.MYCHK('CHK-MY')  //SKS#DevOps:15619
    #define.MYACH('ACH-MY')  //SKS#DevOps:15619
    #define.MYPP('PP-MY')     //SKS#DevOps:15619
    #define.DEHVP('DE-HVP')   //SKS#DevOps:15654

    #define.USCHK('US-CHK') //SKS#DevOps:15509
    #define.VNHVP('VN-HVP')//SKS#DevOps:15735
    #define.GDPMT('GD-PMT')//SKS#DevOps:16193
    #define.CHKOS('CHK-OS')     //SKS#DevOps:16196
    #define.THPRMPTPY('PRMPTPY-TH') //SKG#DevOps:16055

    #define.TTRTGS('TT-RTGS')     //SKS#DevOps:16216
    #define.PLDOM('PL-DOM')//SKS#DevOps:16276
    #define.PLSEPA('PL-SEPA')//SKS#DevOps:16276
    #define.PLINTL('PL-INTL')//SKS#DevOps:16276
    #define.SPLIT('SPLIT')//SKS#DevOps:16276
    #define.VCARD('VCARD')  //SKS#DevOps:16755
    #define.INRTGS('IN-RTGS')       //SKS#DevOps:16683
    #define.INNEFT('IN-NEFT')
    #define.NZLVP('NZ-LVP')     //SKS#DevOps:17740
    #define.CAACH('CA-ACH')
    #define.TAX('TAX')      //SKS#DevOps:17886
    #define.URGPCA('URGP-CA')
    #define.OMLVP('OM-LVP')                         //SKG#DevOps:19642
    #define.OMHVP('OM-HVP')                         //SKG#DevOps:19642

    #define.AELVP('AE-LVP')                         //SKG#DevOps:19698
    #define.AEHVP('AE-HVP')                         //SKG#DevOps:19698
    #define.CNLVP('CN-LVP')                         //SKG#DevOps:19698
    #define.CNHVP('CN-HVP')                         //SKG#DevOps:19698
    #define.MXLVP('MX-LVP')                         //SKG#DevOps:19698
    #define.MXHVP('MX-HVP')                         //SKG#DevOps:19698
    #define.NLHVP('NL-HVP')                         //SKG#DevOps:19698
    #define.UKHVP('UK-HVP')                         //SKG#DevOps:19698
    
    #define.SAWIREHV('SA-WIRE-HV')                  //SKG#DevOps:19046
    #define.SAACHLVP('SA-ACH-LVP')                  //SKG#DevOps:19046
    #define.BHWIREHV('BH-WIRE-HV')                  //SKG#DevOps:19046
    #define.BHACHLVP('BH-ACH-LVP')                  //SKG#DevOps:19046

    #define.ITHVP('IT-HVP')                         //SKG#DevOps:19731
    #define.FRHVP('FR-HVP')                         //SKG#DevOps:19731
    #define.CBC('CBC')
    str mRemitStreetNumber;
    str mRemitDistrictName;
    str mRemitBuildingCompliment;
    str mRemitCounty;
    str bankCode;
    str bankCodeText, purposeName;
    SKS_EFT_TH_WithHoldingTaxFields mSKS_EFT_TH_WithHoldingTaxFields;
    SKS_EB_Vendor       mSKS_EB_Vendor;  //SKS_DevOps_15476
    VendBankAccount    mVendBankAccount;        //SKS#DevOps:16055


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_Id(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.79: Cdtr
        //          Id
        //------------------------------------------------------------------------------------------------------
        XmlElement  nodeId;
        XmlElement  nodeOrgPvtId;
        XmlElement  nodeOthr;
        str value;

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CNLVP)
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ContractNumber', mSKS_EFT_FileDetail.RecId));
    
            if(value)
            {
                //          Id
                nodeId = _nodeCdtr.appendChild(xmlDoc.createElement('Id'));
    
                //            OrgId
                nodeOrgPvtId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
                //                  Othr
                nodeOthr = nodeOrgPvtId.appendChild(xmlDoc.createElement('Othr'));
    
                //                      Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', 'CNACH' + value, 17);
    
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAddress</Name>
				<Source><![CDATA[
    void getAddress()
    {       
        mRemittanceCity = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneCity);

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THSTRF    ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THNTRF   ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRPT   ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THCHK    ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRMPTPY)       //SKS#DevOps:16055
        {
            mRemittanceState = LogisticsAddressState::name(mSKS_EFT_FileDetail_VendAddress.BeneCounty, mSKS_EFT_FileDetail_VendAddress.BeneState);
        }
        else
        {
            mRemittanceState = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneState);
        }
        mRemittanceZipCode = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneZipPostal);
        mRemittanceCountryRegionId = this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId);
    
        mRemitStreetNumber = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneStreetNumber);
        mRemitDistrictName = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneDistrictName);
        mRemitBuildingCompliment = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneBuildingCompliment);
        mRemitCounty = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneCity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVendBankAccount</Name>
				<Source><![CDATA[
    void getVendBankAccount()
    {
        if(mVendBankAccount.AccountID != mSKS_EFT_FileDetail.DepBankAccountId || mVendBankAccount.VendAccount != mSKS_EFT_FileDetail.AccountNum)
        {
            mVendBankAccount = VendBankAccount::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum, mSKS_EFT_FileDetail.DepBankAccountId);            
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankPurposeCode</Name>
				<Source><![CDATA[
    private void getBankPurposeCode()
    {
        msks_EFT_FileDetail_PaymentLine = sks_EFT_FileDetail_PaymentLine::find(mSKS_EFT_FileDetail.RecId);        
    
        bankCode     = this.CharacterReplacement(msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeCode);
        bankCodeText = this.CharacterReplacement(msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeText);
        purposeName  = this.CharacterReplacement(msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeName);
    
        return;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRemoveBOM</Name>
				<Source><![CDATA[
    protected boolean getRemoveBOM()
    {
        // HSBC cannot support the BOM for UTF-8 encoding
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxWithholdValue</Name>
				<Source><![CDATA[
    private TaxWithholdValue getTaxWithholdValue(TaxWithholdCode _TaxWithholdCode)          //SKG#VSTS:7960
    {
        TaxWithholdData lTaxWithholdData;
    
        if (_TaxWithholdCode)
        {
            select firstonly TaxWithholdValue from lTaxWithholdData
                where lTaxWithholdData.TaxWithholdCode == _TaxWithholdCode;
        }
        return lTaxWithholdData.TaxWithholdValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf()
    {
        //------------------------------------------------------------------------------------------------------
        //      2.27: CdtTrfTxInf
        //          2.28: PmtId
        //          2.31: PmtTpInf
        //          2.42: Amt
        //          2.51: ChrgBr
        //          2.52: ChqInstr
        //          2.77: CdtrAgt
        //          2.79: Cdtr
        //          2.80: CdtrAcct
        //          2.98: RmtInf
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtTrfTxInf;
    
        //      2.27: CdtTrfTxInf
        nodeCdtTrfTxInf = nodePmtInf.appendChild(xmlDoc.createElement('CdtTrfTxInf'));
    
        //          2.28: PmtId
        this.node_CdtTrfTxInf_PmtId(nodeCdtTrfTxInf);
    
        //          2.31 PmtTpInf
        this.node_CdtTrfTxInf_PmtTpInf(nodeCdtTrfTxInf);
    
        //          2.42: Amt
        this.node_CdtTrfTxInf_Amt(nodeCdtTrfTxInf);
    
        //          2.51: ChrgBr
        this.node_CdtTrfTxInf_ChrgBr(nodeCdtTrfTxInf);
    
        //          2.52 ChqInstr
        if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::Yes || subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) == 'CHK')
        {
            this.node_CdtTrfTxInf_ChqInstr(nodeCdtTrfTxInf);
        }
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THSTRF   &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THNTRF   &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THBAHTUP &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THOSTRUP &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THPRPT   &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THCHK    &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #LVPMT    &&//SKS_VSTS_14858
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THPRMPTPY)       //SKS#DevOps:16055
        {
            //          2.71: IntrmyAgt1
            this.node_CdtTrfTxInf_IntrmyAgt1(nodeCdtTrfTxInf);
        }
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #USCHK)  //SKS_DevOps_16402
        {
            //          2.77: CdtrAgt
            this.node_CdtTrfTxInf_CdtrAgt(nodeCdtTrfTxInf);
        }
    
        //          2.79: Cdtr
        this.node_CdtTrfTxInf_Cdtr(nodeCdtTrfTxInf);
    
        //          2.80: CdtrAcct
        this.node_CdtTrfTxInf_CdtrAcct(nodeCdtTrfTxInf);
    
        //          2.82: InstrForCdtrAgt
        this.node_CdtTrfTxInf_InstrForCdtrAgt(nodeCdtTrfTxInf);

        //          2.85: InstrForDbtrAgt
        this.node_CdtTrfTxInf_InstrForDbtrAgt(nodeCdtTrfTxInf);             //SKG#VSTS:13358
    
        //          2.86: Purp
        this.node_CdtTrfTxInf_Purp(nodeCdtTrfTxInf);
    
        //          2.89: RgltryRptg
        this.node_CdtTrfTxInf_RgltryRptg(nodeCdtTrfTxInf);
    
        //          2.90: Tax
        this.node_CdtTrfTxInf_Tax(nodeCdtTrfTxInf);                     //SKG#VSTS:7960
    
        //          2.91: RltdRmtInf
        this.node_CdtTrfTxInf_RltdRmtInf(nodeCdtTrfTxInf);
    
        //          2.98: RmtInf
        this.node_CdtTrfTxInf_RmtInf(nodeCdtTrfTxInf);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChrgBr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.51: ChrgBr
        //------------------------------------------------------------------------------------------------------
        str value;

        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ChrgBr', mSKS_EFT_FileDetail.RecId));

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INRTGS ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INNEFT)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'ChrgBr', value, 0, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_InstrForDbtrAgt</Name>
				<Source><![CDATA[
    /// <summary>
    /// InstrForDbtrAgt
    /// </summary>
    /// <param name = "_nodeCdtTrfTxInf">InstrForDbtrAgt</param>
    protected void node_CdtTrfTxInf_InstrForDbtrAgt(XmlElement _nodeCdtTrfTxInf)                                        //SKG#VSTS:13358
    {
        //------------------------------------------------------------------------------------------------------
        //          2.85: InstrForDbtrAgt
        //              InstrInf
        //------------------------------------------------------------------------------------------------------
        str value, instrForDbtrAgt;

        value = SKS_EFT_Format::getCodelookupvalue('IncludeReturnAccnt', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);
        instrForDbtrAgt = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InstrForDbtrAgt', mSKS_EFT_FileDetail.RecId));

        if(value == 'Y' && mSKS_EFT_FileFormatPaymSpec.FormatId == 'CA-HSBC-CCTI-V22' && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CACBACH)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'InstrForDbtrAgt', subStr(mSKS_EFT_FileDetail.BankBankTransit, 1, 9) + subStr(mSKS_EFT_FileDetail.BankBankAcct, 4, 9), 0, false);      //SKS_VSTS_14084
        }
        else if((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ITHVP ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FRHVP) && instrForDbtrAgt)      //SKS#DevOps:19731
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'InstrForDbtrAgt', '/REC/' + instrForDbtrAgt, 35, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Amt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Amt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.42: Amt
        //              2.43: InstdAmt
        //------------------------------------------------------------------------------------------------------
        XmlElement currentElement;
        XmlElement nodeAmt;
        
        AmountCur invoiceSettlementAmount;
    
        //          2.42: Amt
        nodeAmt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Amt'));
    
        invoiceSettlementAmount = mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
    
        //              2.43: InstdAmt
        currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAmt, 'InstdAmt',
            num2str(invoiceSettlementAmount * -1,0,2,1,0));
        SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', Currency::currencyCodeISO(mSKS_EFT_FileDetail.PaymentCurrencyCode));
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr_Nm</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Cdtr_Nm(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.79: Cdtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
        int len;
    
        //          Nm
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #UKBACS:
                len = 18;
                break;
            case #HKNURG:
            case #SGNURG:
            case #BMACHLV:
            case #NURGZA:   //SKS_VSTS_14034
            case #LVPMT:    //SKS_VSTS_14858
            case #MYACH: //SKS#DevOps:15860
            case #NZLVP:   //SKS#DevOps:17740
                len = 20;
                break;
            case #THSTRF:
            case #THNTRF:
            case #RTGSSDVA:
            case #RTGSURGP:
            case #AUHVP:
            case #NZHVP:                 //SKG#VSTS:10417
            case #IEINTHV:
            case #SGTT:                 //SKS_VSTS_13732
            case #SGRTGS:               //SKS_VSTS_13732
            case #SGFAST:               //SKS_VSTS_13732
            case #CH_URGP_HV:           //SKS_VSTS_13984
            case #URGPZA://SKS_VSTS_14034
            case #INTLZA://SKS_VSTS_14034
            case #DEHVP:   //SKS#DevOps:15654
            case #PLDOM:  //SKS#DevOps:16276
            case #PLINTL:  //SKS#DevOps:16276
            case #SPLIT:  //SKS#DevOps:16276
            case #PLSEPA:  //SKS#DevOps:16276
            case #INRTGS:
            case #INNEFT:       //SKS#devOps:16683
            case #TAX:  //SKS#DevOps:17886
            case #OMHVP:   //SKS#DevOps:19642
            case #AEHVP:   //SKS#DevOps:19698
            case #CNHVP:   //SKS#DevOps:19698
            case #CNLVP:   //SKS#DevOps:19698
            case #MXHVP:   //SKS#DevOps:19698
            case #NLHVP:   //SKS#DevOps:19698
            case #UKHVP:   //SKS#DevOps:19698
            case #ITHVP:   //SKS#DevOps:19731
            case #FRHVP:   //SKS#DevOps:19731
                len = 70;
                break;
            case #CA450:
            case #JPZPP:
                len = 30;
                break;
            case #CACHK:
            case #CH01:
            case #CH03:
            case #SGACH:               //SKS_VSTS_13732
            case #CHKOS:        //SKS#DevOps:16196
            case #VCARD:       //SKS#DevOps:16755
            case #OMLVP:       //SKS#DevOps:19642
            case #MXLVP:       //SKS#DevOps:19642
            case #IEEURLV:
            case #HKPRPT:       //SKS#DevOps:20172
            case #SAWIREHV:     //SKS#DevOps:19046
            case #BHWIREHV:     //SKS#DevOps:19046
                len = 140;
                break;
            case #USHVP:
            case #VNLVP:   //SKS#DevOps:15528
            case #USCHK:  //SKS#DevOps:15509
                len = 70;
                break;
            case #USLVP:
            case #USLVP_CTX:        //SKS#DevOps:16686
                len = 160;
                break;
            case #SEPA:
                if(mSKS_EFT_FileFormatPaymSpec.FormatId == 'EU-HSBC-CCTI-V22-FR')
                {
                    len = 70;
                }
                else
                {
                    len = 140;
                }
                break;
            case #INTLPMT://SKS_VSTS_13941
                len = 35;
                break;
            default:
                len = 35;
                break;
        }
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THCHK    ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THSTRF   ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THNTRF   ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THBAHTUP ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THOSTRUP ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRPT   ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SAWIREHV ||      //SKS#DevOps:19046
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BHWIREHV ||      //SKS#DevOps:19046
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRMPTPY)       //SKS#DevOps:16055
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', this.CharacterReplacement(VendTable::getVendorName(mSKS_EFT_FileDetail.AccountNum, mSKS_EFT_FileDetail.AccountCompany)), 0, false);
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', this.CharacterReplacement(mRemittanceName), len, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_Cdtr_PstlAdr_Structured</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creditor Address
    /// </summary>
    /// <param name = "_node">node</param>
    /// <param name = "_countryId">countryId</param>
    /// <param name = "_address">address</param>
    /// <param name = "_postalCode">postalCode</param>
    /// <param name = "_city">city</param>
    /// <param name = "_length">length</param>
    /// <param name = "_address2">address2</param>
    /// <param name = "_state">state</param>
    /// <param name = "_bldgNbr">bldgNbr</param>
    protected void node_Cdtr_PstlAdr_Structured(XmlElement _node,
                            AddressCountryRegionId _countryId,
                            str _address,
                            AddressZipCodeId _postalCode,
                            AddressCity _city,
                            int _length = 35,
                            SKS_EB_Address _address2 = '',
                            AddressCountryRegionName _state = '',
                            LogisticsAddressBuildingCompliment _bldgNbr = '')//SKS_VSTS_14760
    {
        //------------------------------------------------------------------------------------------------------
        //          PstlAdr
        //              StrtNm
        //              BldgNb
        //              PstCd
        //              TwnNm
        //              CtrySubDvsn
        //              Ctry
        //              AdrLine
        //              AdrLine
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePstlAdr;
        LogisticsAddressCountryRegionISOCode countryRegion;

        countryRegion = this.getLogisticsAddressCountryISO(_countryId);

        if(countryRegion ||
       _address ||
       _postalCode ||
       _city ||
       _address2 ||
       _state ||
       _bldgNbr)
        {
            //      PstlAdr
            nodePstlAdr = _node.appendChild(xmlDoc.createElement('PstlAdr'));

            //              StrtNm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'StrtNm', this.CharacterReplacement(_address + ' ' + _address2), 70, false);

            //              BldgNb
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'BldgNb', this.CharacterReplacement(_bldgNbr), 16, false);

            //              PstCd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'PstCd', _postalCode, 16, false);

            //              TwnNm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', this.CharacterReplacement(_city), 35, false);

            //              CtrySubDvsn
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'CtrySubDvsn', this.CharacterReplacement(_state), 35, false);

            //              Ctry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', countryRegion, 2, false);

        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  Othr
        //                      Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
        XmlElement nodeOther;
        XmlElement nodeCdtrAcctTp;
        XmlElement nodePrtryAcct;
        str value;
        int len;
    
        if((mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::No && 
            subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK' &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #VCARD) &&       //SKS#DevOps:16755
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #USCHK)     //SKS#DevOps:20378
        {
            // If CHAPS and no bank account number use IBAN
            // IBAN is part of the base class
            if(mSKS_EFT_FileDetail.DepBankIBAN != '' &&
              (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKCHPRPT ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKCHURGP ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKCHSDVA ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #RTGSSDVA ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #RTGSURGP ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGPRPT   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGURGP   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKURGP   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRPT   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THOSTRUP ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MOPRPT   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MOURGP   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MONURG   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPHVP    ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USHVP    ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXCBPMT  ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA     ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BMWIREHV ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #IEEURLV  ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #IEINTHV  ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CH03     ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKBACS   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKFP     ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CAURGP   ||//SKG#VSTS:11744
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CH_URGP_HV||             //SKG#VSTS:13984
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTLPMT  ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRMPTPY||  //SKS#DevOps:16055
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TTRTGS   || // SKS#DevOps:16216
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGPZA   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTLZA   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLDOM    ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLINTL   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SPLIT    ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLSEPA   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TAX      ||      //SKS#DevOps:17886
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SAWIREHV ||      //SKS#DevOps:19046
               mSKS_EFT_FileFormatPaymSpec.TransactionCode ==#SAACHLVP  ||      //SKS#DevOps:19046
               mSKS_EFT_FileFormatPaymSpec.TransactionCode ==#BHWIREHV  ||      //SKS#DevOps:19046
               mSKS_EFT_FileFormatPaymSpec.TransactionCode ==#BHACHLVP  ||      //SKS#DevOps:19046
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INRTGS   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INNEFT   ||     //SKS#DevOps:16683
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AELVP    ||      //SKS#DevOps:19698
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGTT     ||//SKS_VSTS_13941  && SKS#DevOps:15748
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYPP))  //SKS#DevOps:15750
            {
                //          2.80: CdtrAcct
                nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
                //              Id
                nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
                //                  IBAN
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN);
            }
            else if((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GDPMT ||
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OMHVP ||
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AEHVP ||                  //SKS#DevOps:19698
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLHVP ||                  //SKS#DevOps:19698
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKHVP ||                  //SKS#DevOps:19698
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ITHVP ||                  //SKS#DevOps:19731
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FRHVP ||                  //SKS#DevOps:19731
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CNHVP)&&                   //SKS#DevOps:19698                  //SKS#DevOps:19642
                    (mSKS_EFT_FileDetail.DepBankIBAN || mSKS_EFT_FileDetail.DepBankAcct))       //SKS#DevOps:16193
            {
                //          2.80: CdtrAcct
                nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
                //              Id
                nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
                
                if(mSKS_EFT_FileDetail.DepBankIBAN)
                {
                    //                  IBAN
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN, 34);
                }
                else if(mSKS_EFT_FileDetail.DepBankAcct)
                {
                    //                  Othr
                    nodeOther = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));

                    //                      Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', mSKS_EFT_FileDetail.DepBankAcct, 34);
                }
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKPRPT)     //SKS#DevOps:20172
            {
                //          2.80: CdtrAcct
                nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
                //              Id
                nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));

                if(mSKS_EFT_FileDetail.DepBankAcct)
                {
                    //                  Othr
                    nodeOther = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));

                    //                      Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', mSKS_EFT_FileDetail.DepBankAcct, 34);
                }
                else if(mSKS_EFT_FileDetail.DepBankIBAN)
                {
                    //                  IBAN
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN, 24);
                }
                
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DEHVP ||  mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VNHVP)   //SKS#DevOps:15654
            {
                //          2.80: CdtrAcct
                nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
                //              Id
                nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));

                if(mSKS_EFT_FileDetail.DepBankIBAN)
                {
                    //                  IBAN
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN, 30);
                }
                else if(mSKS_EFT_FileDetail.DepBankAcct)
                {
                    //                  Othr
                    nodeOther = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));

                    //                      Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', mSKS_EFT_FileDetail.DepBankAcct, 34);
                }
            }
            else
            {
                //          2.80: CdtrAcct
                nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
                //              Id
                nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
                if (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BMACHLV || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BMWIREHV)
                {
                    nodePrtryAcct = nodeCdtrAcct.appendChild(xmlDoc.createElement('PrtryAcct'));

                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePrtryAcct, 'Id', mSKS_EFT_FileDetail.DepBankAcct, 34);
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THBAHTUP ||
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYACH ||
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CBC ||
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYPP)      //SKS#DevOps:15619
                {
                    //                  Othr
                    nodeOther = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));

                    //                      Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', mSKS_EFT_FileDetail.DepBankAcct); //SKS_VSTS_14109
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACBACH)  //SKS_DevOps_15476
                {
                    //                  Othr
                    nodeOther = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));

                    //                      Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', mSKS_EFT_FileDetail.DepBankAcct, 7);
                }
                else 
                {

                   //                  Othr
                    nodeOther = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));

                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #MXSPID:
                        case #MXCBPMT:
                        case #MXDOMWIR:
                        case #MXACH:
                        case #NURGZA:
                        case #OMLVP:            //SKS#DevOps:19642
                        case #MXLVP:            //SKS#DevOps:19698
                            len = 20;
                            break;
                        case #AUHVP:
                        case #URGPZA://SKS_VSTS_14304
                        case #INTLZA://SKS_VSTS_14304
                        case #TTRTGS:// SKS#DevOps:16216
                        case #SAACHLVP:// SKS#DevOps:19046
                        case #SAWIREHV:// SKS#DevOps:19046
                        case #BHWIREHV:// SKS#DevOps:19046
                        case #BHACHLVP:// SKS#DevOps:19046
                            len = 34;
                            break;
                        case #NZHVP:                     //SKG#VSTS:10417
                            len = 35;
                            break;
                        case #CH01:
                        case #LVPMT://SKS_VSTS_14858
                            len = 9;
                            break;
                        case #CH03:
                            len = 12;
                            break;
                        case #AULVP:                      //SKS#DevOps:14815
                        case #MXHVP:                      //SKS#DevOps:19698
                            len = 10;
                            break;
                        case #THNTRF:
                        case #THSTRF:
                            len = 0;//SKS_VSTS_14800
                            break;
                        case #SGTT:                        //SKS_VSTS_13732
                        case #SGRTGS:
                        case #SGFAST:
                        case #SGACH:
                        case #VNLVP:   //SKS#DevOps:15528
                            len = 34;
                            break;                        
                        case #INTLPMT://SKS_VSTS_13941
                            len = 35;
                            break;
                        case #USCHK:
                            len = 17;
                            break;                            
                        case #NZLVP:                      //SKS#DevOps:18003
                            len = 16;
                            break;
                    }
    
                    //                      Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', mSKS_EFT_FileDetail.DepBankAcct, len);
                }
            }
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPZPP    ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPHVP    ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USHVP    ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USHVP    ||  //SKS_DevOps_17829
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACBACH  ||  //SKS_DevOps_15476
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GDPMT)       //SKS#DevOps:16193
            {
                if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::SavingsAccount)
                {
                    value = 'SVGS';
                }
                else
                {
                    value = 'CACC';
                }
            }
            if(value == 'SVGS' || value == 'CACC')
            {
                nodeCdtrAcctTp = nodeCdtrAcct.appendChild(xmlDoc.createElement('Tp'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctTp, 'Cd', value);
            }
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPZPP)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcct, 'Nm', this.CharacterReplacement(mRemittanceName), 30);
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AUHVP   || 
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACBACH ||  //SKS_DevOps_15476
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GDPMT)      //SKS#DevOps:16193
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcct, 'Nm', this.CharacterReplacement(mRemittanceName), 70);
            }
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SAWIREHV ||    //SKS#DevOps:19046
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BHWIREHV)      //SKS#DevOps:19046
            {
                //              Ccy
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcct, 'Ccy', mSKS_EFT_FileDetail.PaymentCurrencyCode);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //                  ClrSysMmbId
        //                      MmbId
        //                  BrnchId
        //                      Id
        //                  BIC
        //                  Nm
        //                  PstlAdr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
        XmlElement nodeBrnchId;
        XmlElement nodeCmbndId;
        int length = 0;
        int len;  //SKS#DevOps:15542
        str BeneficiaryBankCountry = this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId);
    
        if(BeneficiaryBankCountry == '')
        {
            BeneficiaryBankCountry = mRemittanceCountryRegionId;
        }
    
        if((subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK' &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #VCARD)||       //SKS#DevOps:16755
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USCHK)
        {
            //          2.77: CdtrAgt
            nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));
    
            //              FinInstnId
            nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
            // For BACS must use Sort Code in ClrSysMmbid\Mmbid
            if(((mSKS_EFT_FileDetail.DepSwiftNo == '' && mSKS_EFT_FileDetail.DepBankTransit != '') &&            //SKG#VSTS:8640
               (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRPT   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AUHVP    ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXCBPMT))||
                ((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NURGZA ||
                  mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INRTGS ||
                  mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INNEFT)  &&                      //SKG#VSTS:14003
                  mSKS_EFT_FileDetail.DepBankTransit != '')  ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYACH)
            {
                //                  ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXCBPMT)
                {
                    //                      MmbId
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 3);
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NURGZA)         //SKS_VSTS_14304
                {
                    //                      MmbId
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 6);
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INRTGS ||
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INNEFT)         //SKS#DevOps:16683
                {
                    //                      MmbId
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 6);
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRMPTPY)         //SKS#DevOps:16055
                {
                    //                      MmbId
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mVendBankAccount.BankGroupID, 6);                    
                }
                else
                {
                    //                      MmbId
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit);
                }
            }
            else if(mSKS_EFT_FileDetail.DepBankTransit != '' && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKNURG)            //SKG#VSTS:19699
            {
                //                  ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                //                      MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 3);
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRMPTPY)         //SKS#DevOps:16387
            {
                if(mSKS_EFT_FileDetail.DepSwiftNo != '')
                {
                    //                  BIC
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 0, false);
                }
                if(mVendBankAccount.BankGroupID)
                {
                    //                  ClrSysMmbId
                    nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                    //                      MmbId
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mVendBankAccount.BankGroupID, 3);
                }
            }
            else if((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USCHK ||
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OMLVP ||       //SKS#DevOps:19642
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OMLVP ||       //SKS#DevOps:19698
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CAACH)&& mSKS_EFT_FileDetail.DepBankTransit != '')
            {
                //                  ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                //                      MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 9);

            }
            else if(mSKS_EFT_FileDetail.DepSwiftNo != '' && (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYPP || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DEHVP || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VNHVP || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CBC))   //SKS#DevOps:15619 && SKS#DevOps:15654 && SKS#DevOps:15735
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 0, false);
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AUHVP   ||          //SKS#DevOps:14815
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKBACS  ||          //SKS#DevOps:15542
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKCHPRPT||          //SKS#DevOps:15542
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKCHURGP||          //SKS#DevOps:15542
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKCHSDVA||          //SKS#DevOps:15542
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THOSTRUP||          //SKS#DevOps:15627
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GDPMT   ||          //SKS#DevOps:16193
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AULVP)              //SKS#DevOps:16194
                
            {
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode) //SKS#DevOps:15542
                {
                    case #UKBACS:
                        len = 6;
                        break;
                    case #UKCHPRPT:
                    case #UKCHURGP:
                    case #UKCHSDVA:
                    case #THOSTRUP:         //SKS#DevOps:15627
                    case #GDPMT:
                    case #OMHVP:         //SKS#DevOps:19642
                        len = 35;
                        break;
                    default:
                        len = 6;
                        break;
                }

                if(mSKS_EFT_FileDetail.DepSwiftNo != '')
                {
                    //                  BIC
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 0, false);
                }
                if(mSKS_EFT_FileDetail.DepBankTransit)
                {
                    //                  ClrSysMmbId
                    nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                    //                      MmbId
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, len);
                }
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGPZA ||       //SKS_VSTS_14304
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTLZA ||        //SKS_VSTS_14854
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OMHVP  ||        //SKS#DevOps:19642
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AEHVP  ||        //SKS#DevOps:19698
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXHVP  ||        //SKS#DevOps:19698
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLHVP  ||        //SKS#DevOps:19698
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKHVP  ||        //SKS#DevOps:19698
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ITHVP  ||        //SKS#DevOps:19731
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FRHVP  ||        //SKS#DevOps:19731
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CNHVP)
            {
                if(mSKS_EFT_FileDetail.DepSwiftNo != '')
                {
                    //                  BIC
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 0, false);
                }
                else if(mSKS_EFT_FileDetail.DepBankTransit)
                {
                    //                  ClrSysMmbId
                    nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                    //                      MmbId
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 35);
                }
            }
            else if(mSKS_EFT_FileDetail.DepSwiftNo != '' &&
                    (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKFP       ||
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THBAHTUP   ||
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGACH      ||
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTLPMT    ||//SKS_VSTS_13941
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CH_URGP_HV ||//SKS_VSTS_13984
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGFAST     ||  //SKS_VSTS_14165
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLDOM      ||  //SKS#DevOps:16276
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLINTL     ||  //SKS#DevOps:16276
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SPLIT      ||  //SKS#DevOps:16276
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TAX        ||  //SKS#DevOps:17886
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXLVP      ||  //SKS#DevOps:19698
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGTT))    //SKS#DevOps:15626                        
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 0, false);
            }
            else if(mSKS_EFT_FileDetail.DepBankTransit &&
                    (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGRTGS||           //SKS_VSTS_13732
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGACH  ||  //SKS_VSTS_13732
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLDOM  ||  //SKS#DevOps:16276
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLINTL ||  //SKS#DevOps:16276
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TAX    ||  //SKS#DevOps:17886
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SPLIT))    //SKS#DevOps:16276
            {
                //                  ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                //                      MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit);
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKFP       || //FP requires MmbId
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THSTRF || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THNTRF     ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPZPP  || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXSPID     ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXDOMWIR || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NZHVP    ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CAURGP   ||  mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CA450   ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKCHURGP ||  mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXACH   || //SKS_VSTS_13176
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CH01   || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CH03 ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTLPMT || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TTRTGS ||       //SKS#DevOps:16219, 13941
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NZLVP ||        //SKS#DevOps:18003
                   (mSKS_EFT_FileFormatPaymSpec.TransactionCode != #UKBACS && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #UKFP       &&
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THBAHTUP && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THOSTRUP &&
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THPRPT  && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THPRMPTPY &&
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SAWIREHV && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BHWIREHV &&
                   ((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPHVP  || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXCBPMT  ||
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USHVP  ||   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CAACH)  &&
                    mSKS_EFT_FileDetail.DepSwiftNo == '')) &&
                    mSKS_EFT_FileDetail.DepBankTransit) // If not BACS and routing number is entered then use it instead of SWIFT BIC
            {
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #UKFP:
                    case #NZHVP:        //SKS#DevOps:17740
                        //                  ClrSysMmbId
                        nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                        //                      MmbId
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 6);
                        break;
                    case #JPZPP:
                        //                  ClrSysMmbId
                        nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                        //                      MmbId
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 4);
                        break;
                    case #CA450:
                    case #CAURGP:
                        //                  BIC
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 0, false);

                        //                  ClrSysMmbId
                        nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                        //                      MmbId
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 9);
                        break;
                    case #MXSPID:
                    case #MXCBPMT:
                    case #MXDOMWIR:
                    case #MXACH:
                    case #THSTRF:
                    case #THNTRF:
                        //                  ClrSysMmbId
                        nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                        //                      MmbId
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 3);
                        break;
                    case #CH01:
                    case #CH03:
                        //                  ClrSysMmbId
                        nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                        //                      MmbId
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 5);
                        break;
                    case #INTLPMT://SKS_VSTS_13941
                        //                  ClrSysMmbId
                        nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                        //                      MmbId
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 35);
                        break;
                    case #TTRTGS:           //SKS#DevOps:16219
                        //                  ClrSysMmbId
                        nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                        //                      MmbId
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 7);
                        break;
                    default:
                        //                  ClrSysMmbId
                        nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                        //                      MmbId
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit);
                        break;
                }
    
            }
            else if (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BMACHLV || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BMWIREHV )
            {
                nodeCmbndId = nodeFinInstnId.appendChild(xmlDoc.createElement('CmbndId'));

                if(mSKS_EFT_FileDetail.DepSwiftNo)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCmbndId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 0, false);
                }
                else
                {
                    //                  ClrSysMmbId
                    nodeClrSysMmbId = nodeCmbndId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                    //                      MmbId
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'Id', mSKS_EFT_FileDetail.DepBankTransit);
                }
            }
            else if((mSKS_EFT_FileDetail.TransactionCode == #USLVP ||
                     mSKS_EFT_FileDetail.TransactionCode == #OMLVP ||     //SKS#DevOps:19642 
                     mSKS_EFT_FileDetail.TransactionCode == #USLVP_CTX) &&     //SKS#DevOps:15406, 16686
                     (mSKS_EFT_FileDetail.DepBankTransit  || mSKS_EFT_FileDetail.DepSwiftNo))
            {
                if(mSKS_EFT_FileDetail.DepBankTransit)
                {
                    //                  ClrSysMmbId
                    nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                    //                      MmbId
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit);
                }
                else
                {
                    //                  BIC
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 0, false);
                }
            }
            else if(mSKS_EFT_FileDetail.TransactionCode == #LVPMT &&
                (mSKS_EFT_FileDetail.DepBankTransit  || mSKS_EFT_FileDetail.DepSwiftNo))//SKS_VSTS_14858
            {
                if(mSKS_EFT_FileDetail.DepBankTransit)
                {
                    //                  ClrSysMmbId
                    nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                    //                      MmbId
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 6);
                }
                else if(mSKS_EFT_FileDetail.DepSwiftNo)
                {
                    //                  BIC
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 0, false);
                }
            }
            else if(mSKS_EFT_FileDetail.TransactionCode == #VNLVP && mSKS_EFT_FileDetail.DepBankTransit)//SKS#DevOps:15528
            {
                if(mSKS_EFT_FileDetail.DepBankTransit)
                {
                    //                  ClrSysMmbId
                    nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                    //                      MmbId
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 8);
                }
            }
            else if(mSKS_EFT_FileDetail.DepSwiftNo != '' && 
                    (mSKS_EFT_FileFormatPaymSpec.TransactionCode != #JPZPP && 
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CACBACH&&
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PLDOM &&
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PLINTL &&
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode != #OMLVP  &&     //SKS#DevOps:19642
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode != #OMHVP  &&     //SKS#DevOps:19642
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CNLVP  &&     //SKS#DevOps:19698
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MXLVP  &&     //SKS#DevOps:19698
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode != #UKHVP  &&     //SKS#DevOps:19698
                     mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SPLIT)) //SKS_DevOps_15476
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 0, false);
            }
            else if( mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACBACH && mSKS_EFT_FileDetail.DepBankTransit) //SKS_DevOps_15476
            {
                //                  ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                //                      MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 9);
            }
            
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CH_URGP_HV || mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CACBACH) //SKS_DevOps_15476
            {
                //                  Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankName), 140, false);
            }
    
            //                  PstlAdr
            switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
            {
                case #CA450:
                case #CAURGP:
                case #SAWIREHV:
                case #BHWIREHV:     //SKS#DevOps:19046
                    this.node_PstlAdr(nodeFinInstnId, BeneficiaryBankCountry, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '', mSKS_EFT_FileDetail_BenBank.BenBankCity, 0, '', '', true);
                    break;
                case #INTLZA://SKS_VSTS_14854
                    this.node_PstlAdr(nodeFinInstnId, BeneficiaryBankCountry, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '',mSKS_EFT_FileDetail_BenBank.BenBankCity);
                    break;
                case #NURGZA:       //SKS_VSTS_14304
                case #URGPZA:       //SKS_VSTS_14304
                case #THPRMPTPY:    //SKS#DevOps:16055
                case #CBC:
                    this.node_PstlAdr(nodeFinInstnId, BeneficiaryBankCountry, '', '', '');
                    break;
                case #SEPA:
                    this.node_PstlAdr_Structured(nodeFinInstnId,
                                                 BeneficiaryBankCountry,
                                                 mSKS_EFT_FileDetail_BenBank.BenBankAddr,
                                                 '',
                                                 mSKS_EFT_FileDetail_BenBank.BenBankCity);
                    break;
                case #MYPP://DevOps21381
                    break;
                case #MYACH://DevOps21803
                    this.node_PstlAdr(nodeFinInstnId, BeneficiaryBankCountry, '', '', '');
                    break;
                case #IEINTHV:
                case #CH_URGP_HV:       //SKS#VSTS:13984
                    this.node_PstlAdr_Structured(nodeFinInstnId,
                                                 BeneficiaryBankCountry,'','','');
                    break;
                case #CACBACH:  //SKS_DevOps_15476
                    this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, mSKS_EFT_FileDetail_BenBank.BenBankAddr,'', mSKS_EFT_FileDetail_BenBank.BenBankCity, 0,'', '', true);
                    break;
                default:
                    this.node_PstlAdr(nodeFinInstnId, BeneficiaryBankCountry, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '', '');
                    break;
            }
    
            switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
            {
                case #THBAHTUP:
                case #THOSTRUP:
                case #THPRPT:
                case #MXSPID:
                case #MXCBPMT:
                case #MXDOMWIR:
                case #MXACH:
                case #AUHVP:
                case #USHVP:
                case #USLVP:
                case #USLVP_CTX:        //SKS#DevOps:16686
                case #NZHVP:
                case #NURGZA://SKS_VSTS_14304 -->
                case #URGPZA:
                case #INTLZA://SKS_VSTS_14304 <--
                case #TTRTGS:       //SKS#DevOsp:16886
                case #NZLVP:
                    length = 0;
                    break;
                case #SEPA:
                    if(mSKS_EFT_FileFormatPaymSpec.FormatId == 'EU-HSBC-CCTI-V22-FR') //SKS#DevOps:16664
                    {
                        length = 0;
                    }
                    else
                    {
                        length = 35;
                    }
                    break;
                case #THSTRF:
                case #THNTRF:
                    length = 4;
                    break;
                default:
                    length = 3;
                    break;
            }
    
            if(mSKS_EFT_FileDetail_BenBank.BenBankBranch != '' && length != 0  &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BMACHLV &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BMWIREHV)
            {
                //                  BrnchId
                nodeBrnchId = nodeCdtrAgt.appendChild(xmlDoc.createElement('BrnchId'));
    
                //                      Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBrnchId, 'Id', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankBranch), length);
            }
        }
        else if((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHKOS||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VCARD) &&
               (mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId ||
                mSKS_EFT_FileDetail_BenBank.BenBankName))           //SKS#DevOps:16196
        {
            //          2.77: CdtrAgt
            nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));
    
            //              FinInstnId
            nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));

            //                  Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankName), 140, false);

            this.node_PstlAdr_Structured(nodeFinInstnId, this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId),'','','');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChqInstr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChqInstr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.52 ChqInstr
        //              2.54 ChqNb
        //              2.58 DlvryMtd
        //                  2.59: Cd
        //              2.67 MemoField
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeChqInstr;
        XmlElement nodeDlvryMtd;
        XmlElement nodeDlvryTo;
        XmlElement nodeAdr;
        str ChqTp, DlvryMtd, DlvryMtdTH;                        //SKG#VSTS:7958
        str chqNb;
        str Nm,StrtNm,CtrySubDvsn,Ctry;//SKS_VSTS_13658
        str value;
    
        //          2.52 ChqInstr
        nodeChqInstr = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('ChqInstr'));
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACHK || 
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USCHK ||     //SKS#DevOps:15509
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VCARD)       //SKS#DevOps:17099
        {
            chqNb = SKS_PP_StringFormats::strFill(10, this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left);
    
            //              2.54 ChqNb
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'ChqNb', chqNb, 0, false);
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGCHK ||  //SKS#DevOps:15626
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THCHK)    //SKS#DevOps:15627
                
        {
            //              2.54 ChqNb
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'ChqNb', 'BCHQ', 0, false);
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYCHK)  //SKS#DevOps:15619
        {
            //              2.53 ChqTp
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'ChqTp', 'BCHQ', 0, false);
        }
        else
        {
            //              2.53 ChqTp
            ChqTp = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Chqtp', mSKS_EFT_FileDetail.RecId));
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'ChqTp', ChqTp, 0, false);
        }
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHKOS)       //SKS#DevOsp:16196
        {
            //              2.54 ChqNb
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'ChqNb', this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 0, false);
        }
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACHK)                       //SKG#VSTS:10599
        {
            DlvryMtd = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DlvryMtdPrtry', mSKS_EFT_FileDetail.RecId));
    
            if(DlvryMtd)                                                                //SKG#VSTS:10701
            {
                //              2.58 DlvryMtd
                nodeDlvryMtd = nodeChqInstr.appendChild(xmlDoc.createElement('DlvryMtd'));
    
                //                  2.60: Prtry
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryMtd, 'Prtry', DlvryMtd, 0, false);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THCHK)
        {
            DlvryMtdTH = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DlvryMtdTH', mSKS_EFT_FileDetail.RecId));
    
            if(DlvryMtdTH)
            {
                //              2.58 DlvryMtd
                nodeDlvryMtd = nodeChqInstr.appendChild(xmlDoc.createElement('DlvryMtd'));
    
                //                  2.59: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryMtd, 'Cd', DlvryMtdTH, 0, false);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYCHK  ||//SKS#DevOps:15619
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHKOS)     //SKS#DevOps:16196
        {
            DlvryMtd = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DlvryMtd', mSKS_EFT_FileDetail.RecId));
    
            if(DlvryMtd)
            {
                //              2.58 DlvryMtd
                nodeDlvryMtd = nodeChqInstr.appendChild(xmlDoc.createElement('DlvryMtd'));
    
                //                  2.60: Prtry
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryMtd, 'Cd', DlvryMtd, 0, false);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #VCARD)      //SKS#DevOps:16755
        {
            DlvryMtd = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DlvryMtd', mSKS_EFT_FileDetail.RecId));

            if(DlvryMtd)        //SKS#DevOps:20378
            {
                //              2.58 DlvryMtd
                nodeDlvryMtd = nodeChqInstr.appendChild(xmlDoc.createElement('DlvryMtd'));
    
                //                  2.59: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryMtd, 'Cd', DlvryMtd, 0, false);
            }
        }

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THCHK &&
            mSKS_EFT_FileFormatPaymSpec.FormatId == 'AP-HSBC-CCTI-V22') //SKG#VSTS:7958
        {
            //              2.61 DlvrTo
            nodeDlvryTo = nodeChqInstr.appendChild(xmlDoc.createElement('DlvrTo'));
    
            switch(DlvryMtdTH)//SKS_VSTS_13658
            {
                case 'PUDB':
                    Nm          = 'HSBC';
                    StrtNm      = 'HSBC MESSENGER';
                    CtrySubDvsn = 'BANGKOK';
                    Ctry        = 'TH';
                    break;
                case 'PUCD':
                    Nm          = 'HSBC';
                    StrtNm      = 'CHEQUE EXPRESS';
                    CtrySubDvsn = 'BANGKOK';
                    Ctry        = 'TH';
                    break;
            }
            if(Nm || StrtNm || CtrySubDvsn || Ctry)//SKS_VSTS_13658
            {
                //              2.62 Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryTo, 'Nm', Nm,0,false);
    
                //              2.63 Adr
                nodeAdr = nodeDlvryTo.appendChild(xmlDoc.createElement('Adr'));
    
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'StrtNm', StrtNm, 0, false);
    
                //          CtrySubDvsn
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'CtrySubDvsn', CtrySubDvsn, 35, false);
    
                //          Ctry
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'Ctry', Ctry, 0, false);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYCHK ||   //SKS#DevOps:15619
	              mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHKOS)	   //SKS#DevOps:16196	
        {
            if(DlvryMtd)
            {
                //              2.61 DlvrTo
                nodeDlvryTo = nodeChqInstr.appendChild(xmlDoc.createElement('DlvrTo'));

                if(DlvryMtd == 'MLDB' || DlvryMtd == 'CRDB' || DlvryMtd == 'PUDB')
                {
                    //              2.62 Nm
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryTo, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName));
                    //              2.63 Adr
                    nodeAdr = nodeDlvryTo.appendChild(xmlDoc.createElement('Adr'));
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'StrtNm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr), 70, false); //SKS#DevOps:16196
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'PstCd', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode), 70, false);
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'TwnNm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity), 35, false);
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'CtrySubDvsn', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyState), 35, false);
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'Ctry', this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId));
                }
                else
                {
                    //              2.62 Nm
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryTo, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName));
                    //              2.63 Adr
                    nodeAdr = nodeDlvryTo.appendChild(xmlDoc.createElement('Adr'));
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'Ctry', this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId));
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'AdrLine', this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr), 0, false);
                }
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USCHK) 
        {
            if(DlvryMtd)
            {
                //              2.61 DlvrTo
                nodeDlvryTo = nodeChqInstr.appendChild(xmlDoc.createElement('DlvrTo'));         //SKS#DevOps:20378

                if(DlvryMtd == 'MLDB' || DlvryMtd == 'CRDB' || DlvryMtd == 'PUDB')
                {
                    //              2.62 Nm
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryTo, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName));
                    //              2.63 Adr
                    nodeAdr = nodeDlvryTo.appendChild(xmlDoc.createElement('Adr'));

                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'StrtNm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr), 0, false);
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'BldgNb', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2), 0, false);
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'PstCd', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode), 0, false);
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'TwnNm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity), 0, false);
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'CtrySubDvsn', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyState), 0, false);
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'Ctry', this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId));
                }
                else
                {
                    //              2.62 Nm
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryTo, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName));
                    //              2.63 Adr
                    nodeAdr = nodeDlvryTo.appendChild(xmlDoc.createElement('Adr'));

                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'StrtNm', this.CharacterReplacement(mRemittanceAdrline1), 0, false);
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'BldgNb', this.CharacterReplacement(mRemittanceAdrline2), 0, false);
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'PstCd', this.CharacterReplacement(mRemittanceZipCode), 0, false);
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'TwnNm', this.CharacterReplacement(mRemittanceCity), 0, false);
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'CtrySubDvsn', this.CharacterReplacement(mRemittanceState), 0, false);
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'Ctry', this.getLogisticsAddressCountryISO(mRemittanceCountryRegionId));
                }
            }
        }
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACHK)
        {
            //              2.66 FrmsCd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'FrmsCd', this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('FormsCode', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank)), 35, false);
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHKOS ||            //SKS#DevOps:16196
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VCARD)              //SKS#DevOps:16755
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('FrmsCd', mSKS_EFT_FileDetail.RecId));

            //              2.66 FrmsCd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'FrmsCd', value, 35, false);
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USCHK)
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('FrmsCd', mSKS_EFT_FileDetail.RecId));
            //              2.66 FrmsCd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'FrmsCd', value, 5, false);
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SGCHK  &&       //SKS#DevOps:15626
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CHKOS  &&       //SKS#DevOps:16196
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #VCARD)          //SKS#DevOps:16755
        {
            //              2.67 MemoField
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'MemoFld', this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('MemoField', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank)), 0, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt1</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_IntrmyAgt1(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.71: IntrmyAgt1
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeIntrmyAgt1;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
        boolean printIntrmyAgt1 = true;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #CACBACH:
            case #PLSEPA:
                printIntrmyAgt1 = false;
                break;
            case #SEPA:
                if(mSKS_EFT_FileFormatPaymSpec.FormatId == 'EU-HSBC-CCTI-V22-FR')//SKS#DevOps:16908
                {
                    printIntrmyAgt1 = false;
                }
                break;
        }
        if((mSKS_EFT_FileDetail_Intermediary.IntBankSwift != '' || mSKS_EFT_FileDetail_Intermediary.IntBankId != '') &&
            subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK' && printIntrmyAgt1)              //SKS_VSTS_14304           
        {
            //          2.71: IntrmyAgt1
            nodeIntrmyAgt1 = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt1'));
    
            //              FinInstnId
            nodeFinInstnId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(mSKS_EFT_FileDetail_Intermediary.IntBankSwift != '')
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail_Intermediary.IntBankSwift, 0, false);
            }
            else if(mSKS_EFT_FileDetail_Intermediary.IntBankId != ''         && //SKS_VSTS_14854
               (mSKS_EFT_FileFormatPaymSpec.TransactionCode != #USHVP   &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CH_URGP_HV))                    //SKS#VSTS:13984
            {    
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail_Intermediary.IntBankId, 0, false);
            }
    
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #USHVP    &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CH_URGP_HV)                    //SKS#VSTS:13984
            {
                //                  Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankName), 0, false);
    
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USLVP ||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USLVP_CTX)
                {
                    //                  PstlAdr
                    this.node_PstlAdr_Structured(nodeFinInstnId, mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId, mSKS_EFT_FileDetail_Intermediary.IntBankAddr,'', mSKS_EFT_FileDetail_Intermediary.IntBankCity, 35, '', '', mSKS_EFT_FileDetail_Intermediary.IntBankAddr2);
                }
                else  if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTLZA)//SKS_VSTS_14854
                {
                    //                  PstlAdr
                    this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId,'' + '' + '', '', '');
                }
                else
                {
                    //                  PstlAdr
                    this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId, mSKS_EFT_FileDetail_Intermediary.IntBankAddr + '' + mSKS_EFT_FileDetail_Intermediary.IntBankAddr2, '', mSKS_EFT_FileDetail_Intermediary.IntBankCity);
                }
            }
            else
            {
                //                  PstlAdr
                this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId, '', '', '');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_PmtId</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_PmtId(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.28: PmtId
        //              2.29: InstrId
        //              2.30: EndToEndId
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodePmtId;
        int len;
        str VendorType;
    
        //          2.28: PmtId
        nodePmtId = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('PmtId'));
    
        switch(mSKS_EFT_FileDetail.PaymSpec)
        {
            case #MXSPID:
            case #MXCBPMT:
            case #MXDOMWIR:
            case #USHVP:
                len = 16;
                break;
            case #MXACH:
                len = 30;
                break;
            case #LVPMT://SKS_VSTS_14858
                len = 12;
                break;
            default:
                len = 35;
                break;
        }

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VCARD)  //SKS#DevOps:16755
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'InstrId', SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 10));
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CACBACH  &&      //SKS_DevOps_15476
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #GDPMT)           //SKS#DevOps:16193
        {
            //              2.29: InstrId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'InstrId', SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), len));
        }
    
        //              2.30: EndToEndId
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode ==   #JPZPP)
        {
            len = 20;
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXSPID  ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXCBPMT ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXDOMWIR||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USHVP ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BMWIREHV)
        {
            len = 16;
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode ==   #USLVP ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode ==   #USLVP_CTX)        //SKS#DevOps:16686
        {
            len = 15;
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode ==   #BMACHLV ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode ==   #LVPMT)//SKS_VSTS_14858
        {
            len = 12;
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode ==   #CACBACH)
        {
            len = 8;
        }
        else
        {
            len = 35;
        }
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACBACH)  //SKS_DevOps_15476
        {
            if(this.getVendorType() == DirPartyBaseType::Person)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId','R' +  SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), len));
            }
            else if(this.getVendorType() == DirPartyBaseType::Organization)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId','C' + SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), len));
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRMPTPY)
        {
            //              2.29: InstrId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'InstrId', SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentVoucher), 35));

            //              2.30: EndToEndId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId', SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentVoucher), 35));
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GDPMT)  //SKS#DevOps:16193
        {
            VendorType = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('VendorType', mSKS_EFT_FileDetail.RecId));

            //              2.29: InstrId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'InstrId', VendorType + SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentVoucher), 35));

            //              2.30: EndToEndId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId', VendorType + SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentVoucher), 35));
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId', SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), len));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Purp</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Purp(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.86: Purp
        //              Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePurp;
        str value;
    
        switch(mSKS_EFT_FileDetail.PaymSpec)
        {
            case #HKPRPT:
            case #HKURGP:
            case #HKNURG:
            case #SGPRPT:
            case #SGURGP:
            case #SGNURG:
            case #MONURG:
            case #MOURGP:
            case #MOPRPT:
            case #SGCHK:
            case #HKCHK:
            case #IEEURLV:
            case #SGACH:            // SKS#VSTS:14426
            case #PLDOM:
            case #PLINTL:
                this.getBankPurposeCode();
                break;
            case #SEPA:
                if(mSKS_EFT_FileFormatPaymSpec.FormatId == 'EU-HSBC-CCTI-V22-FR')       //SKS#DevOps:16664
                {
                    this.getBankPurposeCode();
                }
                break;
        }
    
        if(bankCode != '')
        {
            //          2.86: Purp
            nodePurp = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Purp'));
    
            if(mSKS_EFT_FileDetail.PaymSpec == #HKURGP && mSKS_EFT_FileDetail.FormatId =='AP-HSBC-CCTI-V22') //DevOps19300
            {
                //              Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePurp, 'Cd', subStr(bankCode,1,4));
            }
            else
            {
                //              Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePurp, 'Cd', bankCode);
            }
        }
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #RTGSSDVA || 
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #RTGSURGP ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #RTGSURGP ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLDOM    ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLINTL)     //SKS#DevOps:16276
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Purp', mSKS_EFT_FileDetail.RecId));
    
            if(value)
            {
                nodePurp = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Purp'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePurp, 'Prtry', value);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.FormatId == 'AP-HSBC-CCTI-V22' && mSKS_EFT_FileFormatPaymSpec.PaymSpec== #SGNURG)
        {      
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpSG', mSKS_EFT_FileDetail.RecId));
    
            if(value)
            {
                nodePurp = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Purp'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePurp, 'Cd', value);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RgltryRptg</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RgltryRptg(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.89: RgltryRptg
        //              Dtls
        //                  Inf
        //------------------------------------------------------------------------------------------------------
    
        XmlElement      nodeRgltryRptg;
        XmlElement      nodeDtls;
        XmlElement      nodeAuthrty;
        List            strList = new List(Types::String);
        ListIterator    iterator;
        str value, dbtCdtRptgInd, pmtCode, pmtPurp;
        XmlElement      currentElement;//SKS_VSTS_14841
    
        if(((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THOSTRUP  ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THBAHTUP) && mSKS_EFT_FileDetail.PaymentCurrencyCode != 'THB') ||
            ((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THCHK  || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THBAHTUP||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRPT || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRMPTPY) && //SKS#DevOps:16055,14745
              mSKS_EFT_FileDetail.PaymentCurrencyCode == 'THB'))
        {
            this.getBankPurposeCode();
    
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRMPTPY && bankCode)   //SKS#DevOps:16055
            {
                nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));
                nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));
                
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', bankCode);                
            }      
            else if(BankCodeText)
            {
                nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));
                nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));
    
                strList = Global::strSplit(bankCodeText,'\n');
                iterator = new ListIterator(strlist);
                while(iterator.more())
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', iterator.value());
                    iterator.next();
                }
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TTRTGS || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CBC)     //SKS#DevOps:16216
        {
            this.getBankPurposeCode();
    
            if(bankCodeText)
            {
                nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));
                nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));
    
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', '/BUSINESS/' + bankCodeText);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPHVP    ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AUHVP    ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NZHVP)    
        {
            this.getBankPurposeCode();
    
            if((mSKS_EFT_FileDetail.PaymentCurrencyCode == 'JPY'    ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'AUD'    ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'NZD')   && bankCodeText)
            {
                nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));
                nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));
    
                strList = Global::strSplit(bankCodeText,'\n');
                iterator = new ListIterator(strlist);
                while(iterator.more())
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', iterator.value());
                    iterator.next();
                }
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXSPID  ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode== #SAWIREHV ||      //SKS#DevOps:19046
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGPZA ||     //SKS#DevOps: 20169 (port 20054)
                mSKS_EFT_FileFormatPaymSpec.TransactionCode== #BHWIREHV ||      //SKS#DevOps:19046
                mSKS_EFT_FileFormatPaymSpec.TransactionCode== #BHACHLVP ||      //SKS#DevOps:19046
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXCBPMT)
        {
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXSPID)
            {
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('SPIDPurp', mSKS_EFT_FileDetail.RecId));
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode== #BHWIREHV)
            {
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BHWirePurp', mSKS_EFT_FileDetail.RecId));
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode== #BHACHLVP)
            {
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BHAchPurp', mSKS_EFT_FileDetail.RecId));
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode== #URGPZA) //SKS#DevOps:20169 (Port of 20054)
            {                
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DtlsCdValue', mSKS_EFT_FileDetail.RecId));
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode== #SAWIREHV)
            {
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DtlsInfValue', mSKS_EFT_FileDetail.RecId));
            }
            else
            {
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('INTPurp', mSKS_EFT_FileDetail.RecId));
            }

            if(value)
            {
                nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGPZA) //SKS#DevOps:20169 (Port of 20054)
                {
                    dbtCdtRptgInd = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DbtCdtRptgInd', mSKS_EFT_FileDetail.RecId));
                    if(dbtCdtRptgInd)
                    {
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRgltryRptg, 'DbtCdtRptgInd', dbtCdtRptgInd );
                    }
                }
                nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));
                
                
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXSPID) //SKS#DevOps:20851 (Port of 19604)
                {
                    value = '/SPID/OC/' + value;
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BHWIREHV && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BHACHLVP)
                {
                    if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SAWIREHV) //SKS#DevOps:20169 (Port of 20054)
                    {
                        value = '/BENEFRES/SA//' + Value;
                    }
                    else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGPZA)
                    {
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Cd', value);
                    }
                    else
                    {
                        value = '/BENEFRES/MX//' + Value;
                    }
                }
                      
                if(value && (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BHWIREHV || 
                             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BHACHLVP))
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Cd', value);
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #URGPZA) //SKS#DevOps:20169 (Port of 20054)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', value);
                }
            }
        }
        else if (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USHVP)
        {
            if(Currency::currencyCodeISO(mSKS_EFT_FileDetail.PaymentCurrencyCode) == 'RMB' ||
               Currency::currencyCodeISO(mSKS_EFT_FileDetail.PaymentCurrencyCode) == 'CNY')
            {
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PmtPurp', mSKS_EFT_FileDetail.RecId));
            }
            else            //SKS#DevOps:16686
            {
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PmtPurpIN', mSKS_EFT_FileDetail.RecId));
            }
            if (value)
            {
                nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));
                nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', value);
            }
        }
        else if (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AEHVP ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AELVP)     //SKS#DevOps:19698
        {
            if(Currency::currencyCodeISO(mSKS_EFT_FileDetail.PaymentCurrencyCode) == 'RMB' ||
               Currency::currencyCodeISO(mSKS_EFT_FileDetail.PaymentCurrencyCode) == 'CNY')
            {
                pmtCode = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PmtCodeAE', mSKS_EFT_FileDetail.RecId));
                pmtPurp = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PmtPurpAE', mSKS_EFT_FileDetail.RecId));
            }
            if (pmtCode || pmtPurp)
            {
                //          RgltryRptg
                nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));

                //              Dtls
                nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

                //                  Ctry
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Ctry', this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId));
                
                //                      Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Cd', pmtCode, 3, false);

                //                      Inf
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', pmtPurp, 35, false);
            }
        }
        else if ((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLINTL &&        //SKS#DevOps:16276
            (Currency::currencyCodeISO(mSKS_EFT_FileDetail.PaymentCurrencyCode) == 'RMB' || Currency::currencyCodeISO(mSKS_EFT_FileDetail.PaymentCurrencyCode) == 'CNY')) ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKCHURGP)//SKS_VSTS_14900
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PmtPurp', mSKS_EFT_FileDetail.RecId));

            if (value)
            {
                nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));
                nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', value);
            }
        }
        else if (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLDOM)      //SKS#DevOps:17886
        {
            nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));
            nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', '51');
        }
        else if (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SPLIT)      //SKS#DevOps:17886
        {
            nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));
            nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', '53');
        }
        else if (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TAX)      //SKS#DevOps:17886
        {
            nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));
            nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', '71');
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTLZA ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGPZA)               //SKG#VSTS:14310        
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ZACode', mSKS_EFT_FileDetail.RecId));
            dbtCdtRptgInd = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DbtCdtRptgInd', mSKS_EFT_FileDetail.RecId));  //SKS#VSTS:14310
            
            this.getBankPurposeCode();
            
            if(value || BankCodeText)            
            {
                nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));
                //--> SKS#VSTS:14310
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRgltryRptg, 'DbtCdtRptgInd', dbtCdtRptgInd, 0, false);
                
                nodeAuthrty = nodeRgltryRptg.appendChild(xmlDoc.createElement('Authrty'));
                
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAuthrty, 'Nm', this.CharacterReplacement(mBankAccountTable.Name), 140, false);
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAuthrty, 'Ctry', this.getLogisticsAddressCountryISO(mBankAccountTable.postalAddress().CountryRegionId), 0, false);
                //<-- SKS#VSTS:14310
                nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));
                
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Cd', value, 10, false);
                
                currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Amt', num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0));   //SKS_VSTS_14854
                
                SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', mSKS_EFT_FileDetail.PaymentCurrencyCode, 0, false); //SKS_VSTS_14854
                
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', this.CharacterReplacement(BankCodeText));                
            }
        }
        else if ((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTLPMT) &&
                 (Currency::currencyCodeISO(mSKS_EFT_FileDetail.PaymentCurrencyCode) == 'CHF' ||
                  Currency::currencyCodeISO(mSKS_EFT_FileDetail.PaymentCurrencyCode) == 'CNY'))                 //SKS#VSTS:14738
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('INTLPMTPurp', mSKS_EFT_FileDetail.RecId));

            if (value)
            {
                nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));
                nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', value);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYPP)  //SKS#DevOps:15619
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Type', mSKS_EFT_FileDetail.RecId));
            this.getBankPurposeCode();

            nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));

            nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

            if(value)       //SKS#DevOps:15860
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Tp', value);
            }

            if(bankCode)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Cd', this.CharacterReplacement(bankCode));
            }
            if(bankCodeText)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', this.CharacterReplacement(bankCodeText));
            }
        }
        else if (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGPCA && mSKS_EFT_FileFormatPaymSpec.FormatId =='CA-HSBC-CCTI-V22')
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PmtPurp', mSKS_EFT_FileDetail.RecId));
            if (value)
            {
                nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));
                nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', value);
            }
        }
        else if (mSKS_EFT_FileFormatPaymSpec.FormatId =='EU-HSBC-CCTI-V22-OM')//DevOPs20295
        {
            value   = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpOfPmt', mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookup));
            if (value)
            {
                nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));
                nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Cd', value);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Rltd_RmtLctnPstlAdr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Remittance Location postal Address
    /// </summary>
    /// <param name = "_nodeCdtTrfTxInf">CdtTrfTxInf</param>
    /// <param name = "_value">value</param>
    /// <param name = "_email">email</param>
    /// <param name = "_name">name</param>
    /// <param name = "_countryId">countryId</param>
    protected void node_CdtTrfTxInf_Rltd_RmtLctnPstlAdr(XmlElement _nodeCdtTrfTxInf, str _value, Email _email, Name _name,  LogisticsAddressCountryRegionISOCode _countryId)
    {
        XmlElement      nodeRltdRmtInf;
        XmlElement      nodeRmtLctnPstlAdr;
        XmlElement      nodeAdr;
    
        //          2.91: RltdRmtInf
        nodeRltdRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RltdRmtInf'));
    
        //              2.93: RmtLctnMtd
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRltdRmtInf, 'RmtLctnMtd', _value, 0, false);
    
        //              2.94: RmtLctnElctrncAdr
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRltdRmtInf, 'RmtLctnElctrncAdr', _email, 0, false);

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MYACH &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MYCHK &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MYPP)  //SKS#DevOps:15750
        {   
            nodeRmtLctnPstlAdr = nodeRltdRmtInf.appendChild(xmlDoc.createElement('RmtLctnPstlAdr'));
    
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtLctnPstlAdr, 'Nm', _name, 0, false);
    
            nodeAdr = nodeRmtLctnPstlAdr.appendChild(xmlDoc.createElement('Adr'));
    
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'Ctry', _countryId, 0, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RltdRmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RltdRmtInf(XmlElement _nodeCdtTrfTxInf)                     //SKG#VSTS:8640
    {
        //------------------------------------------------------------------------------------------------------
        //          2.91: RltdRmtInf
        //              2.93: RmtLctnMtd
        //              2.94: RmtLctnElctrncAdr
        //------------------------------------------------------------------------------------------------------
        SKS_EB_Vendor   sks_eb_Vendor;
        VendTable       vendorTable;
        str             value;
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THSTRF   ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THNTRF   ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THBAHTUP ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THOSTRUP ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRPT   ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THCHK    ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRMPTPY||       //SKS#DevOps:16055
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NURGZA   ||       //SKS_VSTS_14304
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGPZA   ||       //SKS_VSTS_14304
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTLZA   ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYCHK    ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYACH    ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYPP     ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGACH)           //DevOps19357
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RmtLctnMtd', mSKS_EFT_FileDetail.RecId));
            sks_eb_Vendor = SKS_EB_Vendor::find(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum);

            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYACH ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYCHK ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYPP)  //SKS#DevOps:15750
            {
                value = 'EMAL';
            }
    
            if(value && (sks_eb_Vendor.EM1Vendor || sks_eb_Vendor.EM2Addr || sks_eb_Vendor.EM3Addr || sks_eb_Vendor.EM4Addr))
            {
    
                if(sks_eb_Vendor.EM1Vendor)
                {
                    vendorTable = VendTable::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum);
    
                    this.node_CdtTrfTxInf_Rltd_RmtLctnPstlAdr(_nodeCdtTrfTxInf, value, vendorTable.email(), DirParty::primaryElectronicAddress(vendorTable.Party, LogisticsElectronicAddressMethodType::Email).Description, mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId);
                }
                if(sks_eb_Vendor.EM2Addr)
                {
                    this.node_CdtTrfTxInf_Rltd_RmtLctnPstlAdr(_nodeCdtTrfTxInf, value, sks_eb_Vendor.EM2Addr, sks_eb_Vendor.EM2Name, mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId);
                }
                if(sks_eb_Vendor.EM3Addr)
                {
                    this.node_CdtTrfTxInf_Rltd_RmtLctnPstlAdr(_nodeCdtTrfTxInf, value, sks_eb_Vendor.EM3Addr, sks_eb_Vendor.EM3Name, mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId);
                }
                if(sks_eb_Vendor.EM4Addr)
                {
                    this.node_CdtTrfTxInf_Rltd_RmtLctnPstlAdr(_nodeCdtTrfTxInf, value, sks_eb_Vendor.EM4Addr, sks_eb_Vendor.EM4Name, mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId);
                }
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYCHK ||      //SKS#DevOps:15619
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYACH ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYPP)
            {
                if(sks_eb_Vendor.EM1Vendor || sks_eb_Vendor.EM2Addr || sks_eb_Vendor.EM3Addr || sks_eb_Vendor.EM4Addr)
                {
    
                    if(sks_eb_Vendor.EM1Vendor)
                    {
                        vendorTable = VendTable::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum);
    
                        this.node_CdtTrfTxInf_Rltd_RmtLctnPstlAdr(_nodeCdtTrfTxInf, value, vendorTable.email(), DirParty::primaryElectronicAddress(vendorTable.Party, LogisticsElectronicAddressMethodType::Email).Description, mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId);
                    }
                    if(sks_eb_Vendor.EM2Addr)
                    {
                        this.node_CdtTrfTxInf_Rltd_RmtLctnPstlAdr(_nodeCdtTrfTxInf, value, sks_eb_Vendor.EM2Addr, sks_eb_Vendor.EM2Name, mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId);
                    }
                    if(sks_eb_Vendor.EM3Addr)
                    {
                        this.node_CdtTrfTxInf_Rltd_RmtLctnPstlAdr(_nodeCdtTrfTxInf, value, sks_eb_Vendor.EM3Addr, sks_eb_Vendor.EM3Name, mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId);
                    }
                    if(sks_eb_Vendor.EM4Addr)
                    {
                        this.node_CdtTrfTxInf_Rltd_RmtLctnPstlAdr(_nodeCdtTrfTxInf, value, sks_eb_Vendor.EM4Addr, sks_eb_Vendor.EM4Name, mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId);
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        XmlElement nodeRmtInf;
        XmlElement nodeStrd;
        XmlElement nodeRfrdDocInf;
        XmlElement nodeRfrdDocAmt;
        XmlElement nodeCdtrRefInf;
        XmlElement nodeTp;
        XmlElement nodeCdOrPrtry;
        Boolean firstRec = true;
        str value, orgnlRcpt, orgnlTaxInv, idCard;
        VendTrans lVendTrans;
        str invDetailsString; //SKS#DevOps:15619
        TaxWithholdTrans        lTaxWithholdTrans;
        mSKS_EFT_TH_WithHoldingTaxFields = new SKS_EFT_TH_WithHoldingTaxFields();
        msks_EFT_FileDetail_PaymentLine = sks_EFT_FileDetail_PaymentLine::find(mSKS_EFT_FileDetail.RecId);

    
        // Get SKS_EFT_THWitholdingTaxFields
        mSKS_EFT_TH_WithHoldingTaxFields.getSKS_EFT_TH_WithHoldingTaxFields(mSKS_EFT_FileDetail.PaymentLineRecId);

        invDetailsString = this.getInvoiceDetails();  //SKS#DevOps:15619

    
        switch(mSKS_EFT_FileDetail.PaymSpec)
        {
            case #HKURGP: //DevOps18772
               
                if(msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeText)//DevOps 19300
                {
                    //          2.98: RmtInf
                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd',  msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeText);
                }
                break;
            case #HKCHK:
            case #SGCHK:
            case #CAURGP:
            case #CA450:
            case #THSTRF:
            case #THNTRF:
            case #THBAHTUP:
            case #THOSTRUP:
            case #THPRPT:
            case #CACHK:
            case #THPRMPTPY:        //SKS#DevOps:16055
                while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                {
                    if(invSKS_EFT_FileDetail.InvoiceNumber != '')
                    {
                        if(firstRec)
                        {
                            //          2.98: RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                            firstRec = false;
                        }
    
                        //              2.100: Strd
                        nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));
    
                        //              2.101: RfrdDocInf
                        nodeRfrdDocInf = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocInf'));
    
                        //              2.107: Number
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', invSKS_EFT_FileDetail.InvoiceNumber);
    
                        //              2.108: RltdDt
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
    
                        //              2.109 RfrdDocAmt
                        nodeRfrdDocAmt = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocAmt'));
    
                        this.node_RmtInf_Amt(nodeRfrdDocAmt, invSKS_EFT_FileDetail);
    
                    }
                }
                break;
            case #RTGSSDVA:
            case #RTGSURGP:
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RmtInf', mSKS_EFT_FileDetail.RecId));
                    
                if(value)
                {
                    //          2.98: RmtInf
                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
    
                    //              2.99: Ustrd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                }
                break;
            case #USHVP:
            case #USLVP:
            case #USLVP_CTX:            //SKS#DevOps:16686
            case #VNHVP:   //SKS#DevOps:15735
            case #INRTGS:   //SKS#DevOps:16683
            case #INNEFT:   //SKS#DevOps:16683
            case #CBC:
                this.node_CdtTrfTxInf_RmtInf_Ustrd(_nodeCdtTrfTxInf);
                break;
            case #SEPA:                                     //SKG#VSTS10636
            case #IEEURLV:
                while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                {
                    select firstonly crossCompany PaymId, Invoice from lVendTrans where lVendTrans.RecId == invSKS_EFT_FileDetail.VendTransRecId;

                    if(lVendTrans.PaymId)
                    {
                        if(firstRec)
                        {
                            //          2.98: RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                            firstRec = false;
                        }
    
                        //              2.100: Strd
                        nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));

                        //            2.120: CdtrRefInf
                        nodeCdtrRefInf = nodeStrd.appendChild(xmlDoc.createElement('CdtrRefInf'));
                        //              2.121: Tp
                        nodeTp = nodeCdtrRefInf.appendChild(xmlDoc.createElement('Tp'));
                        //                  2.122: CdOrPrtry
                        nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));
                        //                      2.123: Cd
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'SCOR');
                        //               2.126: Ref
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', lVendTrans.PaymId);
                    }
                }
                break;
            case #CH01:
                while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                {
                    select firstonly crossCompany PaymId, Invoice from lVendTrans where lVendTrans.RecId == invSKS_EFT_FileDetail.VendTransRecId;

                    if(lVendTrans.PaymId)
                    {
                        if(firstRec)
                        {
                            //          2.98: RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                            firstRec = false;
                        }
                        //          2.98: RmtInf
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                        //              2.100: Strd
                        nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));
                        //            2.120: CdtrRefInf
                        nodeCdtrRefInf = nodeStrd.appendChild(xmlDoc.createElement('CdtrRefInf'));
                        //               2.126: Ref
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', lVendTrans.PaymId);
                    }
                }
                break;
            case #THCHK:
                orgnlRcpt = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('OrgnlRcpt', mSKS_EFT_FileDetail.RecId));
                orgnlTaxInv = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('orgnlTaxInv', mSKS_EFT_FileDetail.RecId));
                idCard = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('IdCard', mSKS_EFT_FileDetail.RecId));

                //          2.98: RmtInf
                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                if(orgnlRcpt || orgnlTaxInv || idCard)
                {
                    //              2.99: Ustrd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(strLRTrim(orgnlRcpt +' '+ orgnlTaxInv + ' ' + idCard)), 140);
                }
                while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                {
                    if(invSKS_EFT_FileDetail.InvoiceNumber != '')
                    {
                        //              2.100: Strd
                        nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));
    
                        //              2.101: RfrdDocInf
                        nodeRfrdDocInf = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocInf'));
    
                        //              2.107: Number
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', invSKS_EFT_FileDetail.InvoiceNumber);
    
                        //              2.108: RltdDt
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
    
                        //              2.109 RfrdDocAmt
                        nodeRfrdDocAmt = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocAmt'));
    
                        this.node_RmtInf_Amt(nodeRfrdDocAmt, invSKS_EFT_FileDetail);

                        //            2.120: CdtrRefInf
                        nodeCdtrRefInf = nodeStrd.appendChild(xmlDoc.createElement('CdtrRefInf'));

                        //              2.121: Tp
                        nodeTp = nodeCdtrRefInf.appendChild(xmlDoc.createElement('Tp'));

                        //                  2.122: CdOrPrtry
                        nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));

                        //                      2.123: Cd
                        select firstonly lTaxWithholdTrans where lTaxWithholdTrans.VendTransInvoiceId == invSKS_EFT_FileDetail.VendTransRecId;

                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Prtry', '/AMNT/'+ num2Str(lTaxWithholdTrans.TaxWithholdAmount, 0, 2, 1, 0));

                        //               2.126: Ref
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', '/NARR/'+ num2Str(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0));

                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeStrd, 'AddtlRmtInf', this.getInvoiceJournaltxt(invSKS_EFT_FileDetail));
                    }
                }
                break;
            case #MYACH:   //SKS#DevOps:21381
            case #MYPP:    //SKS#DevOps:21381
                //          2.98: RmtInf
                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                

                while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                {
                    //              2.100: Strd
                    nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));
    
                    //              2.101: RfrdDocInf
                    nodeRfrdDocInf = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocInf'));
    
                    if(invSKS_EFT_FileDetail.InvoiceNumber != '')
                    {
                      
                        //              2.107: Number
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', invSKS_EFT_FileDetail.InvoiceNumber);
                    }
    
                    //              2.108: RltdDt
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
    
                    //              2.109 RfrdDocAmt
                    nodeRfrdDocAmt = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocAmt'));
    
                    this.node_RmtInf_Amt(nodeRfrdDocAmt, invSKS_EFT_FileDetail);

                    //            2.120: CdtrRefInf
                    nodeCdtrRefInf = nodeStrd.appendChild(xmlDoc.createElement('CdtrRefInf'));

                    //              2.121: Tp
                    nodeTp = nodeCdtrRefInf.appendChild(xmlDoc.createElement('Tp'));

                    //                  2.122: CdOrPrtry
                    nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));


                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Prtry', '/DESC/' + mSKS_EFT_FileDetail.PaymentReference);
                }
                break;
            case #MYCHK:  //SKS#DevOps:15619
                //          2.98: RmtInf
                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                //              2.99: Ustrd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140);

                while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                {
                    if(invSKS_EFT_FileDetail.InvoiceNumber != '')
                    {
                        //              2.100: Strd
                        nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));
    
                        //              2.101: RfrdDocInf
                        nodeRfrdDocInf = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocInf'));
    
                        //              2.107: Number
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', invSKS_EFT_FileDetail.InvoiceNumber);
    
                        //              2.108: RltdDt
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
    
                        //              2.109 RfrdDocAmt
                        nodeRfrdDocAmt = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocAmt'));
    
                        this.node_RmtInf_Amt(nodeRfrdDocAmt, invSKS_EFT_FileDetail);

                        //            2.120: CdtrRefInf
                        nodeCdtrRefInf = nodeStrd.appendChild(xmlDoc.createElement('CdtrRefInf'));

                        //              2.121: Tp
                        nodeTp = nodeCdtrRefInf.appendChild(xmlDoc.createElement('Tp'));

                        //                  2.122: CdOrPrtry
                        nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));

                        //                      2.123: Cd
                        select firstonly lTaxWithholdTrans where lTaxWithholdTrans.VendTransInvoiceId == invSKS_EFT_FileDetail.VendTransRecId;

                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Prtry', '/DESC/Remark');
                       
                    }
                }
                break;
            case #CHKOS:        //SKS#DevOps:16196
                while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                {
                    if(invSKS_EFT_FileDetail.InvoiceNumber != '')
                    {
                        if(firstRec)
                        {
                            //          2.98: RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                            firstRec = false;
                        }
    
                        //               2.100: Strd
                        nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));
                        //              2.101: RfrdDocInf
                        nodeRfrdDocInf = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocInf'));
    
                        //              2.121: Tp
                        nodeTp = nodeRfrdDocInf.appendChild(xmlDoc.createElement('Tp'));
    
                        //                  2.122: CdOrPrtry
                        nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));
    
                        //              2.104: Cd
                        if(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur <= 0)
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'CINV');
    
                            //               2.126: Ref
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', invSKS_EFT_FileDetail.InvoiceNumber, 0, false);
                            //              2.108: RltdDt
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
                        }
                        else
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'CREN');
                            //               2.126: Ref
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', invSKS_EFT_FileDetail.InvoiceNumber, 0, false);
                            //              2.108: RltdDt
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
                        }
                        //              2.109 RfrdDocAmt
                        nodeRfrdDocAmt = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocAmt'));
    
                        this.node_RmtInf_Amt(nodeRfrdDocAmt, invSKS_EFT_FileDetail);

                        if(invSKS_EFT_FileDetail.PaymId)
                        {
                            //          2.120: CdtrRefInf
                            nodeCdtrRefInf = nodeStrd.appendChild(xmlDoc.createElement('CdtrRefInf'));

                            //              2.121: Tp
                            nodeTp = nodeCdtrRefInf.appendChild(xmlDoc.createElement('Tp'));

                            //                  2.122: CdOrPrtry
                            nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));

                            //                      2.123: Cd
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'RPIN');

                            //               2.126: Ref
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', invSKS_EFT_FileDetail.PaymId, 0, false);
                        }
    
                    }
                }
                break;
            case #MXHVP:        //SKS#DevOps:19698
                while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                {
                    if(invSKS_EFT_FileDetail.InvoiceNumber != '')
                    {
                        if(firstRec)
                        {
                            //          2.98: RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                            firstRec = false;
                        }
    
                        //               2.100: Strd
                        nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));
                        //              2.101: RfrdDocInf
                        nodeRfrdDocInf = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocInf'));
    
                        //              2.121: Tp
                        nodeTp = nodeRfrdDocInf.appendChild(xmlDoc.createElement('Tp'));
    
                        //                  2.122: CdOrPrtry
                        nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));
    
                        //              2.104: Cd
                        if(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur <= 0)
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'CINV');
    
                            //               2.126: Ref
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', invSKS_EFT_FileDetail.InvoiceNumber, 0, false);
                            //              2.108: RltdDt
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
                        }
                        else
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'CREN');
                            //               2.126: Ref
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', invSKS_EFT_FileDetail.InvoiceNumber, 0, false);
                            //              2.108: RltdDt
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
                        }
                        //              2.109 RfrdDocAmt
                        nodeRfrdDocAmt = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocAmt'));
    
                        this.node_RmtInf_Amt(nodeRfrdDocAmt, invSKS_EFT_FileDetail);
                    }
                }
                break;
            case #VCARD:        //SKS#DevOps:17167
                while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                {
                    if(firstRec)
                    {
                        //          2.98: RmtInf
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                        //              2.99: Ustrd
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', mSKS_EFT_FileDetail.AccountNum, 140, false);

                        firstRec = false;
                    }
                    if(invSKS_EFT_FileDetail.InvoiceNumber != '')
                    {
                        //               2.100: Strd
                        nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));
                        //              2.101: RfrdDocInf
                        nodeRfrdDocInf = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocInf'));
    
                        //              2.121: Tp
                        nodeTp = nodeRfrdDocInf.appendChild(xmlDoc.createElement('Tp'));
    
                        //                  2.122: CdOrPrtry
                        nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));
    
                        //              2.104: Cd
                        if(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur <= 0)
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'CINV');
    
                            //               2.126: Ref
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', invSKS_EFT_FileDetail.InvoiceNumber, 0, false);
                            //              2.108: RltdDt
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
                        }
                        else
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'CREN');
                            //               2.126: Ref
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', invSKS_EFT_FileDetail.InvoiceNumber, 0, false);
                            //              2.108: RltdDt
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
                        }
                        //              2.109 RfrdDocAmt
                        nodeRfrdDocAmt = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocAmt'));
    
                        this.node_RmtInf_Amt(nodeRfrdDocAmt, invSKS_EFT_FileDetail);

                        if(invSKS_EFT_FileDetail.PaymId)
                        {
                            //          2.120: CdtrRefInf
                            nodeCdtrRefInf = nodeStrd.appendChild(xmlDoc.createElement('CdtrRefInf'));

                            //               2.126: Ref
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', invSKS_EFT_FileDetail.PaymId, 0, false);
                        }
    
                    }
                }
                break;
            case #USCHK:

                //          2.98: RmtInf
                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                {
                    if(invSKS_EFT_FileDetail.InvoiceNumber != '')
                    {
                        //               2.100: Strd
                        nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));

                        //              2.101: RfrdDocInf
                        nodeRfrdDocInf = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocInf'));
    
                        //              2.121: Tp
                        nodeTp = nodeRfrdDocInf.appendChild(xmlDoc.createElement('Tp'));
    
                        //                  2.122: CdOrPrtry
                        nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));
    
                        //              2.104: Cd
                        if(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur <= 0)
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'CINV');
    
                            //               2.126: Ref
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', invSKS_EFT_FileDetail.InvoiceNumber, 0, false);
                            //              2.108: RltdDt
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
                        }
                        else
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'CREN');
                            //               2.126: Ref
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', invSKS_EFT_FileDetail.InvoiceNumber, 0, false);
                            //              2.108: RltdDt
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
                        }
    
                        //              2.109 RfrdDocAmt
                        nodeRfrdDocAmt = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocAmt'));
    
                        this.node_RmtInf_Amt(nodeRfrdDocAmt, invSKS_EFT_FileDetail);

                        if(invSKS_EFT_FileDetail.InvoiceTransactionTxt) //SKS#DevOps:20378
                        {
                            //            2.120: CdtrRefInf
                            nodeCdtrRefInf = nodeStrd.appendChild(xmlDoc.createElement('CdtrRefInf'));

                            //               2.126: Ref
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', invSKS_EFT_FileDetail.InvoiceTransactionTxt, 70);
                        }
                    }
                }
                break;
            case #SAWIREHV:             //SKS#DevOps:19046
                while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId //SKS#DevOps:20169 (Port of 20054)
                {
                    if(invSKS_EFT_FileDetail.InvoiceNumber != '')
                    {
                        //          2.98: RmtInf
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                        //              2.99: Ustrd
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invSKS_EFT_FileDetail.InvoiceNumber);
                    }
                }
                break;
            default:
                super(_nodeCdtTrfTxInf);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_Ustrd</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf_Ustrd(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeRmtInf;
        str invNumbers;
        str description, value;
        int len;
        str taxIDType, taxId, period, symbol;

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TTRTGS)      //SKS#DevOps:16216
        {
            invNumbers = this.getInvoiceNbrs();
            if(invNumbers || mSKS_EFT_FileDetail.PaymentReference)
            {
                //          2.98: RmtInf
                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                //              2.99: Ustrd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(mSKS_EFT_FileDetail.PaymentReference,1,35));
                
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers,1,35), 35, false);
                
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers,36,35), 35, false);
                
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers,71,35), 35, false);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CBC)      //SKS#DevOps:20211
        {
            invNumbers = this.getInvoiceNbrs();
            if(invNumbers)
            {
                //          2.98: RmtInf
                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                //              2.99: Ustrd
                
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers,1,35), 35, false);
                
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers,36,35), 35, false);
                
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers,71,35), 35, false);

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers,106,35), 35, false);

            }
        }
        else if((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OMHVP ||mSKS_EFT_FileFormatPaymSpec.TransactionCode ==#OMLVP ) && invNumbers)
        {
            //          2.98: RmtInf
            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

           
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 105);//DevOps20295
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INRTGS ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INNEFT)      //SKSDevOps:16683
        {
            invNumbers = this.getInvoiceNbrs();

            //          2.98: RmtInf
            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

            //              2.99: Ustrd
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INRTGS)
            {
                value = SKS_EFT_Format::getCodelookupvalue('PurpOfPmt', mSKS_EFT_FileDetail.RecId);
            }

            if(value)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'PPC ' + value, 35, false);
            }

            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers,1,35), 35, false);

            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers,36,35), 35, false);

            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers,71,35), 35, false);

            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INNEFT)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers,105,35), 35, false);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THCHK    &&      //SKG#VSTS:8640
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #JPHVP    &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #JPZPP    &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #AUHVP    &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #NZHVP    &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SPLIT    &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #TAX      &&      //SKS#DevOps:17886
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ITHVP    &&      //SKS#DevOps:19731
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #FRHVP    &&      //SKS#DevOps:19731
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #INTLPMT  &&      //SKS_VSTS_13941
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CH_URGP_HV)      //SKS_VSTS_13984)
        {
            invNumbers = this.getInvoiceNbrs();
            if(invNumbers)
            {
                //          2.98: RmtInf
                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
    
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXSPID  ||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXCBPMT ||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXDOMWIR)
                {
                    len = 40;
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXACH)
                {
                    len = 7;
                }
                else
                {
                    len = 140;
                }

                //              2.99: Ustrd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, len);
            }
        }
        else if( mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTLPMT)//SKS_VSTS_13941
        {
            invNumbers = this.getInvoiceNbrs();
            len = strLen(invNumbers);
            this.getBankPurposeCode();

            if(bankCodeText)            //SKS#DevOps:15373
            {
                //          2.98: RmtInf
                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                //              2.99: Ustrd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(bankCodeText, 1, 35), 35, false);

                //              2.99: Ustrd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(bankCodeText, 36, 35), 35, false);

                //              2.99: Ustrd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(bankCodeText, 71, 35), 35, false);

                //              2.99: Ustrd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(bankCodeText, 106, 35), 35, false);
            }            
            else if(invNumbers || mSKS_EFT_FileDetail.PaymentReference)
            {
                //          2.98: RmtInf
                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                //              2.99: Ustrd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(mSKS_EFT_FileDetail.PaymentReference,1,35));

                if(len > 35)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers,1,35));
                }
                if(len > 35 && len < 70)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers,36,35));
                }
                if(len > 70 && len < 105)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers,71,35));
                }
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPHVP   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPZPP   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AUHVP   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CNHVP   ||      //SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NZHVP)            //SKG#VSTS:10417
        {
            this.getBankPurposeCode();

            if(bankCodeText)
            {
                //          2.98: RmtInf
                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                //              2.99: Ustrd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'REMI/'+bankCodeText+'/'+bankcode);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SPLIT)     //SKS#DevOps:16276
        {
            description = this.CharacterReplacement(LedgerJournalTrans::findRecId(mSKS_EFT_FileDetail.PaymentLineRecId, false).Txt);
            //          2.98: RmtInf
            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

            //              2.99: Ustrd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd',
                                                        '/VAT/' + num2str(this.getTotalTaxAmount(),0,2,2,0)
                                                    +   '/IDC/'+ mSKS_EFT_FileDetail.VATNum
                                                    +   '/INV/'+ this.getInvoiceNbrs()
                                                    +   '/TXT/'+ description, 0, false);            //SKS#DevOps:21777
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TAX)     //SKS#DevOps:17886
        {
            taxIDType   = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TaxIdType', mSKS_EFT_FileDetail.RecId));
            taxId       = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TaxId', mSKS_EFT_FileDetail.RecId));
            period      = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Period', mSKS_EFT_FileDetail.RecId));
            symbol      = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Symbol', mSKS_EFT_FileDetail.RecId));
            description = this.CharacterReplacement(LedgerJournalTrans::findRecId(mSKS_EFT_FileDetail.PaymentLineRecId, false).Txt);

            //          2.98: RmtInf
            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

            //              2.99: Ustrd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/TI/' + taxIDType + taxId, 19, false);

            //              2.99: Ustrd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/OKR/'+ period, 12, false);

            //              2.99: Ustrd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/SFP/'+ symbol, 12, false);

            //              2.99: Ustrd
            if(description)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/TXT/'+ description, 45, false);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CH_URGP_HV ||     //SKS_VSTS_13984
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ITHVP      ||    //SKS#DevOps:19731
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FRHVP)
        {
            invNumbers = this.getInvoiceNbrs();
            len = strLen(invNumbers);
 
            if(invNumbers || mSKS_EFT_FileDetail.PaymentReference)
            {
                //          2.98: RmtInf
                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                //              2.99: Ustrd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(mSKS_EFT_FileDetail.PaymentReference,1,35));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers,1,35));

                if(len > 35 && len < 70)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers,36,35));
                }
                if(len > 70 && len < 105)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers,71,35));
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Tax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Tax
    /// </summary>
    /// <param name = "_nodeCdtTrfTxInf">CdtTrfTxInf</param>
    protected void node_CdtTrfTxInf_Tax(XmlElement _nodeCdtTrfTxInf)            //SKG#VSTS:7960
    {
        XmlElement  nodeTax;
        XmlElement  nodeCdtr;
        XmlElement  nodeDbtr;
        XmlElement  nodeRcrd;
        XmlElement  nodeTaxAmt;
        XmlElement  nodeTaxblBaseAmt;
        str         ctgy;
        str         taxRegNum;
        str         certificateNumber;
        str         ctgyValue;
        str         mtdValue;
        str         frmsCd;
        int         paymentGrossUpType;
        int         categoryNumber;
        int         value = 0;
        int         sortValue;
        int         sortValueCount;
        int         containerIndex;
        int         counter, tpCounter;
        container   unSortedValues;
        str         ctgyDtls;       //SKS_VSTS_13848
        boolean     firstMtd = true;       //SKS_VSTS_13848
        int         cntofSortValue = 0;
        str         certId, addtlInfo, taxId;
        XmlElement  currentElement;

        VendTable           lVendTable;
        //CompanyCoRegNum     companyCoRegNum;
        TaxWithholdTrans    taxWithholdTrans;
        TaxWithholdTrans    taxWithholdTransLoc;
        SKS_EFT_FileDetail  invSKS_EFT_FileDetail;
        TaxWithholdBaseCur  taxableBaseAmount;
        AmountCur  taxabletotAmount;       //SKS_VSTS_13848,SKS#DevOps:14829

        TaxWithholdItemGroupHeading_TH      taxWithholdItemGroupHeading_TH;
        TaxWithholdTransExtensionTH         taxWithholdTransExtensionTH;
        TaxWithholdRevenueTable_TH          taxWithholdRevenueTable_TH;
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THSTRF   ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THNTRF   ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THOSTRUP ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRPT   ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THCHK    ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRMPTPY)       //SKS#DevOps:16055
        {
            //companyCoRegNum                  = CompanyInfo::findDataArea(curext()).CoRegNum;
            mSKS_EFT_TH_WithHoldingTaxFields = new SKS_EFT_TH_WithHoldingTaxFields();
    
            mSKS_EFT_TH_WithHoldingTaxFields.getSKS_EFT_TH_WithHoldingTaxFields(mSKS_EFT_FileDetail.PaymentLineRecId);
            taxRegNum           = mSKS_EFT_TH_WithHoldingTaxFields.TaxRegNum();
            paymentGrossUpType  = mSKS_EFT_TH_WithHoldingTaxFields.PaymentGrossUpType();
            certificateNumber   = mSKS_EFT_TH_WithHoldingTaxFields.CertificateNumber();
    
            lVendTable = VendTable::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum);
    
            //          Tax
            nodeTax = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Tax'));
    
            if(!taxRegNum)
            {
                taxRegNum = mSKS_EFT_FileDetail.VATNum;
            }
    
            if(taxRegNum && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THOSTRUP)
            {
                //          Cdtr
                nodeCdtr = nodeTax.appendChild(xmlDoc.createElement('Cdtr'));
    
                //              TaxId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtr, 'TaxId', taxRegNum, 13);
            }
    
            if(mSKS_EFT_FileDetail.CoRegNum)
            {
                //          Dbtr
                nodeDbtr = nodeTax.appendChild(xmlDoc.createElement('Dbtr'));
    
                //              TaxId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtr, 'TaxId', mSKS_EFT_FileDetail.CoRegNum, 13);
            }
    
            if(paymentGrossUpType == enum2int(TaxWithholdPaymentGrossUpType::Other))
            {
                //          RefNb
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTax, 'RefNb', int2str(paymentGrossUpType), 0, false);
            }
    
            while select crosscompany TaxWithholdCode, TaxWithholdItemGroupHeading_TH, InvoiceCurrency from taxWithholdTrans
                join PaymentLineRecId from invSKS_EFT_FileDetail
                join taxWithholdItemGroupHeading_TH
                join taxWithholdRevenueTable_TH
                group by taxWithholdItemGroupHeading_TH.Name, taxWithholdRevenueTable_TH.TaxWithholdRevenueCode, taxWithholdTrans.TaxWithholdCode, taxWithholdTrans.InvoiceCurrency
                   where TaxWithholdTrans.JournalNum == invSKS_EFT_FileDetail.PaymentJournalNum
                      && TaxWithholdTrans.Voucher == invSKS_EFT_FileDetail.PaymentVoucher
                      && taxWithholdItemGroupHeading_TH.RecId == TaxWithholdTrans.TaxWithholdItemGroupHeading_TH
                      && taxWithholdRevenueTable_TH.RecId == taxWithholdItemGroupHeading_TH.TaxWithholdRevenueTable_TH
                      && invSKS_EFT_FileDetail.PaymentLineRecId ==  mSKS_EFT_FileDetail.PaymentLineRecId
            {
                if(taxWithholdTrans.TaxWithholdCode)
                {
                    if(firstMtd)
                    {
                        firstMtd = false;

                        //          Mtd
                        if(paymentGrossUpType == enum2int(TaxWithholdPaymentGrossUpType::TaxDeductible))
                        {
                            mtdValue = '3';
                        }
                        else if(paymentGrossUpType == enum2int(TaxWithholdPaymentGrossUpType::SingleIteration))
                        {
                            mtdValue = '1';
                        }
                        else if(paymentGrossUpType == enum2int(TaxWithholdPaymentGrossUpType::Perpetual))
                        {
                            mtdValue = '2';
                        }
                        else
                        {
                            mtdValue = '4';
                        }
            
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTax, 'Mtd', mtdValue, 0, false);
                    }

                    TaxWithholdTable taxWithholdTable;             //SKS_VSTS_13848

                    select firstonly taxWithholdTable where taxWithholdTable.TaxWithholdCode == taxWithholdTrans.TaxWithholdCode;

                    select sum(InvoiceCurUpdatedWithholdBaseAmount) from taxWithholdTransExtensionTH
                        join sum(InvoiceWithholdBaseAmount), sum(TaxWithholdAmount) from taxWithholdTransLoc
                        group by taxWithholdTransLoc.TaxWithholdCode
                        where taxWithholdTransLoc.TaxWithholdCode == taxWithholdTrans.TaxWithholdCode
                            && taxWithholdTransExtensionTH.TaxWithholdTrans == taxWithholdTransLoc.RecId
                            && taxWithholdTransExtensionTH.LedgerJournalTrans == mSKS_EFT_FileDetail.PaymentLineRecId;
    
                    if(taxWithholdTransExtensionTH.InvoiceCurUpdatedWithholdBaseAmount || taxWithholdTransLoc.InvoiceWithholdBaseAmount)
                    {
                        //SKS_VSTS_13848--->
                        if(taxWithholdTable.Category)
                        {
                            cntofSortValue = 60;

                            ctgyValue = taxWithholdTable.Category;

                            if(subStr(taxWithholdTable.Category, 1, 1) == '5')
                            {
                                categoryNumber++;

                                ctgyValue = taxWithholdTable.Category;

                                ctgyValue = '5' + int2str(categoryNumber);
                            }

                            sortValue = str2Int(ctgyValue);
                        }
                        //SKS_VSTS_13848<-----
                        else
                        {
                            cntofSortValue = 10;

                            value++;
    
                            ctgy = taxWithholdRevenueTable_TH.TaxWithholdRevenueCode;
    
                            switch (ctgy)
                            {
                                case 'Salary':
                                    ctgyValue = '1';
                                    sortValue = 0;
                                    break;
                                case 'Commission':
                                    ctgyValue = '2';
                                    sortValue = 1;
                                    break;
                                case 'Royalties':
                                    ctgyValue = '3';
                                    sortValue = 2;
                                    break;
                                case 'Interest':
                                    ctgyValue = '41';
                                    sortValue = 4;
                                    break;
                                case 'Dividend':
                                    ctgyValue = '42';
                                    sortValue = 5;
                                    break;
                                case 'Reward':
                                case 'Service':
                                case 'Insurance':
                                case 'Rental':
                                case 'Transport':       //SKS#DevOps:15052
                                case 'Advertise':       //SKS_DevOps_16622
                                    ctgyValue = '5';
                                    categoryNumber++;
                                    break;
                                case 'Other':
                                    ctgyValue = '6';
                                    sortValue = 3;
                                    break;
                                default:
                                    ctgyValue = '0';
                                    sortValue = 10;
                                    break;
                            }
    
                            if(ctgyValue == '5')
                            {
                                ctgyValue = ctgyValue + int2str(categoryNumber);

                                switch (categoryNumber)
                                {
                                    case 1:
                                        sortValue = 6;
                                        break;
                                    case 2:
                                        sortValue = 7;
                                        break;
                                    case 3:
                                        sortValue = 8;
                                        break;
                                    case 4:
                                        sortValue = 9;
                                        break;
                                }
                            }
                        }
    
                        //                  FrmsCd
                        if(lVendTable.TaxWithholdVendorType_TH == TaxWithholdVendorType_TH::Domestic)
                        {
                            frmsCd = '53';
                        }
                        else if(lVendTable.TaxWithholdVendorType_TH == TaxWithholdVendorType_TH::Foreign)
                        {
                            frmsCd = '54';
                        }
                        else if(lVendTable.TaxWithholdVendorType_TH == TaxWithholdVendorType_TH::Individual)
                        {
                            frmsCd = '03';
                        }
    
    
                        if(taxWithholdTransExtensionTH.InvoiceCurUpdatedWithholdBaseAmount)
                        {
                            taxableBaseAmount = taxWithholdTransExtensionTH.InvoiceCurUpdatedWithholdBaseAmount;
                        }
                        else
                        {
                            taxableBaseAmount = taxWithholdTransLoc.InvoiceWithholdBaseAmount;
                        }
    
    
                        if(taxWithholdTable.Category) 
                        {
                            taxabletotAmount = (taxableBaseAmount * this.getTaxWithholdValue(taxWithholdTrans.TaxWithholdCode)) / 100;  //SKS#DevOps:14829

                            ctgyDtls = '{' + strRem(num2Str(taxabletotAmount, 0,2,1,0), '.') +  '}' + taxWithholdItemGroupHeading_TH.Name;
                        }
                        else
                        {
                            ctgyDtls = taxWithholdItemGroupHeading_TH.Name;
                        }
    
                        unSortedValues += [sortValue, ctgyValue, ctgyDtls, certificateNumber, frmsCd, num2str(this.getTaxWithholdValue(taxWithholdTrans.TaxWithholdCode), 0, 0, 0, 0), num2str(taxableBaseAmount, 0, 2, 1, 0), Currency::currencyCodeISO(taxWithholdTrans.InvoiceCurrency)];//SKS_VSTS_14760
                    }
                }
            }
            for(sortValueCount = 0; sortValueCount <= cntofSortValue ; sortValueCount++)
            {
                for (counter =  1; counter <= conlen(unSortedValues); counter++)
                {
                    if(conpeek(unSortedValues, counter) == containerIndex)
                    {
                        tpCounter++;
                        //              Rcrd
                        nodeRcrd = nodeTax.appendChild(xmlDoc.createElement('Rcrd'));
    
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'Tp', '/WHT01' + num2str(tpCounter, 0, 0, 0, 0) + '/', 0, false);
    
                        //                    Ctgy
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'Ctgy', conpeek(unSortedValues, counter + 1), 0, false);
    
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'CtgyDtls', conpeek(unSortedValues, counter + 2), 35, false);
    
                        //                  CertId
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'CertId', conpeek(unSortedValues, counter + 3), 0, false);
    
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'FrmsCd', conpeek(unSortedValues, counter + 4), 0, false);
    
                        //                  TaxAmt
                        nodeTaxAmt = nodeRcrd.appendChild(xmlDoc.createElement('TaxAmt'));
    
                        //                      Rate
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTaxAmt, 'Rate', conpeek(unSortedValues, counter + 5), 0, false);
    
                        //                      TaxblBaseAmt
                        nodeTaxblBaseAmt = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTaxAmt, 'TaxblBaseAmt', conpeek(unSortedValues, counter + 6), 0, false);
    
                        SKS_EFT_Format::xmlsetAttributeText(nodeTaxblBaseAmt, 'Ccy', conpeek(unSortedValues, counter + 7));
                    }
                    counter += 7;
                }
                containerIndex++;
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXSPID)
        {
            if(mSKS_EFT_FileDetail.Rfc_MX)
            {
                //          Tax
                nodeTax = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Tax'));

                //          Cdtr
                nodeCdtr = nodeTax.appendChild(xmlDoc.createElement('Cdtr'));

                //              TaxId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtr, 'TaxId', mSKS_EFT_FileDetail.Rfc_MX, 18);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TTRTGS)     // SKS#DevOps:16216
        {
            ctgyDtls = SKS_EFT_Format::getCodelookupvalue('CtgyDtls', mSKS_EFT_FileDetail.RecId);
            certId = SKS_EFT_Format::getCodelookupvalue('CertId', mSKS_EFT_FileDetail.RecId);

            if(ctgyDtls || certId)
            {
                //          Tax
                nodeTax = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Tax'));

                //              Rcrd
                nodeRcrd = nodeTax.appendChild(xmlDoc.createElement('Rcrd'));
    
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'CtgyDtls', ctgyDtls, 35, false);
    
                //                  CertId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'CertId', certId, 35, false);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SPLIT)      //SKS#DevOps:16276
        {
            addtlInfo = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('AddtlInf', mSKS_EFT_FileDetail.RecId));

            //          Tax
            nodeTax = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Tax'));

            //          Cdtr
            nodeCdtr = nodeTax.appendChild(xmlDoc.createElement('Cdtr'));

            //              TaxId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtr, 'TaxId', mSKS_EFT_FileDetail.VATNum, 14);

            //          RefNb
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTax, 'RefNb', this.getInvoiceNbrs(), 0, false);

            //          TtlTaxAmt
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTax, 'TtlTaxAmt', num2Str(this.getTotalTaxAmount(), 0,2,0,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', mSKS_EFT_FileDetail.PaymentCurrencyCode);

            //              Rcrd
            if(addtlInfo)
            {
                nodeRcrd = nodeTax.appendChild(xmlDoc.createElement('Rcrd'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'AddtlInf', addtlInfo , 33, false);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TAX)      //SKS#DevOps:17886
        {
            taxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DbtrTaxId', mSKS_EFT_FileDetail.RecId));

            //          Tax
            nodeTax = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Tax'));

            //          Dbtr
            nodeDbtr = nodeTax.appendChild(xmlDoc.createElement('Dbtr'));
    
            //              TaxId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtr, 'TaxId', taxId, 15);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTotalTaxAmount</Name>
				<Source><![CDATA[
    private Amount getTotalTaxAmount()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        VendInvoiceJour  vendinvoicejour;
        Amount taxamount;
        
        select InvoiceNumber from invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId;
        
        while(invSKS_EFT_FileDetail)
        {
            if(invSKS_EFT_FileDetail.InvoiceNumber == '')
            {
                // If no invoice number, go to next record
                next invSKS_EFT_FileDetail;
                continue;
            }
            select SumTax from vendinvoicejour where vendinvoicejour.InvoiceId == invSKS_EFT_FileDetail.InvoiceNumber;
            taxamount += vendinvoicejour.SumTax;
            
            next invSKS_EFT_FileDetail;
        }
        return taxamount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr</Name>
				<Source><![CDATA[
    protected void node_GrpHdr()
    {
        //------------------------------------------------------------------------------------------------------
        //  1.0: GrpHdr
        //      1.1: MsgId
        //      1.2: CreDtTm
        //      1.6: NbOfTxs
        //      1.7: CtrlSum
        //      1.8: InitgPty
        //          Nm
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeGrpHdr;
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;
        AmountCur invoiceSettlementAmount;
        boolean printCtrlSum = true;
    
        // Select count and sum for this file
        select COUNT(InvoiceOrigAmountCur), SUM(InvoiceSettleAmountPmtCur) from tmpSKS_EFT_FileDetail
            where
                tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary;
    
        //  1.0: GrpHdr
        nodeGrpHdr = nodeRoot.appendChild(xmlDoc.createElement('GrpHdr'));
    
        //      1.1: MsgId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'MsgId', SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr,35));
    
        //      1.2: CreDtTm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CreDtTm', DateTimeUtil::toStr(DateTimeUtil::utcNow()));
    
        //      1.3: Authstn
        this.node_GrpHdr_Authstn(nodeGrpHdr);
    
        //      1.6: NbOfTxs
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'NbOfTxs', num2str(tmpSKS_EFT_FileDetail.InvoiceOrigAmountCur,0,0,0,0));
    
        invoiceSettlementAmount = tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        
        switch(mSKS_EFT_FileDetail.FormatId)
        {
            case 'EU-HSBC-CCTI-V22-FR':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case 'SEPA':
                        printCtrlSum = false;
                        break;
                }
                break;
        }
        if(printCtrlSum)            //SKS#DevOps:16664
        {
            if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AP || mSKS_EFT_FileDetail.Module == SKS_EFT_Module::BTB ||mSKS_EFT_FileDetail.Module == SKS_EFT_Module::CNP)
            {
                //      1.7: CtrlSum
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CtrlSum', num2str(invoiceSettlementAmount * -1,0,2,1,0));
            }
            else
            {
                //      1.7: CtrlSum
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CtrlSum', num2str(invoiceSettlementAmount,0,2,1,0));
            }
        }
    
        //      1.8: InitgPty
        this.node_GrpHdr_InitgPty(nodeGrpHdr);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_Authstn</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_Authstn(XmlElement _nodeGrpHdr)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.3: Authstn
        //          1.4: Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeAuthstn;
        str value;
        boolean printAuthstn;

        value = SKS_EFT_Format::getCodelookupvalue('Authstn', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);

        if(mSKS_EFT_FileDetail.PaymSpec == #CAURGP   || mSKS_EFT_FileDetail.PaymSpec == #CA450    ||
           mSKS_EFT_FileDetail.PaymSpec == #THSTRF   || mSKS_EFT_FileDetail.PaymSpec == #THNTRF   ||
           mSKS_EFT_FileDetail.PaymSpec == #THBAHTUP || mSKS_EFT_FileDetail.PaymSpec == #THOSTRUP ||
           mSKS_EFT_FileDetail.PaymSpec == #THPRPT   || mSKS_EFT_FileDetail.PaymSpec == #THCHK    ||
           mSKS_EFT_FileDetail.PaymSpec == #JPHVP    || mSKS_EFT_FileDetail.PaymSpec == #JPZPP    ||
           mSKS_EFT_FileDetail.PaymSpec == #AUHVP    || mSKS_EFT_FileDetail.PaymSpec == #USHVP    || 
           mSKS_EFT_FileDetail.PaymSpec == #USLVP    || mSKS_EFT_FileDetail.PaymSpec == #NZHVP    ||
           mSKS_EFT_FileDetail.PaymSpec == #SGTT     || mSKS_EFT_FileDetail.PaymSpec == #SGRTGS   ||            //SKS_VSTS_13732
           mSKS_EFT_FileDetail.PaymSpec == #SGFAST   || mSKS_EFT_FileDetail.PaymSpec == #SGACH    ||            //SKS_VSTS_13732
           mSKS_EFT_FileDetail.PaymSpec == #UKBACS   || mSKS_EFT_FileDetail.PaymSpec == #INTLZA   ||
           mSKS_EFT_FileDetail.PaymSpec == #UKFP     ||  mSKS_EFT_FileDetail.PaymSpec == #CH03    ||
           mSKS_EFT_FileDetail.PaymSpec == #UKCHPRPT || mSKS_EFT_FileDetail.PaymSpec == #UKCHSDVA ||
           mSKS_EFT_FileDetail.PaymSpec == #UKCHURGP || mSKS_EFT_FileDetail.PaymSpec == #INTLPMT  ||
           mSKS_EFT_FileDetail.PaymSpec == #SEPA     || mSKS_EFT_FileDetail.PaymSpec == #CH01     || //SKS_VSTS_14034
           mSKS_EFT_FileDetail.PaymSpec == #AULVP    || mSKS_EFT_FileDetail.PaymSpec == #LVPMT    ||              //SKS#DevOps:14815
           mSKS_EFT_FileDetail.PaymSpec == #CACBACH  || mSKS_EFT_FileDetail.PaymSpec == #VNLVP    || 
           mSKS_EFT_FileDetail.PaymSpec == #MYCHK    || mSKS_EFT_FileDetail.PaymSpec == #MYACH    ||
           mSKS_EFT_FileDetail.PaymSpec == #MYPP     || mSKS_EFT_FileDetail.PaymSpec == #DEHVP    ||                        //SKS_DevOps_15476 && SKS#DevOps:15528 && SKS#DevOps:15619
           mSKS_EFT_FileDetail.PaymSpec == #USCHK    || mSKS_EFT_FileDetail.PaymSpec == #SGCHK    ||   //SKS#DevOps:15748
           mSKS_EFT_FileDetail.PaymSpec == #GDPMT    || mSKS_EFT_FileDetail.PaymSpec == #CHKOS    ||    //SKS#DevOps:15509, 16193, 16196
           mSKS_EFT_FileDetail.PaymSpec == #THPRMPTPY|| mSKS_EFT_FileDetail.PaymSpec == #TTRTGS   ||        //SKS#DevOps:15748, 16216
           mSKS_EFT_FileDetail.PaymSpec == #PLDOM    || mSKS_EFT_FileDetail.PaymSpec == #PLINTL   ||   //SKS#DevOps:15624
           mSKS_EFT_FileDetail.PaymSpec == #SPLIT    || mSKS_EFT_FileDetail.PaymSpec == #USLVP_CTX||    //SKS#DevOps:16276
           mSKS_EFT_FileDetail.PaymSpec == #VCARD    || mSKS_EFT_FileDetail.PaymSpec == #INNEFT   ||    //SKS#DevOps:16755
           mSKS_EFT_FileDetail.PaymSpec == #INRTGS   || mSKS_EFT_FileDetail.PaymSpec == #NZLVP    ||
           mSKS_EFT_FileDetail.PaymSpec == #SAWIREHV || mSKS_EFT_FileDetail.PaymSpec == #SAACHLVP ||    //SKS#DevOps:19046
           mSKS_EFT_FileDetail.PaymSpec == #BHWIREHV || mSKS_EFT_FileDetail.PaymSpec == #BHACHLVP ||    //SKS#DevOps:19046
           mSKS_EFT_FileDetail.PaymSpec == #VCARD ||  mSKS_EFT_FileDetail.PaymSpec == #TAX        ||                                                     //SKS#DevOps:16683
           mSKS_EFT_FileDetail.TransactionCode == #HKPRPT || (value && mSKS_EFT_FileDetail.PaymSpec == #NLHVP) || mSKS_EFT_FileDetail.TransactionCode == #HKURGP ||                                           //SKS#DevOps:18570 ||
           mSKS_EFT_FileDetail.TransactionCode == #HKNURG || mSKS_EFT_FileDetail.TransactionCode == #HKCHK ||  mSKS_EFT_FileDetail.PaymSpec == #CBC)
        {
            if(value)
            {
                //      1.3: Authstn
                nodeAuthstn = _nodeGrpHdr.appendChild(xmlDoc.createElement('Authstn'));
            }
    
            if(mSKS_EFT_FileDetail.PaymSpec == #AUHVP || mSKS_EFT_FileDetail.PaymSpec == #NZHVP || 
               mSKS_EFT_FileDetail.PaymSpec == #AULVP || mSKS_EFT_FileDetail.PaymSpec == #CAURGP|| 
               mSKS_EFT_FileDetail.PaymSpec == #CA450 || mSKS_EFT_FileDetail.PaymSpec == #GDPMT ||          //SKS_DevOps_16254,16193
               mSKS_EFT_FileDetail.PaymSpec == #INNEFT ||     //SKS#DevOps:16686
               mSKS_EFT_FileDetail.PaymSpec == #INRTGS||mSKS_EFT_FileDetail.PaymSpec == #NZLVP  ||
                mSKS_EFT_FileDetail.PaymSpec == #INRTGS || mSKS_EFT_FileDetail.PaymSpec == #PLDOM ||
               mSKS_EFT_FileDetail.PaymSpec == #PLINTL || mSKS_EFT_FileDetail.PaymSpec == #SPLIT || mSKS_EFT_FileDetail.PaymSpec == #NLHVP ||
               mSKS_EFT_FileDetail.PaymSpec == #TAX ||                                                      //SKS#DevOps:17886,  //SKS#DevOps:17440
               mSKS_EFT_FileDetail.TransactionCode == #HKPRPT || mSKS_EFT_FileDetail.TransactionCode == #HKURGP ||      //SKS#DevOps:18570
               mSKS_EFT_FileDetail.PaymSpec == #SAWIREHV || mSKS_EFT_FileDetail.PaymSpec == #SAACHLVP ||      //SKS#DevOps:19046
               mSKS_EFT_FileDetail.PaymSpec == #BHWIREHV || mSKS_EFT_FileDetail.PaymSpec == #BHACHLVP ||      //SKS#DevOps:19046
               mSKS_EFT_FileDetail.TransactionCode == #HKNURG || mSKS_EFT_FileDetail.TransactionCode == #HKCHK)

            {
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Authstn', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));

                if(value)
                {
                    //          1.4: Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAuthstn, 'Cd', value);
                }
            }
            else if((mSKS_EFT_FileDetail.PaymSpec == #TTRTGS || mSKS_EFT_FileDetail.PaymSpec == #CBC) && value )        //SKS#DevOps:16216
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAuthstn, 'Cd', value);
            }
            else if(mSKS_EFT_FileDetail.FormatId == 'EU-HSBC-CCTI-V22' &&      //SKS#DevOps:16664
                   (mSKS_EFT_FileDetail.PaymSpec == #SEPA || mSKS_EFT_FileDetail.PaymSpec == #UKBACS))  //SKS_DevOps_16254
            {
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Authstn', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));

                if(value)
                {
                    //          1.4: Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAuthstn, 'Cd', value);
                }
            }
            else if(mSKS_EFT_FileDetail.FormatId == 'EU-HSBC-CCTI-V22-FR')//DevOps19364
            {
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Authstn', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookup));

                if(value)
                {
                    //          1.4: Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAuthstn, 'Cd', value);
                }
            }
            else if(mSKS_EFT_FileDetail.FormatId == 'EU-HSBC-CCTI-V22' ||
                    mSKS_EFT_FileDetail.FormatId == 'US-HSBC-CCTI-V22')//SKS_VSTS_14583 && SKS_DevOps_15475
            {
                value = SKS_EFT_Format::getCodelookupvalue('Authstn', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);

                if(value)
                {
                    //          1.4: Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAuthstn, 'Cd', value);
                }
            }
            else if(mSKS_EFT_FileDetail.PaymSpec == #USCHK)  //SKS#DevOps:15509  
            {
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Authstn', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));

                if(value)
                {
                    //          1.4: Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAuthstn, 'Cd', value);
                }
            }
            else if(mSKS_EFT_FileDetail.FormatId == 'AP-HSBC-CCTI-V22') //SKS_DevOps_15475
            {
                value = SKS_EFT_Format::getCodelookupvalue('Authstn', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);//SKS_VSTS_14900

                if(value)
                {
                    //          1.4: Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAuthstn, 'Cd', value);
                }
                else if(mSKS_EFT_FileDetail.PaymSpec == #VNLVP || mSKS_EFT_FileDetail.PaymSpec == #MYCHK || mSKS_EFT_FileDetail.PaymSpec == #MYPP ||
                        mSKS_EFT_FileDetail.PaymSpec == #SGCHK || mSKS_EFT_FileDetail.PaymSpec == #MYACH)     //SKS#DevOps:15528  && //SKS#DevOps:15748 && //SKS#DevOps:15750
                {
                    if(!value)
                    {
                        //      1.3: Authstn
                        nodeAuthstn = _nodeGrpHdr.appendChild(xmlDoc.createElement('Authstn'));
                    }
                    //          1.4: Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAuthstn, 'Cd', 'ILEV');
                }                
            }
            else if(mSKS_EFT_FileDetail.FormatId == 'CA-HSBC-CCTI-V22') //SKS_DevOps_15475
            {
                if(mSKS_EFT_FileDetail.PaymSpec == #CACBACH) //SKS_DevOps_15476
                {
                    if(!value)
                    {
                        //      1.3: Authstn
                        nodeAuthstn = _nodeGrpHdr.appendChild(xmlDoc.createElement('Authstn'));
                    }
                    //          1.4: Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAuthstn, 'Cd', 'AUTH');
                }
                else
                {
                    if(!value)
                    {
                        printAuthstn =true;
                    }
                   
                    if(printAuthstn && value)
                    {
                        //      1.3: Authstn
                        nodeAuthstn = _nodeGrpHdr.appendChild(xmlDoc.createElement('Authstn'));
                    }
                    if(value)
                    {
                        //          1.4: Cd
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAuthstn, 'Cd', value);
                    }
                }
            }
            else if(mSKS_EFT_FileDetail.PaymSpec == #DEHVP)  //SKS#DevOps:15654
            {
                value = SKS_EFT_Format::getCodelookupvalue('Authstn', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);

                if(value)
                {
                    //          1.4: Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAuthstn, 'Cd', value);
                }
            }
            else if(mSKS_EFT_FileDetail.PaymSpec == #JPHVP   || 
                    mSKS_EFT_FileDetail.PaymSpec == #JPZPP   ||
                    mSKS_EFT_FileDetail.PaymSpec == #SGFAST  ||
                    mSKS_EFT_FileDetail.PaymSpec == #SGACH)      //SKS_DevOps_15247
            {
                if(!value)
                {
                    //      1.3: Authstn
                    nodeAuthstn = _nodeGrpHdr.appendChild(xmlDoc.createElement('Authstn'));
                }
                //          1.4: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAuthstn, 'Cd', 'AUTH');
            }
            else if(mSKS_EFT_FileDetail.PaymSpec == #THSTRF ||
                    mSKS_EFT_FileDetail.PaymSpec == #INTLZA ||
                    mSKS_EFT_FileDetail.PaymSpec == #LVPMT  ||
                    mSKS_EFT_FileDetail.PaymSpec == #THPRMPTPY)  //SKS_VSTS_14858

            {
                if(!value)
                {
                    //      1.3: Authstn
                    nodeAuthstn = _nodeGrpHdr.appendChild(xmlDoc.createElement('Authstn'));
                }

                //          1.4: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAuthstn, 'Cd', 'FDET');
            }
            else                                                                                  //SKG#VSTS:7958
            {
                if(!value)
                {
                    //      1.3: Authstn
                    nodeAuthstn = _nodeGrpHdr.appendChild(xmlDoc.createElement('Authstn'));
                }

                //          1.4: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAuthstn, 'Cd', 'ILEV');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_Id</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty_Id(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          9.1.12: Id
        //              9.1.13: OrgId
        //                  9.1.14: BICOrBEI
        //                  9.1.15: Othr
        //                      9.1.1.16: Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOther;
        str initgPtyId;

        this.getSKS_EFT_FileFormatPaymSpec();
        initgPtyId = SKS_EFT_Format::getCodelookupvalue('HSBCConnectCustId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);
    
        if(initgPtyId || mSKS_EFT_FileDetail.BankBankSwiftNo)      //SKS#DevOps:15627
        {
            //          9.1.12: Id
            nodeId = _nodeInitgPty.appendChild(xmlDoc.createElement('Id'));
    
            //              9.1.13: OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            if(initgPtyId == '' && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THCHK)            //SKS#DevOps:15627
            {
                //                  9.1.14: BICOrBEI
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOrgId, 'BICOrBEI', mSKS_EFT_FileDetail.BankBankSwiftNo, 35, false);
            }
            else if(initgPtyId)        //SKS#DevOps:15627
            {
                //                  9.1.15: Other
                nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
                //                      9.1.1.16: Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', this.CharacterReplacement(initgPtyId), 35);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf()
    {
        //------------------------------------------------------------------------------------------------------
        //  2.0: PmtInf
        //      2.1: PmtInfId
        //      2.2: PmtMtd
        //      2.4: NbOfTxs
        //      2.5: CtrlSum
        //      2.6: PmtTpInf
        //      2.17: ReqdExctnDt
        //      2.19: Dbtr
        //      2.20: DbtrAcct
        //      2.21: DbtrAgt
        //      2.24 ChrgBr
        //------------------------------------------------------------------------------------------------------
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;
        AmountCur invoiceSettlementAmount;
    
        batchCount++;
    
        // Select count and sum for this bank account
        select COUNT(InvoiceOrigAmountCur), SUM(InvoiceSettleAmountPmtCur) from tmpSKS_EFT_FileDetail
            where
                tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                tmpSKS_EFT_FileDetail.BankAccountId == mSKS_EFT_FileDetail.BankAccountId &&
                tmpSKS_EFT_FileDetail.EffectiveDate == mSKS_EFT_FileDetail.EffectiveDate &&
                tmpSKS_EFT_FileDetail.PaymMode == mSKS_EFT_FileDetail.PaymMode &&
                tmpSKS_EFT_FileDetail.PaymSpec == mSKS_EFT_FileDetail.PaymSpec &&
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == mSKS_EFT_FileDetail.PaymentCurrencyCode &&
                tmpSKS_EFT_FileDetail.PaymentCompany == mSKS_EFT_FileDetail.PaymentCompany;//SKS_Bug_12809
    
    
        //  2.0: PmtInf
        nodePmtInf = nodeRoot.appendChild(xmlDoc.createElement('PmtInf'));
    
        //      2.1: PmtInfId
        if(mSKS_EFT_FileDetail.PaymSpec == #THSTRF)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtInfId', SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr + '-' + int2str(batchCount) + 'PC2', 35));
        }
        else if(mSKS_EFT_FileDetail.PaymSpec == #JPHVP)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtInfId', SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr + '-' + int2str(batchCount), 16));
        }
        else if(mSKS_EFT_FileDetail.PaymSpec == #JPZPP || mSKS_EFT_FileDetail.PaymSpec == #BMACHLV)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtInfId', SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr + '-' + int2str(batchCount), 12));
        }
        else if(mSKS_EFT_FileDetail.PaymSpec == #VNLVP)   //SKS#DevOps:15528
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtInfId', SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr + '-' + int2str(batchCount), 24));
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtInfId', SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr + '-' + int2str(batchCount), 35));
        }
    
        //      2.2: PmtMtd
        if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AR)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'DD');
        }
        else if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::Yes || subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) == 'CHK')
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'CHK');
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'TRF');
        }

        //      2.3: BtchBookg
        this.node_PmtInf_BtchBookg(nodePmtInf);

        if(mSKS_EFT_FileFormatPaymSpec.FormatId != 'US-HSBC-CCTI-V22'   &&
           mSKS_EFT_FileFormatPaymSpec.PaymSpec != 'UK-BACS' &&
           mSKS_EFT_FileFormatPaymSpec.PaymSpec != 'LV-PMT'  &&
           mSKS_EFT_FileFormatPaymSpec.PaymSpec != #THPRMPTPY)               //SKS_VSTS_14858
        {
            //      2.4: NbOfTxs
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'NbOfTxs', num2str(tmpSKS_EFT_FileDetail.InvoiceOrigAmountCur,0,0,0,0));
    
            invoiceSettlementAmount = tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AP)
            {
                //      2.5: CtrlSum
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'CtrlSum', num2str(invoiceSettlementAmount * -1,0,2,1,0));
            }
            else
            {
                //      2.5: CtrlSum
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'CtrlSum', num2str(invoiceSettlementAmount,0,2,1,0));
            }
        }
    
        //      2.6: PmtTpInf
        this.node_PmtInf_PmtTpInf(nodePmtInf);
    
        if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AR)
        {
            //      2.18: ReqdColltnDt
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'ReqdColltnDt', SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate, DateSeparator::Hyphen));
        }
        else
        {
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKFP)//SKS_VSTS_14473
            {
                //      2.17: ReqdExctnDt
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'ReqdExctnDt', SKS_PP_StringFormats::strDateYYYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()), DateSeparator::Hyphen));
            }
            else
            {
                //      2.17: ReqdExctnDt
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'ReqdExctnDt', SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate, DateSeparator::Hyphen));
            }
        }
    
        if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AP || mSKS_EFT_FileDetail.Module == SKS_EFT_Module::BTB ||mSKS_EFT_FileDetail.Module == SKS_EFT_Module::CNP)
        {
            this.node_PmtInf_DbtrNodes(nodePmtInf);
        }
        else
        {
            this.node_PmtInf_CdtrNodes(nodePmtInf);
        }
    
        //      2.24 ChrgBr
        this.node_PmtInf_ChrgBr(nodePmtInf);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
        str address;

        this.getAddress();
    
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #RTGSSDVA:
            case #RTGSURGP:
            case #THCHK:
            case #THSTRF:
            case #THNTRF:
            case #THOSTRUP:
            case #THPRPT:           
            case #THPRMPTPY:    //SKS#DEvOps:16055
                //              TwnNm
                if(mRemitDistrictName)
                {
                    address = mRemitDistrictName;
                }
                if(address && mRemittanceCity)
                {
                    address += ',' + mRemittanceCity;
                }
                else
                {
                    address = mRemittanceCity;
                }
    
                if(mRemittanceCountryRegionId != 'NL') //SKS#DevOps:15405
                {
                    if(address && mRemittanceState)
                    {
                        address += ',' + mRemittanceState;
                    }
                    else
                    {
                        address = mRemittanceState;
                    }
                }

                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THSTRF    ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THNTRF   ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THOSTRUP ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRPT   ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THCHK    ||       //SKS_VSTS_14760
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRMPTPY)   //SKS#DevOps:16055
                {
                    this.node_Cdtr_PstlAdr_Structured(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrLine1, mRemittanceZipCode, address, 0, mRemittanceAdrLine2, '', mRemitBuildingCompliment);
                }
                else
                {
                    this.node_PstlAdr_Structured(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrLine1, mRemittanceZipCode, address, 35, mRemittanceAdrLine2, '', mRemitBuildingCompliment);
                }
                break;
            case #SEPA:             
                if(mSKS_EFT_FileFormatPaymSpec.FormatId == 'EU-HSBC-CCTI-V22-FR')       //SKS#DevOps:16664
                {
                    this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrLine1, mRemittanceZipCode, mRemittanceCity, 0, mRemittanceAdrLine2, mRemittanceState, true);
                }
                else            //SKG#VSTS10636
                {
                    //              TwnNm
                    if(mRemitDistrictName)
                    {
                        address = mRemitDistrictName;
                    }
                    if(address && mRemittanceCity)
                    {
                        address += ',' + mRemittanceCity;
                    }
                    else
                    {
                        address = mRemittanceCity;
                    }
    
                    if(mRemittanceCountryRegionId != 'NL') 
                    {
                        if(address && mRemittanceState)
                        {
                            address += ',' + mRemittanceState;
                        }
                        else
                        {
                            address = mRemittanceState;
                        }
                    }
                    this.node_PstlAdr_Structured(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrLine1, mRemittanceZipCode, address, 35, mRemittanceAdrLine2, '', mRemitBuildingCompliment);
                }
                break;
            case #JPHVP:
            case #USLVP:                
            case #USLVP_CTX:        //SKS#DevOps:16686
            case #IEINTHV:
            case #LVPMT : //SKS_VSTS_14858
            case #MYCHK:
            case #MYACH:
            case #TTRTGS:       //SKS#DevOps:16216
            case #MYPP:
            case #NZLVP:        //SKS#DevOps:17740
                this.node_PstlAdr_Structured(_nodeCdtr, mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId, mSKS_EFT_FileDetail_VendAddress.BeneAddr, mSKS_EFT_FileDetail_VendAddress.BeneZipPostal, mSKS_EFT_FileDetail_VendAddress.BeneCity, 35, '', mSKS_EFT_FileDetail_VendAddress.BeneState, mSKS_EFT_FileDetail_VendAddress.BeneAddr2);
                break;
            case #UKBACS:
            case #UKFP:
            case #UKCHPRPT:
            case #UKCHURGP:
            case #UKCHSDVA:
            case #INTLPMT://DevOps21863
                this.node_PstlAdr_Structured(_nodeCdtr, mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId, mSKS_EFT_FileDetail_VendAddress.BeneAddr, mSKS_EFT_FileDetail_VendAddress.BeneZipPostal, mSKS_EFT_FileDetail_VendAddress.BeneCity, 35, mSKS_EFT_FileDetail_VendAddress.BeneAddr2, mSKS_EFT_FileDetail_VendAddress.BeneState, '');
                break;
            case #AUHVP:
            case #USHVP:
            case #NZHVP:
            case #DEHVP:
            case #VNHVP:   //SKS#DevOps:15735
            case #PLDOM:   //SKS#DevOps:16276
            case #PLINTL:   //SKS#DevOps:16276
            case #SPLIT:   //SKS#DevOps:16276
            case #TAX:   //SKS#DevOps:17886
            case #OMHVP:   //SKS#DevOps:19642
            case #AEHVP:   //SKS#DevOps:19698
            case #CNHVP:   //SKS#DevOps:19698
            case #MXHVP:   //SKS#DevOps:19698
            case #NLHVP:   //SKS#DevOps:19698
            case #UKHVP:   //SKS#DevOps:19698
                if(strLen(mRemittanceName) > 35)
                {
                    this.node_PstlAdr_Structured(_nodeCdtr, mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId, '', mSKS_EFT_FileDetail_VendAddress.BeneZipPostal, mSKS_EFT_FileDetail_VendAddress.BeneCity, 35, '', mSKS_EFT_FileDetail_VendAddress.BeneState, '');
                }
                else
                {
                    this.node_PstlAdr_Structured(_nodeCdtr, mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId, mSKS_EFT_FileDetail_VendAddress.BeneAddr, mSKS_EFT_FileDetail_VendAddress.BeneZipPostal, mSKS_EFT_FileDetail_VendAddress.BeneCity, 35, '', mSKS_EFT_FileDetail_VendAddress.BeneState, mSKS_EFT_FileDetail_VendAddress.BeneAddr2);
                }
                break;            
            case #JPZPP:
                this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, '', '', '');
                break;
            case #PLSEPA:       //SKS#DevOps:16726
                this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrLine1, mRemittanceZipCode, mRemittanceCity, 0, mRemittanceAdrLine2, mRemittanceState);
                break;
            case #CAURGP:
            case #CA450:
            case #MXSPID:
            case #MXCBPMT:
            case #MXDOMWIR:
            case #MXACH:
            case #GDPMT:            //SKS#DevOps:16193
            case #CHKOS:            //SKS#DevOps:16196
            case #VCARD:            //SKS#DevOps:16755
            case #INRTGS:           //SKS#DevOps:16683
            case #INNEFT:           //SKS#DevOps:16683
            case #OMLVP:           //SKS#DevOps:19642
            case #AELVP:           //SKS#DevOps:19698
            case #MXLVP:           //SKS#DevOps:19698
            case #ITHVP:           //SKS#DevOps:19731
            case #FRHVP:           //SKS#DevOps:19731
                this.node_PstlAdr(_nodeCdtr, mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId, mSKS_EFT_FileDetail_VendAddress.BeneAddr, mSKS_EFT_FileDetail_VendAddress.BeneZipPostal, mSKS_EFT_FileDetail_VendAddress.BeneCity, 0, mSKS_EFT_FileDetail_VendAddress.BeneAddr2, mSKS_EFT_FileDetail_VendAddress.BeneState, true);
                break;
            case #CACHK:                
            case #THBAHTUP:
            case #NURGZA://SKS_VSTS_14304
                this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrLine1, mRemittanceZipCode, mRemittanceCity, 0, mRemittanceAdrLine2, mRemittanceState, true);
                break;
            case #CH_URGP_HV:              //SKG#VSTS:13984
                if(strLen(mRemittanceName) > 35)
                {
                    this.node_PstlAdr(_nodeCdtr, mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId, '', mSKS_EFT_FileDetail_VendAddress.BeneZipPostal, mSKS_EFT_FileDetail_VendAddress.BeneCity, 0, '', mSKS_EFT_FileDetail_VendAddress.BeneState, true);
                }
                else
                {
                    this.node_PstlAdr(_nodeCdtr, mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId, mSKS_EFT_FileDetail_VendAddress.BeneAddr, mSKS_EFT_FileDetail_VendAddress.BeneZipPostal, mSKS_EFT_FileDetail_VendAddress.BeneCity, 0, mSKS_EFT_FileDetail_VendAddress.BeneAddr2, mSKS_EFT_FileDetail_VendAddress.BeneState, true);
                }
                break;
            case #INTLZA: //SKS_VSTS_14854
                this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, '', '', '', 0, '', '', true);
                break;
            case #URGPZA:               //SKS_VSTS_14304
                if(strLen(mRemittanceName) > 35)
                {
                    this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, '', mRemittanceZipCode, mRemittanceCity, 0, '', mRemittanceState, true);
                }
                else if(mRemittanceState)
                {
                    this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrLine1, '', mRemittanceCity, 0, mRemittanceAdrLine2, mRemittanceState, true);
                }
                else
                {
                    this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrLine1, mRemittanceZipCode, mRemittanceCity, 0, mRemittanceAdrLine2, mRemittanceState, true);
                }
                break;
            case #CACBACH:  //SKS_DevOps_15476
                this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrLine1, mRemittanceZipCode, mRemittanceCity, 0, mRemittanceAdrLine2, mRemittanceState, true);
                break;
            case #USCHK : 
                this.node_PstlAdr_Structured(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrLine1, mRemittanceZipCode, mRemittanceCity, 35, '', mRemittanceState,mRemittanceAdrLine2);
                break;
            default:
                this.node_PstlAdr_Structured(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrLine1, mRemittanceZipCode, mRemittanceCity, 35, mRemittanceAdrLine2, mRemittanceState, mRemitBuildingCompliment);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_ChrgBr(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.24 ChrgBr
        //------------------------------------------------------------------------------------------------------
        str chrgBr;
    
        //      2.24 ChrgBr
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKFP)
        {
            chrgBr = 'SHAR';
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPZPP ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #LVPMT ||//SKS_VSTS_14858
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VNLVP ||  //SKS#DevOps:15528
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGTT  || //SKS#DevOps:15626
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYCHK ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYACH ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYPP)   //SKS#DevOps:15619
        {
            chrgBr = 'DEBT';
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRMPTPY)      //SKS#DevOps:16055
        {
            chrgBr = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ChrgBr', mSKS_EFT_FileDetail.RecId));
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGPZA ||   //SKS_VSTS_14304
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTLZA ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode== #SAWIREHV||      //SKS#DevOps:19046
                mSKS_EFT_FileFormatPaymSpec.TransactionCode== #BHWIREHV)      //SKS#DevOps:19046
        {
            chrgBr = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ChrgBr', mSKS_EFT_FileDetail.RecId));
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPHVP   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AUHVP   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USHVP   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NZLVP   ||  //SKS#DevOps:17740
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VNHVP)  //SKS#DevOps:15735
        {
            chrgBr = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ChrgBr', mSKS_EFT_FileDetail.RecId));

            if(chrgBr == '' && 
              (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPHVP    ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USHVP    ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VNHVP))   //SKS#DevOps:15735
            {
                chrgBr = 'SHAR';
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #IEEURLV)
        {
            chrgBr = 'SLEV';
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INRTGS ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INNEFT)          //SKS#DevOps:16683
        {
            chrgBr = '';
        }
        else
        {
            chrgBr = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ChrgBr', mSKS_EFT_FileDetail.RecId));
        }

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CH01 &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CH03)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'ChrgBr', chrgBr, 0, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Id(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          9.1.12: Id
        //              9.1.13: OrgId
        //                  9.1.15: Othr
        //                      9.1.16: Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOther, nodeSchmeNm;
        str dbtrId;

        this.getBankPurposeCode();

        if(mSKS_EFT_FileDetail.FormatId == 'AP-HSBC-CCTI-V22' && mSKS_EFT_FileDetail.PaymSpec == 'NURG-HK')
        {
            dbtrId = bankCode;
        }
        else
        {
            dbtrId = SKS_EFT_Format::getCodelookupvalue('PmtSetCode', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);
        }
            
        // For BACS can set BACS ID on WOParty Id field
        if(((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKBACS ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USLVP  ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USLVP_CTX  ||   //SKS#DevOps:16686
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CAACH  ||       //SKS#DevOps:17911
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CA450  ||
            (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA &&        //SKS#DevOps:16664
             mSKS_EFT_FileFormatPaymSpec.FormatId != 'EU-HSBC-CCTI-V22-FR')  ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NURGZA ||    //SKS_VSTS_14304
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGPZA ||    //SKS_VSTS_14304
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTLZA ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLDOM  ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLINTL ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SPLIT  ||          //SKS#DevOps:16276
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLSEPA ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USCHK)  && mSKS_EFT_FileDetail_BankAccount.WOrdPartyId != '') ||
            ((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKNURG||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGACH  ||  //SKS_VSTS_14165
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYACH  ||  //SKS#DevOps:15860
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INRTGS ||  //SKS#DevOps:16683
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INNEFT) && dbtrId != ''))
        {
            //          9.1.12: Id
            nodeId = _nodeDbtr.appendChild(xmlDoc.createElement('Id'));
    
            //              9.1.13: OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            //                  9.1.15: Othr
            nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
            switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
            {
                case #UKBACS:
                    //                      9.1.16: Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', mSKS_EFT_FileDetail_BankAccount.WOrdPartyId, 15);   //SKS_VSTS_14209
                    break;
                case #CA450:
                case #USLVP:
                case #USLVP_CTX:        //SKS#DevOps:16686
                case #USCHK:
                case #CAACH:            //SKS#DevOps:17911
                    //                      9.1.16: Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', mSKS_EFT_FileDetail_BankAccount.WOrdPartyId, 10);
                    break;
                case #NURGZA:       //SKS_VSTS_14034
                case #URGPZA:       //SKS_VSTS_14034
                case #INTLZA:       //SKS_VSTS_14034
                    //                      9.1.16: Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', mSKS_EFT_Bank.WOrdPartyId, 35);
                    break;
                case #HKNURG:
                    //                      9.1.16: Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', dbtrId, 3);
                    //                  SchmeNm
                    nodeSchmeNm = nodeOther.appendChild(xmlDoc.createElement('SchmeNm'));//DevOps20072
                    //                      9.1.16: Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Prtry', 'PSET');
                    break;
                case #SGACH:        //SKS_VSTS_14165
                case #MYACH:        //SKS#DevOps:15860
                case #CNLVP:        //SKS#DevOps:19698
                    //                      9.1.16: Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id',dbtrId);
                    
                    //                  SchmeNm
                    nodeSchmeNm = nodeOther.appendChild(xmlDoc.createElement('SchmeNm'));
                    //                      9.1.16: Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Prtry', 'PSET');
                    //SKS_VSTS_14165 <--
                    break;
                case #INRTGS:
                case #INNEFT:       //SKS#DevOps:16683
                    //                      9.1.16: Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', dbtrId, 35);
                    break;
                default:
                    //                      9.1.16: Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', mSKS_EFT_FileDetail_BankAccount.WOrdPartyId, 35);
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Nm</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Nm(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          Nm
        //------------------------------------------------------------------------------------------------------
        int len;
    
        //          Nm
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #UKBACS:
            case #USLVP:
            case #USLVP_CTX:            //SKS#DevOps:16686
                len = 16;
                break;
            case #RTGSSDVA:
            case #RTGSURGP:
            case #JPHVP:
            case #AUHVP:
            case #USHVP:
            case #OMHVP:             //SKS#DevOps:19642
            case #NZHVP:            //SKG#VSTS10417
            case #IEINTHV:
            case #SGACH:            //SKS_VSTS_13732
            case #INTLPMT:          //SKS_VSTS_13941
            case #CH_URGP_HV:       //SKS#VSTS:13984
            case #URGPZA: //SKS_VSTS_14034
            case #INTLZA: //SKS_VSTS_14304
            case #DEHVP:   //SKS#DevOps:15654
            case #PLDOM:
            case #PLINTL:
            case #SPLIT:            //SKS#DevOps:16276
            case #PLSEPA:           //SKS#DevOps:16276
            case #INRTGS:           //SKS#DevOps:16683
            case #INNEFT:
            case #TAX:             //SKS#DevOps:17886
            case #AEHVP:             //SKS#DevOps:19698
            case #CNHVP:             //SKS#DevOps:19698
            case #MXHVP:             //SKS#DevOps:19698
            case #NLHVP:             //SKS#DevOps:19698
            case #UKHVP:             //SKS#DevOps:19698
            case #ITHVP:             //SKS#DevOps:19731
            case #FRHVP:             //SKS#DevOps:19731
                len = 70;
                break;
            case #CA450:
            case #JPZPP:
                len = 30;
                break;
            case #IEEURLV:
            case #CACHK:
            case #SGTT:              //SKS_VSTS_13732
            case #SGRTGS:            //SKS_VSTS_13732
            case #SGFAST:            //SKS_VSTS_13732
            case #NURGZA: //SKS_VSTS_14034
            case #AULVP:            //SKS#DevOps:14815
            case #LVPMT://SKS_VSTS_14858
            case #VNLVP:  //SKS#DevOps:15528
            case #USCHK:  //SKS#DevOps:15509
            case #GDPMT:            //SKS#DevOps:16193
            case #CHKOS:  //SKS#DevOps:16196
            case #VCARD:  //SKS#DevOps:16755
            case #TTRTGS:  //SKS#DevOps:16216
            case #NZLVP:  //SKS#DevOps:17740
            case #OMLVP:  //SKS#DevOps:19642
            case #CNLVP:  //SKS#DevOps:19698
            case #MXLVP:  //SKS#DevOps:19698
            case #CBC: //DevOps20211
                len = 140;
                break;
            case #SEPA:           //SKS#DevOps:16664
                if(mSKS_EFT_FileFormatPaymSpec.FormatId == 'EU-HSBC-CCTI-V22-FR')
                {
                    len = 70;
                }
                else
                {
                    len = 35;
                }                
                break;
            default:
                len = 35;
                break;
        }
    
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeDbtr, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName), len, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_PstlAdr(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
    
        if((mSKS_EFT_FileDetail.FormatId == 'AP-HSBC-CCTI-V22'      &&  
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #LVPMT   &&//SKS_VSTS_14858
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #JPHVP   &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #JPZPP   &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #AUHVP   &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #AULVP   &&              //SKS#DevOps:14815
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #NZHVP   &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MYCHK   &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MYACH   &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #OMLVP   &&              //SKS#DevOps:19642
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #OMHVP   &&              //SKS#DevOps:19642
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #AEHVP   &&              //SKS#DevOps:19698
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #AELVP   &&              //SKS#DevOps:19698
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CNHVP   &&              //SKS#DevOps:19698
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CNLVP   &&              //SKS#DevOps:19698
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ITHVP   &&              //SKS#DevOps:19731
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #FRHVP   &&              //SKS#DevOps:19731
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MYPP    &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #VNHVP)   ||   //SKS#DevOps:15735
            (mSKS_EFT_FileDetail.FormatId == 'EU-HSBC-CCTI-V22'     &&
            (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKBACS  ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKFP    ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKCHPRPT||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKCHURGP ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKCHSDVA ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CAACH)))
        {
            this.node_PstlAdr_Structured(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity, 35, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2, mSKS_EFT_FileDetail_BankAccount.WOrdPartyState);
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACHK    ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CA450    ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CAURGP   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXACH    ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXSPID   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXCBPMT  ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXDOMWIR ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTLPMT  ||      //SKS_VSTS_14473
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGTT     ||      //SKS_VSTS_13732
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGRTGS   ||      //SKS_VSTS_13732
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGFAST   ||      //SKS_VSTS_13732
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGACH    ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NURGZA   ||      //SKS_VSTS_13732
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AULVP    ||      //SKS#DevOps:14815
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TTRTGS   ||      // SKS#DevOps:16216
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHKOS    ||      //SKS#DevOps:16196        
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VCARD    ||      //SKS#DevOps:16755
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GDPMT    ||      //SKS#DevOps:16193
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INRTGS   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INNEFT   ||          //SKS#DevOps:16683
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OMLVP    ||      //SKS#DevOps:19642
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AELVP    ||      //SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CNLVP    ||      //SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ITHVP    ||      //SKS#DevOps:19731
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FRHVP    ||      //SKS#DevOps:19731
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NZLVP ||         //SKS#DevOps:17740
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CBC)
        {
            this.node_PstlAdr(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity, 0, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2, mSKS_EFT_FileDetail_BankAccount.WOrdPartyState, true);
        }
        else if (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #RTGSSDVA || 
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #RTGSURGP ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPZPP    ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA     ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #IEINTHV  ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #LVPMT    ||  //SKS_VSTS_14858
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYCHK    ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYACH    ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYPP     ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USCHK    ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SAWIREHV || //SKS#DevOps:19046
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BHWIREHV || //SKS#DevOps:19046
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AEHVP)//DevOps20331
        {
            this.node_PstlAdr_Structured(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity, 35, '', mSKS_EFT_FileDetail_BankAccount.WOrdPartyState, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2);
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGPZA  || 
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VNHVP   ||       //SKS#DevOps:15735)      //SKS_VSTS_14034
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLDOM   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLINTL  ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SPLIT   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TAX)                        //SKS#DevOps17886
        {
            if(strLen(mSKS_EFT_Bank.WOrdPartyName) > 35)
            {
                this.node_PstlAdr(_nodeDbtr, mSKS_EFT_Bank.WOrdPartyCountryRegionId, '', mSKS_EFT_Bank.WOrdPartyZipCode, mSKS_EFT_Bank.WOrdPartyCity, 0, '', mSKS_EFT_Bank.WOrdPartyState, true);
            }
            else if(mSKS_EFT_Bank.WOrdPartyState)
            {
                this.node_PstlAdr(_nodeDbtr, mSKS_EFT_Bank.WOrdPartyCountryRegionId, mSKS_EFT_Bank.WOrdPartyAddr, '', mSKS_EFT_Bank.WOrdPartyCity, 0, mSKS_EFT_Bank.WOrdPartyAddr2, mSKS_EFT_Bank.WOrdPartyState, true);
            }
            else
            {
                this.node_PstlAdr(_nodeDbtr, mSKS_EFT_Bank.WOrdPartyCountryRegionId, mSKS_EFT_Bank.WOrdPartyAddr, mSKS_EFT_Bank.WOrdPartyZipCode, mSKS_EFT_Bank.WOrdPartyCity, 0, mSKS_EFT_Bank.WOrdPartyAddr2, mSKS_EFT_Bank.WOrdPartyState, true);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPHVP   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AUHVP   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USHVP   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NZHVP   ||                       //SKG#VSTS:10417
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OMHVP   ||                      //SKS#DevOps:19642
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CNHVP   ||                      //SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXHVP   ||                      //SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLHVP   ||                      //SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKHVP   ||                      //SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DEHVP)   //SKS#DevOps:15654
        {
            if(strLen(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName) > 35)
            {
                this.node_PstlAdr_Structured(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, '', mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity, 35, '', mSKS_EFT_FileDetail_BankAccount.WOrdPartyState, '');
            }
            else
            {
                this.node_PstlAdr_Structured(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity, 35, '', mSKS_EFT_FileDetail_BankAccount.WOrdPartyState, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CH01 ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CH03)
        {
            this.node_DbtrPstlAdr_Structured(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr,
                mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity, 35, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2);
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CH_URGP_HV)     //SKS#VSTS:13984
        {
            if(strLen(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName) > 35)
            {
                this.node_PstlAdr(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, '', mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity, 0, '', mSKS_EFT_FileDetail_BankAccount.WOrdPartyState, true);
            }
            else
            {
                this.node_PstlAdr(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity, 0, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2, mSKS_EFT_FileDetail_BankAccount.WOrdPartyState, true);
            }
        }
        else if(mSKS_EFT_FileDetail.FormatId == 'US-HSBC-CCTI-V22' &&
               (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USLVP || //SKS#DevOps:15309 -->
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USLVP_CTX))         //SKS#DevOps:16686
        {
            this.node_PstlAdr_Structured(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity, 35, '', mSKS_EFT_FileDetail_BankAccount.WOrdPartyState, '');
        }
        //SKS#DevOps:15309 <--
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CACBACH) //SKS_DevOps_15476
        {
            this.node_PstlAdr(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: DbtrAcct
        //          Id
        //              IBAN
        //              Othr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;
        XmlElement nodeOthr;
        XmlElement nodeDbtrAcctTp;
        XmlElement nodePrtryAcct;
        XmlElement nodeSchemeNm;

        str value;
        int length, bmLen;
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #RTGSSDVA     ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #RTGSURGP     ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPHVP        ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPZPP        ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXSPID       ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXCBPMT      ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXDOMWIR     ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXACH        ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACHK        ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AUHVP        ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USHVP        ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USLVP        ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NZLVP       ||                  //SKG#VSTS:10417
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USLVP_CTX    ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NZHVP        ||                  //SKG#VSTS:10417
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA         ||                 //SKG#VSTS:10636
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BMACHLV      || 
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BMWIREHV     ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #IEEURLV      ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGTT         ||                  //SKS_VSTS_13732
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGRTGS       ||                  //SKS_VSTS_13732
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGFAST       ||                  //SKS_VSTS_13732
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGACH        ||                  //SKS_VSTS_13732
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CH_URGP_HV   ||                  //SKS_VSTS_13984
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AULVP        ||                  //SKS#DevOps:14815
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHKOS        ||                  //SKS#DevOps:16196
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OMLVP        ||                  //SKS#DevOps:19642
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OMHVP        ||                  //SKS#DevOps:19642
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AEHVP        ||                  //SKS#DevOps:19698
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AELVP        ||                  //SKS#DevOps:19698
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CNHVP        ||                  //SKS#DevOps:19698
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CNLVP        ||                  //SKS#DevOps:19698
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXHVP        ||                  //SKS#DevOps:19698
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXLVP        ||                  //SKS#DevOps:19698
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLHVP        ||                  //SKS#DevOps:19698
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKHVP        ||                  //SKS#DevOps:19698
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ITHVP        ||                  //SKS#DevOps:19731
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FRHVP        ||                  //SKS#DevOps:19731
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SAWIREHV     ||              //SKS#DevOps:19046
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BHWIREHV     ||              //SKS#DevOps:19046
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BHACHLVP     ||              //SKS#DevOps:19046
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SAACHLVP     ||              //SKS#DevOps:19046
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VCARD        ||                           //SKS#DevOps:16755
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CBC)
        {
            //      2.20: DbtrAcct
            nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
            //          Id
            nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
    
            if(mSKS_EFT_FileDetail.BankBankIBAN   &&
               ((mSKS_EFT_FileFormatPaymSpec.TransactionCode != #JPHVP   &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #JPZPP   &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MXSPID  &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MXCBPMT &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MXDOMWIR&&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MXACH   &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CACHK   &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #AUHVP   &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #USHVP   &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #USLVP   &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #USLVP_CTX   &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #AULVP   &&                 //SKS#DevOps:14815
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #NZHVP   &&                        //SKG#VSTS:10417
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #NZLVP   &&                        //SKG#VSTS:17740
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BMACHLV &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BMWIREHV &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA     &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SGTT    &&                  //SKS_VSTS_13732
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SGRTGS  &&                  //SKS_VSTS_13732
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SGFAST  &&                  //SKS_VSTS_13732
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CHKOS   &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #TTRTGS  &&                  //SKS_VSTS_13732
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #OMLVP   &&                 //SKS#DevOps:19642
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #OMHVP   &&                 //SKS#DevOps:19642
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #AEHVP   &&                 //SKS#DevOps:19698
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #AELVP   &&                 //SKS#DevOps:19698
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CNHVP   &&                 //SKS#DevOps:19698
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SAWIREHV   &&              //SKS#DevOps:19046
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SAACHLVP   &&              //SKS#DevOps:19046
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BHWIREHV   &&              //SKS#DevOps:19046
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BHACHLVP   &&              //SKS#DevOps:19046
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CNLVP   &&                 //SKS#DevOps:19698
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MXHVP   &&                 //SKS#DevOps:19698
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MXLVP   &&                 //SKS#DevOps:19698
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SGACH  &&               //SKS_VSTS_13732
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CBC)   ||
                (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA &&
                 this.getLogisticsAddressCountryISO(msks_EFT_FileDetail_BankAddress.CountryRegionId) != 'CZ')))
            {
                //              IBAN
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN', mSKS_EFT_FileDetail.BankBankIBAN);
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BMACHLV || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BMWIREHV)
            {
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BMACHLV:
                        bmLen = 12;
                        break;
                    case #BMWIREHV:
                        bmLen = 34;
                        break;
                }
                nodePrtryAcct = nodeDbtrAcctId.appendChild(xmlDoc.createElement('PrtryAcct'));
                //                  Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePrtryAcct, 'Id', mSKS_EFT_FileDetail.BankBankAcct, bmLen);
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CH_URGP_HV)       //SKS_VSTS_13984
            {
                //              Othr
                nodeOthr = nodeDbtrAcctId.appendChild(xmlDoc.createElement('Othr'));
                
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPHVP   ||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPZPP   ||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGTT    ||       //SKS_VSTS_13732
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGRTGS  ||       //SKS_VSTS_13732
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGFAST  ||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NURGZA   ||       //SKS_VSTS_14034
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGPZA   ||       //SKS_VSTS_14034
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTLZA   ||       //SKS_VSTS_13732
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AULVP    ||       //SKS#DevOps:14815
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OMLVP    ||       //SKS#DevOps:19642
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CNLVP    ||       //SKS#DevOps:19698
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NZLVP)           //SKS#DevOps:17740
                {
                    length = 12;
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXSPID  ||
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXCBPMT ||
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXDOMWIR||
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USHVP   ||
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USLVP   ||
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OMHVP   ||      //SKS#DevOps:19642
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USLVP_CTX||     //SKS#DevOps:16686
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA    ||
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGACH   ||       //SKS_VSTS_13732
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TTRTGS  ||          // SKS#DevOps:16216
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHKOS   ||       //SKS#DevOps:16196
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AEHVP   ||      //SKS#DevOps:19698
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AELVP   ||      //SKS#DevOps:19698
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CNHVP   ||      //SKS#DevOps:19698
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXHVP   ||      //SKS#DevOps:19698
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXLVP   ||      //SKS#DevOps:19698
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLHVP   ||      //SKS#DevOps:19698
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKHVP   ||      //SKS#DevOps:19698
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ITHVP   ||      //SKS#DevOps:19731
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FRHVP   ||      //SKS#DevOps:19731
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VCARD   ||         //SKS#DevOps:16755 
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SAWIREHV   ||              //SKS#DevOps:19046
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SAACHLVP   ||              //SKS#DevOps:19046
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SAACHLVP   ||              //SKS#DevOps:19046
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BHWIREHV   ||              //SKS#DevOps:19046
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BHACHLVP   ||              //SKS#DevOps:19046
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CBC)
                {
                    length = 34;
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AUHVP ||
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NZHVP)                         //SKG#VSTS:10417
                {
                    length = 35;
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXACH)
                {
                    length = 10;
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACHK)
                {
                    length = 12;
                }
                else
                {
                    length = 15;
                }

                //                  Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.BankBankAcct, length);

                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SAWIREHV||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SAACHLVP||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BHWIREHV||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BHACHLVP)//SKS#DevOps:19046
                {
                    //          SchemeNm
                    nodeSchemeNm = nodeOthr.appendChild(xmlDoc.createElement('SchmeNm'));       
                    
                    //                  Prtry
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchemeNm, 'Prtry', 'other');
                    
                    //              Ccy
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcct, 'Ccy', mSKS_EFT_FileDetail.PaymentCurrencyCode);
                }
            }
    
            if(mSKS_EFT_FileDetail.BankAcctType == BankAccountType::SavingsAccount)
            {
                value = 'SVGS';
            }
            else
            {
                value = 'CACC';
            }
    
            if((value == 'SVGS' || value == 'CACC') &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MXSPID  &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MXCBPMT &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MXDOMWIR&&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #AUHVP   &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #NZHVP   &&                         //SKG#VSTS:10417
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA    &&                              //SKG#VSTS:10636
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BMACHLV &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BMWIREHV &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #IEEURLV &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #IEINTHV &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CH_URGP_HV &&   ////SKG#VSTS:13984
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SGACH &&//SKS_VSTS_14165 -->
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SGTT &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #TTRTGS &&   // SKS#DevOps:16216
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #UKHVP   &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SGFAST&&//SKS_VSTS_14165 <--
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #GDPMT &&       //SKS#DevOps:19163
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #OMLVP &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #OMHVP &&//DevOps20106
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CBC  &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SAWIREHV   &&              //SKS#DevOps:19046
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SAACHLVP )             //SKS#DevOps:19046
            {
                nodeDbtrAcctTp = nodeDbtrAcct.appendChild(xmlDoc.createElement('Tp'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctTp, 'Cd', value);
            }
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TTRTGS || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGACH)      // SKS#DevOps:16216 //DevOps19357
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcct, 'Ccy', mSKS_EFT_FileDetail.CurrencyCode);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKURGP  ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKNURG      ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTLPMT     || //SKS_VSTS_13941
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DEHVP       || //SKS#DevOps:15654
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GDPMT       || //SKS#DevOps:19163
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLDOM       ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLINTL      ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SPLIT       ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TAX)
        {
            //      2.20: DbtrAcct
            nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
            //          Id
            nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
    
            if(mSKS_EFT_FileDetail.BankBankIBAN)
            {
                //              IBAN
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN', mSKS_EFT_FileDetail.BankBankIBAN);
            }
            else
            {
                //              Othr
                this.node_PmtInf_DbtrAcct_Id_Othr(nodeDbtrAcctId);
            }
            //              Ccy
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcct, 'Ccy', mSKS_EFT_FileDetail.CurrencyCode);
        }
        else if((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #LVPMT || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USCHK ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VNHVP || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRMPTPY) && mSKS_EFT_FileDetail.BankBankAcct)//SKS_VSTS_14858 && //SKS#DevOps:15735,16055
        {
            //      2.20: DbtrAcct
            nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
            //          Id
            nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));

            //              Othr
            this.node_PmtInf_DbtrAcct_Id_Othr(nodeDbtrAcctId);
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKFP ||                //SKS_VSTS_14473
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKBACS)                //SKS#devOps:15055
        {
            //      2.20: DbtrAcct
            nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
            //          Id
            nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));

            if(mSKS_EFT_FileDetail.BankBankSwiftNo &&
            mSKS_EFT_FileDetail.BankBankIBAN)
            {
                //              IBAN
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN', mSKS_EFT_FileDetail.BankBankIBAN);
            }
            else
            {
                //              Othr
                this.node_PmtInf_DbtrAcct_Id_Othr(nodeDbtrAcctId);
            }
            //              Ccy
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcct, 'Ccy', mSKS_EFT_FileDetail.CurrencyCode);
            
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACBACH || //SKS_DevOps_15476
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYCHK   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYACH   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYPP    ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INRTGS  ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INNEFT)     //SKS#DevOps:16683
        {
            //      2.20: DbtrAcct
            nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
            //          Id
            nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
            
            //              Othr
            this.node_PmtInf_DbtrAcct_Id_Othr(nodeDbtrAcctId);

            //              Ccy
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcct, 'Ccy', mSKS_EFT_FileDetail.CurrencyCode);
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VNLVP)  //SKS#DevOps:15528
        {
            //      2.20: DbtrAcct
            nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
            //          Id
            nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
            
            //              Othr
            this.node_PmtInf_DbtrAcct_Id_Othr(nodeDbtrAcctId);
                      
            if(mSKS_EFT_FileDetail.BankAcctType == BankAccountType::SavingsAccount)
            {
                value = 'SVGS';
            }
            else
            {
                value = 'CACC';
            }
    
            if(value == 'SVGS' || value == 'CACC')
            {
                nodeDbtrAcctTp = nodeDbtrAcct.appendChild(xmlDoc.createElement('Tp'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctTp, 'Cd', value);
            }
        }
        else
        {
            super(_nodePmtInf);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct_Id_Othr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcct_Id_Othr(XmlElement _nodeAcctId)
    {
        //------------------------------------------------------------------------------------------------------
        //              Othr
        //                  Id
        //                  SchmeNm
        //                      Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeOthr;
        int length;
    
        //              Othr
        nodeOthr = _nodeAcctId.appendChild(xmlDoc.createElement('Othr'));
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CAURGP ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CA450 ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #LVPMT ||  //SKS_VSTS_14858
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACBACH ||      //SKS_DevOps_15476
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VNLVP   || //SKS#DevOps:15528
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYCHK ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYACH ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYPP  ||    //SKS#DevOps:15619
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DEHVP ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USCHK ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRMPTPY)      //SKS#DevOps:16055
        {
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACBACH || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USCHK)
            {
                length = 9;
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DEHVP || 
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VNHVP ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GDPMT)   //SKS#DevOps:15735
            {
                length = 34;
            }
            else
            {
                length = 12;
            }
        }
    
        //                  Id
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.BankBankAcct, length);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.21: DbtrAgt
        //          FinInstnId
        //              ClrSysMmbId
        //                  MmbId
        //              BIC (base class)
        //              PstlAdr
        //                  Ctry
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
        XmlElement nodePstlAdr;
        XmlElement nodeCmbndId;
        XmlElement nodeBrnchId;
        int length;
        str        value;
    
        //      2.21: DbtrAgt
        nodeDbtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAgt'));
    
        //          FinInstnId
        nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GDPMT)       //SKS#DevOps:16193
        {
            if(mSKS_EFT_FileDetail.BankBankSwiftNo)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.BankBankSwiftNo, 11, false);
            }
            if(mSKS_EFT_FileDetail.BankBankTransit)
            {
                //              ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
                //                  MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.BankBankTransit, 35);
            }
        }
        else if(mSKS_EFT_FileDetail.PaymSpec == #CBC)
        {
            if(mSKS_EFT_FileDetail.BankBankSwiftNo)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.BankBankSwiftNo, 11, false);
            }
            else if(mSKS_EFT_FileDetail.BankBankTransit)
            {
                //              ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
                //                  MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.BankBankTransit, 35);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKHVP ||         //SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXHVP ||         //SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ITHVP ||        // SKS#DevOps:19731
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLHVP)           //SKS#DevOps:19698
        {
            if(mSKS_EFT_FileDetail.BankBankSwiftNo)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.BankBankSwiftNo, 11, false);
            }
            else if(mSKS_EFT_FileDetail.BankBankTransit)
            {
                //              ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
                //                  MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.BankBankTransit, 35);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BMWIREHV || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BMACHLV)
        {
            nodeCmbndId = nodeFinInstnId.appendChild(xmlDoc.createElement('CmbndId'));
            if (mSKS_EFT_FileDetail.BankBankSwiftNo)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCmbndId, 'BIC', mSKS_EFT_FileDetail.BankBankSwiftNo, 0, false);
            }
            else if (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BMWIREHV)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCmbndId, 'MmbId', mSKS_EFT_FileDetail.BankBankTransit, 0, false);
            }
        }
        else if((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKFP ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKCHSDVA) && //SKS#DevOps:15453
                (mSKS_EFT_FileDetail.BankBankTransit                  ||
                 mSKS_EFT_FileDetail.BankBankSortCode))           //SKG#VSTS:13969
        {
            value = mSKS_EFT_FileDetail.BankBankTransit;

            if(!value && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKFP)
            {
                value = mSKS_EFT_FileDetail.BankBankSortCode;
            }
            if(mSKS_EFT_FileDetail.BankBankIBAN && mSKS_EFT_FileDetail.BankBankSwiftNo)  //SKS#DevOps:15453
            {
                //              BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.BankBankSwiftNo, 0, false);
            }
            else if(value)
            {
                //              ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
                //                  MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', value, 0, false);
            }

        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USCHK && mSKS_EFT_FileDetail.BankBankTransit)   //SKS#DevOps:15509
        {
            //              ClrSysMmbId
            nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
            //                  MmbId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.BankBankTransit, 9);
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKBACS &&                   //SKS#DevOps:15505
               (mSKS_EFT_FileDetail.BankBankSwiftNo || mSKS_EFT_FileDetail.BankBankSortCode))
        {
            value = mSKS_EFT_FileDetail.BankBankSortCode;

            if(mSKS_EFT_FileDetail.BankBankIBAN && mSKS_EFT_FileDetail.BankBankSwiftNo)  //SKS_DevOps_15453
            {
                //              BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.BankBankSwiftNo, 0, false);
            }
            else if(value)
            {
                //              ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
                //                  MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', value, 0, false);
            }
        }
        else if(mSKS_EFT_FileDetail.BankBankSwiftNo != '' &&
                (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGACH      ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGTT        ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TTRTGS      ||  // SKS#DevOps:16216
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGFAST      ||  //SKS_VSTS_14165
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THBAHTUP    ||   //SKS#DevOps:15650
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYCHK       ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYACH       ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYPP        ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OMHVP       ||  //SKS#DevOps:19642
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AEHVP       ||  //SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AELVP       ||  //SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CNHVP       ||  //SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CNLVP       ||  //SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VNHVP))         //SKS#DevOps:15735
        {
            //              BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.BankBankSwiftNo, 0, false);
        }
        else if((mSKS_EFT_FileFormatPaymSpec.TransactionCode != #JPZPP && 
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CACHK &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CH01  &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #TTRTGS&&                // SKS#DevOps:16216
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #USLVP &&                  //SKS_VSTS_13732
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #USLVP_CTX &&              //SKS#DevOps:16686
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CHKOS &&                  //SKS#DevOps:16196
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #VCARD &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CBC &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CAACH &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #OMHVP &&                // SKS#DevOps:16216
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #AEHVP &&                // SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #AELVP &&                // SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CNHVP &&                // SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CNLVP &&                // SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MXLVP &&                // SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #NLHVP &&                // SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ITHVP &&                // SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #FRHVP &&                // SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SGRTGS)||                  //SKS_VSTS_13732
                ((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USLVP||                   //SKS_VSTS_13806
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USLVP_CTX||                //SKS#DevOps:16686
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AULVP    ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OMLVP    ||                //SKS#DevOps:19642
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CAACH) &&                  //SKS#DevOps:14815
                 mSKS_EFT_FileDetail.BankBankTransit == ''))                    
        {
            //              BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.BankBankSwiftNo, 0, false);
        }
    
        // For BACS must use Sort Code in ClrSysMmbid\Mmbid
        // For THSTRF and THNTRF may use Transaction code
        if((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CH01   ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CH03)
            && mSKS_EFT_FileDetail.BankBankSortCode)
        {
            //              ClrSysMmbId
            nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
            //                  MmbId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.BankBankSortCode, 6);
        }
        else if(mSKS_EFT_FileDetail.BankBankTransit != '' &&
                (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CA450  ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CAURGP  ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPZPP   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACHK   ||                  //SKS_VSTS_13732
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGRTGS  ||                    //SKS_VSTS_13732
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHKOS  ||                  //SKS#DevOps:16196
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VCARD  ||                   //SKS#DevOps:16755
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXLVP))                      //SKS#DevOps:19698
        {
            //              ClrSysMmbId
            nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
            
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #JPZPP)
            {
                length = 4;
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACHK  ||  mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CAACH)
            {
                length = 9;
            }
            else
            {
                length = 35;
            }
            //                  MmbId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.BankBankTransit, length);
        }
        if(((mSKS_EFT_FileDetail.BankBankTransit != '' && mSKS_EFT_FileDetail.BankBankSwiftNo == '') &&                //SKG#VSTS:8640
            (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THSTRF   ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THNTRF   ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THOSTRUP ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRPT   ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #LVPMT    || //SKS_VSTS_14858
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #RTGSSDVA ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #RTGSURGP ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AUHVP    ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXSPID   ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXCBPMT  ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXDOMWIR ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXACH    || //SKS_VSTS_13176
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USHVP    ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USLVP    ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USLVP_CTX||                //SKS#DevOps:16686
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NZHVP    ||                           //SKG#VSTS:10417
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA     ||                           //SKG#VSTS:10636
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKCHURGP ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGPZA   ||             //SKS_VSTS_14034
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TTRTGS   ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRMPTPY||            //SKS#DevOps:16055
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INRTGS   ||            //SKS#DevOps:16683
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INNEFT   ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NZLVP    ||                           //SKG#VSTS:17740
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OMLVP    ||            //SKS#DevOps:19642
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AEHVP    ||            //SKS#DevOps:19698
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AELVP    ||            //SKS#DevOps:19698        
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CBC      ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SAACHLVP  ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BHACHLVP  ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTLZA)) ||
            (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTLPMT && mSKS_EFT_FileDetail.BankBankTransit)   || //SKG#DevOps:15541
            ((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USLVP ||
              mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USLVP_CTX) && mSKS_EFT_FileDetail.BankBankTransit))//SKS_VSTS13806
        {
            switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)//SKS_VSTS_13806
            {
                case #USLVP :
                case #USLVP_CTX :       //SKS#DevOps:16686
                case #OMLVP :
                    length = 9;
                    break;
                case #TTRTGS :
                case #CBC:
                    length = 34;
                    break;
                default :
                    length = 35;
                    break;
            }
            //              ClrSysMmbId
            nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
            //                  MmbId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.BankBankTransit, length);
        }
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #JPZPP:
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName), 30);
                break;
            case #AUHVP:
            case #USLVP:
            case #USLVP_CTX :       //SKS#DevOps:16686
            case #NZHVP:                           //SKG#VSTS:10417
            case #CH01:
            case #CH03:
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName), 140);
                break;
            case #SAWIREHV:
            case #BHWIREHV:
            case #BHACHLVP:
            case #SAACHLVP:     //SKS#DevOps:19046
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(msks_EFT_FileDetail_BankAddress.Name), 140);
                break;
        }
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACBACH) //SKS_DevOps_15476
        {
            this.node_PstlAdr(nodeFinInstnId, msks_EFT_FileDetail_BankAddress.CountryRegionId, msks_EFT_FileDetail_BankAddress.Addr, msks_EFT_FileDetail_BankAddress.ZipCode, msks_EFT_FileDetail_BankAddress.City, 0, msks_EFT_FileDetail_BankAddress.Addr2, msks_EFT_FileDetail_BankAddress.State, true);
        }
        else if(msks_EFT_FileDetail_BankAddress.CountryRegionId)
        {
            //              PstlAdr
            nodePstlAdr = nodeFinInstnId.appendChild(xmlDoc.createElement('PstlAdr'));
    
            //                  Ctry
    
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', this.getLogisticsAddressCountryISO(msks_EFT_FileDetail_BankAddress.CountryRegionId));
        }

        if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyId && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DEHVP)//SKS_VSTS_14085
        {
            //                  BrnchId
            nodeBrnchId = nodeDbtrAgt.appendChild(xmlDoc.createElement('BrnchId'));

            //                      Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBrnchId, 'Id', mSKS_EFT_FileDetail_BankAccount.WOrdPartyId, 35);//SKS_VSTS_14085
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.6: PmtTpInf
        //          2.8: SvcLvl
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePmftTpInf;
        XmlElement nodeSvcLvl;
        XmlElement nodeCtgyPurp;
        XmlElement nodeLclInstrm;
        str value = '';
        
        //      2.6: PmtTpInf
        nodePmftTpInf = _nodePmtInf.appendChild(xmlDoc.createElement('PmtTpInf'));

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USHVP)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmftTpInf, 'InstrPrty', 'HIGH');
        }
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THCHK &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #HKCHK &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SGCHK &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MYCHK   &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #TAX)
        {
            if (mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BMACHLV)
            {
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACBACH)
                {
                    //          2.8: SvcLvl
                    nodeSvcLvl = nodePmftTpInf.appendChild(xmlDoc.createElement('SvcLvl'));
    
                    //              2.13: Prtry
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSvcLvl, 'Prtry', 'GD');
                }
                else
                {
                    //          2.8: SvcLvl
                    nodeSvcLvl = nodePmftTpInf.appendChild(xmlDoc.createElement('SvcLvl'));
    
                    //              2.9: Cd
                    this.node_PmtInf_PmtTpInf_SvcLvl_Cd(nodeSvcLvl);
                }
            }

            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CA450 || 
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACHK ||                //SKS#VSTS:13169
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BMACHLV||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USLVP ||                 //SKS#VSTS:13625
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USLVP_CTX)               //SKS#DevOps:16686
            {
                //          2.11: LclInstrm
                nodeLclInstrm = nodePmftTpInf.appendChild(xmlDoc.createElement('LclInstrm'));
                
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BMACHLV:
                        //              2.13: Prtry
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Prtry', 'B');
                        break;
                    case #CACHK:
                        //              2.13: Prtry
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Prtry', 'COS');
                        break;
                    case #USLVP:
                        //              2.13: Prtry
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Cd', 'CCD');
                        break;
                    case #USLVP_CTX:        //SKS#DevOps:16686
                        //              2.13: Prtry
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Cd', 'CTX');
                        break;
                }
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SAACHLVP)       //SKS#DevOps:19046
            {
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm',mSKS_EFT_FileDetail.RecId));
                if(value)
                {
                    //          2.11: LclInstrm
                    nodeLclInstrm = nodePmftTpInf.appendChild(xmlDoc.createElement('LclInstrm'));

                    //              2.13: Prtry
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Prtry', value);
                }
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CAACH)
            {
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));

                if(value)
                {
                    //          2.11: LclInstrm
                    nodeLclInstrm = nodePmftTpInf.appendChild(xmlDoc.createElement('LclInstrm'));

                    //                  Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Cd', value);
                }
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THSTRF || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THNTRF || 
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #IEINTHV|| mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACBACH||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CBC ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TTRTGS || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TAX    ||                                  //SKS#DevOps:16216,15476                                  //SKS#DevOps:16216,15476
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLHVP  ||mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ITHVP  ||//SKS#DevOps:19731
                    (mSKS_EFT_FileFormatPaymSpec.FormatId == 'EU-HSBC-CCTI-V22-FR'&&       
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA))          //SKS#DevOps:16664
            {
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #IEINTHV ||      //SKS_VSTS_13941
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLHVP   ||           //SKS#DevOps:19698
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ITHVP)
                {
                    value = 'INTC';
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CACBACH)
                {
                    value = 'SUPP';
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TAX)                //SKS#DevOps:17886
                {
                    value = 'TAXS';
                }
                else
                {
                    value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CtgyPurp', mSKS_EFT_FileDetail.RecId));
                }
    
                //          2.14: CtgyPurp
                nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
                //              2.15: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', value, 0, false);
            }
        }
        else
        {
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKCHK  ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGCHK ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THCHK ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYCHK)   //SKS#DevOps:15619
            {
                value = 'ICO';
            }
            else
            {
                value = 'UCP';
            }
            if(value)
            {
                //          2.11: LclInstrm
                nodeLclInstrm = nodePmftTpInf.appendChild(xmlDoc.createElement('LclInstrm'));
                //              2.13: Prtry
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Prtry', value, 0, false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl_Cd</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl_Cd(XmlElement _nodeSvcLvl)
    {
        //------------------------------------------------------------------------------------------------------
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
        str codeValue, prtry;
    
        //              2.9: Cd
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #SGFAST:            //SKS_VSTS_13732
            case #THPRMPTPY:        //SKS#DevOps:16055
            case #INNEFT:   //SKS#DevOps:16683
                codeValue = 'URNS';
                break;
            case #UKCHPRPT:
            case #SGPRPT:
            case #HKPRPT:
            case #THPRPT:
            case #MOPRPT:
            case #JPZPP:
            case #BMWIREHV:                                //SKG#VSTS10942
                codeValue = 'PRPT';
                break;
            case #UKCHURGP:
            case #SGURGP:
            case #HKURGP:
            case #THBAHTUP:
            case #THOSTRUP:
            case #CAURGP:
            case #MOURGP:
            case #RTGSURGP:
            case #MXSPID:
            case #MXCBPMT:
            case #MXDOMWIR:
            case #IEINTHV:
            case #SGTT:            //SKS_VSTS_13732
            case #SGRTGS:          //SKS_VSTS_13732
            case #INTLPMT:         //SKS_VSTS_13941
            case #CH_URGP_HV:      //SKS_VSTS_13984
            case #URGPZA://SKS_VSTS_14034
            case #INTLZA:
            case #MYPP:     //SKS#DevOps:15619
            case #TTRTGS:   //SKS#DevOps:16219
            case #PLINTL:   //SKS#DevOps:16276
            case #SPLIT:    //SKS#DevOps:16276
            case #INRTGS:   //SKS#DevOps:16683
            case #OMHVP:    //SKS#DevOps:19642
            case #AEHVP:       //SKS#DevOps:19698
            case #CNHVP:       //SKS#DevOps:19698
            case #MXHVP:       //SKS#DevOps:19698
            case #NLHVP:       //SKS#DevOps:19698
            case #UKHVP:       //SKS#DevOps:19698
            case #ITHVP:       //SKS#DevOps:19731
            case #FRHVP:       //SKS#DevOps:19731                
            case #AELVP:  //SKS#DevOps:20331
            case #CBC: //DevOps20211
            case #SAWIREHV:     //SKS#DevOps:19046
            case #BHWIREHV:     //SKS#DevOps:19046
            case #PLDOM:    //SKS#DevOps:21777
                codeValue = 'URGP';
                break;
            case #UKFP://SKS_VSTS_14553
                codeValue = 'URNS';
                break;
            case #UKCHSDVA:
            case #RTGSSDVA:
                codeValue = 'SDVA';
                break;
            case #UKBACS:
            case #SGNURG:
            case #HKNURG:
            case #THSTRF:
            case #THNTRF:
            case #CA450:
            case #MONURG:
            case #USLVP:
            case #USLVP_CTX:    //SKS#DevOps:16686
            case #CACHK:
            case #MXACH:
            case #CH01:
            case #CH03:
            case #SGACH:            //SKS_VSTS_13732
            case #NURGZA://SKS_VSTS_14034
            case #AULVP:            //SKS#DevOps:14815
            case #LVPMT: //SKS_VSTS_14858
            case #VNLVP:
            case #MYACH:  //SKS#DevOps:15619
            case #USCHK:  //SKS#DevOps:15509
            case #CHKOS:  //SKS#DevOps:16196
            case #VCARD:  //SKS#DevOps:16755
            case #NZLVP:  //SKS#DevOps:17740
            case #OMLVP:  //SKS#DevOps:19642
            case #CAACH:
            case #CNLVP:  //SKS#DevOps:19698
            case #MXLVP:
            case #SAACHLVP://SKS#DevOps:19046
            case #BHACHLVP://SKS#DevOps:19046
                codeValue = 'NURG';
                break;
            case #SEPA:
            case #IEEURLV:
            case #PLSEPA:       //SKS#DevOps:16276
                codeValue = 'SEPA';
                break;
            case #JPHVP:
            case #AUHVP:
            case #USHVP:
            case #NZHVP:                                //SKG#VSTS10417
            case #DEHVP:    //SKS#DevOps:15654
            case #VNHVP:   //SKS#DevOps:15735
                codeValue = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('SvcLvlCd', mSKS_EFT_FileDetail.RecId));
                break;
            case #GDPMT:          //SKS#DevOsp:16193
                prtry = 'GD';
                break;
        }
        if(prtry)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Prtry', prtry);        //SKS#DevOsp:16193
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Cd', codeValue);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PstlAdr_Structured</Name>
				<Source><![CDATA[
    protected void node_PstlAdr_Structured(XmlElement _node,
                                AddressCountryRegionId _countryId,
                                SKS_EB_Address _address,
                                AddressZipCodeId _postalCode,
                                AddressCity _city,
                                int _length = 35,
                                SKS_EB_Address _address2 = '',
                                AddressCountryRegionName _state = '',
                                LogisticsAddressBuildingCompliment _bldgNbr = '')
    {
        //------------------------------------------------------------------------------------------------------
        //          PstlAdr
        //              StrtNm
        //              BldgNb
        //              PstCd
        //              TwnNm
        //              CtrySubDvsn
        //              Ctry
        //              AdrLine
        //              AdrLine
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePstlAdr;
        LogisticsAddressCountryRegionISOCode countryRegion;
    
        countryRegion = this.getLogisticsAddressCountryISO(_countryId);
    
        if(countryRegion ||
           _address ||
           _postalCode ||
           _city ||
           _address2 ||
           _state ||
           _bldgNbr)
        {
            //      PstlAdr
            nodePstlAdr = _node.appendChild(xmlDoc.createElement('PstlAdr'));
    
            if(mSKS_EFT_FileDetail.FormatId == 'AP-HSBC-CCTI-V22'    ||
               mSKS_EFT_FileDetail.FormatId == 'EU-HSBC-CCTI-V22-MX' ||
               mSKS_EFT_FileDetail.FormatId == 'US-HSBC-CCTI-V22'    ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #RTGSSDVA ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #RTGSURGP ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA     ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTLPMT  ||//SKS_VSTS_14612
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #IEINTHV  ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKFP     ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKBACS   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKCHPRPT ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKCHURGP||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKCHSDVA ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DEHVP   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRMPTPY ||       //SKS#DevOps:16055
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CAACH     ||       //SKS#DevOps:16055
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLDOM ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SPLIT ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TAX   ||        //SKS#DevOps:17886
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OMHVP ||        //SKS#DevOps:19642
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AEHVP ||        //SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OMLVP ||        //SKS#DevOps:19642
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AELVP ||        //SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CNLVP ||        //SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CNHVP ||        //SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLHVP ||        //SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKHVP ||        //SKS#DevOps:19698
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLINTL)

            {
                //              StrtNm
                if(countryRegion == 'HK' ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #RTGSSDVA ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #RTGSURGP ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AUHVP    ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NZHVP    ||                 //SKG#VSTS:10417
                    mSKS_EFT_FileDetail.FormatId == 'EU-HSBC-CCTI-V22-MX'    ||
                    mSKS_EFT_FileDetail.FormatId == 'US-HSBC-CCTI-V22'       ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA     ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #IEINTHV  ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKFP     ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKBACS   ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKCHPRPT ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKCHURGP ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKCHSDVA||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CAACH ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLDOM    ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SPLIT    ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OMHVP    ||                 //SKG#DevOps:19642
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OMLVP    ||                 //SKG#DevOps:19642
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AEHVP    ||                 //SKG#DevOps:19698
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #AELVP    ||                 //SKG#DevOps:19698
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CNLVP    ||                 //SKG#DevOps:19698
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CNHVP    ||                 //SKG#DevOps:19698
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXHVP    ||                 //SKG#DevOps:19698
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLHVP    ||                 //SKG#DevOps:19698
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKHVP   ||                  //SKS#DevOps:19698
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLINTL)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'StrtNm', this.CharacterReplacement(_address), 70, false);
                }
                else
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'StrtNm', this.CharacterReplacement(_address + ' ' + _address2), 70, false);
                }
            }
    
            //              BldgNb
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'BldgNb', this.CharacterReplacement(_bldgNbr), 16, false);
    
            //              PstCd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'PstCd', _postalCode, 16, false);
    
            //              CtrySubDvsn
            if(countryRegion == 'HK')
            {
                //              TwnNm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', this.CharacterReplacement(_address2), 35, false);
    
                //              CtrySubDvsn
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'CtrySubDvsn', this.CharacterReplacement(_city), 35, false);
            }
            else
            {
                //              TwnNm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', this.CharacterReplacement(_city), 35, false);
    
                //              CtrySubDvsn
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'CtrySubDvsn', this.CharacterReplacement(_state), 35, false);
            }
    
            //              Ctry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', countryRegion, 2, false);
    
            if(mSKS_EFT_FileDetail.FormatId != 'AP-HSBC-CCTI-V22'           &&
                mSKS_EFT_FileDetail.FormatId != 'US-HSBC-CCTI-V22'          &&
                mSKS_EFT_FileDetail.FormatId != 'EU-HSBC-CCTI-V22-CN'       &&
                mSKS_EFT_FileDetail.FormatId != 'EU-HSBC-CCTI-V22-AE'       &&
                mSKS_EFT_FileDetail.FormatId != 'EU-HSBC-CCTI-V22-NL'       &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #RTGSSDVA    &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #RTGSURGP    &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MXSPID      &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MXCBPMT     &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MXDOMWIR    &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MXHVP       &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MXLVP       &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA        &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #INTLPMT     &&//SKS_VSTS_14612
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #IEINTHV     &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #UKBACS      &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #UKFP        &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #UKHVP       &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #UKCHPRPT    &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #UKCHURGP    &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #UKCHSDVA    &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #DEHVP       &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #USCHK       &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THPRMPTPY   &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CAACH       &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PLDOM       &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SPLIT       &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PLINTL      &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MXHVP       &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #TAX)
            {
                //              AdrLine
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(_address), _length, false);
    
                //              AdrLine
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(_address2), _length, false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_RmtInf_Amt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reffered document Amount
    /// </summary>
    /// <param name = "_nodeRfrdDocAmt">RfrdDocAmt</param>
    /// <param name = "_invSKS_EFT_FileDetail">invSKS_EFT_FileDetail</param>
    protected void node_RmtInf_Amt(XmlElement _nodeRfrdDocAmt, SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.42: Amt
        //              2.43: InstdAmt
        //------------------------------------------------------------------------------------------------------
        XmlElement  currentElement;
        AmountMST   gross = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        AmountMST   Discount = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
        AmountMST   Remitted;
        AmountMST   CreditNote;
    
        if(_invSKS_EFT_FileDetail.InvoiceSettleAmountCur > 0)
        {
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THCHK    ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THSTRF   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THNTRF   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THBAHTUP ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THOSTRUP ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THPRPT)
            {
                Gross = (_invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur) * -1;
            }
            else
            {
                Gross = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            }
            Discount = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
            Remitted = 0;
            CreditNote = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        }
        else
        {
            Gross = (_invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur) * -1;
            Discount = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur * -1;
            Remitted = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1;
            CreditNote = 0;
        }
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SGCHK)    //SKS#DevOps:15748
        {
            //      2.110   Gross/Invoice Amount
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DuePyblAmt', num2str(Gross,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', Currency::currencyCodeISO(_invSKS_EFT_FileDetail.PaymentCurrencyCode));
        }
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGCHK ||     //SKS#DevOps:15626
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHKOS)       //SKS#DevOps:16196
        {          
            if(Remitted != 0)
            {
                //      RmtdAmt
                currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'RmtdAmt', num2str(Remitted,0,2,1,0));
                SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
            }
            else
            {
                //      CdtNoteAmt
                currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'CdtNoteAmt', num2str(CreditNote,0,2,1,0));
                SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #VCARD ||       //SKS#DevOps:17167
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USCHK ||          //SKS#DevOps:20378        
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYACH ||        //SKS#DevOps:21381
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYPP)
        {
            //      2.111
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DscntApldAmt', num2str(Discount,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', Currency::currencyCodeISO(_invSKS_EFT_FileDetail.PaymentCurrencyCode));

            if(Remitted != 0)
            {
                //      RmtdAmt
                currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'RmtdAmt', num2str(Remitted,0,2,1,0));
                SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
            }
            else
            {
                //      CdtNoteAmt
                currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'CdtNoteAmt', num2str(CreditNote,0,2,1,0));
                SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THCHK    &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THSTRF   &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THNTRF   &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THBAHTUP &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THOSTRUP &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THPRPT   &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #USCHK   &&  //SKS#DevOps:20378
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MYCHK    &&  //SKS#DevOps:15619
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #THPRMPTPY)   //SKS#DevOps:16055
        {
            //      2.111
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DscntApldAmt', num2str(Discount,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', Currency::currencyCodeISO(_invSKS_EFT_FileDetail.PaymentCurrencyCode));
    
            if(mSKS_EFT_FileDetail.PaymSpec == #CAURGP || mSKS_EFT_FileDetail.PaymSpec == #CA450)
            {
                //      CdtNoteAmt
                currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'CdtNoteAmt', num2str(CreditNote,0,2,1,0));
                SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', Currency::currencyCodeISO(_invSKS_EFT_FileDetail.PaymentCurrencyCode));
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CACHK)
            {
                //     Brightstar repurposed check field CdtNoteAmt
                currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'CdtNoteAmt', num2str(_invSKS_EFT_FileDetail.InvoiceOrigAmountCur * -1,0,2,1,0));
                SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', Currency::currencyCodeISO(_invSKS_EFT_FileDetail.PaymentCurrencyCode));
            }                 
            //      2.119
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'RmtdAmt', num2str(Remitted,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', Currency::currencyCodeISO(_invSKS_EFT_FileDetail.PaymentCurrencyCode));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_InstrForCdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_InstrForCdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.82: InstrForCdtrAgt
        //              InstrInf
        //------------------------------------------------------------------------------------------------------
        XmlElement  nodeInstrForCdtrAgt;
        str value, instrInf, instrCode;
    
        value       = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InstrForCdtrAgt', mSKS_EFT_FileDetail.RecId));
        instrInf    = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InstrInf', mSKS_EFT_FileDetail.RecId));
        instrCode   = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InstrCode',mSKS_EFT_FileDetail.RecId));

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #TTRTGS ||      //SKS#DevOsp:17058
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UKHVP)
        {
            this.getBankPurposeCode();

            if(purposeName)            //SKS#DevOsp:17616
            {
                instrInf = purposeName;
            }
            if(instrInf)
            {
                //          2.82: InstrForCdtrAgt
                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', instrInf, 35, false);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CBC)      //SKS#DevOsp:20211
        {
            if(instrInf)
            {
                //          2.82: InstrForCdtrAgt
                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', instrInf, 35, false);
            }
        }
        else if((instrCode || instrInf) &&
               (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INRTGS ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INNEFT ||       //SKSDevOps:16683
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ITHVP  ||       //SKSDevOps:19731
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FRHVP  ||       //SKSDevOps:19731
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXHVP))        //SKSDevOps:19698
        {
            //          2.82: InstrForCdtrAgt
            nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'Cd', instrCode, 0, false);

            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', instrInf, 140, false);
        }
        else if(value || instrInf)
        {
            //          2.82: InstrForCdtrAgt
            nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));
    
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'Cd', value, 0, false);

            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', instrInf, 140, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_PmtTpInf(XmlElement _nodeCdtTrfTxInf)
    {
        //-----------------------------------------------------------------------------------------------------
        //          2.8: SvcLvl
        //          2.11: LclInstrm
        //
        //-----------------------------------------------------------------------------------------------------


        XmlElement nodePmtTpInf;
        XmlElement nodeLclInstrm;
        str value = '';
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CH01 || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CH03)
        {
            //      2.6: PmtTpInf
            nodePmtTpInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('PmtTpInf'));

            //          2.11: LclInstrm
            nodeLclInstrm = nodePmtTpInf.appendChild(xmlDoc.createElement('LclInstrm'));
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CH01 )
            {
                value = 'CH01';
            }
            else
            {
                value = 'CH03';
            }
            //              2.13: Prtry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Prtry', value, 0, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_PmtTpInf_SvcLvl_Cd</Name>
				<Source><![CDATA[
    /// <summary>
    /// SvcLvlCode
    /// </summary>
    /// <param name = "_nodeSvcLvl">SvcLvlCode</param>
    protected void node_CdtTrfTxInf_PmtTpInf_SvcLvl_Cd(XmlElement _nodeSvcLvl)
    {
        //             2.9: cd
        str codeValue;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #CH01:
            case #CH03:
                codeValue = 'NURG';
                break;
        }
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Cd', codeValue);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
            join mSKS_EFT_FileDetail_BenBank
            join mSKS_EFT_FileDetail_Intermediary
            join mSKS_EFT_FileDetail_CreditParty
            join msKS_EFT_FileDetail_Instructions
                order by mSKS_EFT_FileDetail.PaymentCompany, //SKS_VSTS_12809
                   mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_BenBank.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_Intermediary.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_CreditParty.RefRecId &&
                mSKS_EFT_FileDetail.RecId == msKS_EFT_FileDetail_Instructions.RefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRemittanceAddress</Name>
				<Source><![CDATA[
    void getRemittanceAddress(boolean UseCheckNum)
    {
        mRemittanceName = mSKS_EFT_FileDetail_VendAddress.BeneName;
        mRemittanceAdrLine1 = mSKS_EFT_FileDetail_VendAddress.BeneAddr;
        mRemittanceAdrLine2 = mSKS_EFT_FileDetail_VendAddress.BeneAddr2;
        mRemittanceCity = mSKS_EFT_FileDetail_VendAddress.BeneCity;
        mRemittanceState = mSKS_EFT_FileDetail_VendAddress.BeneState;
        mRemittanceZipCode = mSKS_EFT_FileDetail_VendAddress.BeneZipPostal;
        mRemittanceCountryRegionId = this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DbtrPstlAdr_Structured</Name>
				<Source><![CDATA[
    /// <summary>
    /// Debtor Structured Postal address
    /// </summary>
    /// <param name = "_node">node</param>
    /// <param name = "_countryId">countryId</param>
    /// <param name = "_address">address</param>
    /// <param name = "_postalCode">postalCode</param>
    /// <param name = "_city">city</param>
    /// <param name = "_length">length</param>
    /// <param name = "_address2">address2</param>
    protected void node_DbtrPstlAdr_Structured(XmlElement _node,
                                AddressCountryRegionId _countryId,
                                SKS_EB_Address _address,
                                AddressZipCodeId _postalCode,
                                AddressCity _city,
                                int _length = 35,
                                SKS_EB_Address _address2 = '')
    {
        //------------------------------------------------------------------------------------------------------
        //          PstlAdr
        //              StrtNm
        //              PstCd
        //              TwnNm
        //              Ctry
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePstlAdr;
        LogisticsAddressCountryRegionISOCode countryRegion;
    
        countryRegion = this.getLogisticsAddressCountryISO(_countryId);
    
        if(countryRegion ||
           _address ||
           _postalCode ||
           _city ||
           _address2)
        {
            //      PstlAdr
            nodePstlAdr = _node.appendChild(xmlDoc.createElement('PstlAdr'));

            //          StrtNm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'StrtNm', this.CharacterReplacement(_address + ' ' + _address2), 70, false);
            //          PstCd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'PstCd', _postalCode, 16, false);
            //          TwnNm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', this.CharacterReplacement(_city), 35, false);
            //          Ctry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', countryRegion, 2, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        CompanyBankAccountId    prevBankAccountId;
        PaymMode                prevPaymMode;
        PaymSpec                prevPaymSpec;
        CurrencyCode            prevCurrency;
        SKS_EB_Date             prevEffectiveDate;
        DataAreaId              prevPaymCompany;            //SKS_VSTS_12809
    
        xmlDoc = XmlDocument::newBlank(this.getEncoding());
    
        this.node_MessageRoot();
    
        this.node_GrpHdr();
    
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            this.getVendBankAccount();      //SKS#DevOps:16055

            //SKS_EB_Vendor
            this.getSKS_EB_Vendor();  //SKS_DevOps_15476

            mSKS_EFT_FileDetail_BankAccount = SKS_EFT_FileDetail_BankAccount::find(mSKS_EFT_FileDetail.RecId);

            select firstonly msks_EFT_FileDetail_BankAddress where
                msks_EFT_FileDetail_BankAddress.RefRecId == mSKS_EFT_FileDetail.RecID
                && msks_EFT_FileDetail_BankAddress.AddressType == SKS_EFT_AddressType::BankAddress;
    
            if(prevBankAccountId != mSKS_EFT_FileDetail.BankAccountId ||
               prevPaymMode != mSKS_EFT_FileDetail.PaymMode ||
               prevPaymSpec != mSKS_EFT_FileDetail.PaymSpec ||
               prevCurrency != mSKS_EFT_FileDetail.PaymentCurrencyCode ||
               prevEffectiveDate != mSKS_EFT_FileDetail.EffectiveDate  ||
               prevPaymCompany != mSKS_EFT_FileDetail.PaymentCompany//SKS_VSTS_12809
            )
            {
                this.node_PmtInf();
    
                prevBankAccountId = mSKS_EFT_FileDetail.BankAccountId;
                prevPaymMode = mSKS_EFT_FileDetail.PaymMode;
                prevPaymSpec = mSKS_EFT_FileDetail.PaymSpec;
                prevCurrency = mSKS_EFT_FileDetail.PaymentCurrencyCode;
                prevEffectiveDate = mSKS_EFT_FileDetail.EffectiveDate;
                prevPaymCompany   = mSKS_EFT_FileDetail.PaymentCompany;//SKS_VSTS_12809
            }
    
            // Get RemittanceAddress
            this.getRemittanceAddress((mSKS_EFT_FileFormatPaymSpec.UseCheckNumber || subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) == 'CHK'));
    
            //Get Addenda information
            this.setAddenda();
    
            //For AP
            this.node_CdtTrfTxInf();
    
            bankCode = '';      //SKS_VSTS_13848
            bankCodeText = '';  //SKS_VSTS_13848

            next mSKS_EFT_FileDetail;
        }
        this.fileWrite(xmlDoc.toString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceJournaltxt</Name>
				<Source><![CDATA[
    private str getInvoiceJournaltxt(SKS_EFT_FileDetail _SKS_EFT_FileDetail)
    {
        VendTrans lVendTrans;

        select firstonly crossCompany Txt from lVendTrans where
           lVendTrans.RecId == _SKS_EFT_FileDetail.VendTransRecId;

        return this.CharacterReplacement(lVendTrans.Txt);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_BtchBookg</Name>
				<Source><![CDATA[
    protected void node_PmtInf_BtchBookg(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.23 BtchBookg
        //------------------------------------------------------------------------------------------------------
        str btchBookg;

        btchBookg = SKS_EFT_Format::getCodelookupvalue('BtchBookg', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);

        if(btchBookg != 'OMIT' && mSKS_EFT_FileFormatPaymSpec.FormatId == 'CA-HSBC-CCTI-V22')       //SKS#DevOps:18050
        {
            //      2.23 BtchBookg
            if(strUpr(btchBookg) == 'N')
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'BtchBookg', 'False');
            }
            else
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'BtchBookg', 'True');
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MXACH)        
        {
            //      2.23 BtchBookg
            if(strUpr(btchBookg) == 'N')
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'BtchBookg', 'False');
            }
            else
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'BtchBookg', 'True');
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYCHK)       //SKS#DevOps:15860
        {
            //      2.23 BtchBookg
            if(strUpr(btchBookg) == 'Y')
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'BtchBookg', 'True');
            }
            else
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'BtchBookg', 'False');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceDetails</Name>
				<Source><![CDATA[
    private str getInvoiceDetails()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        str invDetailsString;
    
        while select InvoiceNumber, EffectiveDate, InvoiceSettleAmountPmtCur, PaymentCurrencyCode from invSKS_EFT_FileDetail
            where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
               && invSKS_EFT_FileDetail.InvoiceNumber != ''
        {
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYCHK)
            {
                invDetailsString += strFmt('%1,%2,%3, ', invSKS_EFT_FileDetail.InvoiceNumber, invSKS_EFT_FileDetail.EffectiveDate, num2str(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,0,0,0));
            }
            
        }
    
        if(invDetailsString)
        {
            invDetailsString = subStr(invDetailsString, 1, strLen(invDetailsString)-2);
        }
        return this.CharacterReplacement(invDetailsString);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSKS_EB_Vendor</Name>
				<Source><![CDATA[
    //SKS_DevOps_15476 -->
    void getSKS_EB_Vendor()
    {
        if(mSKS_EB_Vendor.VendAccount != mSKS_EFT_FileDetail.AccountNum || mSKS_EB_Vendor.VendCompany != mSKS_EFT_FileDetail.AccountCompany)
        {
            mSKS_EB_Vendor = SKS_EB_Vendor::find(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVendorType</Name>
				<Source><![CDATA[
    private DirPartyBaseType getVendorType()
    {
        DirPartyTable lDirPartyTable;
        VendTable lVendTable;
    
        lVendTable = VendTable::findByCompany(mSKS_EB_Vendor.VendCompany, mSKS_EB_Vendor.VendAccount);
    
        select firstonly lDirPartyTable where lDirPartyTable.RecId == lVendTable.Party;
    
        switch (lDirPartyTable.getInstanceRelationType())
        {
            case tableStr(DirPerson):
                return DirPartyBaseType::Person;
            default:
                return DirPartyBaseType::Organization;
        }
    }
    //SKS_DevOps_15476 <--

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>