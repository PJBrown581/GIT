<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_CustVendPaymProposalTransferToJour_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[Extensionof(classStr(CustVendPaymProposalTransferToJournal))]
final class SKS_CustVendPaymProposalTransferToJour_Extension
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>handlePostTransferProposal</Name>
				<Source><![CDATA[
    private void handlePostTransferProposal()
    {
        LedgerJournalTable               ledgerJournalTableLoc = LedgerJournalTable::find(ledgerJournalId);
        SKS_EFT_Setup lSKS_EFT_Setup = SKS_EFT_Setup::find();

        // 10090 -->
        if((ledgerJournalTable.JournalType == LedgerJournalType::Payment 
                || ledgerJournalTable.JournalType == LedgerJournalType::CustPayment) &&
                    SKS_PP_Setup::find().ModPFA == NoYes::Yes &&
                    !ledgerJournalTable.SKS_EFTAP_IsPaymReqJournal)
        {
            Args args = new Args();
            args.record(ledgerJournalTable);

            SKS_EFTAP_SwitchBoardIHBBank::main(args);
            if (SKS_Table_LedgerJournalTable::EFTMOPExists(ledgerJournalTableLoc))
            {
                SKS_EFT_JournalValidate::updateJournalTableState(ledgerJournalTableLoc);
            }
        }
        // 10090 <--
        // SKS_FDD_9536 -->
        else if(!ledgerJournalTable.SKS_EFTAP_IsPaymReqJournal && SKS_Table_LedgerJournalTable::EFTMOPExists(ledgerJournalTableLoc))
        {
            // SKS_FDD_9536 <--
            //SKS_DD_ARPaymentValidation
            boolean isCNP;

            isCNP = SKS_Table_LedgerJournalTable::checkCustReimbursement(ledgerJournalTableLoc);

            if (moduleCustVend == ModuleCustVend::Cust && SKS_EFT_Setup::find().ModAREFT && !isCNP)
            {
                SKS_EFT_ARJournalValidate::validateSet(LedgerJournalTable::find(ledgerJournalTableLoc.JournalNum),false,true,lSKS_EFT_Setup.DDFormatValidProposal,lSKS_EFT_Setup.DDFormatValidMultiThread);
            }
            else if (moduleCustVend == ModuleCustVend::Vend && lSKS_EFT_Setup.ModAPEFT)
            {
                SKS_EFT_APJournalValidate::validateSet(LedgerJournalTable::find(ledgerJournalTableLoc.JournalNum),false,true,false,lSKS_EFT_Setup.APFormatValidProposal, lSKS_EFT_Setup.APFormatValidMultiThread);
            }
            else if (moduleCustVend == ModuleCustVend::Cust && SKS_EFT_Setup::find().ModCNP && isCNP)
            {
                SKS_EFT_CNPJournalValidate::validateSet(LedgerJournalTable::find(ledgerJournalTableLoc.JournalNum));
            }

            SKS_EFT_JournalValidate::updateJournalTableState(ledgerJournalTableLoc);
            //SKS_DD_ARPaymentValidation
            // SKS_FDD_9536
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferProposal</Name>
				<Source><![CDATA[
    public void transferProposal()
    {
        next transferProposal();

        if (!(this.isInBatch()
               && this.getHasBatchBeenSplit()))
        {
            this.handlePostTransferProposal();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>notifyUserAfterTransferProposal</Name>
				<Source><![CDATA[
    protected void notifyUserAfterTransferProposal()
    {
        next notifyUserAfterTransferProposal();

        if (this.isInBatch()
            && this.getHasBatchBeenSplit()
            && this.getIsFinalBatch())
        {
            this.handlePostTransferProposal();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>