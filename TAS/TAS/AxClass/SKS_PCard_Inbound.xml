<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PCard_Inbound</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PCard_Inbound extends SKS_EB_Batch
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    [SuppressBPWarningAttribute("BPCheckNestedLoopinCode","Three loops are needed, two of these are nested. For each Company(looped through in the outer) we process each Bank Account(in the second loop) and in the innermost loop, we process each file for that bank account. There is no way to refactor this without serious loss of code readablity")]
    public void run()
    {
        SKS_EB_FileHub locSKS_EB_FileHub;
        SKS_EB_Send locSKS_EB_Send;
        Batch bat;
        SKS_EB_CommProcess locSKS_EB_CommProcess;
        SKS_PP_Bank locSKS_PP_Bank;
        RefRecId locRefRecID;
        SKS_PP_Setup locSKS_PP_Setup;
        SKS_EB_FilePath locFilePath;
        SKS_EB_FileStorage locSKS_EB_FileStorage;
        SKS_BF_BankIntType locSKS_BF_BankIntType;
        SKS_PCard_ParmTable SKS_PCard_ParmTable;

        bat = this.parmCurrentBatch();
        locRefRecID = bat.RecId;
        
        select firstonly StorageOption_BR from locSKS_EB_FileStorage;
        locSKS_BF_BankIntType = locSKS_EB_FileStorage.StorageOption_BR == SKS_EB_BankIntegOptWithNoLicense::BankFabricEnumValue ? SKS_BF_BankIntType::BankFabric : SKS_BF_BankIntType::FileHubLocal;
        locSKS_EB_FileHub = SKS_EB_FileHub::construct(locSKS_BF_BankIntType);

        while select crossCompany locSKS_EB_CommProcess 
            where locSKS_EB_CommProcess.BatchJobId == locRefRecID
        {
            locSKS_PP_Bank = null;
            locSKS_PP_Setup = null;

            //BankFabric processing
            while Select crossCompany * from SKS_PCard_ParmTable
                    where SKS_PCard_ParmTable.CommID == locSKS_EB_CommProcess.CommID
            {
                if(strLRTrim(locSKS_EB_CommProcess.BankFabricCommunicationName) == '')
                {
                    Info("@SKS:BFLocMiss");
                    continue;
                }
                
                SKS_PCard_APIs  PCardProcess = new SKS_PCard_APIs();
                PCardProcess.parmCommId(locSKS_EB_CommProcess);
                PCardProcess.parmBankFabricLocation(SKS_PCard_ParmTable.FileLocation);

                PCardProcess.run();
            }
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static client server ClassDescription description()
    {
        return "@SKS:PCardInboundProcess";
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        boolean ret;
    
        ret = super();
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>