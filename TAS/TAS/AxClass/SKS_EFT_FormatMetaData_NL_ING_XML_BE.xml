<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_NL_ING_XML_BE</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_NL_ING_XML_BE Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_NL_ING_XML_BE Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230130';
        dataContractVersion = '1.0';
        conFormatID = ['NL-ING-XML-BE'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'NL - ING - Belgium - ISO20022',0,'','','NL-ING-XML-BE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'NL-ING-XML-BE',1,1,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('NL-ING-XML-BE'):
                paymSpecList = this.getPaymSpecsMetaData_NL_ING_XML_BE();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_NL_ING_XML_BE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_NL_ING_XML_BE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA Credit Transfer',1,'SEPA','','SEPA','TRADE PAY',0,'NL-ING-XML-BE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Credit transfers in currencies other than EUR',1,'NON-EUR','','NON-EUR','TRADE PAY',0,'NL-ING-XML-BE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Credit transfers to countries outside SEPA',1,'NON-SEPA','','NON-SEPA','TRADE PAY',0,'NL-ING-XML-BE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'FebelFin Isabel SEPA Unstructured Info',1,'SEPA-USTRD','','SEPA-USTRD','TRADE PAY',0,'NL-ING-XML-BE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'FebelFin Isabel SEPA Structured Info',1,'OGM-VCS','','OGM-VCS','TRADE PAY',0,'NL-ING-XML-BE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('NL-ING-XML-BE'):
                notesList = this.getNotesMetaData_NL_ING_XML_BE();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_NL_ING_XML_BE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_NL_ING_XML_BE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['NL-ING-XML-BE','NON-EUR','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['NL-ING-XML-BE','NON-SEPA','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['NL-ING-XML-BE','SEPA','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['NL-ING-XML-BE','SEPA-USTRD','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['NL-ING-XML-BE','OGM-VCS','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('NL-ING-XML-BE'):
                validationsList = this.getValidationsMetaData_NL_ING_XML_BE();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_NL_ING_XML_BE</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_NL_ING_XML_BE()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab)> SWIFT code','GrpHdr > InitgPty > Id > BICOrBEI','BIC Or BEI','15','WOrdPartySWIFTNo','','','3','2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','TownName related to bank','15','WOrdPartyCity','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',1,'2','8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',1,0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Nm','Beneficiary Bank Name','16','WBenBankName','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address','PmtInf > CdTrfTxInf > CdtrAgt > PstlAdr > AdrLine','Beneficiary Bank address','16','WBenBankAddr','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','Vendor Bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > City','PmtInf > CdTrfTxInf > CdtrAgt > PstlAdr > AdrLine','Beneficiary Bank City','16','WBenBankCity','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','Vendor Bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Ctry','Beneficiary Bank Country','16','WBenBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,'2','8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','Vendor Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','vendor City','16','WBeneCity','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-EUR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab)> SWIFT code','GrpHdr > InitgPty > Id > BICOrBEI','BIC Or BEI','15','WOrdPartySWIFTNo','','','3','2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','TownName related to bank','15','WOrdPartyCity','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',1,'2','8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',1,0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Nm','Beneficiary Bank Name','16','WBenBankName','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address','PmtInf > CdTrfTxInf > CdtrAgt > PstlAdr > AdrLine','Beneficiary Bank address','16','WBenBankAddr','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','Vendor Bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > City','PmtInf > CdTrfTxInf > CdtrAgt > PstlAdr > AdrLine','Beneficiary Bank City','16','WBenBankCity','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','Vendor Bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Ctry','Beneficiary Bank Country','16','WBenBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,'2','8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','Vendor Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','vendor City','16','WBeneCity','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','NON-SEPA','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab)> SWIFT code','GrpHdr > InitgPty > Id > BICOrBEI','BIC Or BEI','15','WOrdPartySWIFTNo','','','3','2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA','','Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','',0,'2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,'2','8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA','','Vendor Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab)> SWIFT code','GrpHdr > InitgPty > Id > BICOrBEI','BIC Or BEI','15','WOrdPartySWIFTNo','','','3','2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,'2','8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,'2','8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','Vendor Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','SEPA-USTRD','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab)> SWIFT code','GrpHdr > InitgPty > Id > BICOrBEI','BIC Or BEI','15','WOrdPartySWIFTNo','','','3','2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,'2','8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,'2','8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','Vendor Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NL-ING-XML-BE','OGM-VCS','','Payment Id','Accounts payable > Invoice journal > New > Select Name > Lines > New > Invoice tab > Invoice > Payment Id','PmtInf > CdTrfTxInf > RmtInf > Strd > CdtrRefInf > Ref','Payment Id or Creditor reference information','13','PaymId','','',0,1,0,'0',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['NL-ING-XML-BE','BenBankRC','Beneficiary bank routing code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['NL-ING-XML-BE','BtchBookg','Batch Booking']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['NL-ING-XML-BE','CtgyPurp','Category Purpose']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['NL-ING-XML-BE','InstrPrty','Instruction Priority']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['NL-ING-XML-BE','Charges','Charges']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BtchBookg','true','true']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BtchBookg','false','false']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','CtgyPurp','Dividend','DIVI']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','CtgyPurp','IntraCompanyPayment','INTC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','CtgyPurp','Interest','INTE']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','CtgyPurp','PensionPayment','PENS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','CtgyPurp','SalaryPayment','SALA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','CtgyPurp','SocialSecurityBenefit','SSBE']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','CtgyPurp','SupplierPayment','SUPP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','CtgyPurp','TaxPayment','TAXS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','CtgyPurp','TreasuryPayment','TREA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','InstrPrty','Priority level is high','HIGH']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','InstrPrty','Priority level is normal','NORM']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','Australia','AUBSB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','Austria','ATBLZ']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','Canada','CACPA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','China','CNAPS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','Germany','DEBLZ']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','Greece','GRHIC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','HongKong','HKNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','India','INFSC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','Ireland','IENCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','Italy','ITNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','Japan','JPZGN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','NewZealand','NZNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','Poland','PLKNR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','Portugal','PTNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','Russia','RUCBC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','Singapore','SGIBG']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','SouthAfrica','ZANCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','Spain','ESNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','Switzerland BC Code','CHBCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','Switzerland SIC code','CHSIC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','Taiwan','TWNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','UK','GBDSC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','US','USPID']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','BenBankRC','USFedwire','USABA']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','Charges','BornebyCreditor','CRED']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','Charges','BornebyDebtor','DEBT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['NL-ING-XML-BE','Charges','Shared','SHAR']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('NL-ING-XML-BE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_NL_ING_XML_BE();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_NL_ING_XML_BE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_NL_ING_XML_BE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','NON-EUR','BenBankRC','Beneficiary bank routing code',0,'BenBankRC','',0,'','','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > ClrSysId >Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','NON-SEPA','BenBankRC','Beneficiary bank routing code',0,'BenBankRC','',0,'','','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > ClrSysId >Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','SEPA-USTRD','BenBankRC','Beneficiary bank routing code',0,'BenBankRC','',0,'','','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > ClrSysId >Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','OGM-VCS','BenBankRC','Beneficiary bank routing code',0,'BenBankRC','',0,'','','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > ClrSysId >Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','NON-EUR','BtchBookg','Batch Booking',0,'BtchBookg','true',0,'','','PmtInf > BtchBookg']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','NON-SEPA','BtchBookg','Batch Booking',0,'BtchBookg','true',0,'','','PmtInf > BtchBookg']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','SEPA','CtgyPurp','Category purpose',0,'CtgyPurp','',0,'','','PmtInf > PmftTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','SEPA','BtchBookg','Batch Booking',0,'BtchBookg','true',0,'','','PmtInf > BtchBookg']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','SEPA-USTRD','BtchBookg','Batch Booking',0,'BtchBookg','true',0,'','','PmtInf > BtchBookg']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','OGM-VCS','BtchBookg','Batch Booking',0,'BtchBookg','true',0,'','','PmtInf > BtchBookg']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','SEPA','InstrPrty','Instruction Priority',0,'InstrPrty','HIGH',0,'','','PmtInf > PmftTpInf > InstrPrty']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','SEPA-USTRD','InstrPrty','Instruction Priority',0,'InstrPrty','Priority level is normal',0,'','','PmtInf > PmftTpInf > InstrPrty']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','OGM-VCS','InstrPrty','Instruction Priority',0,'InstrPrty','Priority level is normal',0,'','','PmtInf > PmftTpInf > InstrPrty']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','NON-EUR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','NON-SEPA','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','FormatValidations','SEPA','13','PaymId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','PaymSpecFields','NON-EUR','BenBankRC','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','PaymSpecFields','NON-SEPA','BenBankRC','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','PaymSpecFields','SEPA-USTRD','BenBankRC','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','PaymSpecFields','OGM-VCS','BenBankRC','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','PaymSpecFields','NON-EUR','BtchBookg','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','PaymSpecFields','NON-SEPA','BtchBookg','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','PaymSpecFields','SEPA','BtchBookg','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','PaymSpecFields','SEPA-USTRD','BtchBookg','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','PaymSpecFields','OGM-VCS','BtchBookg','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','PaymSpecFields','SEPA','CtgyPurp','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','PaymSpecFields','SEPA','InstrPrty','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','PaymSpecFields','SEPA-USTRD','InstrPrty','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','PaymSpecFields','OGM-VCS','InstrPrty','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ING-XML','NL-ING-XML-BE','']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ING-XML-BE','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ING-XML-BE','*','FormatValidations','*','16','WChargesIndic']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['NL-ING-XML-BE','*','FormatValidations','*','15','W01']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('NL-ING-XML-BE'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_NL_ING_XML_BE();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_NL_ING_XML_BE</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_NL_ING_XML_BE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','InitiatingPartyId','Initiating Party Id',1,'InitiatingPartyId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > Orgid > Othr > Id']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['NL-ING-XML-BE','NL-ING-XML-BE','DbtrId','Debtor Identiification',1,'DbtrId','',0,'','XXXXXXXXXX','PmtInf > Dbtr > Id > Orgid > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('NL-ING-XML-BE'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('InitiatingPartyId', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('DbtrId', gSKS_EFT_Bank.W02);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('NL-ING-XML-BE'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>