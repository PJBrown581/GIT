<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_CA_CIBC_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_CA_CIBC_CSV for VA-CIBC-CSV format
/// </summary>
class SKS_EFT_Format_CA_CIBC_CSV  extends SKS_EFT_Format
{
    #define.FormatVersion('20230518')
    #define.DOM_WIRE('DOM')
    #define.Separator(',')
    #define.DoubleQuote('"')


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        while(mSKS_EFT_FileDetail)
        {
            //  Detail Record
            this.rec_Detail();

            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Detail</Name>
				<Source><![CDATA[
    /// <summary>
    /// Detail record method
    /// </summary>
    /// <returns>True</returns>
    public boolean rec_Detail()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str value;
        //Debit Filed Properties Informarton -->

        //ABA/TRC
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.BankBankTransit, 1, 9)));

        //Account Type
        if(mSKS_EFT_FileDetail.BankAcctType == BankAccountType::CheckingAccount)
        {
            sb.Append(this.wrapField('C'));
        }
        else
        {
            sb.Append(this.wrapField('S'));
        }

        //Account number
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.BankBankAcct, 1, 35)));
        
        //Amount
        sb.Append(this.wrapField(num2Str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0,2,1,0)));

        //Send on date
        sb.Append(this.wrapField(SKS_PP_StringFormats::strDateMMDDYY(mSKS_EFT_FileDetail.EffectiveDate, DateSeparator::None)));

        //Currency
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.CurrencyCode));

        //Recipient Field Properities Information --->

        //Bank ID Type
        //Bank ID
        if(mSKS_EFT_FileDetail.DepSwiftNo)
        {
            sb.Append(this.wrapField('SWIFT'));

            sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.DepSwiftNo, 1, 11)));
        }
        else if(mSKS_EFT_FileDetail.DepBankTransit)
        {
            sb.Append(this.wrapField('ABA'));

            sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.DepBankTransit, 1, 9)));
        }
        else
        {
            sb.Append(this.wrapField(''));
            sb.Append(this.wrapField(''));
        }

        //Recipient account #
        if(mSKS_EFT_FileDetail.DepBankIBAN)
        {
            sb.Append(this.wrapField(strRem(mSKS_EFT_FileDetail.DepBankIBAN, '-')));
        }
        else
        {
            sb.Append(this.wrapField(strRem(mSKS_EFT_FileDetail.DepBankAcct, '-')));
        }

        //Bank name
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail_BenBank.BenBankName, 1, 35)));

        //Bank address 1
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail_BenBank.BenBankAddr, 1, 35)));

        //Bank address 2
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail_BenBank.BenBankCity, 1, 35)));

        //Bank address 3
        sb.Append(this.wrapField(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId));

        //Recipient name
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail_VendAddress.BeneName, 1, 35)));

        //Recipient address 1
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail_VendAddress.BeneAddr + ' ' + mSKS_EFT_FileDetail_VendAddress.BeneAddr2, 1, 35)));

        //Recipient address 2
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail_VendAddress.BeneCity + ' ' + mSKS_EFT_FileDetail_VendAddress.BeneZipPostal, 1, 35)));

        //Recipient address 3
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail_VendAddress.BeneState + ' ' + mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId, 1, 35)));

        //Additional info for recipient
        if(mSKS_EFT_FileDetail_Instructions.PmtInstText1)
        {
            value = mSKS_EFT_FileDetail_Instructions.PmtInstText1;
        }
        if(mSKS_EFT_FileDetail_Instructions.PmtInstText2)
        {
            value = value + mSKS_EFT_FileDetail_Instructions.PmtInstText2;
        }
        if(mSKS_EFT_FileDetail_Instructions.PmtInstText3)
        {
            value =value +  mSKS_EFT_FileDetail_Instructions.PmtInstText3;
        }
        if(mSKS_EFT_FileDetail_Instructions.PmtInstText4)
        {
            value = value + mSKS_EFT_FileDetail_Instructions.PmtInstText4;
        }


        if(value)
        {
            sb.Append(this.wrapField(subStr(value ,1, 140)));
        }
        else
        {
            sb.Append(this.wrapField(subStr(this.getInvoiceNbrs(), 1, 140)));
        }

        //(Optional) Intermediary Info
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));

        //Wire Initiator Field Properties --->

        //Wire Initiator name
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName, 1, 35)));

        //Wire Initiator address 1
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr + ' ' + mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2, 1, 35)));

        //Wire Initiator address 2
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity + ' ' + mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, 1, 35)));

        //Wire Initiator address 3
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail_BankAccount.WOrdPartyState + ' ' + mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, 1, 35), false));

        this.fileWrite(sb.ToString());

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '', boolean _addSeparator = true)
    {
        str text;

        if(_addSeparator)
        {
            if(_field != '' && strContains(_field, ','))
            {
                text = #DoubleQuote + _field + #DoubleQuote + #Separator;
            }
            else
            {
                text = _field + #Separator;
            }
        }
        else
        {
            text = _field;
        }

        return strUpr(text);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
            join mSKS_EFT_FileDetail_BenBank
            join mSKS_EFT_FileDetail_Intermediary
            join mSKS_EFT_FileDetail_CreditParty
            join msKS_EFT_FileDetail_Instructions
            join mSKS_EFT_FileDetail_BankAccount
                order by mSKS_EFT_FileDetail.PaymentCompany,
                   mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_BenBank.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_Intermediary.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_CreditParty.RefRecId &&
                mSKS_EFT_FileDetail.RecId == msKS_EFT_FileDetail_Instructions.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_BankAccount.RefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceNbrs</Name>
				<Source><![CDATA[
    protected str getInvoiceNbrs()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str invString;
    
        select InvoiceNumber from invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId;
    
        while(invSKS_EFT_FileDetail)
        {
            if(invSKS_EFT_FileDetail.InvoiceNumber == '')
            {
                // If no invoice number, go to next record
                next invSKS_EFT_FileDetail;
                continue;
            }
            sb.Append(invSKS_EFT_FileDetail.InvoiceNumber);
    
            next invSKS_EFT_FileDetail;
    
            if(invSKS_EFT_FileDetail)
            {
                sb.Append(', ');
            }
        }
    
        invString = this.CharacterReplacement(sb.ToString());
        return invString;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>