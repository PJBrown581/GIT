<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_TORONTO_DOM_5D</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_TORONTO_DOM_5D Extends SKS_PP_Format_BankGroup
{
    int mChkCount;
    real mChkSum;
    // Toronto Dominion - 5 Digit CRS Pos Pay format
        // Courtesy of: Stinger Wellhead
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    // Pos 01-01     1       Record Type 'I'ssue, 'S'top, 'V'oid, 'D'elete
        // Pos 02-11     10      Serial number - RJ-LZF
        // Pos 12-23     12      Dollar Amount (positive for void)
        // Pos 24-31     8       Issue date (YYYYMMDD)
        // Pos 32-41     10      Reserved - Spaces
        // Pos 42-50     9       Customer Reference Number
        // Pos 51-75     25      Payee Name
        // Pos 76-80     5       Reserved - Spaces
    protected str txtDetail()
    {
        int Mult = 1;
        str ItemType;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
            if(mSKS_PP_FileDetail.ChkCuryAmt < 0)
            {
                Mult = -1;
            }
        }
        else
        {
            ItemType = 'I';
        }
    
        mChkCount++;
        mChkSum = mChkSum + mSKS_PP_FileDetail.ChkCuryAmt;
    
        sb.Append(ItemType);
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(mSKS_PP_FileDetail.ChkCuryAmt * Mult,12));
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(9, mSKS_PP_FileDetail.VendorAccount, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(25, mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(5, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupHeader</Name>
				<Source><![CDATA[
    // Toronto Dominion - 5 Digit CRS Pos Pay format
        // Courtesy of: Stinger Wellhead
    
        // Pos 01-01     1       Record Type 'H'
        // Pos 03-06     5       CRS Account Number (Check Reconciliation Service)
        // Pos 07-11     5       TD Branch Transit
        // Pos 12-18     7       CDA Acount Number (Canadian Deposit Account)
        // Pos 19-48     30      CRS Account Name
        // Pos 49-56     8       File Date yyyymmdd
        // Pos 57-61     5       Reserved - spaces
        // Pos 62-69     8       File Creation Number
        // Pos 70-79     10      Reserved - spaces
        // Pos 80-80     1       Indicator ('N')
    protected str txtGroupHeader()
    {
        SKS_PP_Bank SKS_PP_Bank_1;
        Container company;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        company = [mSKS_PP_FileDetail.ChkCpnyId];
        select crossCompany:company PP01, PP02 from SKS_PP_Bank_1 where SKS_PP_Bank_1.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;
    
        sb.Append('H');
        sb.Append(SKS_PP_StringFormats::strFill(5, SKS_PP_Bank_1.PP02, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(5, substr(mSKS_PP_FileDetail.BnkBankTransit,0,5), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(7, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(30, SKS_PP_Bank_1.PP01, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
        sb.Append(SKS_PP_StringFormats::strFill(5, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(8, mSKS_PP_FileDetail.FileNbr, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append('N');
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    // Toronto Dominion - 5 Digit CRS Pos Pay format
        // Courtesy of: Stinger Wellhead
    
        // Pos 01-01     1       Record Type 'T'
        // Pos 02-10     9       Total Data Records
        // Pos 11-22     12      Total Amount
        // Pos 23-80     58      Reserved - Spaces
    protected str txtGroupTrailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        sb.Append('T');
        sb.Append(SKS_PP_StringFormats::strFill(9, int2str(mChkCount), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(mChkSum, 12));
        sb.Append(SKS_PP_StringFormats::strFill(58,'', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
    
        mChkCount = 0;
        mChkSum = 0;
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>