<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_CTRL_US_ACH_94</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_EFT_CTRL_US_ACH_94 extends SKS_EFT_CTRL_US_ACH
{
    str mcustname;
    str mccname;
    str mcpname;
    str mccnumber;
    date msdate;
    int mdebitcnt;
    int mcreditcnt;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setCustName</Name>
				<Source><![CDATA[
    Public void setCustName(str _CustName)
    {
        mcustname = _CustName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCCName</Name>
				<Source><![CDATA[
    Public void setCCName(str _CCName)
    {
        mccname = _CCName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCPName</Name>
				<Source><![CDATA[
    Public void setCPName(str _CPName)
    {
        mcpname = _CPName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCCNumber</Name>
				<Source><![CDATA[
    Public void setCCNumber(str _CCNumber)
    {
        mccnumber = _CCNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSDate</Name>
				<Source><![CDATA[
    Public void setSDate(date _SDate)
    {
        msdate = _sdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeditCount</Name>
				<Source><![CDATA[
    Public void setDeditCount(int _DebitCnt)
    {
        mdebitcnt = _DebitCnt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCreditCount</Name>
				<Source><![CDATA[
    Public void setCreditCount(int _CreditCnt)
    {
        mcreditcnt = _CreditCnt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FormatStructure</Name>
				<Source><![CDATA[
    protected void FormatStructure()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        sb.Append(SKS_PP_StringFormats::strFill(49, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append('ACH VERIFICATION REPORT');

        sb.Append(SKS_PP_StringFormats::strFill(22, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.AppendLine();

        sb.Append(SKS_PP_StringFormats::strFill(49, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append('REPORT DATE: ');

        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()), DateSeparator::Slash));

        sb.Append(SKS_PP_StringFormats::strFill(22, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.AppendLine();

        sb.Append(SKS_PP_StringFormats::strFill(94, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.AppendLine();

        sb.Append(SKS_PP_StringFormats::strFill(48, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append('COMPANY NAME:');

        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append(SKS_PP_StringFormats::strFill(30, mcustname, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.AppendLine();

        sb.Append(SKS_PP_StringFormats::strFill(48, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append('COMPANY ID:');

        sb.Append(SKS_PP_StringFormats::strFill(5, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append(SKS_PP_StringFormats::strFill(10, mcustid, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        sb.Append(SKS_PP_StringFormats::strFill(20, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.AppendLine();

        sb.Append(SKS_PP_StringFormats::strFill(94, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.AppendLine();

        sb.Append(SKS_PP_StringFormats::strFill(32, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append('POINT NAME:');

        sb.Append(SKS_PP_StringFormats::strFill(5, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append(SKS_PP_StringFormats::strFill(9, mcpname, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append(SKS_PP_StringFormats::strFill(37, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.AppendLine();

        sb.Append(SKS_PP_StringFormats::strFill(94, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.AppendLine();

        sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append('CONTACT NAME:');

        sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append(SKS_PP_StringFormats::strFill(30, mccname, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append(SKS_PP_StringFormats::strFill(37, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.AppendLine();

        sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append('CONTACT NUMBER:');

        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        if(mccnumber)
        {
            if(strContains(mccnumber, '-'))
            {
                mccnumber = mccnumber;
            }
            else
            {
                mccnumber = subStr(mccnumber, 1, 3) + '-' + subStr(mccnumber, 4, 3) + '-' + subStr(mccnumber, 7, 4);
            }
        }

        sb.Append(SKS_PP_StringFormats::strFill(12, subStr(mccnumber, 1, 12), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append(SKS_PP_StringFormats::strFill(54, subStr(mccnumber, 13, 12), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.AppendLine();

        sb.Append(SKS_PP_StringFormats::strFill(94, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.AppendLine();

        sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append('SETTLEMENT DATE:');

        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(msdate, DateSeparator::Slash));

        sb.Append(SKS_PP_StringFormats::strFill(57, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.AppendLine();

        sb.Append(SKS_PP_StringFormats::strFill(94, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.AppendLine();

        sb.Append(SKS_PP_StringFormats::strFill(54, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append('DEBITS');

        sb.Append(SKS_PP_StringFormats::strFill(19, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append('CREDITS');

        sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.AppendLine();

        sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append('DOLLAR AMOUNT:');

        sb.Append(SKS_PP_StringFormats::strFill(26, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append(SKS_PP_StringFormats::strFill(14, '$' + num2Str(mdebitTotal, 1,2,1,2), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));

        sb.Append(SKS_PP_StringFormats::strFill(12, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append(SKS_PP_StringFormats::strFill(14, '$' + num2Str(this.getPositiveAmount(mCreditTotal), 1,2,1,2), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));

        sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.AppendLine();

        sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append('ITEM COUNT:');

        sb.Append(SKS_PP_StringFormats::strFill(36, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append(SKS_PP_StringFormats::strFill(7, num2Str(mdebitcnt, 1,0,1,2), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));

        sb.Append(SKS_PP_StringFormats::strFill(19, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append(SKS_PP_StringFormats::strFill(7, num2Str(mcreditcnt, 1,0,1,2), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));

        sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>