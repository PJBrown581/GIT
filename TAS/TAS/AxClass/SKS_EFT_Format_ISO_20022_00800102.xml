<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_ISO_20022_00800102</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_ISO_20022_00800102 extends SKS_EFT_Format_ISO_20022
/// </summary>
class SKS_EFT_Format_ISO_20022_00800102 extends SKS_EFT_Format_ISO_20022
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>node_DrctDbtTxInf</Name>
				<Source><![CDATA[
    //------------------------------------------------------------------------------------------------------
    // <summary>
    // This class is the 008.002.02 class for all ISO 20022 formats.
    // Bank specific formats may override nodes if they have specific requirements.
    // </summary>
    //------------------------------------------------------------------------------------------------------
    protected void node_DrctDbtTxInf()
    {
        //------------------------------------------------------------------------------------------------------
        //      2.28: DrctDbtTxInf
        //          2.29: PmtId
        //          2.32: PmtTpInf
        //          2.44: InstdAmt
        //          2.45: ChrgBr
        //          2.70: DbtrAgt
        //          2.79: Cdtr
        //          2.80: CdtrAcct
        //          2.98: RmtInf
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDrctDbtTxInf;
    
        //      2.28: DrctDbtTxInf
        nodeDrctDbtTxInf = nodePmtInf.appendChild(xmlDoc.createElement('DrctDbtTxInf'));
    
        //          2.29: PmtId
        this.node_DrctDbtTxInf_PmtId(nodeDrctDbtTxInf);
    
        //          2.32 PmtTpInf
        this.node_DrctDbtTxInf_PmtTpInf(nodeDrctDbtTxInf);
    
        //          2.44: InstdAmt
        this.node_DrctDbtTxInf_Amt(nodeDrctDbtTxInf);
    
        //          2.45: ChrgBr
        this.node_DrctDbtTxInf_ChrgBr(nodeDrctDbtTxInf);
    
        //          2.70: DbtrAgt
        this.node_DrctDbtTxInf_DbtrAgt(nodeDrctDbtTxInf);
    
        //          2.72: Dbtr
        this.node_DrctDbtTxInf_Dbtr(nodeDrctDbtTxInf);
    
        //          2.73: DbtrAcct
        this.node_DrctDbtTxInf_DbtrAcct(nodeDrctDbtTxInf);
    
        //          2.75: InstrForCdtrAgt
        this.node_DrctDbtTxInf_InstrForCdtrAgt(nodeDrctDbtTxInf);
    
        //          2.88: RmtInf
        this.node_DrctDbtTxInf_RmtInf(nodeDrctDbtTxInf);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_Amt</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_Amt(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.44: InstdAmt
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeAmt;
    
        //          2.44: InstdAmt
        nodeAmt = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeDrctDbtTxInf, 'InstdAmt', num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,0,2,1,0));
        SKS_EFT_Format::xmlsetAttributeText(nodeAmt, 'Ccy', mSKS_EFT_FileDetail.PaymentCurrencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_ChrgBr(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.45 ChrgBr
        //------------------------------------------------------------------------------------------------------
    
        // Override in format if element is needed
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_Dbtr</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_Dbtr(XmlElement _node_DrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.72: Dbtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtr;
    
        //          2.72: Dbtr
        nodeDbtr = _node_DrctDbtTxInf.appendChild(xmlDoc.createElement('Dbtr'));
    
        //              Nm
        this.node_DrctDbtTxInf_Dbtr_Nm(nodeDbtr);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_Dbtr_Nm</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_Dbtr_Nm(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.72: Dbtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
    
        //              Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeDbtr, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail.AccountName), 140);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_DbtrAcct(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.73: DbtrAcct
        //              Id
        //                  IBAN
        //              Tp
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;
    
        //          2.73: DbtrAcct
        nodeDbtrAcct = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
        //              Id
        nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
    
        //                  IBAN
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN);
    
        //              Tp
        this.node_DrctDbtTxInf_DbtrAcct_Type(nodeDbtrAcct);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_DbtrAcct_Type</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_DbtrAcct_Type(XmlElement _nodeDbtrAcct)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.73: DbtrAcct
        //              Tp
        //------------------------------------------------------------------------------------------------------
    
        // Override in format if element is needed
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_DbtrAgt(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.70: DbtrAgt
        //              FinInstnId
        //                  BIC
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
    
        //          2.70: DbtrAgt
        nodeDbtrAgt = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('DbtrAgt'));
    
        //              FinInstnId
        nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
        //                  BIC
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_InstrForCdtrAgt</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_InstrForCdtrAgt(XmlElement _nodeDbtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.75: InstrForCdtrAgt
        //------------------------------------------------------------------------------------------------------
    
        // Override in format if element is needed
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_PmtId</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_PmtId(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.29: PmtId
        //              2.31: EndToEndId
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodePmtId;
    
        //          2.28: PmtId
        nodePmtId = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('PmtId'));
    
        //              2.31: EndToEndId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId', SKS_PP_StringFormats::strRight(mSKS_EFT_FileDetail.PaymentReference, 35));
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_PmtTpInf(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.31 PmtTpInf
        //------------------------------------------------------------------------------------------------------
    
        // Override in format if element is needed
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_RmtInf(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //------------------------------------------------------------------------------------------------------
    
        // Override in format if element is needed
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //------------------------------------------------------------------------------------------------------
    
        // Override in format if element is needed
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_CdtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: CdtrAcct
        //          Id
        //              IBAN
        //              Othr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
    
        //      2.20: CdtrAcct
        nodeCdtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
        //          Id
        nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
        if(mBankAccountTable.IBAN)
        {
            //              IBAN
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mBankAccountTable.IBAN);
        }
        else
        {
            //              Othr
            this.node_PmtInf_CdtrAcct_Id_Othr(nodeCdtrAcctId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_CdtrAcct_Id_Othr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_CdtrAcct_Id_Othr(XmlElement _nodeAcctId)
    {
        //------------------------------------------------------------------------------------------------------
        //              Othr
        //                  Id
        //                  SchmeNm
        //                      Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeOthr;
    
        //              Othr
        nodeOthr = _nodeAcctId.appendChild(xmlDoc.createElement('Othr'));
    
        //                  Id
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.BankBankAcct);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_PmtInf_CdtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.21: CdtrAgt
        //------------------------------------------------------------------------------------------------------
    
        // Override in format if element is needed
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_CdtrNodes</Name>
				<Source><![CDATA[
    protected void node_PmtInf_CdtrNodes(XmlElement _nodePmtInf)
    {
        //      2.19: Cdtr
        this.node_PmtInf_Cdtr(_nodePmtInf);
    
        //      2.20: CdtrAcct
        this.node_PmtInf_CdtrAcct(_nodePmtInf);
    
        //      2.21: CdtrAgt
        this.node_PmtInf_CdtrAgt(_nodePmtInf);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.6: PmtTpInf
        //          2.7: InstrPrty
        //          2.8: SvcLvl
        //          2.11: LclInstrm
        //          2.15: CtgyPurp
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodePmtTpInf;
        nodePmtTpInf = _nodePmtInf.appendChild(xmlDoc.createElement('PmtTpInf'));
    
        //          2.7: InstrPrty
        this.node_PmtInf_PmtTpInf_InstrPrty(nodePmtTpInf);
    
        //          2.8: SvcLvl
        this.node_PmtInf_PmtTpInf_SvcLvl(nodePmtTpInf);
    
        //          2.11: LclInstrm
        this.node_PmtInf_PmtTpInf_LclInstrm(nodePmtTpInf);
    
        //          2.15: CtgyPurp
        this.node_PmtInf_PmtTpInf_CtgyPurp(nodePmtTpInf);
    
        //Remove if no children
        if(!nodePmtTpInf.hasChildNodes())
        {
            _nodePmtInf.removeChild(nodePmtTpInf);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_CtgyPurp</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_CtgyPurp(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.6: PmtTpInf
        //          2.15: CtgyPurp
        //------------------------------------------------------------------------------------------------------
    
        //Override in format if element needed
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_InstrPrty</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_InstrPrty(XmlElement _nodenodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.6: PmtTpInf
        //          2.7: InstrPrty
        //------------------------------------------------------------------------------------------------------
    
        //Override in format if element needed
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_LclInstrm</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_LclInstrm(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.6: PmtTpInf
        //          2.11: LclInstrm
        //------------------------------------------------------------------------------------------------------
    
        //Override in format if element needed
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.6: PmtTpInf
        //          2.8: SvcLvl
        //------------------------------------------------------------------------------------------------------
        // Override in format if element is needed
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>