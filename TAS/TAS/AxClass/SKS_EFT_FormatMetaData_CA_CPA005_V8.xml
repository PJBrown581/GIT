<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_CA_CPA005_V8</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_CA_CPA005_V8 Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_CA_CPA005_V8 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220826';
        dataContractVersion = '1.0';
        conFormatID = ['CA-CPA005-V8'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,1,0,0,'','','','',1,'XXXXXXXXXX','Company Id','Company name','UUUUUUUUUUUUUUUU',1,'CA - Canadian Payments Association (CPA-005)',0,'','','CA-CPA005-V8',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,'1464',0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'CA-CPA005-V8',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('CA-CPA005-V8'):
                paymSpecList = this.getPaymSpecsMetaData_CA_CPA005_V8();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_CA_CPA005_V8</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_CA_CPA005_V8()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'Accounts Payable (CAD)','99','AP-CAD','','AP-CAD','TRADE PAY',0,'CA-CPA005-V8',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'ACH Direct Deposits (PDS) Service','99','AP-PDS','','AP-PDS','TRADE PAY',0,'CA-CPA005-V8',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'Accounts Receivable (CAD)','99','AR-CAD','','AR-CAD','TRADE PAY',0,'CA-CPA005-V8',0,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('CA-CPA005-V8'):
                notesList = this.getNotesMetaData_CA_CPA005_V8();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_CA_CPA005_V8</Name>
				<Source><![CDATA[
    private container getNotesMetaData_CA_CPA005_V8()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['CA-CPA005-V8','AP-CAD','-Processing Center and Test file flag are stored on the EFT+ bank account > AP EFT+ > Wire/IAT ordering party tab. Originator A/C Number is not required for this payment specification.:-Client Id is stored in ID field and Client name is stored in Name field on EFT+ bank account > AP EFT+ > Wire/IAT ordering party tab.:-Originator\'s Short Name is stored in Originator\'s Short Name field on EFT+ bank account > AP EFT+ > Wire/IAT ordering party tab.:-Canadian Payment Association (CPA) Transaction Code is \'460\':-This payment specification does not support Vendor bank debits.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CA-CPA005-V8','AP-PDS','-Originator A/C Number is not required for this payment specification.:-Canadian Payment Association (CPA) Transaction Code is \'460\':-This payment specification does not support Vendor bank debits.:-CAD Financial Institution and Branch Transit are stored on Vendor bank accounts > Routing number.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CA-CPA005-V8','AR-CAD','-Processing Center and Test file flag and Originator A/C Number are stored on the Direct debit bank account > Direct debit > File info fast tab:-Originator’s Long Name (as Company name)and Originator’s Direct Clearer\'s User Id (as Company Id) stored on the Direct debit bank account > Direct debit > Company info fast tab.:-Canadian Payment Association (CPA) Transaction Code is \'450\':-This payment specification does not support Customer bank credits.:-Canadian dollar and US dollar currency transactions cannot be commingled in a single file.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('CA-CPA005-V8'):
                validationsList = this.getValidationsMetaData_CA_CPA005_V8();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_CA_CPA005_V8</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_CA_CPA005_V8()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-CPA005-V8','AP-PDS','','Bank Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ID','Header Record > Client Number > Position 11-20 and Payment Record > Client Number > Position 11-20 and 165-174','Id related to bank','15','WOrdPartyId','','',0,0,'','10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-CPA005-V8','AP-PDS','','Bank Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Payment Record > Client Name > Position 135-164','Name related to bank','15','WOrdPartyName','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-CPA005-V8','AP-PDS','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Payment Record > CAD Financial Institution and Branch Transit > Position 44-52','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-CPA005-V8','AP-PDS','','Vendor bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Payment Record > Account Number > Position 53-64','Account Number related to vendor bank','9','AccountNum','','',0,0,1,'12',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CA-CPA005-V8','CA-CPA005-V8','FormatValidations','AP-PDS','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CA-CPA005-V8','CA-CPA005-V8','FormatValidations','AP-PDS','15','W04']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CA-CPA005-V8','CA-CPA005-V8','FormatValidations','AP-PDS','15','W02']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;


        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CA-CPA005-V8','TestFile','Test file (Y/N)']);

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-CPA005-V8','TestFile','Y','Y']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-CPA005-V8','TestFile','N','N']);

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('CA-CPA005-V8'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_CA_CPA005_V8();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_CA_CPA005_V8</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_CA_CPA005_V8()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-CPA005-V8','CA-CPA005-V8','ProcessingCenter','Processing Center',1,'ProcessingCenter','',1,'','99999','Processing Center']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-CPA005-V8','CA-CPA005-V8','TestFile','Test file (Y/N)',0,'TestFile','',0,'','','Test file (Y/N)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-CPA005-V8','CA-CPA005-V8','OriginAccntNum','Originator’s A/C Number',0,'OriginAccntNum','',0,'','XXXXXXXXXX','Originator’s A/C Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-CPA005-V8','CA-CPA005-V8','OriginShortName','Originators Short Name',1,'OriginShortName','',0,'','XXXXXXXXXXXXXXX','Originators Short Name']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('CA-CPA005-V8'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('ProcessingCenter', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('TestFile', gSKS_EFT_Bank.W02, true);
                }
                if(gSKS_EFT_Bank.W03)
                {
                    this.updateBankFields('OriginAccntNum', gSKS_EFT_Bank.W03);
                }
                if(gSKS_EFT_Bank.W04)
                {
                    this.updateBankFields('OriginShortName', gSKS_EFT_Bank.W04);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateARBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the direct debit bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateARBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('CA-CPA005-V8'):
                if(gSKS_EFTAR_Bank.W01)
                {
                    this.updateARBankFields('ProcessingCenter', gSKS_EFTAR_Bank.W01);
                }
                if(gSKS_EFTAR_Bank.W02)
                {
                    this.updateARBankFields('TestFile', gSKS_EFTAR_Bank.W02, true);
                }
                if(gSKS_EFTAR_Bank.W03)
                {
                    this.updateARBankFields('OriginAccntNum', gSKS_EFTAR_Bank.W03);
                }
                if(gSKS_EFTAR_Bank.W04)
                {
                    this.updateARBankFields('OriginShortName', gSKS_EFTAR_Bank.W04);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>