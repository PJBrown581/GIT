<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_CITICONNECT_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_CITICONNECT_XML extends SKS_PP_Format_XML
{


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>node_InitgPty</Name>
				<Source><![CDATA[
    protected XmlNode node_InitgPty(XmlNode _XmlNodel)
    {
        XmlNode locTempNode = _XmlNodel;
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locTempNode,
                    'InitgPty',
                    '',
                    0,
                    true);
                //Assign Child Nodes
                //this node has no children so there is no reason to catch the return
                this.node_Nm(locTempNode,gSKS_PP_Bank.PP01,30);
        return locTempNode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtTpInf</Name>
				<Source><![CDATA[
    protected XmlNode node_PmtTpInf(XmlNode _XmlNode)
    {
        XmlNode ret;
        //Determine correct lclInstrm/Prtry value
        if(strUpr(gBankAccountTable.CurrencyCode) == 'CAD')
        {
            if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
            {
                this.setLclInstrm_Prtry('CITI588');  // Void, CAD
            }
            else
            {
                this.setLclInstrm_Prtry('CITI587');  // Check, CAD
            }
        }
        else //(Assume American account)
        {
            if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
            {
                this.setLclInstrm_Prtry('CITI586'); // Void, USD
            }
            else
            {
                this.setLclInstrm_Prtry('CITI585');// Check, USD
            }
        }
        ret = super(_XmlNode);
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>