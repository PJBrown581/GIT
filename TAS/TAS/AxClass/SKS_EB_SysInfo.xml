<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EB_SysInfo</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_EB_SysInfo
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEFTFormats</Name>
				<Source><![CDATA[
    public static server RecIdCount getEFTFormats()
    {
        return SKS_EFT_FileFormat::getActiveOutboundFormatCount() + SKS_EFT_InboundFileFormat::getActiveInboundFormatCount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSKS_PP_Setup</Name>
				<Source><![CDATA[
    public static server SKS_PP_Setup getSKS_PP_Setup()
    {
        SKS_PP_Setup lSKS_PP_Setup;
        select lSKS_PP_Setup;

        return lSKS_PP_Setup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>labelReturn</Name>
				<Source><![CDATA[
    public static server str labelReturn(LabelType label)
    {
        return syslabel::labelId2String2(Label);
    }

]]></Source>
			</Method>
			<Method>
				<Name>RegisteredUsers</Name>
				<Source><![CDATA[
    public static server int RegisteredUsers()
    {
        SysUserLicenseCountView lSysUserLicenseCountView;
        int counter;

        select LicenseCount, ValidFrom, UserLicenseType from lSysUserLicenseCountView where
            lSysUserLicenseCountView.UserLicenseType == UserLicenseType::Enterprise;
        Counter = lSysUserLicenseCountView.LicenseCount;

        select LicenseCount, ValidFrom, UserLicenseType from lSysUserLicenseCountView where
             lSysUserLicenseCountView.UserLicenseType == UserLicenseType::Activity;
        Counter += lSysUserLicenseCountView.LicenseCount;

        return Counter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateUnlockKey</Name>
				<Source><![CDATA[
    public static server int validateUnlockKey(str _key, str _modules, int _eftFormats, str _module = '')
    {
        int ret;

        SKS_EB_SysInfo  SKS_EB_SysInfo = new SKS_EB_SysInfo();
        _key = conPeek(str2con(_key,':'),1);
        ret = SKS_EB_SysInfo.validateUnlockKeyReg(_key, _modules, _eftFormats, _module);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateUnlockKeyReg</Name>
				<Source><![CDATA[
    public server int validateUnlockKeyReg(str _key, str _modules, int _eftFormats, str _module = '')
    {
        int ret=1;

        str responseErrorText = SKS_PP_Sys::ValidateSKSCommonModel();
        if (responseErrorText != '')
        {
            throw error(responseErrorText);
        }

        EventHandlerResult result = new EventHandlerResult();
        this.validateKeyCommon(_module, _key, _modules, _eftFormats, true, result);
        ret = result.result();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExpirationDate</Name>
				<Source><![CDATA[
    public server date getExpirationDate(str _key)
    {
        date retval = dateNull();

        str responseErrorText = SKS_PP_Sys::ValidateSKSCommonModel();
        if (responseErrorText != '')
        {
            throw error(responseErrorText);
        }
        EventHandlerResult result = new EventHandlerResult();
        this.getExpirationDateCommon(_key, result);
        retval = result.result();

        return retval;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateKeyCommon</Name>
				<Source><![CDATA[
    delegate void validateKeyCommon(str _module, str _key, str _modules, int _eftFormats, boolean _client, EventHandlerResult _result){}

]]></Source>
			</Method>
			<Method>
				<Name>getExpirationDateCommon</Name>
				<Source><![CDATA[
    delegate void getExpirationDateCommon(str _key, EventHandlerResult _result){}

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>