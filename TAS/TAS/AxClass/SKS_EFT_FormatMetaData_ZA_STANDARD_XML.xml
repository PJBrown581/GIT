<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_ZA_STANDARD_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_ZA_STANDARD_XML extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_ZA_STANDARD_XML Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230313';
        dataContractVersion = '1.0';
        conFormatID = ['ZA-STANDARD-XML-NA', 'ZA-STANDARD-XML', 'ZA-STANDARD-XML-MZ'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'ZA - Standard Bank Group - XML - Namibia',0,'','','ZA-STANDARD-XML-NA',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'ZA-STANDARD-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,1,'','','','',0,'','','','',0,'ZA - Standard Bank Group - XML - Namibia',0,'','','ZA-STANDARD-XML',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'ZA-STANDARD-XML',1,1,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,1,1,'','','','',0,'','','','',0,'ZA - Standard Bank Group - XML - Mozambique',0,'','','ZA-STANDARD-XML-MZ',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'ZA-STANDARD-XML',1,1,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('ZA-STANDARD-XML-NA'):
                paymSpecList = this.getPaymSpecsMetaData_ZA_STANDARD_XML_NA();
                break;
            case ('ZA-STANDARD-XML'):
                paymSpecList = this.getPaymSpecsMetaData_ZA_STANDARD_XML();
                break;
            case ('ZA-STANDARD-XML-MZ'):
                paymSpecList = this.getPaymSpecsMetaData_ZA_STANDARD_XML_MZ();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_ZA_STANDARD_XML_NA</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_ZA_STANDARD_XML_NA()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Enhanced Credit Transfer',1,'ENCR','','ENCR','TRADE PAY',0,'ZA-STANDARD-XML-NA',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_ZA_STANDARD_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_ZA_STANDARD_XML()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Payments',1,'SSVS','','SSVS','TRADE PAY',0,'ZA-STANDARD-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Foreign Payments',1,'ICM','','ICM','TRADE PAY',0,'ZA-STANDARD-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_ZA_STANDARD_XML_MZ</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_ZA_STANDARD_XML_MZ()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Urgent',1,'DOM-URGP','','DOM-URGP','TRADE PAY',0,'ZA-STANDARD-XML-MZ',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,1,0,0,0,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Non-Urgent',1,'DOM-NURG','','DOM-NURG','TRADE PAY',0,'ZA-STANDARD-XML-MZ',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,1,0,0,0,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('ZA-STANDARD-XML-NA'):
                notesList = this.getNotesMetaData_ZA_STANDARD_XML_NA();
                break;

            case ('ZA-STANDARD-XML'):
                notesList = this.getNotesMetaData_ZA_STANDARD_XML_NA();
                break;

            case ('ZA-STANDARD-XML-MZ'):
                notesList = this.getNotesMetaData_ZA_STANDARD_XML_MZ();
                break;
        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_ZA_STANDARD_XML_NA</Name>
				<Source><![CDATA[
    private container getNotesMetaData_ZA_STANDARD_XML_NA()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['ZA-STANDARD-XML-NA','ENCR','-This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.:-Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_ZA_STANDARD_XML</Name>
				<Source><![CDATA[
    private container getNotesMetaData_ZA_STANDARD_XML()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['ZA-STANDARD-XML','SSVS','-This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.:-Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['ZA-STANDARD-XML','ICM','-This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.:-Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_ZA_STANDARD_XML_MZ</Name>
				<Source><![CDATA[
    private container getNotesMetaData_ZA_STANDARD_XML_MZ()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','-This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.:-Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','-This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.:-Vendor ebanking details > Payment specifications > Additional fields.::-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('ZA-STANDARD-XML-NA'):
                validationsList = this.getValidationsMetaData_ZA_STANDARD_XML_NA();
                break;

            case ('ZA-STANDARD-XML'):
                validationsList = this.getValidationsMetaData_ZA_STANDARD_XML();
                break;

            case ('ZA-STANDARD-XML-MZ'):
                validationsList = this.getValidationsMetaData_ZA_STANDARD_XML_MZ();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_ZA_STANDARD_XML</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_ZA_STANDARD_XML()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,'2',1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','0',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','0','2',1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','','0','2','','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to vendor','16','WIntBankId','','','0','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Country/Region ','TAS >x Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > Ctry ','Intermediary Bank Country','16','WIntBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','0',0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > Nm','Name related to Vendor Bank','16','WBenBankName','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to vendor bank','16','WBenBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','0','2',1,'35',0,0]);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyId','','',1,'2',1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','0',0,1,'13',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','0','2',1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','','0','2','','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to vendor','16','WIntBankId','','','0','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Country/Region ','TAS >x Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > Ctry ','Intermediary Bank Country','16','WIntBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','0',0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > Nm','Name related to Vendor Bank','16','WBenBankName','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to vendor bank','16','WBenBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','0','2',1,'34',0,0]);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Initiating Party Id','TAS > Set up > Bank account > Select CNP > Wire/IAT ordering party(Fast tab) > Initiating Party Id','GrpHdr > GrpHdr > InitgPty > Id > Othr > Id','Initiating Party Id','37','W01','','',1,'2',1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Batch Booking(Y/N)','TAS > Set up > Bank account > Select CNP > Wire/IAT ordering party(Fast tab) > Batch Booking','GrpHdr > GrpHdr > PmtInf > BtchBookg','Batch Booking','37','W02','','',1,'1',0,1,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Name','TAS > Set up > Bank account > Select CNP > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,'2',1,'30',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','0',0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','0','2',1,'8',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Swift number','TAS > Common > Customer eBanking details > Customer reimbursement> Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to Customer','35','WIntBankSwift','','','0','2','','11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Bank Id','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to Customer','35','WIntBankId','','','0','2',1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Country/Region ','TAS >x Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > Ctry ','Intermediary Bank Country','35','WIntBankCountryRegionId','','',1,1,'','',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer','1','RegistrationNum','','','0',0,1,'8',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > Nm','Name related to Customer Bank','35','WBenBankName','','',1,0,1,'140',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Country/Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to Customer bank','35','WBenBankCountryRegionId','','',1,1,'','',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','SSVS','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer','1','AccountNum','','','0','2',1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Initiating Party Id','TAS > Set up > Bank account > Select CNP > Wire/IAT ordering party(Fast tab) > Initiating Party Id','GrpHdr > GrpHdr > InitgPty > Id > Othr > Id','Initiating Party Id','37','W01','','',1,'2',1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Batch Booking(Y/N)','TAS > Set up > Bank account > Select CNP > Wire/IAT ordering party(Fast tab) > Batch Booking','GrpHdr > GrpHdr > PmtInf > BtchBookg','Batch Booking','37','W02','','',1,'2',0,1,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Name','TAS > Set up > Bank account > Select CNP > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,'2',1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Name','TAS > Set up > Bank account > Select CNP > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyId','','',1,'2',1,'30',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Country/Region','TAS > Set up > Bank account > Select CNP > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'','',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','0',0,1,'13',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','0','2',1,'8',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Swift number','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to Customer','35','WIntBankSwift','','','0','2','','11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Bank Id','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to Customer','35','WIntBankId','','','0','2',1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Country/Region ','TAS >x Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > Ctry ','Intermediary Bank Country','35','WIntBankCountryRegionId','','',1,1,'','',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer','1','RegistrationNum','','','0',0,1,'8',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > Nm','Name related to Customer Bank','35','WBenBankName','','',1,0,1,'140',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Country/Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to Customer bank','35','WBenBankCountryRegionId','','',1,1,'','',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer','1','BankIBAN','','','3','2',1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML','ICM','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer','1','AccountNum','','','0','2',1,'34',0,6]);


        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_ZA_STANDARD_XML_NA</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_ZA_STANDARD_XML_NA()
    {
        container   validationsList;
  
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,'2',1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Address related to bank','15','WOrdPartyAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > BldgNb','Address related to bank','15','WOrdPartyAddr2','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > CtrySubDvsn','Bank Country Sub Division','15','WOrdPartyState','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','','3','2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','','3','2','','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to vendor','16','WIntBankId','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Country/Region ','TAS >x Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > Ctry ','Intermediary Bank Country','16','WIntBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,0,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > Nm','Name related to Vendor Bank','16','WBenBankName','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to vendor bank','16','WBenBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > City','Vendor City','16','WBeneCity','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','State related to vendor','16','WBeneState','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/Region','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-NA','ENCR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3','2',1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_ZA_STANDARD_XML_MZ</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_ZA_STANDARD_XML_MZ()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,'0',1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','','1','0',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','1','0',1,'15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','0',0,1,'15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','0',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > Nm','Name related to Vendor Bank','16','WBenBankName','','',1,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to vendor bank','16','WBenBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'66',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3','0',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3','0',1,'35',0,0]);
  
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,'0',1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','1',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','','1','0',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','3','0',1,'15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','0',0,1,'15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','0',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > Nm','Name related to Vendor Bank','16','WBenBankName','','',1,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to vendor bank','16','WBenBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'66',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3','0',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3','0',1,'35',0,0]);

        //B2B
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',1,0,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',3,0,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Bank(offset account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number','PmtInf > DbtrAcct > Othr > Id','Account Number related to Bank(offset account)','24','AccountNum','','',3,0,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','1',0,'1','11',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Bank(offset account)Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank(offset account)','24','RegistrationNum','','','1','0',1,'15',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','',0,0,'0','11',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','26','RegistrationNum','','','0',0,1,'15',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Bank(account) Bank Name','Cash and bank management > Select bank account > edit > Address > Name','PmtInf > CdTrfTxInf > CdtrAgt > Nm','Name related to Bank(account) Bank Name','26','Name','','',1,0,1,'70',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Bank(account) Country','Cash and bank management > Select bank account > edit > Address > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to Bank(account) ','29','CountryRegionId','','',1,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,0,1,'66',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',3,0,1,'34',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',3,0,1,'35',0,'4','',0]);
        
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',1,0,1,'140',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',3,0,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Bank(offset account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number','PmtInf > DbtrAcct > Othr > Id','Account Number related to Bank(offset account)','24','AccountNum','','',3,0,1,'35',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',1,0,'1','11',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Bank(offset account)Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank(offset account)','24','RegistrationNum','','','1','0',1,'15',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','',0,0,'1','11',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','26','RegistrationNum','','','0',0,1,'15',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Bank(account) Bank Name','Cash and bank management > Select bank account > edit > Address > Name','PmtInf > CdTrfTxInf > CdtrAgt > Nm','Name related to Bank(account) Bank Name','26','Name','','',1,0,1,'70',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Bank(account) Country','Cash and bank management > Select bank account > edit > Address > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to Bank(account) ','29','CountryRegionId','','',1,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,0,1,'66',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',3,0,1,'34',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',3,0,1,'35',0,'4','',0]);

         
        //CNP
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',1,0,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','',3,0,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',3,0,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',1,0,'1','11',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','1','0',1,'15',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Customer Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','',0,0,'1','11',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Customer Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','1','RegistrationNum','','','0',0,1,'15',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Customer Bank Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Nm','Customer Bank Name','35','WBenBankName','','',1,0,1,'70',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Customer bank Country','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to Customer bank','35','WBenBankCountryRegionId','','',1,1,'',0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,0,1,'66',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Customer Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Customer','35','WBeneCountryRegionId','','',1,1,'',0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-NURG','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',3,0,1,'35',0,'6']);
     
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',1,0,1,'140',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','',3,0,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',3,0,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',1,0,'1','11',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','1','0',1,'15',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Customer Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','',0,0,'1','11',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Customer Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','1','RegistrationNum','','','0',0,1,'15',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Customer Bank Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Nm','Customer Bank Name','35','WBenBankName','','',1,0,1,'70',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Customer bank Country','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to Customer bank','35','WBenBankCountryRegionId','','',1,1,'',0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,0,1,'66',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Customer Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Customer','35','WBeneCountryRegionId','','',1,1,'',0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',3,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['ZA-STANDARD-XML-MZ','DOM-URGP','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',3,0,1,'35',0,'6']);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['ZA-STANDARD-XML','CddtrAcctType','Creditor Account Type']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['ZA-STANDARD-XML','InstrPrty','Instruction priority']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['ZA-STANDARD-XML','LclInstrm','Local Instrument']);

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['ZA-STANDARD-XML','Chrgbr','Charge Bearer']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['ZA-STANDARD-XML','ResStatus','Resident Status (1/2)']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['ZA-STANDARD-XML','Gender','Gender(M/F)']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['ZA-STANDARD-XML','CounterPartyBenType','SBSA(Y/N)']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['ZA-STANDARD-XML','XchgRateInf','Contract Number']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['ZA-STANDARD-XML','ENT','ENT']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['ZA-STANDARD-XML','BOPCategoryCd','BOP Category Codes']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['ZA-STANDARD-XML','CtgyPurp','Category Purpose']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['ZA-STANDARD-XML','InvoicePeriod','Invoice Period']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CddtrAcctType','Not Available',0]);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CddtrAcctType','Current account',1]);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CddtrAcctType','Savings account','2']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CddtrAcctType','Transmission account','3']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CddtrAcctType','Bond account','4']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CddtrAcctType','Subscription share account','6']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','InstrPrty','Normal payment','NORM']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','InstrPrty','Urgent payment','HIGH']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','LclInstrm','Available funds','AVAIL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','LclInstrm','Credit facility','CREDIT']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','Chrgbr','Borne by Creditor','CRED']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','Chrgbr','Borne by Debtor','DEBT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','Chrgbr','Shared','SHAR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','ResStatus','1','1']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','ResStatus','2','2']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','Gender','Male','M']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','Gender','Female','F']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CounterPartyBenType','SBSA','Y']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CounterPartyBenType','Non SBSA','N']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','XchgRateInf','SPOT','SPOT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','XchgRateInf','AGRD','AGRD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','ENT','Entity','E']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','ENT','Individual','I']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','ENT','Individual','I']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','BOPCategoryCd','104','104']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','BOPCategoryCd','241','241']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','BOPCategoryCd','271','271']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','BOPCategoryCd','102','102']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','BOPCategoryCd','288','288']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','BOPCategoryCd','231','231']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','BOPCategoryCd','289','289']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','BOPCategoryCd','ZZ1','ZZ1']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CtgyPurp','Salary','61']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CtgyPurp','Pension','62']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CtgyPurp','P.A.Y.E.','63']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CtgyPurp','Salary Deduction: Mortgage and Bond Repayment','64']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CtgyPurp','Salary Deduction: Insurance Premium','65']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CtgyPurp','Mortgage Bond Repayment','66']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CtgyPurp','Value Added Tax (VAT payment)','67']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CtgyPurp','Salary Deduction: Miscellaneous','69']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CtgyPurp','Annuity','70']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CtgyPurp','Dividend','71']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CtgyPurp','Interest','72']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CtgyPurp','Agents Commission','75']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CtgyPurp','Insurance Premium Refund','80']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CtgyPurp','Payment to Creditor','81']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CtgyPurp','Payment of Insurance Claims','82']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CtgyPurp','Medical Aid Refunds','83']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','CtgyPurp','Unit Trust Repurchase','86']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','InvoicePeriod','Invoice','Invoice']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','InvoicePeriod','Total','Total']);
        
        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('ZA-STANDARD-XML-NA'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_ZA_STANDARD_XML_NA();
                break;
            case ('ZA-STANDARD-XML'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_ZA_STANDARD_XML();
                break;
            case ('ZA-STANDARD-XML-MZ'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_ZA_STANDARD_XML_MZ();
                break;
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_ZA_STANDARD_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_ZA_STANDARD_XML()
    {
        container   paymSpecFieldsList;
 
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','ICM','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','SSVS','InstrPrty','Instruction priority',0,'InstrPrty','',0,'','','PmtInf > InstrPrty']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','SSVS','Purp','Purpose Code',1,'Purp','',0,'','XX','PmtInf > CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','ICM','ResStatus','Resident Status',0,'ResStatus','',1,'','','Cdtr > Id > PrvtId > Other > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','ICM','Gender','Gender',0,'Gender','',1,'','','Cdtr > Id > PrvtId > Other > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','ICM','CounterPartyBenType','Counter Party Beneficiary Type',0,'CounterPartyBenType','',1,'','','Cdtr > Id > PrvtId > Other > ScheNm']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','ICM','CustomsControlNumber','Customs Control Number',1,'CustomsControlNumber','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > InstrForCdtrAgt > InstrForCdtrAgt']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','ICM','XchgRateInf','Contract Number',0,'XchgRateInf','',1,'','','PmtInf > CdtTrfTxInf > XchgRateInf > RateTp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','ICM','XchgRateInfCtrctId','Contract Id',1,'XchgRateInfCtrctId','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > XchgRateInf > CtrctId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','ICM','ENT','ENT',0,'ENT','',1,'','','InstrForCdtrAgt']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','SSVS','InvoicePeriod','Invoice Period',0,'InvoicePeriod','',1,'','','RmtInf']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_ZA_STANDARD_XML_NA</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_ZA_STANDARD_XML_NA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML-NA','ENCR','CddtrAcctType','Creditor Account Type',0,'CddtrAcctType','Not Available',0,'','','PmtInf > CdtTrfTxInf > CddtrAcct > Tp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML-NA','ENCR','InstrPrty','Instruction priority',0,'InstrPrty','',0,'','','PmtInf > InstrPrty']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML-NA','ENCR','LclInstrm','Local Instrument',0,'LclInstrm','',0,'','','PmtInf > LclInstrm > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML-NA','ENCR','CtgyPurp','Category Purpose',1,'CtgyPurp','',0,'','XX','PmtInf > CtgyPurp > Prtry']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML-NA','ENCR','Chrgbr','Charge Bearer',0,'Chrgbr','Shared',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_ZA_STANDARD_XML_MZ</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_ZA_STANDARD_XML_MZ()
    {
        container   paymSpecFieldsList;
 
      
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML-MZ','DOM-URGP','CreditorId','Creditor Id',1,'CreditorId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > CdtTrfTxInf > Cdtr > Id > PrvtId > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML-MZ','DOM-URGP','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML-MZ','DOM-NURG','CreditorId','Creditor Id',1,'CreditorId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > CdtTrfTxInf > Cdtr > Id > PrvtId > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML-MZ','DOM-NURG','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        
        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','*','FormatValidations','*','16','WChargesIndic']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','*','FormatValidations','*','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','*','FormatValidations','*','15','W02']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','*','FormatValidations','*','15','W03']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','PaymSpecFields','SSVS','LclInstrm','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','PaymSpecFields','SSVS','ChrgBr','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','PaymSpecFields','SSVS','CddtrAcctType','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','PaymSpecFields','ICM','CddtrAcctType','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','PaymSpecFields','ICM','BOPCategoryCode','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','PaymSpecFields','ICM','BOPSubCategoryCode','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','PaymSpecFields','ICM','BOPCategory','']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','','CodeLookupValues','BOPCategoryCd','104-01','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','','CodeLookupValues','BOPCategoryCd','102-01','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','','CodeLookupValues','BOPCategoryCd','271-01','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','','CodeLookupValues','BOPSubCategoryCd','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','','CodeLookup','BOPSubCategoryCd','','']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','PaymSpecFields','ICM','BOPCategoryCd','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','PaymSpecFields','ICM','BOPSubCategoryCd','']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML-MZ','PaymSpec','SYNC','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML-MZ','PaymSpec','VALUEDATED','','']);

        return deleteList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['ZA-STANDARD-XML','BtchBookg','Batch Booking(Y/N)']);

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','BtchBookg','Y','Y']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['ZA-STANDARD-XML','BtchBookg','N','N']);       

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('ZA-STANDARD-XML-NA'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_ZA_STANDARD_XML_NA();
                break;

            case ('ZA-STANDARD-XML'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_ZA_STANDARD_XML();
                break;

            case ('ZA-STANDARD-XML-MZ'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_ZA_STANDARD_XML_MZ();
                break;
        }
        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_ZA_STANDARD_XML</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_ZA_STANDARD_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','InitgPtyId','Initiatingparty ID',1,'InitgPtyId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML','BtchBookg','Batch Booking (Y/N)',0,'BtchBookg','',0,'','','PmtInf > BtchBookg']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_ZA_STANDARD_XML_NA</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_ZA_STANDARD_XML_NA()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML-NA','InitgPtyId','Initiatingparty ID',1,'InitgPtyId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML-NA','BtchBookg','Batch Booking (Y/N)',0,'BtchBookg','',0,'','','PmtInf > BtchBookg']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML-NA','AltRmtInf','Alternative RmtInf',1,'AltRmtInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','Alternative RmtInf']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_ZA_STANDARD_XML_MZ</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_ZA_STANDARD_XML_MZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML-MZ','InitgPtyId','Initiatingparty ID',1,'InitgPtyId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['ZA-STANDARD-XML','ZA-STANDARD-XML-MZ','BtchBookg','Batch Booking (Y/N)',0,'BtchBookg','',0,'','','PmtInf > BtchBookg']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('ZA-STANDARD-XML-NA'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('InitgPtyId', gSKS_EFT_Bank.W01);
                }

                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('BtchBookg', gSKS_EFT_Bank.W02, true);
                }
                if(gSKS_EFT_Bank.W03)
                {
                    this.updateBankFields('AltRmtInf', gSKS_EFT_Bank.W03);
                }
                break;
            case ('ZA-STANDARD-XML'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('InitgPtyId', gSKS_EFT_Bank.W01);
                }

                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('BtchBookg', gSKS_EFT_Bank.W02, true);
                }
                break;
            case ('ZA-STANDARD-XML-MZ'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('InitgPtyId', gSKS_EFT_Bank.W01);
                }

                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('BtchBookg', gSKS_EFT_Bank.W02, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('ZA-STANDARD-XML-NA'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('ChrgBr', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>