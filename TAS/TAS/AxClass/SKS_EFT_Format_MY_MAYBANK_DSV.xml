<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_MY_MAYBANK_DSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_MY_MAYBANK_DSV
/// </summary>
class SKS_EFT_Format_MY_MAYBANK_DSV extends SKS_EFT_Format
{
    #define.FormatVersion('20230405')
    #define.Separator('|')
    #define.DOM_IG('DOM-IG')
    #define.DOM_IT('DOM-IT')
    #define.DOM_JP('DOM-JP')
    #define.INTL_TT('INTL-TT')

    int         recCount;
    AmountMST   totalAmount;
    str         bankCode, bankCodetext;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    /// <summary>
    /// formatStructure1    /// </summary>
    [SuppressBPWarningAttribute("BPCheckNestedLoopinCode","Necessary to allow the processing of every invoice(inner loop) for every relevant parent file detail record(outer loop)")]
    protected void formatStructure()
    {
        //Header Record
        this.rec_Header();

        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();
            
            //Detail Record
            this.rec_Detail();

            next mSKS_EFT_FileDetail;
        }
        //Footer Record
        this.rec_Footer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Header</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_Header
    /// </summary>
    /// <returns>true</returns>
    boolean rec_Header()
    {
        //---------------------------------------------------
        //No    Description                     Length
        //1     Record Type                     2
        //2     Corporate ID                    30
        //3     Client Batch ID                 30
        //4-28  Filler 1 - 25                   100
        //29    File Return Status              500
        //-------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str corpId;

        corpId = SKS_EFT_Format::getCodelookupvalue('CorporateID', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);

        //1     Record Type                     2
        sb.Append(this.wrapField('00'));

        //2     Corporate ID                    30
        sb.Append(this.wrapField(corpId, 30));

        //3     Client Batch ID                 30
        sb.Append(this.wrapField(SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr, 30)));

        //4-28  Filler 1 - 25                   100
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));

        //29    File Return Status              500
        sb.Append(this.wrapField('', 0, false));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Footer</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_Footer
    /// </summary>
    /// <returns>true</returns>
    boolean rec_Footer()
    {
        //---------------------------------------------------
        //No        Description                     Length
        //1         Record Type                     2
        //2         Total Count                     6
        //3         Total Debiting Amount           15
        //4         Hashing Value                   15
        //5 – 29        Filler 1 - 25               100
        //-------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        //1         Record Type                     2
        sb.Append(this.wrapField('99'));

        //2         Total Count                     6
        sb.Append(this.wrapField(num2str(recCount, 0, 0, 0, 0)));

        //3         Total Debiting Amount           15
        sb.Append(this.wrapField(num2str(this.getPositiveAmount(totalAmount), 0, 2, 1, 0)));

        //4         Hashing Value                   15
        sb.Append(this.wrapField(''));

        //5 – 29        Filler 1 - 25               100
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField('', 0, false));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Detail</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_Detail
    /// </summary>
    /// <returns>true</returns>
    boolean rec_Detail()
    {
        //---------------------------------------------------
        //No    Description                             Length
        //1     Record Type                                 2
        //2     Payment Mode:                               2
        //3     Provider Product Group Name                 50
        //4     Destination Country                         2
        //5     Value Date                                  8
        //6     Cheque Date                                 8
        //7     By Order Of                                 50
        //8     Customer Reference Number                   30
        //9     Debit Reference                             55
        //10    Debit Description                           55
        //11    Transaction Currency                        3
        //12    Transaction Amount                          15
        //13    In Debit Account Currency                   1
        //14    Debiting Currency                           3
        //15    Debiting Account Number                     20
        //16    Credit Account Number                       35
        //17    Favorite Beneficiary / Biller Code          15
        //18    Biller Organization                         10
        //19    Resident Indicator (Beneficiary)            1
        //20    Beneficiary Name 1                          40
        //21    Beneficiary Name 2                          40
        //22    Beneficiary Name 3                          40
        //23    Beneficiary Contact Number                  14
        //24    Beneficiary ID                              20
        //25    New ID No                                   20
        //26    Old ID No                                   20
        //27    Business Registration No                    20
        //28    Police/ Army ID/ Passport No                20
        //29    Bene Address 1                              30
        //30    Bene Address 2                              30
        //31    Bene Address 3                              30
        //32    Bene Country                                10
        //33    Bene State/Province                         10
        //34    Bene Prefecture                             10
        //35    Bene City                                   10
        //36    Bene ZIP/Postal Code                        10
        //37    Bene Bank Code                              11
        //38    Bene Bank Branch                            5
        //39    Bene Bank Name                              20
        //40    Bene Bank Address 1                         35
        //41    Bene Bank Address 2                         35
        //42    Bene Bank Address 3                         35
        //43    Other Codes                                 34
        //44    Other Codes Value                           33
        //45    Intermediary Bank Account No.               35
        //46    Intermediary Bank Code                      11
        //47    Intermediary Bank Name                      20
        //48    Intermediary Bank Address 1                 35
        //49    Intermediary Bank Address 2                 35
        //50    Intermediary Bank Address 3                 35
        //51    Intermediary Bank Other Codes               10
        //52    Intermediary Bank Other Codes Value         33
        //53    Delivery Method / Collection Method         2
        //54    Branch                                      5
        //55    Collector Name/ Company Name                80
        //56    Collector ID                                20
        //57    Attention                                   80
        //58    Delivery Address 1                          40
        //59    Delivery Address 2                          40
        //60    Delivery Address 3                          40
        //61    Delivery Country                            10
        //62    Delivery State/Province                     10
        //63    Delivery Prefecture                         10
        //64    Delivery City                               10
        //65    Delivery Zip/Postal Code                    10
        //66    FX Mode                                      1
        //67    Contract Number                             10
        //68    Rate                                        22
        //69    Dealer Name                                 35
        //70    Amount to Utilize                           15
        //95-101 Reference                                  30 Reference 1-7
        //102   Credit Reference/ Client Reference          55
        //103   Credit Description/ Payment Reference       55
        //104   Payment Details 1                           35
        //105   Payment Details 2                           35
        //106   Payment Details 3                           35
        //107   Payment Details 4                           35
        //108   Instruction to Bank 1                       35
        //109   Instruction to Bank 2                       35
        //110   Charges Borne By                            2
        //111   Purpose of Transfer                         6
        //112-137 Filler 1-26                               100
        //138   Beneficiary Citizenship                     100
        //139   Citizenship Country                         100
        //140   Remitter and Beneficiary Relationship       2
        //141- 142 Filler 30 - 31                           100
        //143   Purpose Description                         100
        //144   Filler 33                                   100
        //145   Beneficiary State/ Province Text Box        100
        //146   Beneficiary Prefecture Text Box             100
        //147   Beneficiary City/ District Text Box         100
        //148   Delivery State/ Province Text Box           100
        //149   Delivery Prefecture Text Box                100
        //150   Delivery City/ District Text Box            100
        //151   Purpose code/ Declaration of Purpose        100 (20)
        //152-160 Filler 41 - 49                            100
        //161   Joint Name                                  32
        //162   Joint New ID No                             20
        //163   Joint Old ID No                             20
        //164   Joint Business Reg. No.                     20
        //165   Joint Police/ Army ID/ Passport No.         20
        //166   Others Purpose of Transfer (35)/            100
        //167   Rentas Instruction to Bank (66)/            100
        //168   Segregation Account No (35)/                100
        //169-171 Filler 44 - 46                            100
        //172   Instruction to Bank 3                       35
        //173   Instruction to Bank 4                       35
        //174   Regulatory Information 1                    35
        //175   Regulatory Information 2                    35
        //176   Regulatory Information 3                    35
        //177   Child DC 1                                  50
        //178   Child DC 2                                  50
        //179   Child DC 3                                  50
        //180   Child DC 4                                  50
        //181   Child DC 5                                  50
        //182   Child DC 6                                  50
        //183   Child DC 7                                  50
        //(#)184 Guarantee OUR                              1
        //(#)185 UETR Number                                36
        //186   DuitNow ID Type                             2
        //187   DuitNow ID                                  20
        //188   Transaction Type                            2
        //189   Payment Ref 1                               140
        //190   Payment Ref 2                               140
        //191-329Filler 63 - 203                            100
        //330   Returned Status - Status of the transaction 100
        //331   Return File - Returned Reason               100
        //332   Return File – Cheque Number                 100
        //333   Return File - Cheque Status                 100
        //334   Return File - Return Status Date            100
        //335   Return File - Processing Date               100
        //336   Return File - Transaction Ref No OR Stop/Reject Reason 100
        //337   Transaction Return Status                   500
        //----------------------------------------------------

        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        recCount++;
        this.getBankPurposeCode();
        str FXMode =  SKS_EFT_Format::getCodelookupvalue('FXMode', mSKS_EFT_FileDetail.RecId);


        //1     Record Type                                 2
        sb.Append(this.wrapField('01'));

        //2     Payment Mode:                               2
        //3     Provider Product Group Name                 50
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #DOM_IG:
                sb.Append(this.wrapField('IG'));
                sb.Append(this.wrapField('Domestic Payments (MY)'));
                break;
            case #DOM_IT:
                sb.Append(this.wrapField('IT'));
                sb.Append(this.wrapField('Domestic Payments (MY)'));
                break;
            case #DOM_JP:
                sb.Append(this.wrapField('JP'));
                sb.Append(this.wrapField('JomPAY Bill Payment'));
                break;
            case #INTL_TT:
                sb.Append(this.wrapField('TT'));
                sb.Append(this.wrapField('International Payments (MY)'));
                break;
        }

        //4     Destination Country                         2
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #DOM_IG && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #DOM_IT)
        {
            sb.Append(this.wrapField(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId)));
        }
        else
        {
            sb.Append(this.wrapField(''));
        }
        //5     Value Date                                  8
        sb.Append(this.wrapField(date2str(mSKS_EFT_FileDetail.EffectiveDate, 123, DateDay::Digits2, DateSeparator::None,DateMonth::Digits2, DateSeparator::None, DateYear::Digits4)));

        //6     Cheque Date                                 8
        sb.Append(this.wrapField(''));

        //7     By Order Of                                 50
        sb.Append(this.wrapField(''));

        //8     Customer Reference Number                   30
        sb.Append(this.wrapField(SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 30)));

        //9     Debit Reference                             55
        sb.Append(this.wrapField(this.CharacterReplacement(strRem(mSKS_EFT_FileDetail_VendAddress.BeneName, "'")), 55));

        //10    Debit Description                           55
        sb.Append(this.wrapField(''));

        //11    Transaction Currency                        3
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.PaymentCurrencyCode));

        //12    Transaction Amount                          15
        sb.Append(this.wrapField(num2str(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur), 0, 2, 1, 0)));
        totalAmount += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;

        //13    In Debit Account Currency                   1
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DOM_IG || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DOM_IT || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTL_TT)
        {
            sb.Append(this.wrapField(this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InDebitAccCurrency', mSKS_EFT_FileDetail.RecId))));
        }
        else
        {
            sb.Append(this.wrapField(''));
        }

        //14    Debiting Currency                           3
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.CurrencyCode));

        //15    Debiting Account Number                     20
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.BankBankAcct, 20));

        //16    Credit Account Number                       35
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankAcct, 35));

        //17    Favorite Beneficiary / Biller Code          15
        sb.Append(this.wrapField(''));

        //18    Biller Organization                         10
        sb.Append(this.wrapField(''));

        //19    Resident Indicator (Beneficiary)            1
        sb.Append(this.wrapField(this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ResidentIndicator', mSKS_EFT_FileDetail.RecId))));

        //20    Beneficiary Name 1                          40
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName), 40));

        //21    Beneficiary Name 2                          40
        sb.Append(this.wrapField(''));

        //22    Beneficiary Name 3                          40
        sb.Append(this.wrapField(''));

        //23    Beneficiary Contact Number                  14
        sb.Append(this.wrapField(''));

        //24    Beneficiary ID                              20
        sb.Append(this.wrapField(''));

        //25    New ID No                                   20
        sb.Append(this.wrapField(''));

        //26    Old ID No                                   20
        sb.Append(this.wrapField(''));

        //27    Business Registration No                    20
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.VATNum));

        //28    Police/ Army ID/ Passport No                20
        sb.Append(this.wrapField(''));

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #DOM_IG && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #DOM_IT)
        {
            //29    Bene Address 1                              30
            sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr), 30));

            //30    Bene Address 2                              30
            sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr2), 30));

            //31    Bene Address 3                              30
            sb.Append(this.wrapField(''));

            //32    Bene Country                                10
            sb.Append(this.wrapField(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId), 10));

            //33    Bene State/Province                         10
            sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneState), 10));

            //34    Bene Prefecture                             10
            sb.Append(this.wrapField(''));

            //35    Bene City                                   10
            sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneCity), 10));

            //36    Bene ZIP/Postal Code                        10
            sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneZipPostal), 10));

            //37    Bene Bank Code                              11
            sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepSwiftNo, 11));

            //38    Bene Bank Branch                            5
            sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankBranch), 5));

            //39    Bene Bank Name                              20
            sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankName), 20));

            //40    Bene Bank Address 1                         35
            sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankAddr), 35));

            //41    Bene Bank Address 2                         35
            sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankCity), 35));

            //42    Bene Bank Address 3                         35
            sb.Append(this.wrapField(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId), 35));
        }
        else
        {
            //29    Bene Address 1                              30
            sb.Append(this.wrapField(''));

            //30    Bene Address 2                              30
            sb.Append(this.wrapField(''));

            //31    Bene Address 3                              30
            sb.Append(this.wrapField(''));

            //32    Bene Country                                10
            sb.Append(this.wrapField(''));

            //33    Bene State/Province                         10
            sb.Append(this.wrapField(''));

            //34    Bene Prefecture                             10
            sb.Append(this.wrapField(''));

            //35    Bene City                                   10
            sb.Append(this.wrapField(''));

            //36    Bene ZIP/Postal Code                        10
            sb.Append(this.wrapField(''));

            //37    Bene Bank Code                              11
            sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepSwiftNo, 11));

            //38    Bene Bank Branch                            5
            sb.Append(this.wrapField(''));

            //39    Bene Bank Name                              20
            sb.Append(this.wrapField(''));

            //40    Bene Bank Address 1                         35
            sb.Append(this.wrapField(''));

            //41    Bene Bank Address 2                         35
            sb.Append(this.wrapField(''));

            //42    Bene Bank Address 3                         35
            sb.Append(this.wrapField(''));
        }

        //43    Other Codes                                 34
        sb.Append(this.wrapField(''));

        //44    Other Codes Value                           33
        sb.Append(this.wrapField(''));

        //45    Intermediary Bank Account No.               35
        sb.Append(this.wrapField(''));

        //46    Intermediary Bank Code                      11
        sb.Append(this.wrapField(''));

        //47    Intermediary Bank Name                      20
        sb.Append(this.wrapField(''));

        //48    Intermediary Bank Address 1                 35
        sb.Append(this.wrapField(''));

        //49    Intermediary Bank Address 2                 35
        sb.Append(this.wrapField(''));

        //50    Intermediary Bank Address 3                 35
        sb.Append(this.wrapField(''));

        //51    Intermediary Bank Other Codes               10
        sb.Append(this.wrapField(''));

        //52    Intermediary Bank Other Codes Value         33
        sb.Append(this.wrapField(''));

        //53    Delivery Method / Collection Method         2
        sb.Append(this.wrapField(''));

        //54    Branch                                      5
        sb.Append(this.wrapField(''));

        //55    Collector Name/ Company Name                80
        sb.Append(this.wrapField(''));

        //56    Collector ID                                20
        sb.Append(this.wrapField(''));

        //57    Attention                                   80
        sb.Append(this.wrapField(''));

        //58    Delivery Address 1                          40
        sb.Append(this.wrapField(''));

        //59    Delivery Address 2                          40
        sb.Append(this.wrapField(''));

        //60    Delivery Address 3                          40
        sb.Append(this.wrapField(''));

        //61    Delivery Country                            10
        sb.Append(this.wrapField(''));

        //62    Delivery State/Province                     10
        sb.Append(this.wrapField(''));

        //63    Delivery Prefecture                         10
        sb.Append(this.wrapField(''));

        //64    Delivery City                               10
        sb.Append(this.wrapField(''));

        //65    Delivery Zip/Postal Code                    10
        sb.Append(this.wrapField(''));

        //66    FX Mode                                      
        if(mSKS_EFT_FileDetail.PaymSpec == #INTL_TT)//DevOps21221
        {
            sb.Append(this.wrapField(FXMode));
        }
        else
        {
            sb.Append(this.wrapField(''));
        }

        //67    Contract Number                             10
        sb.Append(this.wrapField(''));

        //68    Rate                                        22
        sb.Append(this.wrapField(''));

        //69    Dealer Name                                 35
        sb.Append(this.wrapField(''));

        //70    Amount to Utilize                           15
        sb.Append(this.wrapField(''));

        //71    Contract Number                             10
        sb.Append(this.wrapField(''));

        //72    Rate                                        22
        sb.Append(this.wrapField(''));

        //73    Dealer Name                                 35
        sb.Append(this.wrapField(''));

        //74    Amount to Utilize                           15
        sb.Append(this.wrapField(''));

        //75    Contract Number                             10
        sb.Append(this.wrapField(''));

        //76    Rate                                        22
        sb.Append(this.wrapField(''));

        //77    Dealer Name                                 35
        sb.Append(this.wrapField(''));

        //78    Amount to Utilize                           15
        sb.Append(this.wrapField(''));

        //79    Contract Number                             10
        sb.Append(this.wrapField(''));

        //80    Rate                                        22
        sb.Append(this.wrapField(''));

        //81    Dealer Name                                 35
        sb.Append(this.wrapField(''));

        //82    Amount to Utilize                           15
        sb.Append(this.wrapField(''));

        //83    Contract Number                             10
        sb.Append(this.wrapField(''));

        //84    Rate                                        22
        sb.Append(this.wrapField(''));

        //85    Dealer Name                                 35
        sb.Append(this.wrapField(''));

        //86    Amount to Utilize                           15
        sb.Append(this.wrapField(''));

        //87    Contract Number                             10
        sb.Append(this.wrapField(''));

        //88    Rate                                        22
        sb.Append(this.wrapField(''));

        //89    Dealer Name                                 35
        sb.Append(this.wrapField(''));

        //90    Amount to Utilize                           15
        sb.Append(this.wrapField(''));

        //91    Contract Number                             10
        sb.Append(this.wrapField(''));

        //92    Rate                                        22
        sb.Append(this.wrapField(''));

        //93    Dealer Name                                 35
        sb.Append(this.wrapField(''));

        //94    Amount to Utilize                           15
        sb.Append(this.wrapField(''));

        //95-101 Reference                                  30 Reference 1-7
        sb.Append(this.wrapField(''));

        //96    Reference                                  30
        sb.Append(this.wrapField(''));

        //97    Reference                                  30
        sb.Append(this.wrapField(''));

        //98    Reference                                  30
        sb.Append(this.wrapField(''));

        //99    Reference                                  30
        sb.Append(this.wrapField(''));

        //100    Reference                                  30
        sb.Append(this.wrapField(''));

        //101    Reference                                  30
        sb.Append(this.wrapField(''));

        //102   Credit Reference/ Client Reference          55
        sb.Append(this.wrapField(''));

        //103   Credit Description/ Payment Reference       55
        sb.Append(this.wrapField(''));

        //104   Payment Details 1                           35
        sb.Append(this.wrapField(''));

        //105   Payment Details 2                           35
        sb.Append(this.wrapField(''));

        //106   Payment Details 3                           35
        sb.Append(this.wrapField(''));

        //107   Payment Details 4                           35
        sb.Append(this.wrapField(''));

        //108   Instruction to Bank 1                       35
        sb.Append(this.wrapField(''));

        //109   Instruction to Bank 2                       35
        sb.Append(this.wrapField(''));

        //110   Charges Borne By                            2
        sb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('Charges', mSKS_EFT_FileDetail.RecId)));

        //111   Purpose of Transfer                         6
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTL_TT)
        {
            sb.Append(this.wrapField(bankCode, 6));
        }
        else
        {
            sb.Append(this.wrapField(''));
        }

        //112-137 Filler 1-26                               100
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));

        //138   Beneficiary Citizenship                     100
        //139   Citizenship Country                         100
        //140   Remitter and Beneficiary Relationship       2
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTL_TT)
        {
            sb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('BeneCitizenship', mSKS_EFT_FileDetail.RecId)));
            sb.Append(this.wrapField(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId)));
            sb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('RemitterBeneRelation', mSKS_EFT_FileDetail.RecId)));
        }
        else
        {
            sb.Append(this.wrapField(''));
            sb.Append(this.wrapField(''));
            sb.Append(this.wrapField(''));
        }


        //141- 142 Filler 30 - 31                           100
        sb.Append(this.wrapField(''));

        sb.Append(this.wrapField(''));

        //143   Purpose Description                         100
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTL_TT)
        {
            sb.Append(this.wrapField(bankCodetext, 100));
        }
        else
        {
            sb.Append(this.wrapField(''));
        }

        //144   Filler 33                                   100
        sb.Append(this.wrapField(''));

        //145   Beneficiary State/ Province Text Box        100
        sb.Append(this.wrapField(''));

        //146   Beneficiary Prefecture Text Box             100
        sb.Append(this.wrapField(''));

        //147   Beneficiary City/ District Text Box         100
        sb.Append(this.wrapField(''));

        //148   Delivery State/ Province Text Box           100
        sb.Append(this.wrapField(''));

        //149   Delivery Prefecture Text Box                100
        sb.Append(this.wrapField(''));

        //150   Delivery City/ District Text Box            100
        sb.Append(this.wrapField(''));

        //151   Purpose code/ Declaration of Purpose        100 (20)
        sb.Append(this.wrapField(''));

        //152-160 Filler 41 - 49                            100
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));

        //161   Joint Name                                  32
        sb.Append(this.wrapField(''));

        //162   Joint New ID No                             20
        sb.Append(this.wrapField(''));

        //163   Joint Old ID No                             20
        sb.Append(this.wrapField(''));

        //164   Joint Business Reg. No.                     20
        sb.Append(this.wrapField(''));

        //165   Joint Police/ Army ID/ Passport No.         20
        sb.Append(this.wrapField(''));

        //166   Others Purpose of Transfer (35)/            100
        sb.Append(this.wrapField(''));

        //167   Rentas Instruction to Bank (66)/            100
        sb.Append(this.wrapField(''));

        //168   Segregation Account No (35)/                100
        sb.Append(this.wrapField(''));

        //169-171 Filler 44 - 46                            100
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));

        //172   Instruction to Bank 3                       35
        sb.Append(this.wrapField(''));

        //173   Instruction to Bank 4                       35
        sb.Append(this.wrapField(''));

        //174   Regulatory Information 1                    35
        sb.Append(this.wrapField(''));

        //175   Regulatory Information 2                    35
        sb.Append(this.wrapField(''));

        //176   Regulatory Information 3                    35
        sb.Append(this.wrapField(''));

        //177   Child DC 1                                  50
        sb.Append(this.wrapField(''));

        //178   Child DC 2                                  50
        sb.Append(this.wrapField(''));

        //179   Child DC 3                                  50
        sb.Append(this.wrapField(''));

        //180   Child DC 4                                  50
        sb.Append(this.wrapField(''));

        //181   Child DC 5                                  50
        sb.Append(this.wrapField(''));

        //182   Child DC 6                                  50
        sb.Append(this.wrapField(''));

        //183   Child DC 7                                  50
        sb.Append(this.wrapField(''));

        //(#)184 Guarantee OUR                              1
        sb.Append(this.wrapField(''));

        //(#)185 UETR Number                                36
        sb.Append(this.wrapField(''));

        //186   DuitNow ID Type                             2
        sb.Append(this.wrapField(''));

        //187   DuitNow ID                                  20
        sb.Append(this.wrapField(''));

        //188   Transaction Type                            2
        sb.Append(this.wrapField(''));

        //189   Payment Ref 1                               140
        sb.Append(this.wrapField(''));

        //190   Payment Ref 2                               140
        sb.Append(this.wrapField(''));

        //191-329Filler 63 - 203                            100
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));
        sb.Append(this.wrapField(''));

        //330   Returned Status - Status of the transaction 100
        sb.Append(this.wrapField(''));

        //331   Return File - Returned Reason               100
        sb.Append(this.wrapField(''));

        //332   Return File – Cheque Number                 100
        sb.Append(this.wrapField(''));

        //333   Return File - Cheque Status                 100
        sb.Append(this.wrapField(''));

        //334   Return File - Return Status Date            100
        sb.Append(this.wrapField(''));

        //335   Return File - Processing Date               100
        sb.Append(this.wrapField(''));

        //336   Return File - Transaction Ref No OR Stop/Reject Reason 100
        sb.Append(this.wrapField(''));

        //337   Transaction Return Status                   500
        sb.Append(this.wrapField('', 0, false));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    /// <summary>
    /// wrapField
    /// </summary>
    /// <param name = "_field">_field</param>
    /// <param name = "_fieldLength">_fieldLength</param>
    /// <param name = "_addSeparator">_addSeparator</param>
    /// <returns>string</returns>
    private str wrapField(str _field = '',int  _fieldLength = 0, boolean _addSeparator = true)
    {
        str text;

        if(_fieldLength > 0)
        {
            text = subStr(_field, 1, _fieldLength);
        }
        else
        {
            text = _field;
        }
        if(_addSeparator)
        {
            text += #Separator;
        }
        return text;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankPurposeCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// getBankPurposeCode
    /// </summary>
    private void getBankPurposeCode()
    {
        msks_EFT_FileDetail_PaymentLine = sks_EFT_FileDetail_PaymentLine::find(mSKS_EFT_FileDetail.RecId);
    
        bankCode     = this.CharacterReplacement(msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeCode);
        bankCodeText = this.CharacterReplacement(msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeText);
    
        return;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
                join mSKS_EFT_FileDetail_VendAddress
                join mSKS_EFT_FileDetail_BenBank
                join mSKS_EFT_FileDetail_Intermediary
          order by mSKS_EFT_FileDetail.RecordSection,
                    mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail_VendAddress.RefRecId == mSKS_EFT_FileDetail.RecId &&
                mSKS_EFT_FileDetail_BenBank.RefRecId == mSKS_EFT_FileDetail.RecId &&
                mSKS_EFT_FileDetail_Intermediary.RefRecId == mSKS_EFT_FileDetail.RecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>