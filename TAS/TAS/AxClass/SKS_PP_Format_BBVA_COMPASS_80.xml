<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_BBVA_COMPASS_80</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_BBVA_COMPASS_80 extends SKS_PP_Format
{
    SKS_PP_Bank gSKS_PP_Bank;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        //  Field Start     Field End   Field Length    Field Desc
        //      1               3           3               Bank # R-justified, L-Zero Fill(PP01 Field)
        //      4               13          10              Acct # R-Justified, L-Zero Fill
        //      14              23          10              Chk  # R-Justified, L-Zero Fill
        //      24              33          10              Amt    R-Justified, L-Zero Fill, No Decimal
        //      34              39          6               Issue Date MMDDYY
        //      40              40          1               Void Flag (V)
        //      41              80          40              Space Fill
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        int locMult = 1;
        str locTransCode;
        ;
    
        if(gSKS_PP_Bank.BankAccountId != mSKS_PP_FileDetail.ChkBankAcct)
        {
            select BankAccountID, PP01, RecId
                from gSKS_PP_Bank
                where gSKS_PP_Bank.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;
        }
    
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            locTransCode = 'V';
            if(mSKS_PP_FileDetail.ChkCuryAmt < 0)
            {
                locMult = -1;
            }
        }
    
    
        //      1-3 Bank # R-justified, L-Zero Fill(PP01 Field)
        sb.Append(SKS_PP_StringFormats::strFill(3, gSKS_PP_Bank.PP01, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        //      4-13 Acct # R-Justified, L-Zero Fill
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_Fillside::Left));
        //      14-23 Chk  # R-Justified, L-Zero Fill
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_Fillside::Left));
        //      24-33 Amt R-Justified, L-Zero Fill, No Decimal
        sb.Append(SKS_PP_StringFormats::strMoney(locMult * mSKS_PP_FileDetail.ChkCuryAmt, 10));
        //      34-39 Issue Date MMDDYY
        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(mSKS_PP_FileDetail.ChkDocDate));
        //      40-40 Void Flag (V)
        sb.Append(SKS_PP_StringFormats::strFill(1, locTransCode, SKS_PP_FillCharacter::Space, SKS_PP_Fillside::Right));
        //      41-80 Space Fill
        sb.Append(SKS_PP_StringFormats::strFill(40,'', SKS_PP_FillCharacter::Space, SKS_PP_Fillside::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>