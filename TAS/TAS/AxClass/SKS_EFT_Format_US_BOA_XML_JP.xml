<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_BOA_XML_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_BOA_XML_JP extends SKS_EFT_Format_ISO_20022_001001003
/// </summary>
class SKS_EFT_Format_US_BOA_XML_JP extends SKS_EFT_Format_ISO_20022_001001003
{
    #define.FormatVersion('20230310')
    #define.PAYEFT('PAYEFT')
    #define.SWIFT('SWIFT')
    #define.PAYACH('PAYACH')
    #define.FED_WIRE('FED-WIRE')
    str purpCd;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceDescDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// getInvoiceDescDetails
    /// </summary>
    /// <returns>str</returns>
    private str getInvoiceDescDetails()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        str InvDesc;

        while select InvoiceTransactionTxt from invSKS_EFT_FileDetail
                            where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                            && invSKS_EFT_FileDetail.InvoiceTransactionTxt != ''
        {
            InvDesc += strFmt('%1, ', invSKS_EFT_FileDetail.InvoiceTransactionTxt);
        }
        InvDesc = subStr(InvDesc, 1, strLen(InvDesc)-2);
    
        return this.CharacterReplacement(InvDesc);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr</Name>
				<Source><![CDATA[
    protected void node_GrpHdr()
    {
        //------------------------------------------------------------------------------------------------------
        //  1.0: GrpHdr
        //      1.1: MsgId
        //      1.2: CreDtTm
        //      1.6: NbOfTxs
        //      1.7: CtrlSum
        //      1.8: InitgPty
        //          Nm
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeGrpHdr;
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;
    
        // Select count and sum for this file
        select COUNT(InvoiceOrigAmountCur), SUM(InvoiceSettleAmountPmtCur) from tmpSKS_EFT_FileDetail
            where
                tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary;
    
        //  1.0: GrpHdr
        nodeGrpHdr = nodeRoot.appendChild(xmlDoc.createElement('GrpHdr'));
    
        //      1.1: MsgId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'MsgId', SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr,35));
    
        //      1.2: CreDtTm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CreDtTm', DateTimeUtil::toStr(DateTimeUtil::utcNow()));
    
        //      1.3: Authstn
        this.node_GrpHdr_Authstn(nodeGrpHdr);
    
        //      1.6: NbOfTxs
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'NbOfTxs', num2str(tmpSKS_EFT_FileDetail.InvoiceOrigAmountCur,0,0,0,0));
    
        if(mSKS_EFT_FileDetail.PaymentCurrencyCode ==  'JPY')
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,0,0,0));
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0));      //SKS#DevOps:20150
        }
        //      1.8: InitgPty
        this.node_GrpHdr_InitgPty(nodeGrpHdr);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceDetails</Name>
				<Source><![CDATA[
    private str getInvoiceDetails()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        str invDetailsString;
    
        while select InvoiceNumber, InvoiceSettleAmountPmtCur, PaymentCurrencyCode from invSKS_EFT_FileDetail
            where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
               && invSKS_EFT_FileDetail.InvoiceNumber != ''
        {
            invDetailsString += strFmt('%1, %2 %3, ', invSKS_EFT_FileDetail.InvoiceNumber, num2str(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0), invSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
    
        invDetailsString = subStr(invDetailsString, 1, strLen(invDetailsString)-2);
    
        return this.CharacterReplacement(invDetailsString);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankPurposeText</Name>
				<Source><![CDATA[
    private str getBankPurposeText()
    {
        msks_EFT_FileDetail_PaymentLine = sks_EFT_FileDetail_PaymentLine::find(mSKS_EFT_FileDetail.RecId);
        purpCd = msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeCode;
        return this.CharacterReplacement(msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeText);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEncoding</Name>
				<Source><![CDATA[
    protected str getEncoding()
    {
        return 'utf-8';  //SKS#DevOps:16435
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        CompanyBankAccountId    prevBankAccountId;
        PaymMode                prevPaymMode;
        PaymSpec                prevPaymSpec;
        CurrencyCode            prevCurrency;
        SKS_EB_Date             prevEffectiveDate;

        xmlDoc = XmlDocument::newBlank(this.getEncoding());

        this.node_MessageRoot();

        this.node_GrpHdr();

        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AR)
            {
                // get SKS_EFT_CustomerPaym
                this.getSKS_EFT_CustomerPaym();
            }
            else
            {
                // Get SKS_EFT_VendorPaym
                this.getSKS_EFT_VendorPaym();
            }

            if(mBankAccountTable.AccountID != mSKS_EFT_FileDetail.BankAccountId)
            {
                if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AR)
                {
                    // get SKS_EFTAR_Bank
                    this.getSKS_EFTAR_Bank();
                }
                else
                {
                    // Get SKS_EFT_Bank
                    this.getSKS_EFT_Bank();
                }

                // Get Bank account
                mBankAccountTable = BankAccountTable::find(mSKS_EFT_FileDetail.BankAccountId);
            }


            if(prevBankAccountId != mSKS_EFT_FileDetail.BankAccountId ||
            prevPaymMode != mSKS_EFT_FileDetail.PaymMode ||
            prevPaymSpec != mSKS_EFT_FileDetail.PaymSpec ||
            prevCurrency != mSKS_EFT_FileDetail.PaymentCurrencyCode ||
            prevEffectiveDate != mSKS_EFT_FileDetail.EffectiveDate
            )
            {
                this.node_PmtInf();

                prevBankAccountId = mSKS_EFT_FileDetail.BankAccountId;
                prevPaymMode = mSKS_EFT_FileDetail.PaymMode;
                prevPaymSpec = mSKS_EFT_FileDetail.PaymSpec;
                prevCurrency = mSKS_EFT_FileDetail.PaymentCurrencyCode;
                prevEffectiveDate = mSKS_EFT_FileDetail.EffectiveDate;
            }

            if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AR)
            {
            //For AR
                this.node_DrctDbtTxInf();
            }
            else
            {
                // Get RemittanceAddress
                this.getRemittanceAddress((mSKS_EFT_FileFormatPaymSpec.UseCheckNumber || subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) == 'CHK'));

                //Get Addenda information
                this.setAddenda();

                //For AP
                this.node_CdtTrfTxInf();
            }

            next mSKS_EFT_FileDetail;
        }
        this.fileWrite(xmlDoc.toString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  Othr
        //                  Id
        //              Tp/Ptry
        //------------------------------------------------------------------------------------------------------
    
        XmlElement  nodeCdtrAcct;
        XmlElement  nodeCdtrAcctId;
        XmlElement  nodeCdtrAcctIdOthr;
        XmlElement  nodeCdtrAcctTp;
        int         ibanlen, acctNumlen;
        str         iban, acctNum, type;
        boolean     printIBAN;
        boolean     printName;
        boolean     printType;

        iban    =   mSKS_EFT_FileDetail.DepBankIBAN;
        acctNum =   mSKS_EFT_FileDetail.DepBankAcct;

        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'IN' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'ID' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'ZA' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'TH' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'VN' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'CN' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'AF' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'AM' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'AR' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'AU' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'AW' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BB' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BD' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BM' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BN' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BO' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BS' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BT' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BW' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BY' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BZ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'CA' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'CD' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'CL' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'CO' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'DJ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'DZ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'EG' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'ER' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'ET' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'FJ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'FK' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'GH' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'GM' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'GN' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'GY' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'HK' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'HN' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'HT' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'IQ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'JP' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'KE' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'KG' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'KH' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'KM' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'KY' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'LA' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'LK' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'LR' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'LS' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'LY' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'MM' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'MN' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'MO' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'MV' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'MX' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'MY' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'NA' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'NG' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'NI' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'NP' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'PA' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'PE' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'PG' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'PH' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'PY' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'RW' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'SB' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'SC' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'SG' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'SH' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'SL' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'SO' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'SP' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'SR' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'SZ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'TJ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'TO' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'TM' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'TT' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'TW' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'TZ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'UA' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'UG' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'US' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'UY' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'UZ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'VE' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'VU' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'WS' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'GQ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'AG' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'AI' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'DM' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'GD' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'KN' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'LC' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'MS' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'VC' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'YE' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'ZM')
        {
            printIBAN = true;
        }
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        acctNumlen = this.getCdtrAcctlength();
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }
                        break;
                    case #PAYACH:
                        iban = '';
                        acctNumlen = 8;
                        printType  = true;//SKS_DevOps_14988
                        break;
                    case #PAYEFT:
                    case #FED_WIRE:
                        iban = '';
                        acctNumlen = 34;
                        printType  = true;//SKS_DevOps_14988
                        break;
                }
                break;
        }
        if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::No ||
            subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK')
        {
            nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
            //              Id
            nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
            if(iban)
            {
                //                  IBAN
                nodeCdtrAcctId = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', iban, ibanlen);
            }
            else if(acctNum)
            {
                //                  Othr
                nodeCdtrAcctIdOthr = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));
                
                //                      Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctIdOthr, 'Id', acctNum, acctNumlen);
            }
            if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::SavingsAccount)
            {
                type = 'SVGS';
            }
            else
            {
                type = 'CACC';
            }
            if(printType && type)
            {
                //              Tp
                nodeCdtrAcctTp = nodeCdtrAcct.appendChild(xmlDoc.createElement('Tp'));
                
                //                  Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctTp, 'Cd', type);
            }

            if(printName)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcct, 'Nm', this.CharacterReplacement(mRemittanceName));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCdtrAcctlength</Name>
				<Source><![CDATA[
    private int getCdtrAcctlength()
    {
        int length;

        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IN' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ID' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ZA' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TH' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VN' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AF' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AM' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AU' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AW' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BB' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BD' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BM' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BN' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BO' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BS' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BT' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BW' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BY' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BZ' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CD' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CL' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CO' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DJ' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'EG' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ER' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ET' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'FJ' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'FK' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GH' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GM' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GN' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GY' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HN' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HT' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IQ' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'JP' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KE' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KG' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KH' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KM' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KY' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LA' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LK' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LR' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LS' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LY' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MN' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MO' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MV' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MY' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NA' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NI' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NP' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PA' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PG' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PH' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PY' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'RW' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SB' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SC' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SG' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SH' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SL' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SO' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SP' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SR' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SZ' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TJ' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TM' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TO' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TT' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TW' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TZ' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UA' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UG' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UY' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UZ' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VU' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'WS' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AG' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AI' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DM' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GD' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KN' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LC' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MS' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VC' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'YE' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ZM')
        {
            length = 31;
        }
        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HK')//SKS_VSTS_13935
        {
            length = 34;
        }
        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AR')
        {
            length = 24;
        }
        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DZ' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PE' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VE')
        {
            length = 20;
        }
        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MG' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CF' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CG' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CM' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GA' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TD')
        {
            length = 27;
        }
        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MM')
        {
            length = 30;
        }
        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MX')
        {
            length = 18;
        }
        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NG')
        {
            length = 10;
        }
        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GQ')
        {
            length = 23;
        }
        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BF' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BJ' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CI' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GW' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ML' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NE' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SN' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TG')
        {
            length = 28;
        }
        else
        {
            length = 34;
        }

        return length;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                  Nm
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement  nodeCdtrAgt;
        XmlElement  nodeFinInstnId;
        int         length = 0;
        str         swift, rtg;
        boolean     benCountry;
        boolean     printCdtrAgt = true;
        boolean     pstlAddr;
        boolean     printPstlAddr;

        swift   =   mSKS_EFT_FileDetail.DepSwiftNo;
        rtg     =   mSKS_EFT_FileDetail.DepBankTransit;

        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ID'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ZA' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SA' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TH' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VN' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AF' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AL' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AM' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AO' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AR' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AW' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AZ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BA' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BB' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BD' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BH' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BI' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BM' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BN' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BO' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BR' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BS' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BT' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BW' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BY' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BZ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CD' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CH' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LI' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CL' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CO' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CR' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CV' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CZ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DJ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DK' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DZ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'EG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ER' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ET' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'FJ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'FK' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GB' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GH' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GI' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GM' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GN' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GT' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GY' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HK' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HN' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HR' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HT' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HU' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IL' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IQ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IS' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'JO' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'JP' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KH' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KM' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KW' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KY' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LA' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LB' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LK' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LR' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LS' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LY' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MD' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MK' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MM' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MN' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MO' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MR' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MU' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MV' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MX' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MY' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MZ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NA' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NI' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NP' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PA' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PH' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PK' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PL' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PY' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'QA' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'RS' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'RW' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SB' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SC' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SH' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SL' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SO' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SP' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SR' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ST' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SZ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TJ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TM' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TN' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TO' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TR' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TT' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TW' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TZ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UA' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UY' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UZ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VU' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'WS' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CF' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CM' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GA' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GQ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TD' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AI' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DM' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GD' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KN' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LC' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MS' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VC' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BF' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BJ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CI' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GW' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ML' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SN' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NC' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PF' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'WF' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'YE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ZM')
        {
            bencountry = true;
        }
        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IN'   ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ID'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ZA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TH'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AF'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AL'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AU'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AW'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BB'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BD'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BH'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BI'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BS'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BT'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BW'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CD'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CH'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LI'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CL'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CV'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DJ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DK'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'EG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ER'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ET'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'FJ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'FK'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GB'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GH'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GI'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GT'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HK'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HT'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HU'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IL'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IQ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IS'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'JO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'JP'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KH'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KW'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LB'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LK'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LS'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MD'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MK'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MU'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MV'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MX'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NI'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NP'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PH'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PK'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PL'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'QA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'RS'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'RW'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SB'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SC'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SH'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SL'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SP'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ST'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TJ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TT'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TW'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VU'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'WS'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CF'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GQ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TD'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AI'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GD'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LC'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MS'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VC'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BF'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BJ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CI'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GW'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ML'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NC'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PF'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'WF'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'YE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ZM')
        {
            pstlAddr = true;
        }
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYACH:
                    case #FED_WIRE:
                        if(rtg)
                        {
                            swift = '';
                        }
                        printPstlAddr = true;
                        break;
                    case #SWIFT:
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        length = 11;
                        break;
                    case #PAYEFT:
                        length = 11;
                        printPstlAddr = true;
                        break;
                }
                break;
        }
        if(printCdtrAgt &&
          (mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::No || (subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK')))
        {
            //          2.77: CdtrAgt
            nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));
    
            //              FinInstnId
            nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));

            if(swift)
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', swift, length);
            }
            else if(rtg)
            {
                //                  ClrSysMmbId
                this.node_CdtTrfTxInf_CdtrAgt_MmbId(nodeFinInstnId);
            }

            //                  Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankName), 0, false);

            if(printPstlAddr)
            {
                //                  PstlAdr
                this.node_PstlAdr_Structured(nodeFinInstnId, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, '', '', '', 0, '', '');
            }
            else
            {
                //                  PstlAdr
                this.node_PstlAdr_Structured(nodeFinInstnId, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '', mSKS_EFT_FileDetail_BenBank.BenBankCity, 0, '', '');
            }
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PstlAdr</Name>
				<Source><![CDATA[
    //SKS_DevOps_15991,16042
    protected void node_PstlAdr(XmlElement _node,
                            AddressCountryRegionId _countryId,
                            SKS_EB_Address _address,
                            AddressZipCodeId _postalCode,
                            AddressCity _city,
                            int _length = 35,
                            SKS_EB_Address _address2 = '',
                            AddressCountryRegionName  _state = '',
                            boolean isStructured = false)
    {
        //------------------------------------------------------------------------------------------------------
        //          PstlAdr
        //              Ctry
        //              AdrLine
        //              AdrLine
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePstlAdr;
        AddressCountryRegionISOCode countryRegion;
        boolean printBldgNb = true;
        boolean printAddrLine;

        countryRegion = this.getLogisticsAddressCountryISO(_countryId);

        if(!isStructured)
        {
            if(countryRegion || _address || _postalCode || _city)
            {
                //      PstlAdr
                nodePstlAdr = _node.appendChild(xmlDoc.createElement('PstlAdr'));

                //          Ctry
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', countryRegion, 2, false);

                //          AdrLine
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', _address, _length, false);

                //          AdrLine
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', strLTrim(_postalCode + ' ' + _city), _length, false);
            }
        }
        else
        {
            switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
            {
                case #PAYEFT:
                case #PAYACH:
                case #SWIFT:
                    printBldgNb     = false;
                    printAddrLine   = true;
                    break;
            }
            //      PstlAdr
            nodePstlAdr = _node.appendChild(xmlDoc.createElement('PstlAdr'));

            //          StrtNm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'StrtNm', _address, 70, false);

            if(printBldgNb)
            {
                // BldgNb
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'BldgNb', _address2, 16, false);
            }

            //          PstCd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'PstCd', _postalCode, 16, false);

            //          TwnNm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', _city, 35, false);

            //          CtrySubDvsn
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'CtrySubDvsn', _state, 35, false);

            //          Ctry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', countryRegion, 2, false);

            if(printAddrLine)
            {
                // AdrLine
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', _address2, 70, false); //SKS_DevOps_16002
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt_MmbId</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_CdtTrfTxInf_CdtrAgt_MmbId
    /// </summary>
    /// <param name = "_nodeFinInstnId">_nodeFinInstnId</param>
    protected void node_CdtTrfTxInf_CdtrAgt_MmbId(XmlElement _nodeFinInstnId)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.77: CdtrAgent
        //          MmbId
        //------------------------------------------------------------------------------------------------------
        XmlElement  nodeClrSysMmbId;
        XmlElement  nodeClrSysId;
        int         length;
        str         rtg, cd;
        boolean     printClrsysId = true;

        rtg = mSKS_EFT_FileDetail.DepBankTransit;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }
                        printClrsysId   = false;
                        break;
                    case #PAYEFT:
                    case #PAYACH:
                        length          = 7;
                        printClrsysId   = false;
                        break;
                    case #FED_WIRE:
                        length  =   9;
                        break;
                }
                break;
        }

        if(mSKS_EFT_FileDetail.DepBankTransit != '')
        {
            nodeClrSysMmbId = _nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

            if(printClrsysId)
            {
                nodeClrSysId = nodeClrSysMmbId.appendChild(xmlDoc.createElement('ClrSysId'));
                if(cd)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', cd);             //SKS_VSTS_13350
                }
                else
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', 'USABA');
                }
            }
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, length);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChrgBr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.51: ChrgBr
        //------------------------------------------------------------------------------------------------------
    
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'ChrgBr', SKS_EFT_Format::getCodelookupvalue('ChrgBr',mSKS_EFT_FileDetail.RecId), 0, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_InstrForCdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_InstrForCdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.82: InstrForCdtrAgt
        //              InstrInf
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeInstrForCdtrAgt;
        str     bocrpk, bcci;
        str     instrInfo;
        boolean instrInformation;

        bocrpk      = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BOCRPK', mSKS_EFT_FileDetail.RecId));
        bcci        = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BCCI', mSKS_EFT_FileDetail.RecId));

        instrInfo = msKS_EFT_FileDetail_Instructions.BankInst1;
    
        if(instrInfo != '')
        {
            instrInfo += ' ';
        }
    
        instrInfo += msKS_EFT_FileDetail_Instructions.BankInst2;
    
        if(instrInfo != '')
        {
            instrInfo += ' ';
        }
    
        instrInfo += msKS_EFT_FileDetail_Instructions.BankInst3;
    
        if(instrInfo != '')
        {
            instrInfo += ' ';
        }
    
        instrInfo += msKS_EFT_FileDetail_Instructions.BankInst4;
    
        if(instrInfo != '')
        {
            instrInfo += ' ';
        }
    
        instrInfo += msKS_EFT_FileDetail_Instructions.BankInst5;
    
        if(instrInfo != '')
        {
            instrInfo += ' ';
        }
    
        instrInfo += msKS_EFT_FileDetail_Instructions.BankInst6;

        
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML-JP':
                instrInformation = true;//SKS_VSTS_13835
                instrInfo = this.getBankPurposeText();//SKS_VSTS_13835
                
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:        //SKS#DevOps:18030
                    case #FED_WIRE ://SKS_VSTS_14298
                        instrInfo = '/ACC/NNKNI';
                        break;
                    default:
                        instrInfo = '/ACC/NNKNI';
                        break;
                }
                break;
        }

        if(instrInfo)               //SKG#VSTS:8782
        {
            //          2.82: InstrForCdtrAgt
            nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));
            
            if(instrInfo && instrInformation)
            {
                //              InstrInf
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', this.CharacterReplacement(instrInfo), 140);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt1</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_IntrmyAgt1(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.71: IntrmyAgt1
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement  nodeIntrmyAgt1;
        XmlElement  nodeFinInstnId;
        XmlElement  nodeClrSysMmbId;
        boolean     printIntrmyAgt = true;
        str         intSwift;
        str         intBankId;
        
        intSwift   =    mSKS_EFT_FileDetail_Intermediary.IntBankSwift;
        intBankId  =    mSKS_EFT_FileDetail_Intermediary.IntBankId;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                        printIntrmyAgt = false;
                        break;
                }
                break;
            
        }
        if((intSwift || intBankId)  && printIntrmyAgt)
        {
            //          2.71: IntrmyAgt1
            nodeIntrmyAgt1 = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt1'));
    
            //              FinInstnId
            nodeFinInstnId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(intSwift)
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', intSwift, 0, false);
            }
            else if(intBankId)
            {
                //                  ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', intBankId, 35, false);
            }
            //                  Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankName), 140, false);
    
            //                  PstlAdr
            this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId, '', '', '');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
    
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML-JP':
                this.node_CdtTrfTxInf_RmtInf_Ustrd(_nodeCdtTrfTxInf);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RgltryRptg</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_CdtTrfTxInf_RgltryRptg
    /// </summary>
    /// <param name = "_nodeCdtTrfTxInf">_nodeCdtTrfTxInf</param>
    protected void node_CdtTrfTxInf_RgltryRptg(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.89: RgltryRptg
        //              Dtls
        //                  Inf
        //------------------------------------------------------------------------------------------------------

        XmlElement nodeRgltryRptg;
        XmlElement nodeDtls;
        str PurpCode,purpPaymentCode;
        str POPCode, nameOfGoods, countryOfOrigin, regionOfShipment, riskRegion;
        str bankCodeInf,bankCodeTextTp;
        bankCodeInf = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Inf', mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookup));//DevOps20658
        bankCodeTextTp = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Tp', mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookup));

        PurpCode = this.getBankPurposeText();
        switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
        {
            case 'PAYEFT':
                nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRgltryRptg, 'DbtCdtRptgInd', 'DEBT');

                nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Tp', 'PaymentTypeCode');  //SKS#DevOps:16435

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', 'NTR');

                nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));
                if(bankCodeTextTp)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Tp', bankCodeTextTp, 35);
                }

                if(bankCodeInf)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', bankCodeInf, 35);
                }
                break;
            case 'SWIFT':
                nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRgltryRptg, 'DbtCdtRptgInd', 'DEBT');

                nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Tp', 'PaymentTypeCode');  //SKS#DevOps:17990

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', 'TRA');

                POPCode = this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('POPCode', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId));

                if(POPCode)
                {
                    nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Tp', 'PurposeOfPayment');  //SKS#DevOps:17990

                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', POPCode);
                }

                nameOfGoods = this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('NameOfGoods', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId));

                if(nameOfGoods)
                {
                    nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Tp', 'NameOfGoods');  //SKS#DevOps:17990

                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', nameOfGoods, 20);
                }
                countryOfOrigin  = this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('CountryOfOrigin', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId));

                if(countryOfOrigin)
                {
                    nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Tp', 'PlaceOfOrigin');  //SKS#DevOps:17990

                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', countryOfOrigin, 2);
                }

                regionOfShipment  = this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('RegionOfShipment', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId));

                if(regionOfShipment)
                {
                    nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Tp', 'RegionOfShipment');  //SKS#DevOps:17990

                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', regionOfShipment, 20);
                }
                riskRegion  = this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('RiskRegion', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId));

                if(riskRegion)
                {
                    nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Tp', 'RiskRegion');  //SKS#DevOps:17990

                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', riskRegion, 11);
                }
                break;
            case 'SWT-NONTRA':
                nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRgltryRptg, 'DbtCdtRptgInd', 'DEBT');

                nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Tp', 'PaymentTypeCode');  //SKS#DevOps:17990

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', 'NTR');

                purpPaymentCode = this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('PurpPaymentCode', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId));

                if(purpPaymentCode)
                {
                    nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Tp', 'PurposeOfPayment');  //SKS#DevOps:17990

                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', purpPaymentCode);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_Ustrd</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf_Ustrd(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
        XmlElement  nodeRmtInf;
        str invDetailsString;
        
        invDetailsString = this.getInvoiceDetails();
        str InvDesc = this.getInvoiceDescDetails();

        str customerID = SKS_PP_Setup::find().RegCustomerID;

        //          2.98: RmtInf
        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML-JP':

                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #PAYEFT:
                    case #SWIFT:
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140);

                        if(customerID == '23eb04')//DevOps21416
                        {
                            if(InvDesc)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', InvDesc, 140, false);
                            }
                        }
                        break;
                    default:
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'NNKNI' + invDetailsString, 140);//SKS_VSTS_13835
                        break;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_Id</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty_Id(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          9.1.12: Id
        //              9.1.13: OrgId
        //                  9.1.15: Othr
        //                      9.1.1.16: Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOther;
        XmlElement nodeSchmeNm;
        str         initgPtyId;
        boolean     printinitgPtyId = true;
        boolean     printSchmeNm = true;
    
        initgPtyId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InitgPtyId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        
        if(initgPtyId)
        {
            //          9.1.12: Id
            nodeId = _nodeInitgPty.appendChild(xmlDoc.createElement('Id'));
    
            //              9.1.13: OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            //                  9.1.15: Other
            nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
            if(printinitgPtyId)
            {
                //                      9.1.1.16: Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', initgPtyId, 35);
            }
    
            if(printSchmeNm)
            {
                //                      9.1.17: SchmeNm
                nodeSchmeNm = nodeOther.appendChild(xmlDoc.createElement('SchmeNm'));
    
                //                          9.1.18: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', 'CUST');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
    
        this.node_PstlAdr_Structured(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity, 0, mRemittanceAdrline2, mRemittanceState);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Amt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Amt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.42: Amt
        //              2.43: InstdAmt
        //------------------------------------------------------------------------------------------------------
        XmlElement currentElement;
        XmlElement nodeAmt;

        //          2.42: Amt
        nodeAmt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Amt'));
            
        //              2.43: InstdAmt
        if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'JPY')
        {
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAmt, 'InstdAmt',
            num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,0,0,0));
        }
        else
        {
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAmt, 'InstdAmt',
            num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0));                         //SKS#DevOps:20150
        }
        SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', mSKS_EFT_FileDetail.PaymentCurrencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_PstlAdr(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
    
        this.node_PstlAdr(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity, 0, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2, mSKS_EFT_FileDetail_BankAccount.WOrdPartyState, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: DbtrAcct
        //          Id
        //              IBAN
        //              Othr
        //                  Id
        //          Tp
        //              Cd
        //          Ccy
        //------------------------------------------------------------------------------------------------------
        XmlElement  nodeDbtrAcct;
        XmlElement  nodeDbtrAcctId;
        XmlElement  nodeOthr;
        str         iban, acctNum;
        int         lengthAcctNum = 34;
    
        iban    = mSKS_EFT_FileDetail.BankBankIBAN;
        acctNum = mSKS_EFT_FileDetail.BankBankAcct;

        if(iban || acctNum)
        {
            //      2.20: DbtrAcct
            nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
            //          Id
            nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
    
            if(iban)
            {
                //              IBAN
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN', iban);
            }
            else if(acctNum)
            {
                //          Othr
                nodeOthr = nodeDbtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
                //              Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', acctNum, lengthAcctNum);//SKS_VSTS_13935
            }
            //          Ccy
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcct, 'Ccy', mSKS_EFT_FileDetail.CurrencyCode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.21: DbtrAgt
        //          FinInstnId
        //              BIC
        //              ClrSysMmbId
        //                  MmbId
        //              PstlAdr
        //                  Ctry
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeBrnchId;
        int     length;
        str     swift, rtg, branchId;//SKS_VSTS_14085
        boolean printBrnchId;

        swift   = mSKS_EFT_FileDetail.BankBankSwiftNo;
        rtg     = mSKS_EFT_FileDetail.BankBankTransit;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #PAYEFT:
            case #SWIFT:
            case #PAYACH:
                printBrnchId = true;
                if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyId)//SKS_VSTS_14085
                {
                    branchId = mSKS_EFT_FileDetail_BankAccount.WOrdPartyId;
                }
                break;
        }
        
        //      2.21: DbtrAgt
        nodeDbtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAgt'));
    
        //          FinInstnId
        nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
        if(swift  &&
           rtg  &&
           mSKS_EFT_FileDetail.CurrencyCode != 'USD')
        {
            //              BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC',swift, length);
        }
        else
        {
            this.node_PmtInf_DdtrAgt_MmbId(nodeFinInstnId);
        }
        
        select msks_EFT_FileDetail_BankAddress where
                msks_EFT_FileDetail_BankAddress.RefRecId == mSKS_EFT_FileDetail.RecID
                && msks_EFT_FileDetail_BankAddress.AddressType == SKS_EFT_AddressType::BankAddress;

        
        //                  Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(LogisticsLocation::find(msks_EFT_FileDetail_BankAddress.Location).Description), 140, false);//SKS_VSTS_14068
        
        this.node_PstlAdr_Structured(nodeFinInstnId, msks_EFT_FileDetail_BankAddress.CountryRegionId, msks_EFT_FileDetail_BankAddress.Addr, msks_EFT_FileDetail_BankAddress.ZipCode, msks_EFT_FileDetail_BankAddress.City, 0, msks_EFT_FileDetail_BankAddress.Addr2, msks_EFT_FileDetail_BankAddress.State);        //SKS_VSTS_14068
        
        
        if(branchId && printBrnchId)//SKS_VSTS_14085
        {
            //                  BrnchId
            nodeBrnchId = nodeDbtrAgt.appendChild(xmlDoc.createElement('BrnchId'));

            //                      Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBrnchId, 'Id', branchId, 4);//SKS_VSTS_14085
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DdtrAgt_MmbId</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_PmtInf_DdtrAgt_MmbId
    /// </summary>
    /// <param name = "_nodeFinInstnId">_nodeFinInstnId</param>
    protected void node_PmtInf_DdtrAgt_MmbId(XmlElement _nodeFinInstnId)
    {
        XmlElement  nodeClrSysMmBId;
        BankRegNum  routingNumber;
        int         length;
        
        routingNumber = mSKS_EFT_FileDetail.BankBankTransit;
        length        = 35;

        if(routingNumber)
        {
            //              ClrSysMmbId
            nodeClrSysMmBId = _nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
            //                  MmbId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmBId, 'MmbId', routingNumber, length, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.6: PmtTpInf
        //          2.7: InstrPrty
        //          2.8: SvcLvl
        //          2.11: LclInstrm
        //          2.14: CtgyPurp
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePmftTpInf;
    
        if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::No && subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK')
        {
            //      2.6: PmtTpInf
            nodePmftTpInf = _nodePmtInf.appendChild(xmlDoc.createElement('PmtTpInf'));
    
            //          2.7: InstrPrty
            this.node_PmtInf_PmtTpInf_InstrPrty(nodePmftTpInf);
    
            //          2.8: SvcLvl
            this.node_PmtInf_PmtTpInf_SvcLvl(nodePmftTpInf);
    
            //          2.11: LclInstrm
            this.node_PmtInf_PmtTpInf_LclInstrm(nodePmftTpInf);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl_Cd</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl_Cd(XmlElement _nodeSvcLvl)
    {
        //------------------------------------------------------------------------------------------------------
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
        str value;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                    case #PAYEFT:
                    case #FED_WIRE:
                        value = 'URGP';
                        break;
                    case #PAYACH:
                        value = 'NURG';
                        break;
                }
                break;
        }
    
        //              2.9: Cd
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Cd', value, 0, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty(XmlElement _nodeGrpHdr)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          Nm
        //          Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeInitgPty;
    
    
        //      1.8: InitgPty
        nodeInitgPty = _nodeGrpHdr.appendChild(xmlDoc.createElement('InitgPty'));
    
        //          Nm
        this.node_GrpHdr_InitgPty_Nm(nodeInitgPty);
        
        //          PstlAdr
        this.node_GrpHdr_InitgPty_PstlAdr(nodeInitgPty);
    
        //          Id
        this.node_GrpHdr_InitgPty_Id(nodeInitgPty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_PstlAdr</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_GrpHdr_InitgPty_PstlAdr
    /// </summary>
    /// <param name = "_nodeInitgPty">_nodeInitgPty</param>
    protected void node_GrpHdr_InitgPty_PstlAdr(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          Nm
        //------------------------------------------------------------------------------------------------------
        LogisticsPostalAddress  postalAddress;
        XmlElement              nodePstlAdr;
    
        postalAddress = this.findPostalAddressLineByPartyLocationRole(CompanyInfo::current(), 'APEFT');
    
        if(postalAddress)
        {
            //      PstlAdr
            nodePstlAdr = _nodeInitgPty.appendChild(xmlDoc.createElement('PstlAdr'));

            //          PstCd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrTp', 'ADDR');
    
            //          PstCd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'PstCd', this.CharacterReplacement(postalAddress.ZipCode), 16, false);
    
            //          TwnNm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', this.CharacterReplacement(postalAddress.City), 35, false);
    
            //          Ctry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', this.getLogisticsAddressCountryISO(postalAddress.CountryRegionId), 2, false);
    
            //          AdrLine
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(postalAddress.Street), 35, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf()
    {
        //------------------------------------------------------------------------------------------------------
        //  2.0: PmtInf
        //      2.1: PmtInfId
        //      2.2: PmtMtd
        //      2.4: NbOfTxs
        //      2.5: CtrlSum
        //      2.6: PmtTpInf
        //      2.17: ReqdExctnDt
        //      2.19: Dbtr
        //      2.20: DbtrAcct
        //      2.21: DbtrAgt
        //      2.24 ChrgBr
        //------------------------------------------------------------------------------------------------------
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;

        batchCount++;

        // Select count and sum for this bank account
        select COUNT(InvoiceOrigAmountCur), SUM(InvoiceSettleAmountPmtCur) from tmpSKS_EFT_FileDetail
        where
            tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
            tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
            tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
            tmpSKS_EFT_FileDetail.BankAccountId == mSKS_EFT_FileDetail.BankAccountId &&
            tmpSKS_EFT_FileDetail.EffectiveDate == mSKS_EFT_FileDetail.EffectiveDate &&
            tmpSKS_EFT_FileDetail.PaymMode == mSKS_EFT_FileDetail.PaymMode &&
            tmpSKS_EFT_FileDetail.PaymSpec == mSKS_EFT_FileDetail.PaymSpec &&
            tmpSKS_EFT_FileDetail.PaymentCurrencyCode == mSKS_EFT_FileDetail.PaymentCurrencyCode;


        //  2.0: PmtInf
        nodePmtInf = nodeRoot.appendChild(xmlDoc.createElement('PmtInf'));

        //      2.1: PmtInfId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtInfId', SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr + '-' + int2str(batchCount),35));

        //      2.2: PmtMtd
        if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AR)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'DD');
        }
        else if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::Yes ||
            subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) == 'CHK')
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'CHK');
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'TRF');
        }

        //      2.3: BtchBookg
        this.node_PmtInf_BtchBookg(nodePmtInf);

        //      2.4: NbOfTxs
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'NbOfTxs', num2str(tmpSKS_EFT_FileDetail.InvoiceOrigAmountCur,0,0,0,0));

        //      2.5: CtrlSum
        if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'JPY')
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,0,0,0));
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0));       //SKS#DevOps:20150
        }


        //      2.6: PmtTpInf
        this.node_PmtInf_PmtTpInf(nodePmtInf);

        if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AR)
        {
            //      2.18: ReqdColltnDt
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'ReqdColltnDt', SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate, DateSeparator::Hyphen));
        }
        else
        {
            //      2.17: ReqdExctnDt
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'ReqdExctnDt', SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate, DateSeparator::Hyphen));
        }

        if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AP)
        {
            this.node_PmtInf_DbtrNodes(nodePmtInf);
        }
        else
        {
            this.node_PmtInf_CdtrNodes(nodePmtInf);
        }

        //      2.24 ChrgBr
        this.node_PmtInf_ChrgBr(nodePmtInf);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Nm</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Nm(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          Nm
        //------------------------------------------------------------------------------------------------------
        int length;
    
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #FED_WIRE:
                        length = 35;
                        break;
                    default:
                        length = 70;
                        break;
                }
                break;
        }

        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeDbtr, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName), length, false);
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_PmtId</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_PmtId(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.28: PmtId
        //              2.30: EndToEndId
        //------------------------------------------------------------------------------------------------------
        
        XmlElement  nodePmtId;
        int length;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {   
            case 'US-BOA-XML-JP'://SKS_VSTS_13935
                length = 35;
                break;
        }
                
        //          2.28: PmtId
        nodePmtId = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('PmtId'));
        
        //              2.30: EndToEndId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId', SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), length));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRemoveBOM</Name>
				<Source><![CDATA[
    protected boolean getRemoveBOM()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_BtchBookg</Name>
				<Source><![CDATA[
    protected void node_PmtInf_BtchBookg(XmlElement _BtchBookg)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.3: BtchBookg
        //------------------------------------------------------------------------------------------------------
        boolean printBtchBookg;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {   
            case 'US-BOA-XML-JP':
                printBtchBookg = true;
                break;
        }
        if(printBtchBookg)
        {
            //              2.3: BtchBookg
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _BtchBookg, 'BtchBookg', 'false');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRemittanceAddress</Name>
				<Source><![CDATA[
    //SKS_VSTS_12574--->
    void getRemittanceAddress(boolean UseCheckNum)
    {
        LedgerJournalTrans      lLedgerJournalTrans;
        LogisticsLocation       lLogisticsLocation;
        LogisticsPostalAddress  lRemittancePostalAddress;
        Array vendAddrArray = new Array(Types::String);
        
        if(UseCheckNum && mSKS_EFT_FileDetail.PaymentLineRecId != 0)
        {
            select * from lRemittancePostalAddress join  RemittanceAddress from lLedgerJournalTrans
                    where lRemittancePostalAddress.Location == lLedgerJournalTrans.RemittanceLocation
                        && lLedgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;
    
            lLogisticsLocation = LogisticsLocation::find(lLedgerJournalTrans.RemittanceLocation);
    
            //Populate Remittance Information
            mRemittanceName = lLogisticsLocation.Description;
    
            vendAddrArray = SKS_PP_50000Bas::StreetToAddressLineArray(lRemittancePostalAddress.Street,2);
    
            mRemittanceAdrLine1 = '';
            mRemittanceAdrLine2 = '';
            mRemittanceAdrLine3 = '';
    
            if(vendAddrArray.exists(1))
            {
                mRemittanceAdrLine1 = vendAddrArray.value(1);
                if (vendAddrArray.exists(2))
                {
                    mRemittanceAdrLine2 = vendAddrArray.value(2);
                }
                if (vendAddrArray.exists(3))
                {
                    mRemittanceAdrLine3 = vendAddrArray.value(3);
                }
            }
            mRemittanceCity = this.CharacterReplacement(lRemittancePostalAddress.City);
            mRemittanceState = this.CharacterReplacement(lRemittancePostalAddress.State);
            mRemittanceZipCode = this.CharacterReplacement(lRemittancePostalAddress.ZipCode);
            mRemittanceCountryRegionId = this.getLogisticsAddressCountryISO(lRemittancePostalAddress.CountryRegionId);
        }
        else
        {
            //Populate Remittance Information from Vendor eBanking details
            mRemittanceName = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName);
            mRemittanceAdrLine1 = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr);
            mRemittanceAdrLine2 = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr2);
            mRemittanceCity = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneCity);
            mRemittanceState = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneState);
            mRemittanceZipCode = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneZipPostal);
            mRemittanceCountryRegionId = this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodePage</Name>
				<Source><![CDATA[
    protected int getCodePage()//SKS_DevOps_15016
    {
        return 65001;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr_Nm</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Cdtr_Nm(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.79: Cdtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
        str name = mSKS_EFT_FileDetail.AccountName;
        int length;//SKS_VSTS_13935

        if(mRemittanceName != '')
        {
            name = mRemittanceName;
        }
        
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #FED_WIRE:
                        length = 35;
                        break;
                    default:
                        length = 140;
                        break;
                }
                break;
        }
        //              Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', this.CharacterReplacement(name), length);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
            join mSKS_EFT_FileDetail_BenBank
            join mSKS_EFT_FileDetail_Intermediary
            join mSKS_EFT_FileDetail_CreditParty
            join msKS_EFT_FileDetail_Instructions
              order by mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_BenBank.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_Intermediary.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_CreditParty.RefRecId &&
                mSKS_EFT_FileDetail.RecId == msKS_EFT_FileDetail_Instructions.RefRecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>