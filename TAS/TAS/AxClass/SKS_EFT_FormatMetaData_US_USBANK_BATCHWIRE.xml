<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_USBANK_BATCHWIRE</Name>
	<SourceCode>
		<Declaration><![CDATA[
    /// <summary>
/// SKS_EFT_FormatMetaData_US_USBANK_BATCHWIRE
/// </summary>
public class SKS_EFT_FormatMetaData_US_USBANK_BATCHWIRE Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230321';
        dataContractVersion = '1.0';
        conFormatID = ['US-USBANK-BATCHWIRE'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - USBANK - BATCH WIRE',0,'','','US-USBANK-BATCHWIRE',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-USBANK-BATCHWIRE',1,1,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-USBANK-BATCHWIRE'):
                paymSpecList = this.getPaymSpecsMetaData_US_USBANK_BATCHWIRE();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_USBANK_BATCHWIRE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_USBANK_BATCHWIRE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Fed Wire Non Repetitive',1,'FED-WIRE','','FED-WIRE','TRADE PAY',0,'US-USBANK-BATCHWIRE',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International SWIFT MT1010 Open Repetitive',1,'INTL-SWIFT','','INTL-SWIFT','TRADE PAY',0,'US-USBANK-BATCHWIRE',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-USBANK-BATCHWIRE'):
                notesList = this.getNotesMetaData_US_USBANK_BATCHWIRE();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_USBANK_BATCHWIRE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_USBANK_BATCHWIRE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-USBANK-BATCHWIRE','FED-WIRE','']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-USBANK-BATCHWIRE','INTL-SWIFT','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-USBANK-BATCHWIRE'):
                validationsList = this.getValidationsMetaData_US_USBANK_BATCHWIRE();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_USBANK_BATCHWIRE</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_USBANK_BATCHWIRE()
    {
        container   validationsList;


        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-BATCHWIRE','FED-WIRE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','FEDWIREBlock > Payer Account','Bank account number',0,'AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-BATCHWIRE','FED-WIRE','','Vendor Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','FEDWIREBlock > Receiver Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'24',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-BATCHWIRE','FED-WIRE','','Vendor bank routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','FEDWIREBlock > Receiver Id','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-BATCHWIRE','FED-WIRE','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Record 50K > Ordering Customer','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-BATCHWIRE','FED-WIRE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','Record 57D > Account With Institution','Beneficiary bank name','16','WBenBankName','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-BATCHWIRE','FED-WIRE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Text Block > :59: > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-BATCHWIRE','INTL-SWIFT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','FEDWIREBlock > Payer Account','Bank account number',0,'AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-BATCHWIRE','INTL-SWIFT','','Vendor Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','FEDWIREBlock > Receiver Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'24',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-BATCHWIRE','INTL-SWIFT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Record UHeaderBlock > CIF-ID','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-BATCHWIRE','INTL-SWIFT','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','57A > Vendor swift number','Swift Code related to Vendor','9','SWIFTNo','','',3,0,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-BATCHWIRE','INTL-SWIFT','','Vendor Routing Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing Number','57A > Vendor Routing Number','Routing Number related to Vendor','9','RegistrationNum','','',3,1,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-BATCHWIRE','INTL-SWIFT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Text Block > :59: > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-USBANK-BATCHWIRE','INTL-SWIFT','','Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','57A','Intermediary Swift number related to vendor','16','WIntBankSwift','','',3,1,0,'0',0,0]);
        
        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-USBANK-BATCHWIRE','Charges','Charges']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-USBANK-BATCHWIRE','Charges','Beneficiary','BEN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-USBANK-BATCHWIRE','Charges','Our customer','OUR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-USBANK-BATCHWIRE','Charges','Shared','SHA']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData</Name>
				<Source><![CDATA[
    protected container getFormatLookupsMetaData(str _formatID)
    {
        container   formatLookupsList;

        //Metadata column names of data elements

        switch (_formatID)
        {
        }

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('US-USBANK-BATCHWIRE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_USBANK_BATCHWIRE();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_USBANK_BATCHWIRE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_USBANK_BATCHWIRE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-USBANK-BATCHWIRE','US-USBANK-BATCHWIRE','INTL-SWIFT','Charges','Charges',0,'Charges','Shared',0,'','','Record 71A']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_USBANK_BATCHWIRE</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_USBANK_BATCHWIRE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-USBANK-BATCHWIRE','US-USBANK-BATCHWIRE','TID','TID',1,'TID','',0,'','XXXX','Header Block > TID']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-USBANK-BATCHWIRE','US-USBANK-BATCHWIRE','SecurityCode','Security Code',1,'SecurityCode','',0,'','XXXXX','Header Block > HASH']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-USBANK-BATCHWIRE','US-USBANK-BATCHWIRE','CustomerSID','Customer SID',1,'CustomerSID','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','Header Block > CIF-ID']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'US-USBANK-BATCHWIRE':
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('TID', gSKS_EFT_Bank.W01);
                }                
                if(gSKS_EFT_Bank.W03)
                {
                    this.updateBankFields('SecurityCode', gSKS_EFT_Bank.W03);
                }
                if(gSKS_EFT_Bank.W04)
                {
                    this.updateBankFields('CustomerSID', gSKS_EFT_Bank.W04);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        //container   conDelete;
        container   deleteList;
        
        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-USBANK-BATCHWIRE','*','FormatValidations','*','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-USBANK-BATCHWIRE','*','FormatValidations','*','15','W02']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-USBANK-BATCHWIRE','*','FormatValidations','*','15','W03']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-USBANK-BATCHWIRE','*','FormatValidations','*','15','W04']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-USBANK-BATCHWIRE','US-USBANK-BATCHWIRE','FormatSpecFields','RepetitiveCode','','']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch(_formatID)
        {
            case ('US-USBANK-BATCHWIRE'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_USBANK_BATCHWIRE();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>