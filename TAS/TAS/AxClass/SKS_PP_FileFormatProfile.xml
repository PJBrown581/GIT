<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_FileFormatProfile</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_FileFormatProfile
{
    SKS_PP_FormatId gFormatID;
    SKS_PP_FileNbr gFileNumber;
    SKS_EB_RecId gRecid;
    LedgerJournalOffsetAccountName gAccountID;
    boolean gMultipleAccountsAllowed;
    boolean gVoidsAllowed;
    boolean gIsVoids;
    int gProfileIndex;
    SKS_PP_ChequeCount gChequeCount;
    AmountMST gChequeTotal;
    SKS_EB_CommID gCommId;
    SKS_BF_BankIntType gSKS_BF_BankIntType;
    SKS_EB_FilePath gSKS_EB_FilePath;
    NoYes gServerSideProcessing;
    NoYes gFileWillBeModified;
    SelectableDataArea gCreateSendCpny;
    SKS_EB_FileName gSKS_EB_FileName;
    SKS_PP_HeadTrailId gSKS_PP_HeadTrailId;
    NoYes gKeepDelete;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addCheque</Name>
				<Source><![CDATA[
    public void addCheque(AmountMST _chequeAmount)
    {
        gChequeCount++;
        gChequeTotal += _chequeAmount;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAccountID</Name>
				<Source><![CDATA[
    public LedgerJournalOffsetAccountName getAccountID()
    {
        return gAccountID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChequeCount</Name>
				<Source><![CDATA[
    public SKS_PP_ChequeCount getChequeCount()
    {
        return gChequeCount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getChequeTotal</Name>
				<Source><![CDATA[
    public amountMST getChequeTotal()
    {
        return gChequeTotal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCommId</Name>
				<Source><![CDATA[
    public SKS_EB_CommID getCommId()
    {
        return gCommId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCreateSendCpny</Name>
				<Source><![CDATA[
    public SelectableDataArea getCreateSendCpny()
    {
        return gCreateSendCpny;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileName</Name>
				<Source><![CDATA[
    public SKS_EB_FileName getFileName()
    {
        return gSKS_EB_FileName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileNbr</Name>
				<Source><![CDATA[
    public SKS_PP_FileNbr getFileNbr()
    {
        return gFileNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileWillBeModified</Name>
				<Source><![CDATA[
    public NoYes getFileWillBeModified()
    {
        return gFileWillBeModified;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatId</Name>
				<Source><![CDATA[
    public SKS_PP_FormatId getFormatId()
    {
        return gFormatID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeadTrailId</Name>
				<Source><![CDATA[
    public SKS_PP_HeadTrailId getHeadTrailId()
    {
        return gSKS_PP_HeadTrailId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIsVoids</Name>
				<Source><![CDATA[
    public boolean getIsVoids()
    {
        return gIsVoids;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getKeepDelete</Name>
				<Source><![CDATA[
    public NoYes getKeepDelete()
    {
        return gKeepDelete;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMultipleAccountsAllowed</Name>
				<Source><![CDATA[
    public boolean getMultipleAccountsAllowed()
    {
        return gMultipleAccountsAllowed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSKS_BF_BankIntType</Name>
				<Source><![CDATA[
    public SKS_BF_BankIntType getSKS_BF_BankIntType()
    {
        return gSKS_BF_BankIntType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPath</Name>
				<Source><![CDATA[
    public SKS_EB_FilePath getPath()
    {
        return gSKS_EB_FilePath;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProfileIndex</Name>
				<Source><![CDATA[
    public int getProfileIndex()
    {
        return gProfileIndex;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRecId</Name>
				<Source><![CDATA[
    public SKS_EB_RecId getRecId()
    {
        return gRecid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getServerSideProcessing</Name>
				<Source><![CDATA[
    public NoYes getServerSideProcessing()
    {
        return gServerSideProcessing;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVoidsAllowed</Name>
				<Source><![CDATA[
    public boolean getVoidsAllowed()
    {
        return gVoidsAllowed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(SKS_PP_FormatId _FormatId,
                    SKS_PP_FileNbr _FileNbr,
                    SKS_EB_RecID _Recid,
                    LedgerJournalOffsetAccountName _AccountName,
                    boolean _MultipleAccountsAllowed,
                    boolean _VoidsAllowed,
                    boolean _IsVoids,
                    int _ProfileIndex,
                    SKS_EB_CommID _SKS_EB_CommID,
                    NoYes _ServerSideProcessing,
                    SKS_BF_BankIntType _SKS_BF_BankIntType,
                    SKS_EB_FilePath _SKS_EB_FilePath,
                    NoYes _FileWillBeModified,
                    SKS_EB_FileName _SKS_EB_FileName,
                    SKS_PP_HeadTrailId _SKS_PP_HeadTrailId,
                    NoYes _KeepDelete,
                    SelectableDataArea _CreateSendCpny)
    {
        gFormatID = _FormatId;
        gFileNumber = _FileNbr;
        gRecid = _Recid;
        gAccountID = _AccountName;
        gMultipleAccountsAllowed = _MultipleAccountsAllowed;
        gVoidsAllowed = _VoidsAllowed;
        gIsVoids = _IsVoids;
        gProfileIndex = _ProfileIndex;
        gCommId = _SKS_EB_CommID;
        gSKS_BF_BankIntType = _SKS_BF_BankIntType;
        gSKS_EB_FilePath = _SKS_EB_FilePath;
        gServerSideProcessing = _ServerSideProcessing;
        gFileWillBeModified = _FileWillBeModified;
        gCreateSendCpny = _CreateSendCpny;
        gSKS_EB_FileName = _SKS_EB_FileName;
        gSKS_PP_HeadTrailId = _SKS_PP_HeadTrailId;
        gKeepDelete = _KeepDelete;
        gChequeCount = 0;
        gChequeTotal = 0.0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAccountName</Name>
				<Source><![CDATA[
    public void setAccountName(LedgerJournalOffsetAccountName _LedgerJournalOffsetAccountName)
    {
            gAccountID = _LedgerJournalOffsetAccountName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setChequeCount</Name>
				<Source><![CDATA[
    public void setChequeCount(int _ChequeCount)
    {
        gChequeCount = _ChequeCount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setChequeTotal</Name>
				<Source><![CDATA[
    public void setChequeTotal(AmountMST _ChequeTotal)
    {
        gChequeTotal = _ChequeTotal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCommId</Name>
				<Source><![CDATA[
    public void setCommId(SKS_EB_CommID _CommId)
    {
        gCommId= _CommId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCreateSendCpny</Name>
				<Source><![CDATA[
    public void setCreateSendCpny(SelectableDataArea _CreateSendCpny)
    {
        gCreateSendCpny = _CreateSendCpny;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFileName</Name>
				<Source><![CDATA[
    public void setFileName(SKS_EB_FileName _SKS_EB_FileName)
    {
        gSKS_EB_FileName = _SKS_EB_FileName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFileNbr</Name>
				<Source><![CDATA[
    public void setFileNbr(SKS_PP_FileNbr _SKS_PP_FileNbr)
    {
            gFileNumber = _SKS_PP_FileNbr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFileWillBeModified</Name>
				<Source><![CDATA[
    public void setFileWillBeModified(NoYes _FileWillBeModified)
    {
        gFileWillBeModified = _FileWillBeModified;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFormatID</Name>
				<Source><![CDATA[
    public void setFormatID(SKS_PP_FormatId _FormatID)
    {
        gFormatID = _FormatID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setHeadTrailId</Name>
				<Source><![CDATA[
    public void setHeadTrailId(SKS_PP_HeadTrailId _SKS_PP_HeadTrailId)
    {
        gSKS_PP_HeadTrailId = _SKS_PP_HeadTrailId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIsVoids</Name>
				<Source><![CDATA[
    public void setIsVoids(boolean _IsVoids)
    {
        gIsVoids = _IsVoids;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setKeepDelete</Name>
				<Source><![CDATA[
    public void setKeepDelete(NoYes _KeepDelete)
    {
        gKeepDelete = _KeepDelete;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMultipleAccountsAllowed</Name>
				<Source><![CDATA[
    public void setMultipleAccountsAllowed(boolean _MultipleAccountsAllowed)
    {
        gMultipleAccountsAllowed = _MultipleAccountsAllowed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSKS_BF_BankIntType</Name>
				<Source><![CDATA[
    public void setSKS_BF_BankIntType(SKS_BF_BankIntType _SKS_BF_BankIntType)
    {
        gSKS_BF_BankIntType = _SKS_BF_BankIntType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPath</Name>
				<Source><![CDATA[
    public void setPath(SKS_EB_FilePath _SKS_EB_FilePath)
    {
        gSKS_EB_FilePath = _SKS_EB_FilePath;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRecid</Name>
				<Source><![CDATA[
    public void setRecid(SKS_EB_RecId _RecID)
    {
        gRecid = _RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setServerSideProcessing</Name>
				<Source><![CDATA[
    public void setServerSideProcessing(NoYes _ServerSideProcessing)
    {
        gServerSideProcessing = _ServerSideProcessing;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVoidsAllowed</Name>
				<Source><![CDATA[
    public void setVoidsAllowed(boolean _VoidsAllowed)
    {
        gVoidsAllowed = _VoidsAllowed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFileHeader</Name>
				<Source><![CDATA[
    public void updateFileHeader()
    {
        SKS_PP_File locSKS_PP_File;
        SKS_PP_Bank locSKS_PP_Bank;
        SKS_PP_Setup locSKS_PP_Setup;
        ;
    
        changeCompany(gCreateSendCpny)
        {
            select firstonly forUpdate locSKS_PP_File
                    where locSKS_PP_File.RecId == gRecId;
            if(gChequeCount > 0)
            {
                locSKS_PP_Bank = SKS_PP_CreateFile::findBankByFileNbr(locSKS_PP_File);
                changeCompany(locSKS_PP_Bank.company())
                {
                    select firstonly locSKS_PP_Setup;
                }
                locSKS_PP_File.ChequeCount = gChequeCount;
                locSKS_PP_File.ChequeTotal = gChequeTotal;
                locSKS_PP_File.SKS_BF_BankIntType = gSKS_BF_BankIntType;
                locSKS_PP_File.FileName = SKS_PP_CreateFile::getFileName(gFileNumber,locSKS_PP_Bank,locSKS_PP_Setup, gSKS_BF_BankIntType);
                locSKS_PP_File.FilePath = gSKS_EB_FilePath;
                locSKS_PP_File.FormatId = gFormatID;
                locSKS_PP_File.CommID = gCommId;
                locSKS_PP_File.KeepDelete = SKS_PP_FileStatus::NotProcessed;
                changeCompany(locSKS_PP_File.company())
                {
                locSKS_PP_File.update();
                }
            }
        }
    
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>