<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_NO_DNB_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_NO_DNB_XML extends SKS_EFT_Format_ISO_20022_001001003_FD
/// </summary>
class SKS_EFT_Format_NO_DNB_XML extends SKS_EFT_Format_ISO_20022_001001003_FD
{
    #define.FormatVersion('20230320')
    #define.SEPA('SEPA')
    #define.URGP('URGP')
    #define.NURG('NURG')
    #define.SDVA('SDVA')

    #define.OCR('OCR')
    #define.PWA('PWA')
    #define.PWOA('PWOA')
    #define.CB('CB')
    #define.CB_URGP('CB-URGP')
    #define.SCT('SCT')

    #define.BACS('BACS')
    #define.CHAPS('CHAPS')
    #define.SALA('SALA')
    #define.INTC('INTC')        //SKS#DevOps:17760
    #define.MONEY_ORD('MONEY-ORD')
    #define.PENSION('PENSION')
    #define.PMT_BANK('PMT-BANK')
   

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_Id</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty_Id(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          9.1.12: Id
        //              9.1.13: OrgId
        //                  9.1.15: Othr
        //                      9.1.1.16: Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOther;
        XmlElement nodeSchemNm;
        str initiatingPartyId, divisionNumber;

        initiatingPartyId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InitiatingPartyId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        divisionNumber      = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DivisionNumber', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
    
        if(initiatingPartyId != '' || divisionNumber != '')
        {
            //          9.1.12: Id
            nodeId = _nodeInitgPty.appendChild(xmlDoc.createElement('Id'));
    
            //              9.1.13: OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
            
            if(initiatingPartyId)
            {
                //                  9.1.15: Other
                nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));

                //                      9.1.1.16: Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', this.CharacterReplacement(initiatingPartyId), 35);

                //                      SchmeNm
                nodeSchemNm = nodeOther.appendChild(xmlDoc.createElement('SchmeNm'));
            
                //                          Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchemNm, 'Cd', 'CUST');
            }

            if(divisionNumber)      //SKS#DevOps:20333
            {
                //                  9.1.15: Other
                nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));

                //                      9.1.1.16: Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', this.CharacterReplacement(divisionNumber), 35);

                //                      SchmeNm
                nodeSchemNm = nodeOther.appendChild(xmlDoc.createElement('SchmeNm'));
            
                //                          Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchemNm, 'Cd', 'BANK');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.8: SvcLvl
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeSvcLvl;

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGP ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NURG ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SDVA ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CB_URGP||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHAPS)
        {
            if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::No && subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK')
            {
                //          2.8: SvcLvl
                nodeSvcLvl = _nodePmftTpInf.appendChild(xmlDoc.createElement('SvcLvl'));
    
                //              2.9: Cd
                this.node_PmtInf_PmtTpInf_SvcLvl_Cd(nodeSvcLvl);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl_Cd</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl_Cd(XmlElement _nodeSvcLvl)
    {
        //------------------------------------------------------------------------------------------------------
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
        str     value;
    
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #URGP:
            case #CB_URGP:
            case #CHAPS:
                value = 'URGP';
                break;
            case #NURG:
                value = 'NURG';
                break;
            case #SDVA:
                value = 'SDVA';
                break;
            case #SEPA:
                value = 'SEPA';
                break;
        }
        
        //              2.9: Cd
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Cd', value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_LclInstrm</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_LclInstrm(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.11: LclInstrm
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeLclInstrm;
        str value;

        if(!(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGP ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NURG ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SDVA)
            || (mSKS_EFT_FileDetail.FormatId =='NO-DNB-XML-SE'))
        {
            //          2.11: LclInstrm
            nodeLclInstrm = _nodePmftTpInf.appendChild(xmlDoc.createElement('LclInstrm'));
            
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CB      ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CB_URGP ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SCT)
            {
                value = 'IN';
            }
            else
            {
                value = 'DO';
            }
            
            //              2.13: Prtry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Prtry', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_CtgyPurp</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_CtgyPurp(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.14: CtgyPurp
        //                  Cd
        //------------------------------------------------------------------------------------------------------
            
        XmlElement nodeCtgyPurp;
        str     value;

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGP ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NURG ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SDVA ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SALA ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTC ||    //SKS#DevOps:17760)
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PENSION)
        {
            //              CtgyPurp
            nodeCtgyPurp = _nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));

            //                  2.9: Cd
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA)
            {
                value = SKS_EFT_Format_ISO_20022_001001003_FD::getCodelookupvalue('CtgyPurp', mSKS_EFT_FileDetail.RecId);
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', value);
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SALA)           //SKS#DevOps:17760
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', 'SALA');
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PENSION)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', 'PENS');
            }
            else
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', 'INTC');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Id(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          9.1.12: Id
        //              9.1.13: OrgId
        //                  9.1.15: Othr
        //                      9.1.16: Id
        //                          9.1.17: SchmeNm
        //                              9.1.18: Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOther;
        XmlElement nodeSchmeNm;
        str value;

    
        if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyId != '' &&
          (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA  ||
          (mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA  &&
           mSKS_EFT_FileDetail.PaymentCurrencyCode != 'EUR'))    &&
          !(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OCR  ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PWA  ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PWOA ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CB   ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SCT  ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CB_URGP))
        {
            //          9.1.12: Id
            nodeId = _nodeDbtr.appendChild(xmlDoc.createElement('Id'));
    
          
            //              9.1.13: OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
            
    
            //                  9.1.15: Othr
            nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
            //                      9.1.16: Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyId), 35);
    
            //                          9.1.17: SchmeNm
            nodeSchmeNm = nodeOther.appendChild(xmlDoc.createElement('SchmeNm'));
    
            //                              9.1.18: Cd
            value = SKS_EFT_Format_ISO_20022_001001003_FD::getCodelookupvalue('SchemeCd', mSKS_EFT_FileDetail.RecId);

            if(value && (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA ||
                         mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGP ||            //SKS#DevOps:21536
                         mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SDVA ||            //SKS#DevOps:21536
                         mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NURG ||            //SKS#DevOps:21536
                         mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BACS ||
                         mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHAPS||
                         mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SALA ||
                         mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTC ||            //SKS#DevOps:17760
                          mSKS_EFT_FileDetail.FormatId =='NO-DNB-XML-SE'))
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', value, false);
            }
            else
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', 'COID');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: DbtrAcct
        //          Id
        //              IBAN
        //              Othr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;
        

        //      2.20: DbtrAcct
        nodeDbtrAcct = _nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
        //          Id
        nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));

      
        if(mSKS_EFT_FileDetail.BankBankIBAN)
        {
            //              IBAN
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN', mSKS_EFT_FileDetail.BankBankIBAN);
        }
        else
        {
            //              Othr
            this.node_PmtInf_DbtrAcct_Id_Othr(nodeDbtrAcctId);
        }
        //          Ccy
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcct, 'Ccy', mSKS_EFT_FileDetail.CurrencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct_Id_Othr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcct_Id_Othr(XmlElement _nodeAcctId)
    {
        //------------------------------------------------------------------------------------------------------
        //              Othr
        //                  Id
        //                  SchmeNm
        //                      Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeOthr;
        XmlElement nodeSchmeNm;
    
        if(!(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGP ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NURG ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SDVA)||
             mSKS_EFT_FileDetail.FormatId== 'NO-DNB-XML-SE')
        {
            //              Othr
            nodeOthr = _nodeAcctId.appendChild(xmlDoc.createElement('Othr'));
    
            //                  Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.BankBankAcct, 34, false);
    
            //                  SchmeNm
            nodeSchmeNm = nodeOthr.appendChild(xmlDoc.createElement('SchmeNm'));
    
            //                      Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', 'BBAN');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.21: DbtrAgt
        //          FinInstnId
        //              BIC
        //              Othr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeOthr;
    
        //      2.21: DbtrAgt
        nodeDbtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAgt'));
    
        //          FinInstnId
        nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));

        if(mSKS_EFT_FileDetail.BankBankSwiftNo)
        {
            //              BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.BankBankSwiftNo, 11, false);
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA)
        {
            //               Othr
            nodeOthr = nodeFinInstnId.appendChild(xmlDoc.createElement('Othr'));

            //              Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.BankBankTransit, 35, false);
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChrgBr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.51: ChrgBr
        //------------------------------------------------------------------------------------------------------
        str value;

        value = SKS_EFT_Format::getCodelookupvalue('Charges',mSKS_EFT_FileDetail.RecId);

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SALA ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BACS)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'ChrgBr', value, 0, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_ChrgBr(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.51: ChrgBr
        //------------------------------------------------------------------------------------------------------
        str value;

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SCT)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'ChrgBr', 'SLEV', 0, false);
        }
        else
        {
            value = SKS_EFT_Format::getCodelookupvalue('Charges',mSKS_EFT_FileDetail.RecId);
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'ChrgBr', value, 0, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt1</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_IntrmyAgt1(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.71: IntrmyAgt1
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                      MmbId
        //                  Nm
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeIntrmyAgt1;
        XmlElement nodeFinInstnId;
        XmlElement nodePstlAdr;
        XmlElement nodeClrSysMmbId;

        if(mSKS_EFT_FileDetail_Intermediary.IntBankSwift != '' || mSKS_EFT_FileDetail_Intermediary.IntBankId != '')
        {
            //          2.71: IntrmyAgt1
            nodeIntrmyAgt1 = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt1'));
    
            //              FinInstnId
            nodeFinInstnId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('FinInstnId'));
        
            if(mSKS_EFT_FileDetail_Intermediary.IntBankSwift)
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail_Intermediary.IntBankSwift, 11, false);
            }
            else
            {
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                // MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail_Intermediary.IntBankId, 35, false);
            }
            //                  Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankName), 140, false);
                
            //      PstlAdr
            nodePstlAdr = nodeFinInstnId.appendChild(xmlDoc.createElement('PstlAdr'));
          
            //          StrtNm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'StrtNm', this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankAddr + ' ' + mSKS_EFT_FileDetail_Intermediary.IntBankAddr2), 70, false);
                             
            //          TwnNm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankCity), 35, false);
           
            //              Ctry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId), 2, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                  Nm
        //                  PstlAdr
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
    
        if(!(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OCR  ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PWA  ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PWOA ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SCT  ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MONEY_ORD) ||
            (mSKS_EFT_FileDetail.FormatId=='NO-DNB-XML-SE' && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MONEY_ORD))
          
        {
            //          2.77: CdtrAgt
            nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));
    
            //              FinInstnId
            nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(mSKS_EFT_FileDetail.DepSwiftNo   &&
              (mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BACS &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CHAPS&&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SALA  &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PMT_BANK &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PENSION))
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 11, false);
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA)
            {
                //                  ClrSysMmbId
                this.node_CdtTrfTxInf_CdtrAgt_MmbId(nodeFinInstnId);
            }
            //                  Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankName), 0, false);

            //                  PstlAdr
            this.node_CdtTrfTxInf_CdtrAgt_PstlAdr(nodeFinInstnId);                   
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt_MmbId</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_CdtTrfTxInf_CdtrAgt_MmbId
    /// </summary>
    /// <param name = "_nodeFinInstnId">_nodeFinInstnId</param>
    protected void node_CdtTrfTxInf_CdtrAgt_MmbId(XmlElement _nodeFinInstnId)
    {
        //------------------------------------------------------------------------------------------------------
        //  ClrSysMmbId
        //      ClrSysId
        //          Cd
        //      MmbId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeClrSysMmbId;
        XmlElement nodeClrSysId;
        str     value;
    
        if(mSKS_EFT_FileDetail.DepBankTransit != '')
        {
            nodeClrSysMmbId = _nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

            value = SKS_EFT_Format_ISO_20022_001001003_FD::getCodelookupvalue('ClrSysIdCd', mSKS_EFT_FileDetail.RecId);
            
            if(value)
            {
                // ClrSysId
                nodeClrSysId = nodeClrSysMmbId.appendChild(xmlDoc.createElement('ClrSysId'));

                //  Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', value, 0, false);
            }
    
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 35);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_Id(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.79: Cdtr
        //          Id
        //              OrgId
        //                  Othr
        //                      Id
        //                      SchemeName
        XmlElement nodeId;
        XmlElement nodeOrgPvtId;
        XmlElement nodeOthr;
        XmlElement nodeSchmeNm;
        str     value;
        
    
        value = SKS_EFT_Format_ISO_20022_001001003_FD::getCodelookupvalue('CompanyRegNo', mSKS_EFT_FileDetail.RecId);

        if((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA && mSKS_EFT_FileDetail.VATNum) ||
           (mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA && value &&
            mSKS_EFT_FileDetail.PaymentCurrencyCode != 'EUR'))
        {
            //          Id
            nodeId = _nodeCdtr.appendChild(xmlDoc.createElement('Id'));

            //              OrgId
            nodeOrgPvtId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
                                      
            //                  Othr
            nodeOthr = nodeOrgPvtId.appendChild(xmlDoc.createElement('Othr'));
            
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA)
            {
                //                      Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.VATNum);
            }
            else
            {
                //                      Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', this.CharacterReplacement(value));
            }
            
            //                      SchmeNm
            nodeSchmeNm = nodeOthr.appendChild(xmlDoc.createElement('SchmeNm'));
    
            value = SKS_EFT_Format_ISO_20022_001001003_FD::getCodelookupvalue('SchemeCd', mSKS_EFT_FileDetail.RecId);

            if(value && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA || mSKS_EFT_FileDetail.FormatId =='NO-DNB-XML-SE')
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', value, false);
            }
            else
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', 'COID');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChqInstr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChqInstr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.52 ChqInstr
        //              2.58 DlvryMtd
        //              2.65 ChqMtrtyDt
        //              2.69: PrtLctn
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeChqInstr;
        XmlElement nodeDlvryMtd;
        str     value;
        boolean printDlvryMthd = false,ChqInstr =false;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'NO-DNB-XML-SE':
               
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #MONEY_ORD:
                        printDlvryMthd =true;
                        ChqInstr = true;
                        break;
                    default:
                        break;
                }
                break;
        }
    
       
        if(ChqInstr)
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DlvryMtd', mSKS_EFT_FileDetail.RecId));

            //          2.52 ChqInstr
            nodeChqInstr = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('ChqInstr'));

            //              2.54 ChqNb
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'ChqNb', this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 0, false);
    
        
            //              2.53 ChqTp
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'ChqTp', 'BCHQ', 0, false);
        }
        if(value && printDlvryMthd)
        {
            //              2.58 DlvryMtd
            nodeDlvryMtd = nodeChqInstr.appendChild(xmlDoc.createElement('DlvryMtd'));
            
            //                  2.60: Prtry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryMtd, 'Cd', value, 0, false);
        }
      
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  IBAN
        //------------------------------------------------------------------------------------------------------

        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
        XmlElement nodeCdtrAcctIdOthr;
        XmlElement nodeSchmeNm;

        if(mSKS_EFT_FileDetail.FormatId =='NO-DNB-XML' || mSKS_EFT_FileDetail.FormatId =='NO-DNB-XML-UK' || (mSKS_EFT_FileDetail.FormatId =='NO-DNB-XML-SE' && mSKS_EFT_FileDetail.PaymSpec != #MONEY_ORD))
        {
            //          2.80: CdtrAcct
            nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));

            //              Id
            nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));


            if(mSKS_EFT_FileDetail.DepBankIBAN && !(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #OCR  ||
                                                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PWA  ||
                                                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SALA ||
                                                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTC ||         //SKS#DevOps:17760
                                                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PWOA ||
                                                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PENSION  ||
                                                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PMT_BANK))
            {
                //                  IBAN
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN, 35);
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SCT )
            {
                //                  Othr
                nodeCdtrAcctIdOthr = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));

                //                      Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctIdOthr, 'Id', mSKS_EFT_FileDetail.DepBankAcct, 34, false);

                //                  SchmeNm
                nodeSchmeNm = nodeCdtrAcctIdOthr.appendChild(xmlDoc.createElement('SchmeNm'));

                //                      Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', 'BBAN', 0, false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_PmtId</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_PmtId(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.28: PmtId
        //                  InstrId
        //                  EndToEndId
        //------------------------------------------------------------------------------------------------------

        XmlElement nodePmtId;

        //          2.28: PmtId
        nodePmtId = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('PmtId'));

        //                  InstrId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'InstrId', SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 35));

        //              2.30: EndToEndId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId', SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 35));
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_Ustrd</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf_Ustrd(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeRmtInf;
        str invNumbers;
        int len;
    
        invNumbers = this.getInvoiceNbrs();
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'NO-DNB-XML-SE':
                len = 140;
                break;
            default:
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BACS:
                    case #SALA:
                        len = 18;
                        break;
                    default:
                        len = 140;
                        break;
                }
                break;
        }
        if(invNumbers)
        {
            //          2.98: RmtInf
            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
    
            //              2.99: Ustrd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, len);
        }
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr_Nm</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Cdtr_Nm(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.79: Cdtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
        int length;
        str name = mSKS_EFT_FileDetail.AccountName;
    
        if(mRemittanceName != '')
        {
            name = mRemittanceName;
        }
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGP ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NURG ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SDVA)
        {
            length = 70;
        }
        else
        {
            length = 140;
        }

        //              Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', this.CharacterReplacement(name), length);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Purp</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Purp(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.86: Purp
        //              Cd
        //------------------------------------------------------------------------------------------------------

        XmlElement nodePurp;
        str value;

        value = SKS_EFT_Format_ISO_20022_001001003_FD::getCodelookupvalue('PurpCd', mSKS_EFT_FileDetail.RecId);

        if(value && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA || mSKS_EFT_FileDetail.FormatId == 'NO-DNB-XML-SE')
        {
            //          2.86: Purp
            nodePurp = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Purp'));
            
            //              Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePurp, 'Cd', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
    
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'NO-DNB-XML-SE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #OCR:
                        this.node_CdtTrfTxInf_RmtInf_Strd(_nodeCdtTrfTxInf);
                        break;
                    default:
                        this.node_CdtTrfTxInf_RmtInf_Ustrd(_nodeCdtTrfTxInf);
                        break;
                }
                break;
            default:
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA:
                    case #OCR:
                    case #PWA:
                    case #SCT:
                        this.node_CdtTrfTxInf_RmtInf_Strd(_nodeCdtTrfTxInf);
                        break;
                    case #PWOA:
                        break;
                    default:
                        this.node_CdtTrfTxInf_RmtInf_Ustrd(_nodeCdtTrfTxInf);
                        break;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_Strd</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf_Strd(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //------------------------------------------------------------------------------------------------------
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        XmlElement nodeRmtInf;
        XmlElement nodeStrd;
        XmlElement nodeCdtrRefInf;
        XmlElement nodeTp;
        XmlElement nodeRfrdDocAmt;
        XmlElement nodeCdOrPrtry;
        boolean firstRec = true;
    
        while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId && invSKS_EFT_FileDetail.InvoiceNumber != ''
        {
            if(firstRec)
            {
                //          2.98: RmtInf
                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                firstRec = false;
            }
    
            //              2.100: Strd
            nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));
    
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA)
            {
                //              2.101: RfrdDocInf
                this.node_CdtTrfTxInf_RmtInf_RfrdDocInf(nodeStrd, invSKS_EFT_FileDetail);
    
                //              2.109 RfrdDocAmt
                nodeRfrdDocAmt = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocAmt'));

                this.node_RmtInf_Amt(nodeRfrdDocAmt, invSKS_EFT_FileDetail);
            }

            if(invSKS_EFT_FileDetail.PaymId && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PWA)
            {
                //            2.120: CdtrRefInf
                nodeCdtrRefInf = nodeStrd.appendChild(xmlDoc.createElement('CdtrRefInf'));
                //              2.121: Tp
                nodeTp = nodeCdtrRefInf.appendChild(xmlDoc.createElement('Tp'));

                //                  2.122: CdOrPrtry
                nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));

                //                      2.123: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'SCOR');

                //               2.126: Ref
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', invSKS_EFT_FileDetail.PaymId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_RfrdDocInf</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_CdtTrfTxInf_RmtInf_RfrdDocInf
    /// </summary>
    /// <param name = "_nodeStrd">_nodeStrd</param>
    /// <param name = "_invSKS_EFT_FileDetail">_invSKS_EFT_FileDetail</param>
    protected void node_CdtTrfTxInf_RmtInf_RfrdDocInf(XmlElement _nodeStrd, SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //------------------------------------------------------------------------------------------------------
        //              2.101: RfrdDocInf
        //                  2.102: Tp
        //                      2.103: CdOrPrtry
        //                          2.104: Cd
        //                  2.107: Number
        //                  2.108: RltdDt
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeRfrdDocInf;
        XmlElement nodeTp;
        XmlElement nodeCdOrPrtry;
    
        //              2.101: RfrdDocInf
        nodeRfrdDocInf = _nodeStrd.appendChild(xmlDoc.createElement('RfrdDocInf'));
    
        //                  2.102: Tp
        nodeTp = nodeRfrdDocInf.appendChild(xmlDoc.createElement('Tp'));
    
        //                      2.103: CdOrPrtry
        nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));
    
        //                          2.104: Cd
        if(_invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur <= 0)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'CINV');

            //                  2.107: Number
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceNumber));

            //                  2.108: RltdDt
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(_invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'CREN');

            //                  2.107: Number
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceNumber));

            //                  2.108: RltdDt
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(_invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_RmtInf_Amt</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_RmtInf_Amt
    /// </summary>
    /// <param name = "_nodeRfrdDocAmt">_nodeRfrdDocAmt</param>
    /// <param name = "_invSKS_EFT_FileDetail">_invSKS_EFT_FileDetail</param>
    protected void node_RmtInf_Amt(XmlElement _nodeRfrdDocAmt, SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.42: Amt
        //              2.43: InstdAmt
        //------------------------------------------------------------------------------------------------------
        XmlElement  currentElement;
        AmountMST   gross = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        AmountMST   remitted;
        AmountMST   creditNote;

        if(_invSKS_EFT_FileDetail.InvoiceSettleAmountCur > 0)
        {
            remitted = 0;
            creditNote = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            //      2.110
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DuePyblAmt', num2str(gross * 1, 0, 2, 1, 0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
        else
        {
            remitted = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1;
            creditNote = 0;
            //      2.110
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DuePyblAmt', num2str(gross * -1, 0, 2, 1, 0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
        }

        if(remitted != 0)
        {
            //      RmtdAmt
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'RmtdAmt', num2str(remitted, 0, 2, 1, 0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
        else
        {
            //      CdtNoteAmt
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'CdtNoteAmt', num2str(creditNote,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_BtchBookg</Name>
				<Source><![CDATA[
    protected void node_PmtInf_BtchBookg(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.23 BtchBookg
        //------------------------------------------------------------------------------------------------------

        //              2.3: BtchBookg

        
        if(!(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGP ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NURG ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SDVA) ||
             mSKS_EFT_FileDetail.FormatId =='NO-DNB-XML-SE')
        {
            str btchbkg;

            btchbkg = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Btchbkg', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
            if(strUpr(Btchbkg) == 'Y')
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'BtchBookg', 'true');
            }
            else
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'BtchBookg', 'false');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_PstlAdr(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
    
        
        if(!(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGP ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NURG ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SDVA))
        {
            this.node_PstlAdr(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity, 0, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2, '', true);
        }
        else
        {
            super(_nodeDbtr);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          PstlAdr

        if(!(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGP ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NURG ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SDVA))
        {
            this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrLine1, mRemittanceZipCode, mRemittanceCity, 0, mRemittanceAdrLine2, '', true);
        }
        else
        {
            super(_nodeCdtr);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRemittanceAddress</Name>
				<Source><![CDATA[
    void getRemittanceAddress(boolean UseCheckNum)
    {
        mRemittanceName = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName);
        mRemittanceAdrLine1 = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr);
        mRemittanceAdrLine2 = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr2);
        mRemittanceCity = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneCity);
        mRemittanceState = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneState);
        mRemittanceZipCode = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneZipPostal);
        mRemittanceCountryRegionId = this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId);
        
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>