<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_EU_HSBC_CCTI_V22_02</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_EU_HSBC_CCTI_V22_02 Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_EU_HSBC_CCTI_V22_02 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20221115';
        dataContractVersion = '1.0';
        conFormatID = ['EU-HSBC-CCTI-V22-BM'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'HSBC Customer Credit Transfer Initiation v2.2 - Bermuda',0,'','','EU-HSBC-CCTI-V22-BM',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'EU-HSBC-CCTI-V22-02',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('EU-HSBC-CCTI-V22-BM'):
                paymSpecList = this.getPaymSpecsMetaData_EU_HSBC_CCTI_V22_BM();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_EU_HSBC_CCTI_V22_BM</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_EU_HSBC_CCTI_V22_BM()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Bermuda - ACH Low Value Payment',1,'BM-ACH-LV','','BM-ACH-LV','TRADE PAY',0,'EU-HSBC-CCTI-V22-BM',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Bermuda - Wire High Value Payment',1,'BM-WIRE-HV','','BM-WIRE-HV','TRADE PAY',0,'EU-HSBC-CCTI-V22-BM',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('EU-HSBC-CCTI-V22-BM'):
                notesList = this.getNotesMetaData_EU_HSBC_CCTI_V22_BM();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_EU_HSBC_CCTI_V22_BM</Name>
				<Source><![CDATA[
    private container getNotesMetaData_EU_HSBC_CCTI_V22_BM()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['EU-HSBC-CCTI-V22-BM','BM-ACH-LV','-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-HSBC-CCTI-V22-BM','BM-WIRE-HV','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Group Header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('EU-HSBC-CCTI-V22-BM'):
                validationsList = this.getValidationsMetaData_EU_HSBC_CCTI_V22_BM();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_EU_HSBC_CCTI_V22_BM</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_EU_HSBC_CCTI_V22_BM()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-ACH-LV','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > DbtrAgt > FinInstnId > CmbndId > BIC','Swift code is related to bank',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-ACH-LV','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > DbtrAgt > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-ACH-LV','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > CmbndId > ClrSysMmbId > MmbId','Creditor sort code','9','RegistrationNum','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-ACH-LV','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > CmbndId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-ACH-LV','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > PrtryAcct','Bank account number ',0,'AccountNum','','',0,0,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-ACH-LV','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-ACH-LV','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > PrtryAcct','Account Number related to vendor','9','AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-WIRE-HV','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-WIRE-HV','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > PrtryAcct','Bank account number ',0,'AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-WIRE-HV','','SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','PmtInf > CdtTrfTxInf > CdtrAgt > FinInstnId > CmbndId > BIC','Swift code is related to Bank',0,'SWIFTNo','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-WIRE-HV','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > CmbndId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-WIRE-HV','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-WIRE-HV','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > CmbndId > ClrSysMmbId > MmbId','Creditor sort code','9','RegistrationNum','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-WIRE-HV','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > CmbndId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-WIRE-HV','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > PrtryAcct > Id','IBAN related to vendor','9','BankIBAN','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-WIRE-HV','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > PrtryAcct','Account Number related to vendor','9','AccountNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-ACH-LV','','Payment Instruction Line1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instruction(group) > Line1','PmtInf > CdtTrfTxInf > RmtInf > Ustrd','Line 1 Instruction text','16','WPmtInstText1','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-ACH-LV','','Payment Instruction Line2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instruction(group) > Line2','PmtInf > CdtTrfTxInf > RmtInf > Ustrd','Line 2 Instruction text','16','WPmtInstText2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-ACH-LV','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > Ctry','Intermediary Bank Country related to vendor','16','WIntBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-HSBC-CCTI-V22-BM','BM-WIRE-HV','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > Ctry','Intermediary Bank Country related to vendor','16','WIntBankCountryRegionId','','',1,1,'',0,0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['EU-HSBC-CCTI-V22-02','ChrgBr','Charge Bearer']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-HSBC-CCTI-V22-02','ChrgBr','Shared','SHAR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-HSBC-CCTI-V22-02','ChrgBr','Debtor','DEBT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-HSBC-CCTI-V22-02','ChrgBr','Creditor','CRED']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('EU-HSBC-CCTI-V22-BM'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_EU_HSBC_CCTI_V22_BM();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_EU_HSBC_CCTI_V22_BM</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_EU_HSBC_CCTI_V22_BM()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-HSBC-CCTI-V22-02','EU-HSBC-CCTI-V22-BM','BM-WIRE-HV','InstrForCdtrAgt','Instruction For Creditor Agent',1,'InstrForCdtrAgt','',1,'','XXXX','PmtInf > CdtTrfTxInf > InstrForCdtrAgt']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-HSBC-CCTI-V22-02','EU-HSBC-CCTI-V22-BM','BM-WIRE-HV','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-HSBC-CCTI-V22','EU-HSBC-CCTI-V22-BM','PaymSpecFields','BM-WIRE-HV','InstrForCdtrAgt','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-HSBC-CCTI-V22-02','EU-HSBC-CCTI-V22-BM','FormatValidations','BM-WIRE-HV','16','WChargesIndic']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-HSBC-CCTI-V22-02','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-HSBC-CCTI-V22-02','*','FormatValidations','*','15','W01']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('EU-HSBC-CCTI-V22-BM'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_EU_HSBC_CCTI_V22_BM();
                break;
        }
        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_EU_HSBC_CCTI_V22_BM</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_EU_HSBC_CCTI_V22_BM()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-HSBC-CCTI-V22-02','EU-HSBC-CCTI-V22-BM','HSBCConnectCustId','HSBC Connect Customer ID',1,'HSBCConnectCustId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > BkPartyId']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('EU-HSBC-CCTI-V22-BM'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('HSBCConnectCustId', gSKS_EFT_Bank.W01);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'EU-HSBC-CCTI-V22-BM':
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('ChrgBr', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>