<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_AU_ANZ_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_AU_ANZ_XML Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_AU_ANZ_XML Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220711';
        dataContractVersion = '1.0';
        conFormatID = ['AU-ANZ-XML','NZ-ANZ-XML'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('AU-ANZ-XML'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_AU_ANZ_XML();
                break;

            case ('NZ-ANZ-XML'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_NZ_ANZ_XML();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_AU_ANZ_XML</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_AU_ANZ_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-ANZ-XML','AU-ANZ-XML','Btchbkg','Batch booking(Y/N)',0,'Btchbkg','',0,'','','PmtInf > BtchBookg']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_NZ_ANZ_XML</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_NZ_ANZ_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-ANZ-XML','NZ-ANZ-XML','Btchbkg','Batch booking(Y/N)',0,'Btchbkg','',0,'','','PmtInf > BtchBookg']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'AU - ANZ - pain.001.001.03',0,'','','AU-ANZ-XML',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'AU-ANZ-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'NZ - ANZ - pain.001.001.03',0,'','','NZ-ANZ-XML',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'AU-ANZ-XML',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('AU-ANZ-XML'):
                paymSpecList = this.getPaymSpecsMetaData_AU_ANZ_XML();
                break;

            case ('NZ-ANZ-XML'):
                paymSpecList = this.getPaymSpecsMetaData_NZ_ANZ_XML();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_AU_ANZ_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_AU_ANZ_XML()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'AU-DP Australian Domestic - Non-urgent',1,'NURG','','AU-DP','DIRECT PAY',0,'AU-ANZ-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,1,0,'',0,0,0,0,0,'INTL-CBFT International Payment',1,'URGP','','INTL-IMT','DIRECT PAY',0,'AU-ANZ-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,1,0,'',0,0,0,0,0,'AU-RTGS Australian Domestic - Urgent',1,'RTGS','','INTL-RTGS','DIRECT PAY',0,'AU-ANZ-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_NZ_ANZ_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_NZ_ANZ_XML()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'New Zealand Domestic Payment',1,'NURG','','NZ-DP','DIRECT PAY',0,'NZ-ANZ-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,1,0,'',0,0,0,0,0,'International Payment - Urgent',1,'URGP','','INTL-IMT','DIRECT PAY',0,'NZ-ANZ-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,1,0,'',0,0,0,0,0,'International Payment',1,'RTGS','','INTL-RTGS','DIRECT PAY',0,'NZ-ANZ-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('AU-ANZ-XML'):
                notesList = this.getNotesMetaData_AU_ANZ_XML();
                break;

            case ('NZ-ANZ-XML'):
                notesList = this.getNotesMetaData_NZ_ANZ_XML();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_AU_ANZ_XML</Name>
				<Source><![CDATA[
    private container getNotesMetaData_AU_ANZ_XML()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['AU-ANZ-XML','AU-DP','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['AU-ANZ-XML','INTL-IMT','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['AU-ANZ-XML','INTL-RTGS','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_NZ_ANZ_XML</Name>
				<Source><![CDATA[
    private container getNotesMetaData_NZ_ANZ_XML()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['NZ-ANZ-XML','NZ-DP','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['NZ-ANZ-XML','INTL-IMT','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['NZ-ANZ-XML','INTL-RTGS','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('AU-ANZ-XML'):
                validationsList = this.getValidationsMetaData_AU_ANZ_XML();
                break;

            case ('NZ-ANZ-XML'):
                validationsList = this.getValidationsMetaData_NZ_ANZ_XML();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_AU_ANZ_XML</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_AU_ANZ_XML()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','AU-DP','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,'2','','32',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','AU-DP','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ID','PmtInf > Dbtr > Id > OrgId > Othr > Id','ID related to bank','15','WOrdPartyId','','',0,0,'','6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','AU-DP','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',0,0,'','9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','AU-DP','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',1,'2','','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','AU-DP','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank',0,'RegistrationNum','','',0,0,'','7',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','AU-DP','','Vendor Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > SWIFT code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift code related to Vendor','9','SWIFTNo','','',1,'2','','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','AU-DP','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,'','7',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','AU-DP','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',1,'2','','32',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','AU-DP','','Vendor bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','',0,0,'','9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','AU-DP','','Invoice number','Accounts payable > Payment journal > New > Select Name > Lines > New > Over view tab > Invoice','PmtInf > CdTrfTxInf > RmtInf > Ustrd','Invoice number related to payment','13','Invoice','','',1,1,'','140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,1,'','140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Bank TownName','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Bank State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > CtrySubDvsn','State related to bank','15','WOrdPartyState','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Bank Country','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',0,0,'','30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',1,'2','','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank',0,'RegistrationNum','','',0,0,'','7',0,0]);        
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Vendor Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > SWIFT code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift code related to Vendor','9','SWIFTNo','','','3','2','','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,'','7',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Vendor Zip/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Zip/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'','16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Vendor TownName','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','TownName related to vendor','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Vendor State','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','State related to vendor','16','WBeneState','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Vendor Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','AU','5',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Address','Address related to vendor','16','WBeneAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Address','Address related to vendor','16','WBeneAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',3,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Vendor bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','',3,0,'','30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-IMT','','Invoice number','Accounts payable > Payment journal > New > Select Name > Lines > New > Over view tab > Invoice','PmtInf > CdTrfTxInf > RmtInf > Ustrd','Invoice number related to payment','13','Invoice','','',1,1,'','140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,1,'','140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Bank TownName','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Bank State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > CtrySubDvsn','State related to bank','15','WOrdPartyState','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Bank Country','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',0,0,'','30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',1,'2','','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank',0,'RegistrationNum','','',0,0,'','7',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Vendor Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > SWIFT code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift code related to Vendor','9','SWIFTNo','','',1,'2','','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,'','7',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',1,1,'','140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Vendor Zip/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Zip/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'','10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Vendor TownName','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','TownName related to vendor','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Vendor State','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','State related to vendor','16','WBeneState','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Vendor Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','AU','5',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Address','Address related to vendor','16','WBeneAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Address','Address related to vendor','16','WBeneAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Vendor bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','',0,'2','','30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-ANZ-XML','INTL-RTGS','','Invoice number','Accounts payable > Payment journal > New > Select Name > Lines > New > Over view tab > Invoice','PmtInf > CdTrfTxInf > RmtInf > Ustrd','Invoice number related to payment','13','Invoice','','',1,1,'','140',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_NZ_ANZ_XML</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_NZ_ANZ_XML()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','NZ-DP','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,'2','','32',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','NZ-DP','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',0,0,'','9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','NZ-DP','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',1,'2','','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','NZ-DP','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank',0,'RegistrationNum','','',0,0,'','6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','NZ-DP','','Vendor Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > SWIFT code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift code related to Vendor','9','SWIFTNo','','',1,'2','','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','NZ-DP','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,'','6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','NZ-DP','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',1,'2','','32',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','NZ-DP','','Vendor bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','',0,0,'','34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','NZ-DP','','Invoice number','Accounts payable > Payment journal > New > Select Name > Lines > New > Over view tab > Invoice','PmtInf > CdTrfTxInf > RmtInf > Ustrd','Invoice number related to payment','13','Invoice','','',1,1,'','140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,1,'','140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Bank TownName','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Bank State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > CtrySubDvsn','State related to bank','15','WOrdPartyState','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Bank Country','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',0,0,'','9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',1,'2','','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank',0,'RegistrationNum','','',0,0,'','6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Vendor Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > SWIFT code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift code related to Vendor','9','SWIFTNo','','',1,'2','','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,'','7',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',1,1,'','140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Vendor Zip/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Zip/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'','10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Vendor TownName','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','TownName related to vendor','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Vendor State','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','State related to vendor','16','WBeneState','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Vendor Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','NZ','5',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Address','Address related to vendor','16','WBeneAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Address','Address related to vendor','16','WBeneAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Vendor bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','',0,0,'','30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-IMT','','Invoice number','Accounts payable > Payment journal > New > Select Name > Lines > New > Over view tab > Invoice','PmtInf > CdTrfTxInf > RmtInf > Ustrd','Invoice number related to payment','13','Invoice','','',1,1,'','140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,1,'','140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Bank TownName','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Bank State','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > CtrySubDvsn','State related to bank','15','WOrdPartyState','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Bank Country','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > DbtrAcct > Id > Othr > Id','Account number related to Bank',0,'AccountNum','','',0,0,'','9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',1,'2','','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank',0,'RegistrationNum','','',0,0,'','6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Vendor Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > SWIFT code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift code related to Vendor','9','SWIFTNo','','',1,'2','','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,'','6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',1,1,'','140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Vendor Zip/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Zip/postal code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZipCode related to vendor','16','WBeneZipPostal','','',1,1,'','10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Vendor TownName','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','TownName related to vendor','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Vendor State','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','State related to vendor','16','WBeneState','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Vendor Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','NZ','5',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Address','Address related to vendor','16','WBeneAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Vendor bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account number related to Vendor','9','AccountNum','','',0,'2','','30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-ANZ-XML','INTL-RTGS','','Invoice number','Accounts payable > Payment journal > New > Select Name > Lines > New > Over view tab > Invoice','PmtInf > CdTrfTxInf > RmtInf > Ustrd','Invoice number related to payment','13','Invoice','','',1,'2','','140',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['AU-ANZ-XML','ChrgBr','Charge bearer']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['AU-ANZ-XML','ClrSysIdCd','Clearing System Id Code']);


        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ChrgBr','Our','DEBT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ChrgBr','Beneficiary','CRED']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ChrgBr','Shared','SHAR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','Austrian Bankleitzahl','ATBLZ']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','Australian Bank State Branch Code(BSB)','AUBSB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','Canadian Payments Association Payment Routing Number','CACPA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','Swiss Clearing Code (BC Code)','CHBCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','CNAPS Identifier','CNAPS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','German Bankleitzahl','DEBLZ']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','Spanish Domestic Interbanking Code','ESNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','UK Domestic Sort Code','GBDSC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','Helenic Bank Identification Code','GRBIC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','Hong Kong Bank Code','HKNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','Irish National Clearing Code','IENCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','Indian Financial System Code','INFSC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','Italian Domestic Identification Code','ITNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','New Zealand National Clearing Code','NZNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','Polish National Clearing Code','PLKNR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','Portuguese National Clearing Code','PTNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','ussian Central Bank Identification Code','UCBC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','United States Routing Number (Fedwire, NACHA)','USABA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','CHIPS Participant Identifier','USPID']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','CHIPS Universal Identifier','USPID']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','ClrSysIdCd','South African National Clearing Code','ZANCC']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('AU-ANZ-XML'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_AU_ANZ_XML();
                break;
            case ('NZ-ANZ-XML'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_NZ_ANZ_XML();
                break;
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_AU_ANZ_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_AU_ANZ_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-ANZ-XML','AU-ANZ-XML','AU-DP','ChrgBr','Charge bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-ANZ-XML','AU-ANZ-XML','INTL-IMT','ChrgBr','Charge bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-ANZ-XML','AU-ANZ-XML','INTL-RTGS','ChrgBr','Charge bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-ANZ-XML','AU-ANZ-XML','INTL-IMT','ClrSysIdCd','Clearing System Id Code',0,'ClrSysIdCd','',0,'','','ClrSysIdCd']);
        
        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_NZ_ANZ_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_NZ_ANZ_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-ANZ-XML','NZ-ANZ-XML','NZ-DP','ChrgBr','Charge bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-ANZ-XML','NZ-ANZ-XML','INTL-IMT','ChrgBr','Charge bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-ANZ-XML','NZ-ANZ-XML','INTL-RTGS','ChrgBr','Charge bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AU-ANZ-XML','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AU-ANZ-XML','*','FormatValidations','*','16','WChargesIndic']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AU-ANZ-XML','*','FormatValidations','*','3','Invoice']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','Btchbkg','Y','Y']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-ANZ-XML','Btchbkg','N','N']);

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['AU-ANZ-XML','Btchbkg','Batch Booking']);

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('AU-ANZ-XML'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('ChrgBr', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
            case ('NZ-ANZ-XML'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('ChrgBr', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>