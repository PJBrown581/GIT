<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_BR_BAI2Reader</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_BR_BAI2Reader extends SKS_BR_ReadParse
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTranTypeCreditDebitFlag</Name>
				<Source><![CDATA[
    public static SKS_BR_BankDebitCredit getTranTypeCreditDebitFlag(int _TranactionType, SKS_BR_FormatId _SKS_BR_FormatId, NoYes _useDefaults = NoYes::No)
    {
        SKS_BR_FileFormatTranMapping locSKS_BR_FileFormatTranMapping;
        SKS_BR_FileFormat locSKS_BR_FileFormat;
    
        //if it's Not use defaults,check and see if it's enabled in the format
        if(!_useDefaults)
        {
            Select firstOnly DebitCreditIdentifier from locSKS_BR_FileFormat
                where locSKS_BR_FileFormat.FormatID == _SKS_BR_FormatId
                && locSKS_BR_FileFormat.CCR_IsCCRFormat == NoYes::No;   /// SKS_FDD_13903 - To make sure that its picking only non-CCR format
            //if it is enabled, check the table and see if there is an existing entry.
            if(locSKS_BR_FileFormat.DebitCreditIdentifier == NoYes::Yes)
            {
                select firstOnly locSKS_BR_FileFormatTranMapping
                            where locSKS_BR_FileFormatTranMapping.FormatID == _SKS_BR_FormatId
                            && locSKS_BR_FileFormatTranMapping.FileTranType == int2str(_TranactionType)
                            && locSKS_BR_FileFormatTranMapping.CCR_IsCCRFormat == NoYes::No;   /// SKS_FDD_13903 - To make sure that its picking only non-CCR format
                //if there is an exisit entry, return it, otherwise, let processinf fall back into the default values path
                if(locSKS_BR_FileFormatTranMapping)
                {
                    return locSKS_BR_FileFormatTranMapping.BankDebitCredit;
                
                }
            }
        }
    
        //get default values
        if ((_TranactionType > 400 && _TranactionType < 700) ||
            (_TranactionType >= 960 && _TranactionType <= 999) ||
            _TranactionType == 760 || _TranactionType == 868)
        {
            return SKS_BR_BankDebitCredit::BankDebit;
        }
        return SKS_BR_BankDebitCredit::BankCredit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>conConvertRecordType01</Name>
				<Source><![CDATA[
    protected container conConvertRecordType01()
    {
        //THIS READ IS WRITTEN TO COMPLY WIHT THE SAMPLE BAI2 FILE
        //AS FOUND ON PAGES 12,13 & 20,21 OF THE SPEC
        //SAMPLE FROM PAGE 13:
        //01,1220999999,123456789,040521,0200,1,55,,2/
        //
        //SAMPLE FROM PAGE 21
        //16,115,100000000,S,4000000,1000000/
        //88,AX13612,B096132,AMALGAMATED CORP. LOCKBOX
        //88,DEPOSIT-MISC. RECIEVABLES
        //THIS IS THE SAME FOUND ON PAGE 21 IN IN THE "88 - CONTINUATION
        //RECORD" SECTION
        int intNumberOfHighLevelFields = 9;
        int intCounter = 1;
        container conReturnValue;
        ;
    
        while(!this.boolStringIsEmpty(currentRecord))
        {
            for(intCounter = 1; intCounter <= intNumberOfHighLevelFields; intCounter++)
            {
                conReturnValue += this.strGetField();
                this.strRemoveCurrentField();
            }
    
        }
        return conReturnValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>conConvertRecordType02</Name>
				<Source><![CDATA[
    protected container conConvertRecordType02()
    {
        //THIS READ IS WRITTEN TO COMPLY WIHT THE SAMPLE BAI2 FILE
        //AS FOUND ON PAGES 15,14 & 20,21 OF THE SPEC
        //SAMPLE FROM PAGE 14:
        //02,031001234,122099999,1,040620,2359,,2/
        //
        //SAMPLE FROM PAGE 21
        //16,115,100000000,S,4000000,1000000/
        //88,AX13612,B096132,AMALGAMATED CORP. LOCKBOX
        //88,DEPOSIT-MISC. RECIEVABLES
        //THIS IS THE SAME FOUND ON PAGE 21 IN IN THE "88 - CONTINUATION
        //RECORD" SECTION
        int intNumberOfHighLevelFields = 8;
        int intCounter = 1;
        container conReturnValue;
        ;
    
        while(!this.boolStringIsEmpty(currentRecord))
        {
            for(intCounter = 1; intCounter <= intNumberOfHighLevelFields; intCounter++)
            {
                conReturnValue += this.strGetField();
                this.strRemoveCurrentField();
            }
    
        }
        return conReturnValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>conConvertRecordType03</Name>
				<Source><![CDATA[
    protected container conConvertRecordType03()
    {
        //THIS READ IS WRITTEN TO COMPLY WIHT THE SAMPLE BAI2 FILE
        //AS FOUND ON PAGES 15,16, 17 & 20,21 OF THE SPEC
        //*********************************************************
        //IT HAS A MIN OF 7 FIELDS(BLANK,0,1,2,Z) BUT, DEPENDING
        //ON THE FUND TYPE, COULD HAVE 9(V), 10(S), OR ANY EVEN
        //NUMBER ABOVE TEN(D).
        //*********************************************************
        //SAMPLE FROM PAGE 14:
        //03,0975312468,,010,500000,,,190,70000000,4,0/
        //
        //DEV SAMPLE (IF YOU DON'T UNDERSTAND THIS, BEST STUDY MORE BEFORE CONTINUING)
        //03,0975312468,,,+500000,,,190,70000000,,D,10,1,100,2,130,3,140,4,200,5,210,5,220,6,399,7,415,8,496,9,525,10,1100/
        //
        //SAMPLE FROM PAGE 21
        //16,115,100000000,S,4000000,1000000/
        //88,AX13612,B096132,AMALGAMATED CORP. LOCKBOX
        //88,DEPOSIT-MISC. RECIEVABLES
        //THIS IS THE SAME FOUND ON PAGE 21 IN IN THE "88 - CONTINUATION
        //RECORD" SECTION
    
        int intNumberOfHighLevelFields = 3;
        int intCounter = 1;
        container conReturnValue;
        ;
    
        //Read initial three fields
        for(intCounter = 1; intCounter <= intNumberOfHighLevelFields; intCounter++)
        {
            conReturnValue += this.strGetField();
            this.strRemoveCurrentField();
        }
    
        //this will read ANY NUMBER OF OCCURANCES
        //of the typecode groupings
        conReturnValue += this.conTypeCodeRead();
    
        return conReturnValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>conConvertRecordType16</Name>
				<Source><![CDATA[
    protected container conConvertRecordType16()
    {
        //THIS READ IS WRITTEN TO COMPLY WIHT THE SAMPLE BAI2 FILE
        //AS FOUND ON PAGES 20 & 21 OF THE SPEC
        //SAMPLE FROM PAGE 20:
        //16,165,1500000,1,DD1620,,DEALER PAYMENTS
        //
        //DEV SAMPLE
        //16,165,1500000,D,10,1,100,2,130,3,140,4,200,5,210,5,220,6,399,7,415,8,496,9,525,10,1100,DD1620,,DEALER PAYMENTS
        //
        //SAMPLE FROM PAGE 21
        //16,115,100000000,S,4000000,1000000/
        //88,AX13612,B096132,AMALGAMATED CORP. LOCKBOX
        //88,DEPOSIT-MISC. RECIEVABLES
        //THIS IS THE SAME FOUND ON PAGE 21 IN IN THE "88 - CONTINUATION
        //RECORD" SECTION
        int intNumberOfHighLevelFields = 7;
        int intCounter = 1;
        container conReturnValue;
        ;
    
        while(!this.boolStringIsEmpty(currentRecord))
        {
            for(intCounter = 1; intCounter <= intNumberOfHighLevelFields; intCounter++)
            {
    
                if (intCounter != 7)
                {
                    conReturnValue += this.strGetField();
                    this.strRemoveCurrentField();
                    if (intCounter == 4)
                        conReturnValue = this.conFundTypeRead(conPeek(conReturnValue,conLen(conReturnValue)), conReturnValue);
                }
                else
                {
                    While( strStartsWith(currentRecord,'/') || strStartsWith(currentRecord,','))//if it starts with a delimiter
                            currentRecord = subStr(currentRecord,2,strLen(currentRecord) - 1);//strip the delimiter
    
                    conReturnValue += strRTrim(currentRecord);
    
                    currentRecord = '';
                }
    
    
            }
    
        }
        return conReturnValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>conConvertRecordType49</Name>
				<Source><![CDATA[
    protected container conConvertRecordType49()
    {
        //CODED TO SPEC BASED ON BAI2 PAGE 20(RECORD TYPE 88), 21,22(RECORD TYPE 49)
        //SAMPLE FORM PAGE 22
        //49,18650000,3/
        //THIS CAN WRAP TO AN 88 LINE.
    
        int intNumberOfHighLevelFields = 3;
        int intCounter = 1;
        container conReturnValue;
        ;
    
        while(!this.boolStringIsEmpty(currentRecord))
        {
            for(intCounter = 1; intCounter <= intNumberOfHighLevelFields; intCounter++)
            {
                if(intCounter == 2)//the second field might have a plus or minus.  Strip the plus.
                    conReturnValue += strRem(this.strGetField(), '+');
                else//any other field, import.
                    conReturnValue += this.strGetField();
                this.strRemoveCurrentField();
            }
    
        }
        return conReturnValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>conConvertRecordType98</Name>
				<Source><![CDATA[
    protected container conConvertRecordType98()
    {
        //CODED TO BAI2 SPEC PAGES 22,23(RECORD TYPE 98) AND 20,21(CONTINUATION RECORD)
        //SAMPLE FROM PAGE 23
        //98,11800000,2,6/
        //
        //REMINDER -- ANY RECORD TYPE CAN WRAP TO AN 88 LINE
        //THIS IS VALID
        //98,11800000,
        //88,2,
        //88,6/
    
        int intNumberOfHighLevelFields = 4;
        int intCounter = 1;
        container conReturnValue;
        ;
    
        while(!this.boolStringIsEmpty(currentRecord))
        {
            for(intCounter = 1; intCounter <= intNumberOfHighLevelFields; intCounter++)
            {
                if(intCounter == 2)//the second field might have a plus or minus.  Strip the plus.
                    conReturnValue += strRem(this.strGetField(), '+');
                else//any other field, import.
                    conReturnValue += this.strGetField();
                this.strRemoveCurrentField();
            }
    
        }
        return conReturnValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>conConvertRecordType99</Name>
				<Source><![CDATA[
    protected container conConvertRecordType99()
    {
         //CODED TO BAI2 SPEC PAGES 23,24(RECORD TYPE 99) AND 20,21(CONTINUATION RECORD)
        //SAMPLE FROM PAGE 24
        //99,1215440000,4,36/
        //
        //REMINDER -- ANY RECORD TYPE CAN WRAP TO AN 88 LINE
        //THIS IS VALID
        //99,1215440000,
        //88,4,
        //88,36/
    
        int intNumberOfHighLevelFields = 4;
        int intCounter = 1;
        container conReturnValue;
        ;
    
        while(!this.boolStringIsEmpty(currentRecord))
        {
            for(intCounter = 1; intCounter <= intNumberOfHighLevelFields; intCounter++)
            {
                if(intCounter == 2)//the second field might have a plus or minus.  Strip the plus.
                    conReturnValue += strRem(this.strGetField(), '+');
                else//any other field, import.
                    conReturnValue += this.strGetField();
                this.strRemoveCurrentField();
            }
    
        }
        return conReturnValue;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>