<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_ES_BBVA_SIT_1366</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_ES_BBVA_SIT_1366 extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_ES_BBVA_SIT_1366 extends SKS_EFT_Format
{
    #define.FormatVersion('20221115')
    #define.BRNH_PMT('BRNH-PMT')
    #define.BNC('BNC')
    #define.CIE('CIE')
    #define.INT_SWIFT('INT-SWIFT')
    #define.MXP('MXP')
    #define.SPEI_MXP('SPEI-MXP')    
    #define.SPID('SPID')        //SKS#DevOps:16641
    int recordCount, countOfA, countOfB, paymentCount;
    AmountMST totalPaymentAmt;
    int MXPcountOfA,USDcountOfA,EURcountOfA,CADcountOfA,CHFcountOfA,GBPcountOfA,SEKcountOfA,JPYcountOfA;
    int MXPcountOfB,USDcountOfB,EURcountOfB,CADcountOfB,CHFcountOfB,GBPcountOfB,SEKcountOfB,JPYcountOfB;
    AmountMST MXPtotalPaymentAmtA,USDtotalPaymentAmtA,EURtotalPaymentAmtA,CADtotalPaymentAmtA,CHFtotalPaymentAmtA,GBPtotalPaymentAmtA,SEKtotalPaymentAmtA,JPYtotalPaymentAmtA;
    AmountMST MXPtotalPaymentAmtB,USDtotalPaymentAmtB,EURtotalPaymentAmtB,CADtotalPaymentAmtB,CHFtotalPaymentAmtB,GBPtotalPaymentAmtB,SEKtotalPaymentAmtB,JPYtotalPaymentAmtB;
    str cur;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;

        //  Header record
        this.rec_Header();

        select COUNT(RecId) from tmpSKS_EFT_FileDetail
            where
                tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary;

        paymentCount = any2Int(tmpSKS_EFT_FileDetail.RecId);

        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();   
            
            mSKS_EFT_FileDetail_BankAccount = SKS_EFT_FileDetail_BankAccount::find(mSKS_EFT_FileDetail.RecId);

            // Detail record
            this.rec_Detail();   
            
            if(paymentCount == 1)
            {
                // Detail record
                this.rec_Trailer();
            }
            paymentCount--;
            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Header</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_Header
    /// </summary>
    /// <returns>true</returns>
    public boolean rec_Header()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Description                                     Length      Position
        //1	    Record indication			                        1	    1  - 1
        //2	    Contract Number				                        9	    2  - 10
        //3	    Send date					                        10	    11 - 20
        //4	    Third party validation type	                        2	    21 - 22
        //5	    File key					                        30	    23 - 52
        //6	    Response code				                        2	    53 - 54
        //7	    Response code description	                        20	    55 - 74
        //8	    Channel						                        3	    75 - 77
        //9	    Charge account				                        35	    78 - 112
        //10	Contract currency			                        3	    113- 115
        //11	FILLER						                        1251    116- 1366
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str contactNum, validationType, fileKey;

        //1	    Record indication			                        1	    1  - 1
        sb.Append('H');

        //2	    Contract Number				                        9	    2  - 10
        contactNum = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ContactNum', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        sb.Append(SKS_PP_StringFormats::strFill(9, contactNum, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //3	    Send date					                        10	    11 - 20
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate, DateSeparator::Hyphen));

        //4	    Third party validation type	                        2	    21 - 22
        validationType = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ValidationType', mSKS_EFT_FileDetail.RecId));
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BNC)
        {
            sb.Append('01');
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(2, validationType, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        fileKey  = strAlpha(strUpr(mSKS_EFT_File.FileName));            //SKS#DevOps:18007
        //5	    File key					                        30	    23 - 52
        sb.Append(SKS_PP_StringFormats::strFill(30, subStr(fileKey, 1, strLen(fileKey)-3), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //6	    Response code				                        2	    53 - 54
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //7	    Response code description	                        20	    55 - 74
        sb.Append(SKS_PP_StringFormats::strFill(20, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //8	    Channel						                        3	    75 - 77
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //9	    Charge account				                        35	    78 - 112
        str value       = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Chargeaccount', mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookupBank));
        if(value=='Y') //DevOps18387
        {
            sb.Append(SKS_PP_StringFormats::strFill(35, mSKS_EFT_FileDetail.BankBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        //10	Contract currency			                        3	    113- 115
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //11	FILLER						                        1251    116- 1366
        sb.Append(SKS_PP_StringFormats::strFill(1251, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Detail</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_Detail
    /// </summary>
    /// <returns>true</returns>
    public boolean rec_Detail()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Description                                                 Length      Position
        //1	    Record indication					                            1	    1 - 1
        //2	    Instruction							                            1	    2 - 2
        //3	    Document type						                            1	    3 - 3
        //4	    Reference							                            20	    4 - 23
        //5	    Third party code or Payment concept						        30	    24 - 53
        //6	    Payment type						                            3	    54 - 56
        //7	    Operation code 						                            1	    57 - 57
        //8	    Charge account						                            20	    58 - 77
        //9	    FILLER								                            15	    78 - 92
        //10	Numeric Reference Or Personalized DEBIT/ CONCEPT legend 	    25	    93 - 117
        //11	Payment motive or Personalized DEBIT/ EXTENDED              	37	    118 - 154
        //      REFERENCE legend
        //12	FILLER								                            15	    155 - 169
        //13	Personalized CREDIT/ CONCEPT legend	                            25	    170 - 194
        //14	CIE service number concept or		                            37	    195 - 231
        //      Personalized CREDIT/EXTENDED REFERENCE legend.
        //15	Fiscal receipt						                            1	    232 - 232
        //16	FILLER								                            8	    233 - 240
        //17	Account type						                            2	    241 - 242
        //18	Credit account						                            35	    243 - 277
        //19	Beneficiary's name or Account holder's name 				    40	    278 - 317
        //20	First beneficiary's ID Code			                            1	    318 - 318
        //21	First beneficiary's ID Number		                            30	    319 - 348
        //22	Second beneficiary's name			                            40	    349 - 388
        //23	Second beneficiary's ID Code		                            1	    389 - 389
        //24	Second beneficiary's ID Number		                            30	    390 - 419
        //25	Transfer currency					                            3	    420 - 422
        //26	BIC code							                            11	    423 - 433
        //27	ABA code							                            9	    434 - 442
        //28	Document code						                            2	    443 - 444
        //29	Aggregate amount			                            (13.2)	15	    445 - 459
        //30	FILLER Document's V.A.T 	                            (13.2)	15	    460 - 474
        //31	Confirmation type					                            2	    475 - 476
        //32	Email or cellphone					                            50	    477 - 526
        //33	Interest periodicity				                            1	    527 - 527
        //34	FILLER						                            (2.6)	8	    528 - 535
        //35	FILLER						                            (2.2)	4	    536 - 539
        //36	Payment date						                            10	    540 - 549
        //37	Maturity date						                            10	    550 - 559
        //38	Grace period						                            10	    560 - 569
        //39	Expiry date							                            10	    570 - 579
        //40	Document date						                            10	    580 - 589
        //41	Recurring payment indicator			                            1	    590 - 590
        //42	FILLER								                            1	    591 - 591
        //43	End date for a recurring payment	                            10	    592 - 601
        //44	Additional data length  or Payment detail                        3	    602 - 604
        //45	Additional data						                            700	    605 - 1304
        //46	FILLER								                            10	    1305 - 1314
        //47	FILLER								                            10	    1315 - 1324
        //48	Document's status code				                            2	    1325 - 1326
        //49	Document status code description 	                            30	    1327 - 1356
        //50	Date of the last change 			                            10	    1357 - 1366
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str instruction, paymentConcept, operationcode, CIEservicenumber;
        str accountType, documentCode, confirmationtype;
        str invString, address, paymReason, paymCurrencyCode;
        LedgerJournalTrans      lLedgerJournalTrans;
        LogisticsPostalAddress  lRemittancePostalAddress;
        int num;

        recordCount++;

        select * from lRemittancePostalAddress join  RemittanceAddress from lLedgerJournalTrans
                    where lRemittancePostalAddress.Location == lLedgerJournalTrans.RemittanceLocation
                        && lLedgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;

        //1	    Record indication					                            1	    1 - 1
        sb.Append('D');

        //2	    Instruction							                            1	    2 - 2
        instruction = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Instruction', mSKS_EFT_FileDetail.RecId));
        sb.Append(SKS_PP_StringFormats::strFill(1, instruction, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        if(instruction == 'A')
        {
            countOfA++;
            if( mSKS_EFT_FileDetail.PaymentCurrencyCode=='MXN')
            {
                MXPcountOfA++;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='USD')
            {
                USDcountOfA++;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='EUR')
            {
                EURcountOfA++;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='CAD')
            {
                CADcountOfA++;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='CHF')
            {
                CHFcountOfA++;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='GBP')
            {
                GBPcountOfA++;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='SEK')
            {
                SEKcountOfA++;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='JPY')
            {
                JPYcountOfA++;
            }

        }
        else
        {
            countOfB++;
            if( mSKS_EFT_FileDetail.PaymentCurrencyCode=='MXN')
            {
                MXPcountOfB++;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='USD')
            {
                USDcountOfB++;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='EUR')
            {
                EURcountOfB++;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='CAD')
            {
                CADcountOfB++;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='CHF')
            {
                CHFcountOfB++;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='GBP')
            {
                GBPcountOfB++;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='SEK')
            {
                SEKcountOfB++;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='JPY')
            {
                JPYcountOfB++;
            }
        }

        //3	    Document type						                            1	    3 - 3
        sb.Append('P');

        //4	    Reference							                            20	    4 - 23
        sb.Append(SKS_PP_StringFormats::strFill(20, mSKS_EFT_FileDetail.PaymentReference, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //5	    Third party code or Payment concept						        30	    24 - 53
        paymentConcept = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PaymentConcept', mSKS_EFT_FileDetail.RecId));
        if(mSKS_EFT_FileDetail.PaymSpec == #SPEI_MXP || mSKS_EFT_FileDetail.PaymSpec==#BNC)
        {
            sb.Append(SKS_PP_StringFormats::strFill(30, mSKS_EFT_FileDetail.AccountNum, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(30, paymentConcept, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        //6	    Payment type						                            3	    54 - 56
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BRNH_PMT)
        {
            sb.Append(SKS_PP_StringFormats::strFill(3, 'PDV', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(3, 'PDA', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        //7	    Operation code 						                            1	    57 - 57        
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #BRNH_PMT:
                operationcode = '1';
                break;
            case #BNC:
                operationcode = '2';
                break;
            case #CIE:
                operationcode = '3';
                break;
            case #INT_SWIFT:
                operationcode = '4';
                break;
            case #MXP:
                operationcode = '5';
                break;
            case #SPEI_MXP:
                operationcode = '6';
                break;
            case #SPID:         //SKS#DevOps:16641
                operationcode = '9';
                break;
        }
        sb.Append(SKS_PP_StringFormats::strFill(1, operationcode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //8	    Charge account						                            20	    58 - 77
        sb.Append(SKS_PP_StringFormats::strFill(20, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //9	    FILLER								                            15	    78 - 92
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CIE)         //SKS#DevOsp:17052
        {
            sb.Append(SKS_PP_StringFormats::strFill(25, mSKS_EFT_FileDetail.PaymentReference, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BNC ||  mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SPEI_MXP)
        {
            num = strLen(mSKS_EFT_FileDetail.PaymentVoucher);
            sb.Append(SKS_PP_StringFormats::strFill(25,'0'+ subStr(mSKS_EFT_FileDetail.PaymentVoucher,num-5,num), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(25, subStr(mSKS_EFT_FileDetail.AccountNum,1, 7), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        //11	Payment motive or Personalized DEBIT/ EXTENDED              	37	    118 - 154
        //      REFERENCE legend
        sb.Append(SKS_PP_StringFormats::strFill(37, paymentConcept, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
                
        str value       = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Chargeaccount', mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookupBank));
      
            //12	ZIP								                            15	    155 - 169
        if(mSKS_EFT_FileDetail.PaymSpec == #SPID && strUpr(value)== 'Y')//DevOps18502
        {
            sb.Append(SKS_PP_StringFormats::strFill(15, mSKS_EFT_FileDetail_VendAddress.BeneZipPostal, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            //12	FILLER								                            15	    155 - 169
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        //13	Personalized CREDIT/ CONCEPT legend	                            25	    170 - 194
        sb.Append(SKS_PP_StringFormats::strFill(25, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //14	CIE service number concept or		                            37	    195 - 231
        //      Personalized CREDIT/EXTENDED REFERENCE legend.
        CIEservicenumber = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CIEServiceNumber', mSKS_EFT_FileDetail.RecId));

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CIE && CIEservicenumber)
        {
            sb.Append(SKS_PP_StringFormats::strFill(37, CIEservicenumber, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(37, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        //15	Fiscal receipt						                            1	    232 - 232
        sb.Append('N');

        //16	FILLER								                            8	    233 - 240
        sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //17	Account type						                            2	    241 - 242
        accountType = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('AccountType', mSKS_EFT_FileDetail.RecId));
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SPID)        //SKS#DevOps:16641
        {
            sb.Append('40');
        }
        else if(accountType)
        {
            sb.Append(SKS_PP_StringFormats::strFill(2, accountType, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        //18	Credit account						                            35	    243 - 277
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BNC &&  mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SPEI_MXP)
        {
            if(mSKS_EFT_FileDetail.PaymSpec == #SPID && strUpr(value)== 'Y')
            {
                sb.Append(SKS_PP_StringFormats::strFill(35, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(35, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            }
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));            
        }        

        //19	Beneficiary's name or Account holder's name 				    40	    278 - 317
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BNC ||  mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SPEI_MXP)
        {
            sb.Append(SKS_PP_StringFormats::strFill(40, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(40, this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        //20	First beneficiary's ID Code			                            1	    318 - 318               
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BRNH_PMT)
        {
            sb.Append(SKS_PP_StringFormats::strFill(1, 'M', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));            
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        //21	First beneficiary's ID Number		                            30	    319 - 348
        sb.Append(SKS_PP_StringFormats::strFill(30, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //22	Second beneficiary's name			                            40	    349 - 388
        sb.Append(SKS_PP_StringFormats::strFill(40, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //23	Second beneficiary's ID Code		                            1	    389 - 389
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BRNH_PMT)
        {
            sb.Append(SKS_PP_StringFormats::strFill(1, 'M', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {            
            sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        //24	Second beneficiary's ID Number		                            30	    390 - 419
        sb.Append(SKS_PP_StringFormats::strFill(30, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        paymCurrencyCode = mSKS_EFT_FileDetail.PaymentCurrencyCode;

        if(paymCurrencyCode == 'MXN')
        {
            paymCurrencyCode = 'MXP';
        }
        sb.Append(SKS_PP_StringFormats::strFill(3, paymCurrencyCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //26	BIC code							                            11	    423 - 433
        //27	ABA code							                            9	    434 - 442
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BNC)
        {
            sb.Append(SKS_PP_StringFormats::strFill(11, mSKS_EFT_FileDetail.DepSwiftNo, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            sb.Append(SKS_PP_StringFormats::strFill(9, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(11, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            sb.Append(SKS_PP_StringFormats::strFill(9, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        
        //28	Document code						                            2	    443 - 444
        documentCode = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DocumentCode', mSKS_EFT_FileDetail.RecId));
        sb.Append(SKS_PP_StringFormats::strFill(2, documentCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //29	Aggregate amount			                            (13.2)	15	    445 - 459         
        sb.Append(SKS_PP_StringFormats::strMoney(-1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 15));
        totalPaymentAmt += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;

        if(instruction =='A')
        {
            if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='USD')
            {
                USDtotalPaymentAmtA += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='MXN')
            {
                MXPtotalPaymentAmtA += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='EUR' )
            {
                EURtotalPaymentAmtA += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='CAD')
            {
                CADtotalPaymentAmtA += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='CHF')
            {
                CHFtotalPaymentAmtA += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='GBP')
            {
                GBPtotalPaymentAmtA += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='SEK')
            {
                SEKtotalPaymentAmtA += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='JPY')
            {
                JPYtotalPaymentAmtA += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            }
        }
        else if(instruction =='B')
        {
            if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='USD')
            {
                USDtotalPaymentAmtB += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='MXN')
            {
                MXPtotalPaymentAmtB += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='EUR')
            {
                EURtotalPaymentAmtB += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            }
            
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='CAD' )
            {
                CADtotalPaymentAmtB += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='CHF')
            {
                CHFtotalPaymentAmtB += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='GBP')
            {
                GBPtotalPaymentAmtB += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='SEK')
            {
                SEKtotalPaymentAmtB += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            }
            else if(mSKS_EFT_FileDetail.PaymentCurrencyCode=='JPY')
            {
                JPYtotalPaymentAmtB += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            }
        }

        //30	FILLER Document's V.A.T 	                            (13.2)	15	    460 - 474
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //31	Confirmation type					                            2	    475 - 476
        confirmationtype = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ConfirmationType', mSKS_EFT_FileDetail.RecId));
        sb.Append(SKS_PP_StringFormats::strFill(2, confirmationtype, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //32	Email or cellphone					                            50	    477 - 526
        if(confirmationtype == '01')
        {
            sb.Append(SKS_PP_StringFormats::strFill(50, mSKS_EFT_FileDetail_VendAddress.Locator, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(50, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        //33	Interest periodicity				                            1	    527 - 527
        sb.Append(SKS_PP_StringFormats::strFill(1, 'N', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //34	FILLER						                            (2.6)	8	    528 - 535
        sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //35	FILLER						                            (2.2)	4	    536 - 539
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //36	Payment date						                            10	    540 - 549
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.PaymentTransDate, DateSeparator::Hyphen));

        //37	Maturity date						                            10	    550 - 559
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BRNH_PMT)
        {
            sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.PaymentTransDate, DateSeparator::Hyphen));
        }
        else
        {
            sb.Append('0001-01-01');
        }

        //38	Grace period						                            10	    560 - 569
        sb.Append('0001-01-01');

        //39	Expiry date							                            10	    570 - 579
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BRNH_PMT)
        {
            sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.PaymentTransDate, DateSeparator::Hyphen));
        }
        else
        {
            sb.Append('0001-01-01');
        }

        //40	Document date						                            10	    580 - 589
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.PaymentTransDate, DateSeparator::Hyphen));

        //41	Recurring payment indicator			                            1	    590 - 590
        sb.Append('N');

        //42	FILLER								                            1	    591 - 591
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //43	End date for a recurring payment	                            10	    592 - 601
        sb.Append('0001-01-01');

        //44	Additional data length  or Payment detail                        3	    602 - 604
        sb.Append('700');

        //45	Additional data						                            700	    605 - 1304
        invString = this.getInvoiceNbrs();
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SPID)        //SKS#DevOps:16641
        {
            sb.Append(SKS_PP_StringFormats::strFill(140, invString, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            //Provider Name
            sb.Append(SKS_PP_StringFormats::strFill(120, this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            //City
            sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneCity), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            //Address
            address = subStr(strLRTrim(strFmt('%1 %2 %3', mSKS_EFT_FileDetail_VendAddress.BeneAddr, lRemittancePostalAddress.StreetNumber, LogisticsAddressCountryRegion::findByISOCode(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId).displayName())), 1, 55);     //SKS#DevOps:17052
            sb.Append(SKS_PP_StringFormats::strFill(85, this.CharacterReplacement(address), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            sb.Append(SKS_PP_StringFormats::strFill(2, '01', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            paymReason = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PaymentReason', mSKS_EFT_FileDetail.RecId));
            sb.Append(SKS_PP_StringFormats::strFill(40, paymReason, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            sb.Append(SKS_PP_StringFormats::strFill(2, '08', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            sb.Append(SKS_PP_StringFormats::strFill(39, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            sb.Append(SKS_PP_StringFormats::strFill(2, '07', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            sb.Append(SKS_PP_StringFormats::strFill(235, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INT_SWIFT)        //SKS#DevOps:17052
        {
            sb.Append(SKS_PP_StringFormats::strFill(140, invString, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));    

            //Provider Name
            sb.Append(SKS_PP_StringFormats::strFill(120, this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            //City
            sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneCity), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            //Address
            address = subStr(strLRTrim(strFmt('%1 %2 %3', mSKS_EFT_FileDetail_VendAddress.BeneAddr, lRemittancePostalAddress.StreetNumber, LogisticsAddressCountryRegion::findByISOCode(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId).displayName())), 1, 55);     //SKS#DevOps:17052
            sb.Append(SKS_PP_StringFormats::strFill(85, this.CharacterReplacement(address), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            sb.Append(SKS_PP_StringFormats::strFill(40, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            sb.Append(SKS_PP_StringFormats::strFill(39, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            sb.Append(SKS_PP_StringFormats::strFill(235, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else 
        {
            sb.Append(SKS_PP_StringFormats::strFill(700, invString, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        //46	FILLER								                            10	    1305 - 1314
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //47	FILLER								                            10	    1315 - 1324
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //48	Document's status code				                            2	    1325 - 1326
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //49	Document status code description 	                            30	    1327 - 1356
        sb.Append(SKS_PP_StringFormats::strFill(30, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //50	Date of the last change 			                            10	    1357 - 1366
        sb.Append('0001-01-01');
        
        cur = cur + mSKS_EFT_FileDetail.PaymentCurrencyCode;
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Trailer</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_Trailer
    /// </summary>
    /// <returns>true</returns>
    public boolean rec_Trailer()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Description                                             Length      Position
        //1	    Record indication	 								    1	        1 - 1
        //2	    Number of registers in MXP       (mexican peso)		    10	        2 - 11
        //3	    Total amount of registers in MXP					    15	        12 - 26
        //4	    Number of dismisses in MXP							    10	        27 - 36
        //5	    Total amount of dismisses in MXP					    15	        37 - 51
        //6	    FILLER Number of registers with changes				    10	        52 - 61
        //7	    FILLER Total amount of registers with changes			15	        62 - 76
        //8	    Number of operations rejected Registers in MXP			10	        77 - 86
        //9	    Total amount of operations rejected Registers in MXP	15	        87 - 101
        //10	Number of operations rejected Dismisses in MXP			10	        102 - 111
        //11	Total amount of operations rejected Dismisses in MXP	15	        112 - 126
        //12	FILLER Number of registers with changes rejected		10	        127 - 136
        //13	FILLER Total amount of registers with changes rejected	15	        137 - 151
        //14	FILLER Number of accepted record collection registers	10	        152 - 161
        //15	FILLER Total amount of accepted record 					15	        162 - 176
        //      collection registers
        //16	Number of accepted MXP registers						10	        177 - 186
        //17	Total amount of accepted MXP registers.					15	        187 - 201
        //18	Number of accepted MXP dismisses						10	        202 - 211
        //19	Total amount of accepted MXP dismisses					15	        212 - 226
        //20	FILLER Number of rejected payment record registers.		10	        227 - 236
        //21	FILLER Total amount of rejected                 		15	        237 - 251
        //      payment record registers.
        //22	Number of registers in USD (american dollars)			10	        252 - 261
        //23	Total amount of registers in USD						15	        262 - 276
        //24	Number of dismisses in USD								10	        277 - 286
        //25	Total amount of dismisses in USD						15	        287 - 301
        //26	Number of accepted USD registers						10	        302 - 311
        //27	Total amount of accepted USD registers.					15	        312 - 326
        //28	Number of operations rejected Registers in USD			10	        327 - 336
        //29	Total amount of operations rejected Registers in USD	15		    337 - 351
        //30	Number of accepted USD dismisses						10	        352 - 361
        //31	Total amount of accepted USD dismisses					15	        362 - 376
        //32	Number of operations rejected Dismisses in USD			10	        377 - 386
        //33	Total amount of operations rejected Dismisses in USD	15	        387 - 401
        //34	Number of registers in EUR (euros)						10	        402 - 411
        //35	Total amount of registers in EUR						15	        412 - 426
        //36	Number of dismisses in EUR								10	        427 - 436
        //37	Total amount of dismisses in EUR						15	        437 - 451
        //38	Number of accepted EUR registers						10	        452 - 461
        //39	Total amount of accepted EUR registers.					15	        462 - 476
        //40	Number of operations rejected Registers in EUR			10	        477 - 486
        //41	Total amount of rejected Registers in EUR				15	        487 - 501
        //42	Number of accepted EUR dismisses						10	        502 - 511
        //43	Total amount of accepted EUR dismisses					15	        512 - 526
        //44	Number of operations rejected Dismisses in EUR			10	        527 - 536
        //45	Total amount of operations rejected Dismisses in EUR	15	        537 - 551
        //46	Number of registers in CAD (canadian dollar)			10	        552 - 561
        //47	Total amount of registers in CAD						15	        562 - 576
        //48	Number of dismisses in CAD								10	        577 - 586
        //49	Total amount of dismisses in CAD						15	        587 - 601
        //50	Number of accepted CAD registers						10	        602 - 611
        //51	Total amount of accepted CAD registers.					15	        612 - 626
        //52	Number of operations rejected Registers in CAD			10	        627 - 636
        //53	Total amount of rejected Registers in CAD				15	        637 - 651
        //54	Number of accepted CAD dismisses						10	        652 - 661
        //55	Total amount of accepted CAD dismisses					15	        662 - 676
        //56	Number of operations rejected Dismisses in CAD			10	        677 - 686
        //57	Total amount of operations rejected Dismisses in CAD	15	        687 - 701
        //58	Number of registers in CHF (swiss franc)				10	        702 - 711
        //59	Total amount of registers in CHF						15	        712 - 726
        //60	Number of dismisses in CHF								10	        727 - 736
        //61	Total amount of dismisses in CHF						15	        737 - 751
        //62	Number of accepted CHF registers						10	        752 - 761
        //63	Total amount of accepted CHF registers.					15	        762 - 776
        //64	Number of operations rejected Registers in CHF			10	        777 - 786
        //65	Total amount of rejected Registers in CHF				15	        787 - 801
        //66	Number of accepted CHF dismisses						10	        802 - 811
        //67	Total amount of accepted CHF dismisses					15	        812 - 826
        //68	Number of operations rejected Dismisses in CHF			10	        827 - 836
        //69	Total amount of operations rejected Dismisses in CHF	15	        837 - 851
        //70	Number of registers in GBP (british pound)				10	        852 - 861
        //71	Total amount of registers in GBP						15	        862 - 876
        //72	Number of dismisses in GBP								10	        877 - 886
        //73	Total amount of dismisses in GBP						15	        887 - 901
        //74	Number of accepted GBP registers						10	        902 - 911
        //75	Total amount of registers in GBP accepted in the system	15	        912 - 926
        //76	Number of registers rejected in GBP currency			10	        927 - 936
        //77	Total amount of rejected Registers in GBP				15	        937 - 951
        //78	Number of accepted GBP dismisses						10	        952 - 961
        //79	Total amount of accepted GBP dismisses					15	        962 - 976
        //80	Number of operations rejected Dismisses in GBP			10	        977 - 986
        //81	Total amount of operations rejected Dismisses in GBP	15	        987 - 1001
        //82	Number of registers in SEK (swedish krona)				10	        1002 - 1011
        //83	Total amount of registers in SEK						15	        1012 - 1026
        //84	Number of dismisses in SEK								10	        1027 - 1036
        //85	Total amount of dismisses in SEK						15	        1037 - 1051
        //86	Number of accepted SEK registers						10	        1052 - 1061
        //87	Total amount of registers in SEK accepted in the system	15	        1062 - 1076
        //88	Number of registers rejected in SEK currency			10	        1077 - 1086
        //89	Total amount of rejected Registers in SEK				15	        1087 - 1101
        //90	Number of accepted SEK dismisses						10	        1102 - 1111
        //91	Total amount of accepted SEK dismisses					15	        1112 - 1126
        //92	Number of operations rejected Dismisses in SEK			10	        1127 - 1136
        //93	Total amount of operations rejected Dismisses in SEK	15	        1137 - 1151
        //94	Number of registers in JPY (japanese yen)				10	        1152 - 1161
        //95	Total amount of registers in JPY						15	        1162 - 1176
        //96	Number of dismisses in JPY								10	        1177 - 1186
        //97	Total amount of dismisses in JPY						15	        1187 - 1201
        //98	Number of accepted JPY registers						10	        1202 - 1211
        //99	Total amount of registers in JPY
        //      accepted in the system									15	        1212 - 1226
        //100	Number of registers rejected in JPY currency			10	        1227 - 1236
        //101	Total amount of rejected Registers in JPY				15	        1237 - 1251
        //102	Number of accepted JPY dismisses						10	        1252 - 1261
        //103	Total amount of accepted JPY dismisses					15	        1262 - 1276
        //104	Number of operations rejected Dismisses in JPY			10	        1277 - 1286
        //105	Total amount of operations rejected Dismisses in JPY	15	        1287 - 1301
        //106	Filler													65	        1302 - 1366
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        //1	    Record indication	 								    1	        1 - 1
        sb.Append('T');
        
        if(strContains(cur,'MXN'))        //SKS#DevOps:17052
        {
            //2	    Number of registers in MXP       (mexican peso)		    10	        2 - 11
            sb.Append(SKS_PP_StringFormats::strFill(10, num2str(MXPcountOfA,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //3	    Total amount of registers in MXP					    15	        12 - 26
            if(MXPcountOfA != 0)
            {
                sb.Append(SKS_PP_StringFormats::strMoney(-1 * MXPtotalPaymentAmtA, 15));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            }
            
            //4	    Number of dismisses in MXP							    10	        27 - 36
            sb.Append(SKS_PP_StringFormats::strFill(10, num2str(MXPcountOfB,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //5	    Total amount of dismisses in MXP					    15	        37 - 51
            if(MXPcountOfB != 0)
            {
                sb.Append(SKS_PP_StringFormats::strMoney(-1 * MXPtotalPaymentAmtB, 15));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            }
        }
        else
        {
            //2	    Number of registers in MXP       (mexican peso)		    10	        2 - 11
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //3	    Total amount of registers in MXP					    15	        12 - 26
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            
            //4	    Number of dismisses in MXP							    10	        27 - 36
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //5	    Total amount of dismisses in MXP					    15	        37 - 51
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        }

        //6	    FILLER Number of registers with changes				    10	        52 - 61
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //7	    FILLER Total amount of registers with changes			15	        62 - 76
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //8	    Number of operations rejected Registers in MXP			10	        77 - 86
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //9	    Total amount of operations rejected Registers in MXP	15	        87 - 101
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //10	Number of operations rejected Dismisses in MXP			10	        102 - 111
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //11	Total amount of operations rejected Dismisses in MXP	15	        112 - 126
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //12	FILLER Number of registers with changes rejected		10	        127 - 136
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //13	FILLER Total amount of registers with changes rejected	15	        137 - 151
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //14	FILLER Number of accepted record collection registers	10	        152 - 161
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //15	FILLER Total amount of accepted record 					15	        162 - 176
        //      collection registers
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //16	Number of accepted MXP registers						10	        177 - 186
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //17	Total amount of accepted MXP registers.					15	        187 - 201
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //18	Number of accepted MXP dismisses						10	        202 - 211
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //19	Total amount of accepted MXP dismisses					15	        212 - 226
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //20	FILLER Number of rejected payment record registers.		10	        227 - 236
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //21	FILLER Total amount of rejected                 		15	        237 - 251
        //      payment record registers.
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        if(strContains(cur,'USD'))
        {
            //22	Number of registers in USD (american dollars)			10	        252 - 261
            sb.Append(SKS_PP_StringFormats::strFill(10, num2str(USDcountOfA,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //23	Total amount of registers in USD						15	        262 - 276
            if(USDcountOfA != 0)
            {
                sb.Append(SKS_PP_StringFormats::strMoney(-1 * USDtotalPaymentAmtA, 15));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            }
 
            //24	Number of dismisses in USD								10	        277 - 286
            sb.Append(SKS_PP_StringFormats::strFill(10, num2str(USDcountOfB,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //25	Total amount of dismisses in USD						15	        287 - 301
            if(USDcountOfB != 0)
            {
                sb.Append(SKS_PP_StringFormats::strMoney(-1 * USDtotalPaymentAmtB, 15));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            }
        }
        else
        {
            //22	Number of registers in USD (american dollars)			10	        252 - 261
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //23	Total amount of registers in USD						15	        262 - 276
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
 
            //24	Number of dismisses in USD								10	        277 - 286
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //25	Total amount of dismisses in USD						15	        287 - 301
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        }

        //26	Number of accepted USD registers						10	        302 - 311
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //27	Total amount of accepted USD registers.					15	        312 - 326
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //28	Number of operations rejected Registers in USD			10	        327 - 336
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //29	Total amount of operations rejected Registers in USD	15		    337 - 351
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //30	Number of accepted USD dismisses						10	        352 - 361
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //31	Total amount of accepted USD dismisses					15	        362 - 376
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //32	Number of operations rejected Dismisses in USD			10	        377 - 386
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //33	Total amount of operations rejected Dismisses in USD	15	        387 - 401
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        if(strContains(cur,'EUR'))
        {
            //34	Number of registers in EUR (euros)						10	        402 - 411
            sb.Append(SKS_PP_StringFormats::strFill(10, num2str(EURcountOfA,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //35	Total amount of registers in EUR						15	        412 - 426
            if(EURcountOfA != 0)
            {
                sb.Append(SKS_PP_StringFormats::strMoney(-1 * EURtotalPaymentAmtA, 15));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            }
 
            //36	Number of dismisses in EUR								10	        427 - 436
            sb.Append(SKS_PP_StringFormats::strFill(10, num2str(EURcountOfB,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //37	Total amount of dismisses in EUR						15	        437 - 451
            if(EURcountOfB != 0)
            {
                sb.Append(SKS_PP_StringFormats::strMoney(-1 * EURtotalPaymentAmtB, 15));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            }
        }
        else
        {
            //34	Number of registers in EUR (euros)						10	        402 - 411
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //35	Total amount of registers in EUR						15	        412 - 426
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
 
            //36	Number of dismisses in EUR								10	        427 - 436
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //37	Total amount of dismisses in EUR						15	        437 - 451
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        }
        //38	Number of accepted EUR registers						10	        452 - 461
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //39	Total amount of accepted EUR registers.					15	        462 - 476
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //40	Number of operations rejected Registers in EUR			10	        477 - 486
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //41	Total amount of rejected Registers in EUR				15	        487 - 501
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //42	Number of accepted EUR dismisses						10	        502 - 511
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //43	Total amount of accepted EUR dismisses					15	        512 - 526
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //44	Number of operations rejected Dismisses in EUR			10	        527 - 536
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //45	Total amount of operations rejected Dismisses in EUR	15	        537 - 551
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        if(strContains(cur,'CAD'))
        {
            //46	Number of registers in CAD (canadian dollar)			10	        552 - 561
            sb.Append(SKS_PP_StringFormats::strFill(10, num2str(CADcountOfA,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //47	Total amount of registers in CAD						15	        562 - 576
            if(CADcountOfA != 0)
            {
                sb.Append(SKS_PP_StringFormats::strMoney(-1 * CADtotalPaymentAmtA, 15));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            }
 
            //48	Number of dismisses in CAD								10	        577 - 586
            sb.Append(SKS_PP_StringFormats::strFill(10, num2str(CADcountOfB,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //49	Total amount of dismisses in CAD						15	        587 - 601
            if(CADcountOfB != 0)
            {
                sb.Append(SKS_PP_StringFormats::strMoney(-1 * CADtotalPaymentAmtB, 15));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            }
        }
        else
        {
            //46	Number of registers in CAD (canadian dollar)			10	        552 - 561
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //47	Total amount of registers in CAD						15	        562 - 576
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
 
            //48	Number of dismisses in CAD								10	        577 - 586
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //49	Total amount of dismisses in CAD						15	        587 - 601
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        }

        //50	Number of accepted CAD registers						10	        602 - 611
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //51	Total amount of accepted CAD registers.					15	        612 - 626
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //52	Number of operations rejected Registers in CAD			10	        627 - 636
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //53	Total amount of rejected Registers in CAD				15	        637 - 651
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //54	Number of accepted CAD dismisses						10	        652 - 661
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //55	Total amount of accepted CAD dismisses					15	        662 - 676
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //56	Number of operations rejected Dismisses in CAD			10	        677 - 686
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //57	Total amount of operations rejected Dismisses in CAD	15	        687 - 701
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        if(strContains(cur,'CHF'))
        {
            //58	Number of registers in CHF (swiss franc)				10	        702 - 711
            sb.Append(SKS_PP_StringFormats::strFill(10, num2str(CHFcountOfA,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //59	Total amount of registers in CHF						15	        712 - 726
            if(CHFcountOfA != 0)
            {
                sb.Append(SKS_PP_StringFormats::strMoney(-1 * CHFtotalPaymentAmtA, 15));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            }
 
            //60	Number of dismisses in CHF								10	        727 - 736
            sb.Append(SKS_PP_StringFormats::strFill(10, num2str(CHFcountOfB,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //61	Total amount of dismisses in CHF						15	        737 - 751
            if(CHFcountOfB != 0)
            {
                sb.Append(SKS_PP_StringFormats::strMoney(-1 * CHFtotalPaymentAmtB, 15));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            }
        }
        else
        {
            //58	Number of registers in CHF (swiss franc)				10	        702 - 711
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //59	Total amount of registers in CHF						15	        712 - 726
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
 
            //60	Number of dismisses in CHF								10	        727 - 736
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //61	Total amount of dismisses in CHF						15	        737 - 751
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        }

        //62	Number of accepted CHF registers						10	        752 - 761
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //63	Total amount of accepted CHF registers.					15	        762 - 776
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //64	Number of operations rejected Registers in CHF			10	        777 - 786
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //65	Total amount of rejected Registers in CHF				15	        787 - 801
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //66	Number of accepted CHF dismisses						10	        802 - 811
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //67	Total amount of accepted CHF dismisses					15	        812 - 826
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //68	Number of operations rejected Dismisses in CHF			10	        827 - 836
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //69	Total amount of operations rejected Dismisses in CHF	15	        837 - 851
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        if(strContains(cur,'GBP'))
        {
            //70	Number of registers in GBP (british pound)				10	        852 - 861
            sb.Append(SKS_PP_StringFormats::strFill(10, num2str(GBPcountOfA,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //71	Total amount of registers in GBP						15	        862 - 876
            if(GBPcountOfA != 0)
            {
                sb.Append(SKS_PP_StringFormats::strMoney(-1 * GBPtotalPaymentAmtA, 15));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            }
 
            //72	Number of dismisses in GBP								10	        877 - 886
            sb.Append(SKS_PP_StringFormats::strFill(10, num2str(GBPcountOfB,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //73	Total amount of dismisses in GBP						15	        887 - 901
            if(GBPcountOfB != 0)
            {
                sb.Append(SKS_PP_StringFormats::strMoney(-1 * GBPtotalPaymentAmtB, 15));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            }
        }
        else
        {
            //70	Number of registers in GBP (british pound)				10	        852 - 861
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //71	Total amount of registers in GBP						15	        862 - 876
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
 
            //72	Number of dismisses in GBP								10	        877 - 886
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //73	Total amount of dismisses in GBP						15	        887 - 901
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        }

        //74	Number of accepted GBP registers						10	        902 - 911
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //75	Total amount of registers in GBP accepted in the system	15	        912 - 926
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //76	Number of registers rejected in GBP currency			10	        927 - 936
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //77	Total amount of rejected Registers in GBP				15	        937 - 951
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //78	Number of accepted GBP dismisses						10	        952 - 961
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //79	Total amount of accepted GBP dismisses					15	        962 - 976
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //80	Number of operations rejected Dismisses in GBP			10	        977 - 986
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //81	Total amount of operations rejected Dismisses in GBP	15	        987 - 1001
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        if(strContains(cur,'SEK'))
        {
            //82	Number of registers in SEK (swedish krona)				10	        1002 - 1011
            sb.Append(SKS_PP_StringFormats::strFill(10, num2str(SEKcountOfA,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //83	Total amount of registers in SEK						15	        1012 - 1026
            if(SEKcountOfA != 0)
            {
                sb.Append(SKS_PP_StringFormats::strMoney(-1 * SEKtotalPaymentAmtA, 15));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            }
 
            //84	Number of dismisses in SEK								10	        1027 - 1036
            sb.Append(SKS_PP_StringFormats::strFill(10, num2str(SEKcountOfB,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //85	Total amount of dismisses in SEK						15	        1037 - 1051
            if(SEKcountOfB != 0)
            {
                sb.Append(SKS_PP_StringFormats::strMoney(-1 * SEKtotalPaymentAmtB, 15));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            }
        }
        else
        {
            //82	Number of registers in SEK (swedish krona)				10	        1002 - 1011
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //83	Total amount of registers in SEK						15	        1012 - 1026
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
 
            //84	Number of dismisses in SEK								10	        1027 - 1036
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //85	Total amount of dismisses in SEK						15	        1037 - 1051
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        }

        //86	Number of accepted SEK registers						10	        1052 - 1061
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //87	Total amount of registers in SEK accepted in the system	15	        1062 - 1076
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //88	Number of registers rejected in SEK currency			10	        1077 - 1086
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //89	Total amount of rejected Registers in SEK				15	        1087 - 1101
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //90	Number of accepted SEK dismisses						10	        1102 - 1111
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //91	Total amount of accepted SEK dismisses					15	        1112 - 1126
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //92	Number of operations rejected Dismisses in SEK			10	        1127 - 1136
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //93	Total amount of operations rejected Dismisses in SEK	15	        1137 - 1151
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        if(strContains(cur,'JPY'))
        {
            //94	Number of registers in JPY (japanese yen)				10	        1152 - 1161
            sb.Append(SKS_PP_StringFormats::strFill(10, num2str(JPYcountOfA,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //95	Total amount of registers in JPY						15	        1162 - 1176
            if(JPYcountOfA != 0)
            {
                sb.Append(SKS_PP_StringFormats::strMoney(-1 * JPYtotalPaymentAmtA, 15));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            }
 
            //96	Number of dismisses in JPY								10	        1177 - 1186
            sb.Append(SKS_PP_StringFormats::strFill(10, num2str(JPYcountOfB,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //97	Total amount of dismisses in JPY						15	        1187 - 1201
            if(JPYcountOfB != 0)
            {
                sb.Append(SKS_PP_StringFormats::strMoney(-1 * JPYtotalPaymentAmtB, 15));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            }
        }
        else
        {
            //94	Number of registers in JPY (japanese yen)				10	        1152 - 1161
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //95	Total amount of registers in JPY						15	        1162 - 1176
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
 
            //96	Number of dismisses in JPY								10	        1177 - 1186
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

            //97	Total amount of dismisses in JPY						15	        1187 - 1201
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        }

        //98	Number of accepted JPY registers						10	        1202 - 1211
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //99	Total amount of registers in JPY
        //      accepted in the system									15	        1212 - 1226
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //100	Number of registers rejected in JPY currency			10	        1227 - 1236
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //101	Total amount of rejected Registers in JPY				15	        1237 - 1251
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //102	Number of accepted JPY dismisses						10	        1252 - 1261
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //103	Total amount of accepted JPY dismisses					15	        1262 - 1276
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //104	Number of operations rejected Dismisses in JPY			10	        1277 - 1286
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //105	Total amount of operations rejected Dismisses in JPY	15	        1287 - 1301
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //106	Filler													65	        1302 - 1366
        sb.Append(SKS_PP_StringFormats::strFill(65, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceNbrs</Name>
				<Source><![CDATA[
    protected str getInvoiceNbrs()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str invString;
    
        select InvoiceNumber from invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId;
    
        while(invSKS_EFT_FileDetail)
        {
            if(invSKS_EFT_FileDetail.InvoiceNumber == '')
            {
                // If no invoice number, go to next record
                next invSKS_EFT_FileDetail;
                continue;
            }
            sb.Append(invSKS_EFT_FileDetail.InvoiceNumber);
    
            next invSKS_EFT_FileDetail;
    
            if(invSKS_EFT_FileDetail)
            {
                sb.Append(' ');
            }
        }
    
        invString = this.CharacterReplacement(sb.ToString());
        return invString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
              order by mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>