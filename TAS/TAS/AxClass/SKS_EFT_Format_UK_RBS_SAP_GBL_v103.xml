<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_UK_RBS_SAP_GBL_v103</Name>
	<SourceCode>
		<Declaration><![CDATA[
// RBS SAP/Global BankStation
// v1.03
//
// Supports transaction types: GI-NEFT
//
// Structure:
// Payment
/// <summary>
/// SKS_EFT_Format_UK_RBS_SAP_GBL_v103 extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_UK_RBS_SAP_GBL_v103 extends SKS_EFT_Format
{
    #define.FormatVersion('20220603')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();
    
            // Detail lines
            this.rec_Payment();
    
            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Payment</Name>
				<Source><![CDATA[
    //Nbr   Description                                             Start   Type        Comment
    //1     REC/INV indicator                                       1       X(4)
    //2     Debit account number                                    5       X(24)
    //3     Date                                                    29      date
    //4     Transfer Currency                                       39      X(3)
    //5     Transfer Amount                                         42      9(15).9(2)
    //6     Withholding tax amount (not used)                       60      9(15).9(2)
    //7     VAT amount (not used)                                   78      9(15).9(2)
    //8     Beneficiary name                                        96      X(70)
    //9     Beneficiary street                                      166     X(35)
    //10    Beneficiary city                                        201     X(35)
    //11    Beneficiary country                                     236     X(35)
    //12    Beneficiary ZIP                                         271     X(35)
    //13    Beneficiary fax number (not used)                       306     X(24)
    //14    Beneficiary email 1                                     330     X(70)
    //15    Payment details 1                                       400     X(35)
    //16    Payment details 2                                       435     X(35)
    //17    Payment details 3                                       470     X(35)
    //18    Payment details 4                                       505     X(35)
    //19    Cheque Delivery Mode                                    540     X(2)
    //20    GIRO Transaction Code (not used)                        542     X(2)
    //21    Transaction Type                                        544     X(2)
    //22    Sender’s Tax id (not used)                              546     X(16)
    //23    Charging details                                        562     X(3)
    //24    Priority (not used)                                     565     X(2)
    //25    Client Reference                                        567     X(16)
    //26    Bank of the Beneficiary SWIFT ID or Bank Sorting Code   583     X(16)
    //27    Bank of the Beneficiary Name                            599     X(70)
    //28    Bank of the Beneficiary Branch (not used)               669     X(35)
    //29    Bank of the Beneficiary Street                          704     X(35)
    //30    Bank of the Beneficiary City                            739     X(35)
    //31    Bank of the Beneficiary Country                         774     X(35)
    //32    Payment Location (Cheque drawn Branch)                  809     X(20)
    //33    Beneficiary account number                              829     X(34)
    //34    Foreign exchange rate contract number                   863     X(16)
    //35    Transaction category (not used)                         879     X(4)
    //36    Bank Reference (not used)                               883     X(20)
    //37    Cheque number                                           903     X(10)
    //38    Cheque printing Branch                                  913     X(20)
    //39    Cheque Receiver name                                    933     X(70)
    //40    Cheque Receiver street                                  1003    X(35)
    //41    Cheque Receiver city                                    1038    X(35)
    //42    Cheque Receiver country                                 1073    X(35)
    //43    Cheque Receiver ZIP                                     1108    X(35)
    //44    Ordering Customer Code                                  1143    X(12)
    //45    Additional Cheque Details 1                             1155    X(350)
    //46    Additional Cheque Details 2                             1505    X(350)
    //47    Additional Cheque Details 3                             1855    X(350)
    //48    Additional Cheque Details 4                             2205    X(350)
    //49    Beneficiary email 2                                     2555    X(70)
    //50    FX contract date                                        2625    date
    //51    FX rate                                                 2635    N(12)
    //52    Intermediary Bank SWIFT ID or Bank Sorting Code         2647    X(16)
    //53    Intermediary Bank Name                                  2663    X(70)
    //54    Intermediary Bank Street                                2733    X(35)
    //55    Intermediary Bank City                                  2768    X(35)
    //56    Intermediary Bank Country                               2803    X(35)
    //57    EOR                                                     2838    X(1)
    boolean rec_Payment()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        AmountMST amt;
        ;
        //1     REC/INV indicator
        sb.Append('REC-');
    
        //2     Debit account number
        sb.Append(SKS_PP_StringFormats::strFill(24,mSKS_EFT_FileDetail.BankBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //3     Date
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_File.EffectiveDate));
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //4     Transfer Currency
        sb.Append(SKS_PP_StringFormats::strFill(3, mSKS_EFT_FileDetail.PaymentCurrencyCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //5     Transfer Amount
        amt = this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur);
        sb.Append(SKS_PP_StringFormats::strFill(18, num2str(amt,0,2,0,0), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
    
        //6     Withholding tax amount (not used)
        sb.Append(SKS_PP_StringFormats::strFill(18, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //7     VAT amount (not used)
        sb.Append(SKS_PP_StringFormats::strFill(18, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //8     Beneficiary name
        sb.Append(SKS_PP_StringFormats::strFill(70, this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //9     Beneficiary street
        sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneAddr), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //10    Beneficiary city
        sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneCity), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //11    Beneficiary country
        sb.Append(SKS_PP_StringFormats::strFill(35, mSKS_EFT_VendorPaym.WBeneCountryRegionId, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //12    Beneficiary ZIP
        sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneZipPostal), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //13    Beneficiary fax number (not used)
        sb.Append(SKS_PP_StringFormats::strFill(24, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //14    Beneficiary email 1
        sb.Append(SKS_PP_StringFormats::strFill(70, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //15    Payment details 1
        sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //16    Payment details 2
        sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //17    Payment details 3
        sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //18    Payment details 4
        sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //19    Cheque Delivery Mode
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //20    GIRO Transaction Code (not used)
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //21    Transaction Type
        sb.Append('GI');
    
        //22    Sender’s Tax id (not used)
        sb.Append(SKS_PP_StringFormats::strFill(16, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //23    Charging details
        sb.Append(SKS_PP_StringFormats::strFill(3, 'OUR', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //24    Priority (not used)
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //25    Client Reference
        sb.Append(SKS_PP_StringFormats::strFill(16, this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //26    Bank of the Beneficiary SWIFT ID or Bank Sorting Code
        sb.Append(SKS_PP_StringFormats::strFill(16, mSKS_EFT_FileDetail.DepSwiftNo, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //27    Bank of the Beneficiary Name
        sb.Append(SKS_PP_StringFormats::strFill(70, this.CharacterReplacement(mSKS_EFT_VendorPaym.WBenBankName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //28    Bank of the Beneficiary Branch (not used)
        sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //29    Bank of the Beneficiary Street
        sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_VendorPaym.WBenBankAddr), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //30    Bank of the Beneficiary City
        sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_VendorPaym.WBenBankCity), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //31    Bank of the Beneficiary Country
        sb.Append(SKS_PP_StringFormats::strFill(35, mSKS_EFT_VendorPaym.WBenBankCountryRegionId, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //32    Payment Location (Cheque drawn Branch)
        sb.Append(SKS_PP_StringFormats::strFill(20, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //33    Beneficiary account number
        sb.Append(SKS_PP_StringFormats::strFill(34, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //34    Foreign exchange rate contract number
        sb.Append(SKS_PP_StringFormats::strFill(16, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //35    Transaction category (not used)
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //36    Bank Reference (not used)
        sb.Append(SKS_PP_StringFormats::strFill(20, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //37    Cheque number
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //38    Cheque printing Branch
        sb.Append(SKS_PP_StringFormats::strFill(20, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //39    Cheque Receiver name
        sb.Append(SKS_PP_StringFormats::strFill(70, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //40    Cheque Receiver street
        sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //41    Cheque Receiver city
        sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //42    Cheque Receiver country
        sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //43    Cheque Receiver ZIP
        sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //44    Ordering Customer Code
        sb.Append(SKS_PP_StringFormats::strFill(12, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //45    Additional Cheque Details 1
        sb.Append(SKS_PP_StringFormats::strFill(350, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //46    Additional Cheque Details 2
        sb.Append(SKS_PP_StringFormats::strFill(350, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //47    Additional Cheque Details 3
        sb.Append(SKS_PP_StringFormats::strFill(350, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //48    Additional Cheque Details 4
        sb.Append(SKS_PP_StringFormats::strFill(350, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //49    Beneficiary email 2
        sb.Append(SKS_PP_StringFormats::strFill(70, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //50    FX contract date
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //51    FX rate
        sb.Append(SKS_PP_StringFormats::strFill(12, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //52    Intermediary Bank SWIFT ID or Bank Sorting Code
        sb.Append(SKS_PP_StringFormats::strFill(16, mSKS_EFT_VendorPaym.WIntBankSwift, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //53    Intermediary Bank Name
        sb.Append(SKS_PP_StringFormats::strFill(70, this.CharacterReplacement(mSKS_EFT_VendorPaym.WIntBankName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //54    Intermediary Bank Street
        sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_VendorPaym.WIntBankAddr), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //55    Intermediary Bank City
        sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_VendorPaym.WIntBankCity), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //56    Intermediary Bank Country
        sb.Append(SKS_PP_StringFormats::strFill(35, mSKS_EFT_VendorPaym.WIntBankCountryRegionId, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //57    EOR
        sb.Append('X');
    
        this.fileWrite(sb.ToString());
    
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>