<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Swift_Tags</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_EFT_Swift_Tags
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getSwift20</Name>
				<Source><![CDATA[
    //value = 16x
    public static str getSwift20(str _Value)
    {
        System.Text.StringBuilder rtnval;
        str tag = '20';
        int locTempTagLength;
        ;
    
        rtnval = new System.Text.StringBuilder();
    
        if(strLen(_Value) > 34)
            locTempTagLength = 34;
        else
            locTempTagLength = strLen(_Value);
    
    
        rtnval.Append(':' + strUpr(tag) + ':');
        rtnval.Append(SKS_PP_StringFormats::strFill(locTempTagLength, _Value, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        return rtnval.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSwift32A</Name>
				<Source><![CDATA[
    //6!n3!a15d
    public static str getSwift32A(date _ValueDate, CurrencyCode _CurrencyCode, AmountCur _AmountCur)
    
    {
        System.Text.StringBuilder sb;
    
        str tag = '32A';
        ;
    
        sb = new System.Text.StringBuilder();
    
        sb.Append(':' + strUpr(tag) + ':');
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(_ValueDate));
        sb.Append(SKS_PP_StringFormats::strFill(3,_CurrencyCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(num2str(-1 * _AmountCur,4,2,DecimalSeparator::Comma,ThousandSeparator::None));
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSwift56D</Name>
				<Source><![CDATA[
    // [/1!a][/34x] (Party Identifier)
    // 4*35x (Name & Address)
    public static str getSwift56D(str _IntermediteCode,
                                    str _IntermediatePartyID,
                                    str _IntermediateBankName,
                                    str _IntermediateBankAddress1,
                                    str _IntermeidateBankAddress2,
                                    str _IntermeidateBankAddress3)
    {
        System.Text.StringBuilder sb;
        str locIntermediatePartyId = _IntermediatePartyID;
        str locIntermediateCode = _IntermediteCode;
        str tag = '56D';
        ;
        sb = new System.Text.StringBuilder();
    
        sb.Append(strUpr(':' + tag + ':'));
        if(strLen(locIntermediateCode) > 0)
        {
            while(strStartsWith(locIntermediateCode, @'/'))
            {
                locIntermediateCode = SKS_PP_StringFormats::strSub(locIntermediateCode, 2);
    
            }
    
            sb.Append(@'/');
            sb.Append(SKS_PP_StringFormats::strSub(locIntermediateCode,1,1));
        }
    
        if(strLen(locIntermediatePartyId) > 0)
        {
            while(strStartsWith(locIntermediatePartyId, @'/'))
            {
                locIntermediatePartyId = SKS_PP_StringFormats::strSub(locIntermediatePartyId, 2);
    
            }
    
            sb.Append(@'/');
            sb.Append(SKS_PP_StringFormats::strSub(locIntermediatePartyId,1,34));
        }
    
    
        if(strLen(_IntermediateBankName) > 0)
            sb.Append('\n' + SKS_PP_StringFormats::strSub(_IntermediateBankName,1,35));
        if(strLen(_IntermediateBankAddress1) > 0)
            sb.Append('\n' + SKS_PP_StringFormats::strSub(_IntermediateBankAddress1,1,35));
        if(strLen(_IntermeidateBankAddress2) > 0)
            sb.Append('\n' + SKS_PP_StringFormats::strSub(_IntermeidateBankAddress2,1,35));
        if(strLen(_IntermeidateBankAddress3) > 0)
            sb.Append('\n' + SKS_PP_StringFormats::strSub(_IntermeidateBankAddress3,1,35));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSwift57D</Name>
				<Source><![CDATA[
    //  [/1!a][/34x]     (Party Identifier)
    //      4*35x        (Name and Address)
    public static str getSwift57D(str _AccountWithBankBeneficiaryCode,
                                    str _AccountWithBankBeneficiaryBankID,
                                    str _AccountWithBankBeneficiaryBankName,
                                    str _AccountWithBankBeneficiaryBankAddress1,
                                    str _AccountWithBankBeneficiaryBankAddress2,
                                    str _AccountWithBankBeneficiaryBankAddress3)
    {
        str loc56D;
        ;
    
        loc56D = SKS_EFT_Swift_Tags::getSwift56D(_AccountWithBankBeneficiaryCode,
                                    _AccountWithBankBeneficiaryBankID,
                                    _AccountWithBankBeneficiaryBankName,
                                    _AccountWithBankBeneficiaryBankAddress1,
                                    _AccountWithBankBeneficiaryBankAddress2,
                                    _AccountWithBankBeneficiaryBankAddress3);
    
        strReplace(loc56D, ':56D:', ':57D:');
        return loc56D;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSwift59</Name>
				<Source><![CDATA[
    //  [/34x]  Account
    //  4*35x   Name and Address
    
    public static str getSwift59(str _BeneficiaryID,
                                    str _BeneficiaryName,
                                    str _BeneficiaryAddress1,
                                    str _BeneficiaryAddress2,
                                    str _BeneficiaryAddress3)
    {
        System.Text.StringBuilder sb;
        str tag = '59';
        str locBeneficiaryID = _BeneficiaryID;
        ;
    
        sb = new System.Text.StringBuilder();
        sb.Append(strUpr(':' + tag + ':'));
        if(strLen(locBeneficiaryID) > 0)
        {
            while(strStartsWith(locBeneficiaryID, @'/'))
            {
                locBeneficiaryID = SKS_PP_StringFormats::strSub(locBeneficiaryID, 2);
    
            }
            sb.Append(@'/');
            sb.Append(locBeneficiaryID + '\n');
        }
    
    
        sb.Append('\n' + SKS_PP_StringFormats::strSub(_BeneficiaryName, 1, 35));
        sb.Append('\n' + SKS_PP_StringFormats::strSub(_BeneficiaryAddress1, 1, 35));
        sb.Append('\n' + SKS_PP_StringFormats::strSub(_BeneficiaryAddress2, 1, 35));
        sb.Append('\n' + SKS_PP_StringFormats::strSub(_BeneficiaryAddress3, 1, 35));
        return sb.ToString();
    
    
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>