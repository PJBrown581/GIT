<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_NL_ABNAMRO_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_NL_ABNAMRO_XML extends SKS_EFT_Format_ISO_20022_001001003
/// </summary>
class SKS_EFT_Format_NL_ABNAMRO_XML extends SKS_EFT_Format_ISO_20022_001001003
{
    //------------------------------------------------------------------------------------------------------
    /// <summary>
    /// This is extending the SEPA_Credit Format
    /// </summary>
    //------------------------------------------------------------------------------------------------------
    #define.FormatVersion('20221116')
    #define.SEPA('SEPA')
    #define.ACH('ACH')
    #define.WIRE('WIRE')
    #define.CHK('CHK')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr_Nm</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Cdtr_Nm(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.79: Cdtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
        str name = mSKS_EFT_FileDetail.AccountName;
    
        if(mRemittanceName != '')
        {
            name = mRemittanceName;
        }
                
        //              Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', this.CharacterReplacement(name), 70);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  Othr
        //                  Id
        //              Tp/Ptry
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
        XmlElement nodeCdtrAcctIdOthr;
        XmlElement nodeSchmeNm;
    
        if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::No  &&
           subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK')
        {
            //          2.80: CdtrAcct            
            nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
            //              Id
            nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
            if(mSKS_EFT_FileDetail.DepBankIBAN)
            {
                //                  IBAN
                nodeCdtrAcctId = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN);
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA)
            {
                //                  Othr
                nodeCdtrAcctIdOthr = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
                //                      Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctIdOthr, 'Id', mSKS_EFT_FileDetail.DepBankAcct);

                //                  SchmeNm
                nodeSchmeNm = nodeCdtrAcctIdOthr.appendChild(xmlDoc.createElement('SchmeNm'));
    
                //                      Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', 'BBAN');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                  Nm
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
        
        if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::No  &&
           subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK'      &&
          (mSKS_EFT_FileDetail.DepSwiftNo || mSKS_EFT_FileDetail.DepBankTransit))
        {
            //          2.77: CdtrAgt
            nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));

            //              FinInstnId
            nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));

            if(mSKS_EFT_FileDetail.DepSwiftNo)
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 0, false);
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA)
            {
                //                  ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                //                          MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 0, false);
            }

            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA  )
            {
                //                  Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_VendorPaym.WBenBankName), 0, false);

                //                  PstlAdr
                this.node_CdtTrfTxInf_CdtrAgt_PstlAdr(nodeFinInstnId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChqInstr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChqInstr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.52 ChqInstr
        //              2.58 DlvryMtd
        //              2.65 ChqMtrtyDt
        //              2.69: PrtLctn
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeChqInstr;
        XmlElement nodeDlvryMtd;
        XmlElement nodeDlvryTo;
        XmlElement nodeAdr;
        str value, DlvryMtd;
    
        //          2.52 ChqInstr
        nodeChqInstr = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('ChqInstr'));
    
        //              2.53 ChqTp
        value = this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('Chqtp', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId));

        if(value != '')
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'ChqTp', value, 0, false);
        }
    
        //              2.58 DlvryMtd
        nodeDlvryMtd = nodeChqInstr.appendChild(xmlDoc.createElement('DlvryMtd'));

        //                  2.59: Cd
        DlvryMtd = this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('DlvryMtd', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId));

        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryMtd, 'Cd', DlvryMtd, 0, false);

        //              2.61 DlvrTo
        nodeDlvryTo = nodeChqInstr.appendChild(xmlDoc.createElement('DlvrTo'));

        if(DlvryMtd == 'CRDB' || DlvryMtd == 'MLDB' || DlvryMtd == 'RGDB')
        {
            //              2.62 Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryTo, 'Nm', this.CharacterReplacement(mSKS_EFT_Bank.WOrdPartyName));

            //              2.63 Adr
            nodeAdr = nodeDlvryTo.appendChild(xmlDoc.createElement('Adr'));

            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'StrtNm', this.CharacterReplacement(mSKS_EFT_Bank.WOrdPartyAddr), 0, false);
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'PstCd', this.CharacterReplacement(mSKS_EFT_Bank.WOrdPartyZipCode), 0, false);
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'TwnNm', this.CharacterReplacement(mSKS_EFT_Bank.WOrdPartyCity), 0, false);
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'Ctry', this.getLogisticsAddressCountryISO(mSKS_EFT_Bank.WOrdPartyCountryRegionId));
        }
        else
        {
            //              2.62 Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryTo, 'Nm', this.CharacterReplacement(mRemittanceName));

            //              2.63 Adr
            nodeAdr = nodeDlvryTo.appendChild(xmlDoc.createElement('Adr'));
            
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'StrtNm', this.CharacterReplacement(mRemittanceAdrline1), 0, false);
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'PstCd', this.CharacterReplacement(mRemittanceZipCode), 0, false);
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'TwnNm', this.CharacterReplacement(mRemittanceCity), 0, false);
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'Ctry', this.getLogisticsAddressCountryISO(mRemittanceCountryRegionId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChrgBr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.51: ChrgBr
        //------------------------------------------------------------------------------------------------------
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'ChrgBr', 'SLEV');
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'ChrgBr', this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Charges', mSKS_EFT_FileDetail.RecId)), 0, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt1</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_IntrmyAgt1(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.71: IntrmyAgt1
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                  PstlAdr
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeIntrmyAgt1;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
    
        if((mSKS_EFT_VendorPaym.WIntBankSwift != '' || mSKS_EFT_VendorPaym.WIntBankId != '') &&
           (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE))
        {
            //          2.71: IntrmyAgt1
            nodeIntrmyAgt1 = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt1'));
    
            //              FinInstnId
            nodeFinInstnId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(mSKS_EFT_VendorPaym.WIntBankSwift != '')
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_VendorPaym.WIntBankSwift, 0, false);
            }
    
            //                  ClrSysMmbId
            if(mSKS_EFT_VendorPaym.WIntBankId != '')
            {
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_VendorPaym.WIntBankId, 0, false);
            }
            
            //                  Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_VendorPaym.WIntBankName), 140, false);
            
            //                  PstlAdr
            this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_VendorPaym.WIntBankCountryRegionId, mSKS_EFT_VendorPaym.WIntBankAddr + '' + mSKS_EFT_VendorPaym.WIntBankAddr2, '', mSKS_EFT_VendorPaym.WIntBankCity);    
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA)
        {
            this.node_CdtTrfTxInf_RmtInf_Strd(_nodeCdtTrfTxInf);
        }
        else
        {
            super(_nodeCdtTrfTxInf);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_Strd</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf_Strd(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //------------------------------------------------------------------------------------------------------
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        XmlElement nodeRmtInf;
        XmlElement nodeStrd;
        XmlElement nodeCdtrRefInf;
        XmlElement nodeTp;
        XmlElement nodeCdOrPrtry;
        VendTrans lVendTrans;
        boolean firstRec = true;
    
        while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
        {
            select crossCompany PaymId, Invoice from lVendTrans where lVendTrans.RecId == invSKS_EFT_FileDetail.VendTransRecId;

            if(lVendTrans.PaymId)
            {
                if(firstRec)
                {
                    //          2.98: RmtInf
                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                    firstRec = false;
                }
    
                //              2.100: Strd
                nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));
    
                //            2.120: CdtrRefInf
                nodeCdtrRefInf = nodeStrd.appendChild(xmlDoc.createElement('CdtrRefInf'));
    
                //              2.121: Tp
                nodeTp = nodeCdtrRefInf.appendChild(xmlDoc.createElement('Tp'));
    
                //                  2.122: CdOrPrtry
                nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));
    
                //                      2.123: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'SCOR');
    
                //               2.126: Ref
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', this.CharacterReplacement(lVendTrans.PaymId));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------

        if((mRemittanceZipCode != '' || mRemittanceCity != '' || mRemittanceCountryRegionId != '' || mRemittanceAdrline1 != '' || mRemittanceAdrline2 != '')&&
           (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH  ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK))
        {
            this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity, 35, '', '', true);
        }
        else
        {
            super(_nodeCdtr);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Id(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          9.1.12: Id
        //              9.1.13: OrgId
        //                  9.1.15: Othr
        //                      9.1.16: Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOther;
    
        if(mSKS_EFT_Bank.WOrdPartyId && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA)
        {
            //          9.1.12: Id
            nodeId = _nodeDbtr.appendChild(xmlDoc.createElement('Id'));
    
            //              9.1.13: OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            //                  9.1.15: Othr
            nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
            //                      9.1.16: Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', mSKS_EFT_Bank.WOrdPartyId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_PstlAdr(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH  ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK)
        {
            this.node_PstlAdr(_nodeDbtr, mSKS_EFT_Bank.WOrdPartyCountryRegionId, mSKS_EFT_Bank.WOrdPartyAddr,mSKS_EFT_Bank.WOrdPartyZipCode, mSKS_EFT_Bank.WOrdPartyCity, 35, '', '', true);
        }
        else
        {
            super(_nodeDbtr);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: DbtrAcct
        //          Id
        //              IBAN
        //              Othr
    
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;
    
        //      2.20: DbtrAcct
        nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
        //          Id
        nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
    
        if(mBankAccountTable.IBAN)
        {
            //              IBAN
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN', mBankAccountTable.IBAN);
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA)
        {
            this.node_PmtInf_DbtrAcct_Id_Othr(nodeDbtrAcctId);
        }

        //          Ccy
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcct, 'Ccy', mBankAccountTable.CurrencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.21: DbtrAgt
        //          FinInstnId
        //              BIC
        //              ClrSysMmbId
        //                  MmbId
        //              PstlAdr
        //                  Ctry
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmBId;
        
        if(mBankAccountTable.SWIFTNo || mSKS_EFT_FileDetail.BankBankTransit)
        {
            //      2.21: DbtrAgt
            nodeDbtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAgt'));
    
            //          FinInstnId
            nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(mBankAccountTable.SWIFTNo)
            {
                //              BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mBankAccountTable.SWIFTNo, 0, false);
            }
        
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA)
            {
                //              ClrSysMmbId
                nodeClrSysMmBId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
                //                  MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmBId, 'MmbId', mSKS_EFT_FileDetail.BankBankTransit, 0, false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.6: PmtTpInf
        //          2.8: SvcLvl
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePmftTpInf;
        XmlElement nodeSvcLvl;
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA)
        {
            //      2.6: PmtTpInf
            nodePmftTpInf = _nodePmtInf.appendChild(xmlDoc.createElement('PmtTpInf'));

            //          2.8: SvcLvl
            nodeSvcLvl = nodePmftTpInf.appendChild(xmlDoc.createElement('SvcLvl'));
    
            //              2.9: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSvcLvl, 'Cd', 'SEPA');
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>