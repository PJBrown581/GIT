<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_PNC_ARP_180</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_PNC_ARP_180 Extends SKS_PP_Format_BankGroup
{
    TextStreamIo file;
    int chkCount;
    real chkSum;
    int printFooter;
    Str BankIdent;
    Str BnkBankAct;
    // PNC Bank ARP 180 - Detail Record
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    // Pos 01-01    1        Record Type 'D'
    // Pos 02-04    3        Bank Market Identifier (pp01)
    // Pos 05-14    10       Bank Account number
    // Pos 15-15    1        Void check indicator ('V'oid, 'I' otherwise)
    // Pos 16-23    8        Issue/Void Date MMDDYYYY
    // Pos 24-33    10       Check Number
    // Pos 34-45    12       Check Amount
    // Pos 46-60    15       Additional data
    // Pos 61-80    20       Space Fill
    // Pos 81-160   100      Payee Information
    protected str txtDetail()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        int Mult = 1;
        str ItemType;
        SKS_PP_Bank bSKS_PP_Bank_1;
        Container company;
        ;
    
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
            if(mSKS_PP_FileDetail.ChkCuryAmt < 0)
            {
                Mult = -1;
            }
        }
        else
        {
            ItemType = 'I';
        }
    
        chkCount++;
    
        company = [mSKS_PP_FileDetail.ChkCpnyId];
        select crossCompany:company PP02 from bSKS_PP_Bank_1 where bSKS_PP_Bank_1.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;
        chkSum = chkSum + mSKS_PP_FileDetail.ChkCuryAmt;
    
        BankIdent =  bSKS_PP_Bank_1.PP02;
        BnkBankAct = mSKS_PP_FileDetail.BnkBankAcct;
    
        sb.Append('D');
        sb.Append(SKS_PP_StringFormats::strFill(3, bSKS_PP_Bank_1.PP02, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(ItemType);
    
        if (ItemType == 'I')
        {
            sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_PP_FileDetail.ChkDocDate));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));
        }
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(Mult * mSKS_PP_FileDetail.ChkCuryAmt, 12));
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(20, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(50, mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(50, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupHeader</Name>
				<Source><![CDATA[
    // PNC Bank ARP 180 - Header Record
    
    // Pos 01-01    1        Record Type 'H'
    // Pos 02-04    3        Bank Market Identifier
    // Pos 05-14    10       Bank Account Number
    // Pos 15-22    8        File Creation Date MMDDYYYY
    // Pos 23-47    25       Company Name
    // Pos 48-25    5        Format ID '03121'
    // Pos 53-180   128      Space Filler
    protected str txtGroupHeader()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        SKS_PP_Bank bSKS_PP_Bank_1;
        Container company;
        ;
    
        company = [mSKS_PP_FileDetail.ChkCpnyId];
        select crossCompany:company PP01, PP02 from bSKS_PP_Bank_1 where bSKS_PP_Bank_1.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;
    
        sb.Append('H');
        sb.Append(SKS_PP_StringFormats::strFill(3,bSKS_PP_Bank_1.PP02, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(10,mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));
        sb.Append(SKS_PP_StringFormats::strFill(25,bSKS_PP_Bank_1.PP01, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append('03121');
        sb.Append(SKS_PP_StringFormats::strFill(128,'', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    // PNC Bank ARP 180 - Trailer Record
    
    // Pos 01-01    1        Record Type 'T'
    // Pos 02-04    3        Bank Market Identifier
    // Pos 05-14    10       Bank Account Number
    // Pos 15-21    7        Filler Spaces
    // Pos 22-31    10       Total Number of detail records (Voided checks are NOT included)
    // Pos 32-43    12       Total Dollar Amount (Only include totals for Issued records)
    // Pos 44-180   137      Filler Spaces
    protected str txtGroupTrailer()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        sb.Append('T');
        sb.Append(SKS_PP_StringFormats::strFill(3, BankIdent, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(10, BnkBankAct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(7, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(10, int2str(chkCount), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(chkSum, 12));
        sb.Append(SKS_PP_StringFormats::strFill(137, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        chkSum = 0;
        chkCount = 0;
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>