<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EB_Workflow</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_EB_Workflow
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>LedgerJournalWFApprovalStatusManager_Post_completeFromWorkflowEvent</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="args"></param>
    [PostHandlerFor(classStr(LedgerJournalWFApprovalStatusManager), staticMethodStr(LedgerJournalWFApprovalStatusManager, completeFromWorkflowEvent))]
    public static void LedgerJournalWFApprovalStatusManager_Post_completeFromWorkflowEvent(XppPrePostArgs args)
    {
        RefRecId contextRecId = args.getArg('_recId');

        LedgerJournalTable ledgerJournalTable;

        select forUpdate ledgerJournalTable
            where ledgerJournalTable.RecId == contextRecId &&
                ledgerJournalTable.SKS_EFT_JournalState != SKS_EFT_JournalState::NotApplicable &&
                ledgerJournalTable.SKS_EFT_JournalState != SKS_EFT_JournalState::Transferred;

        if((ledgerJournalTable.JournalType == LedgerJournalType::Payment  && SKS_EFT_Setup::find().ModAPEFT)
            ||
            (ledgerJournalTable.JournalType == LedgerJournalType::CustPayment && SKS_EFT_Setup::find().ModAREFT && !LedgerJournalName::find(ledgerJournalTable.JournalName).SKS_CNP_CustReimbursementJournal)
            ||
            (ledgerJournalTable.JournalType == LedgerJournalType::Daily && SKS_EFT_Setup::find().ModBTB && LedgerJournalName::find(ledgerJournalTable.JournalName).SKS_BTB_BankTransferJournal)
            ||
            (ledgerJournalTable.JournalType == LedgerJournalType::CustPayment && SKS_EFT_Setup::find().ModCNP && LedgerJournalName::find(ledgerJournalTable.JournalName).SKS_CNP_CustReimbursementJournal))
        {
            SKS_EFT_CreateAndSendBatch::createMultiThreadBatch(ledgerJournalTable);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>