<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_DE_DEUTSCHE_XML_UK</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_DE_DEUTSCHE_XML_UK Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_DE_DEUTSCHE_XML_UK Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230420';
        dataContractVersion = '1.0';
        conFormatID = ['DE-DEUTSCHE-XML-UK','DE-DEUTSCHE-XML-US','DE-DEUTSCHE-XML-EU','DE-DEUTSCHE-XML-CH'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'DE - Deutsche Bank - United Kingdom - ISO20022',0,'','','DE-DEUTSCHE-XML-UK',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,1,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'DE-DEUTSCHE-XML-UK',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'DE - Deutsche Bank - United States - ISO20022',0,'','','DE-DEUTSCHE-XML-US',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,1,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'DE-DEUTSCHE-XML-UK',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'DE - Deutsche Bank - Europe - ISO20022',0,'','','DE-DEUTSCHE-XML-EU',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,1,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'DE-DEUTSCHE-XML-UK',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'DE - Deutsche Bank - Switzerland - ISO20022',0,'','','DE-DEUTSCHE-XML-CH',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,1,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'DE-DEUTSCHE-XML-UK',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('DE-DEUTSCHE-XML-UK'):
                paymSpecList = this.getPaymSpecsMetaData_DE_DEUTSCHE_XML_UK();
                break;

            case ('DE-DEUTSCHE-XML-US'):
                paymSpecList = this.getPaymSpecsMetaData_DE_DEUTSCHE_XML_US();
                break;

            case ('DE-DEUTSCHE-XML-EU'):
                paymSpecList = this.getPaymSpecsMetaData_DE_DEUTSCHE_XML_EU();
                break;

            case ('DE-DEUTSCHE-XML-CH'):
                paymSpecList = this.getPaymSpecsMetaData_DE_DEUTSCHE_XML_CH();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_DE_DEUTSCHE_XML_CH</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_DE_DEUTSCHE_XML_CH()
    {
        container   paymSpecList;


        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'QRR',1,'QRR','','QRR','TRADE PAY',0,'DE-DEUTSCHE-XML-CH',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_DE_DEUTSCHE_XML_UK</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_DE_DEUTSCHE_XML_UK()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'UK Bacs Payment',1,'UK-BACS','','UK-BACS','TRADE PAY',0,'DE-DEUTSCHE-XML-UK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'EMEA international urgent payment',1,'EMEA-URGP','','EMEA-URGP','TRADE PAY',0,'DE-DEUTSCHE-XML-UK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'EMEA international non - urgent payment',1,'EMEA-NURG','','EMEA-NURG','TRADE PAY',0,'DE-DEUTSCHE-XML-UK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Urgent Payments',1,'DOM-URGT','','DOM-URGT','TRADE PAY',0,'DE-DEUTSCHE-XML-UK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA',1,'SEPA','','SEPA','TRADE PAY',0,'DE-DEUTSCHE-XML-UK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_DE_DEUTSCHE_XML_US</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_DE_DEUTSCHE_XML_US()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'ACH - Cash Concentration and Disbursement',1,'ACH-CCD','','ACH-CCD','TRADE PAY',0,'DE-DEUTSCHE-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'ACH - Prearranged Payment and Deposit',1,'ACH-PPD','','ACH-PPD','TRADE PAY',0,'DE-DEUTSCHE-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International ACH Transaction',1,'ACH-IAT','','ACH-IAT','TRADE PAY',0,'DE-DEUTSCHE-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Wire Payment',1,'DOM-WIRE','','DOM-WIRE','TRADE PAY',0,'DE-DEUTSCHE-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International Wire Payment',1,'INT-WIRE','','INT-WIRE','TRADE PAY',0,'DE-DEUTSCHE-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_DE_DEUTSCHE_XML_EU</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_DE_DEUTSCHE_XML_EU()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA Payment',1,'SEPA','','SEPA','TRADE PAY',0,'DE-DEUTSCHE-XML-EU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Non SEPA Payment',1,'NON-SEPA','','NON-SEPA','TRADE PAY',0,'DE-DEUTSCHE-XML-EU',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('DE-DEUTSCHE-XML-UK'):
                notesList = this.getNotesMetaData_DE_DEUTSCHE_XML_UK();
                break;

            case ('DE-DEUTSCHE-XML-US'):
                notesList = this.getNotesMetaData_DE_DEUTSCHE_XML_US();
                break;

            case ('DE-DEUTSCHE-XML-EU'):
                notesList = this.getNotesMetaData_DE_DEUTSCHE_XML_EU();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_DE_DEUTSCHE_XML_UK</Name>
				<Source><![CDATA[
    private container getNotesMetaData_DE_DEUTSCHE_XML_UK()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['DE-DEUTSCHE-XML-UK','UK-BACS','-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['DE-DEUTSCHE-XML-UK','EMEA-URGP','-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['DE-DEUTSCHE-XML-UK','EMEA-NURG','-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_DE_DEUTSCHE_XML_US</Name>
				<Source><![CDATA[
    private container getNotesMetaData_DE_DEUTSCHE_XML_US()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['DE-DEUTSCHE-XML-US','ACH-CCD','-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor Bank Account fields:--Creditor account type is set in the Bank account type field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['DE-DEUTSCHE-XML-US','ACH-PPD','-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor Bank Account fields:--Creditor account type is set in the Bank account type field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['DE-DEUTSCHE-XML-US','ACH-IAT','-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['DE-DEUTSCHE-XML-US','DOM-WIRE','-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['DE-DEUTSCHE-XML-US','INT-WIRE','-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_DE_DEUTSCHE_XML_EU</Name>
				<Source><![CDATA[
    private container getNotesMetaData_DE_DEUTSCHE_XML_EU()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['DE-DEUTSCHE-XML-EU','SEPA','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Payment id is stored in the Invoice journal > General > Payment Id field.::-Tax id is stored in the Account payable > Vendor']);
        notesList = ConIns(notesList,conLen(notesList)+1,['DE-DEUTSCHE-XML-EU','NON-SEPA','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Tax id is stored in the Account payable > Vendor.::-Central bank purpose code stored in the Payment journal > Payment tab. ']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('DE-DEUTSCHE-XML-UK'):
                validationsList = this.getValidationsMetaData_DE_DEUTSCHE_XML_UK();
                break;

            case ('DE-DEUTSCHE-XML-US'):
                validationsList = this.getValidationsMetaData_DE_DEUTSCHE_XML_US();
                break;

            case ('DE-DEUTSCHE-XML-EU'):
                validationsList = this.getValidationsMetaData_DE_DEUTSCHE_XML_EU();
                break;

            case ('DE-DEUTSCHE-XML-CH'):
                validationsList = this.getValidationsMetaData_DE_DEUTSCHE_XML_CH();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_DE_DEUTSCHE_XML_CH</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_DE_DEUTSCHE_XML_CH()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-CH','QRR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-CH','QRR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-CH','QRR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-CH','QRR','','Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',3,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-CH','QRR','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',3,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-CH','QRR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-CH','QRR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-CH','QRR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-CH','QRR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',1,1,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_DE_DEUTSCHE_XML_UK</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_DE_DEUTSCHE_XML_UK()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','UK-BACS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','UK-BACS','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','UK-BACS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','UK-BACS','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','UK-BACS','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','UK-BACS','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','UK-BACS','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','UK-BACS','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','UK-BACS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','UK-BACS','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','UK-BACS','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','UK-BACS','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','UK-BACS','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','Vendor city','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','UK-BACS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > Nm','Name related to Vendor Bank','16','WBenBankName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','UK-BACS','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','UK-BACS','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-URGP','','Swift code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Swift code','GrpHdr > InitgPty > Orgid > BICOrBEI','Swift code','15','WOrdPartySWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-URGP','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-URGP','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-URGP','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-URGP','','Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-URGP','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-URGP','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-URGP','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-URGP','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-URGP','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-URGP','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-URGP','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','vendor City','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-URGP','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-URGP','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','State related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-URGP','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-URGP','','Tax Exempt number','Accounts payable > All vendors > Select a vendor > Invoice and delivery (Fast tab) > Tax(group) > Tax exempt number','PmtInf > CdTrfTxInf > Cdtr > Id > OrgId > Othr > Id','Creditor Id','11','VATNum','','',1,1,1,'15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-URGP','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-URGP','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-NURG','','Swift code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Swift code','GrpHdr > InitgPty > Orgid > BICOrBEI','Swift code','15','WOrdPartySWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-NURG','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-NURG','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-NURG','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-NURG','','Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-NURG','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-NURG','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-NURG','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-NURG','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-NURG','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-NURG','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-NURG','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','vendor City','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-NURG','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','State related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-NURG','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-NURG','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-NURG','','Tax Exempt number','Accounts payable > All vendors > Select a vendor > Invoice and delivery (Fast tab) > Tax(group) > Tax exempt number','PmtInf > CdTrfTxInf > Cdtr > Id > OrgId > Othr > Id','Creditor Id','11','VATNum','','',1,1,1,'15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-NURG','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','EMEA-NURG','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,1,1,'35',0,0]);
       
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','DOM-URGT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','DOM-URGT','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','DOM-URGT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','DOM-URGT','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',3,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','DOM-URGT','','Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',3,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','DOM-URGT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','DOM-URGT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','DOM-URGT','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'6',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','DOM-URGT','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','DOM-URGT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','DOM-URGT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > Nm','Name related to Vendor Bank','16','WBenBankName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','DOM-URGT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','DOM-URGT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'34',0,0]);
       
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','SEPA','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','SEPA','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','SEPA','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','SEPA','','Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,0,'1','20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','SEPA','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','SEPA','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','SEPA','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','SEPA','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-UK','SEPA','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'140',0,0]);
       
        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_DE_DEUTSCHE_XML_US</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_DE_DEUTSCHE_XML_US()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-CCD','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-CCD','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-CCD','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-CCD','','Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-CCD','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-CCD','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-CCD','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-CCD','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-CCD','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-CCD','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-PPD','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-PPD','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-PPD','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-PPD','','Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-PPD','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-PPD','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-PPD','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-PPD','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-PPD','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-PPD','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-IAT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-IAT','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-IAT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-IAT','','Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-IAT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-IAT','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-IAT','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-IAT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-IAT','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-IAT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','vendor City','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-IAT','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-IAT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-IAT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','State related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-IAT','','Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Nm ','Beneficiary Bank Name ','16','WBenBankName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-IAT','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','ACH-IAT','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','DOM-WIRE','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','DOM-WIRE','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','DOM-WIRE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','DOM-WIRE','','Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','DOM-WIRE','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','DOM-WIRE','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','DOM-WIRE','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','DOM-WIRE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','DOM-WIRE','','Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Nm ','Beneficiary Bank Name ','16','WBenBankName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','DOM-WIRE','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','DOM-WIRE','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','INT-WIRE','','Swift code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Swift code','GrpHdr > InitgPty > Orgid > BICOrBEI','Swift code','15','WOrdPartySWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','INT-WIRE','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','INT-WIRE','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','INT-WIRE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','INT-WIRE','','Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','INT-WIRE','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','INT-WIRE','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','INT-WIRE','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','INT-WIRE','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','INT-WIRE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','INT-WIRE','','Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Nm ','Beneficiary Bank Name ','16','WBenBankName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','INT-WIRE','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-US','INT-WIRE','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,1,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_DE_DEUTSCHE_XML_EU</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_DE_DEUTSCHE_XML_EU()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','SEPA','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','SEPA','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','SEPA','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','SEPA','','Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','SEPA','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','SEPA','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','SEPA','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','SEPA','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','SEPA','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','SEPA','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > Nm','Name related to Vendor Bank','16','WBenBankCountryRegionId','','',0,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','SEPA','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','SEPA','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','SEPA','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','SEPA','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','SEPA','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','Vendor city','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','SEPA','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','SEPA','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','NON-SEPA','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','NON-SEPA','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','NON-SEPA','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','NON-SEPA','','Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','NON-SEPA','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','NON-SEPA','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','US','5','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','NON-SEPA','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','NON-SEPA','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','US','5','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','NON-SEPA','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','NON-SEPA','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > Nm','Name related to Vendor Bank','16','WBenBankCountryRegionId','','',0,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','NON-SEPA','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','NON-SEPA','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','NON-SEPA','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','NON-SEPA','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','NON-SEPA','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','Vendor city','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','NON-SEPA','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DEUTSCHE-XML-EU','NON-SEPA','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,1,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['DE-DEUTSCHE-XML-UK','Charges','Charges']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DEUTSCHE-XML-UK','Charges','Borne By Debtor','DEBT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DEUTSCHE-XML-UK','Charges','Borne By Creditor','CRED']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DEUTSCHE-XML-UK','Charges','Shared','SHAR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DEUTSCHE-XML-UK','Purp','CardPayment with CashBack','CDCB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DEUTSCHE-XML-UK','Purp','CashDisbursement','CDCD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DEUTSCHE-XML-UK','Purp','Cash Disbursement with Surcharging','CDCS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DEUTSCHE-XML-UK','Purp','Card Deferred Payment','CDDP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DEUTSCHE-XML-UK','Purp','OriginalCredit','CDOC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DEUTSCHE-XML-UK','Purp','QuasiCash','CDQC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DEUTSCHE-XML-UK','Purp','E-Purse Top Up','ETUP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DEUTSCHE-XML-UK','Purp','Fee Collection','FCOL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DEUTSCHE-XML-UK','Purp','Mobile Top Up','MTUP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DEUTSCHE-XML-UK','Purp','AccountManagement','ACCT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DEUTSCHE-XML-UK','Purp','CashManagementTransfer','CASH']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DEUTSCHE-XML-UK','Purp','CollectionPayment','COLL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DEUTSCHE-XML-UK','Purp','CashDisbursement','CSDB']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('DE-DEUTSCHE-XML-EU'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_DE_DEUTSCHE_XML_EU();
                break;

            case ('DE-DEUTSCHE-XML-US'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_DE_DEUTSCHE_XML_US();
                break;

            case ('DE-DEUTSCHE-XML-UK'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_DE_DEUTSCHE_XML_UK();
                break;

            case ('DE-DEUTSCHE-XML-CH'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_DE_DEUTSCHE_XML_CH();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_DE_DEUTSCHE_XML_CH</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_DE_DEUTSCHE_XML_CH()
    {
        container   paymSpecFieldsList;

   

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_DE_DEUTSCHE_XML_EU</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_DE_DEUTSCHE_XML_EU()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['DE-DEUTSCHE-XML-UK','DE-DEUTSCHE-XML-EU','SEPA','Charges','Charges',0,'Charges','',1,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['DE-DEUTSCHE-XML-UK','DE-DEUTSCHE-XML-EU','NON-SEPA','Charges','Charges',0,'Charges','',1,'','','CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_DE_DEUTSCHE_XML_US</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_DE_DEUTSCHE_XML_US()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['DE-DEUTSCHE-XML-UK','DE-DEUTSCHE-XML-US','ACH-CCD','Charges','Charges',0,'Charges','',1,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['DE-DEUTSCHE-XML-UK','DE-DEUTSCHE-XML-US','ACH-IAT','Charges','Charges',0,'Charges','',1,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['DE-DEUTSCHE-XML-UK','DE-DEUTSCHE-XML-US','ACH-PPD','Charges','Charges',0,'Charges','',1,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['DE-DEUTSCHE-XML-UK','DE-DEUTSCHE-XML-US','DOM-WIRE','Charges','Charges',0,'Charges','',1,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['DE-DEUTSCHE-XML-UK','DE-DEUTSCHE-XML-US','INT-WIRE','Charges','Charges',0,'Charges','',1,'','','CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_DE_DEUTSCHE_XML_UK</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_DE_DEUTSCHE_XML_UK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['DE-DEUTSCHE-XML-UK','DE-DEUTSCHE-XML-UK','EMEA-NURG','Charges','Charges',0,'Charges','',1,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['DE-DEUTSCHE-XML-UK','DE-DEUTSCHE-XML-UK','EMEA-URGP','Charges','Charges',0,'Charges','',1,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['DE-DEUTSCHE-XML-UK','DE-DEUTSCHE-XML-UK','UK-BACS','Charges','Charges',0,'Charges','',1,'','','CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['DE-DEUTSCHE-XML-UK','','CodeLookup','Purp','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['DE-DEUTSCHE-XML-UK','','CodeLookupValues','Purp','Bank Loan Delayed Draw Funding','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['DE-DEUTSCHE-XML-UK','','CodeLookupValues','Purp','Bank Loan Fees','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['DE-DEUTSCHE-XML-UK','','CodeLookupValues','Purp','Bank Loan Funding Memo','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['DE-DEUTSCHE-XML-UK','','CodeLookupValues','Purp','Bank Loan Accrued Interest Payment','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['DE-DEUTSCHE-XML-UK','','CodeLookupValues','Purp','Bank Loan Principal Paydown','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['DE-DEUTSCHE-XML-UK','','CodeLookupValues','Purp','Card Bulk Clearing','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['DE-DEUTSCHE-XML-UK','','CodeLookupValues','Purp','Deposit','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['DE-DEUTSCHE-XML-UK','DE-DEUTSCHE-XML-EU','PaymSpecFields','NON-SEPA','Purp','']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['DE-DEUTSCHE-XML-UK','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['DE-DEUTSCHE-XML-UK','*','FormatValidations','*','16','WChargesIndic']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['DE-DEUTSCHE-XML-UK','*','FormatValidations','*','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['DE-DEUTSCHE-XML-UK','*','FormatValidations','*','15','W02']);


        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('DE-DEUTSCHE-XML-US'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_DE_DEUTSCHE_XML_US();
                break;

            case ('DE-DEUTSCHE-XML-UK'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_DE_DEUTSCHE_XML_UK();
                break;

            case ('DE-DEUTSCHE-XML-EU'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_DE_DEUTSCHE_XML_EU();
                break;

            case ('DE-DEUTSCHE-XML-CH'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_DE_DEUTSCHE_XML_CH();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_DE_DEUTSCHE_XML_CH</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_DE_DEUTSCHE_XML_CH()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['DE-DEUTSCHE-XML-UK','DE-DEUTSCHE-XML-CH','InitiatingprtyId','Initiating party Id',1,'InitiatingprtyId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > Orgid > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['DE-DEUTSCHE-XML-UK','DE-DEUTSCHE-XML-CH','DbtrAgtBranchId','DbtrAgt Branch Id',1,'DbtrAgtBranchId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > DbtrAgt > BrnchId > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_DE_DEUTSCHE_XML_US</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_DE_DEUTSCHE_XML_US()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['DE-DEUTSCHE-XML-UK','DE-DEUTSCHE-XML-US','InitiatingprtyId','Initiating party Id',1,'InitiatingprtyId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > Orgid > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_DE_DEUTSCHE_XML_UK</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_DE_DEUTSCHE_XML_UK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['DE-DEUTSCHE-XML-UK','DE-DEUTSCHE-XML-UK','InitiatingprtyId','Initiating party Id',1,'InitiatingprtyId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > Orgid > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['DE-DEUTSCHE-XML-UK','DE-DEUTSCHE-XML-UK','DbtrAgtBranchId','DbtrAgt Branch Id',1,'DbtrAgtBranchId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > DbtrAgt > BrnchId > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_DE_DEUTSCHE_XML_EU</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_DE_DEUTSCHE_XML_EU()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['DE-DEUTSCHE-XML-UK','DE-DEUTSCHE-XML-EU','InitiatingprtyId','Initiating party Id',1,'InitiatingprtyId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > Orgid > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('DE-DEUTSCHE-XML-UK'):
            case ('DE-DEUTSCHE-XML-US'):
            case ('DE-DEUTSCHE-XML-EU'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('InitiatingprtyId', gSKS_EFT_Bank.W01);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('DE-DEUTSCHE-XML-UK'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
            case ('DE-DEUTSCHE-XML-US'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>