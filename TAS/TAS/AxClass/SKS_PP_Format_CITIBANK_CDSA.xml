<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_CITIBANK_CDSA</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_CITIBANK_CDSA Extends SKS_PP_Format_BankGroup
{
    int mAcctCnt;
    int mTotal_Cnt;
    real mRealVoidAmt;
    real mRealIssueAmt;
    real mAmtTotal;
    int mHashTotal;
    int mReportLvlCnt;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateAmt</Name>
				<Source><![CDATA[
    real calculateAmt(SKS_PP_FileDetail SKS_PP_FileDetail_2)
    {
        real retVal;
    
        if (SKS_PP_FileDetail_2.ChkType != SKS_PP_ChequeType::Cheque)
        {
            retVal = 0;
        }
        else
        {
            retVal = Abs(SKS_PP_FileDetail_2.ChkCuryAmt);
        }
    
        return retVal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>IssueAmt</Name>
				<Source><![CDATA[
    real IssueAmt(SKS_PP_FileDetail SKS_PP_FileDetail_2)
    {
        real result;
    
        if (SKS_PP_FileDetail_2.ChkType != SKS_PP_ChequeType::Cheque)
        {
            result = 0;
        }
        else
        {
            result = (SKS_PP_FileDetail_2.ChkCuryAmt);
        }
    
        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    //' Citibank - Controlled Disbursement - Single Account - Detail Record
        //' Courtesy of AeroAstro
    
        //' Pos 01-08     8       Account Number (RJ-LZF)
        //' Pos 09-19     11      Check Amount (RJ-LZF), Voids - full amount
        //' Pos 20-29     10      Check Number (RJ-LZF)
        //' Pos 30-35     6       Check Issue Date (YYMMDD)
        //' Pos 36-65     30      Additional Data - blank
        //' Pos 66-67     1       Void Indicator ('V' - void)
    protected str txtDetail()
    {
        // Note that the Working Table has records at the Voucher level (used by EFT as well)
        //' They are summarized and coded - so that you can easily get just the check records
        //' See the Report | Record Selection filter -
        //' These filters will give the Check Records only
        //' {SKS_PP_FileDetail.ComputerName} = RIPARAM('ComputerName')  - File can be used by multiple computers at once
        //' and {SKS_PP_FileDetail.RecordSummary} <> 'X'                - 'X' records need to be skipped over
        //' and {SKS_PP_FileDetail.FileType} = 'P'                      - 'P' records are for Positive Pay
    
        //' Below only want records with RecSection = '20P' (payment record)
        //' RecSection - defines sections:
        //' 10H - Header
        //' 20P - Payments
        //'   RecType: (within Payments)
        //'   10V - Voucher
        //'   20P - PreNotes (should not be any with Pos Pay)
        //' 30B - Blockfill
        //' 40T - Trailer
    
        //' The field with the summarized information for a check is RECORDSUMAMT (see below)
    
        Str Amt;
        Str ItemType;
        int Mult;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        Mult = 1;
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
    
        }
        else
        {
            ItemType = ' ';
        }
    
        //  Now remove decimal point - length 11
        Amt =  SKS_PP_StringFormats::strMoney(Mult * mSKS_PP_FileDetail.ChkCuryAmt, 11);
    
        mTotal_Cnt++;
        mRealVoidAmt = mRealVoidAmt + this.VoidAmt(mSKS_PP_FileDetail);
        mRealIssueAmt = mRealIssueAmt + this.IssueAmt(mSKS_PP_FileDetail);
        mAmtTotal = mAmtTotal + this.calculateAmt(mSKS_PP_FileDetail);
        mHashTotal = mHashTotal + str2int(strrem(mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
    
        sb.Append(SKS_PP_StringFormats::strFill(8, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(Amt);
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(SKS_PP_StringFormats::strFill(30, substr(mSKS_PP_FileDetail.VendName,1,30), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(ItemType);
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    // Citibank - Controlled Disbursement - Single Account - Trailer Record
        // Courtesy of AeroAstro
    
        // Pos 01-01     1       Indicator ('T')
        // Pos 02-12     11      Trailer Amount (RJ-LZF)
        // Pos 13-23     11      Trailer Item Count (RJ-LZF)
    protected str txtGroupTrailer()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        Str TotalAmt;
        real locVoidAmt;
        real locIssueAmt;
        real locTotalAmt;
        str Cnt;
        ;
    
        mAcctCnt++;
    
        mReportLvlCnt = mReportLvlCnt + mTotal_cnt;
        locIssueAmt = mRealIssueAmt;
        locVoidAmt = mRealVoidAmt;
        locTotalAmt = mRealIssueAmt + mRealVoidAmt;
        mAmtTotal = mAmtTotal + mRealIssueAmt + mRealVoidAmt;
        mRealIssueAmt = 0;
        mRealVoidAmt = 0;
    
        Cnt = SKS_PP_StringFormats::strFill(11, int2str(mTotal_Cnt), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left);
        TotalAmt = SKS_PP_StringFormats::strMoney(locTotalAmt, 11);
    
        sb.Append('T');
        sb.Append(TotalAmt);
        sb.Append(Cnt);
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>VoidAmt</Name>
				<Source><![CDATA[
    real VoidAmt(SKS_PP_FileDetail SKS_PP_FileDetail_2)
    {
        real result;
    
        if (SKS_PP_FileDetail_2.ChkType != SKS_PP_ChequeType::Cheque)
        {
            result = Abs(SKS_PP_FileDetail_2.chkcuryamt);
        }
        else
        {
            result = 0;
        }
    
        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>