<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_MAL_US_CHASE_SUA_28</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_EFT_MAL_US_CHASE_SUA_28 extends SKS_EFT_Mal
{
    SKS_EFT_SequenceNumber mSequenceNumber;
    str mIntId;
    #define.Separator(',')
    #define.DoubleQuotes('"')
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    //JPMChase Single-Use Accounts v2.8
    //MVL Comma Delineated File
    //Header Record
    //Vendor Record
    protected void formatStructure()
    {
    
        //Header Record
        this.rec_MHeader();
    
        while(mSKS_EFT_FileDetail)
        {
            //Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();
    
            //Vendor Record
            this.rec_MVendor();
    
            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_MHeader</Name>
				<Source><![CDATA[
    //Nbr   Content
    // 1    Record ID
    
    public boolean rec_MHeader()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        // 1    Record ID
        sb.Append(this.wrapField('CSVVENDOR', false));
    
        this.fileWrite(sb.ToString());
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_MVendor</Name>
				<Source><![CDATA[
    //Nbr   Content
    // 1    ERP Vendor ID
    // 2    ERP Set ID
    // 3    Vendor Name
    // 4    Alias Name                                  (Reserved)
    // 5    Tax ID Number
    // 6    DUNS                                        (Not Used)
    // 7    GST_HST                                     (Not Used)
    // 8    LTN                                         (Not Used)
    // 9    VAT                                         (Not Used)
    //10    Last Update                                 (Not Used)
    //11    Supplier Category                           (Not Used)
    //12    Transoporation Mode                         (Not Used)
    //13    Status
    //14    ERP Site ID
    //15    Site Name
    //16    Vendor Address 1
    //17    Vendor Address 2
    //18    Vendor Address 3
    //19    Vendor Address 4
    //20    Vendor Address 5
    //21    Vendor City
    //22    Vendor State
    //23    Vendor Zip
    //24    Vendor Country
    //25    Vendor Phone Number
    //26    Vendor Fax Number
    //27    Effective Status
    //28    Vendor Type
    //29    Vendor Scope
    //30    Pre Paid                                    (Not Used)
    //31    Procurement Site
    //32    Payment Terms                               (Not Used)
    //33    Group ID                                    (Not Used)
    //34    Activate Supplier
    //35    GL Account                                  (Not Used)
    //36    PO Delivery Mechanism                       (Not Used)
    //37    PO Delivery Fax                             (Not Used)
    //38    PO Delivery Email                           (Not Used)
    //39    Invoice
    //40    Payment
    //41    Enroll By Date                              (Not Used)
    //42    Annual Payment Volume                       (Not Used)
    //43    Annual Invoice Volume                       (Not Used)
    //44    Annual Spend                                (Not Used)
    //45    Annual Spend Currency                       (Not Used)
    //46    Annual PO Volume                            (Not Used)
    //47    Reminder Send Days Before                   (Not Used)
    //48    Strategy Type                               (Not Used)
    //49    Do not Use                                  (Not Used)
    //50    DPO                                         (Not Used)
    //51    NAICS                                       (Not Used)
    //52    Program Type-ACH and Wire Payments          (Not Used)
    //53    Program Type-Card
    //54    Program Type-Automated Card Settlement      (Not Used)
    //55    Program Type-Check                          (Not Used)
    //56    Program Type-PO Delivery                    (Not Used)
    //57    Program Type-Electronic Invoiceing          (Not Used)
    //58    Program Type-Terms Enrollment for Discounts (Not Used)
    //59    Supplier ID                                 (Not Used)
    //60    Opportunity ID                              (Not Used)
    //61    Site Status
    //62    Error Message                               (Not Used)
    //63    ERP Bank ID                                 (Not Used)
    //64    ERP Account ID                              (Not Used)
    //65    Vendor Bank Routing Number                  (Not Used)
    //66    Account Number                              (Not Used)
    //67    Vendor Bank Name                            (Not Used)
    //68    Account Name                                (Not Used)
    //69    Account Type                                (Not Used)
    //70    Bank Account Currency                       (Not Used)
    //71    ERP Contact ID
    //72    Contact Name
    //73    Contact Email
    //74    Contact Effective Status
    //75    Contact Title                               (Not Used)
    //76    PCard Accept Flag
    //77    PCard Merchant Bank
    //78    PCard_Merchant_Email_Address
    
    public boolean rec_MVendor()
    {
        System.Text.StringBuilder   sb = new System.Text.StringBuilder();
        str email;
        str name;
        ;
    
        // 1    ERP Vendor ID
        sb.Append(this.wrapField(mSKS_EFT_VendorPaym.VendAccount, true, 50));
    
        // 2    ERP Set ID
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.dataAreaId, true, 16));
    
        // 3    Vendor Name
        sb.Append(this.wrapField(mSKS_EFT_VendorPaym.WBeneName, true, 100, true));
    
        // 4    Alias Name                                  (Reserved)
        sb.Append(this.wrapField(''));
    
        // 5    Tax ID Number
        sb.Append(this.wrapField(''));
    
        // 6    DUNS                                        (Not Used)
        sb.Append(this.wrapField(''));
    
        // 7    GST_HST                                     (Not Used)
        sb.Append(this.wrapField(''));
    
        // 8    LTN                                         (Not Used)
        sb.Append(this.wrapField(''));
    
        // 9    VAT                                         (Not Used)
        sb.Append(this.wrapField(''));
    
        //10    Last Update                                 (Not Used)
        sb.Append(this.wrapField(''));
    
        //11    Supplier Category                           (Not Used)
        sb.Append(this.wrapField(''));
    
        //12    Transoporation Mode                         (Not Used)
        sb.Append(this.wrapField(''));
    
        //13    Status
        sb.Append(this.wrapField('A'));
    
        //14    ERP Site ID
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.AccountCompany, true, 76));
    
        //15    Site Name
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.AccountName, true, 100, true));
    
        //16    Vendor Address 1
        sb.Append(this.wrapField(mSKS_EFT_VendorPaym.WBeneAddr, true, 35, true));
    
        //17    Vendor Address 2
        sb.Append(this.wrapField(mSKS_EFT_VendorPaym.WBeneAddr2, true, 35, true));
    
        //18    Vendor Address 3
        sb.Append(this.wrapField(''));
    
        //19    Vendor Address 4
        sb.Append(this.wrapField(''));
    
        //20    Vendor Address 5
        sb.Append(this.wrapField(''));
    
        //21    Vendor City
        sb.Append(this.wrapField(mSKS_EFT_VendorPaym.WBeneCity, true, 30));
    
        //22    Vendor State
        sb.Append(this.wrapField(mSKS_EFT_VendorPaym.WBeneState, true, 2));
    
        //23    Vendor Zip
        sb.Append(this.wrapField(mSKS_EFT_VendorPaym.WBeneZipPostal, true, 20));
    
        //24    Vendor Country
        sb.Append(this.wrapField(this.getLogisticsAddressCountryISO(mSKS_EFT_VendorPaym.WBeneCountryRegionId), true, 30));
    
        //25    Vendor Phone Number
        sb.Append(this.wrapField(this.getAddressContactInfo(mSKS_EFT_VendorPaym.WBeneRemittanceLocation, LogisticsElectronicAddressMethodType::Phone), true, 25, true));
    
        //26    Vendor Fax Number
        sb.Append(this.wrapField(this.getAddressContactInfo(mSKS_EFT_VendorPaym.WBeneRemittanceLocation, LogisticsElectronicAddressMethodType::Fax), true, 25, true));
    
        //27    Effective Status
        sb.Append(this.wrapField('A'));
    
        //28    Vendor Type
        sb.Append(this.wrapField('C'));
    
        //29    Vendor Scope
        sb.Append(this.wrapField('Public'));
    
        //30    Pre Paid                                    (Not Used)
        sb.Append(this.wrapField(''));
    
        //31    Procurement Site
        sb.Append(this.wrapField('0'));
    
        //32    Payment Terms                               (Not Used)
        sb.Append(this.wrapField(''));
    
        //33    Group ID                                    (Not Used)
        sb.Append(this.wrapField(''));
    
        //34    Activate Supplier
        sb.Append(this.wrapField('N'));
    
        //35    GL Account                                  (Not Used)
        sb.Append(this.wrapField(''));
    
        //36    PO Delivery Mechanism                       (Not Used)
        sb.Append(this.wrapField(''));
    
        //37    PO Delivery Fax                             (Not Used)
        sb.Append(this.wrapField(''));
    
        //38    PO Delivery Email                           (Not Used)
        sb.Append(this.wrapField(''));
    
        //39    Invoice
        sb.Append(this.wrapField('0'));
    
        //40    Payment
        sb.Append(this.wrapField('1'));
    
        //41    Enroll By Date                              (Not Used)
        sb.Append(this.wrapField(''));
    
        //42    Annual Payment Volume                       (Not Used)
        sb.Append(this.wrapField(''));
    
        //43    Annual Invoice Volume                       (Not Used)
        sb.Append(this.wrapField(''));
    
        //44    Annual Spend                                (Not Used)
        sb.Append(this.wrapField(''));
    
        //45    Annual Spend Currency                       (Not Used)
        sb.Append(this.wrapField(''));
    
        //46    Annual PO Volume                            (Not Used)
        sb.Append(this.wrapField(''));
    
        //47    Reminder Send Days Before                   (Not Used)
        sb.Append(this.wrapField(''));
    
        //48    Strategy Type                               (Not Used)
        sb.Append(this.wrapField(''));
    
        //49    Do not Use                                  (Not Used)
        sb.Append(this.wrapField(''));
    
        //50    DPO                                         (Not Used)
        sb.Append(this.wrapField(''));
    
        //51    NAICS                                       (Not Used)
        sb.Append(this.wrapField(''));
    
        //52    Program Type-ACH and Wire Payments          (Not Used)
        sb.Append(this.wrapField(''));
    
        //53    Program Type-Card
        sb.Append(this.wrapField('1'));
    
        //54    Program Type-Automated Card Settlement      (Not Used)
        sb.Append(this.wrapField(''));
    
        //55    Program Type-Check                          (Not Used)
        sb.Append(this.wrapField(''));
    
        //56    Program Type-PO Delivery                    (Not Used)
        sb.Append(this.wrapField(''));
    
        //57    Program Type-Electronic Invoiceing          (Not Used)
        sb.Append(this.wrapField(''));
    
        //58    Program Type-Terms Enrollment for Discounts (Not Used)
        sb.Append(this.wrapField(''));
    
        //59    Supplier ID                                 (Not Used)
        sb.Append(this.wrapField(''));
    
        //60    Opportunity ID                              (Not Used)
        sb.Append(this.wrapField(''));
    
        //61    Site Status
        sb.Append(this.wrapField('A'));
    
        //62    Error Message                               (Not Used)
        sb.Append(this.wrapField(''));
    
        //63    ERP Bank ID                                 (Not Used)
        sb.Append(this.wrapField(''));
    
        //64    ERP Account ID                              (Not Used)
        sb.Append(this.wrapField(''));
    
        //65    Vendor Bank Routing Number                  (Not Used)
        sb.Append(this.wrapField(''));
    
        //66    Account Number                              (Not Used)
        sb.Append(this.wrapField(''));
    
        //67    Vendor Bank Name                            (Not Used)
        sb.Append(this.wrapField(''));
    
        //68    Account Name                                (Not Used)
        sb.Append(this.wrapField(''));
    
        //69    Account Type                                (Not Used)
        sb.Append(this.wrapField(''));
    
        //70    Bank Account Currency                       (Not Used)
        sb.Append(this.wrapField(''));
    
        //71    ERP Contact ID
        sb.Append(this.wrapField('1'));
    
        //72    Contact Name
        name = this.getContactName(mSKS_EFT_VendorPaym.LogisticsElectronicAddressRecId);
        if(name == '')
        {
            name = 'FIRST LAST';
        }
        sb.Append(this.wrapField(name, true, 0, true));
    
        //73    Contact Email
        email = this.getContactEmail(mSKS_EFT_VendorPaym.LogisticsElectronicAddressRecId);
        if(email == '')
        {
            sb.Append(this.wrapField('null@jpmchase.com'));
        }
        else
        {
            sb.Append(this.wrapField(email, true, 60, true));
        }
    
        //74    Contact Effective Status
        sb.Append(this.wrapField('A'));
    
        //75    Contact Title                               (Not Used)
        sb.Append(this.wrapField(''));
    
        //76    PCard Accept Flag
        sb.Append(this.wrapField('Y'));
    
        //77    PCard Merchant Bank
        sb.Append(this.wrapField('Other'));
    
        //78    PCard_Merchant_Email_Address
        sb.Append(this.wrapField('null@jpmchase.com', false));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '', boolean _addSeparator = true, int _fieldLength = 0, boolean _quotes = false)
    {
        str text;
        ;
        if(_fieldLength > 0)
        {
            text = subStr(_field, 1, _fieldLength);
        }
        else
        {
            text = _field;
        }
        if(_quotes && text != '')
        {
            text = #DoubleQuotes + text + #DoubleQuotes;
        }
        if(_addSeparator)
        {
            text += #Separator;
        }
        return text;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>