<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_CA_SCOTIA_PIAP_v21</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_CA_SCOTIA_PIAP_v21 Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_CA_SCOTIA_PIAP_v21 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220813';
        dataContractVersion = '1.0';
        conFormatID = ['CA-SCOTIA-PIAP-v21'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','Customer name','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',1,'Canada - Scotia bank - PIAP version 2.1',0,'','','CA-SCOTIA-PIAP-v21',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,'',0,'','','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'CA-SCOTIA-PIAP-v21',0,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('CA-SCOTIA-PIAP-v21'):
                paymSpecList = this.getPaymSpecsMetaData_CA_SCOTIA_PIAP_v21();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_CA_SCOTIA_PIAP_v21</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_CA_SCOTIA_PIAP_v21()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,1,0,'Wire - Priority',1,'PRIORITY','','Wire-P','DIRECT PAY',0,'CA-SCOTIA-PIAP-v21',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,1,0,'Wire - Regular',1,'WIRE','','Wire-R','DIRECT PAY',0,'CA-SCOTIA-PIAP-v21',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'ACH',1,'ACH','','ACH','TRADE PAY',0,'CA-SCOTIA-PIAP-v21',0,0,0,1,1,0,0,0,1,0,0,1,0,0,0,0,0,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,1,0,'Payment - 460',1,'460','','PMT-460','TRADE PAY',0,'CA-SCOTIA-PIAP-v21',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,1,0,'CHK',1,'CHK','','CHK','TRADE PAY',0,'CA-SCOTIA-PIAP-v21',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('CA-SCOTIA-PIAP-v21'):
                notesList = this.getNotesMetaData_CA_SCOTIA_PIAP_v21();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_CA_SCOTIA_PIAP_v21</Name>
				<Source><![CDATA[
    private container getNotesMetaData_CA_SCOTIA_PIAP_v21()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['CA-SCOTIA-PIAP-v21','Wire-P','-Does not allow Vendor bank debit.:-The Customer number on the Wire/IAT Ordering party tab of eBanking Suite > Bank Account > AP EFT+ is required.:-The Customer name is set in Company info on eBanking Suite > Bank Account > AP EFT+.:-Debit Bank (DFI) number:--If the Institution code is set on the Wire/IAT ordering party tab of eBanking Suite > Bank Account > AP EFT+, the DFI will be 0 + Institution code + the Bank Routing number.:--Otherwise, if the SWIFT code is set on the Bank account in Cash and Bank management, it will be used.:--If both are blank, the Originating DFI id on the Company info tab of the AP EFT+ Bank Account will be used.::-The Originator Short name is required and stored in the Short name field on the Wire/IAT ordering party tab of eBanking Suite > Bank Account > AP EFT+.:-The Originator Long name is required and stored in the Name field on the Wire/IAT ordering party tab of eBanking Suite > Bank Account > AP EFT+.:-The destination country is required and stored in the Country/region field on the Beneficiary bank section of the Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications.:-The Debit Bank account number is required and is stored in the Bank Account number field.:-Payee Name is required and set in the Beneficiary Name field on the Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications.:-Payee (DFI) identification number:--If the Institution code is set on the Account info tab of Vendor eBanking details > Payment specifications, the DFI will be 0 + Institution code + the Vendor Bank Routing number.:--Otherwise, if the SWIFT code is populated on the Vendor Bank account, then it will be used.:--If both are blank, the Vendor Bank Routing number will be used.::-IBAN on the Vendor Bank account will be included if populated.:-The Beneficiary Name and Address information are set in the fields on the Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CA-SCOTIA-PIAP-v21','Wire-R','-Does not allow Vendor bank debit.:-The Customer number on the Wire/IAT Ordering party tab of eBanking Suite > Bank Account > AP EFT+ is required.:-The Customer name is set in Company info on eBanking Suite > Bank Account > AP EFT+.:-Debit Bank (DFI) number:--If the Institution code is set on the Wire/IAT ordering party tab of eBanking Suite > Bank Account > AP EFT+, the DFI will be 0 + Institution code + the Bank Routing number.:--Otherwise, if the SWIFT code is set on the Bank account in Cash and Bank management, it will be used.:--If both are blank, the Originating DFI id on the Company info tab of the AP EFT+ Bank Account will be used.::-The Originator Short name is required and stored in the Short name field on the Wire/IAT ordering party tab of eBanking Suite > Bank Account > AP EFT+.:-The Originator Long name is required and stored in the Name field on the Wire/IAT ordering party tab of eBanking Suite > Bank Account > AP EFT+.:-The destination country is required and stored in the Country/region field on the Beneficiary bank section of the Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications.:-The Debit Bank account number is required and is stored in the Bank Account number field.:-Payee Name is required and set in the Beneficiary Name field on the Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications.:-Payee (DFI) identification number:--If the Institution code is set on the Account info tab of Vendor eBanking details > Payment specifications, the DFI will be 0 + Institution code + the Vendor Bank Routing number.:--Otherwise, if the SWIFT code is populated on the Vendor Bank account, then it will be used.:--If both are blank, the Vendor Bank Routing number will be used.::-IBAN on the Vendor Bank account will be included if populated.:-The Beneficiary Name and Address information are set in the fields on the Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CA-SCOTIA-PIAP-v21','ACH','-Does not allow Vendor bank debit.:-The Customer number on the Wire/IAT Ordering party tab of eBanking Suite > Bank Account > AP EFT+ is required.:-The Customer name is set in Company info on eBanking Suite > Bank Account > AP EFT+.:-Debit Bank (DFI) number:--If the Institution code is set on the Wire/IAT ordering party tab of eBanking Suite > Bank Account > AP EFT+, the DFI will be 0 + Institution code + the Bank Routing number.:--Otherwise, if the SWIFT code is set on the Bank account in Cash and Bank management, it will be used.:--If both are blank, the Originating DFI id on the Company info tab of the AP EFT+ Bank Account will be used.::-The Originator Short name is required and stored in the Short name field on the Wire/IAT ordering party tab of eBanking Suite > Bank Account > AP EFT+.:-The Originator Long name is required and stored in the Name field on the Wire/IAT ordering party tab of eBanking Suite > Bank Account > AP EFT+.:-The destination country is required and stored in the Country/region field on the Beneficiary bank section of the Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications.:-The Debit Bank account number is required and is stored in the Bank Account number field.:-Payee Name is required and set in the Beneficiary Name field on the Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications.:-The Beneficiary Name and Address information are set in the fields on the Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CA-SCOTIA-PIAP-v21','PMT-460','-Does not allow Vendor bank debit.:-The Customer number on the Wire/IAT Ordering party tab of eBanking Suite > Bank Account > AP EFT+ is required.:-The Customer name is set in Company info on eBanking Suite > Bank Account > AP EFT+.:-Debit Bank (DFI) number:--If the Institution code is set on the Wire/IAT ordering party tab of eBanking Suite > Bank Account > AP EFT+, the DFI will be 0 + Institution code + the Bank Routing number.:--Otherwise, if the SWIFT code is set on the Bank account in Cash and Bank management, it will be used.:--If both are blank, the Originating DFI id on the Company info tab of the AP EFT+ Bank Account will be used.::-The Originator Short name is required and stored in the Short name field on the Wire/IAT ordering party tab of eBanking Suite > Bank Account > AP EFT+.:-The Originator Long name is required and stored in the Name field on the Wire/IAT ordering party tab of eBanking Suite > Bank Account > AP EFT+.:-The destination country is required and stored in the Country/region field on the Wire/IAT Ordering party tab of eBanking Suite > Bank Account > AP EFT+.:-The Debit Bank account numberis required and is stored in the Bank Account number field.:-Payee Name is required and set in the Beneficiary Name field on the Wire transfer/IAT - 1 tab of Vendor eBanking details > Payment specifications.:-Payee (DFI) identification number:--If the Institution code is set on the Account info tab of Vendor eBanking details > Payment specifications, the DFI will be 0 + Institution code + the Vendor Bank Routing number.:--Otherwise, if the SWIFT code is populated on the Vendor Bank account, then it will be used.:--If both are blank the Vendor Bank Routing number will be used.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('CA-SCOTIA-PIAP-v21'):
                validationsList = this.getValidationsMetaData_CA_SCOTIA_PIAP_v21();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_CA_SCOTIA_PIAP_v21</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_CA_SCOTIA_PIAP_v21()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CA-SCOTIA-PIAP-v21','CHK','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Payment Header Record > Bank account number','Bank account number ',0,'AccountNum','','',1,0,1,'50',0,0]);
        
        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('CA-SCOTIA-PIAP-v21'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_CA_SCOTIA_PIAP_v21();
                break;
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_CA_SCOTIA_PIAP_v21</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_CA_SCOTIA_PIAP_v21()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-SCOTIA-PIAP-v21','CA-SCOTIA-PIAP-v21','PMT-460','InstitutionCode','Institution Code',1,'InstitutionCode','',0,'','XXX','Institution Code']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-SCOTIA-PIAP-v21','CA-SCOTIA-PIAP-v21','Wire-P','InstitutionCode','Institution Code',1,'InstitutionCode','',0,'','XXX','Institution Code']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-SCOTIA-PIAP-v21','CA-SCOTIA-PIAP-v21','Wire-R','InstitutionCode','Institution Code',1,'InstitutionCode','',0,'','XXX','Institution Code']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CA-SCOTIA-PIAP-v21','TestFile','Test file (Y/N)']);

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-SCOTIA-PIAP-v21','TestFile','Y','Y']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CA-SCOTIA-PIAP-v21','TestFile','N','N']);

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('CA-SCOTIA-PIAP-v21'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_CA_SCOTIA_PIAP_v21();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_CA_SCOTIA_PIAP_v21</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_CA_SCOTIA_PIAP_v21()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-SCOTIA-PIAP-v21','CA-SCOTIA-PIAP-v21','ShortName','Short name',1,'ShortName','',1,'','XXXXXXXXXXXXXXX','Short name']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-SCOTIA-PIAP-v21','CA-SCOTIA-PIAP-v21','CustNum','Customer number',1,'CustNum','',0,'','XXXXXXXXXXXXXXXXXXXX','Customer number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-SCOTIA-PIAP-v21','CA-SCOTIA-PIAP-v21','InstitutionCode','Institution code',1,'InstitutionCode','',0,'','XXXX','Institution code']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CA-SCOTIA-PIAP-v21','CA-SCOTIA-PIAP-v21','TestFile','Test file (Y/N)',0,'TestFile','',0,'','','Test file (Y/N)']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('CA-SCOTIA-PIAP-v21'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('ShortName', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('CustNum', gSKS_EFT_Bank.W02);
                }
                if(gSKS_EFT_Bank.W03)
                {
                    this.updateBankFields('InstitutionCode', gSKS_EFT_Bank.W03);
                }
                if(gSKS_EFT_Bank.W04)
                {
                    this.updateBankFields('TestFile', gSKS_EFT_Bank.W04, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('CA-SCOTIA-PIAP-v21'):
                if(gSKS_EFT_VendorPaym.BE01)
                {
                    this.updateVendorFields('InstitutionCode', gSKS_EFT_VendorPaym.BE01);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>