<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_CBT_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_CBT_CSV extends SKS_PP_Format
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        //  Field number                Field Desc
        //      1                       Account #
        //      3                       Check #
        //      6                       Issue/Void (Blank for Issues/"V" for void)
        //      4                       Issue Date
        //      5                       Amt NUMERIC ONLY
        //      6                       Payee
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        int locMult = 1;
        str locTransCode;
    
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            locTransCode = 'V';
            if(mSKS_PP_FileDetail.ChkCuryAmt < 0)
            {
                locMult = -1;
            }
        }
        else
        {
            locTransCode = '';
        }
        //      Account #
        sb.Append(mSKS_PP_FileDetail.BnkBankAcct + ',');
        //      Check #
        sb.Append(mSKS_PP_FileDetail.ChkRefNbr + ',');
        //      Issue/Void (V)
        sb.Append(locTransCode + ',');
        //      Issue Date MMDDYY
        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_PP_FileDetail.ChkDocDate) + ',');
        //     Amount
        sb.Append(num2Str((locMult * mSKS_PP_FileDetail.ChkCuryAmt), 1, 2, 1, 0) + ',');
        //      Payee(stripped of commas)
        sb.Append(strReplace(mSKS_PP_FileDetail.VendName,',',''));
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>