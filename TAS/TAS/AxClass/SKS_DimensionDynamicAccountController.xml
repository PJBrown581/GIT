<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_DimensionDynamicAccountController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>DimensionDynamicAccountController</c> class provides support for multiple account types in the segmented entry control.
/// </summary>
/// This is a framework class. Customizing this class may cause problems with future upgrades to the software.
public class SKS_DimensionDynamicAccountController extends DimensionDynamicAccountController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadLookupData</Name>
				<Source><![CDATA[
    public void loadLookupData(Array _elements, int _currentSegment, AutoCompleteDataMode _autoCompleteMode, str _filterValue, str _lastPagedValue, str _lastPagedTag)
    {
        boolean skipDimLookupMethod = true;
        SysGlobalCache globalCache;

        globalCache = ClassFactory.globalCache();
        globalCache.set(curuserid(), 'SKS_DimensionDynamicAccountController', skipDimLookupMethod);

        changecompany(dataAreaId)
        {
            if (this.parmIsDefaultAccount())
            {
                ledgerDimensionDefaultAccountController.loadLookupData(_elements, _currentSegment, _autoCompleteMode, _filterValue, _lastPagedValue, _lastPagedTag);
            }
            else
            {
                ledgerDimensionAccountController.loadLookupData(_elements, _currentSegment, _autoCompleteMode, _filterValue, _lastPagedValue, _lastPagedTag);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super();
        firstInput = true;

        ledgerDimensionAccountController = new SKS_LedgerDimensionAccountController();
        ledgerDimensionDefaultAccountController = new LedgerDimensionDefaultAccountController();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>