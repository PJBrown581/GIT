<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_KE_COOPBANK_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_KE_COOPBANK_CSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_KE_COOPBANK_CSV  extends SKS_EFT_Format
{
    #define.FormatVersion('20230426')
    #define.BT('BT')
    #define.LBT('LBT')
    #define.MW('MW')
    str purposeText;

    #define.Separator(',')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '', int length = 0,  boolean _addSeparator = true)
    {
        str text;

        if(_addSeparator)
        {
            if(length != 0)
            {
                text = subStr(_field, 1, length) + #Separator;
            }
            else
            {
                text = _field + #Separator;
            }
        }
        else
        {
            text = _field;
        }

        return text;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        //  Header Record
        this.rec_Header();

        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            // Payment Details
            this.rec_PaymentDetails();

            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Header</Name>
				<Source><![CDATA[
    private boolean rec_Header()
    {
        //1     Transaction Type code
        //2     Payment Serial Number
        //3     Debit Account No
        //4     Value Date
        //5     Payment Amount
        //6     Transaction Currency
        //7     Beneficiary Bank Code
        //8     Beneficiary Account No
        //9     Beneficiary Name
        //10    Beneficiary Addr.Line 1
        //11    Beneficiary Addr.Line 2
        //12    Beneficiary Addr.Line 3
        //13    Purpose Code
        //14    Purpose Of Payment
        //15    Customer Reference No
        //16    Charge type
        //17    Charge Account No
        //18    Payment Type
        //19    Deal Rate
        //20    Deal Reference No
        //21    Dealer Name
        //22    Deal Date
        //23    BranchCode
        //24    Mobile Wallet
        //25    Service Provider
        //26    Bene Mobile No
        //----------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        //1     Transaction Type code
        sb.Append(this.wrapField('Transaction Type code'));

        //2     Payment Serial Number
        sb.Append(this.wrapField('Payment Serial Number'));

        //3     Debit Account No
        sb.Append(this.wrapField('Debit Account No'));

        //4     Value Date
        sb.Append(this.wrapField('Value Date'));

        //5     Payment Amount
        sb.Append(this.wrapField('Payment Amount'));

        //6     Transaction Currency
        sb.Append(this.wrapField('Transaction Currency'));

        //7     Beneficiary Bank Code
        sb.Append(this.wrapField('Beneficiary Bank Code'));

        //8     Beneficiary Account No
        sb.Append(this.wrapField('Beneficiary Account No'));

        //9     Beneficiary Name
        sb.Append(this.wrapField('Beneficiary Name'));

        //10    Beneficiary Addr.Line 1
        sb.Append(this.wrapField('Beneficiary Addr.Line 1'));

        //11    Beneficiary Addr.Line 2
        sb.Append(this.wrapField('Beneficiary Addr.Line 2'));

        //12    Beneficiary Addr.Line 3
        sb.Append(this.wrapField('Beneficiary Addr.Line 3'));

        //13    Purpose Code
        sb.Append(this.wrapField('Purpose Code'));

        //14    Purpose Of Payment
        sb.Append(this.wrapField('Purpose Of Payment'));

        //15    Customer Reference No
        sb.Append(this.wrapField('Customer Reference No'));

        //16    Charge type
        sb.Append(this.wrapField('Charge type'));

        //17    Charge Account No
        sb.Append(this.wrapField('Charge Account No'));

        //18    Payment Type
        sb.Append(this.wrapField('Payment Type'));

        //19    Deal Rate
        sb.Append(this.wrapField('Deal Rate'));

        //20    Deal Reference No
        sb.Append(this.wrapField('Deal Reference No'));

        //21    Dealer Name
        sb.Append(this.wrapField('Dealer Name'));

        //22    Deal Date
        sb.Append(this.wrapField('Deal Date'));

        //23    BranchCode
        sb.Append(this.wrapField('BranchCode'));

        //24    Mobile Wallet
        sb.Append(this.wrapField('Mobile Wallet'));

        //25    Service Provider
        sb.Append(this.wrapField('Service Provider'));

        //26    Bene Mobile No
        sb.Append(this.wrapField('Bene Mobile No',0,false));

        this.fileWrite(sb.ToString());

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_PaymentDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_PaymentDetails
    /// </summary>
    /// <returns>boolean</returns>
    boolean rec_PaymentDetails()
    {
        //1     Transaction Type code
        //2     Payment Serial Number
        //3     Debit Account No
        //4     Value Date
        //5     Payment Amount
        //6     Transaction Currency
        //7     Beneficiary Bank Code
        //8     Beneficiary Account No
        //9     Beneficiary Name
        //10    Beneficiary Addr.Line 1
        //11    Beneficiary Addr.Line 2
        //12    Beneficiary Addr.Line 3
        //13    Purpose Code
        //14    Purpose Of Payment
        //15    Customer Reference No
        //16    Charge type
        //17    Charge Account No
        //18    Payment Type
        //19    Deal Rate
        //20    Deal Reference No
        //21    Dealer Name
        //22    Deal Date
        //23    BranchCode
        //24    Mobile Wallet
        //25    Service Provider
        //26    Bene Mobile No
        //

        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;

        //1     Transaction Type code
        sb.Append(this.wrapField(mSKS_EFT_FileFormatPaymSpec.TransactionCode));

        //2     Payment Serial Number
        sb.Append(this.wrapField(''));

        //3     Debit Account No
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.BankBankAcct));

        //4     Value Date
        sb.Append(this.wrapField(strUpr(date2str(mSKS_EFT_FileDetail.PaymentTransDate, 123, DateDay::Digits2, DateSeparator::Slash, DateMonth::Digits2, DateSeparator::Slash, DateYear::Digits4)))); //SKS#DevOps:16054
        
        //5     Payment Amount
        sb.Append(this.wrapField(num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0)));

        //6     Transaction Currency
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.PaymentCurrencyCode));

        //7    Beneficiary Bank Code
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BT || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #LBT)
        {
            sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepSwiftNo));
        }
        else
        {
            sb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('BankCode', mSKS_EFT_FileDetail.RecId)));
        }

        //8    Beneficiary Account No
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankAcct));

        //9     Beneficiary Name
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName)));
  
        //10    Beneficiary Addr.Line 1
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr)));

        //11     Beneficiary Addr.Line 2
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr2)));

        //12    Beneficiary Addr.Line 3
        sb.Append(this.wrapField(''));

        //13     Purpose Code
        sb.Append(this.wrapField('INV'));

        //14     Purpose Of Payment
        str invoiceNumbers;
        while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId && invSKS_EFT_FileDetail.InvoiceNumber != ''
        {
            invoiceNumbersÂ  += ' '+invSKS_EFT_FileDetail.InvoiceNumber;
        }

        sb.Append(this.wrapField(this.CharacterReplacement(strLRTrim(invoiceNumbers))));
        
        //15     Customer Reference No
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.PaymentReference));

        //16     Charge type
        sb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('ChrgBr', mSKS_EFT_FileDetail.RecId)));

        //17     Charge Account No
        sb.Append(this.wrapField(''));

        //18     Payment Type
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #BT:
                sb.Append(this.wrapField('IFT'));
                break;
            case #LBT:
                if((mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur *-1)>1000000)
                {
                    sb.Append(this.wrapField('RTGS'));
                }
                else
                {
                    sb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('PaymentType', mSKS_EFT_FileDetail.RecId)));
                }
                break;
            case #MW:
                sb.Append(this.wrapField('M-SEPA'));
                break;
        }

        //19    Deal Rate
        sb.Append(this.wrapField(''));

        //20    Deal Reference No
        sb.Append(this.wrapField(''));

        //21    Dealer Name
        sb.Append(this.wrapField(''));

        //22    Deal Date
        sb.Append(this.wrapField(''));

        //23    BranchCode
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankTransit));

        //24    Mobile Wallet
        sb.Append(this.wrapField(''));

        //18     Service Provider
        sb.Append(this.wrapField(''));

        //26    Bene Mobile No
        sb.Append(this.wrapField('',0,false));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
        [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
        protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
            join mSKS_EFT_FileDetail_BenBank
            join mSKS_EFT_FileDetail_Intermediary
              order by mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_BenBank.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_Intermediary.RefRecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>