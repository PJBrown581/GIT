<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_UK_MONEYCORP_MT103</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_UK_MONEYCORP_MT103
/// </summary>
class SKS_EFT_FormatMetaData_UK_MONEYCORP_MT103 extends SKS_EFT_Format_MetaData
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20221212';
        dataContractVersion = '1.0';
        conFormatID = ['UK-MONEYCORP-MT103'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,1,1,'','','','',0,'','','','',1,'UK MoneyCorp Swift MT103',0,'','','UK-MONEYCORP-MT103',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-MONEYCORP-MT103',1,0,0]);

        return headerList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('UK-MONEYCORP-MT103'):
                paymSpecList = this.getPaymSpecsMetaData_UK_MONEYCORP_MT103();
                break;
        }
        return paymSpecList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_MONEYCORP_MT103</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_MONEYCORP_MT103()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Payments','99','DOM','','DOM','TRADE PAY',0,'UK-MONEYCORP-MT103',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International - Urgent Standard and Low Value Payments','99','INT','','INT','TRADE PAY',0,'UK-MONEYCORP-MT103',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
        }
        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('UK-MONEYCORP-MT103'):
                validationsList = this.getValidationsMetaData_UK_MONEYCORP_MT103();
                break;
        }
        return validationsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_MONEYCORP_MT103</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_MONEYCORP_MT103()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','IBAN realted to bank','IBAN related to Bank',0,'IBAN','','',1,'0','1','34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Bank Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','Basic Header Block > Service Identifier','Swift code related to bank',0,'SWIFTNo','','',0,0,1,'15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Beneficiary bank swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','Application Header Block  > RECEIVER_ADDRESS','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','59 (Beneficiary)','IBAN related to vendor','9','BankIBAN','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','59 (Beneficiary)','Account number related to Vendor','9','AccountNum','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Beneficiary Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Text Block Content Definition > Beneficiary – Address','Address related to vendor','16','WBeneAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Beneficiary Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Text Block Content Definition > Beneficiary – Address','Address related to vendor','16','WBeneAddr2','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','/BRANCH/','Vendor sort code','9','RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','/NAME/','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','/COUNTRYCODE/','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'0','0',0,0]);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','IBAN realted to bank','IBAN related to Bank',0,'IBAN','','',1,'0','1','34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Bank Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','Basic Header Block > Service Identifier','Swift code related to bank',0,'SWIFTNo','','',0,0,1,'15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Beneficiary bank swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','Application Header Block  > RECEIVER_ADDRESS','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','59 (Beneficiary)','IBAN related to vendor','9','BankIBAN','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','59 (Beneficiary)','Account number related to Vendor','9','AccountNum','','','3','2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Beneficiary Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Text Block Content Definition > Beneficiary – Address','Address related to vendor','16','WBeneAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Beneficiary Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Text Block Content Definition > Beneficiary – Address','Address related to vendor','16','WBeneAddr2','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','/BRANCH/','Vendor sort code','9','RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','/NAME/','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','/COUNTRYCODE/','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'0','0',0,0]);

        //B2B
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','IBAN realted to bank','IBAN related Bank(offset account)',24,'IBAN','','',1,'0','1','34',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',24,'AccountNum','','',0,0,1,'34',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','Basic Header Block > Service Identifier','Swift code related to Bank(offset account)',24,'SWIFTNo','','',0,0,1,'15',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','Application Header Block  > RECEIVER_ADDRESS','Swift Code related Bank(account)','26','SWIFTNo','','',0,0,1,'15',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','59 (Beneficiary)','IBAN related to Bank(account)','26','IBAN','','','3','2',1,'35',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number','59 (Beneficiary)','Account number related to Bank(account)','26','AccountNum','','','3','2',1,'35',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Company(account LE) Address 1','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Street','Text Block Content Definition > Beneficiary – Address','Address related to Company(account LE)','34','Street','','',1,'2',1,'35',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','/BRANCH/','Routing number related to Bank(account)','26','RegistrationNum','','',0,0,1,'9',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','/NAME/','Name related to Company(account LE)','27','Name','','',0,0,1,'35',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Company(account LE) Country Region','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','/COUNTRYCODE/','Country related to vendor','34','CountryRegionId','','',1,1,'0','0',0,'4']);
        
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','IBAN realted to bank','IBAN related Bank(offset account)',24,'IBAN','','',1,'0','1','34',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',24,'AccountNum','','',0,0,1,'34',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','Basic Header Block > Service Identifier','Swift code related to Bank(offset account)',24,'SWIFTNo','','',0,0,1,'15',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','Application Header Block  > RECEIVER_ADDRESS','Swift Code related Bank(account)','26','SWIFTNo','','',0,0,1,'15',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','59 (Beneficiary)','IBAN related to Bank(account)','26','IBAN','','','3','2',1,'35',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number','59 (Beneficiary)','Account number related to Bank(account)','26','AccountNum','','','3','2',1,'35',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Company(account LE) Address 1','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Street','Text Block Content Definition > Beneficiary – Address','Address related to Company(account LE)','34','Street','','',1,'2',1,'35',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','/BRANCH/','Routing number related to Bank(account)','26','RegistrationNum','','',0,0,1,'9',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','/NAME/','Name related to Company(account LE)','27','Name','','',0,0,1,'35',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Company(account LE) Country Region','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','/COUNTRYCODE/','Country related to vendor','34','CountryRegionId','','',1,1,'0','0',0,'4']);
        
        //Customer Reimbursement
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','IBAN realted to bank','IBAN related to Bank',0,'IBAN','','',1,'0','1','34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','',0,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Bank Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','Basic Header Block > Service Identifier','Swift code related to bank',0,'SWIFTNo','','',0,0,1,'15',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Customer Swift number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift code ','Application Header Block  > RECEIVER_ADDRESS','Swift Code related  Customer','1','SWIFTNo','','',0,0,1,'15',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','59 (Beneficiary)','IBAN related to Customer','1','BankIBAN','','','3','2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','59 (Beneficiary)','Account Number related to Customer','1','AccountNum','','','3','2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Customer Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Text Block Content Definition > Beneficiary – Address','Address related to Customer','35','WBeneAddr','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Customer Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Text Block Content Definition > Beneficiary – Address','Address related to Customer','35','WBeneAddr2','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Customer Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','/BRANCH/','Routing number related to Customer','1','RegistrationNum','','',0,0,1,'9',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','/NAME/','Name related to Customer','35','WBeneName','','',0,0,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','DOM','','Customer Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','/COUNTRYCODE/','Country related to Customer','35','WBeneCountryRegionId','','',1,1,'1','7',0,'6']);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','IBAN realted to bank','IBAN related to Bank',0,'IBAN','','',1,'0','1','34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','',0,0,1,'34',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Bank Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > SWIFT code','Basic Header Block > Service Identifier','Swift code related to bank',0,'SWIFTNo','','',0,0,1,'15',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Customer Swift number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift code ','Application Header Block  > RECEIVER_ADDRESS','Swift Code related  Customer','1','SWIFTNo','','',0,0,1,'15',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','59 (Beneficiary)','IBAN related to Customer','1','BankIBAN','','','3','2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','59 (Beneficiary)','Account Number related to Customer','1','AccountNum','','','3','2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Customer Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Text Block Content Definition > Beneficiary – Address','Address related to Customer','35','WBeneAddr','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Customer Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Text Block Content Definition > Beneficiary – Address','Address related to Customer','35','WBeneAddr2','','',1,'2',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Customer Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','/BRANCH/','Routing number related to Customer','1','RegistrationNum','','',0,0,1,'9',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','/NAME/','Name related to Customer','35','WBeneName','','',0,0,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-MONEYCORP-MT103','INT','','Customer Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','/COUNTRYCODE/','Country related to Customer','35','WBeneCountryRegionId','','',1,1,'1','7',0,'6']);

        
        
        return validationsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-MONEYCORP-MT103','UK-MONEYCORP-MT103','FormatValidations','*','*','1']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UK-MONEYCORP-MT103','IRS','IRS']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UK-MONEYCORP-MT103','SECO','SECO']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UK-MONEYCORP-MT103','IDN','IDN']);

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-MONEYCORP-MT103','IRS','KZ resident','1']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-MONEYCORP-MT103','IRS','Not ','2']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-MONEYCORP-MT103','SECO','Legal entities','7']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-MONEYCORP-MT103','SECO','Individuals ','9']);
       

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case 'UK-MONEYCORP-MT103':
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_RBS_MT103();
                break;
        }
        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_RBS_MT103</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_RBS_MT103()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-MONEYCORP-MT103','UK-MONEYCORP-MT103','DOM','IRS','IRS',0,'IRS','',0,'','','/IRS/']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-MONEYCORP-MT103','UK-MONEYCORP-MT103','INT','SECO','SECO',0,'SECO','',0,'','',':/SECO/']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-MONEYCORP-MT103','UK-MONEYCORP-MT103','INT','IRS','IRS',0,'IRS','',0,'','','/IRS/']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-MONEYCORP-MT103','UK-MONEYCORP-MT103','DOM','SECO','SECO',0,'SECO','',0,'','',':/SECO/']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-MONEYCORP-MT103','UK-MONEYCORP-MT103','INT','IDN','IDN',1,'IDN','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','/IDN/']);
       
        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>