<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_UK_HSBC_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_UK_HSBC_XML extends SKS_EFT_Format_ISO_20022_001001003_FD
/// </summary>
class SKS_EFT_Format_UK_HSBC_XML extends SKS_EFT_Format_ISO_20022_001001003_FD
{
    #define.FormatVersion('20221031')
    #define.BACS('BACS')
    #define.CHAPS('CHAPS')
    #define.NORM('NORM')
    #define.SCT('SCT')
    #define.FINPAY('FINPAY')
    #define.THVP('THVP')
    #define.FLVP('FLVP')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_Authstn</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_Authstn(XmlElement _nodeGrpHdr)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.3: Authstn
        //          1.4: Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeAuthstn;
        str value;

        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Authstn', mSKS_EFT_FileDetail.RecId));

        if(value)             //SKS#DevOps:16497
        {
            //      1.3: Authstn
            nodeAuthstn = _nodeGrpHdr.appendChild(xmlDoc.createElement('Authstn'));
            
            //          1.4: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAuthstn, 'Cd', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_BtchBookg</Name>
				<Source><![CDATA[
    protected void node_PmtInf_BtchBookg(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.23 BtchBookg
        //------------------------------------------------------------------------------------------------------
        str value;

        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BtchBookg', mSKS_EFT_FileDetail.RecId));
        
        if(value &&                 //SKS#DevOps:18104
          (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BACS || 
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THVP || 
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FLVP))
        {
            //              2.3: BtchBookg
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'BtchBookg', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf()
    {
        //------------------------------------------------------------------------------------------------------
        //      2.27: CdtTrfTxInf
        //          2.28: PmtId
        //          2.31: PmtTpInf
        //          2.42: Amt
        //          2.51: ChrgBr
        //          2.52: ChqInstr
        //          2.77: CdtrAgt
        //          2.79: Cdtr
        //          2.80: CdtrAcct
        //          2.98: RmtInf
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtTrfTxInf;
    
        //      2.27: CdtTrfTxInf
        nodeCdtTrfTxInf = nodePmtInf.appendChild(xmlDoc.createElement('CdtTrfTxInf'));
    
        //          2.28: PmtId
        this.node_CdtTrfTxInf_PmtId(nodeCdtTrfTxInf);
    
        //          2.42: Amt
        this.node_CdtTrfTxInf_Amt(nodeCdtTrfTxInf);
    
        //          2.52 ChqInstr
        if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::Yes || subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) == 'CHK')
        {
            this.node_CdtTrfTxInf_ChqInstr(nodeCdtTrfTxInf);
        }
    
        //          2.71: IntrmyAgt1
        this.node_CdtTrfTxInf_IntrmyAgt1(nodeCdtTrfTxInf);
    
        //          2.77: CdtrAgt
        this.node_CdtTrfTxInf_CdtrAgt(nodeCdtTrfTxInf);
    
        //          2.79: Cdtr
        this.node_CdtTrfTxInf_Cdtr(nodeCdtTrfTxInf);
    
        //          2.80: CdtrAcct
        this.node_CdtTrfTxInf_CdtrAcct(nodeCdtTrfTxInf);
    
        //          2.82: InstrForCdtrAgt
        this.node_CdtTrfTxInf_InstrForCdtrAgt(nodeCdtTrfTxInf);

        //          2.85: InstrForDbtrAgt
        this.node_CdtTrfTxInf_InstrForDbtrAgt(nodeCdtTrfTxInf);

        //          2.89: RgltryRptg
        this.node_CdtTrfTxInf_RgltryRptg(nodeCdtTrfTxInf);      //SKS#DevOps:16889
    
        //          2.98: RmtInf
        this.node_CdtTrfTxInf_RmtInf(nodeCdtTrfTxInf);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RgltryRptg</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RgltryRptg(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.89: RgltryRptg
        //              Dtls
        //                  Inf
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeRgltryRptg;
        XmlElement nodeDtls;

        msks_EFT_FileDetail_PaymentLine = sks_EFT_FileDetail_PaymentLine::find(mSKS_EFT_FileDetail.RecId);
       
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THVP &&
           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNY'     &&
           msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeName)
        {
            nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));
            nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', this.CharacterReplacement(msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeName));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_PmtId</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_PmtId(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.28: PmtId
        //              2.29: InstrId
        //              2.30: EndToEndId
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodePmtId;
        int len;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #FLVP:
                len = 18;
                break;
            default:
                len = 35;
                break;
        }

        //          2.28: PmtId
        nodePmtId = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('PmtId'));
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FLVP)
        {
            //              2.29: InstrId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'InstrId', SKS_PP_StringFormats::strRight(mSKS_EFT_FileDetail.PaymentReference, 35));
        }
        //              2.30: EndToEndId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId', SKS_PP_StringFormats::strRight(mSKS_EFT_FileDetail.PaymentReference, len));
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Nm</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Nm(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          Nm
        //------------------------------------------------------------------------------------------------------
        int len;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #BACS:
                len = 60;       //SKS#DevOps:16497
                break;
            case #CHAPS:
            case #FLVP:
                len = 35;
                break;
            case #THVP:
                len = 140;
                break;
            default:
                len = 70;
                break;
        }

        //          Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeDbtr, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName), len, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_PstlAdr(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #CHAPS:
            case #SCT:
            case #FLVP:
            case #BACS:         //SKS#DevOps:17228
                this.node_PstlAdr(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity, 0, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2, mSKS_EFT_FileDetail_BankAccount.WOrdPartyState, true);
                break;
            case #THVP:
                if(strLen(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName) > 35)
                {
                    this.node_PstlAdr(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, '', mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity, 0, '', mSKS_EFT_FileDetail_BankAccount.WOrdPartyState, true);
                }
                else
                {
                    this.node_PstlAdr(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity, 0, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2, mSKS_EFT_FileDetail_BankAccount.WOrdPartyState, true);
                }
                break;
            default:
                super(_nodeDbtr);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  Othr
        //                  Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
        XmlElement nodeCdtrAcctIdOthr;
        int len;
        
        //          2.80: CdtrAcct
        nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));        
        
        //              Id
        nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
        
        if(mSKS_EFT_FileDetail.DepBankIBAN && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BACS)
        {
            //                  IBAN
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN);
        }

        else if(mSKS_EFT_FileDetail.DepBankAcct)
        {
            //                  Othr
            nodeCdtrAcctIdOthr = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));

            switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
            {
                case #BACS:
                case #FLVP:
                    len = 8;
                    break;
                case #THVP:
                    len = 34;
                    break;
            }            
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctIdOthr, 'Id', mSKS_EFT_FileDetail.DepBankAcct, len);
        }        
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                  Nm
        //                  PstlAdr
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
        
        //          2.77: CdtrAgt
        nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));

        //              FinInstnId
        nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));

        if(mSKS_EFT_FileDetail.DepSwiftNo && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BACS)
        {
            //                  BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 0, false);
        }
        else if(mSKS_EFT_FileDetail.DepBankTransit)
        {
            //                  ClrSysMmbId
            nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
        
            if(mSKS_EFT_FileDetail.PaymSpec == #THVP)
            {
                //                              MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit);
            }
            else
            {
                //                              MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 6);
            }
        }
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NORM ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FINPAY)
        {
            //                  Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankName), 0, false);
        }
         
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BACS || 
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THVP ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FLVP)
        {
            //                  PstlAdr
            this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, '', '', '');
        }
        else
        {
            this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '', ''); // Zip and City not used at this time
        }        
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr_Nm</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Cdtr_Nm(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.79: Cdtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
        str name = mSKS_EFT_FileDetail.AccountName;
        int len;
    
        if(mRemittanceName != '')
        {
            name = mRemittanceName;
        }

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #BACS:
                len = 18;
                break;
            case #SCT:
            case #THVP:
                len = 70;
                break;
            case #CHAPS:
                len = 35;
                break;
            default:
                len = 140;
                break;
        }
    
        //              Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', this.CharacterReplacement(name), len);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt1</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_IntrmyAgt1(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.71: IntrmyAgt1
        //              FinInstnId
        //                  BIC
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeIntrmyAgt1;
        XmlElement nodeFinInstnId;
    
        if(mSKS_EFT_FileDetail_Intermediary.IntBankSwift != '' && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BACS)
        {
            //          2.71: IntrmyAgt1
            nodeIntrmyAgt1 = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt1'));
    
            //                  FinInstnId
            nodeFinInstnId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('FinInstnId'));

            //                  BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail_Intermediary.IntBankSwift);

            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #THVP  && mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId != '')             //SKG#Devops:17336
            {
    
                //                  PstlAdr
                this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId,'','','');
    
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
    
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #BACS:
                break;
            default:                
                this.node_CdtTrfTxInf_RmtInf_Ustrd(_nodeCdtTrfTxInf);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_Id</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty_Id(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          9.1.12: Id
        //              9.1.13: OrgId
        //                  9.1.15: Othr
        //                      9.1.1.16: Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOther;
        XmlElement nodeSchmeNm;
        str initgPtyId;
    
        initgPtyId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InitgPtyId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));

        if(initgPtyId)
        {
            //          9.1.12: Id
            nodeId = _nodeInitgPty.appendChild(xmlDoc.createElement('Id'));
    
            //              9.1.13: OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            //                  9.1.15: Other
            nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
            //                      9.1.1.16: Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', initgPtyId);

            //                          9.1.1.17: SchmeNm
            if(mSKS_EFT_FileDetail.PaymSpec == 'NORM' ||
               mSKS_EFT_FileDetail.PaymSpec == 'FINPAY')
            {
                nodeSchmeNm = nodeOther.appendChild(xmlDoc.createElement('SchmeNm'));
    
                //                              9.1.1.18: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', 'BANK');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_Id(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.79: Cdtr
        //          Id
        //              OrgId
        //                  Othr
        //                      Id
        //                      SchemeName
        //          or
        //              PrvtId
        //                  Othr
        //                      Id
        //                      SchemeName
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeId;
        XmlElement nodeOrgPvtId;
        XmlElement nodeOthr;
        XmlElement nodeSchmeNm;
        
        if(mSKS_EFT_FileDetail.VATNum != '' && 
           (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHAPS||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NORM ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FINPAY))
        {
            //          Id
            nodeId = _nodeCdtr.appendChild(xmlDoc.createElement('Id'));

            nodeOrgPvtId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
                                
            nodeOthr = nodeOrgPvtId.appendChild(xmlDoc.createElement('Othr'));
    
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.VATNum, 35);

            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NORM ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FINPAY)
            {
                nodeSchmeNm = nodeOthr.appendChild(xmlDoc.createElement('SchmeNm'));
    
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', 'TXID');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #CHAPS:
            case #NORM:
            case #FINPAY:
            case #SCT:
            case #FLVP:
            case #BACS:         //SKS#DevOps:17228
                this.node_PstlAdr(_nodeCdtr, mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId, mSKS_EFT_FileDetail_VendAddress.BeneAddr, mSKS_EFT_FileDetail_VendAddress.BeneZipPostal, mSKS_EFT_FileDetail_VendAddress.BeneCity, 0, mSKS_EFT_FileDetail_VendAddress.BeneAddr2, mSKS_EFT_FileDetail_VendAddress.BeneState, true);
                break;
            case #THVP:
                if(strLen(mRemittanceName) > 35)
                {
                    this.node_PstlAdr(_nodeCdtr, mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId, '', mSKS_EFT_FileDetail_VendAddress.BeneZipPostal, mSKS_EFT_FileDetail_VendAddress.BeneCity, 0, '', mSKS_EFT_FileDetail_VendAddress.BeneState, true);
                }
                else
                {
                    this.node_PstlAdr(_nodeCdtr, mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId, mSKS_EFT_FileDetail_VendAddress.BeneAddr, mSKS_EFT_FileDetail_VendAddress.BeneZipPostal, mSKS_EFT_FileDetail_VendAddress.BeneCity, 0, mSKS_EFT_FileDetail_VendAddress.BeneAddr2, mSKS_EFT_FileDetail_VendAddress.BeneState, true);
                }
                break;
            default:
                super(_nodeCdtr);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Id(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          9.1.12: Id
        //              9.1.13: OrgId
        //                  9.1.15: Othr
        //                      9.1.16: Id
        //                          9.1.17: SchmeNm
        //                              9.1.18: Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOther;
        XmlElement nodeSchmeNm;
        int len;
        str value;
    
        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ServiceUserNum', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));          //SKS#DevOps:17172

        if(value && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BACS)
        {
            //          9.1.12: Id
            nodeId = _nodeDbtr.appendChild(xmlDoc.createElement('Id'));
    
            //              9.1.13: OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            //                  9.1.15: Othr
            nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
            
            //                      9.1.16: Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', value);
        }
        else if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyId && 
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SCT)//SKS_VSTS_14178
        {
            //          9.1.12: Id
            nodeId = _nodeDbtr.appendChild(xmlDoc.createElement('Id'));
    
            //              9.1.13: OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            //                  9.1.15: Othr
            nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
            
            switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
            {
                case #THVP:
                case #FLVP:
                    len = 35;
                    break;
            }
            //                      9.1.16: Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', mSKS_EFT_FileDetail_BankAccount.WOrdPartyId, len, false);

            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NORM ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FINPAY)
            {
                //                          9.1.17: SchmeNm
                nodeSchmeNm = nodeOther.appendChild(xmlDoc.createElement('SchmeNm'));
    
                //                              9.1.18: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', 'BANK');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: DbtrAcct
        //          Id
        //              IBAN
        //              Othr
    
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;
        XmlElement nodeOthr;
        XmlElement nodeSchmeNm;
        int len;
        
        //      2.20: DbtrAcct
        nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
        //          Id
        nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #THVP:
                len = 35;
                break;
            default:
                len = 8;
                break;
        }

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FLVP)
        {
            if(mSKS_EFT_FileDetail.BankBankIBAN && mSKS_EFT_FileDetail.BankBankAcct == '')
            {
                //              IBAN
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN', mSKS_EFT_FileDetail.BankBankIBAN);
            }
            else if(mSKS_EFT_FileDetail.BankBankAcct)
            {
                //              Othr
                nodeOthr = nodeDbtrAcctId.appendChild(xmlDoc.createElement('Othr'));
                //                  Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.BankBankAcct, len, false);

            }
        }
        else
        {
            if(mSKS_EFT_FileDetail.BankBankIBAN && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BACS)
            {
                //              IBAN
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN', mSKS_EFT_FileDetail.BankBankIBAN);
            }
            else if(mSKS_EFT_FileDetail.BankBankAcct)
            {
                //              Othr
                nodeOthr = nodeDbtrAcctId.appendChild(xmlDoc.createElement('Othr'));               
                //                  Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.BankBankAcct, len, false);

                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NORM ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FINPAY)
                {
                    //                  SchmeNm
                    nodeSchmeNm = nodeOthr.appendChild(xmlDoc.createElement('SchmeNm'));
    
                    //                      Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', 'BBAN');
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.21: DbtrAgt
        //          FinInstnId
        //              BIC
        //              ClrSysMmbId
        //                  MmbId
        //              PstlAdr
        //                  Ctry
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmBId;
        XmlElement nodeClrSysId;
        
        //      2.21: DbtrAgt
        nodeDbtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAgt'));
    
        //          FinInstnId
        nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FLVP)               //SKS#DevOps:15127
        {
            if(mSKS_EFT_FileDetail.BankBankAcct && mSKS_EFT_FileDetail.BankBankTransit)
            {
                //              ClrSysMId
                nodeClrSysMmBId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                //                  MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmBId, 'MmbId', mSKS_EFT_FileDetail.BankBankTransit, 6);
            }
            else if(mSKS_EFT_FileDetail.BankBankSwiftNo)
            {
                //              BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.BankBankSwiftNo);
            }
        }
        else
        {
            if(mSKS_EFT_FileDetail.BankBankSwiftNo && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BACS)
            {
                //              BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.BankBankSwiftNo);
            }
            else if(mSKS_EFT_FileDetail.BankBankTransit)
            {
                //              ClrSysMId
                nodeClrSysMmBId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));            

                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NORM ||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FINPAY)
                {
                    //                  ClrSysId
                    nodeClrSysId = nodeClrSysMmBId.appendChild(xmlDoc.createElement('ClrSysId'));

                    //                      Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', 'GBDSC');
                }

                //                  MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmBId, 'MmbId', mSKS_EFT_FileDetail.BankBankTransit, 6);            
            }
        }

        //      6.1.8: PstlAdr
        this.node_PstlAdr(nodeFinInstnId, this.getLogisticsAddressCountryISO(msks_EFT_FileDetail_BankAddress.CountryRegionId),'','','');    //SKS#DevOps:16503
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_ChrgBr(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.51 ChrgBr
        //------------------------------------------------------------------------------------------------------
        
        str chrgbr = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ChrgBr', mSKS_EFT_FileDetail.RecId));

        //      2.24 ChrgBr            
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'ChrgBr', chrgbr, 4, false);

    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.8: SvcLvl
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeSvcLvl;
        str value;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #FINPAY:
            case #NORM:
            case #BACS:
                value = 'NURG';
                break;
            case #CHAPS:
            case #THVP:
                value = 'URGP';
                break;
            case #SCT://SKS_VSTS_14178
                value = 'SEPA';
                break;
            case #FLVP:
                value = 'URNS';
                break;
            default:
                value = '';
                break;
        }
        if(value)
        {
            //          2.8: SvcLvl
            nodeSvcLvl = _nodePmftTpInf.appendChild(xmlDoc.createElement('SvcLvl'));
            //              2.9: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSvcLvl, 'Cd', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_InstrForCdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_InstrForCdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.82: InstrForCdtrAgt
        //              InstrInf
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeInstrForCdtrAgt;
        str     value;
        
        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InstrForCdtrAgt', mSKS_EFT_FileDetail.RecId));
            
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHAPS && value)
        {
            //          2.82: InstrForCdtrAgt
            nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/ACC/' + subStr(value, 1, 30));

            if(strLen(value) > 30)
            {
                //          2.82: InstrForCdtrAgt
                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/INS/' + subStr(value, 31, 33));
            }
            if(strLen(value) > 63)
            {
                //          2.82: InstrForCdtrAgt
                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/INT/' + subStr(value, 64, 33));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_InstrForDbtrAgt</Name>
				<Source><![CDATA[
    /// <summary>
    /// InstrForDbtrAgt
    /// </summary>
    /// <param name = "_nodeCdtTrfTxInf">CdtTrfTxInf</param>
    protected void node_CdtTrfTxInf_InstrForDbtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.82: InstrForDbtrAgt
        //------------------------------------------------------------------------------------------------------
        str value;
        
        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InstrForDbtrAgt', mSKS_EFT_FileDetail.RecId));

        if(value &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHAPS)
        {
            //          2.85: InstrForDbtrAgt
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'InstrForDbtrAgt', '/REC/' + this.CharacterReplacement(value));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_CtgyPurp</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_CtgyPurp(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.14: CtgyPurp
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCtgyPurp;
        str value;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #NORM:
                value = 'SUPP';
                break;
            case #FINPAY:
                value = 'CORT';
                break;
            default:
                value = '';
                break;
        }
        if(value)
        {
            //           2.14: CtgyPurp
            nodeCtgyPurp = _nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));

            //              2.15: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', value);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>