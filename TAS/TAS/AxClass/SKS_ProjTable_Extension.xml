<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_ProjTable_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(ProjTable))]
final class SKS_ProjTable_Extension
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>editCreditCard</Name>
				<Source><![CDATA[
    /// <summary>
    /// edit method for Credit card information field
    /// </summary>
    /// <param name = "_set"></param>
    /// <param name = "_creditCardNumber"></param>
    /// <returns></returns>
    [SysClientCacheDataMethodAttribute(true)]  
    edit public CreditCardNumber editCreditCard(boolean _set, CreditCardNumber _creditCardNumber)
    {
        RecId recId = str2int64(strRTrim(strLTrim(_creditCardNumber)));
        CreditCardNumber creditCardNumber;
        CreditCardCust creditCardCust;

        boolean okToChange(RefRecId _creditCard)
        {
            if (this.CreditCardCustRefId == _creditCard) // same CC?
            {
                return true; // Yes, same one, no change
            }
            return this.cancelPreAuthorization(); // Yes, see if we need to cancel the PreAuth
        }

        if (_set)
        {           
            RecId oldCreditCard = this.CreditCardCustRefId;
            this.CreditCardCustRefId = 0;

            if (recId)
            {
                creditCardCust = CreditCardCust::find(recId);

                ProjFundingSource projFundingSource;
                select firstonly projFundingSource
                    where projFundingSource.ContractId == this.ProjInvoiceProjId
                        && projFundingSource.FundingType == ProjFundingType::Customer;
                if(projFundingSource)
                {
                    if (creditCardCust.RecId && projFundingSource.CustAccount == creditCardCust.CustAccount)
                    {
                        this.CreditCardCustRefId = creditCardCust.RecId;
                        if (!this.validateField(fieldNum(SalesTable, CreditCardCustRefId)))
                        {
                            this.CreditCardCustRefId = oldCreditCard;
                        }
                    }
                }
            }

            creditCardNumber = CreditCard::creditCardNumber(this.CreditCardCustRefId);

            return creditCardNumber;
        }       

        // Double check to make sure the record hasn't been deleted
        if (this.CreditCardCustRefId && CreditCardCust::exist(this.CreditCardCustRefId))
        {
            creditCardNumber = CreditCard::creditCardNumber(this.CreditCardCustRefId);
        }
        else
        {
            this.CreditCardCustRefId = 0;
        }
        
        return creditCardNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cancelPreAuthorization</Name>
				<Source><![CDATA[
    boolean cancelPreAuthorization()
    {
        CreditCardAuthTrans     creditCardAuthTrans;
        ProjInvoiceJour         projInvoiceJour;
        boolean ok;

        if (!this.RecId)
        {
            return true;
        }

        while select projInvoiceJour
            where projInvoiceJour.ProjInvoiceProjId == this.ProjId
        {                   
            creditCardAuthTrans = CreditCardAuthTrans::sKS_CC_findChargeByProjInvoice(projInvoiceJour.ProjInvoiceId);
            if (!creditCardAuthTrans)
            {
                return true;
            }
        }

        if (Box::okCancel("@SYS116762", DialogButton::Cancel)== DialogButton::Ok)
        {
            ok = CreditCardProcess::doVoidAuth(creditCardAuthTrans);
            if (ok)
            {
                this.reread();
            }
            return ok;
        }
        else
        {
            return false;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>