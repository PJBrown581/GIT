<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_SCF_ImportCSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
Public class SKS_SCF_ImportCSV
{
                          
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>ImportSCFCSV</Name>
				<Source><![CDATA[
    public void ImportSCFCSV()
    {
        SKS_SCF_InvoiceFileFormat       sks;
        SKS_SCF_InvoiceFileFormat       orig_sks;
        SKS_SCF_FileFormatAdditionalOptions FFAddOptsFields;
        SKS_SCF_FileFormatAdditionalOptions orig_FFAddOptsFields;
        SKS_SCF_CodeLookup sksCL;
        SKS_SCF_CodeLookup orig_sksCL;
        SKS_SCF_CodeLookupValues sksCLV;
        SKS_SCF_CodeLookupValues orig_sksCLV;
        SKS_SCF_AckFileFormat sksAckFileFormat;
        SKS_SCF_AckFileFormat orig_sksAckFileFormat;
        SKS_SCF_SettlementFileFormat sksSettlementFileFormat;
        SKS_SCF_SettlementFileFormat orig_sksSettlementFileFormat;
        SKS_SCF_FormatId    FormatID;
        SKS_SCF_FormatId ackInboundFormatID;
        SKS_SCF_FormatId settlementInboundFormatID;
        String30        FormatFieldId;
        SKS_EB_CodeId   codeID;
        String50 displayValue;

        CommaStreamIo           inFile;
        Filename                filename;
        Container               line;
        int linecnt;
        int totaladds;
        int totalupdates;
        int totaldeletes;
        str action;
        str hdrOrdet;
        str provideVendor;
        int fieldcount = 0;
        
        SKS_FileUploadDialogForm fileUploadDialog = new SKS_FileUploadDialogForm();
        fileUploadDialog.parmFileDialogCaptionForForm("@SKS:SCFImportFileFormat");
        fileUploadDialog.parmFileTypesAccepted('.csv');
        fileUploadDialog.parmStrategyClassName(classstr(SKS_PP_CSVFileTemporaryStorageStrategy));
        FileUploadTemporaryStorageResult fileUploadResult = fileUploadDialog.getFileUploadResult();
        if (fileUploadResult != null && fileUploadResult.getUploadStatus())
        {
            filename = fileUploadResult.getDownloadUrl();
            System.IO.Stream readStream = fileUploadResult.openResult(); // This is used to upload formats so it doesn't need to use FileHub
            inFile = CommaStreamIo::constructForRead(readStream);
        }
        else
        {
            return;
        }

        if (!inFile || infile.status() != IO_Status::Ok )
        {
            //file could not be opened
            throw error (strfmt("@SYS19312", filename));
        }

        ttsbegin;
        
        infile.inRecordDelimiter('\n');
        infile.inFieldDelimiter(',');
        linecnt = 0;
        //Checking status of last operation..
        while (infile.status() == IO_status::Ok)
        {
            line = infile.read();
            
            if (line)
            {
                hdrOrdet = conpeek(line, 1); //Header or Detail
                if (hdrOrdet == 'H')
                {
                    fieldcount = conLen(line);
    
                    sks.initValue();
                    sks.FormatId = conpeek(line, 2);
                    sks.Description = conpeek(line, 3);

                    action = subStr(conpeek(line, fieldcount), 1, 1);   //Add, Replace, or Delete
    
                    select firstonly * from orig_sks where orig_sks.FormatId == sks.FormatID;
    
                    if(action == 'A' || action == '')
                    {
                        if(orig_sks.FormatID == '') //not found so add it
                        {
                            sks.doInsert();
                            totaladds++;
                        }
                    }
                    else if (action == 'R')
                    {
                        if(orig_sks.FormatID == '') //nothing to replace so add it
                        {
                            sks.doInsert();
                            totaladds++;
                        }
                        else
                        {
                            sks.Selected = orig_sks.Selected;//Maintain selected value
                            
                            RefRecId SFFileFormatRecid = orig_sks.recid;
                            delete_from orig_sks where orig_sks.FormatId == sks.FormatID;
                            sks.doInsert();

                            update_recordset FFAddOptsFields setting FileFormatPaymSpecRecId = sks.RecId where FFAddOptsFields.FileFormatPaymSpecRecId == SFFileFormatRecid;
                            totalupdates++;
                        }
                    }
                    else if(action == 'D')
                    {
                        if(orig_sks.FormatID != '') //if the record was found then delete it
                        {
                            delete_from orig_sks where orig_sks.FormatId == sks.FormatID;
                            totaldeletes++;
                        }
                    }
                }
                else if (hdrOrdet == 'C')
                {
                    FormatID = conPeek(line,2);
                    CodeId = conPeek(line, 3);
                    select firstonly forupdate sksCL where sksCL.codeid == codeID && sksCL.FormatID == FormatID;
                    sksCL.FormatID = FormatID;
                    sksCL.CodeId = codeID;
                    sksCL.Description = conPeek(line,4);
                    action = subStr(conPeek(line, 5), 1, 1);
    
                    if(action == 'A' || action == '')
                    {
                        if(!sksCL)
                        {
                            sksCL.doInsert();
                            totaladds++;
                        }
                    }
                    else if (action  == 'R')
                    {
                        if(!sksCL)
                        {
                            sksCL.insert();
                            totaladds++;
                        }
                        else
                        {
                            sksCL.update();
                        }
                    }
                    else if(action == 'D')
                    {
                        if(sksCL)
                        {
                            delete_from orig_sksCL where orig_sksCL.codeid == sksCL.codeid && orig_sksCL.FormatId == FormatID;
                            totaldeletes++;
                        }
                    }
                }
                else if (hdrOrdet == 'V')
                {
                    FormatID = conPeek(line, 2);
                    codeID = conPeek(line, 3);
                    displayValue = conPeek(line, 4);
                    select firstonly forupdate sksCLV where sksCLV.codeid == codeID
                                               && sksCLV.FormatId == FormatID
                                               && sksCLV.DisplayValue == displayValue;
                    sksCLV.FormatId = conPeek(line, 2);
                    sksCLV.codeid = conPeek(line, 3);
                    sksCLV.DisplayValue = conPeek(line, 4);
                    sksCLV.CodeValue = conPeek(line, 5);
                    action = subStr(conPeek(line, 6),1, 1);
    
                    if(action == 'A' || action == '')
                    {
                        if(!sksCLV)
                        {
                            sksCLV.doInsert();
                            totaladds++;
                        }
                    }
                    else if (action == 'R')
                    {
                        if(!sksCLV)
                        {
                            sksCLV.insert();
                            totaladds++;
                        }
                        else
                        {
                            sksCLV.update();
                        }
                    }
                    else if(action == 'D')
                    {
                        if(sksCLV)
                        {
                            delete_from orig_sksCLV where orig_sksCLV.codeid == sksCL.codeid
                                                       && orig_sksCLV.FormatId == FormatID
                                                       && orig_sksCLV.DisplayValue == displayValue;
                            totaldeletes++;
                        }
                    }
                }
                else if (hdrOrdet == 'F')
                {
                    FormatID = conPeek(line, 2);
                    FormatFieldId = conPeek(line, 3);
                    provideVendor = conPeek(line, 12);

                    select firstonly recid from sks where sks.formatid == FormatID;
    
                    select firstonly forUpdate FFAddOptsFields where FFAddOptsFields.FileFormatPaymSpecRecId == sks.RecId
                                                        && FFAddOptsFields.FormatId == FormatId
                                                        && FFAddOptsFields.FormatFieldId == FormatFieldId
                                                        && FFAddOptsFields.ProviderVendor == conPeek(line, 12);
    
                    FFAddOptsFields.CodeId = conPeek(line, 6);
                    displayValue= conPeek(line, 7);
    
                    select firstonly RecId from sksCLV where sksCLV.CodeId == FFAddOptsFields.CodeId
                                                && sksCLV.FormatId == FormatId
                                                && sksCLV.DisplayValue == displayValue;
    
                    FFAddOptsFields.FileFormatPaymSpecRecId = sks.recid;
                    FFAddOptsFields.FormatId = FormatId;
                    FFAddOptsFields.FormatFieldId = FormatFieldId;
                    FFAddOptsFields.Description = conPeek(line, 4);
                    FFAddOptsFields.FieldType = conPeek(line, 5);
                    FFAddOptsFields.DefaultCodeLookupValuesRecId = sksCLV.recid;
                    FFAddOptsFields.Required = conPeek(line, 8);
                    FFAddOptsFields.FixedValue = conPeek(line, 9);
                    FFAddOptsFields.FixedMask = conPeek(line, 10);
                    FFAddOptsFields.TechNote = conPeek(line, 11);
                    FFAddOptsFields.ProviderVendor = conPeek(line, 12);
                    action = substr(conPeek(line, 13), 1, 1);
    
                    if(action == 'A' || action == '')
                    {
                        if(!FFAddOptsFields)
                        {
                            FFAddOptsFields.Insert();
                            totaladds++;
                        }
                    }
                    else if (action  == 'R')
                    {
                        if(!FFAddOptsFields)
                        {
                            FFAddOptsFields.insert();
                            totaladds++;
                        }
                        else
                        {
                            FFAddOptsFields.update();
                        }
                    }
                    else if(action == 'D')
                    {
                        select firstonly forUpdate orig_FFAddOptsFields where orig_FFAddOptsFields.FormatFieldId == FormatFieldId;
    
                        if(orig_FFAddOptsFields)
                        {
                            orig_FFAddOptsFields.delete();
                            totaldeletes++;
                        }
                    }
                }
                else if (hdrOrdet == 'A')
                {
                    ackInboundFormatID = conPeek(line, 2);
                    select firstonly forupdate sksAckFileFormat where sksAckFileFormat.FormatId == ackInboundFormatID;
                    sksAckFileFormat.FormatId = ackInboundFormatID;
                    sksAckFileFormat.Description = conPeek(line,3);
                    action = subStr(conPeek(line, 4), 1, 1);
    
                    if(action == 'A' || action == '')
                    {
                        if(!sksAckFileFormat)
                        {
                            sksAckFileFormat.doInsert();
                            totaladds++;
                        }
                    }
                    else if (action  == 'R')
                    {
                        if(!sksAckFileFormat)
                        {
                            sksAckFileFormat.doinsert();
                            totaladds++;
                        }
                        else
                        {
                            sksAckFileFormat.update();
                            totalupdates++;
                        }
                    }
                    else if(action == 'D')
                    {
                        if(sksAckFileFormat)
                        {
                            delete_from orig_sksAckFileFormat where orig_sksAckFileFormat.FormatId == sksAckFileFormat.FormatId;
                            totaldeletes++;
                        }
                    }
                }
                else if (hdrOrdet == 'S')
                {
                    settlementInboundFormatID = conPeek(line, 2);
                    select firstonly forupdate sksSettlementFileFormat where sksSettlementFileFormat.FormatId == settlementInboundFormatID;
                    sksSettlementFileFormat.FormatId = settlementInboundFormatID;
                    sksSettlementFileFormat.Description = conPeek(line,3);
                    action = subStr(conPeek(line, 4), 1, 1);
    
                    if(action == 'A' || action == '')
                    {
                        if(!sksSettlementFileFormat)
                        {
                            sksSettlementFileFormat.doInsert();
                            totaladds++;
                        }
                    }
                    else if (action  == 'R')
                    {
                        if(!sksSettlementFileFormat)
                        {
                            sksSettlementFileFormat.doinsert();
                            totaladds++;
                        }
                        else
                        {
                            sksSettlementFileFormat.update();
                            totalupdates++;
                        }
                    }
                    else if(action == 'D')
                    {
                        if(sksSettlementFileFormat)
                        {
                            delete_from orig_sksSettlementFileFormat where orig_sksSettlementFileFormat.FormatId == sksSettlementFileFormat.FormatId;
                            totaldeletes++;
                        }
                    }
                }
            }
        }
        ttscommit;
        
        //report total adds, updates, and deletes
        info("@SYS54695" + ' ' + "@SYS108583" + ' :' + int2str(totaladds));
        info("@SYS54695" + ' ' + "@SYS439" + ' :' + int2str(totalupdates));
        info("@SYS54695" + ' ' + "@SYS13435" + ' :'  + int2str(totaldeletes));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>