<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_RF_FormatMetaData_PSR_ISO20022_00200102</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SKS_EFT_RF_FormatMetaData_PSR_ISO20022_00200102 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
        productVersion = '';
        formatGroupVersion = '20210512';
        conFormatID = ['PSR-ISO20022-00200102'];
        formatfiletype = 'EFTInbound';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundFormatMetaData</Name>
				<Source><![CDATA[
    protected container getInboundFormatMetaData()
    {
        container   inboundFormatList;

        //Metadata column names of data elements
        ////FormatId,Description,Selected,ProductVersion,FormatVersion

        inboundFormatList = ConIns(inboundFormatList,conLen(inboundFormatList)+1,[productVersion,formatGroupVersion,'PSR-ISO20022-00200102','Payment Status Report ISO20022 v3.0 pain.002.001.02',0]);

        return inboundFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundStatusMetaData</Name>
				<Source><![CDATA[
    protected container getInboundStatusMetaData(str _formatID)
    {
        container   inboundStatusList;

        //Metadata column names of data elements
        //FormatId,StatusType,StatusId,StatusIdDisplay,Origin

        switch (_formatID)
        {
            case ('PSR-ISO20022-00200102'):
                inboundStatusList = this.getInboundStatusMetaData_PSR_ISO20022_00200102();
                break;

        }

        return inboundStatusList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundStatusMetaData_PSR_ISO20022_00200102</Name>
				<Source><![CDATA[
    private container getInboundStatusMetaData_PSR_ISO20022_00200102()
    {
        container   inboundStatusList;

        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',0,'<Empty>','Empty status id',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',1,'<Empty>','Empty status id',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',0,'ACCP','Customer profile accepted',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',0,'ACCR','Cancellation accepted',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',0,'ACSC','Settlement completed',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',0,'ACSP','Settlement in process',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',0,'ACTC','Technical validation accepted',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',0,'ACWC','Accepted with change',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',0,'PART','Partially accepted',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',0,'PDNG','Pending',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',0,'RCVD','Received',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',0,'RJCT','Rejected',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',1,'ACCP','Customer profile accepted',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',1,'ACCR','Cancellation accepted',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',1,'ACSC','Settlement completed',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',1,'ACSP','Settlement in process',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',1,'ACTC','Technical validation accepted',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',1,'ACWC','Accepted with change',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',1,'PDNG','Pending',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['PSR-ISO20022-00200102',1,'RJCT','Rejected',1]);

        return inboundStatusList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundRCodeMetaData</Name>
				<Source><![CDATA[
    protected container getInboundRCodeMetaData(str _formatID)
    {
        container   reasonCodeList;

        //Metadata column names of data elements
        //FormatId,ReasonCode,ReasonDesc,Origin

        switch (_formatID)
        {
            case ('PSR-ISO20022-00200102'):
                reasonCodeList = this.getInboundRCodeMetaData_PSR_ISO20022_00200102();
                break;

        }

        return reasonCodeList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundRCodeMetaData_PSR_ISO20022_00200102</Name>
				<Source><![CDATA[
    private container getInboundRCodeMetaData_PSR_ISO20022_00200102()
    {
        container   reasonCodeList;

        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','<Empty>','Empty reason code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','AC01','Incorrect account number',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','AC04','Account number closed',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','AC06','Account blocked',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','AG01','Forbidden',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','AG02','Invalid bank operation code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','AM01','Amount is zero',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','AM02','Amount is greater than maximum',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','AM03','Disallowed currency',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','AM04','Insufficient funds',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','AM05','Duplication',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','AM06','Amount is less than minimum',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','AM07','Amount is blocked',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','AM09','Incorrect amount',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','AM10','Invalid control sum',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','BE01','End customer account inconsistancy',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','BE04','Creditor address missing',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','BE05','Unrecognized initiating party',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','BE06','Unknown end customer',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','BE07','Debtor address missing',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','DT01','Invalid date',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','ED01','Correspondent bank not possible',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','ED03','Balance info requested',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','ED05','Settlement failed',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','MD01','No mandate',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','MD02','Mandatory mandate information missing',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','MD03','Invalid file format-Not Grouping',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','MD04','Invalid file format-Grouping',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','MD06','Customer refund requested',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','MD07','Customer deceased',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','MS02','Customer reason unspecified',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','MS03','Agent reason unspecified',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','NARR','Narrative reason',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','RC01','Incorrect bank identifier',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','RF01','Non unique reference',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['PSR-ISO20022-00200102','TM01','Cut off time',1]);

        return reasonCodeList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   conDelete;
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>