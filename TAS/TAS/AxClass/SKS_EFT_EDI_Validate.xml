<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_EDI_Validate</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_EFT_EDI_Validate
{
    RefRecId mFileRecId;
    UserId mUserId;
    str mErrorText;
    SKS_EFT_EDI820_Data mGroupSKS_EFT_EDI820_Data;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>BPR</Name>
				<Source><![CDATA[
    private boolean BPR()
    {
        boolean valid;
        ;
    
        // Field 6 and 7
        valid = this.requiredPair(6, 7);
    
        if(valid)
        {
            // Field 8 and 9
            valid = this.requiredPair(8, 9);
        }
    
        if(valid)
        {
            // Field 12 and 13
            valid = this.requiredPair(12, 13);
        }
    
        if(valid)
        {
            // Field 14 and 15
            valid = this.requiredPair(14, 15);
        }
    
        return valid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>GE</Name>
				<Source><![CDATA[
    private boolean GE()
    {
        SKS_EFT_EDI820_Data SKS_EFT_EDI820_Data;
        str val1;
        str val2;
        ;
        // GS 06 = GE 02
        select firstOnly SKS_EFT_EDI820_Data where
            SKS_EFT_EDI820_Data.Segment == SKS_EFT_EDI820_Segment::H0080GS &&
            SKS_EFT_EDI820_Data.FieldNbr == 6 &&
            SKS_EFT_EDI820_Data.FileRecId == mFileRecId &&
            SKS_EFT_EDI820_Data.UserId == mUserId;
    
        val1 = SKS_EFT_EDI::getDbValue(SKS_EFT_EDI820_Data.DataValue);
    
        select firstOnly SKS_EFT_EDI820_Data where
            SKS_EFT_EDI820_Data.Segment == mGroupSKS_EFT_EDI820_Data.Segment &&
            SKS_EFT_EDI820_Data.FieldNbr == 2 &&
            SKS_EFT_EDI820_Data.FileRecId == mFileRecId &&
            SKS_EFT_EDI820_Data.UserId == mUserId;
    
        val2 = SKS_EFT_EDI::getDbValue(SKS_EFT_EDI820_Data.DataValue);
    
        if(val1 != val2)
        {
            mErrorText = strFmt("@SKS2135", val1, val2);
            return false;
        }
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getErrorText</Name>
				<Source><![CDATA[
    public str getErrorText()
    {
        ;
        return mErrorText;
    }

]]></Source>
			</Method>
			<Method>
				<Name>IEA</Name>
				<Source><![CDATA[
    private boolean IEA()
    {
        SKS_EFT_EDI820_Data SKS_EFT_EDI820_Data;
        str val1;
        str val2;
        ;
        // ISA 13 = IEA02
        select firstOnly SKS_EFT_EDI820_Data where
            SKS_EFT_EDI820_Data.Segment == SKS_EFT_EDI820_Segment::H0050ISA &&
            SKS_EFT_EDI820_Data.FieldNbr == 13 &&
            SKS_EFT_EDI820_Data.FileRecId == mFileRecId &&
            SKS_EFT_EDI820_Data.UserId == mUserId;
    
        val1 = SKS_EFT_EDI::getDbValue(SKS_EFT_EDI820_Data.DataValue);
    
        select firstOnly SKS_EFT_EDI820_Data where
            SKS_EFT_EDI820_Data.Segment == mGroupSKS_EFT_EDI820_Data.Segment &&
            SKS_EFT_EDI820_Data.FieldNbr == 2 &&
            SKS_EFT_EDI820_Data.FileRecId == mFileRecId &&
            SKS_EFT_EDI820_Data.UserId == mUserId;
    
        val2 = SKS_EFT_EDI::getDbValue(SKS_EFT_EDI820_Data.DataValue);
    
        if(val1 != val2)
        {
            mErrorText = strFmt("@SKS2134", val1, val2);
            return false;
        }
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(RefRecId _FileRecId, UserId _UserId)
    {
        mFileRecId = _FileRecId;
        mUserId = _UserId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>requiredPair</Name>
				<Source><![CDATA[
    private boolean requiredPair(int field1, int field2)
    {
        SKS_EFT_EDI820_Data SKS_EFT_EDI820_Data;
        str val1;
        str val2;
        ;
    
        select SKS_EFT_EDI820_Data where
            SKS_EFT_EDI820_Data.Segment == mGroupSKS_EFT_EDI820_Data.Segment &&
            SKS_EFT_EDI820_Data.SegmentOccurrence == mGroupSKS_EFT_EDI820_Data.SegmentOccurrence &&
            SKS_EFT_EDI820_Data.DataOccurrence == mGroupSKS_EFT_EDI820_Data.DataOccurrence &&
            SKS_EFT_EDI820_Data.FileRecId == mFileRecId &&
            SKS_EFT_EDI820_Data.UserId == mUserId &&
            SKS_EFT_EDI820_Data.FieldNbr == field1;
    
        val1 = SKS_EFT_EDI::getDbValue(SKS_EFT_EDI820_Data.DataValue);
    
        select SKS_EFT_EDI820_Data where
            SKS_EFT_EDI820_Data.Segment == mGroupSKS_EFT_EDI820_Data.Segment &&
            SKS_EFT_EDI820_Data.SegmentOccurrence == mGroupSKS_EFT_EDI820_Data.SegmentOccurrence &&
            SKS_EFT_EDI820_Data.DataOccurrence == mGroupSKS_EFT_EDI820_Data.DataOccurrence &&
            SKS_EFT_EDI820_Data.FileRecId == mFileRecId &&
            SKS_EFT_EDI820_Data.UserId == mUserId &&
            SKS_EFT_EDI820_Data.FieldNbr == field2;
    
        val2 = SKS_EFT_EDI::getDbValue(SKS_EFT_EDI820_Data.DataValue);
    
        if((val1 != '' && val2 =='') || (val1 == '' && val2 !=''))
        {
            mErrorText = strFmt("@SKS2137", enum2str(mGroupSKS_EFT_EDI820_Data.Segment), int2str(field1), int2str(field2), val1, val2);
            return false;
        }
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>RMR</Name>
				<Source><![CDATA[
    private boolean RMR()
    {
        boolean valid;
        ;
    
        // Field 1 and 2
        valid = this.requiredPair(1, 2);
    
        return valid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>SE</Name>
				<Source><![CDATA[
    private boolean SE()
    {
        SKS_EFT_EDI820_Data SKS_EFT_EDI820_Data;
        str val1;
        str val2;
        ;
    
        // ST 02 = SE 02
        select firstOnly SKS_EFT_EDI820_Data where
            SKS_EFT_EDI820_Data.Segment == SKS_EFT_EDI820_Segment::H0100ST &&
            SKS_EFT_EDI820_Data.FieldNbr == 2 &&
            SKS_EFT_EDI820_Data.FileRecId == mFileRecId &&
            SKS_EFT_EDI820_Data.UserId == mUserId;
    
        val1 = SKS_EFT_EDI::getDbValue(SKS_EFT_EDI820_Data.DataValue);
    
        select firstOnly SKS_EFT_EDI820_Data where
            SKS_EFT_EDI820_Data.Segment == mGroupSKS_EFT_EDI820_Data.Segment &&
            SKS_EFT_EDI820_Data.FieldNbr == 2 &&
            SKS_EFT_EDI820_Data.FileRecId == mFileRecId &&
            SKS_EFT_EDI820_Data.UserId == mUserId;
    
        val2 = SKS_EFT_EDI::getDbValue(SKS_EFT_EDI820_Data.DataValue);
    
        if(val1 != val2)
        {
            mErrorText = strFmt("@SKS2136", val1, val2);
            return false;
        }
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate()
    {
        boolean success = true;
        ;
    
        while select
            minOf(Segment),
            minOf(SegmentOccurrence),
            minOf(DataOccurrence)
            from mGroupSKS_EFT_EDI820_Data
            group by
              mGroupSKS_EFT_EDI820_Data.Segment,
              mGroupSKS_EFT_EDI820_Data.SegmentOccurrence,
              mGroupSKS_EFT_EDI820_Data.DataOccurrence
            where
              mGroupSKS_EFT_EDI820_Data.FileRecId == mFileRecId &&
              mGroupSKS_EFT_EDI820_Data.UserId == mUserId
        {
            switch(mGroupSKS_EFT_EDI820_Data.Segment)
            {
                case SKS_EFT_EDI820_Segment::H0200BPR:
                    success = this.BPR();
                    break;
    
                case SKS_EFT_EDI820_Segment::D1500RMR:
                    success = this.RMR();
                    break;
    
                case SKS_EFT_EDI820_Segment::S0100SE:
                    success = this.SE();
                    break;
    
                case SKS_EFT_EDI820_Segment::S0200GE:
                    success = this.GE();
                    break;
    
                case SKS_EFT_EDI820_Segment::S0300IEA:
                    success = this.IEA();
                    break;
            }
    
            if(!success)
            {
                return false;
            }
        }
    
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>