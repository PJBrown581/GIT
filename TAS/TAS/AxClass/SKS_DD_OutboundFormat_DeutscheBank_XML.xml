<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_DD_OutboundFormat_DeutscheBank_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_DD_OutboundFormat_DeutscheBank_XML for Auddis DeutscheBank outbound format class
/// </summary>
class SKS_DD_OutboundFormat_DeutscheBank_XML extends SKS_DD_OutboundFormat_ISO_20022
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>node_GrpHdr_InitgPty_Id</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty_Id(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      InitgPty
        //          Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOther;
        str initiatingPartyId;

        initiatingPartyId = mSKS_EB_BankTable.CreditorNumber1;

        if(initiatingPartyId != '')
        {
            //          Id
            nodeId = _nodeInitgPty.appendChild(xmlDoc.createElement('Id'));
    
            //              OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            //                  Other
            nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
            //                          Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', initiatingPartyId, 35);

            //                          Issr
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Issr', 'CUST');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_PmtId</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_PmtId(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.29: PmtId
        //              2.31: EndToEndId
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodePmtId;
    
        //          2.28: PmtId
        nodePmtId = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('PmtId'));

        //              2.31: InstrId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'InstrId', strUpr(mCustDirectDebitMandate.MandateReference), 18);
    
        //              2.31: EndToEndId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId', 'NOTPROVIDED');
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_DbtrAgt(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.70: DbtrAgt
        //              FinInstnId
        //                  BIC
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
    
        //          2.70: DbtrAgt
        nodeDbtrAgt = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('DbtrAgt'));
    
        //              FinInstnId
        nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
        //          ClrSysMmbId
        nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', CustBankAccount::find(mCustDirectDebitMandate.CustAccount, mCustDirectDebitMandate.BankAccount).RegistrationNum, 6, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_DbtrAcct(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.73: DbtrAcct
        //              Id
        //                  IBAN
        //              Tp
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;
        XmlElement nodeOthr;
        str iban;

        iban = CustBankAccount::find(mCustDirectDebitMandate.CustAccount, mCustDirectDebitMandate.BankAccount).BankIBAN;
    
        //          2.73: DbtrAcct
        nodeDbtrAcct = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
        //              Id
        nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
    
        if(iban)
        {
            //                  IBAN
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN', iban, 22);
        }
        else
        {
            //              Othr
            nodeOthr = nodeDbtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
            //                  Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', CustBankAccount::find(mCustDirectDebitMandate.CustAccount, mCustDirectDebitMandate.BankAccount).AccountNum, 8);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_DrctDbtTx</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_DrctDbtTx(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          DrctDbtTx
        //              MndtRltdInf
        //                  MndtId
        //                  DtOfSgntr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDrctDbtTx;
        XmlElement nodeMndtRltdInf;

        //          DrctDbtTx
        nodeDrctDbtTx = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('DrctDbtTx'));
    
        //              MndtRltdInf
        nodeMndtRltdInf = nodeDrctDbtTx.appendChild(xmlDoc.createElement('MndtRltdInf'));
    
        //                  MndtId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeMndtRltdInf, 'MndtId', strUpr(mCustDirectDebitMandate.MandateReference), 16);
    
        //                  DtOfSgntr
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeMndtRltdInf, 'DtOfSgntr', SKS_PP_StringFormats::strDateYYYYMMDD(mCustDirectDebitMandate.SignatureDate, DateSeparator::Hyphen));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>