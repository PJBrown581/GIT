<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_TRUISTBANK_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_TRUISTBANK_CSV
/// </summary>
class SKS_EFT_Format_US_TRUISTBANK_CSV extends SKS_EFT_Format
{
    #define.FormatVersion('20230522')
    #define.ACH_CCD('ACH-CCD')
    #define.ACH_CTX('ACH-CTX')
    #define.CHK('CHK')
    #define.FED_WIRE('FED-WIRE')

    #define.Separator(',')
    #define.DoubleQuote('"')

    SKS_EFT_SequenceNumber mSequenceNumber;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    [SuppressBPWarningAttribute("BPCheckNestedLoopinCode","Necessary to allow the processing of every invoice(inner loop) for every relevant parent file detail record(outer loop)")]
    protected void formatStructure()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        mSKS_EFT_FileDetail_BankAccount = SKS_EFT_FileDetail_BankAccount::find(mSKS_EFT_FileDetail.RecId);

        this.rec_Summary();

        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            //Payment Record
            this.rec_Payment();

            while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId && invSKS_EFT_FileDetail.InvoiceNumber != ''
            {
                //Invoice Record
                this.rec_Remittance(invSKS_EFT_FileDetail);
            }

            next mSKS_EFT_FileDetail;
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Summary</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_Summary
    /// </summary>
    /// <returns>true</returns>
    public boolean rec_Summary()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        //1     Record Type
        sb.Append(this.wrapField('S'));

        //2     Payment Date
        sb.Append(this.wrapField(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_EFT_FileDetail.PaymentTransDate, DateSeparator::Slash)));

        //3     Company (Payer) name
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName), 35));

        //4     Company (Payer) name 2
        sb.Append(this.wrapField(''));

        //5     Payer address1
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr), 35));

        //6     Payer address2
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2), 35));

        //7     Payer City Name
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity), 30));

        //8     Payer State or Province Code
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyState), 2));

        //9     Payer Postal Code
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode), 15));

        //10    Payer ISO Country Code
        sb.Append(this.wrapField(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId), 3));

        //11    Payer Routing Number
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.BankBankTransit, 9));

        //12    Payer Account Number
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.BankBankAcct, 13));

        //13    Promo Line 1
        sb.Append(this.wrapField(''));

        //14    Promo Line 2
        sb.Append(this.wrapField(''));

        //15    Promo Line 3
        sb.Append(this.wrapField('', 0, false));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Payment</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_Payment
    /// </summary>
    /// <returns>true</returns>
    public boolean rec_Payment()
    {
        int len;
        str payeeRoutingCode;

        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        //1   Record Type
        sb.Append(this.wrapField('P'));

        //2   Payment Type Indicator
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #ACH_CCD:
            case #ACH_CTX:
                sb.Append(this.wrapField('ACH'));
                break;
            case #CHK:
                sb.Append(this.wrapField('CHK'));
                break;
            case #FED_WIRE:
                sb.Append(this.wrapField('WIR'));
                break;
        }

        //3   Payment Number
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.PaymentReference, 10));

        //4   Payment Amount
        sb.Append(this.wrapField(num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0, 2, 0, 0), 18));

        //5   Payee Number
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.AccountNum, 17));

        //6   Payee name
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #ACH_CCD:
            case #ACH_CTX:
                len = 22;
                break;
            case #CHK:
                len = 53;
                break;
        }
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName), len));

        //7   Payee name 2
        sb.Append(this.wrapField(''));

        //8   Payee address1
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr),55));

        //9   Payee address2
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr2),55));

        //10  Payee address3
        sb.Append(this.wrapField(''));

        //11  Payee City Name
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneCity),30));

        //12  Payee State or Province Code
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneState),2));

        //13  Payee Postal Code
        sb.Append(this.wrapField(mSKS_EFT_FileDetail_VendAddress.BeneZipPostal,15));

        //14  Payee ISO Country Code
        sb.Append(this.wrapField(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId),3));

        //15  Administration Contact Email
        sb.Append(this.wrapField(''));

        //16  Memo Field
        //17  Delivery_Method
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK)
        {
            sb.Append(this.wrapField(this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('MemoField', mSKS_EFT_FileDetail.RecId)), 30));
            sb.Append(this.wrapField(this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DeliveryMethod', mSKS_EFT_FileDetail.RecId)), 30));
            
            //18    Payee Routing ID
            sb.Append(this.wrapField(''));

            //19    Payee Routing Number
            sb.Append(this.wrapField(''));

            //20    Payee Demand Deposit Account Number
            sb.Append(this.wrapField('', 0, false));
        }
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #ACH_CCD:
            case #ACH_CTX:
                payeeRoutingCode = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PayeeRoutingId', mSKS_EFT_FileDetail.RecId));
                //18    Payee Routing ID
                sb.Append(this.wrapField(payeeRoutingCode, 2));

                //19    Payee Routing Number
                if(payeeRoutingCode == '02')
                {
                    sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepSwiftNo, 11));
                }
                else
                {
                    sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankTransit, 9));
                }

                //20    Payee Demand Deposit Account Number
                sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankAcct, 35));

                //21    Receiving Bank Name
                sb.Append(this.wrapField(''));

                //22    Receiving Bank City
                sb.Append(this.wrapField('', 0, false));
                break;

            case #FED_WIRE:
                payeeRoutingCode = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PayeeRoutingId', mSKS_EFT_FileDetail.RecId));
                //18    Payee Routing ID                
                sb.Append(this.wrapField(payeeRoutingCode, 2));

                //19    Payee Routing Number
                if(payeeRoutingCode == '02')
                {
                    sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepSwiftNo, 11));
                }
                else
                {
                    sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankTransit, 9));
                }

                //20    Payee Demand Deposit Account Number
                sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankAcct, 35));

                //21    Receiving Bank Name
                sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankName), 60));

                //22    Receiving Bank City
                sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankCity), 30));

                //23    Receiving Bank State/Province
                select msks_EFT_FileDetail_BankAddress where
                msks_EFT_FileDetail_BankAddress.RefRecId == mSKS_EFT_FileDetail.RecID
                && msks_EFT_FileDetail_BankAddress.AddressType == SKS_EFT_AddressType::VendBankAddress;

                sb.Append(this.wrapField(this.CharacterReplacement(msks_EFT_FileDetail_BankAddress.State), 3));

                //24    Receiving Bank Country Code
                sb.Append(this.wrapField(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId), 2));

                //25    Payment Method Code
                sb.Append(this.wrapField('FWT'));

                //26    Currency Code
                sb.Append(this.wrapField(mSKS_EFT_FileDetail.PaymentCurrencyCode));

                //27    Notes
                sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentNotes), 35));

                //28    Intermediary Account Number Qualifier
                sb.Append(this.wrapField('01'));

                //29    Intermediary Bank Idnetification Code
                sb.Append(this.wrapField(mSKS_EFT_FileDetail_Intermediary.IntBankId, 12));

                //30    Intermediary Bank Name
                sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankName), 60));

                //31    Intermediary Bank Country Code
                sb.Append(this.wrapField(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId), 2, false));
                break;
        }

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Remittance</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_Remittance
    /// </summary>
    /// <param name = "tmpSKS_EFT_FileDetail">tmpSKS_EFT_FileDetail</param>
    /// <returns>true</returns>
    boolean rec_Remittance(SKS_EFT_FileDetail tmpSKS_EFT_FileDetail)
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        //1 Record Type
        sb.Append(this.wrapField('I'));

        //2 Invoice Number
        sb.Append(this.wrapField(this.CharacterReplacement(tmpSKS_EFT_FileDetail.InvoiceNumber), 30));

        //3 Invoice Date
        sb.Append(this.wrapField(SKS_PP_StringFormats::strDateMMDDYYYY(tmpSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Slash)));

        //4 Remittance Description
        sb.Append(this.wrapField(''));

        //5 Invoice Amount
        sb.Append(this.wrapField(num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0), 18));

        //6 Discount Amount
        sb.Append(this.wrapField(num2str(tmpSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur * -1,0,2,1,0), 18));

        //7 Amount Paid
        sb.Append(this.wrapField(num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0), 18, false));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '', int _fieldLength = 0, boolean _addSeparator = true)
    {
        str text;

        if(_fieldLength > 0)
        {
            text = subStr(_field, 1, _fieldLength);
        }
        else
        {
            text = _field;
        }
        if(text != '' && strContains(text, ','))
        {
            text = #DoubleQuote + text + #DoubleQuote;
        }
        if(_addSeparator)
        {
            text += #Separator;
        }
        return text;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
            join mSKS_EFT_FileDetail_BenBank
            join mSKS_EFT_FileDetail_Intermediary
                order by mSKS_EFT_FileDetail.PaymentCompany,
                   mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_BenBank.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_Intermediary.RefRecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>