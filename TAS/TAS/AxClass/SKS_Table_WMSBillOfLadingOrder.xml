<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_Table_WMSBillOfLadingOrder</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_Table_WMSBillOfLadingOrder
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>EH_insert_post</Name>
				<Source><![CDATA[
    [DataEventHandler(tableStr(WMSBillOfLadingOrder), DataEventType::Inserted)]
    public static void EH_insert_post(Common sender, DataEventArgs e)
    {
        CustInvoiceJour Cust_InvoiceJour;
        CustTrans Cust_Trans;
        SKS_LB_InvoiceMatch lInvoiceMatch;
        WMSBillOfLadingOrder WMS_BillOfLadingOrder;
        ;
        WMS_BillOfLadingOrder = sender as WMSBillOfLadingOrder;
    
        // We need to create a SKS_LB_InvoiceMatch record if one is not there already.
        // It may have been added by the CustTrans Insert Method..
        // So here we go...
    
        // Deal with Bill of Lading
        if( WMS_BillOfLadingOrder.WMSReferenceType == WMSReferenceType::Sales)
        {
    
            select SalesId from Cust_InvoiceJour where Cust_InvoiceJour.SalesId == WMS_BillOfLadingOrder.InventTransRefID
                join Cust_Trans where Cust_Trans.Invoice == Cust_InvoiceJour.InvoiceID;
    
    
            if( Cust_Trans  )
            {
                // see if it exists
                select MatchValue from lInvoiceMatch where
                    lInvoiceMatch.MatchType == SKS_LB_MatchType::BillOfLading &&
                    lInvoiceMatch.Direction == SKS_LB_MatchTypeDirection::Forward &&
                    lInvoiceMatch.MatchValue == WMS_BillOfLadingOrder.billOfLadingId &&
                    lInvoiceMatch.CustTransRecId == Cust_Trans.RecId;
    
                // If the record does not already exists, create one...
                if(  !lInvoiceMatch )
                {
                    lInvoiceMatch.MatchType = SKS_LB_MatchType::BillOfLading;
                    lInvoiceMatch.Direction = SKS_LB_MatchTypeDirection::Reverse;
                    lInvoiceMatch.MatchValue = SKS_PP_Stringformats::reverse_String(WMS_BillOfLadingOrder.billOfLadingId);
                    lInvoiceMatch.CustTransRecId = Cust_Trans.RecId;
                    lInvoiceMatch.insert();
    
                    lInvoiceMatch.MatchType = SKS_LB_MatchType::BillOfLading;
                    lInvoiceMatch.Direction = SKS_LB_MatchTypeDirection::Forward;
                    lInvoiceMatch.MatchValue = WMS_BillOfLadingOrder.billOfLadingId;
                    lInvoiceMatch.CustTransRecId = Cust_Trans.RecId;
                    lInvoiceMatch.insert();
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>