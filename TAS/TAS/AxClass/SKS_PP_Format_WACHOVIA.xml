<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_WACHOVIA</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_WACHOVIA Extends SKS_PP_Format_BankGroup
{
    int64 mChkCount;
    real mChkSum;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    // WACHOVIA
        // Acount Number    Field 1    char    13    Static text = '#############' (Actual number masked here for security reasons.)
        // fcechecr.check_no    Field 2    char     10
        // fcechecr.check_amt    Field 3    decimal    16,2
        // fcechecr.check_date    Field 4    date
        // fcechecr.record_type    Field 5    char    1    If record_trype = 'VOID' then 'V' else ''
        // Filler    Field 6    char    15
        // Filler    Field 7    char    23
    protected str txtDetail()
    {
        int Mult = 1;
        str ItemType;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
            if(mSKS_PP_FileDetail.ChkCuryAmt < 0)
            {
                Mult = -1;
            }
        }
        else
        {
            ItemType = ' ';
        }
    
        sb.Append(SKS_PP_StringFormats::strFill(13, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(mSKS_PP_FileDetail.ChkCuryAmt * Mult,10));
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(ItemType);
        sb.Append(SKS_PP_StringFormats::strFill(30, strUpr(mSKS_PP_FileDetail.VendName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupHeader</Name>
				<Source><![CDATA[
    // WACHOVIA
        // Header Text    Field 1    char    20    Static text = 'RECONCILIATION HEADER'
        // Bank Number    Field 2    char    4    Static Text = '0075'
        // Account Number    Field 3    char    13    Static text = '#############' (Actual number masked here for security reasons.)
        // Total Check Amount    Field 4    char    12    Total of all checks * 100
        // Record Count    Field 5    char    5    Number of records
        // Filler    Field 6    char    26
    protected str txtGroupHeader()
    {
        SKS_PP_Bank SKS_PP_Bank_1;
        SKS_PP_FileDetail SKS_PP_FileDetail_2;
        Container company;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        //get sum of check amounts
        select sum(ChkCuryAmt) from SKS_PP_FileDetail_2 where SKS_PP_FileDetail_2.BnkBankAcct == mSKS_PP_FileDetail.BnkBankAcct;//get the sum of the check amounts and check count
        mChkSum = SKS_PP_FileDetail_2.ChkCuryAmt;
    
        //get count of check records
        select count(RecID) from SKS_PP_FileDetail_2 where SKS_PP_FileDetail_2.BnkBankAcct == mSKS_PP_FileDetail.BnkBankAcct;//get the sum of the check amounts and check count
        mChkCount = SKS_PP_FileDetail_2.RecId;
    
        //read bank record for pp01
        company = [mSKS_PP_FileDetail.ChkCpnyId];
        select crossCompany:company PP01 from SKS_PP_Bank_1 where SKS_PP_Bank_1.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;
    
        sb.Append('RECONCILIATIONHEADER');
        sb.Append(SKS_PP_StringFormats::strFill(4, SKS_PP_Bank_1.PP01, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(13, mSKS_PP_FileDetail.BnkBankAcct , SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(mChkSum,12));
        sb.Append(SKS_PP_StringFormats::strFill(5, int642str(mChkCount), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(26, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>