<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_BOA_BAFF_80</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_BOA_BAFF_80 extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_US_BOA_BAFF_80 extends SKS_EFT_Format
{
    #define.FormatVersion('20221114')
    BankAccountTable mBankAccountTable;
    #define.BKW('BKW')
    #define.PRO('PRO')
    #define.WIRE('FWT')
    #define.SWT('SWT')
    #define.ACH('ACH')
    #define.PAYFPS('PAYFPS')
    #define.PAYACH_MY('PAYACH-MY')          //SKS#DevOps:17915
    #define.CHK('CHK')

    int mRecordTotal;
    int mCreditCount;
    int mDebitCount;
    int64 mAccountHash;
    str bankCodeText, bankCode;
    AmountMST mControlTotal;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
    
        //File Header
        this.rec_File_Header();
    
        while(mSKS_EFT_FileDetail)
        {
            
            if(mBankAccountTable.AccountID != mSKS_EFT_FileDetail.BankAccountId)
            {
                // Get Bank Account Table
                mBankAccountTable = BankAccountTable::find(mSKS_EFT_FileDetail.BankAccountId);
            }
    
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();
    
            this.rec_PAR_ID();
    
            this.rec_P20();
    
            if((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SWT && 
                mSKS_EFT_FileDetail.PaymentCurrencyCode != mBankAccountTable.CurrencyCode)||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK)
            {
                this.rec_P21();
            }
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PAYACH_MY)
            {
                this.rec_P32('');
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CHK)
            {
                this.rec_P32(mSKS_EFT_FileDetail_Instructions.PmtInstText1);
    
                this.rec_P32(mSKS_EFT_FileDetail_Instructions.PmtInstText2);
    
                this.rec_P32(mSKS_EFT_FileDetail_Instructions.PmtInstText3);
    
                this.rec_P32(mSKS_EFT_FileDetail_Instructions.PmtInstText4);
            }
    
            this.rec_P40();
    
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CHK)
            {
                this.rec_P41();
            }
    
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SWT || 
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PRO ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PAYACH_MY)       //SKS#devOps:17915
            {
                this.rec_P42();
            }
    
            if((mSKS_EFT_FileDetail_Intermediary.IntBankId != ''    || 
                mSKS_EFT_FileDetail_Intermediary.IntBankSwift != '')&&
                (mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CHK&&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PAYACH_MY))
            {
                this.rec_P45();
                this.rec_P46();
            }
    
            this.rec_P50();
    
            this.rec_P51();
    
            this.rec_P52();
    
            this.rec_P53();
    
            this.rec_P55();
    
            this.rec_P56();
    
            if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'ACH-CTX'  ||
               mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'Wire-SWT' ||
               mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'Wire-FWT' ||
               mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'PAYSCT'   ||
               mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'PAYACH-AU'||
               mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'PAYACH'   ||        //SKS_DevOps_15030
               mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'CHK'      ||
               mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'PAYACH-MY')         //SKS#DevOps:17915
            {
                while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                {
                    if(invSKS_EFT_FileDetail.InvoiceNumber != '')
                    {
                        this.rec_P70(invSKS_EFT_FileDetail);
                    }
                }
            }
    
            next mSKS_EFT_FileDetail;
        }
    
        //File Trailer
        this.rec_P80();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAccountHash</Name>
				<Source><![CDATA[
    private int64 getAccountHash(str _Value = '')
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        int charCount;
        int64 Hash;
        int length = strLen(_Value);
        str HashedValue;
    
        if(_Value != '')
        {
            for(charCount = 1; charCount <= 15; charCount++)
            {
                if(charCount > length)
                {
                    break;
                }
    
                switch(subStr(_Value,charCount,1))
                {
                    case '0':
                    case '1':
                    case '2':
                    case '3':
                    case '4':
                    case '5':
                    case '6':
                    case '7':
                    case '8':
                    case '9':
                        sb.Append(subStr(_Value,charCount,1));
                        break;
                    default:
                        sb.Append('1');
                        break;
                }
            }
    
            HashedValue = sb.ToString();
            Hash = str2int64(HashedValue);
        }
        else
        {
            Hash = 0;
        }
    
        return Hash;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJournaltxt</Name>
				<Source><![CDATA[
    private str getJournaltxt()
    {
        LedgerJournalTrans ledgerJournalTrans;
    
        select crossCompany Txt from ledgerJournalTrans where
            ledgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;
    
        return this.CharacterReplacement(ledgerJournalTrans.Txt);
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_File_Header</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_File_Header
    /// </summary>
    /// <returns>true</returns>
    boolean rec_File_Header()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                      Size      Position
        // 1    Sign on Identification                          6      ( 1- 6)
        // 2    Set Identification                              3      ( 7- 9)
        // 3    Company ID                                     10      (10-19)
        // 4    File Creation Date                              8      (20-27)
        // 5    File Creation Time                              6      (28-33)
        // 6    File Id                                         8      (34-41)
        // 7    FILLER                                         39      (42-80)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        mRecordTotal++;
    
        // 1    Sign on Identification                          6      ( 1- 6)
        sb.Append('SIGNON');
    
        // 2    Set Identification                              3      ( 7- 9)
        sb.Append('REC');
    
        // 3    Company ID                                     10      (10-19)
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_EFT_FileDetail.FileACHCompanyId, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 4    File Creation Date                              8      (20-27)
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
    
        // 5    File Creation Time                              6      (28-33)
        sb.Append(SKS_PP_StringFormats::strTimeHHMMSS());
    
        // 6    File Id                                         8      (34-41)
        sb.Append(SKS_PP_StringFormats::strFill(8, mSKS_EFT_File.FileNbr, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 7    FILLER                                         39      (42-80)
        sb.Append(SKS_PP_StringFormats::strFill(39, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_P20</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_P20
    /// </summary>
    /// <returns>true</returns>
    boolean rec_P20()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                      Size      Position
        // 1    Record Type                                     3      ( 1- 3)
        // 2    Unique Company ID                              10      ( 4-13)
        // 3    Payment Creation Date                           8      (14-21)
        // 4    Payment Method                                  3      (22-24)
        // 5    Message/Payment Ref No.                        15      (25-39)
        // 6    Pmt Due Date (Effect Entry Dtd)                 8      (40-47)
        // 7    Payment Amount                                 18      (48-65)
        // 8    Payment Currency Code                           3      (66-68)
        // 9    Payment Handling Code                           3      (69-71)
        //10    Payment Debit/Credit Code                       3      (72-74)
        //11    Payment Format                                  3      (75-77)
        //12    Payment offset/consolidation Override flag      1      (   78)
        //13    Foreign Character Transaction Flag              1      (   79)
        //14    Priority Code                                   1      (   80)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str value = '';
        mRecordTotal++;
    
        // 1    Record Type                                     3      ( 1- 3)
        sb.Append('P20');
    
        // 2    Unique Company ID                              10      ( 4-13)
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_EFT_FileDetail_BankAccount.WOrdPartyId, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 3    Payment Creation Date                           8      (14-21)
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
    
        // 4    Payment Method                                  3      (22-24)
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PAYACH_MY)
        {
            sb.Append('ACH');
        }
        else
        {
            sb.Append(mSKS_EFT_FileFormatPaymSpec.TransactionCode);
        }
    
        // 5    Message/Payment Ref No.                        15      (25-39)
        sb.Append(SKS_PP_StringFormats::strFill(15, strUpr(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 6    Pmt Due Date (Effect Entry Dtd)                 8      (40-47)
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate));
    
        // 7    Payment Amount                                 18      (48-65)
        mControlTotal += this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur);
        sb.Append(SKS_PP_StringFormats::strFill(18, num2str(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur),0,2,1,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 8    Payment Currency Code                           3      (66-68)
        sb.Append(mSKS_EFT_FileDetail.PaymentCurrencyCode);
    
        // 9    Payment Handling Code                           3      (69-71)
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH && mSKS_EFT_FileDetail.RecordType == SKS_EFT_RecordType::PreNote)
        {
            sb.Append(SKS_PP_StringFormats::strFill(3, 'P', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'ACH-CTX' ||
                mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'PAYACH-MY')        //SKS#DevOps:17915
        {
            sb.Append(SKS_PP_StringFormats::strFill(3, 'C', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'CHK')      //SKS#DevOps:15050
        {
            sb.Append(SKS_PP_StringFormats::strFill(3, 'N', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(3, 'D', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
    
        //10    Payment Debit/Credit Code                       3      (72-74)
        if(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur <= 0)
        {
            mCreditCount++;
            sb.Append(SKS_PP_StringFormats::strFill(3, 'C', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            mDebitCount++;
            sb.Append(SKS_PP_StringFormats::strFill(3, 'D', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
    
        //11    Payment Format                                  3      (75-77)
        switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
        {
            case 'ACH-CCD':
                value = 'CCD';
                break;
            case 'ACH-CTX':
                value = 'CTX';
                break;
            case 'PAYSCT':
                value = 'SCT';    
                break;
            case 'PAYFPS':
                value = 'FPS';
                break;
            case 'CHK':             //SKS#DevOps:15050
                value = 'PBC';
                break;
        }
        sb.Append(SKS_PP_StringFormats::strFill(3, value, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK)           //SKS#DevOps:15050
        {
            sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            //12    Payment offset/consolidation Override flag      1      (   78)
            sb.Append(SKS_PP_StringFormats::strFill(1, this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('OffsetOverride', mSKS_EFT_FileDetail.RecId)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
    
        //13    Foreign Character Transaction Flag              1      (   79)
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //14    Priority Code                                   1      (   80)
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_P21</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_P21
    /// </summary>
    /// <returns>true</returns>
    boolean rec_P21()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                      Size      Position
        // 1    Record Type                                     3      ( 1- 3)
        // 2    Business Function Code                          3      ( 4-06)
        // 3    Payment Description                            10      (07-16)
        // 4    Check Reference Number                         10      (17-26)
        // 5    Related Message Ref Number                     15      (27-41)
        // 6    Trading Partner ID for X12 Split remittance    15      (42-56)
        // 7    Customer Reference Number                      16      (57-72)
        // 8    IAT Transaction Type Code                       3      (73-75)
        // 9    IAT - Zero $ CTX indicator                      3      (76-78)
        //10    Filler                                          2      (79-80)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        // 1    Record Type                                     3      ( 1- 3)
        sb.Append('P21');
    
        // 2    Business Function Code                          3      ( 4-06)
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK)           //SKS#DevOps:15050
        {
            sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append('FXP');
        }
    
        // 3    Payment Description                            10      (07-16)
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 4    Check Reference Number                         10      (17-26)
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK)           //SKS#DevOps:15050
        {
            sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_EFT_FileDetail.PaymentReference, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
    
        // 5    Related Message Ref Number                     15      (27-41)
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 6    Trading Partner ID for X12 Split remittance    15      (42-56)
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 7    Customer Reference Number                      16      (57-72)
        sb.Append(SKS_PP_StringFormats::strFill(16, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 8    IAT Transaction Type Code                       3      (73-75)
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 9    IAT - Zero $ CTX indicator                      3      (76-78)
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //10    Filler                                          2      (79-80)
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        mRecordTotal++;
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_P32</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_P32
    /// </summary>
    /// <param name = "_text">_text</param>
    /// <returns>true</returns>
    boolean rec_P32(str _text)
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                      Size      Position
        // 1    Record Type                                     3      ( 1- 3)
        // 2    Sender of Instruction                           3      ( 4- 6)
        // 3    Reciever of Instruction                         3      ( 7- 9)
        // 4    Instruction Code                                3      (10-12)
        // 5    Instruction, text                              35      (13-47)
        // 6    Filler                                         33      (48-80)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        if(_text != '')
        {
            // 1    Record Type                                     3      ( 1- 3)
            sb.Append('P32');
    
            // 2    Sender of Instruction                           3      ( 4- 6)
            sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 3    Reciever of Instruction                         3      ( 7- 9)
            sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 4    Instruction Code                                3      (10-12)
            sb.Append(SKS_PP_StringFormats::strFill(3, this.CharacterReplacement(mSKS_EFT_FileDetail_Instructions.BankInst1), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 5    Instruction, text                              35      (13-47)
            sb.Append(SKS_PP_StringFormats::strFill(35, _text, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 6    Filler                                         33      (48-80)
            sb.Append(SKS_PP_StringFormats::strFill(33, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            this.fileWrite(sb.ToString());
            mRecordTotal++;
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PAYACH_MY)      //SKS#DevOps:18175
        {
            this.getBankPurposeCode();

            // 1    Record Type                                     3      ( 1- 3)
            sb.Append('P32');
    
            // 2    Sender of Instruction                           3      ( 4- 6)
            sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 3    Reciever of Instruction                         3      ( 7- 9)
            sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 4    RegulatoryPurpose                                3      
            sb.Append('SPH/POP/');
            sb.Append(SKS_PP_StringFormats::strFill(1, this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PayerResident', mSKS_EFT_FileDetail.RecId)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            sb.Append('/');
            sb.Append(SKS_PP_StringFormats::strFill(1, this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PayeeResident', mSKS_EFT_FileDetail.RecId)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            sb.Append('/');
            sb.Append(SKS_PP_StringFormats::strFill(5, this.CharacterReplacement(bankCode), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            sb.Append(SKS_PP_StringFormats::strFill(2, '/', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            sb.Append('//');
            sb.Append(SKS_PP_StringFormats::strFill(33, this.CharacterReplacement(bankCodeText), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            
            // 5    Filler                                         33      (48-80)
            sb.Append(SKS_PP_StringFormats::strFill(17, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            this.fileWrite(sb.ToString());
            mRecordTotal++;
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankPurposeCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// getBankPurposeCode
    /// </summary>
    private void getBankPurposeCode()
    {
        msks_EFT_FileDetail_PaymentLine = sks_EFT_FileDetail_PaymentLine::find(mSKS_EFT_FileDetail.RecId); 
    
        bankCodeText = this.CharacterReplacement(msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeText); 

        bankCode = this.CharacterReplacement(msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeCode); 

        return;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_P40</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_P40
    /// </summary>
    /// <returns>true</returns>
    boolean rec_P40()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                                                      Size     Position
        // 1    Record Type                                                                     3      ( 1- 3)
        // 2    Originator Bank Branch and Account Number/Originator Bank Account Number       35      ( 4-38)
        // 3    Originator Bank ID Code                                                        11      (39-49)
        // 4    Originator Bank Account Currency Code                                           3      (50-52)
        // 5    Originator Bank ISO Country Code                                                2      (53-54)
        // 6    Financial Charges Allocation Code                                               2      (55-56)
        // 7    FILLER                                                                         24      (57-80)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        mRecordTotal++;
    
        // 1    Record Type                                                                     3      ( 1- 3)
        sb.Append('P40');
    
        // 2    Originator Bank Branch and Account Number/Originator Bank Account Number       35      ( 4-38)
        sb.Append(SKS_PP_StringFormats::strFill(35, strRem(strRem(mSKS_EFT_FileDetail.BankBankAcct, '-'), ' '), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 3    Originator Bank ID Code                                                        11      (39-49)
        if(mSKS_EFT_FileFormatPaymSpec.PaymSpec != 'PAYACH-CA' &&
           mSKS_EFT_FileFormatPaymSpec.PaymSpec != 'PAYACH-AU')
        {
            sb.Append(SKS_PP_StringFormats::strFill(11, mSKS_EFT_FileDetail.BankBankTransit, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(11, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
    
        // 4    Originator Bank Account Currency Code                                           3      (50-52)
        sb.Append(mSKS_EFT_FileDetail.CurrencyCode);
    
        // 5    Originator Bank ISO Country Code                                                2      (53-54)
        sb.Append(SKS_PP_StringFormats::strFill(2, this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 6    Financial Charges Allocation Code                                               2      (55-56)
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PAYACH_MY)
        {
            sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append('14');
        }
    
        // 7    FILLER                                                                         24      (57-80)
        sb.Append(SKS_PP_StringFormats::strFill(24, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_P41</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_P41
    /// </summary>
    /// <returns>true</returns>
    boolean rec_P41()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                              Size     Position
        // 1    Record Type                             3      ( 1- 3)
        // 2    Receiving Bank ID Code Qualifier        3      ( 4- 6)
        // 3    Receiving Bank Sort (ID) Code          11      ( 7-17)
        // 4    Receiving Bank Account Type             3      (18-20)
        // 5    Receiving Bank Account Number          35      (21-55)
        // 6    Building Society Roll Number           19      (56-74)
        // 7    Receiving Bank ISO Country Code         2      (75-76)
        // 8    Receiving Bank PAT ID Flag              1      (   77)
        // 9    FILLER                                  3      (78-80)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str value;
        mRecordTotal++;
    
        // 1    Record Type                             3      ( 1- 3)
        sb.Append('P41');
    
        // 2    Receiving Bank ID Code Qualifier        3      ( 4- 6)
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #BKW:
            case #PRO:
            case #SWT:
            case #PAYFPS:
                if(mSKS_EFT_FileDetail.PaymSpec == 'PAYEFT' || mSKS_EFT_FileDetail.PaymSpec == 'PAYFPS')
                {
                    // 2    Receiving Bank ID Code Qualifier        3      ( 4- 6)
                    sb.Append('EFT');
    
                    // 3    Receiving Bank Sort (ID) Code          11      ( 7-17)
                    sb.Append(SKS_PP_StringFormats::strFill(11, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
                }
                else if(mSKS_EFT_FileDetail.DepSwiftNo != '')
                {
                    // 2    Receiving Bank ID Code Qualifier        3      ( 4- 6)
                    sb.Append('SWT');
    
                    // 3    Receiving Bank Sort (ID) Code          11      ( 7-17)
                    sb.Append(SKS_PP_StringFormats::strFill(11, mSKS_EFT_FileDetail.DepSwiftNo, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
                }
                else
                {
                    if(mSKS_EFT_FileDetail.PaymSpec == 'PAYSCT')
                    {
                        // 2    Receiving Bank ID Code Qualifier        3      ( 4- 6)
                        sb.Append('   ');
    
                        // 3    Receiving Bank Sort (ID) Code          11      ( 7-17)
                        sb.Append(SKS_PP_StringFormats::strFill(11, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
                    }
                    else
                    {
                        // 2    Receiving Bank ID Code Qualifier        3      ( 4- 6)
                        sb.Append('FWT');
    
                        // 3    Receiving Bank Sort (ID) Code          11      ( 7-17)
                        sb.Append(SKS_PP_StringFormats::strFill(11, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
                    }
                }
                break;
            case #WIRE:
                // 2    Receiving Bank ID Code Qualifier        3      ( 4- 6)
                sb.Append('FWT');
                // 3    Receiving Bank Sort (ID) Code          11      ( 7-17)
                sb.Append(SKS_PP_StringFormats::strFill(11, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
                break;
            case #ACH:
                // 2    Receiving Bank ID Code Qualifier        3      ( 4- 6)
                if(mSKS_EFT_FileDetail.PaymSpec == 'PAYACH'    ||
                   mSKS_EFT_FileDetail.PaymSpec == 'PAYACH-CA' ||
                   mSKS_EFT_FileDetail.PaymSpec == 'PAYACH-AU' )
                {
                    sb.Append('EFT');
                }
                else
                {
                    sb.Append('   ');
                }
    
                // 3    Receiving Bank Sort (ID) Code          11      ( 7-17)
                sb.Append(SKS_PP_StringFormats::strFill(11, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
                break;
            case #PAYACH_MY:
                // 2    Receiving Bank ID Code Qualifier        3      ( 4- 6)
                sb.Append('EFT');
                    
                // 3    Receiving Bank Sort (ID) Code          11      ( 7-17)
                sb.Append(SKS_PP_StringFormats::strFill(11, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
                break;
        }
    
        // 4    Receiving Bank Account Type             3      (18-20)
        if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::SavingsAccount)
        {
            sb.Append(SKS_PP_StringFormats::strFill(3, 'SG', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(3, 'DA', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
    
        // 5    Receiving Bank Account Number          35      (21-55)
        if(mSKS_EFT_FileDetail.DepBankIBAN != '' && (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SWT ||
                                                     mSKS_EFT_Filedetail.PaymSpec == 'PAYSCT'))
        {
            mAccountHash += this.getAccountHash(strRem(strRem(mSKS_EFT_FileDetail.DepBankIBAN, '-'), ' '));
            sb.Append(SKS_PP_StringFormats::strFill(35, strRem(strRem(mSKS_EFT_FileDetail.DepBankIBAN, '-'), ' '), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            mAccountHash += this.getAccountHash(strRem(strRem(mSKS_EFT_FileDetail.DepBankAcct, '-'), ' '));
            sb.Append(SKS_PP_StringFormats::strFill(35, strRem(strRem(mSKS_EFT_FileDetail.DepBankAcct, '-'), ' '), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        // 6    Building Society Roll Number           19      (56-74)
        sb.Append(SKS_PP_StringFormats::strFill(19, this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BuildngSocietyRollNum', mSKS_EFT_FileDetail.RecId)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 7    Receiving Bank ISO Country Code         2      (75-76)
        switch(mSKS_EFT_FileDetail.PaymSpec)
        {
            case 'PAYACH':
            case 'PAYEFT':
            case 'PAYFPS': 
                value = 'GB';
                break;
            default:
                value = this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId);
                break;
        }
        sb.Append(SKS_PP_StringFormats::strFill(2, value, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 8    Receiving Bank PAT ID Flag              1      (   77)
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 7    FILLER                                  3      (78-80)
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_P42</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_P42
    /// </summary>
    /// <returns>true</returns>
    boolean rec_P42()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                              Size     Position
        // 1    Record Type                             3      ( 1- 3)
        // 2    Receiving Bank ID Code Qualifier        2      ( 4- 5)
        // 3    Receiving Bank Name                    33      ( 6-38)
        // 4    Receiving Bank Branch Number           12      (39-50)
        // 5    Receiving Bank Branch Name/Place       30      (51-80)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        if(mSKS_EFT_FileDetail_BenBank.BenBankName != '' ||
           mSKS_EFT_FileDetail_BenBank.BenBankBranch != '' ||
           mSKS_EFT_FileDetail_BenBank.BenBankCity != '')
        {
            // 1    Record Type                             3      ( 1- 3)
            sb.Append('P42');
    
            // 2    Receiving Bank ID Code Qualifier        2      ( 4- 5)
            sb.Append('RB');
    
            // 3    Receiving Bank Name                    33      ( 6-38)
            sb.Append(SKS_PP_StringFormats::strFill(33, this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 4    Receiving Bank Branch Number           12      (39-50)
            sb.Append(SKS_PP_StringFormats::strFill(12, this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankBranch), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 5    Receiving Bank Branch Name/Place       30      (51-80)
            sb.Append(SKS_PP_StringFormats::strFill(30, this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankCity), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            this.fileWrite(sb.ToString());
            mRecordTotal++;
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_P45</Name>
				<Source><![CDATA[
    /// <summary>
    ///rec_P45
    /// </summary>
    /// <returns>true</returns>
    boolean rec_P45()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                 Size     Position
        // 1    Record Type                                3      ( 1- 3)
        // 2    Intermediary Bank Code Qualifier           3      ( 4- 6)
        // 3    Intermediary Bank Sort (ID) Code          11      ( 7-17)
        // 4    Intermediary Bank Account Type Code        3      (18-20)
        // 5    Intermediary Bank Account Number          35      (21-55)
        // 6    Intermediary Bank ISO Country Code         2      (56-57)
        // 7    FILLER                                    23      (58-80)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        mRecordTotal++;
    
        // 1    Record Type                                3      ( 1- 3)
        sb.Append('P45');
    
        if(mSKS_EFT_FileDetail_Intermediary.IntBankSwift != '')
        {
            // 2    Intermediary Bank Code Qualifier           3      ( 4- 6)
            sb.Append('SWT');
    
            // 3    Intermediary Bank Sort (ID) Code          11      ( 7-17)
            sb.Append(SKS_PP_StringFormats::strFill(11, mSKS_EFT_FileDetail_Intermediary.IntBankSwift, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            // 2    Intermediary Bank Code Qualifier           3      ( 4- 6)
            //if(SKS_EFT_Format::getCodelookupvalue('IntBankCodeQual', mSKS_EFT_FileDetail.RecId) != 'EFT')
            //{
            //    sb.Append('FWT');
            //}
            //else
            //{
            //    sb.Append('EFT');
            //});
            sb.Append(SKS_EFT_Format::getCodelookupvalue('IntBankCodeQual', mSKS_EFT_FileDetail.RecId));

            // 3    Intermediary Bank Sort (ID) Code          11      ( 7-17)
            sb.Append(SKS_PP_StringFormats::strFill(11, mSKS_EFT_FileDetail_Intermediary.IntBankId, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
    
        // 4    Intermediary Bank Account Type Code        3      (18-20)
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 5    Intermediary Bank Account Number          35      (21-55)
        sb.Append(SKS_PP_StringFormats::strFill(35, mSKS_EFT_FileDetail_Intermediary.IntBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 6    Intermediary Bank ISO Country Code         2      (56-57)
        sb.Append(SKS_PP_StringFormats::strFill(2, this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 7    FILLER                                    23      (58-80)
        sb.Append(SKS_PP_StringFormats::strFill(23, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_P46</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_P46
    /// </summary>
    /// <returns>true</returns>
    boolean rec_P46()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                 Size     Position
        // 1    Record Type                                3      ( 1- 3)
        // 2    Intermediary Bank Code Qualifier           2      ( 4- 5)
        // 3    Intermediary Bank Name                    33      ( 6-38)
        // 4    Intermediary Bank Branch Number           12      (39-50)
        // 5    Intermediary Bank Name/Place              30      (51-80)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        mRecordTotal++;
    
        // 1    Record Type                                3      ( 1- 3)
        sb.Append('P46');
    
        // 2    Intermediary Bank Code Qualifier           2      ( 4- 5)
        sb.Append('Z6');
    
        // 3    Intermediary Bank Name                    33      ( 6-38)
        sb.Append(SKS_PP_StringFormats::strFill(33, this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 4    Intermediary Bank Branch Number           12      (39-50)
        sb.Append(SKS_PP_StringFormats::strFill(12, this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankBranch), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 5    Intermediary Bank Name/Place              30      (51-80)
        sb.Append(SKS_PP_StringFormats::strFill(30, this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankCity), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_P50</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_P50
    /// </summary>
    /// <returns>true</returns>
    boolean rec_P50()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                      Size     Position
        // 1    Record Type                                     3      ( 1- 3)
        // 2    Ordering Party (instruction originator) Name   35      ( 4-38)
        // 3    Ordering Party ID                              15      (39-53)
        // 4    Ordering Party Country Code                     2      (54-55)
        // 5    Ordering Party PAT ID Flag                      1      (   56)
        // 6    FILLER                                         24      (57-80)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName != '' ||
           mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId != '')
        {
            mRecordTotal++;
    
            // 1    Record Type                                     3      ( 1- 3)
            sb.Append('P50');
    
            // 2    Ordering Party (instruction originator) Name   35      ( 4-38)
            sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 3    Ordering Party ID                              15      (39-53)
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PAYACH_MY)
            {
                sb.Append(SKS_PP_StringFormats::strFill(15, this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyId), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            }
            // 4    Ordering Party Country Code                     2      (54-55)
            sb.Append(SKS_PP_StringFormats::strFill(2, this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 5    Ordering Party PAT ID Flag                      1      (   56)
            sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 6    FILLER                                         24      (57-80)
            sb.Append(SKS_PP_StringFormats::strFill(24, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_P51</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_P51
    /// </summary>
    /// <returns>true</returns>
    boolean rec_P51()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                      Size     Position
        // 1    Record Type                                     3      ( 1- 3)
        // 2    Ordering Party (Payer) Address 1               35      ( 4-38)
        // 3    Ordering Party (Payer) Address 2               35      (39-73)
        // 4    FILLER                                          7      (74-80)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr != '' ||
           mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2 != '')
        {
            mRecordTotal++;
    
            // 1    Record Type                                     3      ( 1- 3)
            sb.Append('P51');
    
            // 2    Ordering Party (Payer) Address 1               35      ( 4-38)
            sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 3    Ordering Party (Payer) Address 2               35      (39-73)
            sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 4    FILLER                                          7      (74-80)
            sb.Append(SKS_PP_StringFormats::strFill(7, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_P52</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_P52
    /// </summary>
    /// <returns>true</returns>
    boolean rec_P52()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                      Size     Position
        // 1    Record Type                                     3      ( 1- 3)
        // 2    Ordering Party City                            30      ( 4-33)
        // 3    Ordering Party Country Sub-Entry                2      (34-35)
        // 4    Ordering Party Postal Code                     11      (36-46)
        // 5    Ordering Party Country code                     2      (47-48)
        // 6    FILLER                                         32      (49-80)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity != '' ||
           mSKS_EFT_FileDetail_BankAccount.WOrdPartyState != '' ||
           mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode != '' ||
           mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId != '')
        {
            mRecordTotal++;
            // 1    Record Type                                     3      ( 1- 3)
            sb.Append('P52');
    
            // 2    Ordering Party City                            30      ( 4-33)
            sb.Append(SKS_PP_StringFormats::strFill(30, this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 3    Ordering Party Country Sub-Entry                2      (34-35)
            sb.Append(SKS_PP_StringFormats::strFill(2, this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyState), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 4    Ordering Party Postal Code                     11      (36-46)
            sb.Append(SKS_PP_StringFormats::strFill(11, this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 5    Ordering Party Country code                     2      (47-48)
            sb.Append(SKS_PP_StringFormats::strFill(2, this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 6    FILLER                                         32      (49-80)
            sb.Append(SKS_PP_StringFormats::strFill(32, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_P53</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_P53
    /// </summary>
    /// <returns>true</returns>
    boolean rec_P53()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                      Size     Position
        // 1    Record Type                                     3      ( 1- 3)
        // 2    Receiving Party Name 1                         35      ( 4-38)
        // 3    Receiving Party Name 2                         35      (39-73)
        // 4    Receiving Party ISO Country Code of Residency   2      (74-75)
        // 5    Receiving Party PAT ID Flag                     1      (   76)
        // 6    FILLER                                          4      (77-80)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str name;
        str nameOverflow = '';
        mRecordTotal++;
    
        // 1    Record Type                                     3      ( 1- 3)
        sb.Append('P53');
    
        // 2    Receiving Party Name 1                         35      ( 4-38)
        if(mSKS_EFT_FileDetail_VendAddress.BeneName != '')
        {
            name = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName);
        }
        else
        {
            name = this.CharacterReplacement(mSKS_EFT_FileDetail.AccountName);
        }
        sb.Append(SKS_PP_StringFormats::strFill(35, subStr(name,1, 35), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 3    Receiving Party Name 2                         35      (39-73)
        if(strLen(name) > 35)
        {
            nameOverflow = subStr(name,36, strLen(name));
        }
        sb.Append(SKS_PP_StringFormats::strFill(35, nameOverflow, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 4    Receiving Party ISO Country Code of Residency   2      (74-75)
        sb.Append(SKS_PP_StringFormats::strFill(2, this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 5    Receiving Party PAT ID Flag                     1      (   76)
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 6    FILLER                                          4      (77-80)
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_P55</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_P55
    /// </summary>
    /// <returns>true</returns>
    boolean rec_P55()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                      Size     Position
        // 1    Record Type                                     3      ( 1- 3)
        // 2    Receiving Party (Payer) Address 1               35      ( 4-38)
        // 3    Receiving Party (Payer) Address 2               35      (39-73)
        // 4    FILLER                                          7      (74-80)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        if(mSKS_EFT_FileDetail_VendAddress.BeneAddr != '' || mSKS_EFT_FileDetail_VendAddress.BeneAddr2 != '')
        {
            mRecordTotal++;
    
            // 1    Record Type                                     3      ( 1- 3)
            sb.Append('P55');
    
            // 2    Receiving Party (Payer) Address 1               35      ( 4-38)
            sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 3    Receiving Party (Payer) Address 2               35      (39-73)
            sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr2), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 4    FILLER                                          7      (74-80)
            sb.Append(SKS_PP_StringFormats::strFill(7, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            this.fileWrite(sb.ToString());
        }
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_P56</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_P56
    /// </summary>
    /// <returns>true</returns>
    boolean rec_P56()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                       Size     Position
        // 1    Record Type                                      3      ( 1- 3)
        // 2    Receiving Party City                            30      ( 4-33)
        // 3    Receiving Party Country Sub-Entry                2      (34-35)
        // 4    Receiving Party Postal Code                     11      (36-46)
        // 5    Receiving Party Country code                     2      (47-48)
        // 6    Check Pymt - Mail Handling Code                  2      (49-50)
        // 7    Receiving Party Vendor Number                   20      (51-70)
        // 8    Remote Print Location Code                       4      (71-74)
        // 9    FILLER                                           6      (75-80)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        if(mSKS_EFT_FileDetail_VendAddress.BeneCity != '' ||
           mSKS_EFT_FileDetail_VendAddress.BeneState != '' ||
           mSKS_EFT_FileDetail_VendAddress.BeneZipPostal != '' ||
           mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId)
        {
            mRecordTotal++;
    
            // 1    Record Type                                      3      ( 1- 3)
            sb.Append('P56');
    
            // 2    Receiving Party City                            30      ( 4-33)
            sb.Append(SKS_PP_StringFormats::strFill(30, this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneCity), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 3    Receiving Party Country Sub-Entry                2      (34-35)
            sb.Append(SKS_PP_StringFormats::strFill(2, this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneState), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 4    Receiving Party Postal Code                     11      (36-46)
            sb.Append(SKS_PP_StringFormats::strFill(11, this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneZipPostal), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 5    Receiving Party Country code                     2      (47-48)
            sb.Append(SKS_PP_StringFormats::strFill(2, this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 6    Check Pymt - Mail Handling Code                  2      (49-50)
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK)
            {
                sb.Append(SKS_PP_StringFormats::strFill(2,this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('MailHandlingCode', mSKS_EFT_FileDetail.RecId)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            }
    
            // 7    Receiving Party Vendor Number                   20      (51-70)
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PAYACH_MY)
            {
                sb.Append(SKS_PP_StringFormats::strFill(20, this.CharacterReplacement(mSKS_EFT_FileDetail.AccountNum), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(20, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            }
            
    
            // 8    Remote Print Location Code                       4      (71-74)
            sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 9    FILLER                                           6      (75-80)
            sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_P70</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_P70
    /// </summary>
    /// <param name = "_invSKS_EFT_FileDetail">_invSKS_EFT_FileDetail</param>
    /// <returns>true</returns>
    boolean rec_P70(SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                      Size     Position
        // 1    Record Type                                     3      ( 1- 3)
        // 2    Remittance Detail Item Qualifier                3      ( 4-06)
        // 3    Remittance Detail Item Reference               30      (07-36)
        // 4    Remittance Detail Item Date                     8      (37-44)
        // 5    Remittance Detail Item Amount Paid             13      (45-57)
        // 6    Remittance Detail Item Original Amt            13      (58-70)
        // 7    FILLER                                         10      (71-80)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str sign;
    
        mRecordTotal++;
    
        // 1    Record Type                                     3      ( 1- 3)
        sb.Append('P70');
    
        // 2    Remittance Detail Item Qualifier                3      ( 4-06)
        sb.Append('INV');
    
        // 3    Remittance Detail Item Reference               30      (07-36)
        sb.Append(SKS_PP_StringFormats::strFill(30, this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceNumber), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 4    Remittance Detail Item Date                     8      (37-44)
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(_invSKS_EFT_FileDetail.InvoiceDate));
    
        if(_invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur < 0)
        {
            sign = '+';
        }
        else
        {
            sign = '-';
        }
    
        // 5    Remittance Detail Item Amount Paid             13      (45-57)
        sb.Append(sign + SKS_PP_StringFormats::strFill(12, num2str(this.getPositiveAmount(_invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur),0,2,1,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 6    Remittance Detail Item Original Amt            13      (58-70)
        sb.Append(sign + SKS_PP_StringFormats::strFill(12, num2str(this.getPositiveAmount(_invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur),0,2,1,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 7    FILLER                                         10      (71-80)
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_P80</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_P80
    /// </summary>
    /// <returns>true</returns>
    boolean rec_P80()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                       Size     Position
        // 1    Record Type                                      3      ( 1- 3)
        // 2    File Trailer Record Count                       15      ( 4-18)
        // 3    File Trailer Credit Transaction Count           15      (19-33)
        // 4    File Trailer Debit Transaction Count            15      (34-48)
        // 5    File Trailer Account Number Hash Total          10      (49-58)
        // 6    Payment Amount Control Total                    18      (59-74)
        // 7    FILLER                                           4      (75-80)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str hashTotal = int642str(mAccountHash);
        mRecordTotal++;
    
        // 1    Record Type                                      3      ( 1- 3)
        sb.Append('P80');
    
        // 2    File Trailer Record Count                       15      ( 4-18)
        sb.Append(SKS_PP_StringFormats::strFill(15, int2str(mRecordTotal), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 3    File Trailer Credit Transaction Count           15      (19-33)
        sb.Append(SKS_PP_StringFormats::strFill(15, int2str(mCreditCount), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 4    File Trailer Debit Transaction Count            15      (34-48)
        sb.Append(SKS_PP_StringFormats::strFill(15, int2str(mDebitCount), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 5    File Trailer Account Number Hash Total          10      (49-58)
        sb.Append(SKS_PP_StringFormats::strFill(10, subStr(hashTotal, strLen(hashTotal), -10), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 6    Payment Amount Control Total                    18      (59-74)
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(mControlTotal), 18));
    
        // 7    FILLER                                           4      (75-80)
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_PAR_ID</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_PAR_ID
    /// </summary>
    /// <returns>true</returns>
    boolean rec_PAR_ID()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                      Size      Position
        // 1    Tag Identification                              3      ( 1- 3)
        // 2    Set Identification                              6      ( 4- 9)
        // 3    Company ID                                     10      (10-19)
        // 4    Ordering Bank Branch ID and Account Number     35      (20-54)
        // 5    Payment Method Code                             3      (55-57)
        // 6    Payment Due Date                                8      (58-65)
        // 7    Currency                                        3      (66-68)
        // 8    Production/Test File Indicator                  2      (69-70)
        // 9    H                                               7      (71-77)
        //10    FILLER                                          3      (78-80)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        mRecordTotal++;
    
        // 1    Tag Identification                              3      ( 1- 3)
        sb.Append('CRF');
    
        // 2    Set Identification                              6      ( 4- 9)
        sb.Append('BAF820');
    
        // 3    Company ID                                     10      (10-19)
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PAYACH_MY)
        {
            sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_EFT_FileDetail.FileACHCompanyId, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_EFT_FileDetail_BankAccount.WOrdPartyId, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
    
        // 4    Ordering Bank Branch ID and Account Number     35      (20-54)
        sb.Append(SKS_PP_StringFormats::strFill(35,strRem(strRem(mSKS_EFT_FileDetail.BankBankAcct, '-'), ' '), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 5    Payment Method Code                             3      (55-57)
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PAYACH_MY)
        {
            sb.Append('ACH');
        }
        else
        {
            sb.Append(mSKS_EFT_FileFormatPaymSpec.TransactionCode);
        }
    
        // 6    Payment Due Date                                8      (58-65)
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate));
    
        // 7    Currency                                        3      (66-68)
        sb.Append(mSKS_EFT_FileDetail.PaymentCurrencyCode);
    
        // 8    Production/Test File Indicator                  2      (69-70)
        if(this.CharacterReplacement(strUpr(SKS_EFT_Format::getCodelookupvalue('TestFileIndicator', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank))) == 'Y')
        {
            sb.Append('T1');
        }
        else
        {
            sb.Append('P0');
        }
    
        // 9    H                                               7      (71-77)
        sb.Append('CRF02.1');
    
        //10    FILLER                                          3      (78-80)
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    protected void selectPaymentRecords()// [AP]
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
          order by mSKS_EFT_FileDetail.RecordSection,
                    mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
        join mSKS_EFT_FileDetail_VendAddress
        join mSKS_EFT_FileDetail_Intermediary
        join mSKS_EFT_FileDetail_BankAccount
        join mSKS_EFT_FileDetail_Instructions
        join mSKS_EFT_FileDetail_BenBank
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail_VendAddress.RefRecId == mSKS_EFT_FileDetail.RecId &&
                mSKS_EFT_FileDetail_Intermediary.RefRecId == mSKS_EFT_FileDetail.RecId &&
                mSKS_EFT_FileDetail_BankAccount.RefRecId == mSKS_EFT_FileDetail.RecId &&
                mSKS_EFT_FileDetail_Instructions.RefRecId == mSKS_EFT_FileDetail.RecId &&
                mSKS_EFT_FileDetail_BenBank.RefRecId == mSKS_EFT_FileDetail.RecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>