<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_REGIONS_I03_66</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_REGIONS_I03_66 Extends SKS_PP_Format_BankGroup
{
    // Regions Bank
        // Input 03 format
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    // Pos       Len     Description
        // 01-10     10      Serial number, RJZF
        // 11-16     6       Issue Date - (YYMMDD)
        // 17-26     10      Amount
        // 27-27     1       Filler
        // 28-28     1       Transaction Code - 1 (issue), 2 (void)
        // 29-43     15      Payee (Vendor name)
        // 44-53     10      Account
        // 54-66     13      Filler
    protected str txtDetail()
    {
        Str Amt;
        Str IssueType;
        Int Mult;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        // Convert negative void numbers to positives
        Mult = 1;
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            IssueType = '2'; // Voids use a 2
        }
        else
        {
            IssueType = '1'; // Non voids use any identifier except 2
        }
    
        Amt = SKS_PP_StringFormats::strMoney(mSKS_PP_FileDetail.ChkCuryAmt,10);
    
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(Amt);
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        sb.Append(IssueType);
        sb.Append(SKS_PP_StringFormats::strFill(15, mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(13, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>