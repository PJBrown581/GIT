<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_RF_Format_CD_SOFIBANQUE_MT101_ACK</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_RF_Format_CD_SOFIBANQUE_MT101_ACK for CD_SOFIBANQUE_MT101
/// </summary>
class SKS_EFT_RF_Format_CD_SOFIBANQUE_MT101_ACK extends SKS_EFT_RF_Format
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatId</Name>
				<Source><![CDATA[
    public str getFormatId(str _filename, boolean _serverPath, SKS_BF_BankIntType _SKS_BF_BankIntType = SKS_BF_BankIntType::FileHubLocal)
    {
        SKS_EB_FileHub locSKS_EB_FileHub = SKS_EB_FileHub::construct(_SKS_BF_BankIntType);
        str rtnval = '';
        int classId;
        //BEGIN VALIDATION VARIABLES
        //BEGIN QUALIFIERS
        boolean locBasicHeaderTagFound = false;
        boolean locTimeDateTagFound = false;
        boolean locAcceptRejectTagFound = false;
        boolean locTwentyTextFound = false;
    
        //BEGIN DISQUALIFIER VARIABLES
        //none
    
        //END VALIDATION VARIABLES
        System.String locString;
        locSKS_EB_FileHub.setFileName(_filename);
        locSKS_EB_FileHub.runFileInquire();
        if(!locSKS_EB_FileHub.attrFileExists())
        {
            // The file %1 does not exist.
            error(strfmt("@SYS62207", _filename));
            return null;
        }
        locSKS_EB_FileHub.runFileLoad(_filename);
        locSKS_EB_FileHub.StreamInit();
        System.IO.StreamReader locStreamReader = new System.IO.StreamReader(locSKS_EB_FileHub.streamGet());
    
        //priming read
        locString = locStreamReader.ReadLine();
    
        while(locString != null)
        {
            locString = locString.Trim();
            if(!System.String::IsNullOrWhiteSpace(locString))
            {
                if(locString.Contains('{1:F01'))
                {
                    locBasicHeaderTagFound = true;
                }
                if(locString.Contains('{4:')) // AX workaround
                {
                    locTimeDateTagFound = true;
                }
                if(locString.Contains(':79'))
                {
                    locAcceptRejectTagFound = true;
                }
                if(locString.Contains(':21:'))
                {
                    locTwentyTextFound = true;
                }
            }
            locString = locStreamReader.ReadLine();
        }
        if(locBasicHeaderTagFound
            && locTimeDateTagFound
            && locAcceptRejectTagFound
            && locTwentyTextFound)
        {
            classId = classIdGet(this);
            rtnval = classId2Name(ClassId);
        }
        locStreamReader.Close();
        locSKS_EB_FileHub.StreamClose();
        return rtnval;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFile</Name>
				<Source><![CDATA[
    public SKS_EFT_RF_File getFile(str _filename, boolean _serverPath, SKS_BF_BankIntType _SKS_BF_BankIntType = SKS_BF_BankIntType::FileHubLocal)
    {
        SKS_EB_FileHub locSKS_EB_FileHub = SKS_EB_FileHub::construct(_SKS_BF_BankIntType);
        System.String locString;
        System.IO.StreamReader locStreamReader;
    
        //Setup filestream
        locSKS_EB_FileHub.setFileName(_filename);
        locSKS_EB_FileHub.runFileInquire();
        if(!locSKS_EB_FileHub.attrFileExists())
        {
            // The file %1 does not exist.
            error(strfmt("@SYS62207", _filename));
            return null;
        }
        locSKS_EB_FileHub.runFileLoad(_filename);
        locSKS_EB_FileHub.StreamInit();
        locStreamReader = new System.IO.StreamReader(locSKS_EB_FileHub.streamGet());

        //priming read
        locString = locStreamReader.ReadLine();

        if(!mSKS_EFT_RF_File)
        {
            mSKS_EFT_RF_File = new SKS_EFT_RF_File();
        }

        mSKS_EFT_RF_SentFile = new SKS_EFT_RF_SentFile();

        while(locString != null)
        {
            if(!System.String::IsNullOrEmpty(locString))
            {
                this.processRecord(locString);
            }
            locString = locStreamReader.ReadLine();
        }

        //must use the getSKS_EFT_RF_File() method becuase, if any pending mSKS_EFT_RF_SentFile have yet to be pushed into the list, this will do it.
        locStreamReader.Close();

        return this.getSKS_EFT_RF_File();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processRecord</Name>
				<Source><![CDATA[
    public void processRecord(str _Tag)
    {
        if(SKS_PP_StringFormats::strSub(_Tag, 1, 4) == ':21:')
        {
            mSKS_EFT_RF_Transaction = new SKS_EFT_RF_Transaction();
            if(mSKS_EFT_RF_Transaction != null)
            {
                mSKS_EFT_RF_SentFile.addTransaction(mSKS_EFT_RF_Transaction);
            }
            mSKS_EFT_RF_Transaction.setID(strLRTrim(SKS_PP_StringFormats::strSub(_Tag,5,16)));
        }

        if(SKS_PP_StringFormats::strSub(_Tag, 1, 4) == ':79:')
        {
            mSKS_EFT_RF_Transaction.setStatus(SKS_PP_StringFormats::strSub(_Tag,6,4));

            if(SKS_PP_StringFormats::strSub(_Tag,11,4) != "")
            {
                mSKS_EFT_RF_Transaction.setStatusReason(SKS_PP_StringFormats::strSub(_Tag,11,4));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSKS_EFT_RF_File</Name>
				<Source><![CDATA[
    public SKS_EFT_RF_File getSKS_EFT_RF_File()
    {
    
        if(mSKS_EFT_RF_SentFile != null)
        {
            mSKS_EFT_RF_File.addSentFile(mSKS_EFT_RF_SentFile);
            mSKS_EFT_RF_SentFile = null;
        }
    
        return mSKS_EFT_RF_File;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>outboundFileKeyGen</Name>
				<Source><![CDATA[
    public static str outboundFileKeyGen(str _OutFilename, SKS_EFTAP_File locSKS_EFTAP_File = null)
    {
        ;
    
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>outboundTransKeyGen</Name>
				<Source><![CDATA[
    public static str outboundTransKeyGen(str _FileName = '', SKS_EFT_FileDetail _SKS_EFT_FileDetail = null, SKS_EFTAP_File _SKS_EFTAP_FILE = null)
    {
        str rtnval;
        ;
    
        rtnval = _SKS_EFT_FileDetail.PaymentReference;
        return rtnval;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>