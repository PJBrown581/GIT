<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_WELLSFARGO_160</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_WELLSFARGO_160 Extends SKS_PP_Format_BankGroup
{
    int mChkCount;
    real mChkSum;
	

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    // WELLS FARGO POSITIVE PAY FORMAT
    // Courtesy of: Ironware
    //
    // Pos 01-10    10       Check number - RJ-LZF
    // Pos 11-16    6        Issue date (mmddyy)
    // Pos 17-26    10       Account number - LJ-RBF
    // Pos 27-29    3        Trancode (320 = issued check, 370 = cancel old register - void)
    // Pos 30-39    10       Amount (zeroes for void)
    // Pos 40-159   120      Additional Data - Payee Information
    // Pos 160
    protected str txtDetail()
    {
        int Mult = 1;
        str ItemType;
        str Amt;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        Mult = 1;
        if (mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            if (mSKS_PP_FileDetail.ChkType == SKS_PP_ChequeType::CancelledCheque)
            {
                ItemType = '370';
            }
            else
            {
                ItemType = '430';
                Mult = 0;
            }
    
            if (mSKS_PP_FileDetail.ChkCuryAmt < 0)
            {
                Mult = -1;
            }
        }
        else
        {
            ItemType = '320';
        }
    
        Amt = SKS_PP_StringFormats::strMoney(Mult * mSKS_PP_FileDetail.chkcuryAmt,10);
    
        mChksum = mChksum + (Mult * mSKS_PP_FileDetail.ChkCuryAmt);
        mChkCount++;
    
        sb.Append(SKS_PP_StringFormats::strFill(10, strltrim(strrtrim(mSKS_PP_FileDetail.ChkRefNbr)), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(SKS_PP_StringFormats::strFill(10, strltrim(strrtrim(mSKS_PP_FileDetail.BnkBankAcct)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(ItemType);
        sb.Append(Amt);
        sb.Append(SKS_PP_StringFormats::strFill(121, strltrim(strrtrim(mSKS_PP_FileDetail.VendName)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    protected str txtGroupTrailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str Amt;
        ;
    
        Amt = SKS_PP_StringFormats::strMoney(mChksum, 10);
    
        sb.Append('&');
        sb.Append(SKS_PP_StringFormats::strFill(14, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(5, int2str(mChkcount), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(Amt);
        sb.Append(SKS_PP_StringFormats::strFill(47, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        mChkSum = 0;
        mChkCount = 0;
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtFormatHeader</Name>
				<Source><![CDATA[
    // Header record
    // Pos 01-03    3        Literal - *03
    // Pos 04-08    5        Bank ID (RJLZF) SKS_PP_Bank.PP01
    // Pos 09-23    15       Account number  SKS_PP_Bank.PP02
    // Pos 24-24    1        File Status - 0
    protected str txtFormatHeader()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        SKS_PP_Bank bSKS_PP_Bank;
        Container company;

        company = [mSKS_PP_FileDetail.ChkCpnyId];
        select firstonly crossCompany:company PP01, PP02 from bSKS_PP_Bank where bSKS_PP_Bank.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;

        sb.Append('*03');
        sb.Append(SKS_PP_StringFormats::strFill(5, strltrim(strrtrim(bSKS_PP_Bank.PP01)), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(15, strltrim(strrtrim(bSKS_PP_Bank.PP02)), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append('0');

        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>