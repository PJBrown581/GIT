<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_RF_FormatMetaData_US_CHASE_SUA_23_RES</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SKS_EFT_RF_FormatMetaData_US_CHASE_SUA_23_RES Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
        productVersion = '';
        formatGroupVersion = '20210512';
        conFormatID = ['US-CHASE-SUA-23-RES'];
        formatfiletype = 'EFTInbound';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundFormatMetaData</Name>
				<Source><![CDATA[
    protected container getInboundFormatMetaData()
    {
        container   inboundFormatList;

        //Metadata column names of data elements
        ////FormatId,Description,Selected,ProductVersion,FormatVersion

        inboundFormatList = ConIns(inboundFormatList,conLen(inboundFormatList)+1,[productVersion,formatGroupVersion,'US-CHASE-SUA-23-RES','US - J.P Morgan Chase - SUA v2.3 - Response',0]);

        return inboundFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundStatusMetaData</Name>
				<Source><![CDATA[
    protected container getInboundStatusMetaData(str _formatID)
    {
        container   inboundStatusList;

        //Metadata column names of data elements
        //FormatId,StatusType,StatusId,StatusIdDisplay,Origin

        switch (_formatID)
        {
            case ('US-CHASE-SUA-23-RES'):
                inboundStatusList = this.getInboundStatusMetaData_US_CHASE_SUA_23_RES();
                break;

        }

        return inboundStatusList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundStatusMetaData_US_CHASE_SUA_23_RES</Name>
				<Source><![CDATA[
    private container getInboundStatusMetaData_US_CHASE_SUA_23_RES()
    {
        container   inboundStatusList;

        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['US-CHASE-SUA-23-RES',0,'<Empty>','Empty status id',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['US-CHASE-SUA-23-RES',1,'<Empty>','Empty status id',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['US-CHASE-SUA-23-RES',1,'Success','Success',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['US-CHASE-SUA-23-RES',1,'Failure','Failure',1]);

        return inboundStatusList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundRCodeMetaData</Name>
				<Source><![CDATA[
    protected container getInboundRCodeMetaData(str _formatID)
    {
        container   reasonCodeList;

        //Metadata column names of data elements
        //FormatId,ReasonCode,ReasonDesc,Origin

        switch (_formatID)
        {
            case ('US-CHASE-SUA-23-RES'):
                reasonCodeList = this.getInboundRCodeMetaData_US_CHASE_SUA_23_RES();
                break;

        }

        return reasonCodeList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundRCodeMetaData_US_CHASE_SUA_23_RES</Name>
				<Source><![CDATA[
    private container getInboundRCodeMetaData_US_CHASE_SUA_23_RES()
    {
        container   reasonCodeList;

        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','<Empty>','Empty reason code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','001','Only ASCII printable characters are supported.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','002','Duplicate File.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','003','The Input file should be a CSV file.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','004','Input file is blank.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','005','Header: First record does not start with 1000.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','006','Footer: Footer record must be the last record.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','007','Exactly one Footer record permitted per file.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','008','Number of Payment Instructions mismatched.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','010','Input file naming convention is not valid.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','011','Header: Invalid number of fields in the header.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','012','Footer: Invalid number of fields in the footer.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','013','Remittance: Remittance Record found after Header without Payment Instruction.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','014','Payment instructions more than max allowed count.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','031','Payment: An active PAN with CA capacity could not be identified for Account Pool <Account Pool Name>.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','100','Unable to process file.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','101','<Record>: <Field Name> field is required.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','102','<Record>: <Field Name> length must be less than or equal to <max>.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','103','<Field Name> is not a valid <Type> Custom Field.Note: Types of Custom Field are - Transaction Default and Payable.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','104','<Record>: <Field Name> field must be a valid date <Date Format>.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','105','<Record>: <Field Name> is in invalid format: Correct format <Format>.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','106','<Record>: <Field Name> Must be a positive integer.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','107','<Record>: <Field Name> must be less than or equal to <value>.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','109','<Record>: <Field Name> (value) must be less than or equal to 9999999.00 after half-even rounding.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','112','Payable: The Payment Group ‘<Payment Group>’ is invalid or inaccessible to this user.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','113','Payable: Exceeded maximum limit of 5000 remittance records.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','114','<Record>: <Field Name> must be a valid amount.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','115','Payable: Vendor is not active.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','117','<Record>: <Field Name> must be 1.0.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','122','<Record>: <Remittance Line Number> Unique Payment ID of Remittance and Payment records do not match.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','123','<Record>:<Field Name> is in invalid format: Correct format <Format>',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','124','Remittance: Line Number <Remittance Line Number> is incorrect remittance line.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','125','<Record>: <Field Name> Invalid Format.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','126','<Record>:<Field Name> must be in ascending order and start from 1',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','128','<Record>: <Field Name> must be greater than <value>.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','129','<Record>: Record can have maximum of <MaxFields> fields',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','131','Payable: Payable End date cannot be before current date.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','132','Payable: Begin Date cannot be in the future when Settlement Process is Automated.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','133','Payable: A unique vendor could not be identified using the Supplier IDs provided.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','135','Payment Single Transaction Indicator should be Yes or No.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','136','Payable: Vendor Email Address <Vendor Email Address> is in invalid format.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','137','Payable: Currency not supported.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','138','Payable: Begin Date cannot be after Payable End Date.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','139','Payable: Total Payable Amount must be greater than 0.00.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','141','Payable: The specified Daily Transaction Limit Amount must be greater than or equal to the specified single transaction limit amount.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','142','Payable: Daily Transaction Limit Number must be less than or equal to Monthly Transaction Limit Number.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','144','Payable: Count of <type> custom field names and values do not match.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','146','<Record>: <Field name> (Value) must be less than or equal to 9999999.00 after half-even rounding.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','147','Payable: <MCCG> is not a valid Merchant Category Code Group.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','148','Payable: A Payable with that Order System ID already Exists.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','149','Payable: An account cannot be obtained for a new order from the Payment Group given.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','150','Payable: <Custom Field Name> is not a valid Payable Custom Field.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','151','Payable: <Custom Field Name> is not a valid Transaction Default Custom Field.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','154','Payable: Settlement authorization request was unsuccessful. There has been a system issue. Please contact the J.P. Morgan Product Support team for help resolving this issue.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','155','Payable: Settlement authorization request timed out. Payment has been created but authorization status is unknown. Please contact J.P. Morgan for assistance.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','156','Virtual card provider down.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','159','Payable: Invalid number of fields in Payment Instruction.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','160','Payable: Invalid number of Fields in Remittance Record.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','161','<Record>:<Field Name> is in an invalid format: Correct format Decimal.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','162','<Record>: <Field Name> must be between 0.00 and 100.00.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','163','Payable: An active TCP PAN with CA capacity could not be identified for Account Pool <Account Pool Name>.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','164','Payable: The Corporate Account does not have capacity for the requested VAN credit limit increase.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','165','Payable: An active PAN with CA capacity could not be identified for Account Pool <Account Pool Name>.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','301','An account could not be obtained or updated for the given account pool.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','1000','Maximum number of {0} attempts has been exceeded.',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['US-CHASE-SUA-23-RES','1105','Payable End Date may not be greater than Account Expiration Date.',1]);

        return reasonCodeList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   conDelete;
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>