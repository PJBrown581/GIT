<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_BOA_EFDBP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_BOA_EFDBP Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_BOA_EFDBP Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220616';
        dataContractVersion = '1.0';
        conFormatID = ['US-BOA-EFDBP'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'XXXXXXXXXX','Company Id','Company name','UUUUUUUUUUUUUUUU',1,'US - Bank Of America - EFDBP',0,'','','US-BOA-EFDBP',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-BOA-EFDBP',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-BOA-EFDBP'):
                paymSpecList = this.getPaymSpecsMetaData_US_BOA_EFDBP();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_BOA_EFDBP</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_BOA_EFDBP()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH-CCP Payment',1,'ACH','','ACH','TRADE PAY',0,'US-BOA-EFDBP',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check Payment',1,'CHK','','CHK','TRADE PAY',0,'US-BOA-EFDBP',0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,2,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Electronic Fund Transfer',1,'EFT','','EFT','TRADE PAY',0,'US-BOA-EFDBP',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-BOA-EFDBP'):
                notesList = this.getNotesMetaData_US_BOA_EFDBP();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_BOA_EFDBP</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_BOA_EFDBP()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EFDBP','ACH','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EFDBP','CHK','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EFDBP','EFT','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-BOA-EFDBP'):
                validationsList = this.getValidationsMetaData_US_BOA_EFDBP();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_BOA_EFDBP</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_BOA_EFDBP()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','Ordering Party Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Transaction record > Ordering Party Name','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','Ordering Party ID','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ID','Transaction record > Ordering Party ID','ID related to bank','15','WOrdPartyId','','',1,0,1,'15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','Ordering Party Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Transaction record > Ordering Party Country code','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','Ordering Party Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Transaction record > Ordering Party Address 1','Address related to bank','15','WOrdPartyAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','Ordering Party Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','Transaction record > Ordering Party Address 2','Address related to bank','15','WOrdPartyAddr2','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','Ordering Party City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Transaction record > Ordering Party City','City related to bank','15','WOrdPartyCity','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','Ordering Party State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','Transaction record > Ordering Party State/province','Bank Country Sub Division','15','WOrdPartyState','','',1,'2',1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','Ordering Party Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Transaction record > Ordering Party Zip/postal code','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Transaction record > Originator Account','Bank account number',0,'AccountNum','','',0,0,1,'31',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Transaction record > ABA Routing Number for U.S','Bank Routing Number',0,'RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Transaction record > Receiving Party Name','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Transaction record > Receiving Party Address 1','Address related to vendor','16','WBeneAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Transaction record > Receiving Party Address 2','Address related to vendor','16','WBeneAddr2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Transaction record > Receiving Party City Name','Vendor city','16','WBeneCity','','',1,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','State ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/Province','Transaction record > Receiving Party State Code','Vendor State','16','WBeneState','','',1,1,'2','2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Transaction record > Receiving Party Zip / Postal Code','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Transaction record > Receiving Party ISO Country Code','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','Vendor Bank name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','Transaction record > Receiving Bank Name','Beneficiary Bank Name','16','WBenBankName','','',0,0,1,'33',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Transaction record > Receiving Bank ID/Sort Code','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','Bank Account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','Transaction record > Receiving Bank Account Number','Bank Account number related to vendor','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','ACH','','Receiving Bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','Transaction record > Receiving Bank City','Beneficiary bank City','16','WBenBankCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','Ordering Party Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Transaction record > Ordering Party Name','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','Ordering Party ID','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ID','Transaction record > Ordering Party ID','ID related to bank','15','WOrdPartyId','','',1,0,1,'15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','Ordering Party Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Transaction record > Ordering Party Country code','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','Ordering Party Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Transaction record > Ordering Party Address 1','Address related to bank','15','WOrdPartyAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','Ordering Party Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','Transaction record > Ordering Party Address 2','Address related to bank','15','WOrdPartyAddr2','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','Ordering Party City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Transaction record > Ordering Party City','City related to bank','15','WOrdPartyCity','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','Ordering Party State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','Transaction record > Ordering Party State/province','Bank Country Sub Division','15','WOrdPartyState','','',1,'2',1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','Ordering Party Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Transaction record > Ordering Party Zip/postal code','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Transaction record > Originator Account','Bank account number',0,'AccountNum','','',0,0,1,'31',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Transaction record > ABA Routing Number for U.S','Bank Routing Number',0,'RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Transaction record > Receiving Party Name','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Transaction record > Receiving Party Address 1','Address related to vendor','16','WBeneAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Transaction record > Receiving Party Address 2','Address related to vendor','16','WBeneAddr2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Transaction record > Receiving Party City Name','Vendor city','16','WBeneCity','','',1,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','State ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/Province','Transaction record > Receiving Party State Code','Vendor State','16','WBeneState','','',1,1,'2','2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Transaction record > Receiving Party Zip / Postal Code','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Transaction record > Receiving Party ISO Country Code','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','Vendor Bank name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','Transaction record > Receiving Bank Name','Beneficiary Bank Name','16','WBenBankName','','',0,0,1,'33',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Transaction record > Receiving Bank ID/Sort Code','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','Bank Account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','Transaction record > Receiving Bank Account Number','Bank Account number related to vendor','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','EFT','','Receiving Bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','Transaction record > Receiving Bank City','Beneficiary bank City','16','WBenBankCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','CHK','','Ordering Party Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Transaction record > Ordering Party Name','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','CHK','','Ordering Party ID','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ID','Transaction record > Ordering Party ID','ID related to bank','15','WOrdPartyId','','',1,0,1,'15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','CHK','','Ordering Party Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Transaction record > Ordering Party Country code','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','CHK','','Ordering Party Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Transaction record > Ordering Party Address 1','Address related to bank','15','WOrdPartyAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','CHK','','Ordering Party Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','Transaction record > Ordering Party Address 2','Address related to bank','15','WOrdPartyAddr2','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','CHK','','Ordering Party City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Transaction record > Ordering Party City','City related to bank','15','WOrdPartyCity','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','CHK','','Ordering Party State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','Transaction record > Ordering Party State/province','Bank Country Sub Division','15','WOrdPartyState','','',1,'2',1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','CHK','','Ordering Party Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Transaction record > Ordering Party Zip/postal code','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','CHK','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Transaction record > Originator Account','Bank account number',0,'AccountNum','','',0,0,1,'31',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','CHK','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Transaction record > ABA Routing Number for U.S','Bank Routing Number',0,'RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','CHK','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Transaction record > Receiving Party Name','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','CHK','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Transaction record > Receiving Party Address 1','Address related to vendor','16','WBeneAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','CHK','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Transaction record > Receiving Party Address 2','Address related to vendor','16','WBeneAddr2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','CHK','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Transaction record > Receiving Party City Name','Vendor city','16','WBeneCity','','',1,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','CHK','','State ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/Province','Transaction record > Receiving Party State Code','Vendor State','16','WBeneState','','',1,1,'2','2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','CHK','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Transaction record > Receiving Party Zip / Postal Code','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','CHK','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Transaction record > Receiving Party ISO Country Code','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','CHK','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EFDBP','CHK','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Transaction record > Receiving Bank ID/Sort Code','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'12',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-BOA-EFDBP','MailHandleCode','Receiving Party Mail Handling Code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-BOA-EFDBP','TransHandling','Transaction Handling Code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-BOA-EFDBP','Charges','Charges Indicator']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EFDBP','MailHandleCode','Return to Remitter','RM']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EFDBP','MailHandleCode','Foreign Mail','FM']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EFDBP','MailHandleCode','US Mail','US']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EFDBP','MailHandleCode','Hold at Branch (Asia Only)','HD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EFDBP','MailHandleCode','Overnight back to remitter (US Checks)','OD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EFDBP','MailHandleCode','Overnight to vendor (US checks)','RD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EFDBP','TransHandling','Payment and Remittance Combined','C']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EFDBP','TransHandling','Payment Only','D']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EFDBP','TransHandling','Check Issues File Only (US and Canada only)','N']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EFDBP','TransHandling','ACH Prenote Only (US)','P']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EFDBP','TransHandling','Split Remittance','U']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EFDBP','Charges','Borne by beneficiary','BEN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EFDBP','Charges','Borne by originator','OUR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EFDBP','Charges','Shared by both','SHARE']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('US-BOA-EFDBP'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_BOA_EFDBP();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_BOA_EFDBP</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_BOA_EFDBP()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EFDBP','US-BOA-EFDBP','CHK','MailHandleCode','Receiving Party Mail Handling Code',0,'MailHandleCode','US Mail',0,'','','Transaction record > Receiving Party Mail Handling Code']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EFDBP','US-BOA-EFDBP','CHK','TransHandling','Transaction Handling Code',0,'TransHandling','',1,'','','Transaction record > Transaction Handling Code']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EFDBP','US-BOA-EFDBP','ACH','TransHandling','Transaction Handling Code',0,'TransHandling','',1,'','','Transaction record > Transaction Handling Code']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EFDBP','US-BOA-EFDBP','EFT','TransHandling','Transaction Handling Code',0,'TransHandling','',1,'','','Transaction record > Transaction Handling Code']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EFDBP','US-BOA-EFDBP','ACH','Charges','Charges Indicator',0,'Charges','',1,'','','Transaction record > Charges Indicator']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EFDBP','US-BOA-EFDBP','EFT','Charges','Charges Indicator',0,'Charges','',1,'','','Transaction record > Charges Indicator']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EFDBP','US-BOA-EFDBP','CHK','Charges','Charges Indicator',0,'Charges','',1,'','','Transaction record > Charges Indicator']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EFDBP','US-BOA-EFDBP','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EFDBP','US-BOA-EFDBP','FormatValidations','*','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EFDBP','US-BOA-EFDBP','FormatValidations','*','15','W02']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-BOA-EFDBP','TEST_PROD_Indicator','TEST/PROD indicator']);

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EFDBP','TEST_PROD_Indicator','TEST','TEST']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EFDBP','TEST_PROD_Indicator','PROD','PROD']);

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch(_formatID)
        {
            case ('US-BOA-EFDBP'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_BOA_EFDBP();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_BOA_EFDBP</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_BOA_EFDBP()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EFDBP','US-BOA-EFDBP','CompanyEFTKey','Company EFT Key',1,'CompanyEFTKey','',1,'','XXXX','Company eft key']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EFDBP','US-BOA-EFDBP','TEST_PROD_Indicator','TEST/PROD indicator',0,'TEST_PROD_Indicator','',1,'','','TEST/PROD indicator']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        if(gSKS_EFT_Bank.W01)
        {
            this.updateBankFields('CompanyEFTKey', gSKS_EFT_Bank.W01);
        }

        if(gSKS_EFT_Bank.W02)
        {
            this.updateBankFields('TEST_PROD_Indicator', gSKS_EFT_Bank.W02, true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vednor code lookpus from BE0X and Legacu code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        if(gSKS_EFT_VendorPaym.WChargesIndic)
        {
            this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>