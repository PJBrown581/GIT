<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_WELLSFARGO_ARP</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_WELLSFARGO_ARP Extends SKS_PP_Format_BankGroup
{
    ///Wells Fargo Customer Refunds - Detail

    // 01-13 Account Number
    // 14-23 Check Serial Number
    // 24-33 Check Amount
    // 34-41 Issue Date (YYYYMMDD)
    // 42    Void Indicator
    // 43-72 Additional Data Payee Name
    // 73-80 Filler (Spaces)
    // 81-130 Payee Name

    

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        int Mult = 1;
        str ItemType;
        str Amt;
        ;

        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
        }
        else
        {
            ItemType = ' ';
        }


        Amt =  SKS_PP_StringFormats::strMoney(Mult * mSKS_PP_FileDetail.ChkCuryAmt, 10);

        sb.Append(SKS_PP_StringFormats::strFill(13, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(Amt);
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(ItemType);
        sb.Append(SKS_PP_StringFormats::strFill(30,strUpr(mSKS_PP_FileDetail.VendName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(8,'', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(50,strUpr(mSKS_PP_FileDetail.VendName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupHeader</Name>
				<Source><![CDATA[
    //Wells Fargo Customer Refunds - Header

    // 01-20 RECONCILIATIONHEADER
    // 21-24 Bank Id
    // 25-37 Account Number
    // 38-49 Total Dollar Amount of File
    // 50-54 Total Item Count of File
    protected str txtGroupHeader()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        SKS_PP_Bank SKS_PP_Bank_1;
        SKS_PP_FileDetail SKS_PP_FileDetail_2;
        Container company;
        real Chksum = 0.00;
        Int64  Chkcount = 0;
        str Amt;
        ;

        //get sum of check amounts
        select sum(ChkCuryAmt) from SKS_PP_FileDetail_2 where SKS_PP_FileDetail_2.FileNbr == mSKS_PP_FileDetail.FileNbr && SKS_PP_FileDetail_2.BnkBankAcct == mSKS_PP_FileDetail.BnkBankAcct;//get the sum of the check amounts and check count
        Chksum = SKS_PP_FileDetail_2.ChkCuryAmt;
        Amt =  SKS_PP_StringFormats::strMoney(Chksum, 12);
        //get count of check records
        select count(RecID) from SKS_PP_FileDetail_2 where SKS_PP_FileDetail_2.FileNbr == mSKS_PP_FileDetail.FileNbr && SKS_PP_FileDetail_2.BnkBankAcct == mSKS_PP_FileDetail.BnkBankAcct;//get the sum of the check amounts and check count
        Chkcount = SKS_PP_FileDetail_2.RecId;
        //read bank record for pp01
        company = [mSKS_PP_FileDetail.ChkCpnyId];
        select crossCompany:company PP01 from SKS_PP_Bank_1 where SKS_PP_Bank_1.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;

        sb.Append('RECONCILIATIONHEADER');
        sb.Append(SKS_PP_StringFormats::strFill(4, SKS_PP_Bank_1.PP01, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(13,  mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(Amt);
        sb.Append(SKS_PP_StringFormats::strFill(5,  int642str(Chkcount), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>