<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_PINNACLEBNK_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_PINNACLEBNK_CSV extends SKS_PP_Format
{
    #define.DoubleQuote('"')
    #define.Separator(',')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        //  Field number        Field MAX Length    Field Desc
        //      1                      16           Pinnacle Account Number
        //      2                      30           Payee
        //      3                      8            Issue Date#
        //      4                      9            Amount
        //      5                      10           Serial Number
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str amount;
        int locMult = 1;
    
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            locMult = -1;
        }

        //      Pinnacle Account Number
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(16, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));
        
        //      Payee
        sb.Append(this.wrapField(SKS_PP_StringFormats::strSub(mSKS_PP_FileDetail.VendName, 1, 30)));

        //      Issue Date#
        sb.Append(this.wrapField(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_PP_FileDetail.ChkDocDate, DateSeparator::None)));

        //      Amount
        amount = strRem(num2Str(mSKS_PP_FileDetail.ChkCuryAmt * locMult, 1, 2, 1, 0), '.');
        sb.Append(this.wrapField(amount));

        //      Check #
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left), false));
        
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '',  boolean _addSeparator = true, boolean _Quote = true)
    {
        if(_addSeparator)
        {
            if(_Quote && _field != '')
            {
                return #DoubleQuote + _field + #DoubleQuote + #Separator;
            }
            else
            {
                return _field + #Separator;
            }
        }
        else
        {
            if(_Quote && _field != '')
            {
                return #DoubleQuote + _field + #DoubleQuote;
            }
            else
            {
                return _field;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>