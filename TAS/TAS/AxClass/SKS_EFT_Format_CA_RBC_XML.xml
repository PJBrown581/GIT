<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_CA_RBC_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_CA_RBC_XML extends SKS_EFT_Format_ISO_20022_001001003
/// </summary>
class SKS_EFT_Format_CA_RBC_XML extends SKS_EFT_Format_ISO_20022_001001003
{
    #define.FormatVersion('20220919')
    #define.NON_SWIFT('NON-SWIFT')
    #define.SWIFT('SWIFT')
    #define.CA_ACH('CA-ACH')
    #define.CHK_PM('CHK-PM')
    #define.EDI('EDI')
    
    str custSpecId, testId, header;
    VendBankAccount mVendBankAccount;
    boolean Swift;


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        CompanyBankAccountId    prevBankAccountId;
        PaymMode                prevPaymMode;
        PaymSpec                prevPaymSpec;
        CurrencyCode            prevCurrency;
        SKS_EB_Date             prevEffectiveDate;
        
        xmlDoc = XmlDocument::newBlank(this.getEncoding());
    
        this.node_MessageRoot();
    
        this.node_GrpHdr();
    
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();
    
            if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AR)
            {
                // get SKS_EFT_CustomerPaym
                this.getSKS_EFT_CustomerPaym();
            }
            else
            {
                // Get SKS_EFT_VendorPaym
                this.getSKS_EFT_VendorPaym();
            }
    
            if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AR)
            {
                // get SKS_EFTAR_Bank
                this.getSKS_EFTAR_Bank();
            }
            else
            {
                // Get SKS_EFT_Bank
                this.getSKS_EFT_Bank();

                if(custSpecId == '')
                {
                    custSpecId = this.CharacterReplacement(mSKS_EFT_Bank.WOrdPartyId);
                }
                if(testId == '')
                {
                    testId = this.CharacterReplacement(mSKS_EFT_Bank.WOrdPartyCountryName);
                }
            }
    
            // Get Bank account
            mBankAccountTable = BankAccountTable::find(mSKS_EFT_FileDetail.BankAccountId);
    
            if(prevBankAccountId != mSKS_EFT_FileDetail.BankAccountId ||
               prevPaymMode != mSKS_EFT_FileDetail.PaymMode ||
               prevPaymSpec != mSKS_EFT_FileDetail.PaymSpec ||
               prevCurrency != mSKS_EFT_FileDetail.PaymentCurrencyCode ||
               prevEffectiveDate != mSKS_EFT_FileDetail.EffectiveDate
               )
            {
                this.node_PmtInf();
    
                prevBankAccountId = mSKS_EFT_FileDetail.BankAccountId;
                prevPaymMode = mSKS_EFT_FileDetail.PaymMode;
                prevPaymSpec = mSKS_EFT_FileDetail.PaymSpec;
                prevCurrency = mSKS_EFT_FileDetail.PaymentCurrencyCode;
                prevEffectiveDate = mSKS_EFT_FileDetail.EffectiveDate;
            }
    
            if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AR)
            {
                //For AR
                this.node_DrctDbtTxInf();
            }
            else
            {
                // Get RemittanceAddress
                this.getRemittanceAddress((mSKS_EFT_FileFormatPaymSpec.UseCheckNumber || subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) == 'CHK'));
    
                //Get Addenda information
                this.setAddenda();
    
                //For AP
                this.node_CdtTrfTxInf();
            }
            if(mSKS_EFT_FileDetail.PaymSpec =='SWIFT')
            {
                Swift =true;
            }
            next mSKS_EFT_FileDetail;
        }
        if(custSpecId)
        {
            if(testId == 'TEST')
            {
                testId = 'CTST';
            }
            else
            {
                testId = 'PROD';
            }
            if(Swift)
            {
                header = strFmt('$$XGZ0ISO20022[ISO[SAG[%1$$<Ng:NGRequest>\n<Ng:NetworkGatewayClientID>%2</Ng:NetworkGatewayClientID></Ng:NGRequest>\n', testId, custSpecId);
            }
            else
            {
                header = strFmt('$$XGZ0ISO20022[ISO[NG[%1$$<Ng:NGRequest>\n<Ng:NetworkGatewayClientID>%2</Ng:NetworkGatewayClientID></Ng:NGRequest>\n', testId, custSpecId);
            }
        }
        this.fileWrite(header + xmlDoc.toString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodePage</Name>
				<Source><![CDATA[
    protected int getCodePage()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVendBankAccount</Name>
				<Source><![CDATA[
    void getVendBankAccount()
    {
        if(mVendBankAccount.AccountID != mSKS_EFT_FileDetail.DepBankAccountId || mVendBankAccount.VendAccount != mSKS_EFT_FileDetail.AccountNum)
        {
            mVendBankAccount = VendBankAccount::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum, mSKS_EFT_FileDetail.DepBankAccountId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr_Nm</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Cdtr_Nm(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.79: Cdtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #EDI)
        {
            //              Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', this.CharacterReplacement(mRemittanceName), 60);
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CA_ACH  ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SWIFT   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NON_SWIFT)
        {
            //              Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', this.CharacterReplacement(mRemittanceName), 35);
        }
        else
        {
            super(_nodeCdtr);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  IBAN
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
        XmlElement nodeAcct;
        XmlElement nodeCdtrAcctTp;
        int length;
        str value;
    
        if((mSKS_EFT_FileDetail.DepBankIBAN || mSKS_EFT_FileDetail.DepBankAcct) &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CHK_PM)
        {
            //          2.80: CdtrAcct
            nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
            //              Id
            nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
            if((mSKS_EFT_FileDetail.DepBankIBAN &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #EDI &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CA_ACH ))
            {
                value = mSKS_EFT_FileDetail.DepBankIBAN;

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', value);
            }
            else
            {
                //                  Othr
                nodeAcct = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));

                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #EDI)
                {
                    length = 12;
                }
                else
                {
                    length = 17;
                }    
                //                  Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAcct, 'Id', mSKS_EFT_FileDetail.DepBankAcct, length);
            }
    
            //                      Tp
            if(this.getLogisticsAddressCountryISO(mSKS_EFT_VendorPaym.WBeneCountryRegionId) == 'US' &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CA_ACH                               &&
               mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::SavingsAccount)
            {
                nodeCdtrAcctTp = nodeCdtrAcct.appendChild(xmlDoc.createElement('Tp'));
    
                //                          Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctTp, 'Cd', 'SVGS');
            }    
            //              Ccy
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcct, 'Ccy', mSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
        XmlElement nodeClrSysId;
        str        value;
        LogisticsPostalAddress lLogisticsPostalAddress;    //SKS_VSTS_14611
        LogisticsLocation logisticsLocation;
      
        this.getVendBankAccount();

        if((mSKS_EFT_FileDetail.DepSwiftNo || mSKS_EFT_FileDetail.DepBankTransit)   &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CHK_PM)
        {
            //          2.77: CdtrAgt
            nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));
    
            //              FinInstnId
            nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(mSKS_EFT_FileDetail.DepSwiftNo && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SWIFT)
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 11, false);
            }
            else if(mSKS_EFT_FileDetail.DepBankTransit)
            {
                //          ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

               
               
                if(mSKS_EFT_VendorPaym.WBenBankCountryRegionId == 'USA' || mVendBankAccount.countryRegionId() == 'USA')
                {
                    value =  'USABA';
                }
                else if((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CA_ACH ||
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NON_SWIFT)&&
                       (mVendBankAccount.countryRegionId() == 'CAN' || 
                        mVendBankAccount.countryRegionId() == ''    ||
                        mSKS_EFT_VendorPaym.WBenBankCountryRegionId == 'CAN'))
                {
                    value = 'CACPA';
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CA_ACH && 
                        (mVendBankAccount.countryRegionId() == 'CAN' ||
                         mSKS_EFT_VendorPaym.WBenBankCountryRegionId == 'CAN'))
                {
                    value = 'CACPA';
                }

                if(value)
                {
                    //              ClrSysId
                    nodeClrSysId = nodeClrSysMmbId.appendChild(xmlDoc.createElement('ClrSysId'));
    
                    //                  Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', value);
                }
    
                //          MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 9);
            }
    
            //                  Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_VendorPaym.WBenBankName), 35, false);
            
            //SKS_VSTS_14600 --> //SKS#DevOps:15918
            
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SWIFT ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NON_SWIFT)       //SKS#DevOps:15845
            {
                select firstonly lLogisticsPostalAddress where lLogisticsPostalAddress.Location == mVendBankAccount.Location;
                
                if((lLogisticsPostalAddress.CountryRegionId || lLogisticsPostalAddress.Street ||
                   lLogisticsPostalAddress.ZipCode || lLogisticsPostalAddress.City           ||
                   lLogisticsPostalAddress.State) && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #NON_SWIFT) //DevOps19314
                {
                    this.node_PstlAdr(nodeFinInstnId, lLogisticsPostalAddress.CountryRegionId, lLogisticsPostalAddress.Street, lLogisticsPostalAddress.ZipCode, lLogisticsPostalAddress.City, 0, '', lLogisticsPostalAddress.State, true);
                }
                else if(mSKS_EFT_VendorPaym.WBenBankCountryRegionId || mSKS_EFT_VendorPaym.WBenBankAddr || mSKS_EFT_VendorPaym.WBenBankCity)
                {
                    logisticsLocation = LogisticsLocation::find(mvendBankAccount.Location);//DevOps 20189
                    lLogisticsPostalAddress = LogisticsLocationEntity::location2PostalAddress(logisticsLocation.RecId, DateTimeUtil::getSystemDateTime(), true);

                       
                    this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_VendorPaym.WBenBankCountryRegionId, mSKS_EFT_VendorPaym.WBenBankAddr, lLogisticsPostalAddress.zipCode, mSKS_EFT_VendorPaym.WBenBankCity, 0, '', '', true);
                }
            }
            //SKS_VSTS_14600 <-- //SKS#DevOps:15918
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt1</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_IntrmyAgt1(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.71: IntrmyAgt1
        //              FinInstnId
        //                   CmbndId
        //                       ClrSysMmbId
        //                             MmbId
        //                  Nm
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeIntrmyAgt1;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
        XmlElement nodeClrSysId;
    
        if((mSKS_EFT_VendorPaym.WIntBankSwift || mSKS_EFT_VendorPaym.WIntBankId) && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #EDI)
        {
            //          2.71: IntrmyAgt1
            nodeIntrmyAgt1 = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt1'));
    
            //                FinInstnId
            nodeFinInstnId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(mSKS_EFT_VendorPaym.WIntBankId && (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NON_SWIFT ||
                                                  mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CA_ACH))
            {
                //                  ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
                //              ClrSysId
                nodeClrSysId = nodeClrSysMmbId.appendChild(xmlDoc.createElement('ClrSysId'));
    
                //                  Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', 'CACPA');
    
                //                  MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_VendorPaym.WIntBankId, 14, false);
    
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CA_ACH)
                {
                    //                  Nm
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_VendorPaym.WIntBankName), 35, false);
                }
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SWIFT && mSKS_EFT_VendorPaym.WIntBankSwift)
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_VendorPaym.WIntBankSwift, 0, false);
            }
    
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NON_SWIFT || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SWIFT)
            {
                //                  Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_VendorPaym.WIntBankName), 35, false);
                //                  PstlAdr
                this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_VendorPaym.WIntBankCountryRegionId, mSKS_EFT_VendorPaym.WIntBankAddr,'',mSKS_EFT_VendorPaym.WIntBankCity,140, mSKS_EFT_VendorPaym.WIntBankAddr2, '',true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RltdRmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RltdRmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.91: RltdRmtInf
        //              2.93: RmtLctnMtd
        //              2.94: RmtLctnElctrncAdr
        //------------------------------------------------------------------------------------------------------
        XmlElement              nodeRltdRmtInf;
        XmlElement              nodeRmtLctnPstlAdr;
        XmlElement              nodeAdr;
        VendTable               vendorTable;
        DirPartyContactInfoview DirPartyContactInfoview;
        str value, address;

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #EDI    ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CA_ACH ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NON_SWIFT)
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RmtLctnMtd', mSKS_EFT_FileDetail.RecId));
            
            vendorTable = VendTable::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum);
            
            if(value == 'FAXI')
            {
                select firstonly DirPartyContactInfoview where DirPartyContactInfoview.Party == vendorTable.Party && DirPartyContactInfoview.IsPrimary == true
                    &&  DirPartyContactInfoview.Type == LogisticsElectronicAddressMethodType::Fax;                
            }
            else if(value == 'EMAL')
            {
                select firstonly DirPartyContactInfoview where DirPartyContactInfoview.Party == vendorTable.Party && DirPartyContactInfoview.IsPrimary == true
                    &&  DirPartyContactInfoview.Type == LogisticsElectronicAddressMethodType::Email;                
            }

            if(DirPartyContactInfoView.Locator)
            {
                address = value == 'FAXI' ? strKeep(DirPartyContactInfoView.Locator, '0123456789') : DirPartyContactInfoView.Locator;
            }
            
            if(address != '' || value != '')            
            {
                //          2.91: RltdRmtInf
                nodeRltdRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RltdRmtInf'));
                
                //              2.93: RmtLctnMtd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRltdRmtInf, 'RmtLctnMtd', value, 4, false);
                
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CA_ACH ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NON_SWIFT)
                {
                    //              2.94: RmtLctnElctrncAdr
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRltdRmtInf, 'RmtLctnElctrncAdr', address, 80, false);
                }
                else
                {
                    //              2.94: RmtLctnElctrncAdr
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRltdRmtInf, 'RmtLctnElctrncAdr', address, 23, false);
                }
                
                //              2.95: RmtLctnPstlAdr
                nodeRmtLctnPstlAdr = nodeRltdRmtInf.appendChild(xmlDoc.createElement('RmtLctnPstlAdr'));
                
                //                      Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtLctnPstlAdr, 'Nm', this.CharacterReplacement(mRemittanceName), 35);
                
                //                      Adr
                nodeAdr = nodeRmtLctnPstlAdr.appendChild(xmlDoc.createElement('Adr'));
                
                //                          Ctry
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'Ctry', mRemittanceCountryRegionId);                
            }            
        }        
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              Strd
        //------------------------------------------------------------------------------------------------------
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        XmlElement nodeRmtInf;
        XmlElement nodeStrd;
        XmlElement nodeRfrdDocInf;
        XmlElement nodeRfrdDocAmt;
        XmlElement nodeCdOrPrtry;
        XmlElement nodeTp;
        XmlElement nodeCdtrRefInf;
        VendTrans  lVendTrans;
        str value;
        Boolean firstRec = true;
        boolean firstUstrd = true;
    
    
        while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
        {
            if(invSKS_EFT_FileDetail.InvoiceNumber != '')
            {
                if(firstRec)
                {
                    //          2.98: RmtInf
                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                    firstRec = false;
                }

                if(firstUstrd && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK_PM)
                {
                    //              2.99: Ustrd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(mSKS_EFT_VendorPaym.WPmtInstText1), 35, false);

                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(mSKS_EFT_VendorPaym.WPmtInstText2), 35, false);

                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(mSKS_EFT_VendorPaym.WPmtInstText3), 35, false);
                    
                    firstUstrd = false;                    
                }
    
                //              2.100: Strd
                nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));
    
                //              2.101: RfrdDocInf
                nodeRfrdDocInf = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocInf'));
    
                //                  2.102: Tp
                nodeTp = nodeRfrdDocInf.appendChild(xmlDoc.createElement('Tp'));
    
                //                  2.122: CdOrPrtry
                nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));
    
                //                          2.104: Cd
                if(invSKS_EFT_FileDetail.InvoiceSettleAmountCur > 0)
                {
                    value = 'CREN';
                }
                else
                {
                    value = 'CINV';
                }
    
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', value);
    
                //              2.107: Nb
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', this.CharacterReplacement(subStr(invSKS_EFT_FileDetail.InvoiceNumber, 1, 30)));//SKS_VSTS_13096
    
                //              2.108: RltdDt
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
    
                //              2.109 RfrdDocAmt
                nodeRfrdDocAmt = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocAmt'));
    
                this.node_RmtInf_Amt(nodeRfrdDocAmt, invSKS_EFT_FileDetail);
                
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK_PM)
                {
                    select firstonly crossCompany PaymId from lVendTrans where lVendTrans.RecId == invSKS_EFT_FileDetail.VendTransRecId;

                    if(lVendTrans.PaymId)
                    {
                        //            2.120: CdtrRefInf
                        nodeCdtrRefInf = nodeStrd.appendChild(xmlDoc.createElement('CdtrRefInf'));

                        //               2.126: Ref
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', lVendTrans.PaymId, 30);
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_Id</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty_Id(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          9.1.12: Id
        //              9.1.13: OrgId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOthr;
        str bankPartyID;
    
        bankPartyID = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BankPartyID', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        this.getSKS_EFT_FileFormatPaymSpec();
    
        if(bankPartyID || mSKS_EFT_Bank.WOrdPartySWIFTNo)
        {
            //          9.1.12: Id
            nodeId = _nodeInitgPty.appendChild(xmlDoc.createElement('Id'));
    
            //              9.1.13: OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            if(mSKS_EFT_Bank.WOrdPartySWIFTNo && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SWIFT)
            {
                //                  9.1.14: BICOrBEI
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOrgId, 'BICOrBEI', mSKS_EFT_Bank.WOrdPartySWIFTNo, 11);
            }
            else if(bankPartyID)
            {
                //                      9.1.15 Othr
                nodeOthr = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
                //                              Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', this.CharacterReplacement(bankPartyID), 16);//SKS_VSTS_13905
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr)
    {            
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodePstlAdr;

        if((mRemittanceZipCode != '' || mRemittanceCity != '' || mRemittanceCountryRegionId != '' || mRemittanceAdrline1 != '' || mRemittanceAdrline2 != '') ||
            mRemittanceState != '')
        {
            if (mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CHK_PM)
            {

                this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity, 0, mRemittanceAdrline2, mRemittanceState, true);
            }
            else
            {
                //      PstlAdr
                nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));
    
                //          StrtNm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'StrtNm', this.CharacterReplacement(mRemittanceAdrline1), 35, false);
               
                //          PstCd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'PstCd', mRemittanceZipCode, 16, false);
    
                //          TwnNm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', this.CharacterReplacement(mRemittanceCity), 35, false);
    
                //          CtrySubDvsn
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'CtrySubDvsn', this.CharacterReplacement(mRemittanceState), 35, false);
    
                //          Ctry
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', this.getLogisticsAddressCountryISO(mRemittanceCountryRegionId), 2, false);
		        
                //          AdrLine
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(mRemittanceAdrline2), 35, false);
                
                //          AdrLine
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(mRemittanceAdrline3), 35, false);
            }
        }       
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChrgBr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.51 ChrgBr
        //------------------------------------------------------------------------------------------------------
        str chrgBr;//SKS_VSTS_14060
        chrgBr = SKS_EFT_Format::getCodelookupvalue('chrgBr', mSKS_EFT_FileDetail.RecId);//SKS_VSTS_14060
        //      2.51 ChrgBr
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NON_SWIFT ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SWIFT)
        {
            //      2.24 ChrgBr
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'ChrgBr', chrgBr,0,false);//SKS_VSTS_14060
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Id(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //              Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOthr;
        XmlElement nodeSchmeNm;
        str  value;
        str gradsAccNum;
        str cashCommID;
        str srfNum;

        gradsAccNum = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('GradsAccNum', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        cashCommID = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CashCommID', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        srfNum = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('SRFNum', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));

        if((gradsAccNum || mSKS_EFT_Bank.WOrdPartySWIFTNo || cashCommID || srfNum) &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #EDI)    //SKG#VSTS:8595
        {
            //          Id
            nodeId = _nodeDbtr.appendChild(xmlDoc.createElement('Id'));
    
            //              OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            if(gradsAccNum || cashCommID || srfNum)         //SKG#VSTS:8595
            {
                //                  Othr
                nodeOthr = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CA_ACH:
                        value = gradsAccNum;
                        break;
                    case #NON_SWIFT:
                    case #SWIFT:            //SKS#DevOps:16861
                        value = cashCommID;
                        break;
                    case #CHK_PM:
                        value = srfNum;
                        break;
                    default:
                        value = '';
                        break;
                }
                //                      Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', this.CharacterReplacement(value));
    
                //                      SchmeNm
                nodeSchmeNm = nodeOthr.appendChild(xmlDoc.createElement('SchmeNm'));
    
                //                          Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', 'BANK');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Nm</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Nm(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          Nm
        //------------------------------------------------------------------------------------------------------
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #EDI)
        {
            //          Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeDbtr, 'Nm', this.CharacterReplacement(mSKS_EFT_Bank.WOrdPartyName), 60, false);            
        }
        else
        {
            super(_nodeDbtr);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_PstlAdr(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
    
        this.node_PstlAdr(_nodeDbtr, mSKS_EFT_Bank.WOrdPartyCountryRegionId, mSKS_EFT_Bank.WOrdPartyAddr, mSKS_EFT_Bank.WOrdPartyZipCode, mSKS_EFT_Bank.WOrdPartyCity, 0, mSKS_EFT_Bank.WOrdPartyAddr2, mSKS_EFT_Bank.WOrdPartyState, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: DbtrAcct
        //          Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;
        XmlElement nodeOthr;
    
        if(mSKS_EFT_FileDetail.BankBankAcct)
        {
            //      2.20: DbtrAcct
            nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
            //          Id
            nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
    
    
            //               Othr
            nodeOthr = nodeDbtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
            //                   Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.BankBankAcct, 7);
    
            //              Ccy
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcct, 'Ccy', mBankAccountTable.CurrencyCode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.21: DbtrAgt
        //          FinInstnId
        //               CmbndId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmBId;
        XmlElement nodeClrSysId;
        LogisticsPostalAddress  postalAddress;
        SKS_EB_Address          addressBldgNb, addressStrtNm;
        container               address;
    
        if(mBankAccountTable.SWIFTNo || mSKS_EFT_FileDetail.BankBankTransit)
        {
            //      2.21: DbtrAgt
            nodeDbtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAgt'));
    
            //          FinInstnId
            nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(mBankAccountTable.SWIFTNo && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SWIFT)
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mBankAccountTable.SWIFTNo, 11);
            }
            else
            {
                //              ClrSysMmbId
                nodeClrSysMmBId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
    
                //              ClrSysId
                nodeClrSysId = nodeClrSysMmbId.appendChild(xmlDoc.createElement('ClrSysId'));
    
                //                  Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', 'CACPA');
    
                //          MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.BankBankTransit, 9);
            }
            
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #EDI &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #NON_SWIFT)
            {
                //               Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mBankAccountTable.Name), 35, false);
            }
            
            postalAddress = mBankAccountTable.postalAddress();

            if(strScan(postalAddress.Street, ';', 1, strLen(postalAddress.Street)))
            {
                address = this.addressSplit(postalAddress.Street);
                addressStrtNm = conpeek(address,1);
                addressBldgNb = conpeek(address,2);
            }
            else
            {
                addressStrtNm = postalAddress.Street;
            }

            //                  PstlAdr
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CA_ACH)
            {
                this.node_PstlAdr(nodeFinInstnId, postalAddress.CountryRegionId, addressStrtNm, postalAddress.ZipCode, postalAddress.City, 0, addressBldgNb, postalAddress.State, true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_CtgyPurp</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_CtgyPurp(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.14: CtgyPurp
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCtgyPurp;
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SWIFT)
        {
            //          2.14: CtgyPurp
            nodeCtgyPurp = _nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
            //              2.15: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', 'INTC');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl_Cd</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl_Cd(XmlElement _nodeSvcLvl)
    {
        //------------------------------------------------------------------------------------------------------
        //              2.9: Prtry
        //------------------------------------------------------------------------------------------------------
        str value;
    
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #NON_SWIFT:
            case #SWIFT:
                value = 'URGP';
                break;
            case #CA_ACH:
                value = 'NORM';
                break;
            case #CHK_PM:
                value = 'PM';
                break;
            case #EDI:
                value = 'EDI';
                break;
        }
        //              2.9: Prtry
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Prtry', value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_RmtInf_Amt</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_RmtInf_Amt
    /// </summary>
    /// <param name = "_nodeRfrdDocAmt">_nodeRfrdDocAmt</param>
    /// <param name = "_invSKS_EFT_FileDetail">_invSKS_EFT_FileDetail</param>
    protected void node_RmtInf_Amt(XmlElement _nodeRfrdDocAmt, SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.42: Amt
        //              DuePyblAmt
        //              DscntApldAmt
        //              CdtNoteAmt
        //              RmtdAmt
        //------------------------------------------------------------------------------------------------------
        XmlElement  currentElement;
        AmountMST   gross = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        AmountMST   discount = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
        AmountMST   remitted;
        AmountMST   creditNote;
    
        if(_invSKS_EFT_FileDetail.InvoiceSettleAmountCur > 0)
        {
            remitted = 0;
            creditNote = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;

            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK_PM || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #EDI)
            {
                //      2.110
                currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DuePyblAmt', num2str(gross * 1, 0, 2, 1, 0));
                SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);

                //      2.111
                currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DscntApldAmt', num2str(discount * 1, 0, 2, 1, 0));
                SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
            }
        }
        else
        {
            remitted = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1;
            creditNote = 0;

            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK_PM || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #EDI)
            {
                //      2.110
                currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DuePyblAmt', num2str(gross * -1, 0, 2, 1, 0));
                SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);

                //      2.111
                currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DscntApldAmt', num2str(discount * -1, 0, 2, 1, 0));
                SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
            }
        }
    
        if(remitted != 0)
        {
            //      RmtdAmt
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'RmtdAmt', num2str(remitted,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);            
        }
        else
        {
            //      CdtNoteAmt
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'CdtNoteAmt', num2str(creditNote,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChqInstr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChqInstr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.52 ChqInstr
        //              2.58 DlvryMtd
        //              2.65 ChqMtrtyDt
        //              2.67 Memo Field
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeChqInstr;
        XmlElement nodeDlvryMtd;
        str DlvryMtd;
    
        //          2.52 ChqInstr
        nodeChqInstr = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('ChqInstr'));
    
        //              2.54 ChqNb
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'ChqNb',  SKS_PP_StringFormats::strFill(8, this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));//SKS_VSTS_14191
        
        //              2.58 DlvryMtd
        nodeDlvryMtd = nodeChqInstr.appendChild(xmlDoc.createElement('DlvryMtd'));

        //                  2.59: Cd
        DlvryMtd = this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('DlvryMtd', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId));

        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryMtd, 'Cd', DlvryMtd, 0, false);

        //              2.67 Memo Field
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'MemoFld', this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('MemoFld', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId)), 0, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_Id(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.79: Cdtr
        //          Id
        //              OrgId
        //                  Othr
        //                      Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeId;
        XmlElement nodeOrgPvtId;
        XmlElement nodeOthr;
        str CdtrId;
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK_PM)
        {
            CdtrId = this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('CdtrId', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId));
            
            if(CdtrId)
            {
                //          Id
                nodeId = _nodeCdtr.appendChild(xmlDoc.createElement('Id'));

                //               OrgId
                nodeOrgPvtId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
               
                //                      Othr
                nodeOthr = nodeOrgPvtId.appendChild(xmlDoc.createElement('Othr'));
    
                //                          Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', CdtrId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Purp</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Purp(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.88: Purp
        //              Prtry
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeId;
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK_PM)
        {
            //                  Purp
            nodeId = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Purp'));

            //                      Prtry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeId, 'Prtry', mSKS_EFT_VendorPaym.VendAccount);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.8: SvcLvl
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeSvcLvl;
    
        //          2.8: SvcLvl
        nodeSvcLvl = _nodePmftTpInf.appendChild(xmlDoc.createElement('SvcLvl'));
    
        //              2.9: Cd
        this.node_PmtInf_PmtTpInf_SvcLvl_Cd(nodeSvcLvl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_PmtTpInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.31 PmtTpInf
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePmftTpInf;
        XmlElement nodeCtgyPurp;
        str value;

        value = this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('CtgyPurp', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId));

        if(value &&
           ((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CA_ACH &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_VendorPaym.WBenBankCountryRegionId) == 'US')||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NON_SWIFT))
        {
            nodePmftTpInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('PmtTpInf'));

            //          2.14: CtgyPurp
            nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
            //              2.15: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_InstrForCdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_InstrForCdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.82: InstrForCdtrAgt
        //              InstrInf
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeInstrForCdtrAgt;

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NON_SWIFT &&
          (mSKS_EFT_VendorPaym.WBankInst1 || mSKS_EFT_VendorPaym.WBankInst2 || mSKS_EFT_VendorPaym.WBankInst3))
        {
            //          2.82: InstrForCdtrAgt
            nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));
    
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', mSKS_EFT_VendorPaym.WBankInst1 + mSKS_EFT_VendorPaym.WBankInst2 + mSKS_EFT_VendorPaym.WBankInst3);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>