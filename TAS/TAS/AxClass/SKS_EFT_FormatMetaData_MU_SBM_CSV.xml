<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_MU_SBM_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_MU_SBM_CSV
/// </summary>
class SKS_EFT_FormatMetaData_MU_SBM_CSV Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230509';
        dataContractVersion = '1.0';
        conFormatID = ['MU-SBM-CSV'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,1,1,'','','','',0,'','','','',1,'MU - State Bank Of Mauritius - CSV',0,'','','MU-SBM-CSV',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,'','','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'MU-SBM-CSV',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('MU-SBM-CSV'):
                paymSpecList = this.getPaymSpecsMetaData_MU_SBM_CSV();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_MU_SBM_CSV</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_MU_SBM_CSV()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Payment',1,'PAYMENT','','PAYMENT','TRADE PAY',0,'MU-SBM-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,1,1]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('MU-SBM-CSV'):
                notesList = this.getNotesMetaData_MU_SBM_CSV();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_MU_SBM_CSV</Name>
				<Source><![CDATA[
    private container getNotesMetaData_MU_SBM_CSV()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['MU-SBM-CSV','PAYMENT','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Purpose text will print from Payment journal > Central bank purpose text']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('MU-SBM-CSV'):
                validationsList = this.getValidationsMetaData_MU_SBM_CSV();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_MU_SBM_CSV</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_MU_SBM_CSV()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','Field No.1, 10 > CORRESPONDENT','Intermediary Swift number related to vendor','16','WIntBankSwift','','',0,0,'1','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field No.2 > APPLICANT ACCOUNT','Bank account number ',0,'AccountNum','','','0',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Field No.4 > NAME OF APPLICANT','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Field No.5 > ADDRESS OF APPLICANT','Address related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','Field No.5 > ADDRESS OF APPLICANT','Address related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Field No.5 > ADDRESS OF APPLICANT','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Town Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Field No.5 > ADDRESS OF APPLICANT','TownName related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','Field No.5 > ADDRESS OF APPLICANT','Bank Country Sub Division','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Field No.5 > ADDRESS OF APPLICANT','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);        
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Beneficiary Name ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Field No.6 > NAME OF BENEFICIARY','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Beneficiary Address Line 1 ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field No.9 > ADDRESS OF BENEFICIARY','Address related to vendor','16','WBeneAddr','','',1,1,0,'0',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Beneficiary  Address Line 2 ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field No.9 > ADDRESS OF BENEFICIARY','Address related to vendor','16','WBeneAddr2','','',1,1,0,'0',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Beneficiary City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Field No.9 > ADDRESS OF BENEFICIARY','City related to vendor','16','WBeneCity','','',1,1,0,'0',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Beneficiary State ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','Field No.9 > ADDRESS OF BENEFICIARY','Country Sub Division related to vendor','16','WBeneState','','',1,1,0,'0',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Beneficiary Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','Field No.9 > ADDRESS OF BENEFICIARY','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Beneficiary Country ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field No.9 > ADDRESS OF BENEFICIARY','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Vendor bank Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','Field No.11 > BIC OF BENEFICIARY BANK','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Vendor Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','Field No.12 > ACCOUNT NO OF BENEFIIARY','Account Number related to vendor','9','AccountNum','','','1',1,0,'0',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Intermediary Bank Account','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','Field No.22 > BENEFICIARY BANK ACCOUNT NUMBER/CLEARING CODE','Intermediary Bank Id related to vendor','16','WIntBankAcct','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Intermediary Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','Field No.23 > INTERMEDIARY BANK CLEARING CODE','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,1,'','',0,0]);

        //B2B
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Bank(offset account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field No.2 > APPLICANT ACCOUNT','Account Number related to Bank(offset account)',0,'AccountNum','','','0',0,1,'35','','4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Bank(account)Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','Field No.4 > NAME OF APPLICANT','Name related to bank','23','WOrdPartyName','','',0,0,1,'35','','4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Bank(account)Address 1','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Address 1','Field No.5 > ADDRESS OF APPLICANT','Address related to bank','23','WOrdPartyAddr','','',1,1,1,'35',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Bank(account)Address 2','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Address 2','Field No.5 > ADDRESS OF APPLICANT','Address related to bank','23','WOrdPartyAddr2','','',1,1,1,'35',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Bank(account)Zip/postal code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Zip/postal code','Field No.5 > ADDRESS OF APPLICANT','ZipCode related to bank','23','WOrdPartyZipCode','','',1,1,'','',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Bank(account)Town Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > City','Field No.5 > ADDRESS OF APPLICANT','TownName related to bank','23','WOrdPartyCity','','',1,1,1,'35',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Bank(account)State/province','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > State/province','Field No.5 > ADDRESS OF APPLICANT','Bank Country Sub Division','23','WOrdPartyState','','',1,1,1,'35',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Bank(account)Country/Region','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Country/region','Field No.5 > ADDRESS OF APPLICANT','Country related to bank','23','WOrdPartyCountryRegionId','','',1,1,'','',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Bank Name ','Organization administration > Organization > Legal entities > Name','Field No.6 > NAME OF BENEFICIARY','Name related to Company(account LE)','27','WBeneName','','',0,0,1,'35',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Bank Address Line 1 ','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Address 1','Field No.9 > ADDRESS OF BENEFICIARY','Address related to Company(account LE)','34','WBeneAddr','','',1,1,0,'0',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Bank  Address Line 2 ','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Address 2','Field No.9 > ADDRESS OF BENEFICIARY','Address related to Company(account LE)','34','WBeneAddr2','','',1,1,0,'0',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Bank City ','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > City','Field No.9 > ADDRESS OF BENEFICIARY','City related to Company(account LE)','34','WBeneCity','','',1,1,0,'0',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Bank State ','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > State/province','Field No.9 > ADDRESS OF BENEFICIARY','Country Sub Division related to Company(account LE)','34','WBeneState','','',1,1,0,'0',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Bank Postal Code ','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Zip/postal Code','Field No.9 > ADDRESS OF BENEFICIARY','Company(account LE) Zip/postal code','34','WBeneZipPostal','','',1,1,'','',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Bank Country ','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','Field No.9 > ADDRESS OF BENEFICIARY','Country related to Company(account LE)','34','WBeneCountryRegionId','','',1,1,'',0,0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Bank(account) bank Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','Field No.11 > BIC OF BENEFICIARY BANK','Swift Code related to Company(account LE)','9','SWIFTNo','','',0,0,1,'11',0,'4']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number ','Field No.12 > ACCOUNT NO OF BENEFIIARY','Account Number related to Company(account LE)','26','AccountNum','','','1',1,0,'0',0,4]);

        //CNP
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Intermediary Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement+ > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','Field No.1, 10 > CORRESPONDENT','Intermediary Swift number related to vendor','35','WIntBankSwift','','',0,0,'1','11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field No.2 > APPLICANT ACCOUNT','Bank account number ',0,'AccountNum','','','0',0,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Name','TAS > Common > Customer eBanking details > Customer reimbursement+ > Wire/IAT ordering party(Fast tab) > Name','Field No.4 > NAME OF APPLICANT','Name related to bank','37','WOrdPartyName','','',0,0,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Address 1','TAS > Common > Customer eBanking details > Customer reimbursement+ > Wire/IAT ordering party(Fast tab) > Address 1','Field No.5 > ADDRESS OF APPLICANT','Address related to bank','37','WOrdPartyAddr','','',1,1,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Address 2','TAS > Common > Customer eBanking details > Customer reimbursement+ > Wire/IAT ordering party(Fast tab) > Address 2','Field No.5 > ADDRESS OF APPLICANT','Address related to bank','37','WOrdPartyAddr2','','',1,1,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Zip/postal code','TAS > Common > Customer eBanking details > Customer reimbursement+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Field No.5 > ADDRESS OF APPLICANT','ZipCode related to bank','37','WOrdPartyZipCode','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Town Name','TAS > Common > Customer eBanking details > Customer reimbursement+ > Wire/IAT ordering party(Fast tab) > City','Field No.5 > ADDRESS OF APPLICANT','TownName related to bank','37','WOrdPartyCity','','',1,1,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','State/province','TAS > Common > Customer eBanking details > Customer reimbursement+ > Wire/IAT ordering party(Fast tab) > State/province','Field No.5 > ADDRESS OF APPLICANT','Bank Country Sub Division','37','WOrdPartyState','','',1,1,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Country/Region','TAS > Common > Customer eBanking details > Customer reimbursement+ > Wire/IAT ordering party(Fast tab) > Country/region','Field No.5 > ADDRESS OF APPLICANT','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Beneficiary Name ','TAS > Common > Customer eBanking details > Customer reimbursement+ > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Field No.6 > NAME OF BENEFICIARY','Name related to Vendor','35','WBeneName','','',0,0,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Beneficiary Address Line 1 ','TAS > Common > Customer eBanking details > Customer reimbursement+ > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field No.9 > ADDRESS OF BENEFICIARY','Address related to vendor','35','WBeneAddr','','',1,1,0,'0',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Beneficiary  Address Line 2 ','TAS > Common > Customer eBanking details > Customer reimbursement+ > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field No.9 > ADDRESS OF BENEFICIARY','Address related to vendor','35','WBeneAddr2','','',1,1,0,'0',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Beneficiary City ','TAS > Common > Customer eBanking details > Customer reimbursement+ > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Field No.9 > ADDRESS OF BENEFICIARY','City related to vendor','35','WBeneCity','','',1,1,0,'0',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Beneficiary State ','TAS > Common > Customer eBanking details > Customer reimbursement+ > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','Field No.9 > ADDRESS OF BENEFICIARY','Country Sub Division related to vendor','35','WBeneState','','',1,1,0,'0',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Beneficiary Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement+ > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','Field No.9 > ADDRESS OF BENEFICIARY','Vendor Zip/postal code','35','WBeneZipPostal','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Beneficiary Country ','TAS > Common > Customer eBanking details > Customer reimbursement+ > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field No.9 > ADDRESS OF BENEFICIARY','Country related to vendor','35','WBeneCountryRegionId','','',1,1,'',0,0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Customer Bank Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement+ > Customer bank accounts > General tab > Identification(group) > Swift Code','Field No.11 > BIC OF BENEFICIARY BANK','Swift Code related to Vendor','1','SWIFTNo','','',0,0,1,'11',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Customer Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement+ > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','Field No.12 > ACCOUNT NO OF BENEFIIARY','Account Number related to vendor','1','AccountNum','','','1',1,0,'0',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Intermediary Intermediary Bank Account','TAS > Common > Customer eBanking details > Customer reimbursement+ > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','Field No.22 > BENEFICIARY BANK ACCOUNT NUMBER/CLEARING CODE','Intermediary Bank Id related to vendor','35','WIntBankAcct','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['MU-SBM-CSV','PAYMENT','','Intermediary Bank Id','TAS > Common > Customer eBanking details > Customer reimbursement+ > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','Field No.23 > INTERMEDIARY BANK CLEARING CODE','Intermediary Bank Id related to vendor','35','WIntBankId','','',1,1,'','',0,'6']);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['MU-SBM-CSV','Charges','Charge Option']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['MU-SBM-CSV','Charges','Borne by Originator','OUR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['MU-SBM-CSV','Charges','Borne by Beneficiary','BEN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['MU-SBM-CSV','Charges','Shared','SHA']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('MU-SBM-CSV'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_MU_SBM_CSV();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_MU_SBM_CSV</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_MU_SBM_CSV()
    {
        container   paymSpecFieldsList;
        
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['MU-SBM-CSV','MU-SBM-CSV','PAYMENT','Charges','Charge Bearer',0,'Charges','',0,'','','Field No.15 > CHARGE OPTION']);
        
        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['MU-SBM-CSV','MU-SBM-CSV','FormatValidations','*','*','27']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch(_formatID)
        {
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_MU_SBM_CSV</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_MU_SBM_CSV()
    {
        container   paymSpecFieldsList;

        
        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>