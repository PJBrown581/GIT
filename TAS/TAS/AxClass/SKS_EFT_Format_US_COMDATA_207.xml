<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_COMDATA_207</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_COMDATA_207 extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_US_COMDATA_207 extends SKS_EFT_Format
{
    #define.FormatVersion('20220624')
    int         mTotalTransaction;
    AmountMST   mTotalAmount;
    str         mCompanyID;
    str         mCDNAcctCode;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        // Get SKS_EFT_Bank
        this.getSKS_EFT_Bank();
    
        // Format header
        this.rec_Header();
    
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();
    
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();
    
            // Details
            this.rec_Details();
            next mSKS_EFT_FileDetail;
        }
    
        // Format trailer
        this.rec_Trailer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJournalVoucher</Name>
				<Source><![CDATA[
    private str getJournalVoucher()
    {
        LedgerJournalTrans ledgerJournalTrans;
    
        select Voucher from ledgerJournalTrans where
            ledgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;
    
        return ledgerJournalTrans.Voucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Details</Name>
				<Source><![CDATA[
    public boolean rec_Details()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Description                    Length      Position
        // 1    Record Identifier                   2   (  1 -   2)
        // 2    Cust Id Number                     10   (  3 -  12)
        // 3    CDN Sender Codeword                20   ( 13 -  32)
        // 4    Product Flag                        1   ( 33 -  33)
        // 5    Card Number or Employee Number     16   ( 34 -  49)
        // 6    Transaction Amount                  6   ( 50 -  55)
        // 7    Charge Application Flag             1   ( 56 -  56)
        // 8    Transaction Type                    1   ( 57 -  57)
        // 9    Trip Number                        10   ( 58 -  67)
        //10    Miscellaneous Data                 15   ( 68 -  82)
        //11    CDN Account Code                    5   ( 83 -  87)
        //12    Transaction Available Date          6   ( 88 -  93)
        //13    Transaction Available Date          4   ( 94 -  97)
        //14    Reserved                            4   ( 98 - 101)
        //15    Direct Deposit (DD) Flag            1   (102 - 102)
        //16    Expanded Transaction Amount         7   (103 - 109)
        //17    Reserved                           98   (110 - 207)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str AppFlag;
        mTotalTransaction++;
        mTotalAmount += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
    
        // 1    Record Identifier                   2   (  1 -   2)
        sb.Append('L1');
    
        // 2    Cust Id Number                     10   (  3 -  12)
        sb.Append(SKS_PP_StringFormats::strFill(10, mCompanyID, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 3    CDN Sender Codeword                20   ( 13 -  32)
        sb.Append(SKS_PP_StringFormats::strFill(20, this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CDNSenderCd', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 4    Product Flag                        1   ( 33 -  33)
        sb.Append('C');
    
        // 5    Card Number or Employee Number     16   ( 34 -  49)
        sb.Append(SKS_PP_StringFormats::strFill(16, this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CardNumber', mSKS_EFT_FileDetail.RecId)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 6    Transaction Amount                  6   ( 50 -  55)
        sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 7    Charge Application Flag             1   ( 56 -  56)
        AppFlag = SKS_EFT_Format::getCodelookupvalue('Charges', mSKS_EFT_FileDetail.RecId);

        if(AppFlag == '')
        {
            AppFlag = 'P';
        }
        sb.Append(SKS_PP_StringFormats::strFill(1, AppFlag, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 8    Transaction Type                    1   ( 57 -  57)
        sb.Append('A');
    
        // 9    Trip Number                        10   ( 58 -  67)
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //10    Miscellaneous Data                 15   ( 68 -  82)
        sb.Append(SKS_PP_StringFormats::strFill(15, this.getJournalVoucher(), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //11    CDN Account Code                    5   ( 83 -  87)
        sb.Append(SKS_PP_StringFormats::strFill(5, mCDNAcctCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //12    Transaction Available Date          6   ( 88 -  93)
        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(mSKS_EFT_File.EffectiveDate));
    
        //13    Transaction Available Date          4   ( 94 -  97)
        sb.Append(SKS_PP_StringFormats::strTimeHHMM(DateTimeUtil::getTimeNow(DateTimeUtil::getUserPreferredTimeZone())));
    
        //14    Reserved                            4   ( 98 - 101)
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //15    Direct Deposit (DD) Flag            1   (102 - 102)
        sb.Append(SKS_PP_StringFormats::strFill(1, this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('ComDataDD', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //16    Expanded Transaction Amount         7   (103 - 109)
        sb.Append(SKS_PP_StringFormats::strMoney(-1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 7));
    
        //17    Reserved                           98   (110 - 207)
        sb.Append(SKS_PP_StringFormats::strFill(98, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Header</Name>
				<Source><![CDATA[
    public boolean rec_Header()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Description                    Length      Position
        // 1    Record Identifier                   2   (  1 -   2)
        // 2    Cust Id Number                     10   (  3 -  12)
        // 3    Comdata Account Code                5   ( 13 -  17)
        // 4    Available Date                      6   ( 18 -  23)
        // 5    Available Time                      4   ( 24 -  27)
        // 6    Filler                              9   ( 28 -  36)
        // 7    Internal Reference Information      1   ( 37 -  37)
        // 8    Filler                            170   ( 38 - 207)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        // 1    Record Identifier                   2   (  1 -   2)
        sb.Append('L0');
        // 2    Cust Id Number                     10   (  3 -  12)
        mCompanyID = mSKS_EFT_FileDetail.FileACHCompanyId;
        sb.Append(SKS_PP_StringFormats::strFill(10, mCompanyID, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 3    Comdata Account Code                5   ( 13 -  17)
        mCDNAcctCode = mSKS_EFT_Bank.WOrdPartyId;
        sb.Append(SKS_PP_StringFormats::strFill(5, mCDNAcctCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 4    Available Date                      6   ( 18 -  23)
        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(mSKS_EFT_File.EffectiveDate));
    
        // 5    Available Time                      4   ( 24 -  27)
        sb.Append(SKS_PP_StringFormats::strTimeHHMM(DateTimeUtil::getTimeNow(DateTimeUtil::getUserPreferredTimeZone())));
    
        // 6    Filler                              9   ( 28 -  36)
        sb.Append(SKS_PP_StringFormats::strFill(9, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 7    Internal Reference Information      1   ( 37 -  37)
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 8    Filler                            170   ( 38 - 207)
        sb.Append(SKS_PP_StringFormats::strFill(170, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Trailer</Name>
				<Source><![CDATA[
    public boolean rec_Trailer()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Description                    Length      Position
        // 1    Record Identifier                   2   (  1 -   2)
        // 2    Cust Id                            10   (  3 -  12)
        // 3    CDN Account Code                    5   ( 13 -  17)
        // 4    Total Transaction Count             5   ( 18 -  22)
        // 5    Total Transaction Amount           10   ( 23 -  32)
        // 6    Reserved by Comdata               175   ( 33 - 207)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        // 1    Record Identifier                   2   (  1 -   2)
        sb.Append('L9');
    
        // 2    Cust Id Number                     10   (  3 -  12)
        sb.Append(SKS_PP_StringFormats::strFill(10, mCompanyID, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 3    CDN Account Code                    5   ( 13 -  17)
        sb.Append(SKS_PP_StringFormats::strFill(5, mCDNAcctCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 4    Total Transaction Count             5   ( 18 -  22)
        sb.Append(SKS_PP_StringFormats::strFill(5, int2str(mTotalTransaction), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 5    Total Transaction Amount           10   ( 23 -  32)
        sb.Append(SKS_PP_StringFormats::strMoney(-1 * mTotalAmount, 10));
    
        // 6    Reserved by Comdata               175   ( 33 - 207)
        sb.Append(SKS_PP_StringFormats::strFill(175, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>