<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesConfirmJournalCreateTAS_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(ClassStr(SalesConfirmJournalCreate))]
final class SalesConfirmJournalCreateTAS_Extension
{
    public CustConfirmDocNum sKS_CC_CustConfirmDocNum;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkNoThrow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if a journal will be created.
    /// </summary>
    /// <returns>
    /// true of a journal can be created; otherwise, false.
    /// </returns>
    /// <remarks>
    /// If a journal is not created, no exception is thrown.A journal is not created if it does not contain
    /// lines.
    /// </remarks>
    protected boolean checkNoThrow()
    {
        SKS_PP_Setup sKS_PP_SetupParm;
        boolean ret = next checkNoThrow();

        if (ret && !this.proforma())
        {
            if (salesTable.mcrIsCallCenter() && RetailMCRChannelTable::mcrEnableOrderCompletion(salesTable))
            {
                ret = salesTable.mcrHasAllValidPayments();
            }
            else
            {
                sKS_PP_SetupParm = SKS_PP_Setup::find();
            
                if (sKS_PP_SetupParm.ModCC == NoYes::Yes && sKS_PP_SetupParm.CCAutoPreAuthOnSalesOrderConf == NoYes::Yes &&
                    !salesTable.ProjId)
                {
                    if (sKS_PP_SetupParm.CCSkipSONewAuthForPartialShip == NoYes::Yes &&
                        salesTable.SKS_CC_SkipAutoAuthDueToPartialShip == NoYes::Yes)
                    {
                        return ret;
                    }

                    CustConfirmJour custConfirmJourSKS = this.getJournal() as CustConfirmJour;

                    custConfirmJourSKS.SalesId = salesTable.SalesId;
                    custConfirmJourSKS.setDocNum(salesTable);

                    sKS_CC_CustConfirmDocNum = custConfirmJourSKS.ConfirmDocNum;

                    ret = salesTable.sKS_CC_CreditCardDoPreAuthorize(false, sKS_CC_CustConfirmDocNum);
                    if (!ret)
                    {
                        if (sKS_PP_SetupParm.CCFailSOConfWhenPreAuthDeclines == NoYes::Yes)
                        {
                            error(strFmt("@SKS6640", custConfirmJourSKS.ConfirmDocNum, salesTable.SalesId));
                        }
                        else
                        {
                            // Allow order confirmation to continue to process as indicated in TAS parameters
                            ret = true;
                        }
                    }
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initJournalHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the journal header record.
    /// </summary>
    protected void initJournalHeader()
    {
        next initJournalHeader();

        if (sKS_CC_CustConfirmDocNum)
        {
            CustConfirmJour custConfirmJourSKS = this.getJournal() as CustConfirmJour;
            if (custConfirmJourSKS.ConfirmDocNum != sKS_CC_CustConfirmDocNum)
            {
                custConfirmJourSKS.ConfirmDocNum = sKS_CC_CustConfirmDocNum;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>