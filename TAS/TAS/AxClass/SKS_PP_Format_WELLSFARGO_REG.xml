<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_WELLSFARGO_REG</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_WELLSFARGO_REG Extends SKS_PP_Format_BankGroup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    //wellsfargo-REG
        //Comma Delimited
        //Field1         routing/transit Number ( Max: 11 Chars)
        //Field2         Account Number (Max:34)
        //Field3         Derial Number Max 10)
        //Field4         Issue Date (mm-dd-yyyy)
        //field5         Amount (12345.00 - Max: 11)
        //field6         Transaction Type (Max: 3)
        //field7         Optional Data (Max: 40)
    protected str txtDetail()
    {
        str ItemType;
        str Amt;
        int Mult;
        str TempVendorName;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
    
        Mult = 1;
    
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            if (mSKS_PP_FileDetail.ChkType == SKS_PP_ChequeType::CancelledCheque)
            {
                ItemType = '370';
                if(mSKS_PP_FileDetail.ChkCuryAmt < 0)
                {
                    Mult = -1;
    
                }
            }
            else
            {
                ItemType = '430';
                Mult = 0;
            }
    
        }
        else
        {
            ItemType = '320';
            if(mSKS_PP_FileDetail.ChkCuryAmt == 0)
            {
                ItemType = '430';
    
            }
        }
    
        Amt =  strRTrim(StrLTrim(Num2Str(mSKS_PP_FileDetail.ChkCuryAmt * Mult, 1, 2, 1, 0)));
    
        If (mSKS_PP_FileDetail.RecSection == 20)
        {
    
            sb.Append(strRtrim(strLtrim(mSKS_PP_FileDetail.BnkBankTransit)));
            sb.Append(',');
            sb.Append(strRtrim(strLtrim(mSKS_PP_FileDetail.BnkBankAcct)));
            sb.Append(',');
            sb.Append(strRtrim(strLtrim(mSKS_PP_FileDetail.ChkRefNbr)));
            sb.Append(',');
            sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_PP_FileDetail.ChkDocDate, DateSeparator::Hyphen));
            sb.Append(',');
            sb.Append(Amt);
            sb.Append(',');
            sb.Append(ItemType);
            sb.Append(',');
            TempVendorName = strRtrim(strLtrim(mSKS_PP_FileDetail.vendname));
            while(strContains(TempVendorName, ','))
            {
                TempVendorName = strRem(TempVendorName, ',');
            }
            sb.Append(TempVendorName);
    
        }
        Else If (mSKS_PP_FileDetail.RecSection == 10)
        {
                 sb.Append(mSKS_PP_FileDetail.ValueString);
    
    
        }
        Else If (mSKS_PP_FileDetail.RecSection == 40)
        {
                  sb.Append(mSKS_PP_FileDetail.ValueString);
    
        }
        Else
        {
            sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>