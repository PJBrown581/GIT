<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_AP_CITI_GDFF</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_AP_CITI_GDFF Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_AP_CITI_GDFF Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230207';
        dataContractVersion = '1.0';
        conFormatID = ['AP-CITI-GDFF','AP-CITI-GDFF-TH', 'AP-CITI-GDFF-IN'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'Asia Pacific-CitiDirect-GDFF',0,'','','AP-CITI-GDFF',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,'',0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'AP-CITI-GDFF',0,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'Asia Pacific-CitiDirect-GDFF-Thailand',0,'','','AP-CITI-GDFF-TH',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,'',0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'AP-CITI-GDFF',0,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'Asia Pacific-CitiDirect-GDFF-India',0,'','','AP-CITI-GDFF-IN',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,'',0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'AP-CITI-GDFF',0,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('AP-CITI-GDFF'):
                paymSpecList = this.getPaymSpecsMetaData_AP_CITI_GDFF();
                break;

            case ('AP-CITI-GDFF-TH'):
                paymSpecList = this.getPaymSpecsMetaData_AP_CITI_GDFF_TH();
                break;

            case ('AP-CITI-GDFF-IN'):
                paymSpecList = this.getPaymSpecsMetaData_AP_CITI_GDFF_IN();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_AP_CITI_GDFF</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_AP_CITI_GDFF()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'Book Transfer',1,'BKT','','BKT','TRADE PAY',0,'AP-CITI-GDFF',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'Domestic Funds Transfer',1,'DFT','','DFT','TRADE PAY',0,'AP-CITI-GDFF',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,0,0,'',0,0,0,0,0,'Cross Border Funds Transfer',1,'EFT','','EFT','TRADE PAY',0,'AP-CITI-GDFF',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_AP_CITI_GDFF_TH</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_AP_CITI_GDFF_TH()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Paylink Cheque',1,'PLC','','PLC','TRADE PAY',0,'AP-CITI-GDFF-TH',0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Paylink Autopay',1,'PTA','','PTA','TRADE PAY',0,'AP-CITI-GDFF-TH',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Paylink Payroll',1,'PTP','','PTP','TRADE PAY',0,'AP-CITI-GDFF-TH',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_AP_CITI_GDFF_IN</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_AP_CITI_GDFF_IN()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Customer Cheque',1,'CHK','','CHK','TRADE PAY',0,'AP-CITI-GDFF-IN',0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Domestic Funds Transfer - NEFT',1,'DFT-NEFT','','DFT-NEFT','TRADE PAY',0,'AP-CITI-GDFF-IN',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('AP-CITI-GDFF'):
                notesList = this.getNotesMetaData_AP_CITI_GDFF();
                break;

            case ('AP-CITI-GDFF-TH'):
                notesList = this.getNotesMetaData_AP_CITI_GDFF_TH();
                break;

            case ('AP-CITI-GDFF-IN'):
                notesList = this.getNotesMetaData_AP_CITI_GDFF_IN();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_AP_CITI_GDFF</Name>
				<Source><![CDATA[
    private container getNotesMetaData_AP_CITI_GDFF()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['AP-CITI-GDFF','BKT','-Debit Account Number is required and is the Bank Transit/routing number.::AP EFT+ Bank Account > Wire/IAT ordering party tab fields:-Name and Address information will be included if set. Country code is required.::Vendor eBanking details > Payment specification > Wire transfer/IAT-1 tab > Beneficiary section fields:-Name is required.:-Address information will be included if set.:-Advice Media/Bene Advice Type is set on the Advice field.:--Vendor Fax and Phone numbers are set on the Vendor. Email is set on the email tab of Vendor eBanking details.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['AP-CITI-GDFF','DFT','-Debit Account Number is required and is the Bank Transit/routing number.::AP EFT+ Bank Account > Wire/IAT ordering party tab fields:-Either ID or Name and Address information will be included if set. Do not set both.:-Country/region is required.::Vendor eBanking details > Payment specification > Wire transfer/IAT-1 tab > Beneficiary section fields:-Name is required.:-Address information will be included if set.:-Advice Media/Bene Advice Type is set on the Advice field.:--Vendor Fax and Phone numbers are set on the Vendor. Email is set on the email tab of Vendor eBanking details.::Vendor eBanking details > Payment specification > Wire transfer/IAT-1 tab > Beneficiary bank section fields:-Name and address information will be included if set.::Vendor bank account fields:-Either SWIFT or Routing number is required. SWIFT will take precedence if both are populated.:--If Routing number is used then the Routing number type field must be set.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['AP-CITI-GDFF','EFT','-Debit Account Number is required and is the Bank Transit/routing number.::AP EFT+ Bank Account > Wire/IAT ordering party tab fields:-Either ID or Name and Address information will be included if set. Do not set both.:-Country/region is required.::Vendor eBanking details > Payment specification > Wire transfer/IAT-1 tab > Beneficiary section fields:-Name is required.:-Address information will be included if set.:-Advice Media/Bene Advice Type is set on the Advice field.:--Vendor Fax and Phone numbers are set on the Vendor. Email is set on the email tab of Vendor eBanking details.::Vendor eBanking details > Payment specification > Wire transfer/IAT-1 tab > Beneficiary bank section fields:-Name and address information will be included if set.::Vendor eBanking details > Payment specification > Wire transfer/IAT-2 tab > Intermediary bank section fields:-Either SWIFT or Bank ID may be set along with the Qualifier field.:--If populated, SWIFT will be used if the Qualifier field is set to SWIFT or left blank.:-Name and address information will be included if set.::Vendor bank account fields:-Either SWIFT or Routing number is required. SWIFT will take precedence if both are populated.:--If Routing number is used then the Routing number type field must be set.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_AP_CITI_GDFF_TH</Name>
				<Source><![CDATA[
    private container getNotesMetaData_AP_CITI_GDFF_TH()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['AP-CITI-GDFF-TH','PLC','-Debit Account Number is required and is the Bank Transit/routing number.:-Beneficiary Name and Address information is required and taken from the Remittance tab in the Payment Journal.::AP EFT+ Bank Account > Wire/IAT ordering party tab fields::-Either ID or Address information will be included if set. Do not set both.:-Name and Country/region are required.::Vendor eBanking details > Payment specification > Wire transfer/IAT-1 tab > Beneficiary section fields:-Advice Media/Bene Advice Type is set on the Advice field in the Beneficiary section.:--Vendor Fax and Phone numbers are set on the Vendor. Email is set on the email tab of Vendor eBanking details.:-Delivery Method is required and set on the Mail handling field.::Thailand Withholding tax fields:-The Bank account number will be included if set on Vendor Bank account.:-Tax type Description is set on the General Ledger > Withholding tax groups.:-Tax Document number is the Thailand Withholding Slip number.:-Tax ID is on the set on the Payment Journal > Payment tab.:-The Payment gross up field is required on the Payment Journal > Withholding tax tab.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['AP-CITI-GDFF-TH','PTA','-Debit Account Number is required and is the Bank Transit/routing number.:-Transaction type is required and set on the Central bank purpose code on the Payment Journal.::AP EFT+ Bank Account > Wire/IAT ordering party tab fields:-ID will be included if set.:-Name and Country code are required.::Vendor eBanking details > Payment specification > Wire transfer/IAT-1 tab > Beneficiary section fields:-Name and Address information is required.:-Advice Media/Bene Advice Type is set on the Advice field in the Beneficiary section.:--Vendor Fax and Phone numbers are set on the Vendor. Email is set on the email tab of Vendor eBanking details.::Thailand Withholding tax fields:-Tax type Description is set on the General Ledger > Withholding tax groups.:-Tax Document number is the Thailand Withholding Slip number.:-Tax ID is on the set on the Payment Journal > Payment tab.:-The Payment gross up field is required on the Payment Journal > Withholding tax tab.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['AP-CITI-GDFF-TH','PTP','-Debit Account Number is required and is the Bank Transit/routing number.:-Transaction type is required and set on the Central bank purpose code on the Payment Journal.::AP EFT+ Bank Account > Wire/IAT ordering party tab fields:-ID will be included if set.:-Name and Country code are required.::Vendor eBanking details > Payment specification > Wire transfer/IAT-1 tab > Beneficiary section fields:-Name and Address information is required.::Thailand Withholding tax fields:-Tax type Description is set on the General Ledger > Withholding tax groups.:-Tax Document number is the Thailand Withholding Slip number.:-Tax ID is on the set on the Payment Journal > Payment tab.:-The Payment gross up field is required on the Payment Journal > Withholding tax tab.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_AP_CITI_GDFF_IN</Name>
				<Source><![CDATA[
    private container getNotesMetaData_AP_CITI_GDFF_IN()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['AP-CITI-GDFF-IN','CHK','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['AP-CITI-GDFF-IN','DFT-NEFT','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('AP-CITI-GDFF-IN'):
                validationsList = this.getValidationsMetaData_AP_CITI_GDFF_IN();
                break;
        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_AP_CITI_GDFF_IN</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_AP_CITI_GDFF_IN()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AP-CITI-GDFF-IN','CHK','','Beneficiary Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Field 20 > Beneficiary Nam','Name related to Vendor','16','WBeneName','','',3,0,'1','70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AP-CITI-GDFF-IN','CHK','','Vendor Routing Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Field 32 > Beneficiary Bank Routing Code','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AP-CITI-GDFF-IN','CHK','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 3 > Debit Account Number','Bank account number ',0,'AccountNum','','',3,0,1,'35',0,0]);
        

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AP-CITI-GDFF-IN','DFT-NEFT','','Beneficiary Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Field 20 > Beneficiary Nam','Name related to Vendor','16','WBeneName','','',0,0,'1','70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AP-CITI-GDFF-IN','DFT-NEFT','','Vendor Routing Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Field 32 > Beneficiary Bank Routing Code','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AP-CITI-GDFF-IN','DFT-NEFT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 3 > Debit Account Number','Bank account number ',0,'AccountNum','','',3,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AP-CITI-GDFF-IN','DFT-NEFT','','Beneficiary Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','Field 25 > Beneficiary Account Number [orOther ID] ','Account Number related to vendor','9','AccountNum','','','0',0,1,'30',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['AP-CITI-GDFF','IntrBankRoutingMtd','Intermediary Bank Routing Method']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['AP-CITI-GDFF','BeneAdviceType','Bene Advice Type']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['AP-CITI-GDFF','DeliveryMethod','Delivery Method']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['AP-CITI-GDFF','DeliveryMethodCHK','Check Delivery Method']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['AP-CITI-GDFF','BeneAccountType','Beneficiary Account Type']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['AP-CITI-GDFF','BeneBankRoutingMethod','Beneficiary Bank Routing Method']);


        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AP-CITI-GDFF','IntrBankRoutingMtd','ABA','FW']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AP-CITI-GDFF','IntrBankRoutingMtd','CHIPS','CH']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AP-CITI-GDFF','BeneAdviceType','Email','INT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AP-CITI-GDFF','BeneAdviceType','Fax','FAX']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AP-CITI-GDFF','BeneAdviceType','Phone','SMS']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AP-CITI-GDFF','DeliveryMethod','Mailed','MAIL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AP-CITI-GDFF','DeliveryMethod','Returned','RET']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AP-CITI-GDFF','DeliveryMethod','Receipt','C/R']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AP-CITI-GDFF','DeliveryMethodCHK','SEND CHECK TO BENEFICIARY','1']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AP-CITI-GDFF','DeliveryMethodCHK','SEND CHECK TO CUSTOMER','3']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AP-CITI-GDFF','DeliveryMethodCHK','HOLD CHECK FOR CUSTOMER','4']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AP-CITI-GDFF','BeneAccountType','Current','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AP-CITI-GDFF','BeneAccountType','Savings','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AP-CITI-GDFF','BeneAccountType','Cash Credit','04']);
        
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AP-CITI-GDFF','BeneBankRoutingMethod','NEFT','NEFT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AP-CITI-GDFF','BeneBankRoutingMethod','EFT','EFT']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('AP-CITI-GDFF'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_AP_CITI_GDFF();
                break;
            case ('AP-CITI-GDFF-TH'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_AP_CITI_GDFF_TH();
                break;
            case ('AP-CITI-GDFF-IN'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_AP_CITI_GDFF_IN();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_AP_CITI_GDFF</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_AP_CITI_GDFF()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AP-CITI-GDFF','AP-CITI-GDFF','DFT','BeneAdviceType','Bene Advice Type',0,'BeneAdviceType','',0,'','','Payment Details > Field No.72 Advice Media/Bene Advice Type']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AP-CITI-GDFF','AP-CITI-GDFF','EFT','BeneAdviceType','Bene Advice Type',0,'BeneAdviceType','',0,'','','Payment Details > Field No.72 Advice Media/Bene Advice Type']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AP-CITI-GDFF','AP-CITI-GDFF','BKT','BeneAdviceType','Bene Advice Type',0,'BeneAdviceType','',0,'','','Payment Details > Field No.72 Advice Media/Bene Advice Type']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AP-CITI-GDFF','AP-CITI-GDFF','EFT','IntrBankRoutingMtd','Intermediary Bank Routing Method',0,'IntrBankRoutingMtd','',0,'','','Payment Details > Field No.47 Intermediary Bank Routing Method']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_AP_CITI_GDFF_TH</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_AP_CITI_GDFF_TH()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AP-CITI-GDFF','AP-CITI-GDFF-TH','PLC','BeneAdviceType','Bene Advice Type',0,'BeneAdviceType','',0,'','','Payment Details > Field No.72 Advice Media/Bene Advice Type']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AP-CITI-GDFF','AP-CITI-GDFF-TH','PTA','BeneAdviceType','Bene Advice Type',0,'BeneAdviceType','',0,'','','Payment Details > Field No.72 Advice Media/Bene Advice Type']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AP-CITI-GDFF','AP-CITI-GDFF-TH','PLC','DeliveryMethod','Delivery Method',0,'DeliveryMethod','',0,'','','Payment Details > Field No.91 Delivery Method']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_AP_CITI_GDFF_IN</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_AP_CITI_GDFF_IN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AP-CITI-GDFF','AP-CITI-GDFF-IN','CHK','DeliveryMethodCHK','Check Delivery Method',0,'DeliveryMethodCHK','',0,'','',' Details > Field No.91 > Delivery Method']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AP-CITI-GDFF','AP-CITI-GDFF-IN','DFT-NEFT','BeneAccountType','Beneficiary AccountType',0,'BeneAccountType','Current',0,'','','Details > Field No.24 > Beneficiary Account or Other ID Type']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AP-CITI-GDFF','AP-CITI-GDFF-IN','DFT-NEFT','BeneBankRoutingMethod','Beneficiary Bank Routing Method',0,'BeneBankRoutingMethod','NEFT',0,'','','Details > Field No.31 > Beneficiary Bank Routing Method']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AP-CITI-GDFF','AP-CITI-GDFF-IN','CHK','PrintLocation','Print Location',1,'PrintLocation','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',' Details > Field No.94 > Custom field 1']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AP-CITI-GDFF','AP-CITI-GDFF-IN','CHK','InstmntDetails1','Instrument Details 1',1,'InstmntDetails1','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',' Details > Field No.110   Custom field 17']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AP-CITI-GDFF','AP-CITI-GDFF-IN','CHK','InstmntDetails2','Instrument Details 2',1,'InstmntDetails2','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',' Details > Field No.111   Custom field 18']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AP-CITI-GDFF','*','FormatLookup','*','*','']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'AP-CITI-GDFF':
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('ChrgBr', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
            case 'AP-CITI-GDFF-TH':
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('ChrgBr', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>