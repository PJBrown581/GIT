<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_CC_ResponseCodeMapImportCSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_CC_ResponseCodeMapImportCSV
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    private static void main(Args _args)
    {
        SKS_CC_ResponseCodeMapImportCSV    importCSV;

        importCSV = SKS_CC_ResponseCodeMapImportCSV::construct();
        importCSV.importResponseCodeMapCSV();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static SKS_CC_ResponseCodeMapImportCSV construct()
    {
        return new SKS_CC_ResponseCodeMapImportCSV();
    }

]]></Source>
			</Method>
			<Method>
				<Name>importResponseCodeMapCSV</Name>
				<Source><![CDATA[
    public void importResponseCodeMapCSV()
    {
        SKS_CC_ResponseCodeMapping      lSKS_CC_ResponseCodeMapping;
        CommaStreamIo                   inFile;
        Filename                        filename;
        Container                       line;
        int                             linecnt;
        int                             totaladds;

        SKS_FileUploadDialogForm fileUploadDialog = new SKS_FileUploadDialogForm();
        fileUploadDialog.parmFileDialogCaptionForForm("@SKS6050");
        fileUploadDialog.parmFileTypesAccepted('.csv');
        fileUploadDialog.parmStrategyClassName(classstr(SKS_PP_CSVFileTemporaryStorageStrategy));
        FileUploadTemporaryStorageResult fileUploadResult = fileUploadDialog.getFileUploadResult();
        if (fileUploadResult != null && fileUploadResult.getUploadStatus())
        {
            filename = fileUploadResult.getDownloadUrl();
            System.IO.Stream readStream = fileUploadResult.openResult(); // This is used to upload mappings so it doesn't need to use FileHub
            inFile = CommaStreamIo::constructForRead(readStream);
        }
        else
        {
            return;
        }

        if (!inFile || infile.status() != IO_Status::Ok )
        {
            //file could not be opened
            throw error (strfmt("@SYS19312", filename));
        }

        ttsbegin;
        
        delete_from lSKS_CC_ResponseCodeMapping;

        infile.inRecordDelimiter('\n');
        infile.inFieldDelimiter(',');
        linecnt = 0;
        //Checking status of last operation..
        while (infile.status() == IO_status::Ok)
        {
            line = infile.read();
            linecnt++;
            if (line && linecnt > 1)            
            {
                lSKS_CC_ResponseCodeMapping.initValue();
                lSKS_CC_ResponseCodeMapping.PaymentGatewayName = conpeek(line, 1);
                lSKS_CC_ResponseCodeMapping.ResponseType = str2int(conpeek(line, 2));
                lSKS_CC_ResponseCodeMapping.TenderTypes = conpeek(line, 3);
                lSKS_CC_ResponseCodeMapping.AVSZipResponseCode = conpeek(line, 4);
                lSKS_CC_ResponseCodeMapping.AVSAddressResponseCode = conpeek(line, 5);
                lSKS_CC_ResponseCodeMapping.CreditCardAddressVerificationResult = str2int(conpeek(line, 6));
                lSKS_CC_ResponseCodeMapping.CreditCardAddressVerificationLevel = str2int(conpeek(line, 7));
                lSKS_CC_ResponseCodeMapping.CVCResponseCode = conpeek(line, 8);
                lSKS_CC_ResponseCodeMapping.CreditCardMSCVCResultCode = str2int(conpeek(line, 9));
               
                lSKS_CC_ResponseCodeMapping.doInsert();
                totaladds++;
            }
        }
        ttscommit;

        //report total adds, updates, and deletes
        info("@SYS54695" + ' ' + "@SYS108583" + ' :' + int2str(totaladds));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>