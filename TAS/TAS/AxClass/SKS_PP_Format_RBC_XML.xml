<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_RBC_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_RBC_XML extends SKS_PP_Format_BankGroup
{
    XmlDocument gXmlDocument;
    SKS_PP_Bank gSKS_PP_Bank;
    BankAccountTable gBankAccountTable;
    XmlNode gNodeRoot;
    int gNbOfTxs;
    real gCtrlSum;
    boolean gInPmt;
    date gPrevDate;
    SKS_PP_ChequeType gPrevSKS_PP_ChequeType;
    int gPmtInfIdCounter;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>node_MessageRoot</Name>
				<Source><![CDATA[
    protected void node_MessageRoot()
    {
        gNodeRoot = gXmlDocument.appendChild(gXmlDocument.createElement('Document'));
        SKS_EFT_Format::xmlsetAttributeText(gNodeRoot, 'xmlns', 'urn:iso:std:iso:20022:tech:xsd:pain.001.001.03');
        SKS_EFT_Format::xmlsetAttributeText(gNodeRoot, 'xmlns:xsi', 'http://www.w3.org/2001/XMLSchema-instance');
    }

]]></Source>
			</Method>
			<Method>
				<Name>sectionGroupHeader</Name>
				<Source><![CDATA[
    protected void sectionGroupHeader()
    {
        XmlNode locXMLNode, locTempNode, locTempNode1, locTempNode2;
        container company;
        if(mPrevBankAccount != mSKS_PP_FileDetail.BnkBankAcct
            || mSKS_PP_FileDetail.ChkDocDate != gPrevDate
            || mSKS_PP_FileDetail.ChkType != gPrevSKS_PP_ChequeType)
        {
    
    
            company = [mSKS_PP_FileDetail.ChkCpnyId];
            if(mPrevBankAccount != mSKS_PP_FileDetail.BnkBankAcct)
            {
                gSKS_PP_Bank = null;
                gBankAccountTable = null;
                select crossCompany:company gBankAccountTable
                join gSKS_PP_Bank
                where gSKS_PP_Bank.BankAccountId == gBankAccountTable.AccountID
                    && gSKS_PP_Bank.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;
            }
    
            gPrevDate = mSKS_PP_FileDetail.ChkDocDate;
            gPrevSKS_PP_ChequeType = mSKS_PP_FileDetail.ChkType;
            gPmtInfIdCounter++;
    
    
        locXMLNode = gNodeRoot.selectSingleNode('//CstmrCdtTrfInitn');
        locXMLNode = SKS_EFT_Format::xmlAppendChildNodeText(
                        gXmlDocument,
                        locXMLNode,
                        'PmtInf',
                        '',
                        35,
                        true);
        //this node has no children so there is no reason to catch the return
        SKS_EFT_Format::xmlAppendChildNodeText(
                        gXmlDocument,
                        locXMLNode,
                        'PmtInfId',
                        strReplace(strReplace(mSKS_PP_File.FileNbr + '-' + gSKS_PP_Bank.BankAccountId, '-', '_'),' ','_') + '_' + int2str(gPmtInfIdCounter),
                        35,
                        true);
        //this node has no children so there is no reason to catch the return
        SKS_EFT_Format::xmlAppendChildNodeText(
                        gXmlDocument,
                        locXMLNode,
                        'PmtMtd',
                        'CHK',
                        3,
                        true);
        //this node has no children so there is no reason to catch the return
        SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locXMLNode,
                    'ReqdExctnDt',
                    SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_PP_FileDetail.ChkDocDate,DateSeparator::Hyphen),
                    10,
                    true);
        //this node has no children so there is no reason to catch the return
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locXMLNode,
                    'Dbtr',
                    '',
                    0,
                    true);
                    SKS_EFT_Format::xmlAppendChildNodeText(
                                gXmlDocument,
                                locTempNode,//NOTE: here we are adding a child to the previous node
                                'Nm',
                                gSKS_PP_Bank.PP04,
                                0,
                                true);
                    locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                                gXmlDocument,
                                locTempNode,//NOTE: here we are adding a child to the previous node
                                'Id',
                                '',
                                0,
                                true);
                        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                                    gXmlDocument,
                                    locTempNode,//NOTE: here we are adding a child to the previous node
                                    'OrgId',
                                    '',
                                    0,
                                    true);
                            locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                                        gXmlDocument,
                                        locTempNode,//NOTE: here we are adding a child to the previous node
                                        'Othr',
                                        '',
                                        0,
                                        true);
                                SKS_EFT_Format::xmlAppendChildNodeText(
                                            gXmlDocument,
                                            locTempNode,//NOTE: here we are adding a child to the previous node
                                            'Id',
                                            gSKS_PP_Bank.PP02,
                                            9,
                                            true);
                                    locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                                                gXmlDocument,
                                                locTempNode,//NOTE: here we are adding a child to the previous node
                                                'SchmeNm',
                                                '',
                                                0,
                                                true);
                                            SKS_EFT_Format::xmlAppendChildNodeText(
                                                        gXmlDocument,
                                                        locTempNode,//NOTE: here we are adding a child to the previous node
                                                        'Cd',
                                                        'BANK',
                                                        4,
                                                        true);
        //this node has no children so there is no reason to catch the return
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locXMLNode,
                    'DbtrAcct',
                    '',
                    0,
                    true);
                    locTempNode2 = SKS_EFT_Format::xmlAppendChildNodeText(
                        gXmlDocument,
                        locTempNode,
                        'Id',
                        '',
                        0,
                        true);
                        locTempNode1 = SKS_EFT_Format::xmlAppendChildNodeText(
                            gXmlDocument,
                            locTempNode2,
                            'Othr',
                            '',
                            0,
                            true);
                            SKS_EFT_Format::xmlAppendChildNodeText(
                                gXmlDocument,
                                locTempNode1,
                                'Id',
                                mSKS_PP_FileDetail.BnkBankAcct,
                                7,
                                true);
                    SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locTempNode,
                    'Ccy',
                    gBankAccountTable.CurrencyCode,
                    3,
                    true);
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locXMLNode,
                    'DbtrAgt',
                    '',
                    0,
                    true);
                    locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                            gXmlDocument,
                            locTempNode,
                            'FinInstnId',
                            '',
                            0,
                            true);
                        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                                gXmlDocument,
                                locTempNode,
                                'ClrSysMmbId',
                                '',
                                0,
                                true);
                        locXMLNode = SKS_EFT_Format::xmlAppendChildNodeText(
                                    gXmlDocument,
                                    locTempNode,
                                    'ClrSysId',
                                    '',
                                    0,
                                    true);
                            SKS_EFT_Format::xmlAppendChildNodeText(
                                        gXmlDocument,
                                        locXMLNode,
                                        'Cd',
                                        'CACPA',
                                        5,
                                        true);
                        SKS_EFT_Format::xmlAppendChildNodeText(
                                    gXmlDocument,
                                    locTempNode,
                                    'MmbId',
                                    mSKS_PP_FileDetail.BnkBankTransit,
                                    9,
                                    true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    protected void selectPaymentRecords()
    {
        select * from mSKS_PP_FileDetail
            order by mSKS_PP_FileDetail.BnkBankAcct,
                    mSKS_PP_FileDetail.ChkDocDate,
                    mSKS_PP_FileDetail.ChkType
            where mSKS_PP_FileDetail.FileNbr == mFileNumber
                    && mSKS_PP_FileDetail.RecSection == SKS_PP_RecSection::Payments;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    public str txtDetail()
    {
        XmlNode locTempNode;
        XmlNodeList locXmlNodeList;
        int locMostRecentNodeIndex;
        XmlNode locXMLNode;
        int Mult = 1;
        str serviceLvlPrtry;
    
        gNbOfTxs++;
        gCtrlSum += mSKS_PP_FileDetail.ChkCuryAmt;
    
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            if(mSKS_PP_FileDetail.ChkCuryAmt < 0)
            {
                Mult = -1;
            }

           
            if(mSKS_PP_FileDetail.ChkType == SKS_PP_ChequeType::CancelledCheque)
            {
                serviceLvlPrtry = 'PM310';
            }
            else
            {
                serviceLvlPrtry = 'PM490';
            }
        }
        else
        {
            serviceLvlPrtry = 'PMH';
        }
    
        locXmlNodeList = gNodeRoot.selectNodes('//CstmrCdtTrfInitn/PmtInf');
        locMostRecentNodeIndex = locXmlNodeList.length();
        locXMLNode = locXMLNodeList.item(locMostRecentNodeIndex - 1);
        locXMLNode = SKS_EFT_Format::xmlAppendChildNodeText(
            gXmlDocument,
            locXMLNode,
            'CdtTrfTxInf',
            '',
            0,
            true);
            locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locXMLNode,
                    'PmtId',
                    '',
                    0,
                    true);
                SKS_EFT_Format::xmlAppendChildNodeText(
                        gXmlDocument,
                        locTempNode,
                        'EndToEndId',
                        mSKS_PP_FileDetail.ChkRefNbr,
                        8,
                        true);
            locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                            gXmlDocument,
                            locXMLNode,
                            'PmtTpInf',
                            '',
                            0,
                            true);
            locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                                        gXmlDocument,
                                        locTempNode,//NOTE: here we are adding a child to the previous node
                                        'SvcLvl',
                                        '',
                                        0,
                                        true);
            SKS_EFT_Format::xmlAppendChildNodeText(
                                                gXmlDocument,
                                                locTempNode,//NOTE: here we are adding a child to the previous node
                                                'Prtry',
                                                serviceLvlPrtry,
                                                5,
                                                true);

            locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locXMLNode,
                    'Amt',
                    '',
                    0,
                    true);
                locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                        gXmlDocument,
                        locTempNode,
                        'InstdAmt',
                        Num2Str(mSKS_PP_FileDetail.ChkCuryAmt * Mult,0, 2, 1,0),
                        10,
                        true);
                        SKS_EFT_Format::xmlsetAttributeText(locTempNode, 'Ccy', strUpr(gBankAccountTable.CurrencyCode));
            if(mSKS_PP_FileDetail.ChkRefNbr)
            {
                locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                        gXmlDocument,
                        locXMLNode,
                        'ChqInstr',
                        '',
                        0,
                        true);
                    SKS_EFT_Format::xmlAppendChildNodeText(
                            gXmlDocument,
                            locTempNode,
                            'ChqNb',
                            mSKS_PP_FileDetail.ChkRefNbr,
                            8,
                            false);
            }
            locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locXMLNode,
                    'Cdtr',
                    '',
                    0,
                    true);
                SKS_EFT_Format::xmlAppendChildNodeText(
                            gXmlDocument,
                            locTempNode,
                            'Nm',
                            mSKS_PP_FileDetail.VendName,
                            60,
                            true);
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtFormatHeader</Name>
				<Source><![CDATA[
    protected str txtFormatHeader()
    {
        XmlNode locTempNode;
        container company;
        gXmlDocument = XmlDocument::newBlank();
        this.node_MessageRoot();
        gNbOfTxs = 0;
        gInPmt = false;
    
    
        company = [mSKS_PP_FileDetail.ChkCpnyId];
        select crossCompany:company gBankAccountTable
            join    gSKS_PP_Bank
            where gSKS_PP_Bank.BankAccountId == gBankAccountTable.AccountID
                && gSKS_PP_Bank.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;
    
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    gNodeRoot,
                    'CstmrCdtTrfInitn',
                    '',
                    0,
                        true);
        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locTempNode,
                    'GrpHdr',
                    '',
                    0,
                    true);
                        //Assign Child Nodes
                        //this node has no children so there is no reason to catch the return
                    SKS_EFT_Format::xmlAppendChildNodeText(
                    gXmlDocument,
                    locTempNode,
                    'MsgId',
                    mSKS_PP_File.FileNbr,
                    35,
                    true);
    
                    //this node has no children so there is no reason to catch the return
                    SKS_EFT_Format::xmlAppendChildNodeText(
                                    gXmlDocument,
                                    locTempNode,
                                    'CreDtTm',
                                    datetime2str(mSKS_PP_File.createdDateTime, DateFlags::None),
                                    19,
                                    true);
    
                    //this node has no children so there is no reason to catch the return
                    SKS_EFT_Format::xmlAppendChildNodeText(
                                    gXmlDocument,
                                    locTempNode,
                                    'NbOfTxs',
                                    '',
                                    15,
                                    true);
                    //this node has no children so there is no reason to catch the return
                    SKS_EFT_Format::xmlAppendChildNodeText(
                                    gXmlDocument,
                                    locTempNode,
                                    'CtrlSum',
                                    '',
                                    18,
                                    true);
                        //InitgPty
                    locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                                    gXmlDocument,
                                    locTempNode,
                                    'InitgPty',
                                    '',
                                    0,
                                    true);
                                    locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                                            gXmlDocument,
                                            locTempNode,
                                            'Id',
                                            '',
                                            0,
                                            true);
                                        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                                                    gXmlDocument,
                                                    locTempNode,
                                                    'OrgId',
                                                    '',
                                                    0,
                                                    true);
    
                                                if(gBankAccountTable.SWIFTNo != '')
                                                {
                                                    locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                                                        gXmlDocument,
                                                        locTempNode,
                                                        'BIC',
                                                        gBankAccountTable.SWIFTNo,
                                                        11,
                                                        true);
                                                }
                                                else
                                                {
                                                    locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                                                            gXmlDocument,
                                                            locTempNode,
                                                            'Othr',
                                                            '',
                                                            0,
                                                            true);
                                                        locTempNode = SKS_EFT_Format::xmlAppendChildNodeText(
                                                                gXmlDocument,
                                                                locTempNode,
                                                                'Id',
                                                                gSKS_PP_Bank.PP01,
                                                                16,
                                                                true);
                                                }
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtFormatTrailer</Name>
				<Source><![CDATA[
    protected str txtFormatTrailer()
    {
        XmlElement locXmlNode;
        utcDateTime locCreatedDateTime;
        str locTemp;
    
        locCreatedDateTime = DateTimeUtil::utcNow();
    
        locXMLNode = gNodeRoot.selectSingleNode('//CstmrCdtTrfInitn/GrpHdr/CreDtTm');
        locTemp = int2str(DateTimeUtil::year(locCreatedDateTime))
                    + '-' + SKS_PP_StringFormats::strFill(2,int2str(DateTimeUtil::month(locCreatedDateTime)),SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)
                    + '-' + SKS_PP_StringFormats::strFill(2,int2str(DateTimeUtil::day(locCreatedDateTime)),SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)
                    + 'T' + SKS_PP_StringFormats::strFill(2,int2str(DateTimeUtil::hour(locCreatedDateTime)),SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)
                    + ':' + SKS_PP_StringFormats::strFill(2,int2str(DateTimeUtil::minute(locCreatedDateTime)),SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)
                    + ':' + SKS_PP_StringFormats::strFill(2,int2str(DateTimeUtil::second(locCreatedDateTime)),SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left);
        locXmlNode.innerText(locTemp);
        locXMLNode = gNodeRoot.selectSingleNode('//CstmrCdtTrfInitn/GrpHdr/NbOfTxs');
        locXmlNode.innerText(int2str(gNbOfTxs));
        locXMLNode = gNodeRoot.selectSingleNode('//CstmrCdtTrfInitn/GrpHdr/CtrlSum');
        locXmlNode.innerText(num2str(gCtrlSum,1,2,DecimalSeparator::Dot, ThousandSeparator::None));
    
        return gXmlDocument.toString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>