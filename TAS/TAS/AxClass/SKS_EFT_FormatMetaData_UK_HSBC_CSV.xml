<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_UK_HSBC_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_UK_HSBC_CSV Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_UK_HSBC_CSV Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220715';
        dataContractVersion = '1.0';
        conFormatID = ['UK-HSBC-CSV-CN'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'UK - HSBC - CSV - China',0,'','','UK-HSBC-CSV-CN',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-HSBC-CSV',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('UK-HSBC-CSV-CN'):
                paymSpecList = this.getPaymSpecsMetaData_UK_HSBC_CSV_CN();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_HSBC_CSV_CN</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_HSBC_CSV_CN()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Payment',1,'PMT','','PMT','TRADE PAY',0,'UK-HSBC-CSV-CN',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('UK-HSBC-CSV-CN'):
                notesList = this.getNotesMetaData_UK_HSBC_CSV_CN();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_HSBC_CSV_CN</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_HSBC_CSV_CN()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-HSBC-CSV-CN','PMT','-Accounts payable > Common > Vendors > All vendors > Contact information(tab):--Email Address is set on the E-mail address field of the contact information tab.:--SMS/Fax Country Number is stored on the International calling code field.:--Fax Area Code is stored on the Extension field.:--Phone Number is stored on the Phone field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('UK-HSBC-CSV-CN'):
                validationsList = this.getValidationsMetaData_UK_HSBC_CSV_CN();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_HSBC_CSV_CN</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_HSBC_CSV_CN()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-HSBC-CSV-CN','PMT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','BATHDR Record > Customer Name','Customer Name','15','WOrdPartyName','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-HSBC-CSV-CN','PMT','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','BATHDR records > Payment Account Number','Payment Account Number',0,'AccountNum','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-HSBC-CSV-CN','PMT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','SECPTY records > Beneficiary Account Number','Beneficiary Account Number','9','AccountNum','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-HSBC-CSV-CN','PMT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','SECPTY records > Beneficiary Name','Beneficiary Name','16','WBeneName','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-HSBC-CSV-CN','PMT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','ADV records > Postal code','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-HSBC-CSV-CN','PMT','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','SECPTY records > Beneficiary Bank Name','Vendor Bank Name','16','WBenBankName','','',1,1,'','24',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-HSBC-CSV-CN','PMT','','Vendor bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','SECPTY records > Beneficiary Bank Country Location','Country related to vendor bank','16','WBenBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-HSBC-CSV-CN','PMT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','ADV records > Postal Address','Postal Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-HSBC-CSV-CN','PMT','','Branch','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Branch','ADV records > Recipient Title Description','Recipient Title Description','16','WBenBankBranch','','',1,1,'',0,0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UK-HSBC-CSV','Charges','Charge Method']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UK-HSBC-CSV','BenAdvice','Beneficiary Advice']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UK-HSBC-CSV','ChannelSelectFlag','Channel Select Flag']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UK-HSBC-CSV','BenBankAccountType','Beneficiary bank account type']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UK-HSBC-CSV','BenBankAdvice','Beneficiary Bank Advice']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-HSBC-CSV','Charges','Our','OUR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-HSBC-CSV','Charges','Shared','SHA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-HSBC-CSV','Charges','Beneficiary','BEN']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-HSBC-CSV','BenAdvice','Advice attached','Y']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-HSBC-CSV','BenAdvice','Advice not attached','N']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-HSBC-CSV','ChannelSelectFlag','Email-PDF','Email-PDF']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-HSBC-CSV','ChannelSelectFlag','Email-CSV','Email-CSV']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-HSBC-CSV','ChannelSelectFlag','SMS/Fax-SMS','SMS/Fax-SMS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-HSBC-CSV','ChannelSelectFlag','SMS/Fax-Fax','SMS/Fax-Fax']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-HSBC-CSV','ChannelSelectFlag','Postal','Postal']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-HSBC-CSV','BenBankAccountType','MR','M']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-HSBC-CSV','BenBankAccountType','MRS','R']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-HSBC-CSV','BenBankAccountType','MISS','S']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-HSBC-CSV','BenBankAccountType','OTHER','O']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-HSBC-CSV','BenBankAdvice','Full Advice','F']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-HSBC-CSV','BenBankAdvice','Short Advice','S']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_HSBC_CSV_CN</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_HSBC_CSV_CN()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-HSBC-CSV','UK-HSBC-CSV-CN','PMT','Charges','Charge Method',0,'Charges','',0,'','','Charge Method']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-HSBC-CSV','UK-HSBC-CSV-CN','PMT','BenAdvice','Beneficiary Advice',0,'BenAdvice','',0,'','','Beneficiary Advice']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-HSBC-CSV','UK-HSBC-CSV-CN','PMT','ChannelSelectFlag','Channel Select Flag',0,'ChannelSelectFlag','',0,'','','Channel Select Flag']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-HSBC-CSV','UK-HSBC-CSV-CN','PMT','BenBankAccountType','Beneficiary bank account type',0,'BenBankAccountType','',0,'','','Beneficiary bank account type']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-HSBC-CSV','UK-HSBC-CSV-CN','PMT','BenBankAdvice','Beneficiary Bank Advice',0,'BenBankAdvice','',0,'','','Beneficiary Bank Advice']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-HSBC-CSV','*','FormatValidations','*','16','WBenBankAcctType']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-HSBC-CSV','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-HSBC-CSV','*','FormatValidations','*','16','WChargesIndic']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-HSBC-CSV','*','FormatValidations','*','16','WBeneAdvice']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-HSBC-CSV','*','FormatValidations','*','16','WBeneMailHandling']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-HSBC-CSV','*','FormatValidations','*','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['UK-HSBC-CSV','*','FormatValidations','*','15','W02']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-HSBC-CSV','UK-HSBC-CSV-CN','HSBCnetID','HSBCnet ID',1,'HSBCnetID','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','IFH Record > HSBCnet ID']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-HSBC-CSV','UK-HSBC-CSV-CN','AdvicingFreetext','Advicing Freetext',1,'AdvicingFreetext','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','SECPTY Record > Advicing Freetext']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('UK-HSBC-CSV-CN'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('HSBCnetID', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('AdvicingFreetext', gSKS_EFT_Bank.W02);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'UK-HSBC-CSV-CN':
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneAdvice)
                {
                    this.updateVendorFields('BenAdvice', gSKS_EFT_VendorPaym.WBeneAdvice, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('ChannelSelectFlag', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                if(gSKS_EFT_VendorPaym.WBenBankAcctType)
                {
                    this.updateVendorFields('BenBankAccountType', gSKS_EFT_VendorPaym.WBenBankAcctType, true);
                }
                if(gSKS_EFT_VendorPaym.WBenBankAdvice)
                {
                    this.updateVendorFields('BenBankAdvice', gSKS_EFT_VendorPaym.WBenBankAdvice, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>