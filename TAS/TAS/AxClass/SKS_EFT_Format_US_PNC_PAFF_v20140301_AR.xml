<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_PNC_PAFF_v20140301_AR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// class SKS_EFT_Format_US_PNC_PAFF_v20140301_AR  extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_US_PNC_PAFF_v20140301_AR  extends SKS_EFT_Format
{
    #define.FormatVersion('20230519')
    int mACHRecords;
    int mPaymentRecords;
    int mTotalRecords;
    str previousSendorId;
    int i=1;
    container mconPaymentRecords;
    container mconPaymentAmount;
    container mconTotalRecords;
    container mconSenderId;
    int ctrlCnt = 0;

    
    AmountMST mACHAmount;
    AmountMST mPaymentAmount;
    AmountMST mInvoiceAdjusted;
    AmountMST mInvoiceTotal;
    
    #define.ACHCTX('ACH-CTX')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatMoney</Name>
				<Source><![CDATA[
    /// <summary>
    /// Format Money
    /// </summary>
    /// <param name = "_Amt">Amount</param>
    /// <param name = "_length">Length</param>
    /// <returns>FormatedAmt</returns>
    str formatMoney(real _Amt, int _length)
    {
        str     formatedAmt;
        
        formatedAmt = SKS_PP_StringFormats::strMoney(_Amt, _length);
        
        if(_Amt < 0)
        {
            formatedAmt = '-' + strRem(formatedAmt, '-');
        }
        return formatedAmt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    //Header Record
    //  ACH Payment Record
    //      ACH Remittance Header Record
    //          ACH Remittance Detail Record (AP0, AP2, GE0)
    //          ACH Remittance Trailer Record
    //File Trailer Record
        
    void formatStructure()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        boolean skipHeader = false;
        str value;
        
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            mSKS_EFT_FileDetail_BankAccount = SKS_EFT_FileDetail_BankAccount::find(mSKS_EFT_FileDetail.RecId);

            if(previousSendorId != mSKS_EFT_FileDetail.FileACHCompanyId && i !=1)
            {
                this.rec_Trailer();
            }
            i++;

            if(previousSendorId != mSKS_EFT_FileDetail.FileACHCompanyId)
            {
                skipHeader =false;
               
            }
            //Header Record
            if(!skipHeader)
            {
                this.rec_Header();
                skipHeader = true;
            }
        
            //  ACH Payment Record
            this.rec_ACHPayment();
                    
            //ACH Remittance Header Record
            this.rec_ACHRemHeader();

            while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
            {
                value = SKS_EFT_Format::getCodelookupvalue('BussinessApplFormat', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);

                //ACH Remittance Detail Record (AP0, AP2, GE0)
                if(strUpr(value) == 'AP0')
                {
                    this.rec_ACHRemDetailAP0(invSKS_EFT_FileDetail);
                }
                else if(strUpr(value) == 'AP2')
                {
                    this.rec_ACHRemDetailAP2(invSKS_EFT_FileDetail);
                }
                else if(strUpr(value) == 'FF0' || strUpr(value) == 'GE0')
                {
                    this.rec_ACHRemDetailGE0(invSKS_EFT_FileDetail);
                }
            }
            //ACH Remittance Trailer Record
            this.rec_ACHRemTrailer();
          
            next mSKS_EFT_FileDetail;
        }
       
        //File Trailer Record
        this.rec_Trailer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_ACHPayment</Name>
				<Source><![CDATA[
    /// <summary>
    /// ACH Payment
    /// </summary>
    //Field     Check Field Name                Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Payment Type                         3    4-  6
    // 3        Canadian Indicator                   1    7-  7
    // 4        Vendor Number                       10    8- 17
    // 5        Filler                               4   18- 21
    // 6        Currency Type                        3   22- 24
    // 7        Trace Number                        10   25- 34
    // 8        Payment Effective Date               8   35- 42
    // 9        Filler                               3   43- 45
    //10        Payment Amount                      10   46- 55
    //11        Reciever Name                       22   56- 77
    //12        Filler                              13   78- 90
    //13        Individual ID                       15   91-105
    //14        Filler                              20  106-125
    //15        Reciever Address 1                  35  126-160
    //16        Reciever Address 2                  35  161-195
    //17        Reciever Address 3                  35  196-230
    //18        Reciever City                       27  231-257
    //19        Reviever State                       2  258-259
    //20        Reciever Zip                         9  260-268
    //21        Filler                               4  269-272
    //22        Number of Remittance Lines           5  273-277
    //23        Filler                              10  278-287
    //24        Reciever ABA (Transit Routing)       9  288-296
    //25        Filler                               3  297-299
    //26        Reciever Account Number             17  300-316
    //27        ACH Tran Code                        2  317-318
    //28        ACH Type                             3  319-321
    //29        Discretionary Data                  20  322-341
    //30        Filler                               9  342-350
        
    void rec_ACHPayment()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        SKS_EFT_FileDetail  lSKS_EFT_FileDetail;
        int numofInvoices;

        mTotalRecords++;
        mPaymentRecords++;
        mACHRecords++;
        
        // 1        Record Identifier                    3    1-  3
        sb.Append('060');
        
        // 2        Payment Type                         3    4-  6
        sb.Append('ACH');
        
        // 3        Canadian Indicator                   1    7-  7
        if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CAD')
        {
            sb.Append('C');
        }
        else
        {
            sb.Append(' ');
        }
        
        // 4        Vendor Number                       10    8- 17
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_EFT_FileDetail.AccountNum, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 5        Filler                               4   18- 21
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 6        Currency Type                        3   22- 24
        sb.Append(SKS_PP_StringFormats::strFill(3, mSKS_EFT_FileDetail.PaymentCurrencyCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 7        Trace Number                        10   25- 34
        sb.Append(SKS_PP_StringFormats::strFill(10, this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        // 8        Payment Effective Date               8   35- 42
        sb.Append(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 9        Filler                               3   43- 45
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //10        Payment Amount                      10   46- 55
        mACHAmount += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        mPaymentAmount += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        
        sb.Append(this.formatMoney(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,10));
        
        //11        Reciever Name                       22   56- 77
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(22, this.CharacterReplacement(mSKS_EFT_FileDetail.AccountName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        //12        Filler                              13   78- 90
        sb.Append(SKS_PP_StringFormats::strFill(13, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //13        Individual ID                       15   91-105
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //14        Filler                              20  106-125
        sb.Append(SKS_PP_StringFormats::strFill(20, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        if(mSKS_EFT_FileDetail.AccountNum && mSKS_EFT_FileDetail.AccountType == LedgerJournalACType::Cust)
        {
            msks_EFT_FileDetail_CustAddress = sks_EFT_FileDetail_CustAddress::find(mSKS_EFT_FileDetail.RecId);
        }
        
        //15        Reciever Address 1                  35  126-160
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(msks_EFT_FileDetail_CustAddress.CustAddr), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        //16        Reciever Address 2                  35  161-195
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(msks_EFT_FileDetail_CustAddress.CustAddr2), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        //17        Reciever Address 3                  35  196-230
        sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //18        Reciever City                       27  231-257
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(27, this.CharacterReplacement(msks_EFT_FileDetail_CustAddress.CustCity), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        //19        Reviever State                       2  258-259
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(2, this.CharacterReplacement(msks_EFT_FileDetail_CustAddress.CustState), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        //20        Reciever Zip                         9  260-268
        sb.Append(SKS_PP_StringFormats::strFill(9, msks_EFT_FileDetail_CustAddress.CustZipPostal, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //21        Filler                               4  269-272
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //22        Number of Remittance Lines           5  273-277
        select count(Recid) from lSKS_EFT_FileDetail
                where lSKS_EFT_FileDetail.RecordSummaryRecID == mSKS_EFT_FileDetail.RecId && lSKS_EFT_FileDetail.PaymSpec == #ACHCTX;
        
        numofInvoices = int642int(lSKS_EFT_FileDetail.Recid);

        sb.Append(SKS_PP_StringFormats::strFill(5, int2Str(numofInvoices), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        //23        Filler                              10  278-287
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //24        Reciever ABA (Transit Routing)       9  288-296
        sb.Append(SKS_PP_StringFormats::strFill(9, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        //25        Filler                               3  297-299
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //26        Reciever Account Number             17  300-316
        sb.Append(SKS_PP_StringFormats::strFill(17, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //27        ACH Tran Code                        2  317-318
        if(mSKS_EFT_FileDetail.BankAcctType == BankAccountType::CheckingAccount)
        {
            if (mSKS_EFT_FileDetail.RecordType == SKS_EFT_RecordType::PreNote)
            {
                sb.Append('23');
            }
            else
            {
                sb.Append('27');
            }
        }
        else
        {
            if (mSKS_EFT_FileDetail.RecordType == SKS_EFT_RecordType::PreNote)
            {
                sb.Append('33');
            }
            else
            {
                sb.Append('32');
            }
        }
        
        //28        ACH Type                             3  319-321
        sb.Append(SKS_PP_StringFormats::strFill(3, 'CTX', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //29        Discretionary Data                  20  322-341
        sb.Append(SKS_PP_StringFormats::strFill(20, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //30        Filler                               9  342-350
        sb.Append(SKS_PP_StringFormats::strFill(9, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));

        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_ACHRemDetailAP0</Name>
				<Source><![CDATA[
    /// <summary>
    /// ACHRemDetailAP0
    /// </summary>
    /// <param name = "_invSKS_EFT_FileDetail">SKS_EFT_FileDetail</param>

    //Field     Check Field Name                Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Sub Record Identifier                2    4-  5
    // 3        Invoice Date                         8    6- 13
    // 4        Invoice Number                      20   14- 33
    // 5        Descriptive Text                    30   34- 63
    // 6        Invoice Gross Amount                13   64- 76
    // 7        Adjusted Amount                     13   77- 89
    // 8        Net Amount                          13   90-102
    // 9        Filler                             248  103-350
        
    void rec_ACHRemDetailAP0(SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        AmountMST grossAMT;

        mTotalRecords++;
        
        // 1        Record Identifier                    3    1-  3
        sb.Append('070');
        
        // 2        Sub Record Identifier                2    4-  5
        sb.Append('06');
        
        // 3        Invoice Date                         8    6- 13
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(_invSKS_EFT_FileDetail.InvoiceDate), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        // 4        Invoice Number                      20   14- 33
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(20, this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceNumber), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        // 5        Descriptive Text                    30   34- 63
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(30, this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceTransactionTxt), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        // 6        Invoice Gross Amount                13   64- 76
        grossAMT = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
        sb.Append(this.formatMoney(grossAMT, 13));
        
        // 7        Adjusted Amount                     13   77- 89
        sb.Append(this.formatMoney(_invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur, 13));
        
        // 8        Net Amount                          13   90-102
        sb.Append(this.formatMoney(_invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 13));
        
        // 9        Filler                             248  103-350
        sb.Append(SKS_PP_StringFormats::strFill(248, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        
        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_ACHRemHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// ACHRemHeader
    /// </summary>
    //Field     Check Field Name                Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Sub Record Identifier                2    4-  5
    // 3        Vendor Number                       10    6- 15
    // 4        Filler                             335   16-350
        
    void rec_ACHRemHeader()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        mTotalRecords++;
        
        // 1        Record Identifier                    3    1-  3
        sb.Append('070');
        
        // 2        Sub Record Identifier                2    4-  5
        sb.Append('01');
        
        // 3        Vendor Number                       10    6- 15
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_EFT_FileDetail.AccountNum, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 4        Filler                             335   16-350
        sb.Append(SKS_PP_StringFormats::strFill(335, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        
        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_ACHRemTrailer</Name>
				<Source><![CDATA[
    /// <summary>
    /// ACHRemTrailer
    /// </summary>
    //Field     Check Field Name                Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Sub Record Identifier                2    4-  5
    // 3        Filler                              26    6- 31
    // 4        Filler                             319   32-350
        
    void rec_ACHRemTrailer()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        mTotalRecords++;
        
        // 1        Record Identifier                    3    1-  3
        sb.Append('070');
        
        // 2        Sub Record Identifier                2    4-  5
        sb.Append('09');
        
        // 3        Filler                              26    6- 31
        sb.Append(SKS_PP_StringFormats::strFill(26, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        // 4        Filler                             319   32-350
        sb.Append(SKS_PP_StringFormats::strFill(319, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        
        mInvoiceTotal = 0;
        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Header</Name>
				<Source><![CDATA[
        /// <summary>
    /// Header
    /// </summary>
    /// <returns>true</returns>
    //Field Field Name                      Length  Postion
    //1     Record Identifier                    3    1-  3
    //2     Sender Identification Number        15    4- 18
    //3     Business Application Format          3   19- 21
    //4     Customer Name                       16   22- 37
    //5     Transmission Date                    8   38- 45
    //6     Transmission Time                    4   46- 49
    //7     Filler                             301   50-350

    boolean rec_Header()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        mTotalRecords++;
        
        //Field Field Name                      Length  Postion
        //1     Record Identifier                    3    1-  3
        sb.Append('010');
        
        //2     Sender Identification Number        15    4- 18
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(15, mSKS_EFT_FileDetail.FileACHCompanyId, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        previousSendorId = mSKS_EFT_FileDetail.FileACHCompanyId; //DevOps20671
        
        //3     Business Application Format          3   19- 21
        sb.Append(strUpr(this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BussinessApplFormat', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank))));
        
        //4     Customer Name                       16   22- 37
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(16, this.CharacterReplacement(mSKS_EFT_FileDetail.FileACHCompanyName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        //5     Transmission Date                    8   38- 45
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));//SKS_VSTS_14151
        
        //6     Transmission Time                    4   46- 49
        sb.Append(SKS_PP_StringFormats::strTimeHHMM());
        
        //7     Filler                             301   50-350
        sb.Append(SKS_PP_StringFormats::strFill(301, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Trailer</Name>
				<Source><![CDATA[
        /// <summary>
    /// Trailer
    /// </summary>
    /// <returns>True</returns>
    //Field     Field Name                      Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Total Dollar Amount of Checks       13    4- 16
    // 3        Total Records, Checks                7   17- 23
    // 4        Total Dollar Amount of ACHs         13   24- 36
    // 5        Total Records, ACHs                  7   37- 43
    // 6        Total Dollar amount of Wires        13   44- 56
    // 7        Total Records, Wires                 7   57- 63
    // 8        Total Dollar amound of Cards        13   64- 76
    // 9        Total Records, Cards                 7   77- 83
    //10        Total Payment Dollar Amounts        13   84- 96
    //11        Total Payment Records                7   97-103
    //12        Total File Dollar Amounts           13  104-116
    //13        Total File Records                   7  117-123
        
    boolean rec_Trailer()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        mTotalRecords++;
        ctrlCnt++;
        
        // 1        Record Identifier                    3    1-  3
        sb.Append('090');
        
        // 2        Total Dollar Amount of Checks       13    4- 16
        sb.Append(SKS_PP_StringFormats::strFill(13, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        // 3        Total Records, Checks                7   17- 23
        sb.Append(SKS_PP_StringFormats::strFill(7, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        // 4        Total Dollar Amount of ACHs         13   24- 36
        sb.Append(this.formatMoney(mACHAmount,13));
        
        // 5        Total Records, ACHs                  7   37- 43
        sb.Append(SKS_PP_StringFormats::strFill(7, int2str(mACHRecords), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        // 6        Total Dollar amount of Wires        13   44- 56
        sb.Append(SKS_PP_StringFormats::strFill(13, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        // 7        Total Records, Wires                 7   57- 63
        sb.Append(SKS_PP_StringFormats::strFill(7, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        // 8        Total Dollar amound of Cards        13   64- 76
        sb.Append(SKS_PP_StringFormats::strFill(13, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        // 9        Total Records, Cards                 7   77- 83
        sb.Append(SKS_PP_StringFormats::strFill(7, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        //10        Total Payment Dollar Amounts        13   84- 96
        sb.Append(this.formatMoney(mPaymentAmount,13));
        
        //11        Total Payment Records                7   97-103
        sb.Append(SKS_PP_StringFormats::strFill(7, int2str(mPaymentRecords), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        //12        Total File Dollar Amounts           13  104-116
        sb.Append(this.formatMoney(mPaymentAmount,13));
        
        //13        Total File Records                   7  117-123
        sb.Append(SKS_PP_StringFormats::strFill(7, int2str(mTotalRecords), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        //14        Filler                             227  124-350
        sb.Append(SKS_PP_StringFormats::strFill(227, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        
        this.fileWrite(sb.ToString());

        mconPaymentAmount += mPaymentAmount;
        mconPaymentRecords += mPaymentRecords;
        mconTotalRecords += mTotalRecords;
        mconSenderId += previousSendorId;


        mACHAmount = 0;
        mACHRecords = 0;
        mPaymentAmount = 0;
        mPaymentRecords = 0;
        mTotalRecords = 0;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_ACHRemDetailAP2</Name>
				<Source><![CDATA[
        /// <summary>
    /// ACHRemDetailAP2
    /// </summary>
    /// <param name = "_invSKS_EFT_FileDetail">SKS_EFT_FileDetail</param>
    //Field     Check Field Name                Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Sub Record Identifier                2    4-  5
    // 3        Invoice Date                         8    6- 13
    // 4        Invoice Number                      17   14- 30
    // 5        Invoice Gross Amount                13   31- 43
    // 6        Invoice Amount Paid                 13   44- 56
    // 7        Discount                            13   57- 69
    // 8        Net Amount                          13   70- 82
    // 9        Filler                             268   83-350
        
    void rec_ACHRemDetailAP2(SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        AmountMST grossAMT;

        mTotalRecords++;
        
        // 1        Record Identifier                    3    1-  3
        sb.Append('070');
        
        // 2        Sub Record Identifier                2    4-  5
        sb.Append('06');
        
        // 3        Invoice Date                         8    6- 13
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(_invSKS_EFT_FileDetail.InvoiceDate), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        // 4        Invoice Number                      20   14- 33
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(17, this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceNumber), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        // 5        Invoice Gross Amount                13   31- 43
        grossAMT = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
        sb.Append(this.formatMoney(-1 * grossAMT, 13));
        
        // 6        Invoice Amount Paid                 13   44- 56
        sb.Append(this.formatMoney(-1 *_invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 13));
        
        // 7        Discount                            13   57- 69
        mInvoiceAdjusted += _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
        sb.Append(this.formatMoney(-1 * _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur, 13));
        
        // 8        Net Amount                          13   70- 82
        sb.Append(this.formatMoney(-1 * _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 13));
        
        // 9        Filler                             268   83-350
        sb.Append(SKS_PP_StringFormats::strFill(268, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        
        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_ACHRemDetailGE0</Name>
				<Source><![CDATA[
    /// <summary>
    /// ACHRemDetailGE0
    /// </summary>
    /// <param name = "_invSKS_EFT_FileDetail">SKS_EFT_FileDetail</param>
    //Field     Check Field Name                Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Sub Record Identifier                2    4-  5
    // 3        Invoice Date                         8    6- 13
    // 4        Descriptive Text                    50   14- 63
    // 5        Invoice Gross Amount                13   64- 76
    // 6        Filler                             274   77-350
        
    void rec_ACHRemDetailGE0(SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        AmountMST grossAMT;

        mTotalRecords++;

        // 1        Record Identifier                    3    1-  3
        sb.Append('070');
        
        // 2        Sub Record Identifier                2    4-  5
        sb.Append('06');
        
        // 3        Invoice Date                         8    6- 13
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(_invSKS_EFT_FileDetail.InvoiceDate), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        // 4        Descriptive Text                    50   14- 63
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(50, this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceTransactionTxt), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));

        // 5        Invoice Gross Amount                13   64- 76
        grossAMT = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
        sb.Append(this.formatMoney(-1 * grossAMT, 13));

        // 6        Filler                             274   77-350
        sb.Append(SKS_PP_StringFormats::strFill(274, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));

        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        
        select * from mSKS_EFT_FileDetail
                    order by mSKS_EFT_FileDetail.RecordSection,
                        mSKS_EFT_FileDetail.PaymMode,
                        mSKS_EFT_FileDetail.PaymSpec,
                        mSKS_EFT_FileDetail.EffectiveDate,
                        mSKS_EFT_FileDetail.DepCountryRegionId,
                        mSKS_EFT_FileDetail.RecordType,
                        mSKS_EFT_FileDetail.BankAccountId,
                        mSKS_EFT_FileDetail.AccountNum,
                        mSKS_EFT_FileDetail.PaymentReference,
                        mSKS_EFT_FileDetail.RecId
                    where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                        mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                        mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>