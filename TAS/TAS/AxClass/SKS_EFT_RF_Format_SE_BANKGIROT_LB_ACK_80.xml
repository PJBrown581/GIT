<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_RF_Format_SE_BANKGIROT_LB_ACK_80</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This Inbound format is developed for the Outbound format SE-BANKGIROT-LB-80
/// </summary>
class SKS_EFT_RF_Format_SE_BANKGIROT_LB_ACK_80 extends SKS_EFT_RF_Format
{
    //Class Variables
    //primities
    boolean gErrorsExist;
    SKS_EFT_RF_Transaction gSKS_EFT_RF_Transaction;
    str statusValue;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFile</Name>
				<Source><![CDATA[
    public SKS_EFT_RF_File getFile(str _filename, boolean _serverPath, SKS_BF_BankIntType _SKS_BF_BankIntType = SKS_BF_BankIntType::FileHubLocal)
    {
        SKS_EB_FileHub locSKS_EB_FileHub = SKS_EB_FileHub::construct(_SKS_BF_BankIntType);
        System.String locString;
        System.IO.StreamReader locStreamReader;
    
        boolean pos1to2Transactioncode11 = false;
        boolean pos19to40Layoutname = false;
        boolean pos1to2Transactioncode14To54 = false;           //SKS#DevOps:15480
        boolean pos61to80NumericReferenceNbr = false;

        //Setup filestream
        locSKS_EB_FileHub.setFileName(_filename);
        locSKS_EB_FileHub.runFileInquire();
        if(!locSKS_EB_FileHub.attrFileExists())
        {
            // The file %1 does not exist.
            error(strfmt("@SYS62207", _filename));
            return null;
        }
        locSKS_EB_FileHub.runFileLoad(_filename);
        locSKS_EB_FileHub.StreamInit();
        locStreamReader = new System.IO.StreamReader(locSKS_EB_FileHub.streamGet(), System.Text.Encoding::GetEncoding(1252), true);

        //priming read
        locString = locStreamReader.ReadLine();

        if(!mSKS_EFT_RF_File)
        {
            mSKS_EFT_RF_File = new SKS_EFT_RF_File();
        }

        mSKS_EFT_RF_SentFile = new SKS_EFT_RF_SentFile();

        while(locString != null)
        {
            if(!System.String::IsNullOrEmpty(locString))
            {
                if(SKS_PP_StringFormats::strSub(locString, 1, 2) == '11')
                {
                    pos1to2Transactioncode11 = true;
                }
                if(SKS_PP_StringFormats::strSub(locString, 19, 22) == 'LEVERANTÖRSBETALNINGAR')
                {
                    pos19to40Layoutname = true;
                }

                if(pos1to2Transactioncode11 && pos19to40Layoutname)
                {
                    this.processRecord11(locString);
                }

                if(SKS_PP_StringFormats::strSub(locString, 1, 2) == '14' ||
                   SKS_PP_StringFormats::strSub(locString, 1, 2) == '15' ||
                   SKS_PP_StringFormats::strSub(locString, 1, 2) == '16' ||
                   SKS_PP_StringFormats::strSub(locString, 1, 2) == '17' ||
                   SKS_PP_StringFormats::strSub(locString, 1, 2) == '54')           //SKS#DevOps:16773
                {
                    pos1to2Transactioncode14To54 = true;

                    if(SKS_PP_StringFormats::strSub(locString, 61, 20) != '')
                    {
                        pos61to80NumericReferenceNbr = true;
                    }
                }

                if(pos1to2Transactioncode14To54 && pos61to80NumericReferenceNbr)    //SKS#DevOps:15480
                {
                    this.processRecord14To54(locString);
                }

            }
            locString = locStreamReader.ReadLine();
        }

        //must use the getSKS_EFT_RF_File() method becuase, if any pending mSKS_EFT_RF_SentFile have yet to be pushed into the list, this will do it.
        locStreamReader.Close();
        if(gErrorsExist)
        {
            mSKS_EFT_RF_File = null;
        }

        return this.getSKS_EFT_RF_File();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatId</Name>
				<Source><![CDATA[
    public str getFormatId(str _filename, boolean _serverPath, SKS_BF_BankIntType _SKS_BF_BankIntType = SKS_BF_BankIntType::FileHubLocal)
    {

        str rtnval = '';
        int classId;
        int locRecLen;
        //BEGIN VALIDATION VARIABLES
        //BEGIN QUALIFIERS
        boolean pos1to2Transactioncode11 = false;
        boolean pos19to40Layoutname = false;
        boolean pos1to2Transactioncode14To54 = false;              //SKS#DevOps:15480
        boolean pos61to80NumericReferenceNbr = false;
        //BEGIN DISQUALIFIER VARIABLES
        //none

        //END VALIDATION VARIABLES
        SKS_EB_FileHub locSKS_EB_FileHub = SKS_EB_FileHub::construct(_SKS_BF_BankIntType);
        System.String locString;
        System.IO.StreamReader locStreamReader;
    
        //Setup filestream
        locSKS_EB_FileHub.setFileName(_filename);
        locSKS_EB_FileHub.runFileInquire();
        if(!locSKS_EB_FileHub.attrFileExists())
        {
            // The file %1 does not exist.
            error(strfmt("@SYS62207", _filename));
            return null;
        }        
        locSKS_EB_FileHub.runFileLoad(_filename);
        locSKS_EB_FileHub.StreamInit();
        locStreamReader = new System.IO.StreamReader(locSKS_EB_FileHub.streamGet(), System.Text.Encoding::GetEncoding(1252), true);
        //priming read
               
   
        while(!locStreamReader.get_EndOfStream())
        {
            locString = locStreamReader.ReadLine();

            if(!System.String::IsNullOrEmpty(locString))
            {
                //a valid Bankgirot file has records of length 80
                locRecLen = locString.get_Length();

                if(!System.String::IsNullOrWhiteSpace(locString) && locRecLen == 80 )
                {

                    if(SKS_PP_StringFormats::strSub(locString, 1, 2) == '11')
                    {
                        pos1to2Transactioncode11 = true;
                    }
                    if(SKS_PP_StringFormats::strSub(locString, 19, 22) == 'LEVERANTÖRSBETALNINGAR')
                    {
                        pos19to40Layoutname = true;
                    }
                    if(SKS_PP_StringFormats::strSub(locString, 1, 2) == '14' ||
                       SKS_PP_StringFormats::strSub(locString, 1, 2) == '15' ||
                       SKS_PP_StringFormats::strSub(locString, 1, 2) == '16' ||
                       SKS_PP_StringFormats::strSub(locString, 1, 2) == '17' ||
                       SKS_PP_StringFormats::strSub(locString, 1, 2) == '54')           //SKS#DevOps:16773
                    {
                        pos1to2Transactioncode14To54 = true;

                        if(SKS_PP_StringFormats::strSub(locString, 61, 20) != '')
                        {
                            pos61to80NumericReferenceNbr = true;
                        }
                    }
                }
            }
        }
        if(pos1to2Transactioncode11
        && pos19to40Layoutname
        && pos1to2Transactioncode14To54                    //SKS#DevOps:15480,
        && pos61to80NumericReferenceNbr)
        {
            //ALl Qualifers show this a SE_BANKGIROT_ACK_80 file
            classId = classIdGet(this);
            rtnval = classId2Name(ClassId);
        }
        locStreamReader.Close();

        return rtnval;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSKS_EFT_RF_File</Name>
				<Source><![CDATA[
    public SKS_EFT_RF_File getSKS_EFT_RF_File()
    {

        if(mSKS_EFT_RF_SentFile != null)
        {
            mSKS_EFT_RF_File.addSentFile(mSKS_EFT_RF_SentFile);
            mSKS_EFT_RF_SentFile = null;
        }

        return mSKS_EFT_RF_File;

    }

]]></Source>
			</Method>
			<Method>
				<Name>processRecord11</Name>
				<Source><![CDATA[
    private void processRecord11(str _CurrentRecord)
    {
        ;

        if(strLen(strLRTrim(_CurrentRecord)) > 0)
        {
            if(SKS_PP_StringFormats::strSub(_CurrentRecord, 1, 2) == '11')
            {
                statusValue = SKS_PP_StringFormats::strSub(_CurrentRecord, 47, 1);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>processRecord14To54</Name>
				<Source><![CDATA[
    private void processRecord14To54(str _CurrentRecord)
    {
        ;

        if(strLen(strLRTrim(_CurrentRecord)) > 0)
        {
            if(SKS_PP_StringFormats::strSub(_CurrentRecord, 1, 2) == '14' ||
               SKS_PP_StringFormats::strSub(_CurrentRecord, 1, 2) == '15' ||
               SKS_PP_StringFormats::strSub(_CurrentRecord, 1, 2) == '16' ||
               SKS_PP_StringFormats::strSub(_CurrentRecord, 1, 2) == '17' ||
               SKS_PP_StringFormats::strSub(_CurrentRecord, 1, 2) == '54')
            {
                mSKS_EFT_RF_Transaction = new SKS_EFT_RF_Transaction();

                if(mSKS_EFT_RF_Transaction != null)
                {
                    mSKS_EFT_RF_SentFile.addTransaction(mSKS_EFT_RF_Transaction);
                }
               
                //Set the Transaction Status
                mSKS_EFT_RF_Transaction.setStatus(statusValue);

                if(SKS_PP_StringFormats::strSub(_CurrentRecord, 61, 20) != '')     //SKS#DevOps:15480
                {
                    //Set the Transaction Reference Number
                    mSKS_EFT_RF_Transaction.setID(strLRTrim(SKS_PP_StringFormats::strSub(_CurrentRecord, 61, 20)));
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFileKey</Name>
				<Source><![CDATA[
    protected void setFileKey(str _InboundFileKey)
    {
        mSKS_EFT_RF_SentFile.setID(_InboundFileKey);
    }

]]></Source>
			</Method>
			<Method>
				<Name>outboundFileKeyGen</Name>
				<Source><![CDATA[
    public static str outboundFileKeyGen(str _OutFilename, SKS_EFTAP_File locSKS_EFTAP_File = null)
    {
        ;

        return locSKS_EFTAP_File.FileNbr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>outboundTransKeyGen</Name>
				<Source><![CDATA[
    public static str outboundTransKeyGen(str _FileName = '', SKS_EFT_FileDetail _SKS_EFT_FileDetail = null, SKS_EFTAP_File _SKS_EFTAP_FILE = null)
    {
        str rtnval;
        ;

        rtnval = _SKS_EFT_FileDetail.PaymentReference;
        rtnval = SKS_PP_StringFormats::strFill(20, rtnval, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left);
        return rtnval;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>