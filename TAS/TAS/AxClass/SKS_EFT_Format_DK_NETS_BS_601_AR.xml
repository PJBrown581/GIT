<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_DK_NETS_BS_601_AR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_DK_NETS_BS_601_AR extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_DK_NETS_BS_601_AR extends SKS_EFT_Format
{
    #define.FormatVersion('20221103')
    SKS_EFT_SequenceNumber mSequenceNumber;
    CustDirectDebitMandate  custDirectDebitMandate;
    SKS_EB_BankTable    lSKS_EB_BankTable;
    SKS_PP_Bank         lSKS_PP_Bank;
    BankAccountTable   mBankAccountTable;
    LogisticsPostalAddress  postalAddress;
                
    AmountMST payAmount_042;
    AmountMST pmtAmount_042;
    AmountMST pmtAmount_042_1;
    AmountMST pmtcnt_042;
    int dataRecordNumber;
    int dataRecCnt;
    int count_042;
    int count_052;
    int count_022;
    int cnt_042;
    int cnt_052;
    int cnt_022;

    int cnt_042_1;
    int cnt_052_1;
    int cnt_022_1;
    boolean firstRec_0112 = true;
    boolean firstRec_0117 = true;

    int sectionCount;

    #define.BS_0112('BS-0112')
    #define.BST_0112('BST-0112')
    #define.BST_0117('BST-0117')

    System.Text.StringBuilder sb;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        SKS_EFT_TransactionCode prevTransCode;
        
        sb = new System.Text.StringBuilder();
        Array custAddrArray = new Array(Types::String);
        
        // Get sequence number
        this.getSequence();

        this.rec_DeliveryStart();

        while(mSKS_EFT_FileDetail)
        {
            this.getSKS_EFT_FileFormatPaymSpec();

            if(mSKS_EFT_FileDetail.AccountCompany)
            {
                changecompany(mSKS_EFT_FileDetail.AccountCompany)
                {
                    custDirectDebitMandate = CustDirectDebitMandate::find(custDirectDebitMandate::getDefaultMandate(mSKS_EFT_FileDetail.AccountNum));
                }
            }
            
            if(((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BS_0112 ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BST_0112) && firstRec_0112) ||
                    (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BST_0117 && firstRec_0117))
            {
                this.rec_SectionStart();

                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BS_0112 ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BST_0112)
                {
                    firstRec_0112 = false;
                }
                else
                {
                    firstRec_0117 = false;
                }
            }

            postalAddress = this.findPostalAddressLineByPartyLocationRole(CustTable::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum).Party);//SKS_VSTS_14256

            if(LogisticsLocation::find(postalAddress.Location).Description)
            {
                this.rec_240(LogisticsLocation::find(postalAddress.Location).Description);
            }

            custAddrArray = SKS_PP_50000Bas::StreetToAddressLineArray(postalAddress.Street,3);

            if(custAddrArray.exists(1))
            {
                this.rec_240(custAddrArray.value(1));
                
                if (custAddrArray.exists(2))
                {
                    this.rec_240(custAddrArray.value(2));
                }
                if (custAddrArray.exists(3))
                {
                    this.rec_240(custAddrArray.value(3));
                }
            }

            if(postalAddress.City)
            {
                this.rec_240(postalAddress.City);
            }

            if(postalAddress.ZipCode || postalAddress.CountryRegionId)
            {
                this.rec_240_Additional();
            }
            
            this.rec_280();

            this.rec_241();

            prevTransCode = mSKS_EFT_FileFormatPaymSpec.TransactionCode;

            next mSKS_EFT_FileDetail;

            if(prevTransCode != mSKS_EFT_FileDetail.TransactionCode)
            {
                this.rec_SectionEnd();

                cnt_042 = 0;
                pmtAmount_042 = 0;
                cnt_052 = 0;
                cnt_022 = 0;
            }


            dataRecCnt = 0;

            dataRecordNumber = 0;
        }

        this.rec_DeliveryEnd();

        this.fileWrite(sb.ToString());

        // Increment sequence number
        this.incrementSequenceNumber();

        // Set sequence number
        this.setSequence();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSequence</Name>
				<Source><![CDATA[
    private void getSequence()
    {
        if(mSKS_EFT_FileFormat)
        {
            //Get Next Sequence Number
            mSequenceNumber = mSKS_EFT_FileFormat.NextSequenceNumber;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>incrementSequenceNumber</Name>
				<Source><![CDATA[
    private void incrementSequenceNumber()
    {
        if(mSequenceNumber >= 9999 || mSequenceNumber == 0)
        {
            mSequenceNumber = 1;
        }
        else
        {
            mSequenceNumber++;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSequence</Name>
				<Source><![CDATA[
    private void setSequence()
    {
        SKS_EFT_FileFormat sks_eft_fileformat;
        ;

        select firstOnly forUpdate sks_eft_fileformat
        where sks_eft_fileformat.FormatId == mSKS_EFT_FileFormat.FormatId;

        if(sks_eft_fileformat)
        {
            sks_eft_fileformat.NextSequenceNumber = mSequenceNumber;
            sks_eft_fileformat.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_DeliveryStart</Name>
				<Source><![CDATA[
    public boolean rec_DeliveryStart()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                                 Position      Size
        // 1    System identification                                   (  01-  02)      2
        // 2    Data record type                                        (  03-  05)      3
        // 3    Data Supplier number                                    (  06-  13)      8
        // 4    Subsystem                                               (  14-  16)      3
        // 5    Delivery type                                           (  17-  20)      4
        // 6    Delivery identification                                 (  21-  30)      10
        // 7    Filler                                                  (  31-  49)      19
        // 8    Date                                                    (  50-  55)      6
        // 9    Filler                                                  (  56-  128)     73
        //------------------------------------------------------------------------------------------------------
        
        //Nbr   Content
        // 1    System identification                                     01-  02
        sb.Append('BS');

        // 2    Data record type                                          03-  05
        sb.Append('002');

        
        if(mBankAccountTable.AccountID != mSKS_EFT_FileDetail.BankAccountId)
        {
            // Get Bank account
            mBankAccountTable = BankAccountTable::find(mSKS_EFT_FileDetail.BankAccountId);
        }

        select lSKS_PP_Bank where lSKS_PP_Bank.BankAccountId == mBankAccountTable.AccountId
            join lSKS_EB_BankTable where lSKS_EB_BankTable.BankAccountID == lSKS_PP_Bank.BankID;

        // 3    Data Supplier number                                      06-  13
        sb.Append(SKS_PP_StringFormats::strFill(8, lSKS_EB_BankTable.CreditorNumber3, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 4    Subsystem                                                 14-  16
        sb.Append(SKS_PP_StringFormats::strFill(3, lSKS_EB_BankTable.CreditorNumber2, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 5    Delivery type                                             17-  20
        sb.Append('0601');

        // 6    Delivery identification                                   21-  30
        sb.Append(SKS_PP_StringFormats::strFill(10, num2str(mSequenceNumber,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 7    Filler                                                    31-  49
        sb.Append(SKS_PP_StringFormats::strFill(19, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 8    Date                                                      50-  55
        sb.Append(date2str(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()), 123, DateDay::Digits2, DateSeparator::None, DateMonth::Digits2, DateSeparator::None, DateYear::Digits2));
        
        // 9    Filler                                                    56-  128
        sb.Append(SKS_PP_StringFormats::strFill(73, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append('\r\n');

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_SectionStart</Name>
				<Source><![CDATA[
    public boolean rec_SectionStart()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                                 Position      Size
        // 1    System identification                                   (  01-  02)      2
        // 2    Data record type                                        (  03-  05)      3
        // 3    PBS no.                                                 (  06-  13)      8
        // 4    Section number                                          (  14-  17)      4
        // 5    Filler                                                  (  18-  22)      5
        // 6    Debtor group number                                     (  23-  27)      5
        // 7    Data Supplier identification                            (  28-  42)      15
        // 8    Filler                                                  (  43-  46)      4
        // 9    Date                                                    (  47-  54)      8
        // 10   Filler                                                  (  55-  58)      4
        // 11   Filler                                                  (  59-  68)      10
        // 12   Main text line                                          (  69-  128)     60
        //------------------------------------------------------------------------------------------------------
        

        sectionCount++;

        //Nbr   Content
        // 1    System identification                                     01-  02
        sb.Append('BS');

        // 2    Data record type                                          03-  05
        sb.Append('012');

        // 3    PBS no.                                                   06-  13
        sb.Append(SKS_PP_StringFormats::strFill(8, lSKS_EB_BankTable.CreditorNumber1, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 4    Section number                                            14-  17
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BS_0112 ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BST_0112)
        {
            sb.Append('0112');
        }
        else
        {
            sb.Append('0117');
        }

        // 5    Filler                                                    18-  22
        sb.Append(SKS_PP_StringFormats::strFill(5, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 6    Debtor group number                                        23-  27
        sb.Append(SKS_PP_StringFormats::strFill(5, lSKS_EB_BankTable.DebtorGroupNumber, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 7    Data Supplier identification                               28-  42
        sb.Append(SKS_PP_StringFormats::strFill(15, lSKS_EB_BankTable.CreditorNumber3, SKS_PP_FillCharacter::space, SKS_PP_FillSide::Right));

        // 8    Filler                                                     43-  46
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 9    Date                                                       47-  54
        sb.Append(date2str(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()), 123, DateDay::Digits2, DateSeparator::None, DateMonth::Digits2, DateSeparator::None, DateYear::Digits4));
        
        // 10   Filler                                                     55-  58
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 11   Filler                                                     59-  68
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 12   Main text line                                             69-  128
        sb.Append(SKS_PP_StringFormats::strFill(60, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //this.fileWrite(sb.ToString());
        sb.Append('\r\n');
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_240</Name>
				<Source><![CDATA[
    public boolean rec_240(str _debtInfo)
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                                 Position      Size
        // 1    System identification                                   (  01-  02)      2
        // 2    Data record type                                        (  03-  05)      3
        // 3    PBS no.                                                 (  06-  13)      8
        // 4    Transaction code                                        (  14-  17)      4
        // 5    Data record number                                      (  18-  22)      5
        // 6    Debtor group number                                     (  23-  27)      5
        // 7    Customer number                                         (  28-  42)      15
        // 8    Filler                                                  (  43-  82)      40
        // 9    Debtor CPR no or CVR no                                 (  83-  92)      10
        // 10   Dispatch speed                                          (  93-  93)      1
        // 11   Mandatory print                                         (  94-  94)      1
        // 12   Filler                                                  (  95-  128)     34
        //------------------------------------------------------------------------------------------------------
        
        count_022++;
        cnt_022++;
        dataRecCnt++;

        //Nbr   Content
        // 1    System identification                                     01-  02
        sb.Append('BS');

        // 2    Data record type                                          03-  05
        sb.Append('022');

        // 3    PBS no.                                                   06-  13
        sb.Append(SKS_PP_StringFormats::strFill(8, lSKS_EB_BankTable.CreditorNumber1, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 4    Transaction code                                          14-  17
        sb.Append('0240');

        // 5    Data record number                                        18-  22
        sb.Append(SKS_PP_StringFormats::strFill(5, num2Str(dataRecCnt, 0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 6    Debtor group number                                        23-  27
        sb.Append(SKS_PP_StringFormats::strFill(5, lSKS_EB_BankTable.DebtorGroupNumber, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 7    Customer number                                            28-  42
        sb.Append(SKS_PP_StringFormats::strFill(15, mSKS_EFT_FileDetail.AccountNum, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 8    Filler                                                     43-  51
        sb.Append(SKS_PP_StringFormats::strFill(9, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 9    Debtor Name                                                 52-  86
        sb.Append(SKS_PP_StringFormats::strFill(35, _debtInfo, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 10   Filler                                                      87- 128
        sb.Append(SKS_PP_StringFormats::strFill(42, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append('\r\n');
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_240_Additional</Name>
				<Source><![CDATA[
    public boolean rec_240_Additional()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                                 Position      Size
        // 1    System identification                                   (  01-  02)      2
        // 2    Data record type                                        (  03-  05)      3
        // 3    PBS no.                                                 (  06-  13)      8
        // 4    Transaction code                                        (  14-  17)      4
        // 5    Data record number                                      (  18-  22)      5
        // 6    Debtor group number                                     (  23-  27)      5
        // 7    Customer number                                         (  28-  42)      15
        // 8    Filler                                                  (  43-  51)      9
        // 9    Filler                                                  (  52-  66)      15
        // 10   Postcode                                                (  67-  70)      4
        // 11   Country                                                 (  71-  73)      3
        // 12   Filler                                                  (  74-  128)     55
        //------------------------------------------------------------------------------------------------------
        
        count_022++;
        cnt_022++;
        dataRecCnt++;

        //Nbr   Content
        // 1    System identification                                     01-  02
        sb.Append('BS');

        // 2    Data record type                                          03-  05
        sb.Append('022');

        // 3    PBS no.                                                   06-  13
        sb.Append(SKS_PP_StringFormats::strFill(8, lSKS_EB_BankTable.CreditorNumber1, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 4    Transaction code                                          14-  17
        sb.Append('0240');

        // 5    Data record number                                        18-  22
        sb.Append('00009');

        // 6    Debtor group number                                        23-  27
        sb.Append(SKS_PP_StringFormats::strFill(5, lSKS_EB_BankTable.DebtorGroupNumber, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 7    Customer number                                            28-  42
        sb.Append(SKS_PP_StringFormats::strFill(15, mSKS_EFT_FileDetail.AccountNum, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 8    Filler                                                     43-  51
        sb.Append(SKS_PP_StringFormats::strFill(9, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 9    Filler                                                     52-  66
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 10   Postcode                                                    67-  70
        sb.Append(SKS_PP_StringFormats::strFill(4, postalAddress.ZipCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 11   Country                                                     71-  73
        sb.Append(SKS_PP_StringFormats::strFill(3, this.getLogisticsAddressCountryISO(postalAddress.CountryRegionId), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 12   Filler                                                      74- 128
        sb.Append(SKS_PP_StringFormats::strFill(55, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append('\r\n');
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_280</Name>
				<Source><![CDATA[
    public boolean rec_280()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                                 Position      Size
        // 1    System identification                                   (  01-  02)      2
        // 2    Data record type                                        (  03-  05)      3
        // 3    PBS no.                                                 (  06-  13)      8
        // 4    Transaction code                                        (  14-  17)      4
        // 5    Data record number                                      (  18-  22)      5
        // 6    Debtor group number                                     (  23-  27)      5
        // 7    Customer number                                         (  28-  42)      15
        // 8    Mandate number                                          (  43-  51)      9
        // 9    Date                                                    (  52-  59)      8
        // 10   Sign code                                               (  60-  60)      1
        // 11   Amount                                                  (  61-  73)      13
        // 12   Reference                                               (  74-  103)     30
        // 13   Filler                                                  (  104-  105)    2
        // 14   Payer identification                                    (  106-  120)    15
        // 15   Filler                                                  (  121-  128)    8
        //------------------------------------------------------------------------------------------------------
        
        CustTrans   lCustTrans;
        SKS_EFT_FileDetail  tmpSKS_EFT_FileDetail;

        count_042++;
        cnt_042++;

        //Nbr   Content
        // 1    System identification                                     01-  02
        sb.Append('BS');

        // 2    Data record type                                          03-  05
        sb.Append('042');

        // 3    PBS no.                                                   06-  13
        sb.Append(SKS_PP_StringFormats::strFill(8, lSKS_EB_BankTable.CreditorNumber1, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 4    Transaction code                                          14-  17
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BS_0112 ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BST_0112)
        {
            sb.Append('0280');
        }
        else
        {
            sb.Append('0285');
        }

        // 5    Data record number                                        18-  22
        sb.Append('00000');

        // 6    Debtor group number                                        23-  27
        sb.Append(SKS_PP_StringFormats::strFill(5, lSKS_EB_BankTable.DebtorGroupNumber, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 7    Customer number                                            28-  42
        sb.Append(SKS_PP_StringFormats::strFill(15, mSKS_EFT_FileDetail.AccountNum, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BS_0112)
        {
            // 8    Mandate number                                             43-  51
            sb.Append(SKS_PP_StringFormats::strFill(9, custDirectDebitMandate.MandateReference, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        }
        else
        {
            // 8    Filler                                                     43-  51
            sb.Append(SKS_PP_StringFormats::strFill(9, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        }

        // 9    Date                                                       52-  59
        sb.Append(date2str(mSKS_EFT_FileDetail.PaymentTransDate, 123, DateDay::Digits2, DateSeparator::None, DateMonth::Digits2, DateSeparator::None, DateYear::Digits4));
        
        // 10   Sign code                                                  60-  60
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BS_0112 ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BST_0112)
        {
            //Bug 11184 -->
            if(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur > 0)
            {
                sb.Append('1');
            }
            else
            {
                sb.Append('2');
            }
            //Bug 11184 <--
        }
        else
        {
            if(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur == 0)
            {
                sb.Append('0');
            }
            else
            {
                sb.Append('1');
            }
        }


        // 11   Amount                                                     61-  73

        payAmount_042 += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        pmtAmount_042 += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;


        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur), 13));

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BS_0112 ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BST_0112)
        {
            // 12   Reference                                                  74-  103
            sb.Append(SKS_PP_StringFormats::strFill(30, mSKS_EFT_FileDetail.PaymentReference, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            // 12   Reference                                                  74-  103
            sb.Append(SKS_PP_StringFormats::strFill(9, mSKS_EFT_FileDetail.PaymentReference, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

            // 13   Filler
            sb.Append(SKS_PP_StringFormats::strFill(21, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        // 13   Filler                                                     104-  105
        sb.Append('00');
        while select tmpSKS_EFT_FileDetail
                where tmpSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                   && tmpSKS_EFT_FileDetail.InvoiceNumber != ''
        {
            select firstonly crosscompany PaymId from lCustTrans where
                lCustTrans.RecId == tmpSKS_EFT_FileDetail.VendTransRecId;
        }

        // 14   Payer identification                                       106-  120
        if(lCustTrans.PaymId && (mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BST_0112 && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BST_0117 ))//SKS_VSTS_13590
        {
            sb.Append(SKS_PP_StringFormats::strFill(15, lCustTrans.PaymId, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        // 15   Filler                                                     121-  128
        sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        sb.Append('\r\n');
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_241</Name>
				<Source><![CDATA[
    public boolean rec_241()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                                 Position      Size
        // 1    System identification                                   (  01-  02)      2
        // 2    Data record type                                        (  03-  05)      3
        // 3    PBS no.                                                 (  06-  13)      8
        // 4    Transaction code                                        (  14-  17)      4
        // 5    Data record number                                      (  18-  22)      5
        // 6    Debtor group number                                     (  23-  27)      5
        // 7    Customer number                                         (  28-  42)      15
        // 8    Mandate number                                          (  43-  51)      9
        // 9    Filler                                                  (  52-  52)      1
        // 10   Text line                                               (  53-  112)     60
        // 11   Filler                                                  (  113- 128)     16
        //------------------------------------------------------------------------------------------------------
        
        SKS_EFT_FileDetail      invSKS_EFT_FileDetail;
        

        while select * from invSKS_EFT_FileDetail
                where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                   && invSKS_EFT_FileDetail.InvoiceNumber != ''
        {
            this.rec_241_Additional(invSKS_EFT_FileDetail); //SKS_VSTS_14639
        }
        
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_241_Additional</Name>
				<Source><![CDATA[
    //SKS_VSTS_14639-- start
    public void rec_241_Additional(SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        str invDetails;
        dataRecordNumber++;
        count_052++;
        cnt_052++;

        //System.Text.StringBuilder sb = new System.Text.StringBuilder();

        invDetails = null;
        pmtcnt_042 += _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;

        //Nbr   Content
        // 1    System identification                                     01-  02
        sb.Append('BS');

        // 2    Data record type                                          03-  05
        sb.Append('052');

        // 3    PBS no.                                                   06-  13
        sb.Append(SKS_PP_StringFormats::strFill(8, lSKS_EB_BankTable.CreditorNumber1, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 4    Transaction code                                          14-  17
        sb.Append('0241');

        // 5    Data record number                                        18-  22
        sb.Append(SKS_PP_StringFormats::strFill(5, num2Str(dataRecordNumber, 0, 0, 0, 0) , SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 6    Debtor group number                                        23-  27
        sb.Append(SKS_PP_StringFormats::strFill(5, lSKS_EB_BankTable.DebtorGroupNumber, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 7    Customer number                                            28-  42
        sb.Append(SKS_PP_StringFormats::strFill(15, mSKS_EFT_FileDetail.AccountNum, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BS_0112)
        {
            // 8    Mandate number                                             43-  51
            sb.Append(SKS_PP_StringFormats::strFill(9, custDirectDebitMandate.MandateReference, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        }
        else
        {
            // 8    Filler                                                     43-  51
            sb.Append(SKS_PP_StringFormats::strFill(9, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        }

        // 9    Filler                                                     52-  52       1
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 10   Text line                                                  53-  112      60
        invDetails = this.getInvoicenumbers(_invSKS_EFT_FileDetail);     //SKS_VSTS_14483

        sb.Append(SKS_PP_StringFormats::strFill(60, invDetails, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 11   Filler                                                     113- 128      16
        sb.Append(SKS_PP_StringFormats::strFill(16, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append('\r\n');
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoicenumbers</Name>
				<Source><![CDATA[
    //SKS_VSTS_14639-- start -- end

    //SKS_VSTS_14483--->
    public str getInvoicenumbers(SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        str invoiceDetails;

        invoiceDetails = strFmt('Fakturanr. %1 Fakturadato %2 %3', _invSKS_EFT_FileDetail.InvoiceNumber, SKS_PP_StringFormats::strDateYYYYMMDD(_invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen), num2str(_invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,0,2,1,0));

        return invoiceDetails;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_SectionEnd</Name>
				<Source><![CDATA[
    //SKS_VSTS_14483<---

    public boolean rec_SectionEnd()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                                 Position      Size
        // 1    System identification                                   (  01-  02)      2
        // 2    Data record type                                        (  03-  05)      3
        // 3    PBS no.                                                 (  06-  13)      8
        // 4    Section number                                          (  14-  17)      4
        // 5    Filler                                                  (  18-  22)      5
        // 6    Debtor group number                                     (  23-  27)      5
        // 7    Filler                                                  (  28-  31)      4
        // 8    Number of record type 042                               (  32-  42)      11
        // 9    Amount                                                  (  43-  57)      15
        // 10   Number of record type 052 and record type 062           (  58-  68)      11
        // 11   Filler                                                  (  69-  83)      15
        // 12   Number of record type 022                               (  84-  94)      11
        // 13   Filler                                                  (  95-  128)     34
        //------------------------------------------------------------------------------------------------------
        
        //System.Text.StringBuilder sb = new System.Text.StringBuilder();

        //Nbr   Content
        // 1    System identification                                     01-  02
        sb.Append('BS');

        // 2    Data record type                                          03-  05
        sb.Append('092');

        // 3    PBS no.                                                   06-  13
        sb.Append(SKS_PP_StringFormats::strFill(8, lSKS_EB_BankTable.CreditorNumber1, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 4    Section number                                            14-  17
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BS_0112 ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BST_0112)
        {
            sb.Append('0112');
        }
        else
        {
            sb.Append('0117');
        }

        // 5    Filler                                                    18-  22
        sb.Append('00000');
        
        // 6    Debtor group number                                        23-  27
        sb.Append(SKS_PP_StringFormats::strFill(5, lSKS_EB_BankTable.DebtorGroupNumber, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 7    Filler                                                     28-  31
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 8    Number of record type 042                                  32-  42
        sb.Append(SKS_PP_StringFormats::strFill(11, num2Str(cnt_042, 0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        // 9    Amount                                                     43-  57
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(pmtAmount_042), 15));

        // 10   Number of record type 052 and record type 062              58-  68
        sb.Append(SKS_PP_StringFormats::strFill(11, num2Str(cnt_052, 0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 11   Filler                                                     69-  83
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 12   Number of record type 022                                  84-  94
        sb.Append(SKS_PP_StringFormats::strFill(11, num2Str(cnt_022, 0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 13   Filler                                                     95-  128
        sb.Append(SKS_PP_StringFormats::strFill(34, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append('\r\n');

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_DeliveryEnd</Name>
				<Source><![CDATA[
    public boolean rec_DeliveryEnd()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                                 Position      Size
        // 1    System identification                                   (  01-  02)      2
        // 2    Data record type                                        (  03-  05)      3
        // 3    Data Supplier number                                    (  06-  13)      8
        // 4    Subsystem                                               (  14-  16)      3
        // 5    Delivery type                                           (  17-  20)      4
        // 6    Number of sections                                      (  21-  31)      11
        // 7    Number of record type 042                               (  32-  42)      11
        // 8    Amount                                                  (  43-  57)      15
        // 9    Number of record type 052 and 062                       (  58-  68)      11
        // 10   Filler                                                  (  69-  83)      15
        // 11   Number of record type 022                               (  84-  94)      11
        // 12    Filler                                                 (  95-  128)     34
        //------------------------------------------------------------------------------------------------------
        

        //Nbr   Content
        // 1    System identification                                     01-  02
        sb.Append('BS');

        // 2    Data record type                                          03-  05
        sb.Append('992');

        // 3    Data Supplier number                                      06-  13
        sb.Append(SKS_PP_StringFormats::strFill(8, lSKS_EB_BankTable.CreditorNumber3, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 4    Subsystem                                            14-  16
        sb.Append(SKS_PP_StringFormats::strFill(3, lSKS_EB_BankTable.CreditorNumber2, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 5    Delivery type                                             17-  20
        sb.Append('0601');

        // 6    Number of sections                                        21-  31
        sb.Append(SKS_PP_StringFormats::strFill(11, num2Str(sectionCount, 0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 7    Number of record type 042                                 32-  42
        sb.Append(SKS_PP_StringFormats::strFill(11, num2Str(count_042, 0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        // 8    Amount                                                    43-  57
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(payAmount_042), 15));

        // 9   Number of record type 052 and record type 062              58-  68
        sb.Append(SKS_PP_StringFormats::strFill(11, num2Str(count_052, 0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 10   Filler                                                    69-  83
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        // 11   Number of record type 022                                 84-  94
        sb.Append(SKS_PP_StringFormats::strFill(11, num2Str(count_022, 0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 12   Filler                                                    95-  128
        sb.Append(SKS_PP_StringFormats::strFill(34, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJournaltxt</Name>
				<Source><![CDATA[
    private str getJournaltxt()
    {
        LedgerJournalTrans ledgerJournalTrans;

        select firstonly crossCompany Txt from ledgerJournalTrans where
        ledgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;

        return ledgerJournalTrans.Txt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPostalAddressLineByPartyLocationRole</Name>
				<Source><![CDATA[
    protected LogisticsPostalAddress findPostalAddressLineByPartyLocationRole(
        DirPartyRecId   _party)
    {
        DirPartyLocation        partyLocation;
        LogisticsLocation       logisticsLocation;
        
        while select partyLocation
            where partyLocation.Party == _party
        {
            if(partyLocation.IsPrimary == NoYes::Yes && strScan(partyLocation.locationRoleNames(),'Business',1,strLen(partyLocation.locationRoleNames())))//SKS_VSTS_14256
            {
                logisticsLocation = logisticsLocation::find(partyLocation.Location);
                if(logisticsLocation.IsPostalAddress)
                {
                    postalAddress = LogisticsPostalAddress::findByLocation(logisticsLocation.RecId);
                    break;
                }
            }
            else
            {
                if(strScan(partyLocation.locationRoleNames(),'Direct Debit',1,strLen(partyLocation.locationRoleNames())))
                {
                    logisticsLocation = logisticsLocation::find(partyLocation.Location);
                    if(logisticsLocation.IsPostalAddress)
                    {
                        postalAddress = LogisticsPostalAddress::findByLocation(logisticsLocation.RecId);
                        break;
                    }
                }
            }
        }
        return postalAddress;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>