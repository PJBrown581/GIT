<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_WELLSFARGO_NAT</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_WELLSFARGO_NAT Extends SKS_PP_Format_BankGroup
{
    int mChkCount;
    real mChkSum;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setOrderBy</Name>
				<Source><![CDATA[
    protected SKS_PP_OrderBy setOrderBy()
    {
        return SKS_PP_OrderBy::BankAcct_RefNbr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    // WELLS FARGO POSITIVE PAY FORMAT - Detail Record
        //
        //
        // Pos 01-10    10       Check number - RJ-LZF
        // Pos 11-16    6        Issue date
        // Pos 17-26    10       Account number - LJ-RBF
        // Pos 27-29    3        Trancode (320 = issued check, 370 = cancel old register - void)
        // Pos 30-39    10       Amount (zeroes for void)
        // Pos 40-80    41       Additional description - Payee
    protected str txtDetail()
    {
        int Mult = 1;
        str ItemType;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = '370';
            if(mSKS_PP_FileDetail.ChkCuryAmt < 0)
            {
               Mult = -1;
            }
        }
        else
        {
            ItemType = '320';
            if(mSKS_PP_FileDetail.ChkCuryAmt == 0)
            {
                ItemType = '430';
            }
        }
    
        mChkCount++;
        mChkSum = mChkSum + mSKS_PP_FileDetail.ChkCuryAmt;
    
        sb.Append(SKS_PP_StringFormats::strFill(10, strRtrim(strLtrim(mSKS_PP_FileDetail.ChkRefNbr)), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(SKS_PP_StringFormats::strFill(10, strRtrim(strLtrim(mSKS_PP_FileDetail.BnkBankAcct)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(ItemType);
        sb.Append(SKS_PP_StringFormats::strMoney(Mult * mSKS_PP_FileDetail.ChkCuryAmt, 10));
        sb.Append(SKS_PP_StringFormats::strFill(41, strRtrim(strLtrim(mSKS_PP_FileDetail.vendname)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupHeader</Name>
				<Source><![CDATA[
    protected str txtGroupHeader()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        sb.Append('WRRECV');
        sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(56, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    protected str txtGroupTrailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        sb.Append('&');
        sb.Append(SKS_PP_StringFormats::strFill(14, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(5, int2str(mChkCount), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(mChkSum, 10));
        sb.Append(SKS_PP_StringFormats::strFill(56,'', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
    
        mChkSum = 0;
        mChkCount = 0;
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>