<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_LedgerDimensionController_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(LedgerDimensionController))]
public final class SKS_LedgerDimensionController_Extension
{
   
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>restrictQueryForMainAccounts</Name>
				<Source><![CDATA[
    public static void restrictQueryForMainAccounts(
        QueryBuildDataSource    _queryBuildDataSource,
        boolean                 _applyRestrictionBasedOnTranslations)
    {
        next restrictQueryForMainAccounts(_queryBuildDataSource, _applyRestrictionBasedOnTranslations);

        QueryBuildRange                             qbr;
        SKS_CCR_GLMaintenance SKS_CCR_GLMaintenance;
        SKS_PP_Setup SKS_PP_Setup;
        boolean skipDimLookupMethod;

        select firstonly SKS_PP_Setup;

        if(SKS_PP_Setup.ModCCReconciliationExtensions && SKS_PP_Setup.CCRGLAccountRestriction)
        {
            SysGlobalCache globalCache;

            globalCache = ClassFactory.globalCache();
            skipDimLookupMethod = globalCache.get(curuserid(), 'SKS_DimensionDynamicAccountController', skipDimLookupMethod);

            if (skipDimLookupMethod)
            {
                globalcache.remove(curuserid(), 'SKS_DimensionDynamicAccountController');
                
                container c;

                while select SKS_CCR_GLMaintenance
                {
                    c+= queryValue(SKS_CCR_GLMaintenance.MainAccountNum);
                }

                DimensionAttributeRecId                     mainAccountAttributeRecId;
                DimensionAttributeMainAccountViewContract   dimensionAttributeViewContract;

                mainAccountAttributeRecId = DimensionAttribute::getWellKnownDimensionAttribute(DimensionAttributeType::MainAccount);
                dimensionAttributeViewContract = DimensionAttribute::getViewContract(mainAccountAttributeRecId, _applyRestrictionBasedOnTranslations) as DimensionAttributeMainAccountViewContract;

                _queryBuildDataSource.clearRange(dimensionAttributeViewContract.parmValueFieldId());
                qbr = _queryBuildDataSource.addRange(dimensionAttributeViewContract.parmValueFieldId());
                qbr.value((con2str(c)));
                qbr.status(RangeStatus::Hidden);
           }
        }

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>