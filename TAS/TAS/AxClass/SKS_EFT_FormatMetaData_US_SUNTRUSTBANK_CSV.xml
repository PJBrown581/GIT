<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_SUNTRUSTBANK_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_SUNTRUSTBANK_CSV Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_SUNTRUSTBANK_CSV Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220706';
        dataContractVersion = '1.0';
        conFormatID = ['US-SUNTRUSTBANK-CSV'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - SunTrust Bank - CSV',0,'','','US-SUNTRUSTBANK-CSV',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-SUNTRUSTBANK-CSV',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-SUNTRUSTBANK-CSV'):
                paymSpecList = this.getPaymSpecsMetaData_US_SUNTRUSTBANK_CSV();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_SUNTRUSTBANK_CSV</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_SUNTRUSTBANK_CSV()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'US DOM - Wire Payments',1,'DOM-WIRE','','DOM-WIRE','TRADE PAY',0,'US-SUNTRUSTBANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-SUNTRUSTBANK-CSV'):
                notesList = this.getNotesMetaData_US_SUNTRUSTBANK_CSV();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_SUNTRUSTBANK_CSV</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_SUNTRUSTBANK_CSV()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-SUNTRUSTBANK-CSV','DOM-WIRE','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-EFT+ bank account > AP EFT+ field > Wire/IAT ordering party tab:--Debit account type is stored in the Debit Account Type field.::-Cash and bank management module > Bank Account:--Bank account number and Routing numbers are required.::-Vendor Bank Account fields:--Either IBAN or Bank account number is required based on Recipient ID Type.:--Either SWIFT code or routing number is required based on Recipient Bank ID.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required.:--Recipient Address Line 1 stored in the Address 1 field.:--Recipient Address Line 2 stored in the Address 2 field.:-Beneficiary bank:--Recipient Bank Name stored in the Name field.:--Recipient Bank Address Line 1 stored in the Address field.:--Recipient Bank Address Line 2 stored in the City field.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:-Credit party:--Receiving Bank ID stored in the SWIFT code field.:--Receiving Bank Name stored in the Bank name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-SUNTRUSTBANK-CSV'):
                validationsList = this.getValidationsMetaData_US_SUNTRUSTBANK_CSV();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_SUNTRUSTBANK_CSV</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_SUNTRUSTBANK_CSV()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-SUNTRUSTBANK-CSV','DOM-WIRE','','Beneficiary Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Beneficiary Account Name','Name related to Beneficiary','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-SUNTRUSTBANK-CSV','DOM-WIRE','','Beneficiary Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Recipient Address 1','Address related to Beneficiary','16','WBeneAddr','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-SUNTRUSTBANK-CSV','DOM-WIRE','','Beneficiary Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Recipient Address 1','Address related to Beneficiary','16','WBeneAddr2','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-SUNTRUSTBANK-CSV','DOM-WIRE','','Beneficiary bank name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','Beneficiary Bank Name','Name related to Beneficiary Bank','16','WBenBankName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-SUNTRUSTBANK-CSV','DOM-WIRE','','Vendor bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address 1','Recipient Bank Address Line 1','Address related to vendor bank','16','WBenBankAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-SUNTRUSTBANK-CSV','DOM-WIRE','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','Recipient Bank Address Line 2','Address related to Vendor bank','16','WBenBankCity','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-SUNTRUSTBANK-CSV','DOM-WIRE','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','Recipient ID','IBAN related to vendor','9','BankIBAN','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-SUNTRUSTBANK-CSV','DOM-WIRE','','Bank Account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','Recipient ID','Bank Account number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-SUNTRUSTBANK-CSV','DOM-WIRE','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','Debit Account Bank ID','Routing number related to Bank',0,'RegistrationNum','','',0,0,'','5',0,1]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-SUNTRUSTBANK-CSV','RecipientIDType','Recipient ID Type']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-SUNTRUSTBANK-CSV','RecipientBankIDType','Recipient Bank ID Type']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-SUNTRUSTBANK-CSV','RecipientIDType','Account Number','A']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-SUNTRUSTBANK-CSV','RecipientIDType','CHIPs Universal ID','CH']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-SUNTRUSTBANK-CSV','RecipientIDType','CLABE','CL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-SUNTRUSTBANK-CSV','RecipientIDType','IBAN','IB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-SUNTRUSTBANK-CSV','RecipientBankIDType','CHIPs Universal Identifier','CH']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-SUNTRUSTBANK-CSV','RecipientBankIDType','CLABE','CL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-SUNTRUSTBANK-CSV','RecipientBankIDType','SWIFT','SA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-SUNTRUSTBANK-CSV','RecipientBankIDType','ABA','FW']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('US-SUNTRUSTBANK-CSV'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_SUNTRUSTBANK_CSV();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_SUNTRUSTBANK_CSV</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_SUNTRUSTBANK_CSV()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-SUNTRUSTBANK-CSV','US-SUNTRUSTBANK-CSV','DOM-WIRE','RecipientIDType','Recipient ID Type',0,'RecipientIDType','',0,'','','Payment record > Recipient ID Type']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-SUNTRUSTBANK-CSV','US-SUNTRUSTBANK-CSV','DOM-WIRE','RecipientBankIDType','Recipient BankID Type',0,'RecipientBankIDType','',0,'','','Payment record > Recipient BankID Type']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-SUNTRUSTBANK-CSV','US-SUNTRUSTBANK-CSV','FormatValidations','DOM-WIRE','15','W01']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch(_formatID)
        {
            case ('US-SUNTRUSTBANK-CSV'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_SUNTRUSTBANK_CSV();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_SUNTRUSTBANK_CSV</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_SUNTRUSTBANK_CSV()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-SUNTRUSTBANK-CSV','US-SUNTRUSTBANK-CSV','DebitAcctType','Debit Account Type',1,'DebitAcctType','',1,'','XXX','Debit Account Type']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'US-SUNTRUSTBANK-CSV':
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('DebitAcctType', gSKS_EFT_Bank.W01);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>