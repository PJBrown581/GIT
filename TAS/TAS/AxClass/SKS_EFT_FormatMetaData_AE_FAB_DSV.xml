<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_AE_FAB_DSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_AE_FAB_DSV Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_AE_FAB_DSV Extends SKS_EFT_Format_MetaData
{


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220112';
        dataContractVersion = '1.0';
        conFormatID = ['AE-FAB-DSV'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'AE - First Abu Dhabi Bank - DSV ',0,'','','AE-FAB-DSV',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'AE-FAB-DSV',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('AE-FAB-DSV'):
                paymSpecList = this.getPaymSpecsMetaData_AE_FAB_DSV();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_AE_FAB_DSV</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_AE_FAB_DSV()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,1,0,'Salary File Format(Bulk Salary Payments)',1,'SFF-BS','','SFF-BS','TRADE PAY',0,'AE-FAB-DSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Bulk File Format(Single Currency Commercial Payments)',1,'BFF-SC','','BFF-SC','TRADE PAY',0,'AE-FAB-DSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Single File Format(Multi-Currency Commercial Payments)',1,'SFF-MC','','SFF-MC','TRADE PAY',0,'AE-FAB-DSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('AE-FAB-DSV'):
                notesList = this.getNotesMetaData_AE_FAB_DSV();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_AE_FAB_DSV</Name>
				<Source><![CDATA[
    private container getNotesMetaData_AE_FAB_DSV()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['AE-FAB-DSV','SFF-BS','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['AE-FAB-DSV','BFF-SC','-Purpose of payment is stored in the Central bank purpose code in Payment journal.::-Bank Id is stored in the Vendor eBanking details  Account info tab.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['AE-FAB-DSV','SFF-MC','-Purpose of payment is stored in the Central bank purpose code in Payment journal.::-Bank Id is stored in the Vendor eBanking details  Account info tab.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('AE-FAB-DSV'):
                validationsList = this.getValidationsMetaData_AE_FAB_DSV();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_AE_FAB_DSV</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_AE_FAB_DSV()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','SFF-BS','','Beneficiary bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','Text Block Content Definition > Beneficiary Account > IBAN','IBAN related to vendor','9','BankIBAN','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','BFF-SC','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','Details > Field No.4 > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','BFF-SC','','Beneficiary Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Beneficiary Bank Account No','Account Number related to Beneficiary bank','9','AccountNum','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','BFF-SC','','Beneficiary Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Beneficiary Account Name','Name related to Beneficiary','16','WBeneName','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','BFF-SC','','Beneficiary Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Recipient Address 1','Address related to Beneficiary','16','WBeneAddr','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','BFF-SC','','Beneficiary Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','Details > Field No.10 > Beneficiary bank name','Beneficiary bank name','16','WBenBankName','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','BFF-SC','','Vendor Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift code ','Details > Field No.11 > Swift Code','Swift Code related  Vendor','9','SWIFTNo','','','3',1,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','BFF-SC','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Details > Field No.11 > Routing number','Routing number related to Vendor','9','RegistrationNum','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','BFF-SC','','Beneficiary Bank Branch','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Branch','Details > Field No.12 > Beneficiary Branch Name ','Beneficiary Branch Name ','16','WBenBankBranch','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','BFF-SC','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','Intermediary Bank Swift/BIC','Intermediary Swift number','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','SFF-MC','','Beneficiary bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','Text Block Content Definition > Beneficiary Account > IBAN','IBAN related to vendor','9','BankIBAN','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','SFF-MC','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','Details > Field No.4 > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','SFF-MC','','Beneficiary Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Beneficiary Bank Account No','Account Number related to Beneficiary bank','9','AccountNum','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','SFF-MC','','Beneficiary Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Beneficiary Account Name','Name related to Beneficiary','16','WBeneName','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','SFF-MC','','Beneficiary Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Recipient Address 1','Address related to Beneficiary','16','WBeneAddr','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','SFF-MC','','Beneficiary Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','Details > Field No.10 > Beneficiary bank name','Beneficiary bank name','16','WBenBankName','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','SFF-MC','','Vendor Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift code ','Details > Field No.11 > Swift Code','Swift Code related  Vendor','9','SWIFTNo','','','3',1,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','SFF-MC','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Details > Field No.11 > Routing number','Routing number related to Vendor','9','RegistrationNum','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','SFF-MC','','Beneficiary Bank Branch','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Branch','Details > Field No.12 > Beneficiary Branch Name ','Beneficiary Branch Name ','16','WBenBankBranch','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AE-FAB-DSV','SFF-MC','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','Intermediary Bank Swift/BIC','Intermediary Swift number','16','WIntBankSwift','','',1,1,1,'11',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['AE-FAB-DSV','SalaryType','Salary Type code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['AE-FAB-DSV','ChrgBr','ChargesBene']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-FAB-DSV','SalaryType','Salary',1]);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-FAB-DSV','SalaryType','Bonus','2']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-FAB-DSV','SalaryType','End of Service','3']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-FAB-DSV','SalaryType','Pension','4']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-FAB-DSV','SalaryType','Education Assistance','5']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-FAB-DSV','SalaryType','Daily wages','6']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-FAB-DSV','SalaryType','Allowances','13']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-FAB-DSV','SalaryType','Bulk Payment','20']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-FAB-DSV','SalaryType','Compensation','23']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-FAB-DSV','SalaryType','Overtime','24']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-FAB-DSV','SalaryType','Pre-Paid Salary','99']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-FAB-DSV','SalaryType','Salary Advance','103']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-FAB-DSV','SalaryType','Leave Salary','104']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-FAB-DSV','ChrgBr','Borne by Debtor','OUR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AE-FAB-DSV','ChrgBr','Shared','SHA']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('AE-FAB-DSV'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_AE_FAB_DSV();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_AE_FAB_DSV</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_AE_FAB_DSV()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AE-FAB-DSV','AE-FAB-DSV','SFF-BS','SalaryType','Salary Type',0,'SalaryType','',1,'','','Header > Field No.7 SalaryType']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AE-FAB-DSV','AE-FAB-DSV','BFF-SC','ChrgBr','ChargesBene',0,'ChrgBr','',1,'','','Details > Field No.14 ChargesBene']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AE-FAB-DSV','AE-FAB-DSV','SFF-MC','ChrgBr','ChargesBene',0,'ChrgBr','',1,'','','Details > Field No.14 ChargesBene']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AE-FAB-DSV','AE-FAB-DSV','SFF-BS','BankID','Bank ID',1,'BankID','',0,'','999','Details > Field No.1 > Bank ID']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AE-FAB-DSV','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AE-FAB-DSV','*','FormatValidations','*','16','WChargesIndic']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AE-FAB-DSV','*','FormatValidations','*','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AE-FAB-DSV','*','FormatValidations','*','15','W02']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AE-FAB-DSV','*','FormatValidations','*','16','BE01']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('AE-FAB-DSV'):
                paymSpecList = this.getFileFormatFieldsMetaData_AE_FAB_DSV();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_AE_FAB_DSV</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_AE_FAB_DSV()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AE-FAB-DSV','AE-FAB-DSV','SalaryCmpCd','Salary Company Code',1,'SalaryCmpCd','',0,'','XXXXXXXXXXXXXXX','Header > Field No.2 > SalaryCompanyCode']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AE-FAB-DSV','AE-FAB-DSV','CompanyCd','Company Code',1,'CompanyCd','',0,'','XXXXXXXXXX','Header > Field No.3 > CompanyCode']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    protected void updateVendorCodelookupValues()
    {
        if(gSKS_EFT_VendorPaym.BE01)
        {
            this.updateVendorFields('BankID', gSKS_EFT_VendorPaym.BE01);
        }
        if(gSKS_EFT_VendorPaym.WChargesIndic)
        {
            this.updateVendorFields('ChrgBr', gSKS_EFT_VendorPaym.WChargesIndic, true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    protected void updateBankCodelookupValues()
    {
        if(gSKS_EFT_Bank.W01)
        {
            this.updateBankFields('SalaryCmpCd', gSKS_EFT_Bank.W01);
        }
        if(gSKS_EFT_Bank.W02)
        {
            this.updateBankFields('CompanyCd', gSKS_EFT_Bank.W02);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>