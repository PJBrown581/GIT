<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_CITIBANK_PNA</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_CITIBANK_PNA Extends SKS_PP_Format_BankGroup
{
    int mTotalCnt;
    real mTotalAmt;
    // Citibank - PNA Format - Detail Record
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    // Pos 1-10      10      Account Number (RJ-LZF)
        // Pos 11-20     10      Serial Number (RJ-LZF)
        // Pos 21-26     6       Issue Date of Check (MMDDYY)
        // Pos 27-37     11      Check Amount (RJ-LZF), Voids - zero amount
        // Pos 38-40     3       Filler - 3 spaces
        // Pos 41-63     23      Additional Data - blank
        // Pos 64-64     1       Filler - 1 space
        // Pos 65-65     1       Record Type ('N' - non-trailer, 'V' - void)
        // Pos 66-80     15      Filler - 15 spaces
        // Pos 81-140    60      Payee name 1 (remit name)
        // Pos 141-200   60      Payee name 2 (remit attn)
    protected str txtDetail()
    {
        int Mult = 1;
        str ItemType;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
            Mult = 0;
        }
        else
        {
            mTotalAmt = mTotalAmt + mSKS_PP_FileDetail.ChkCuryAmt;
            ItemType = 'N';
        }
    
        mTotalCnt++;
    
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(SKS_PP_StringFormats::strMoney(mSKS_PP_FileDetail.ChkCuryAmt * Mult, 11));
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(23, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(1, '' ,SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(ItemType);
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(60, mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)); //Payee 1
    
        if (mSKS_PP_FileDetail.Module == SKS_PP_Module::AP)
        {
            sb.Append(SKS_PP_StringFormats::strFill(60, mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            //No Payee 2 line in AX for Customer
            sb.Append(SKS_PP_StringFormats::strFill(60, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    // Citibank - PNA Format - Trailer Record
    
        // Pos 1-10      10      Account Number (RJ-LZF)
        // Pos 11-20     10      Total Number of Items (RJ-LZF) (includes Voids)
        // Pos 21-26     6       Filler - 6 spaces
        // Pos 27-37     11      Total Amt of Items (RJ-LZF), Voids - contribute 0
        // Pos 38-64     27      Filler - 27 spaces
        // Pos 65-65     1       Record Type ('T' - trailer)
        // Pos 66-200    135     Filler - 135 spaces
    protected str txtGroupTrailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, int2str(mTotalCnt), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(11, SKS_PP_StringFormats::strMoney(mTotalAmt, 11), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(27, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append('T');
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>