<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_LB_JournalARRecord</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_LB_JournalARRecord
{
    CompanyBankAccountId bankAccount; 
    CustAccount tmpCustID; 
    SKS_LB_CustIDErr custIDErr; 
    CustAccount custIDSugg; 
    CompanyId customerCompany;
    Date fileDate; 
    str pathFile; 
    SKS_LB_FormatId formatID; 
    InvoiceId invoiceIdLoc; 
    InvoiceId lbInvoiceLoc; 
    AmountCur pmtAmountCurLoc; 
    RefRecId tmpPartyId;
    RefRecId custTransOpenRef; 
    RefRecId custTransRef; 
    DimensionDefault dimensionDefault; 
    NoYesId autoCRRev;
    LedgerDimensionDefaultAccount autoRevLedgerDimension; 
    LedgerDimensionDefaultAccount autoRevOffsetLedgerDimension; 
    NoYesId paymJrnlFlag; 
    PaymDate paymentDate;
    SKS_LB_BatchNum batchNum; 
    CustVendPaymFeeId feeId; 
    PaymFeeValue feeValue; 
    ReasonCode autoCRRevReasonCode; 
    LedgerDimensionDefaultAccount offsetCRDimension;
    boolean offsetMapped; 
    RefRecId parentJournalARIDRefRec;

    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setAll</Name>
				<Source><![CDATA[
    public void setAll(CompanyBankAccountId _bankAccount, CustAccount _tmpCustID, SKS_LB_CustIDErr _custIDErr, CustAccount _custIDSugg, 
                        CompanyId _customerCompany, Date _fileDate, str _pathFile, SKS_LB_FormatId _formatID, 
                        InvoiceId _invoiceIdLoc, InvoiceId _lbInvoiceLoc, AmountCur _pmtAmountCurLoc, RefRecId _tmpPartyId,
                        RefRecId _custTransOpenRef, RefRecId _custTransRef, DimensionDefault _dimensionDefault, NoYesId _autoCRRev,
                        LedgerDimensionDefaultAccount _autoRevLedgerDimension, LedgerDimensionDefaultAccount _autoRevOffsetLedgerDimension,
                        NoYesId _paymJrnlFlag, PaymDate _paymentDate, SKS_LB_BatchNum _batchNum, CustVendPaymFeeId _feeId,
                        PaymFeeValue _feeValue, ReasonCode _autoCRRevReasonCode, LedgerDimensionDefaultAccount _offsetCRDimension,
                        boolean _offsetMapped, RefRecId _parentJournalARIDRefRec)
    {
        bankAccount = _bankAccount;
        tmpCustID = _tmpCustID;
        custIDErr = _custIDErr;
        custIDSugg = _custIDSugg;
        customerCompany = _customerCompany;
        fileDate = _fileDate;
        pathFile = _pathFile;
        formatID = _formatID;
        invoiceIdLoc = _invoiceIdLoc;
        lbInvoiceLoc = _lbInvoiceLoc;
        pmtAmountCurLoc = _pmtAmountCurLoc;
        tmpPartyId = _tmpPartyId;
        custTransOpenRef = _custTransOpenRef;
        custTransRef = _custTransRef;
        dimensionDefault = _dimensionDefault;
        autoCRRev = _autoCRRev;
        autoRevLedgerDimension = _autoRevLedgerDimension;
        autoRevOffsetLedgerDimension = _autoRevOffsetLedgerDimension;
        paymJrnlFlag = _paymJrnlFlag;
        paymentDate = _paymentDate;
        batchNum = _batchNum;
        feeId = _feeId;
        feeValue = _feeValue;
        autoCRRevReasonCode = _autoCRRevReasonCode;
        offsetCRDimension = _offsetCRDimension;
        offsetMapped = _offsetMapped;
        parentJournalARIDRefRec = _parentJournalARIDRefRec;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankAccount</Name>
				<Source><![CDATA[
    //CompanyBankAccountId bankAccount;
    CompanyBankAccountId getBankAccount(CompanyBankAccountId _bankAccount = bankAccount)
    {
        ;    
        if (!prmIsDefault(_bankAccount))
        {
            bankAccount = _bankAccount;
        }    
        return bankAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTmpCustID</Name>
				<Source><![CDATA[
    //CustAccount tmpCustID;
    CustAccount getTmpCustID(CustAccount _tmpCustID = tmpCustID)
    {
        ;
        if (!prmIsDefault(_tmpCustID))
        {
            tmpCustID = _tmpCustID;
        }
        return tmpCustID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustIDErr</Name>
				<Source><![CDATA[
    //SKS_LB_CustIDErr custIDErr;
    SKS_LB_CustIDErr getCustIDErr(SKS_LB_CustIDErr _custIDErr = custIDErr)
    {
        ;
        if (!prmIsDefault(_custIDErr))
        {
            custIDErr = _custIDErr;
        }
        return custIDErr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustIDSugg</Name>
				<Source><![CDATA[
    //CustAccount custIDSugg;
    CustAccount getCustIDSugg(CustAccount _custIDSugg = custIDSugg)
    {
        ;
        if (!prmIsDefault(_custIDSugg))
        {
            custIDSugg = _custIDSugg;
        }
        return custIDSugg;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustomerCompany</Name>
				<Source><![CDATA[
    //CompanyId customerCompany;
    CompanyId getCustomerCompany(CompanyId _customerCompany = customerCompany)
    {
        ;
        if (!prmIsDefault(_customerCompany))
        {
            customerCompany = _customerCompany;
        }
        return customerCompany;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileDate</Name>
				<Source><![CDATA[
    //Date fileDate;
    Date getFileDate(Date _fileDate = fileDate)
    {
        ;
        if (!prmIsDefault(_fileDate))
        {
            fileDate = _fileDate;
        }
        return fileDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPathFile</Name>
				<Source><![CDATA[
    //str pathFile;
    str getPathFile(str _pathFile = pathFile)
    {
        ;
        if (!prmIsDefault(_pathFile))
        {
            pathFile = _pathFile;
        }
        return pathFile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatID</Name>
				<Source><![CDATA[
    //SKS_LB_FormatId formatID;
    SKS_LB_FormatId getFormatID(SKS_LB_FormatId _formatID = formatID)
    {
        ;
        if (!prmIsDefault(_formatID))
        {
            formatID = _formatID;
        }
        return formatID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceIdLoc</Name>
				<Source><![CDATA[
    //InvoiceId invoiceIdLoc;
    InvoiceId getInvoiceIdLoc(InvoiceId _invoiceIdLoc = invoiceIdLoc)
    {
        ;
        if (!prmIsDefault(_invoiceIdLoc))
        {
            invoiceIdLoc = _invoiceIdLoc;
        }
        return invoiceIdLoc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLBInvoiceLoc</Name>
				<Source><![CDATA[
    //InvoiceId lbInvoiceLoc;
    InvoiceId getLBInvoiceLoc(InvoiceId _lbInvoiceLoc = lbInvoiceLoc)
    {
        ;
        if (!prmIsDefault(_lbInvoiceLoc))
        {
            lbInvoiceLoc = _lbInvoiceLoc;
        }
        return lbInvoiceLoc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPmtAmountCurLoc</Name>
				<Source><![CDATA[
    //AmountCur pmtAmountCurLoc;
    AmountCur getPmtAmountCurLoc(AmountCur _pmtAmountCurLoc = pmtAmountCurLoc)
    {
        ;
        if (!prmIsDefault(_pmtAmountCurLoc))
        {
            pmtAmountCurLoc = _pmtAmountCurLoc;
        }
        return pmtAmountCurLoc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTmpPartyId</Name>
				<Source><![CDATA[
    //RefRecId tmpPartyId;
    RefRecId getTmpPartyId(RefRecId _tmpPartyId = tmpPartyId)
    {
        ;
        if (!prmIsDefault(_tmpPartyId))
        {
            tmpPartyId = _tmpPartyId;
        }
        return tmpPartyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustTransOpenRef</Name>
				<Source><![CDATA[
    //RefRecId custTransOpenRef;
    RefRecId getCustTransOpenRef(RefRecId _custTransOpenRef = custTransOpenRef)
    {
        ;
        if (!prmIsDefault(_custTransOpenRef))
        {
            custTransOpenRef = _custTransOpenRef;
        }
        return custTransOpenRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustTransRef</Name>
				<Source><![CDATA[
    //RefRecId custTransRef;
    RefRecId getCustTransRef(RefRecId _custTransRef = custTransRef)
    {
        ;
        if (!prmIsDefault(_custTransRef))
        {
            custTransRef = _custTransRef;
        }
        return custTransRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimensionDefault</Name>
				<Source><![CDATA[
    //DimensionDefault dimensionDefault;
    DimensionDefault getDimensionDefault(DimensionDefault _dimensionDefault = dimensionDefault)
    {
        ;
        if (!prmIsDefault(_dimensionDefault))
        {
            dimensionDefault = _dimensionDefault;
        }
        return dimensionDefault;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAutoCRRev</Name>
				<Source><![CDATA[
    //NoYesId autoCRRev;
    NoYesId getAutoCRRev(NoYesId _autoCRRev = autoCRRev)
    {
        ;
        if (!prmIsDefault(_autoCRRev))
        {
            autoCRRev = _autoCRRev;
        }
        return autoCRRev;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAutoRevLedgerDimension</Name>
				<Source><![CDATA[
    //LedgerDimensionDefaultAccount autoRevLedgerDimension;
    LedgerDimensionDefaultAccount getAutoRevLedgerDimension(LedgerDimensionDefaultAccount _autoRevLedgerDimension = autoRevLedgerDimension)
    {
        ;
        if (!prmIsDefault(_autoRevLedgerDimension))
        {
            autoRevLedgerDimension = _autoRevLedgerDimension;
        }
        return autoRevLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAutoRevOffsetLedgerDimension</Name>
				<Source><![CDATA[
    //LedgerDimensionDefaultAccount autoRevOffsetLedgerDimension;
    LedgerDimensionDefaultAccount getAutoRevOffsetLedgerDimension(LedgerDimensionDefaultAccount _autoRevOffsetLedgerDimension = autoRevOffsetLedgerDimension)
    {
        ;
        if (!prmIsDefault(_autoRevOffsetLedgerDimension))
        {
            autoRevOffsetLedgerDimension = _autoRevOffsetLedgerDimension;
        }
        return autoRevOffsetLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymJrnlFlag</Name>
				<Source><![CDATA[
    //NoYesId paymJrnlFlag;
    NoYesId getPaymJrnlFlag(NoYesId _paymJrnlFlag = paymJrnlFlag)
    {
        ;
        if (!prmIsDefault(_paymJrnlFlag))
        {
            paymJrnlFlag = _paymJrnlFlag;
        }
        return paymJrnlFlag;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymentDate</Name>
				<Source><![CDATA[
    //PaymDate paymentDate;
    PaymDate getPaymentDate(PaymDate _paymentDate = paymentDate)
    {
        ;
        if (!prmIsDefault(_paymentDate))
        {
            paymentDate = _paymentDate;
        }
        return paymentDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBatchNum</Name>
				<Source><![CDATA[
    //SKS_LB_BatchNum batchNum;
    SKS_LB_BatchNum getBatchNum(SKS_LB_BatchNum _batchNum = batchNum)
    {
        ;
        if (!prmIsDefault(_batchNum))
        {
            batchNum = _batchNum;
        }
        return batchNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFeeId</Name>
				<Source><![CDATA[
    //CustVendPaymFeeId feeId;
    CustVendPaymFeeId getFeeId(CustVendPaymFeeId _feeId = feeId)
    {
        ;
        if (!prmIsDefault(_feeId))
        {
            feeId = _feeId;
        }
        return feeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFeeValue</Name>
				<Source><![CDATA[
    //PaymFeeValue feeValue;
    PaymFeeValue getFeeValue(PaymFeeValue _feeValue = feeValue)
    {
        ;
        if (!prmIsDefault(_feeValue))
        {
            feeValue = _feeValue;
        }
        return feeValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAutoCRRevReasonCode</Name>
				<Source><![CDATA[
    //ReasonCode autoCRRevReasonCode;
    ReasonCode getAutoCRRevReasonCode(ReasonCode _autoCRRevReasonCode = autoCRRevReasonCode)
    {
        ;
        if (!prmIsDefault(_autoCRRevReasonCode))
        {
            autoCRRevReasonCode = _autoCRRevReasonCode;
        }
        return autoCRRevReasonCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOffsetCRDimension</Name>
				<Source><![CDATA[
    //LedgerDimensionDefaultAccount offsetCRDimension;
    LedgerDimensionDefaultAccount getOffsetCRDimension(LedgerDimensionDefaultAccount _offsetCRDimension = offsetCRDimension)
    {
        ;
        if (!prmIsDefault(_offsetCRDimension))
        {
            offsetCRDimension = _offsetCRDimension;
        }
        return offsetCRDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOffsetMapped</Name>
				<Source><![CDATA[
    //boolean offsetMapped;
    boolean getOffsetMapped(boolean _offsetMapped = offsetMapped)
    {
        ;
        if (!prmIsDefault(_offsetMapped))
        {
            offsetMapped = _offsetMapped;
        }
        return offsetMapped;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getParentJournalARIDRefRec</Name>
				<Source><![CDATA[
    //RefRecId parentJournalARIDRefRec;
    RefRecId getParentJournalARIDRefRec(RefRecId _parentJournalARIDRefRec = parentJournalARIDRefRec)
    {
        ;
        if (!prmIsDefault(_parentJournalARIDRefRec))
        {
            parentJournalARIDRefRec = _parentJournalARIDRefRec;
        }
        return parentJournalARIDRefRec;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>