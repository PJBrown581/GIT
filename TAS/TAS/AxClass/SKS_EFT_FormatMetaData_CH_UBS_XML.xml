<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_CH_UBS_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_CH_UBS_XML Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_CH_UBS_XML Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220825';
        dataContractVersion = '1.0';
        conFormatID = ['CH-UBS-XML'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'UBS Customer Credit Transfers pain.001.001.03.ch.02',0,'','','CH-UBS-XML',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,0,0,1,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'CH-UBS-XML',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('CH-UBS-XML'):
                paymSpecList = this.getPaymSpecsMetaData_CH_UBS_XML();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_CH_UBS_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_CH_UBS_XML()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Single Euro Payments Area',1,'SEPA','','SEPA','TRADE PAY',0,'CH-UBS-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'EBA Priority Service',1,'PRPT','','PRPT','TRADE PAY',0,'CH-UBS-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Same Day Value',1,'SDVA','','SDVA','TRADE PAY',0,'CH-UBS-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Urgent Payment',1,'URGP ','','URGP','TRADE PAY',0,'CH-UBS-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ESR - Payment slip with reference number',1,'ZA1-ESR','','ZA1-ESR','TRADE PAY',0,'CH-UBS-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ES - 1-step payment slip',1,'ZA2-1-ES','','ZA2-1-ES','TRADE PAY',0,'CH-UBS-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ES - 2-step payment slip',1,'ZA2-2-ES','','ZA2-2-ES','TRADE PAY',0,'CH-UBS-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'IBAN/postal account and IID/BIC',1,'ZA3','','ZA3','TRADE PAY',0,'CH-UBS-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Salary payments',1,'ZA3-SALAR','','ZA3-SALAR','TRADE PAY',0,'CH-UBS-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA credit transfer',1,'ZA5-SEPA','','ZA5-SEPA','TRADE PAY',0,'CH-UBS-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Payment to an abroad bank',1,'ZA6','','ZA6','TRADE PAY',0,'CH-UBS-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Foreign currency - ZA4',1,'ZA4','','ZA4','TRADE PAY',0,'CH-UBS-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Foreign currency - QRR',1,'QRR','','QRR','TRADE PAY',0,'CH-UBS-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Foreign currency - SCOR',1,'SCOR','','SCOR','TRADE PAY',0,'CH-UBS-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('CH-UBS-XML'):
                notesList = this.getNotesMetaData_CH_UBS_XML();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_CH_UBS_XML</Name>
				<Source><![CDATA[
    private container getNotesMetaData_CH_UBS_XML()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['CH-UBS-XML','SEPA','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor address are stored on their specific fields.::-Cash and bank management module > Bank Account:--Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:--Either SWIFT code or Routing number is required. If both are populated SWIFT code will take precedence.::-Vendor Bank Account fields:--Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:--Either the Routing number or SWIFT code is required. If both are populated SWIFT code will take precedence.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is stored in the Beneficiary Name field.:--Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field.:--Building number is stored in the Address 2.:--City, Zip/postal and Country Code are stored on their specific fields.:--The charges bearer is set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:--Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CH-UBS-XML','PRPT','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor address are stored on their specific fields.::-Cash and bank management module > Bank Account:--Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:--Either SWIFT code or Routing number is required. If both are populated SWIFT code will take precedence.::-Vendor Bank Account fields:--Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:--Either the Routing number or SWIFT code is required. If both are populated SWIFT code will take precedence.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is stored in the Beneficiary Name field.:--Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field.:--Building number is stored in the Address 2.:--City, Zip/postal and Country Code are stored on their specific fields.:--The charges bearer is set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:--Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CH-UBS-XML','SDVA','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor address are stored on their specific fields.::-Cash and bank management module > Bank Account:--Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:--Either SWIFT code or Routing number is required. If both are populated SWIFT code will take precedence.::-Vendor Bank Account fields:--Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:--Either the Routing number or SWIFT code is required. If both are populated SWIFT code will take precedence.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is stored in the Beneficiary Name field.:--Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field.:--Building number is stored in the Address 2.:--City, Zip/postal and Country Code are stored on their specific fields.:--The charges bearer is set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:--Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CH-UBS-XML','URGP','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor address are stored on their specific fields.::-Cash and bank management module > Bank Account:--Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:--Either SWIFT code or Routing number is required. If both are populated SWIFT code will take precedence.::-Vendor Bank Account fields:--Either IBAN or Bank account number is required. If both are populated IBAN will take precedence.:--Either the Routing number or SWIFT code is required. If both are populated SWIFT code will take precedence.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is stored in the Beneficiary Name field.:--Creditor > Postal Address information is stored in the Beneficiary section.:--Street is stored in the Address 1 field.:--Building number is stored in the Address 2.:--City, Zip/postal and Country Code are stored on their specific fields.:--The charges bearer is set on the Charges indicator field in the Other notes section.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-2 tab:--Intermediary Agent BIC will be included if the SWIFT code on the Intermediary bank section is populated.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CH-UBS-XML','ZA1-ESR','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor address are stored on their specific fields.:--Batch booking is required and set on the Batch booking(Y/N) field.::-Cash and bank management module > Bank Account:--Either IBAN or bank account number is required.If both are exist IBAN will take the precedence.::-Vendor Bank Account fields:--Bank account number is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required and stored in the Beneficiary Name field:--Street number is stored in the Address 1 field.:--Postal code stored in the Zip/postal code field.:--Town name stored in the City field.:--Country stored in the Country/region field.::-Payment id is required and stored in the Invoice journal.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CH-UBS-XML','ZA2-1-ES','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor address are stored on their specific fields.:--Batch booking is required and set on the Batch booking(Y/N) field.::-Cash and bank management module > Bank Account:--Either IBAN or bank account number is required.If both are exist IBAN will take the precedence.:--Either SWIFT code or Routing number is required. If both are exists then SWIFT code will take precedence.::-Vendor Bank Account fields:--Routing number is required.:--Bank account number is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required and stored in the Beneficiary Name field:--Street number is stored in the Address 1 field.:--Postal code stored in the Zip/postal code field.:--Town name stored in the City field.:--Country stored in the Country/region field.::-Unstructured information will be stored in the Description field of Payment journal line.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CH-UBS-XML','ZA2-2-ES','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor address are stored on their specific fields.:--Batch booking is required and set on the Batch booking(Y/N) field.::-Cash and bank management module > Bank Account:--Either IBAN or bank account number is required.If both are exist IBAN will take the precedence.:--Either SWIFT code or Routing number is required. If both are exists then SWIFT code will take precedence.::-Vendor Bank Account fields:--Routing number is required.:--IBAN is required.:--Bank account number is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required and stored in the Beneficiary Name field:--Street number is stored in the Address 1 field.:--Postal code stored in the Zip/postal code field.:--Town name stored in the City field.:--Country stored in the Country/region field.::-Beneficiary bank:--CdtrAgt name is required and stored in the Name field.::-Unstructured information will be stored in the Description field of Payment journal line.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CH-UBS-XML','ZA3','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor address are stored on their specific fields.:--Batch booking is required and set on the Batch booking(Y/N) field.::-Cash and bank management module > Bank Account:--Either IBAN or bank account number is required.If both are exist IBAN will take the precedence.:--Either SWIFT code or Routing number is required. If both are exists then SWIFT code will take precedence.::-Vendor Bank Account fields:--Either Swift code or Routing number is required.If both are exist Swift code will take the precedence.:--Either IBAN or bank account number is required.If both are exist IBAN will take the precedence.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required and stored in the Beneficiary Name field:--Street number is stored in the Address 1 field.:--Postal code stored in the Zip/postal code field.:--Town name stored in the City field.:--Country stored in the Country/region field.::-Unstructured information will be stored in the Description field of Payment journal line.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CH-UBS-XML','ZA3-SALAR','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor address are stored on their specific fields.:--Batch booking is required and set on the Batch booking(Y/N) field.::-Cash and bank management module > Bank Account:--Either IBAN or bank account number is required.If both are exist IBAN will take the precedence.:--Either SWIFT code or Routing number is required. If both are exists then SWIFT code will take precedence.::-Vendor Bank Account fields:--Routing number is required.:--Either IBAN or bank account number is required.If both are exist IBAN will take the precedence.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required and stored in the Beneficiary Name field:--Street number is stored in the Address 1 field.:--Postal code stored in the Zip/postal code field.:--Town name stored in the City field.:--Country stored in the Country/region field.::-Unstructured information will be stored in the Description field of Payment journal line.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CH-UBS-XML','ZA5-SEPA','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor address are stored on their specific fields.:--Batch booking is required and set on the Batch booking(Y/N) field.::-Cash and bank management module > Bank Account:--Either IBAN or bank account number is required.If both are exist IBAN will take the precedence.:--Either SWIFT code or Routing number is required. If both are exists then SWIFT code will take precedence.::-Vendor Bank Account fields:--Swift code is required.:--IBAN is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required and stored in the Beneficiary Name field:--Street number is stored in the Address 1 field.:--Postal code stored in the Zip/postal code field.:--Town name stored in the City field.:--Country stored in the Country/region field.::-Payment id is required and stored in the Invoice journal.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CH-UBS-XML','ZA6','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor address are stored on their specific fields.:--Batch booking is required and set on the Batch booking(Y/N) field.::-Cash and bank management module > Bank Account:--Either IBAN or bank account number is required.If both are exist IBAN will take the precedence.:--Either SWIFT code or Routing number is required. If both are exists then SWIFT code will take precedence.::-Vendor Bank Account fields:--Either Swift code or routing number is required. If both are exist Swift code will take the precedence.:--Either IBAN or bank account number is required.If both are exist IBAN will take the precedence.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required and stored in the Beneficiary Name field:--Street number is stored in the Address 1 field.:--Postal code stored in the Zip/postal code field.:--Town name stored in the City field.:--Country stored in the Country/region field.::-Beneficiary bank:-CdtrAgt details are stored on Beneficiary bank:--Creditor agent name is stored on Name field.:--Street name is stored on the Address field.:--Building number is stored on the Branch field.:--Town name is stored on the city field.:--Country is stored on the Country/region field.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-3 tab:--InstrForCdtrAgt information is stored on Payment Instructions group.::-Unstructured information will be stored in the Description field of Payment journal line.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CH-UBS-XML','ZA4','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name is required.:--Debtor address are stored on their specific fields.:--Batch booking is required and set on the Batch booking(Y/N) field.::-Cash and bank management module > Bank Account:--Either IBAN or bank account number is required.If both are exist IBAN will take the precedence.:--Either SWIFT code or Routing number is required. If both are exists then SWIFT code will take precedence.::-Vendor Bank Account fields:--Either Swift code or routing number is required. If both are exist Swift code will take the precedence.:--Either IBAN or bank account number is required.If both are exist IBAN will take the precedence.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Creditor Name is required and stored in the Beneficiary Name field:--Street number is stored in the Address 1 field.:--Postal code stored in the Zip/postal code field.:--Town name stored in the City field.:--Country stored in the Country/region field.::-Beneficiary bank:-CdtrAgt details are stored on Beneficiary bank:--Creditor agent name is stored on Name field.:--Street name is stored on the Address field.:--Building number is stored on the Branch field.:--Town name is stored on the city field.:--Country is stored on the Country/region field.::-Unstructured information will be stored in the Description field of Payment journal line.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-3 tab:--InstrForCdtrAgt information is stored on Payment Instructions group.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CH-UBS-XML','QRR','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Payment notes are stored in Payment journal > Payment > Notes tab.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CH-UBS-XML','SCOR','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Payment notes are stored in Invoice journal > Payment > Notes tab.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('CH-UBS-XML'):
                validationsList = this.getValidationsMetaData_CH_UBS_XML();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_CH_UBS_XML</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_CH_UBS_XML()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','QRR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','GrpHdr > InitgPty > CtctDtls > Nm ','Name related to bank','15','WOrdPartyName','','',0,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','QRR','','IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN ','IBAN',0,'IBAN','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','QRR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'14',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','QRR','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','QRR','','Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','QRR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','QRR','','Bank Account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Other > Id ','Bank Account number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','QRR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','QRR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','QRR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','QRR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','QRR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','QRR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','QRR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SCOR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','GrpHdr > InitgPty > CtctDtls > Nm ','Name related to bank','15','WOrdPartyName','','',0,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SCOR','','IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN ','IBAN',0,'IBAN','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SCOR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'14',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SCOR','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SCOR','','Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SCOR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SCOR','','Bank Account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Other > Id ','Bank Account number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SCOR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SCOR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SCOR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SCOR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SCOR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SCOR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SCOR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,'','70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'21',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','Vendor Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift code ','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related  Vendor','9','SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','Vendor city','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','IBAN related to Vendor','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SEPA','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,'','70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'21',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,'2','','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','Intermediary Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Name','Intermediary Bank Name','Intermediary Bank Name','16','WIntBankName','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','Vendor Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift code ','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related  Vendor','9','SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','Vendor city','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','IBAN related to Vendor','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','PRPT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,'','70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'21',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,'2','','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','Intermediary Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Name','Intermediary Bank Name','Intermediary Bank Name','16','WIntBankName','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','Vendor Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift code ','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related  Vendor','9','SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','Vendor city','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','IBAN related to Vendor','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','SDVA','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,'','70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'21',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,'2','','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','Intermediary Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Name','Intermediary Bank Name','Intermediary Bank Name','16','WIntBankName','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','Vendor Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift code ','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related  Vendor','9','SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','Vendor city','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','IBAN related to Vendor','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','URGP','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA1-ESR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,'','70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA1-ESR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA1-ESR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'21',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA1-ESR','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA1-ESR','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA1-ESR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA1-ESR','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA1-ESR','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA1-ESR','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA1-ESR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA1-ESR','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','Vendor city','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA1-ESR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-1-ES','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,'','70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-1-ES','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-1-ES','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-1-ES','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-1-ES','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-1-ES','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-1-ES','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-1-ES','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'21',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-1-ES','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-1-ES','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-1-ES','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-1-ES','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-1-ES','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-1-ES','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-1-ES','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-1-ES','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','Vendor city','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-1-ES','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,'','70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'21',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','Vendor Bank name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','Beneficiary Bank Name','Beneficiary Bank Name','16','WBenBankName','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','Vendor city','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','IBAN related to Vendor','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA2-2-ES','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,'','70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'21',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Vendor Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift code ','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related  Vendor','9','SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Vendor Bank name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','Beneficiary Bank Name','Beneficiary Bank Name','16','WBenBankName','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address','Beneficiary Bank Address Line 1 Beneficiary Bank Address Line 2','Beneficiary Bank Address','16','WBenBankAddr','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > City','Beneficiary Bank City','Beneficiary Bank City','16','WBenBankCity','','',1,'2',1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Vendor Bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Country/Region','Beneficiary Bank Country Code','Beneficiary Bank Country','16','WBenBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','Vendor city','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','IBAN related to Vendor','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,'','70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'21',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','Vendor Bank name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','Beneficiary Bank Name','Beneficiary Bank Name','16','WBenBankName','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','Vendor city','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','IBAN related to Vendor','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA3-SALAR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA5-SEPA','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,'','70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA5-SEPA','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA5-SEPA','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA5-SEPA','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA5-SEPA','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA5-SEPA','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA5-SEPA','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA5-SEPA','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'21',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA5-SEPA','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA5-SEPA','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA5-SEPA','','Vendor Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift code ','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related  Vendor','9','SWIFTNo','','',0,0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA5-SEPA','','Vendor Bank name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','Beneficiary Bank Name','Beneficiary Bank Name','16','WBenBankName','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA5-SEPA','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA5-SEPA','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA5-SEPA','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA5-SEPA','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA5-SEPA','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA5-SEPA','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','Vendor city','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA5-SEPA','','IBAN related to Vendor','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,'','70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'21',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Vendor Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift code ','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related  Vendor','9','SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Vendor Bank name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','Beneficiary Bank Name','Beneficiary Bank Name','16','WBenBankName','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address','Beneficiary Bank Address Line 1 Beneficiary Bank Address Line 2','Beneficiary Bank Address','16','WBenBankAddr','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > City','Beneficiary Bank City','Beneficiary Bank City','16','WBenBankCity','','',1,'2',1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Vendor Bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Country/Region','Beneficiary Bank Country Code','Beneficiary Bank Country','16','WBenBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','Vendor city','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','IBAN related to Vendor','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Line1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instruction(group) > Line1','P32 Record > Position(13-47)','Line 1 Instruction text','16','WPmtInstText1','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Line2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instruction(group) > Line2','P32 Record > Position(13-47)','Line 2 Instruction text','16','WPmtInstText2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Line3','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instruction(group) > Line3','P32 Record > Position(13-47)','Line 3 Instruction text','16','WPmtInstText3','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA6','','Line4','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instruction(group) > Line4','P32 Record > Position(13-47)','Line 4 Instruction text','16','WPmtInstText4','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,'','70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'21',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Vendor Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift code ','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related  Vendor','9','SWIFTNo','','','3',0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Vendor Bank name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','Beneficiary Bank Name','Beneficiary Bank Name','16','WBenBankName','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address','Beneficiary Bank Address Line 1 Beneficiary Bank Address Line 2','Beneficiary Bank Address','16','WBenBankAddr','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > City','Beneficiary Bank City','Beneficiary Bank City','16','WBenBankCity','','',1,'2',1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Vendor Bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Country/Region','Beneficiary Bank Country Code','Beneficiary Bank Country','16','WBenBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to vendor','16','WBeneAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine ','Vendor city','16','WBeneCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','IBAN related to Vendor','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Line1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instruction(group) > Line1','P32 Record > Position(13-47)','Line 1 Instruction text','16','WPmtInstText1','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Line2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instruction(group) > Line2','P32 Record > Position(13-47)','Line 2 Instruction text','16','WPmtInstText2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Line3','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instruction(group) > Line3','P32 Record > Position(13-47)','Line 3 Instruction text','16','WPmtInstText3','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-UBS-XML','ZA4','','Line4','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instruction(group) > Line4','P32 Record > Position(13-47)','Line 4 Instruction text','16','WPmtInstText4','','',1,0,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CH-UBS-XML','Chrgbr','Charge Bearer']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CH-UBS-XML','ClrSysIdCd','Clearing System Id Code']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','Chrgbr','Borne by Creditor','CRED']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','Chrgbr','Borne by Debtor','DEBT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','Chrgbr','Shared','SHAR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','Chrgbr','Service Level','SLEV']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','Australian Bank State Branch Code(BSB)','AUBSB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','Austrian Bankleitzahl','ATBLZ']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','Canadian Payments Association Payment Routing Number','CACPA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','CNAPS Identifier','CNAPS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','Swiss Financial Institution Identification Short','CHBCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','Swiss Financial Institution Identification Long','CHSIC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','German Bankleitzahl','DEBLZ']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','Spanish Domestic Interbanking Code','ESNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','Helenic Bank Identification Code','GRBIC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','UK Domestic Sort Code','GBDSC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','Hong Kong Bank Code','HKNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','Indian Financial System Code','INFSC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','Irish National Clearing Code','IENCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','Italian Domestic Identification Code','ITNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','Japan Zengin Clearing Code','JPZGN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','New Zealand National Clearing Code','NZNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','Polish National Clearing Code','PLKNR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','Portuguese National Clearing Code','PTNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','Russian Central Bank Identification Code','RUCBC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','IBG Sort Code','SGIBG']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','Sweden Bank giro Clearing Code','SESBA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','Thai Central Bank Identification Code','THCBC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','Financial Institution Code','TWNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','United States Routing Number(Fedwire NACHA)','USABA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','CHIPS Participant Identifier','USPID']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','ClrSysIdCd','South African National Clearing Code','ZANCC']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('CH-UBS-XML'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_CH_UBS_XML();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_CH_UBS_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_CH_UBS_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-UBS-XML','CH-UBS-XML','SDVA','Chrgbr','Charge Bearer',0,'Chrgbr','Shared',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-UBS-XML','CH-UBS-XML','SDVA','ClrSysIdCd','Clearing System Identification',0,'ClrSysIdCd','Swiss Financial Institution Identification Short',0,'','','PmtInf > CdtTrfTxInf > CdtrAgt > FinInstnId > ClrSysMmbId > ClrSysId > Cd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-UBS-XML','CH-UBS-XML','PRPT','Chrgbr','Charge Bearer',0,'Chrgbr','Shared',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-UBS-XML','CH-UBS-XML','QRR','Chrgbr','Charge Bearer',0,'Chrgbr','Shared',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-UBS-XML','CH-UBS-XML','SCOR','Chrgbr','Charge Bearer',0,'Chrgbr','Shared',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-UBS-XML','CH-UBS-XML','SEPA','Chrgbr','Charge Bearer',0,'Chrgbr','Shared',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-UBS-XML','CH-UBS-XML','URGP','Chrgbr','Charge Bearer',0,'Chrgbr','Shared',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-UBS-XML','CH-UBS-XML','ZA1-ESR','Chrgbr','Charge Bearer',0,'Chrgbr','Shared',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-UBS-XML','CH-UBS-XML','ZA2-1-ES','Chrgbr','Charge Bearer',0,'Chrgbr','Shared',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-UBS-XML','CH-UBS-XML','ZA2-2-ES','Chrgbr','Charge Bearer',0,'Chrgbr','Shared',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-UBS-XML','CH-UBS-XML','ZA3','Chrgbr','Charge Bearer',0,'Chrgbr','Shared',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-UBS-XML','CH-UBS-XML','ZA3-SALAR','Chrgbr','Charge Bearer',0,'Chrgbr','Shared',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-UBS-XML','CH-UBS-XML','ZA4','Chrgbr','Charge Bearer',0,'Chrgbr','Shared',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-UBS-XML','CH-UBS-XML','ZA5-SEPA','Chrgbr','Charge Bearer',0,'Chrgbr','Shared',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-UBS-XML','CH-UBS-XML','ZA6','Chrgbr','Charge Bearer',0,'Chrgbr','Shared',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatLookup','QQR','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','QQR','15','WOrdPartyName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','QQR','0','IBAN']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','QQR','0','AccountNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','QQR','0','SWIFTNo']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','QQR','0','RegistrationNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','QQR','9','BankIBAN']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','QQR','9','AccountNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','QQR','9','SWIFTNo']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','QQR','9','RegistrationNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','QQR','16','WBeneName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','QQR','16','WBeneZipPostal']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','QQR','16','WBeneCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','QQR','16','WBeneState']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','QQR','16','WBeneCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','QQR','16','WBeneAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','QQR','16','WBeneAddr2']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','ZA1-ESR','15','WOrdPartyCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','ZA1-ESR','15','WOrdPartyAddr']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','ZA1-ESR','15','WOrdPartyAddr2']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','ZA1-ESR','15','WOrdPartyCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatValidations','ZA1-ESR','15','WOrdPartyZipCode']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatLookup','Borne by Debtor','6','DEBT']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatLookup','Borne by Creditor','6','CRED']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatLookup','Shared','6','SHAR']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','CH-UBS-XML','FormatLookup','Service Level','6','SLEV']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','*','FormatValidations','*','16','WChargesIndic']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','*','FormatValidations','*','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-UBS-XML','*','FormatValidations','*','15','W02']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CH-UBS-XML','Btchbkg','Batch booking']);

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','Btchbkg','Y','Y']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CH-UBS-XML','Btchbkg','N','N']);

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('CH-UBS-XML'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_CH_UBS_XML();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_CH_UBS_XML</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_CH_UBS_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-UBS-XML','CH-UBS-XML','Btchbkg','Batch booking',0,'Btchbkg','',1,'','','PmtInf > BtchBookg']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-UBS-XML','CH-UBS-XML','InitiatingprtyId','Initiating party Id',1,'InitiatingprtyId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > Orgid > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('CH-UBS-XML'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('Btchbkg', gSKS_EFT_Bank.W01, true);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('InitiatingprtyId', gSKS_EFT_Bank.W02);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'CH-UBS-XML':
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Chrgbr', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>