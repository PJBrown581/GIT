<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_PNC_PAFF_v20140301_AR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_PNC_PAFF_v20140301_AR
/// </summary>
class SKS_EFT_FormatMetaData_US_PNC_PAFF_v20140301_AR  Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230520';
        dataContractVersion = '1.0';
        conFormatID = ['US-PNC-PAFF-v20140301-AR'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,0,0,0,'','','','',0,'UUUUUUUUUUUUUUU','Sender identification number','Customer Name','UUUUUUUUUUUUUUUU',1,'PNC - Payables Advantage Flat File version 2014-03-01',0,'','','US-PNC-PAFF-v20140301-AR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,1,'350',0,0,'','','',0,0,'','',0,'','',0,'','','6',0,0,0,0,0,'US-PNC-PAFF-v20140301-AR',1,1,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-PNC-PAFF-v20140301-AR'):
                paymSpecList = this.getPaymSpecsMetaData_US_PNC_PAFF_v20140301_AR();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_PNC_PAFF_v20140301_AR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_PNC_PAFF_v20140301_AR()
    {
        container   paymSpecList;
        
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'ACH - Corporate Trade Exchange (CTX)',1,'ACH-CTX','','ACH-CTX','TRADE PAY',0,'US-PNC-PAFF-v20140301-AR',0,1,0,0,1,0,0,1,1,0,1,0,0,0,0,0,1,2,0,0,0,0,0,0,0]);
        
        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-PNC-PAFF-v20140301-AR'):
                notesList = this.getNotesMetaData_US_PNC_PAFF_v20140301_AR();
                break;
        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_PNC_PAFF_v20140301_AR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_PNC_PAFF_v20140301_AR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-PNC-PAFF-v20140301-AR','ACH-CTX','-Verify the Control Total file name in the File Name Addition field on the general tab of EFT+ file formats.:-Sender identification number is required and is stored on the Account/Company tab of Bank Account >> AP EFT+. This value is assigned by PNC.:-Customer name is stored on the Account/Company tab of Bank Account >> AP EFT+.:-The Bank account type field must be set to Savings account or Checking account on the General tab of Vendor Bank Account and will default to Savings account.']);
        
        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-PNC-PAFF-v20140301-AR'):
                validationsList = this.getValidationsMetaData_US_PNC_PAFF_v20140301_AR();
                break;

        }

        return validationsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_PNC_PAFF_v20140301_AR</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_PNC_PAFF_v20140301_AR()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-PAFF-v20140301-AR','ACH-CTX','','Routing number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > DrctDbtTxInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',0,0,1,'9',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-PAFF-v20140301-AR','ACH-CTX','','Name','Accounts receivables > All customers > Select a customer > General (Fast tab) > Name','PmtInf > DrctDbtTxInf > Dbtr > Nm','Name related to customer','5','Name','','',0,0,1,'22',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-PAFF-v20140301-AR','ACH-CTX','','Customer Country','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Country/region','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > Ctry','Country related to Legal entity','2','CountryRegionId','','',1,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-PAFF-v20140301-AR','ACH-CTX','','Customer street','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Street','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Street','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-PAFF-v20140301-AR','ACH-CTX','','Customer postal code','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > Zip/postal code','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','Zipcode','','',1,1,'','',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-PAFF-v20140301-AR','ACH-CTX','','Customer city','Accounts receivables > All customers > Select a customer > Address (fast tab) > edit > City','PmtInf > DrctDbtTxInf > Dbtr > PstlAdr > AdrLine','Address related to Legal entity','2','City','','',1,'2',1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-PAFF-v20140301-AR','ACH-CTX','','Customer bank account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','PmtInf > DrctDbtTxInf > DbtrAcct > Id > Othr > Id','Bank account number related to customer',1,'AccountNum','','',0,0,1,'17',0,1]);


        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
           
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {

        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData_US_PNC_PAFF_v20140301_AR</Name>
				<Source><![CDATA[
    private container getControlFormatMetaData_US_PNC_PAFF_v20140301_AR()
    {
        container   ControlFormatList;

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-PNC-PAFF-v20140301-AR','US-PNC-PAFF-v20140301-AR','FormatLookup','*','*','']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch(_formatID)
        {
            case ('US-PNC-PAFF-v20140301-AR'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_PNC_PAFF_v20140301_AR();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_PNC_PAFF_v20140301_AR</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData_US_PNC_PAFF_v20140301_AR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-PNC-PAFF-v20140301-AR','US-PNC-PAFF-v20140301-AR','BussinessApplFormat','Business Application Format',1,'BussinessApplFormat','',0,'','XXX','File Header Record > Business Application Format']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'US-PNC-PAFF-v20140301-AR':
                if(gSKS_EFTAR_Bank.W01)
                {
                    this.updateBankFields('BussinessApplFormat', gSKS_EFTAR_Bank.W01);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>