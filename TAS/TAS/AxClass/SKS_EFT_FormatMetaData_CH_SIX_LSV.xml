<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_CH_SIX_LSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_CH_SIX_LSV Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_CH_SIX_LSV Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220608';
        dataContractVersion = '1.0';
        conFormatID = ['CH-SIX-LSV'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,0,0,0,'','','','',0,'','','','',1,'CH-SIX-LSV',0,'','','CH-SIX-LSV',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'CH-SIX-LSV',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('CH-SIX-LSV'):
                paymSpecList = this.getPaymSpecsMetaData_CH_SIX_LSV();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_CH_SIX_LSV</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_CH_SIX_LSV()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,0,0,0,'DIRECT PAY',0,0,0,0,0,'PAYMENT',1,'PMT','','PMT','',0,'CH-SIX-LSV',0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,3,2,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('CH-SIX-LSV'):
                notesList = this.getNotesMetaData_CH_SIX_LSV();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_CH_SIX_LSV</Name>
				<Source><![CDATA[
    private container getNotesMetaData_CH_SIX_LSV()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['CH-SIX-LSV','PMT','-For additional details on field mappings see the Field validation rules tab.::-Creditor address is stored on Organization administration > Setup > Organization > Legal entities > Address.:--Address will print only if the Purpose of the address is mentioned as Direct Debit. Otherwise address will be ignored.:--City is stored on City field.:--Country is stored on Country/region field.::-Debtor address is stored on Accounts Receivable > All Customer > Select Customer > Address(Fast tab):--Address will print only if the Purpose of the address is mentioned as Direct Debit. Otherwise address will be ignored.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('CH-SIX-LSV'):
                validationsList = this.getValidationsMetaData_CH_SIX_LSV();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_CH_SIX_LSV</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_CH_SIX_LSV()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-SIX-LSV','PMT','','Routing number','TAS > Common > Customer eBanking details> Customer bank accounts > General tab > Identification(group) > Routing number','Routing number:position 14-18(Record-875)','Routing number related to Customer',1,'RegistrationNum','','',0,0,'','5',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-SIX-LSV','PMT','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','Routing number:position 27-31(Record-875)','Routing number related to Bank',0,'RegistrationNum','','',0,0,'','5',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-SIX-LSV','PMT','','IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','IBAN:position 65-97(Record-875)','IBAN related to Bank',0,'IBAN','','',0,0,'','34',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-SIX-LSV','PMT','','Street','Organization and administration > Setup > Organization (Fast tab) > Legal entities > Address > Edit > Street','Street:position 133-167(Record-875)','Street related to legal entity','17','Street','','',1,0,'','35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-SIX-LSV','PMT','','City','Organization and administration > Setup > Organization (Fast tab) > Legal entities > Address > Edit > City','City:position 168-202(Record-875)','City related to legal entity','17','City','','',1,0,'','35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-SIX-LSV','PMT','','Country/region','Organization and administration > Setup > Organization (Fast tab) > Legal entities > Address > Edit >  Country/region','Country/region:position 203-237(Record-875)','Country related to legal entity','17','CountryRegionId','','',1,0,'','35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-SIX-LSV','PMT','','IBAN','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > IBAN','IBAN:position 238-271(Record-875)','IBAN related to Customer bank',1,'BankIBAN','','',0,0,'','34',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-SIX-LSV','PMT','','Bank  account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank  account number','Bank  account number:osition 238-271(Record-875)','Bank  account number related to Customer bank',1,'AccountNum','','',0,0,'','34',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-SIX-LSV','PMT','','Name or Description','Accounts receivables > All customers > Select a customer > Address (Fast tab) > Edit > Name or Description','Name or Description:position 272-306(Record-875)','Name related to Customer','5','Name','','',1,0,'','35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-SIX-LSV','PMT','','Street','Accounts receivables > All customers > Select a customer > Address (Fast tab) > Edit > Street','Street:position 307-341(Record-875)','Street related to Customer','2','Street','','',1,0,'','35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-SIX-LSV','PMT','','City','Accounts receivables > All customers > Select a customer > Address (Fast tab) > Edit > City','City:position 342-376(Record-875)','City related to Customer','2','City','','',1,0,'','35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CH-SIX-LSV','PMT','','Country/region','Accounts receivables > All customers > Select a customer > Address (Fast tab) > Edit > Country/region','Country/region:position 377-411(Record-875)','Country related to Customer','2','CountryRegionId','','',1,0,'','35',0,1]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CH-SIX-LSV','CH-SIX-LSV','FormatValidations','PMT','18','Description']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('CH-SIX-LSV'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_CH_SIX_LSV();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_CH_SIX_LSV</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_CH_SIX_LSV()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-SIX-LSV','CH-SIX-LSV','SenderIdentifctn','Sender Identification',1,'SenderIdentifctn','',0,'','XXXXX','Sender Identification']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-SIX-LSV','CH-SIX-LSV','ProcessType','Processing type',1,'ProcessType','',0,'','X','Processing type']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-SIX-LSV','CH-SIX-LSV','LSVRef','LSV reference',1,'LSVRef','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXX','LSV reference']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CH-SIX-LSV','CH-SIX-LSV','ESRPartyNum','ESR party number',1,'ESRPartyNum','',0,'','XXXXXXXXX','ESR party number']);


        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateARBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the direct debit bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateARBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('CH-SIX-LSV'):
                if(gSKS_EFTAR_Bank.W01)
                {
                    this.updateARBankFields('SenderIdentifctn', gSKS_EFTAR_Bank.W01);
                }
                if(gSKS_EFTAR_Bank.W02)
                {
                    this.updateARBankFields('ProcessType', gSKS_EFTAR_Bank.W02);
                }
                if(gSKS_EFTAR_Bank.W03)
                {
                    this.updateARBankFields('LSVRef', gSKS_EFTAR_Bank.W03);
                }
                if(gSKS_EFTAR_Bank.W04)
                {
                    this.updateARBankFields('ESRPartyNum', gSKS_EFTAR_Bank.W04);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>