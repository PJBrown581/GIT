<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_COB_V1_2_117</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_COB_V1_2_117 Extends SKS_PP_Format_BankGroup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        /*
            Capitol One - V1.2- 117
    
            Field    Pos     Description     Size    Left/Right Justified    Zero/Blank Filled    Comments
            1        1-10    Account Number  10      R                      Z                       Customer Account Number
            2        11-20   Check Number    10      R                      Z
            3        21-30   $ Check Amount  10      R                      Z                       Two (2) decimals implied
            4        31-36   Issue Date      6       R                      Z                       MMDDYY
            5        37-37   Void Indicator  1       R                      B                       “V”
            6        38-117  Payee Name      80      L                      B                       From Check (optional for Positive Pay, required for Payee Positive Pay)
        */
        str ItemType;
        int Mult;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        // Convert negative void numbers to positives
        Mult = 1;
        if (mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
            if (mSKS_PP_FileDetail.ChkCuryAmt < 0)
            {
                Mult = -1;
            }
        }
        else
        {
            ItemType = ' ';
        }
        //1 1-10 Account Number  10  R Z Customer Account Number
        sb.Append(SKS_PP_StringFormats::strFill(10, strLTrim(StrRTrim(mSKS_PP_FileDetail.BnkBankAcct)), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        //2 11-20 Check Number 10 R Z
        sb.Append(SKS_PP_StringFormats::strFill(10, strLtrim(strRTrim(mSKS_PP_FileDetail.ChkRefNbr)), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        // 3 21-30 Check Amount  10 R Z Two (2) decimals implied
        sb.Append(SKS_PP_StringFormats::strMoney(Mult * mSKS_PP_FileDetail.ChkCuryAmt, 10));
        //4 31-36 Issue Date 6 R Z MMDDYY
        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(mSKS_PP_FileDetail.ChkDocDate));
        //5 37-37 Void Indicator 1 R B “V”
        sb.Append(ItemType);
        //6 38-117 Payee Name 80 L B From Check (optional for Positive Pay, required for Payee Positive Pay)
        sb.Append(SKS_PP_StringFormats::strFill(80, mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>