<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_AU_WESTPACBANK_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_AU_WESTPACBANK_CSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_AU_WESTPACBANK_CSV extends SKS_EFT_Format
{
    #define.FormatVersion('20221207')
    #define.Separator(',')
    #define.ACH('ACH')
    #define.RTPR('RTPR')
    #define.BPAY('BPAY')
    #define.EFT('EFT')
    #define.OTT('OTT')
    #define.EFT_NZ('EFT-NZ')

    System.Text.StringBuilder msb;
    int mDRecordCount;
    AmountMST mPaymentAmount;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    /// <summary>
    /// wrapField
    /// </summary>
    /// <param name = "_field">_field</param>
    /// <param name = "_addSeparator">_addSeparator</param>
    /// <returns>str</returns>
    private str wrapField(str _field = '',  boolean _addSeparator = true)
    {
        str text;

        text = _field;

        if(_addSeparator)
        {
            text += #Separator;
        }
        return text;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    /// <summary>
    /// formatStructure
    /// </summary>
    protected void formatStructure()
    {
        // Header
        this .rec_File_Header();

        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_Bank
            this.getSKS_EFT_Bank();

            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();
    
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            //Get Remittance Information
            this.getRemittanceAddress(false);

            // Details
            switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
            {
                case #ACH:
                    this.rec_ACH();
                    break;
                case #RTPR:
                    this.rec_RTPR();
                    break;
                case #BPAY:
                    this.rec_BPAY();
                    break;
                case #EFT:
                    this.rec_EFT();
                    break;
                case #OTT:
                    this.rec_OTT();
                    break;
                case #EFT_NZ:
                    this.rec_EFT_NZ();
                    break;
            }
            next mSKS_EFT_FileDetail;
        }

        this.rec_Trailer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_OTT</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_OTT
    /// </summary>
    /// <returns>true or false</returns>
    public boolean rec_OTT()
    {
        msb = new System.Text.StringBuilder();
        mDRecordCount++;

        //  Record type
        msb.Append(this.wrapField('OTT'));

        //  Recipient Number
        msb.Append(this.wrapField(''));

        //  Payer Payment Reference
        msb.Append(this.wrapField(''));

        //  Payment amount
        mPaymentAmount += -1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        msb.Append(this.wrapField(num2Str(-1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 0, 2, 1, 0)));

        //  Currency
        msb.Append(this.wrapField(mSKS_EFT_FileDetail.PaymentCurrencyCode));

        
        //  Recipient Reference
        msb.Append(this.WrapField(mSKS_EFT_FileDetail.PaymentReference));

        //Payee BIC/Rounting Number
        if(mSKS_EFT_FileDetail.DepSwiftNo)
        {
            msb.Append(this.WrapField(mSKS_EFT_FileDetail.DepSwiftNo));
        }
        else
        {
            msb.Append(this.WrapField(mSKS_EFT_FileDetail.DepBankTransit));
        }

        //Payee IBAN/Bank Account Number
        if(mSKS_EFT_FileDetail.DepBankIBAN)
        {
            msb.Append(this.WrapField(subStr(mSKS_EFT_FileDetail.DepBankIBAN,1,40)));
        }
        else
        {
            msb.Append(this.WrapField(subStr(mSKS_EFT_FileDetail.DepBankAcct,1,40)));
        }

        //  Int. Swift Code
        msb.Append(this.wrapField(''));

        //  Account Name
        msb.Append(this.wrapField(subStr(mRemittanceName,1,140)));

        //  Payee Street 1
        msb.Append(this.wrapField(subStr(mRemittanceAdrLine1, 1, 35)));

        //  Payee Street 2
        msb.Append(this.wrapField(subStr(mRemittanceAdrLine2, 1, 35)));

        //  Payee Street 3
        msb.Append(this.wrapField(''));

        //  Payee City
        msb.Append(this.wrapField(subStr(mRemittanceCity,1,25)));

        //  Payee state
        msb.Append(this.wrapField(subStr(mRemittanceState,1,3)));

        // Payee post code
        msb.Append(this.wrapField(subStr(mRemittanceZipCode,1,9)));

        //  Payee Country
        msb.Append(this.wrapField(subStr(mRemittanceCountryRegionId,1,2)));

        //  Funding Amount
        msb.Append(this.wrapField(''));

        //  Funding Currency
        msb.Append(this.wrapField(''));

        //  Dealer Reference
        msb.Append(this.wrapField(''));

        //  Exchange Rate
        msb.Append(this.wrapField(''));

        //BankCode
        msb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('BankCode',mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookupBank)));

        //BranchCode
        msb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('BranchCode',mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookupBank)));

          
        //  Account Number
        msb.Append(this.WrapField(mSKS_EFT_FileDetail.BankBankAcct));//DevOps18797

        //Account Suffix
        msb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('AccountSuffix',mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookupBank)));

        //  Foreign Currency
        msb.Append(this.wrapField(''));

        //  Funding Acoount Identifier
        msb.Append(this.wrapField('',false));
        
        this.fileWrite(msb.ToString());

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_EFT_NZ</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_EFT_NZ
    /// </summary>
    /// <returns>true or false</returns>
    public boolean rec_EFT_NZ()
    {
        msb = new System.Text.StringBuilder();
        mDRecordCount++;

        //  Record type
        msb.Append(this.wrapField('E'));

        //  Recipient Number
        msb.Append(this.wrapField(''));

        //  Payer Payment Reference
        msb.Append(this.wrapField(''));

        //  Payment amount
        mPaymentAmount += -1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        msb.Append(this.wrapField(num2Str(-1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 0, 2, 1, 0)));

        
        //  Payee Analysis
        msb.Append(this.WrapField(mSKS_EFT_FileDetail.PaymentReference));

        //  Payee Particulars
        msb.Append(this.wrapField(''));

        //BankCode
        msb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('BankCode',mSKS_EFT_FileDetail.RecId)));

        //BranchCode
        msb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('BranchCode',mSKS_EFT_FileDetail.RecId)));

        //  Account Number
        msb.Append(this.WrapField(mSKS_EFT_FileDetail.DepBankAcct));

        //Account Suffix
        msb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('AccountSuffix',mSKS_EFT_FileDetail.RecId)));

        //  Account Name
        msb.Append(this.wrapField(subStr(mRemittanceName,1,20)));

        //  Funding Bank Code
        msb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('FundingBankCode',mSKS_EFT_FileDetail.RecId)));

        //  Funding Branch Code
        msb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('FundingBranchCode',mSKS_EFT_FileDetail.RecId)));

        //  Funding Account Number
        msb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.BankBankAcct, 1, 7)));

        //  Funding Account Suffix
        msb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('FundingAccountSuffix',mSKS_EFT_FileDetail.RecId), false));

        this.fileWrite(msb.ToString());

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_File_Header</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_File_Header
    /// </summary>
    /// <returns>true or false</returns>
    boolean rec_File_Header()
    {
        msb = new System.Text.StringBuilder();

        //  Record Type
        msb.Append(this.wrapField('H'));
    
        //  Customer Code
        msb.Append(this.wrapField(mSKS_EFT_Bank.ACHCompanyID));

        //  Customer Name
        msb.Append(this.wrapField(mSKS_EFT_Bank.ACHCompanyName));
    
        //  Customer File Reference
        msb.Append(this.wrapField(mSKS_EFT_File.FileNbr));

        //  Scheduled Date
        msb.Append(this.wrapField(date2str(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()), 123,DateDay::Digits2 ,DateSeparator::None,DateMonth::Digits2,DateSeparator::None,DateYear::Digits4)));

        //  Currency
        if(mSKS_EFT_FileDetail.PaymSpec == 'OTT' ||mSKS_EFT_FileDetail.PaymSpec == 'EFT_NZ')
        {
            msb.Append(this.wrapField(mSKS_EFT_FileDetail.CurrencyCode));//DevOps18797
        }
        else
        {
            msb.Append(this.wrapField(mSKS_EFT_FileDetail.PaymentCurrencyCode));
        }

        //  Version
        msb.Append(this.wrapField('4', false));
    
        this.fileWrite(msb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_ACH</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_ACH
    /// </summary>
    /// <returns>true or false</returns>
    public boolean rec_ACH()
    {
        msb = new System.Text.StringBuilder();

        mDRecordCount++;

        //  Record type
        msb.Append(this.wrapField('ACH'));

        //  Recipient Number
        msb.Append(this.wrapField(''));

        //  Payer Payment Reference
        msb.Append(this.wrapField(''));

        //  Payment amount
        mPaymentAmount += -1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        msb.Append(this.wrapField(num2Str(-1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 0, 2, 1, 0)));

        //  Payment Currency
        msb.Append(this.wrapField(mSKS_EFT_FileDetail.PaymentCurrencyCode));

        //  Recipient Reference
        msb.Append(this.WrapField(subStr(mSKS_EFT_FileDetail.PaymentReference, 1, 14)));

        //  Routing Code
        msb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.DepBankTransit, 1,  20)));

        //  Account number
        msb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankAcct));

        //  Swift code / BIC
        msb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.DepSwiftNo, 1, 11)));

        //  IBAN
        msb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankIBAN));

        //  Payee Account Name
        msb.Append(this.wrapField(mRemittanceName));

        //  Payee Street 1
        msb.Append(this.wrapField(subStr(mRemittanceAdrLine1, 1, 35)));

        //  Payee Street 2
        msb.Append(this.wrapField(subStr(mRemittanceAdrLine2, 1, 35)));

        //  Payee Street 3
        msb.Append(this.wrapField(''));

        //  Payee City
        msb.Append(this.wrapField(mRemittanceCity));

        //  Payee state
        msb.Append(this.wrapField(mRemittanceState));

        // Payee post code
        msb.Append(this.wrapField(mRemittanceZipCode));

        //  Payee Country
        msb.Append(this.wrapField(mRemittanceCountryRegionId));

        //  Funding BSB Number
        msb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.BankBankTransit, 1, 7)));

        //  Funding Account Number
        msb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.BankBankAcct, 1, 9), false));

        this.fileWrite(msb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_RTPR</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_RTPR
    /// </summary>
    /// <returns>true or false</returns>
    public boolean rec_RTPR()
    {
        msb = new System.Text.StringBuilder();

        mDRecordCount++;

        //  Record type
        msb.Append(this.wrapField('RT'));

        //  Recipient Number
        msb.Append(this.wrapField(''));

        //  Payer Payment Reference
        msb.Append(this.wrapField(''));

        //  Payment amount
        mPaymentAmount += -1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        msb.Append(this.wrapField(num2Str(-1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 0, 2, 1, 0)));

        //  Recipient Reference
        msb.Append(this.WrapField(subStr(mSKS_EFT_FileDetail.PaymentReference, 1, 16)));

        //  BSB Number
        msb.Append(this.WrapField(subStr(mSKS_EFT_FileDetail.DepBankTransit, 1, 7)));
        
        //  Account Number
        msb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.DepBankAcct, 1, 15)));

        //  Account Name
        msb.Append(this.wrapField(subStr(mRemittanceName, 1, 35)));

        //  Funding BSB Number
        msb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.BankBankTransit, 1, 7)));

        //  Funding Account Number
        msb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.BankBankAcct, 1, 9), false));

        this.fileWrite(msb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_BPAY</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_BPAY
    /// </summary>
    /// <returns>true or false</returns>
    public boolean rec_BPAY()
    {
        msb = new System.Text.StringBuilder();

        mDRecordCount++;

        //  Record type
        msb.Append(this.wrapField('B'));

        //  Recipient Number
        msb.Append(this.wrapField(''));

        //  Payer Payment Reference
        msb.Append(this.wrapField(''));

        //  Payment amount
        mPaymentAmount += -1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        msb.Append(this.wrapField(num2Str(-1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 0, 2, 1, 0)));

        //  BPAY Biller Number
        str bPAYBillNum;

        bPAYBillNum = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BPAYBillNum', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        msb.Append(this.WrapField(subStr(bPAYBillNum, 1, 10)));

        //  Recipient Reference 
        msb.Append(this.WrapField(mSKS_EFT_FileDetail.PaymentReference));

        //  Funding BSB Number
        msb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.BankBankTransit, 1, 7)));

        //  Funding Account Number
        msb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.BankBankAcct, 1, 9), false));

        this.fileWrite(msb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_EFT</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_EFT
    /// </summary>
    /// <returns>true or false</returns>
    public boolean rec_EFT()
    {
        msb = new System.Text.StringBuilder();

        mDRecordCount++;

        //  Record type
        msb.Append(this.wrapField('E'));

        //  Recipient Number
        msb.Append(this.wrapField(''));

        //  Payer Payment Reference
        msb.Append(this.wrapField(''));

        //  Payment amount
        mPaymentAmount += -1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        msb.Append(this.wrapField(num2Str(-1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 0, 2, 1, 0)));

        //  Recipient Reference
        msb.Append(this.WrapField(mSKS_EFT_FileDetail.PaymentReference));

        //  BSB Number
        msb.Append(this.WrapField(subStr(mSKS_EFT_FileDetail.DepBankTransit, 1, 7)));
        
        //  Account Number
        msb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.DepBankAcct, 1, 9)));

        //  Account Name
        msb.Append(this.wrapField(subStr(mRemittanceName,1,32)));

        //  Funding BSB Number
        msb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.BankBankTransit, 1, 7)));

        //  Funding Account Number
        msb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.BankBankAcct, 1, 9), false));

        this.fileWrite(msb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Trailer</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_Trailer
    /// </summary>
    /// <returns>true or false</returns>
    boolean rec_Trailer()
    {
        msb = new System.Text.StringBuilder();

        //  Record type
        msb.Append(this.wrapField('T'));

        // Total Payment Count
        msb.Append(this.wrapField(int2str(mDRecordCount)));
        
        //  Total Payment Amount
        msb.Append(this.wrapField(num2Str(mPaymentAmount, 0, 2, 1, 0), false));
    
        this.fileWrite(msb.ToString());
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>