<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_CA_CIBC_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_CA_CIBC_XML  extends  SKS_EFT_Format_ISO_20022_001001003
/// </summary>
class SKS_EFT_Format_CA_CIBC_XML  extends  SKS_EFT_Format_ISO_20022_001001003
{
    #define.FormatVersion('20220915')
    #define.WIRE('WIRE')
    #define.ACH('ACH')
    #define.EFT('EFT')
    #define.FED_WIRE('FED-WIRE')    

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodePage</Name>
				<Source><![CDATA[
    protected int getCodePage()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  IBAN
        //------------------------------------------------------------------------------------------------------


        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
        XmlElement nodeAcct;
        XmlElement nodeCdtrAcctTp;
        str depAcctType;
    
        if(mSKS_EFT_FileDetail.DepBankIBAN || mSKS_EFT_FileDetail.DepBankAcct)
        {
            //          2.80: CdtrAcct
            nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
            //              Id
            nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
            if(mSKS_EFT_FileDetail.DepBankIBAN != '' && (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE || mSKS_EFT_FileFormatPaymSpec.TransactionCode ==  #FED_WIRE))
            {
                //                  IBAN
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN, 34);
            }
            else
            {
                //                  Othr
                nodeAcct = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
                //                  Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAcct, 'Id', mSKS_EFT_FileDetail.DepBankAcct, 34);
            }

            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH)
            {
                if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::SavingsAccount)
                {
                    depAcctType = 'SVGS';
                }
                else
                {
                    depAcctType = 'CACC';
                }
                nodeCdtrAcctTp = nodeCdtrAcct.appendChild(xmlDoc.createElement('Tp'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctTp, 'Cd', depAcctType);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
        XmlElement nodeClrSysId;
        XmlElement nodeBrnchId;
    
        if(mSKS_EFT_FileDetail.DepSwiftNo || mSKS_EFT_FileDetail.DepBankTransit)
        {
            //          2.77: CdtrAgt
            nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));
    
            //              FinInstnId
            nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(mSKS_EFT_FileDetail.DepSwiftNo && (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE || mSKS_EFT_FileFormatPaymSpec.TransactionCode ==  #FED_WIRE))
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 11, false);
            }
            else if(mSKS_EFT_FileDetail.DepBankTransit)
            {
                //          ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                
                //              ClrSysId
                nodeClrSysId = nodeClrSysMmbId.appendChild(xmlDoc.createElement('ClrSysId'));
    
                //                  Cd
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', 'USABA');
                }
                else if(mSKS_EFT_FileDetail.DepBankCodeType == BankCodeType::Code_FW && mSKS_EFT_FileDetail.PaymentCurrencyCode == 'USD' && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', 'USABA');
                }
                else if (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FED_WIRE)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', 'USABA');
                }
                else
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', 'CACPA');
                }
    
                //          MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 9);
            }
    
            //                  Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_VendorPaym.WBenBankName), 140, false);

            //                  PstlAdr
            this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_VendorPaym.WBenBankCountryRegionId, mSKS_EFT_VendorPaym.WBenBankAddr, '', mSKS_EFT_VendorPaym.WBenBankCity, 0, '', '', true);

            if(mSKS_EFT_VendorPaym.WBenBankBranch)
            {
                //              BrnchId
                nodeBrnchId = nodeFinInstnId.appendChild(xmlDoc.createElement('BrnchId'));

                //                  Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBrnchId, 'Id', mSKS_EFT_VendorPaym.WBenBankBranch, 9);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt1</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_IntrmyAgt1(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.71: IntrmyAgt1
        //              FinInstnId
        //                   CmbndId
        //                       ClrSysMmbId
        //                             MmbId
        //                  Nm
        //                  PstlAdr
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeIntrmyAgt1;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
        XmlElement nodeClrSysId;
    
        if(mSKS_EFT_VendorPaym.WIntBankSwift || mSKS_EFT_VendorPaym.WIntBankId)
        {
            //          2.71: IntrmyAgt1
            nodeIntrmyAgt1 = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt1'));
    
            //                FinInstnId
            nodeFinInstnId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(mSKS_EFT_VendorPaym.WIntBankSwift)
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_VendorPaym.WIntBankSwift, 0, false);
            }
            
            else if(mSKS_EFT_VendorPaym.WIntBankId)
            {
                //                  ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
                //              ClrSysId
                nodeClrSysId = nodeClrSysMmbId.appendChild(xmlDoc.createElement('ClrSysId'));
                
                //                  Cd
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', 'USABA');
                }
                else
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', 'CACPA');
                }
    
                //                  MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_VendorPaym.WIntBankId, 14, false);
            }
        
            //                  Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_VendorPaym.WIntBankName), 35, false);
            
            //                  PstlAdr
            this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_VendorPaym.WIntBankCountryRegionId, mSKS_EFT_VendorPaym.WIntBankAddr,mSKS_EFT_VendorPaym.WIntBankAddr2,mSKS_EFT_VendorPaym.WIntBankCity,0, '', '',true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_Id</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty_Id(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          9.1.12: Id
        //              9.1.13: OrgId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOthr;
        str channelProfileID;
    
        channelProfileID = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ChannelProfileID', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        if(channelProfileID || mSKS_EFT_Bank.WOrdPartySWIFTNo)
        {
            //          9.1.12: Id
            nodeId = _nodeInitgPty.appendChild(xmlDoc.createElement('Id'));
    
            //              9.1.13: OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));

            if(channelProfileID)
            {
                //                      9.1.15 Othr
                nodeOthr = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
                //                              Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', this.CharacterReplacement(channelProfileID), 35);
            }
    
            else if(mSKS_EFT_Bank.WOrdPartySWIFTNo)
            {
                //                  9.1.14: BICOrBEI
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOrgId, 'BICOrBEI', mSKS_EFT_Bank.WOrdPartySWIFTNo, 35);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------

        if((mRemittanceZipCode != '' || mRemittanceCity != '' || mRemittanceCountryRegionId != '' || mRemittanceAdrline1 != '' || mRemittanceAdrline2 != '') ||
            mRemittanceState != '')
        {
            this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity, 0, mRemittanceAdrline2, mRemittanceState, true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChrgBr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.51: ChrgBr
        //------------------------------------------------------------------------------------------------------
        
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'ChrgBr', this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ChrgBr', mSKS_EFT_FileDetail.RecId)), 0, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_PstlAdr(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
    
        this.node_PstlAdr(_nodeDbtr, mSKS_EFT_Bank.WOrdPartyCountryRegionId, mSKS_EFT_Bank.WOrdPartyAddr, mSKS_EFT_Bank.WOrdPartyZipCode, mSKS_EFT_Bank.WOrdPartyCity, 0, mSKS_EFT_Bank.WOrdPartyAddr2, mSKS_EFT_Bank.WOrdPartyState, true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: DbtrAcct
        //          Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;
        XmlElement nodeOthr;
    
        if(mSKS_EFT_FileDetail.BankBankAcct)
        {
            //      2.20: DbtrAcct
            nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
            //          Id
            nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
    
    
            //               Othr
            nodeOthr = nodeDbtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
            //                   Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.BankBankAcct, 7);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.21: DbtrAgt
        //          FinInstnId
        //               CmbndId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmBId;
        XmlElement nodeClrSysId;
        str value;
    
        if(mSKS_EFT_FileDetail.BankBankTransit)
        {
            //      2.21: DbtrAgt
            nodeDbtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAgt'));
    
            //          FinInstnId
            nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
            //              ClrSysMmbId
            nodeClrSysMmBId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

            switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
            {
                case #ACH:
                    value = 'USABA';
                    break;
                case #EFT:
                    value = 'CACPA';
                    break;
                default:
                    value = '';
                    break;

            }
            if(value)
            {
                //              ClrSysId
                nodeClrSysId = nodeClrSysMmbId.appendChild(xmlDoc.createElement('ClrSysId'));

                //                  Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', value, 0);
            }
    
            //          MmbId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.BankBankTransit, 9);
    
            //               Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mBankAccountTable.Name), 35, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.6: PmtTpInf       
        //------------------------------------------------------------------------------------------------------
       
        //Override in format if element needed
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_PmtTpInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.31 PmtTpInf
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePmftTpInf;
        XmlElement nodeLclInstrm;
        XmlElement nodeSvcLvl;
        XmlElement nodeCtgyPurp;
        str value;

        nodePmftTpInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('PmtTpInf'));            

        if (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE || mSKS_EFT_FileFormatPaymSpec.TransactionCode ==  #FED_WIRE)
        {
            //          2.14: SvcLvl
            nodeSvcLvl = nodePmftTpInf.appendChild(xmlDoc.createElement('SvcLvl'));
    
            //              2.15: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSvcLvl, 'Cd', 'PRPT');
        }
        //          LclInstrm
        nodeLclInstrm = nodePmftTpInf.appendChild(xmlDoc.createElement('LclInstrm'));
            
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #WIRE:
            case #FED_WIRE:
                value = 'TRF';
                break;
            case #ACH:
                value = 'IAT';
                break;
            case #EFT:
                value = 'EFT';
                break;
        }

        if(value == 'EFT')
        {
            //              Prtry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Prtry', value);
        }
        else
        {
            //               Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Cd', value);
        }

        value = this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('CtgyPurp', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId));

        if(value && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH)
        {
            //          2.14: CtgyPurp
            nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
            //              2.15: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Prtry', value);
        }        
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Nm</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Nm(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          Nm
        //------------------------------------------------------------------------------------------------------
    
        //          Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeDbtr, 'Nm', this.CharacterReplacement(mSKS_EFT_Bank.WOrdPartyName), 35, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr_Nm</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Cdtr_Nm(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.79: Cdtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
        str name = mSKS_EFT_FileDetail.AccountName;
    
        if(mRemittanceName != '')
        {
            name = mRemittanceName;
        }
    
        //              Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', this.CharacterReplacement(name), 35);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_Ustrd</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf_Ustrd(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeRmtInf;
        str invNumbers;
    
        invNumbers = this.getInvoiceNbrs();
        if(invNumbers)
        {
            //          2.98: RmtInf
            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
    
            //              2.99: Ustrd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(invNumbers) +' '+ this.CharacterReplacement(this.getJournaltxt()), 140);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJournaltxt</Name>
				<Source><![CDATA[
    private str getJournaltxt()
    {
        LedgerJournalTrans ledgerJournalTrans;

        select crossCompany PaymentNotes from ledgerJournalTrans where
        ledgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;

        return ledgerJournalTrans.PaymentNotes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Id(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          9.1.13: OrgId
        //              9.1.14: BICOrBEI
        //                      OR
        //          9.1.12: Id
        //              9.1.13: OrgId
        //                  9.1.15: Othr
        //                      9.1.16: Id
        //                          9.1.17: SchmeNm
        //                              9.1.18: Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOther;
        str        value; // SKS_VSTS_13599
        str originID;

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH    ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #EFT)
        {
            originID = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('OriginID', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
            if( mSKS_EFT_Bank.WOrdPartyId || originID != '')//SKS_VSTS_13599
            {
                //          9.1.12: Id
                nodeId = _nodeDbtr.appendChild(xmlDoc.createElement('Id'));
    
                //              9.1.13: OrgId
                nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
                //                  9.1.15: Other
                nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
                
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #EFT)//SKS_VSTS_13599
                {
                    value = originID;
                }
                else
                {
                    value = mSKS_EFT_Bank.WOrdPartyId;
                }
                //                      9.1.1.16: Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', value, 35);
            }
            else if(mSKS_EFT_Bank.WOrdPartySWIFTNo != '')
            {
                nodeId = _nodeDbtr.appendChild(xmlDoc.createElement('Id'));

                nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOrgId, 'BICOrBEI', mSKS_EFT_Bank.WOrdPartySWIFTNo, 0);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Purp</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Purp(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.86: Purp
        //              Prtry
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeId;
        str value;

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #EFT)
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpCd', mSKS_EFT_FileDetail.RecId));
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH)
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DocTypeCd', mSKS_EFT_FileDetail.RecId));
        }

        if(value != '')
        {
            nodeId = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Purp'));

            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #EFT)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeId, 'Prtry', value);
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeId, 'Cd', value);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Amt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Amt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.42: Amt
        //              2.43: InstdAmt
        //------------------------------------------------------------------------------------------------------
        XmlElement currentElement;
        XmlElement nodeAmt;
        int pmtCuryPrec;

    
        //          2.42: Amt
        nodeAmt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Amt'));
    
        //              2.43: InstdAmt
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE || mSKS_EFT_FileFormatPaymSpec.TransactionCode ==  #FED_WIRE)
        {
            pmtCuryPrec = SKS_EB_Currency::getCurrencyPrecision(mSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
        else
        {
            pmtCuryPrec = 2;
        }

        currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAmt, 'InstdAmt',
            num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,pmtCuryPrec,1,0));

        SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', mSKS_EFT_FileDetail.PaymentCurrencyCode);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>