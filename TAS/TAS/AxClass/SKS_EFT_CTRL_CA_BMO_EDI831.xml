<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_CTRL_CA_BMO_EDI831</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_EFT_CTRL_CA_BMO_EDI831 extends SKS_EFT_Format_CA_BMO_EDI820
{
    str     mSendCtrlNbr;
    str     mISAsegment;
    str     mGSsegment;
    str     mGECtrlnum;
    str     mIEACtrlnum;
    str     mSLineEnd;
    str     mSSeparator;
    real    mMontAmt;
    int     mSegmtCnt = 0;
    int     mCtrlQty;
    str     tot820section;

    #define.SegmentEnd('\r\n')
    System.Text.StringBuilder sb;

    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>settotSection</Name>
				<Source><![CDATA[
    public Void settotSection(str _tot820section)
    {
        tot820section = _tot820section;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSenderControlnum</Name>
				<Source><![CDATA[
    public Void setSenderControlnum(str _sendCtrlNbr)
    {
        mSendCtrlNbr = _sendCtrlNbr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMonetaryAmt</Name>
				<Source><![CDATA[
    public Void setMonetaryAmt(real _mmontAmt)
    {
        mMontAmt = _mmontAmt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setISASection</Name>
				<Source><![CDATA[
    public Void setISASection(str _mISAsegment)
    {
        mISAsegment = _mISAsegment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setGSSection</Name>
				<Source><![CDATA[
    public Void setGSSection(str _mGSsegment)
    {
        mGSsegment = _mGSsegment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setGECntrlnum</Name>
				<Source><![CDATA[
    public Void setGECntrlnum(str _mGECtrlnum)
    {
        mGECtrlnum = _mGECtrlnum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIEACntrlnum</Name>
				<Source><![CDATA[
    public Void setIEACntrlnum(str _mIEACtrlnum)
    {
        mIEACtrlnum = _mIEACtrlnum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCtrlQuantity</Name>
				<Source><![CDATA[
    public Void setCtrlQuantity(int _mCtrlQty)
    {
        mCtrlQty = _mCtrlQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineEnd</Name>
				<Source><![CDATA[
    public Void setLineEnd(str _mSLineEnd)
    {
        mSLineEnd = _mSLineEnd;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSeparator</Name>
				<Source><![CDATA[
    public Void setSeparator(str _mSSeparator)
    {
        mSSeparator = _mSSeparator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        sb = new System.Text.StringBuilder();

        sb.Append(tot820section);
        sb.Append(#SegmentEnd);
        sb.Append(strReplace(mGSsegment, 'RA', 'CT'));
        sb.Append(#SegmentEnd);

        this.rec_ST831();
        this.rec_BGN();
        this.rec_DTM831();
        this.rec_AMT();
        this.rec_QTY();
        this.rec_SE831();
        this.rec_GE831();
        this.rec_IE831();

        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_DTM831</Name>
				<Source><![CDATA[
    boolean rec_DTM831()
    {
        mSegmtCnt++;

        sb.Append('DTM');
        sb.Append(mSSeparator);
    
        sb.Append('009');
        sb.Append(mSSeparator);
    
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
        sb.Append(mSSeparator);

        sb.Append(mSLineEnd);
        sb.Append(#SegmentEnd);
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_ST831</Name>
				<Source><![CDATA[
    boolean rec_ST831()
    {
        mSegmtCnt++;

        sb.Append('ST');
        sb.Append(mSSeparator);
    
        //1     Transaction Set ID Code
        sb.Append('831');
        sb.Append(mSSeparator);
    
        //2     Trans. Set Cont. Number
        sb.Append(mSendCtrlNbr);

        sb.Append(mSLineEnd);
        sb.Append(#SegmentEnd);
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_BGN</Name>
				<Source><![CDATA[
    boolean rec_BGN()
    {
        mSegmtCnt++;

        sb.Append('BGN');
        sb.Append(mSSeparator);

        //  Transaction Set Purpose Code
        sb.Append('06');
        sb.Append(mSSeparator);

        //  Reference Number
        sb.Append(subStr(mISAsegment, 91, 9));
        sb.Append(mSSeparator);

        //  Date
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
        sb.Append(mSSeparator);

        //  Time
        sb.Append(SKS_PP_StringFormats::strTimeHHMM());
        sb.Append(mSLineEnd);
        sb.Append(#SegmentEnd);
        
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_AMT</Name>
				<Source><![CDATA[
    boolean rec_AMT()
    {
        mSegmtCnt++;

        sb.Append('AMT');
        sb.Append(mSSeparator);

        // Amount Qualifier Code
        sb.Append('2');
        sb.Append(mSSeparator);

        //  Monetary Amount
        sb.Append(num2str((mMontAmt), 0, 2, 0 ,0));

        sb.Append(mSLineEnd);
        sb.Append(#SegmentEnd);

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_QTY</Name>
				<Source><![CDATA[
    boolean rec_QTY()
    {
        mSegmtCnt++;

        sb.Append('QTY');
        sb.Append(mSSeparator);

        //  Quantity Qualifier
        sb.Append('46');
        sb.Append(mSSeparator);

        //  Quantity
        sb.Append(substr(int2str(mCtrlQty), 1, 15));

        sb.Append(mSLineEnd);
        sb.Append(#SegmentEnd);

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_SE831</Name>
				<Source><![CDATA[
    boolean rec_SE831()
    {
        mSegmtCnt++;

        sb.Append('SE');
        sb.Append(mSSeparator);

        //  Number of Included Segments
        sb.Append(mSegmtCnt);
        sb.Append(mSSeparator);

        //  Transaction Set Control Number
        sb.Append(mSendCtrlNbr);

        sb.Append(mSLineEnd);
        sb.Append(#SegmentEnd);

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_GE831</Name>
				<Source><![CDATA[
    boolean rec_GE831()
    {
        sb.Append('GE');
        sb.Append(mSSeparator);

        //  Number of Transactions Sets Included
        sb.Append('1');
        sb.Append(mSSeparator);

        //  Group Control Number
        sb.Append(mGECtrlnum);

        sb.Append(#SegmentEnd);

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_IE831</Name>
				<Source><![CDATA[
    boolean rec_IE831()
    {
        sb.Append('IEA');
        sb.Append(mSSeparator);

        //  Number of Transactions Sets Included
        sb.Append('2');
        sb.Append(mSSeparator);

        //  Group Control Number
        sb.Append(mIEACtrlnum);

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>