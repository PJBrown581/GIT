<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_WF_PMS_XML_R2202102</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_WF_PMS_XML_R2202102
/// </summary>
class SKS_EFT_FormatMetaData_US_WF_PMS_XML_R2202102 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20221027';
        dataContractVersion = '1.0';
        conFormatID = ['US-WF-PMS-XML-R2202102'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,1,0,1,'','','','',0,'XXXXXXXXXX','Company Id','Company name','UUUUUUUUUUUUUUUUUUUUUUUUUUUUUU',1,'US - Wells Fargo - Payment Manager R2-2021-02',0,'','','US-WF-PMS-XML-R2202102',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,1,0,0,'','','','',0,0,'','',0,'','',0,'','','3',0,0,0,0,0,'US-WF-PMS-XML-R2202102',1,1,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-WF-PMS-XML-R2202102'):
                paymSpecList = this.getPaymSpecsMetaData_US_WF_PMS_XML_R2202102();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_WF_PMS_XML_R2202102</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_WF_PMS_XML_R2202102()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Canada Non Urgent payments',1,'NRG','','NRG','TRADE PAY',0,'US-WF-PMS-XML-R2202102',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-WF-PMS-XML-R2202102'):
                notesList = this.getNotesMetaData_US_WF_PMS_XML_R2202102();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_WF_PMS_XML_R2202102</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_WF_PMS_XML_R2202102()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-WF-PMS-XML-R2202102','NRG','-Cash and bank management > Bank Accounts fields:-OrgnrDepAcctID BankId is stored in the SWIFT field.:-If SWIFT is not populated, the Bank Transit number/Routing number will be used.::AP EFT+ Bank account fields:> Company info tab:-Name1 is stored in Company name field.::> Wire/IAT Ordering party tab fields:-OrgnrPartyPostAddr address is set on Address fields.:-File/CompanyId is set on ID field.:-EDD Biller Id required for PMP::Vendor eBanking details > Payment specifications fields:> Account info tab fields:-If Trading partner id is not set, Vendor Account will be used as the Receiver party reference id::> Wire transfer/IAT - 1 tab fields:-RcvrParty Name1 and RcvrPartyPostAddr address set on Beneficiary group.:-PmtRec/TranHandlingCode for PMP is optional and set on Advice field on the Beneficiary group.:-DeliveryCode is stored in Mail handling field on Beneficiary group.:-PmtRec RefId is set in Charges field on Other notes section.:--Vendor eBanking details > Vendor e-mail or E-mail 2 is used.:-Name from RcvrDepAcctID/BankInfo and RcvrBankInfoPostAddr address information is stored on the Beneficiary Bank group.:-Bankinfo/BranchId is set in the Beneficiary Bank Branch field.::> Wire transfer - 3 tab fields:-Message information is set in the Payment instructions > Line 1 field of Wire transfer -3 tab. Alternatively they may be set on the Purpose text field for the Central bank purpose code assigned in the Payment Journal. If set in both, the Payment Journal will take precedence.::> Additional fields button:-If using PDP, set PDP Handling Code and CEO Template Id.  :-If not using PDP, Vendor bank account information must be entered.::-Originator Party shot name will store in the Bank account > Wire/IAT Ordering party Originator Party short name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-WF-PMS-XML-R2202102'):
                validationsList = this.getValidationsMetaData_US_WF_PMS_XML_R2202102();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_WF_PMS_XML_R2202102</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_WF_PMS_XML_R2202102()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','ID','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > ID','File > CompanyID','File/CompanyID','15','WOrdPartyId','','',1,1,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','File > PmtRec > OrgnrParty > PostAddr > Addr1','Orginator Address','15','WOrdPartyAddr','','',1,0,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','File > PmtRec > OrgnrParty> PostAddr > Addr2','Orginator Address','15','WOrdPartyAddr2','','',1,0,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','File > PmtRec > OrgnrParty> PostAddr> City','Orginator City','15','WOrdPartyCity','','',1,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','State/Province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/Province','File > PmtRec > OrgnrParty> PostAddr > StateProv','Orginator State/Province','15','WOrdPartyState','','',1,0,1,'3',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','Zip/Postal','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/Postal','File > PmtRec > OrgnrParty > PostAddr > PostalCode','Orginator Postal Code','15','WOrdPartyZipCode','','',1,1,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','Country/region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','File > PmtRec > OrgnrParty> PostAddr > Country','Orginator Country code','15','WOrdPartyCountryRegionId','','',1,1,'2','2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','File > PmtRec > RcvrDepAcctID > DepAcctID > BankInfo> BranchID','Receiving Bank Id','9','RegistrationNum','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Account Number','File > PmtRec > RcvrDepAcctID > DepAcctID > AcctID','Receiving Bank Account Number','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','Trading Partner Id','TAS > Common > Vendor eBanking details > Payment specifications > Account Info > Trading partner Id','File > PmtRec > RcvrParty > RefInfo > RefID','Trading Partner Id','16','BE01','','',1,1,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','File > PmtRec > RcvrParty > Name > Name1','Receiving Party Name','16','WBeneName','','',1,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','File > PmtRec > RcvrParty > PostAddr> Addr1','Receiving party address','16','WBeneAddr','','',1,0,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','File > PmtRec > RcvrParty > PostAddr> Addr2','Receiving party address','16','WBeneAddr2','','',1,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','File > PmtRec > RcvrParty> PostAddr> City','Receiving party city','16','WBeneCity','','',1,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','File > PmtRec > RcvrParty > PostAddr > PostalCode','Receiving party ZIP/Postal code','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','File > PmtRec > RcvrParty> PostAddr > StateProv','Receiving party Sub Division','16','WBeneState','','',1,0,1,'3',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','Country/region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/region','File > PmtRec > RcvrParty> PostAddr > Country','Receiving party country','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','Advise','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Advice','File > PmtRec > TranHandlingCode','TranHandlingCode','16','WBeneAdvice','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','File > PmtRec > OrgnrDepAcctID > DepAcctID > AcctID','Bank Account Number',0,'AccountNum','','',0,1,1,'34',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PMS-XML-R2202102','NRG','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','File > PmtRec > OrgnrDepAcctID > DepAcctID > BankInfo >  BankID','Routing Number',0,'RegistrationNum','','',0,1,1,'12',0,1]);
        

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-WF-PMS-XML-R2202102','PDPHandlingCode','PDP Handling Code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-WF-PMS-XML-R2202102','PmtFormat','Pre-Authorized Transactions']);
        
        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-WF-PMS-XML-R2202102','PDPHandlingCode','Off','Off']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-WF-PMS-XML-R2202102','PDPHandlingCode','ACH Payment Delivery Preference','T']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-WF-PMS-XML-R2202102','PDPHandlingCode','Wire Payment Delivery Preference','P']);
        
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-WF-PMS-XML-R2202102','TranHandlingCode','Payment only','D']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-WF-PMS-XML-R2202102','TranHandlingCode','PMP remittance','U']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-WF-PMS-XML-R2202102','PmtFormat','Payroll Deposit','200']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-WF-PMS-XML-R2202102','PmtFormat','Residential Rent/Leases','401']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-WF-PMS-XML-R2202102','PmtFormat','Commercial Rent/Leases','402']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('US-WF-PMS-XML-R2202102'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_WF_PMS_XML_R2202102();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_WF_PMS_XML_R2202102</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_WF_PMS_XML_R2202102()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','NRG','PDPHandlingCode','PDP Handling Code',0,'PDPHandlingCode','Off',0,'','','PmtRec > PDPHandlingCode']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','NRG','TranHandlingCode','Transaction Handling Code',0,'TranHandlingCode','',0,'','','File > PmtRec > TranHandlingCode']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','NRG','TradingPartnerId','Trading partner id',1,'TradingPartnerId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','File > PmtRec > RcvrParty > RefInfo > RefID']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','NRG','BusinessFuncCode','Business function code',1,'BusinessFuncCode','',1,'','XXX','File > PmtRec > PmtFormatIntl']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','NRG','PmtFormat','Pre-Authorized Transactions',0,'PmtFormat','',0,'','','PmtRec > PmtFormat']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','FormatValidations','*','16','WBeneAdvice']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','FormatValidations','*','35','WBeneAdvice']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','FormatValidations','*','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','FormatValidations','*','15','W02']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','FormatValidations','*','15','W03']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','FormatValidations','*','15','W04']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','FormatValidations','*','37','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','FormatValidations','*','37','W02']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','FormatValidations','*','37','W03']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','FormatValidations','*','37','W04']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','FormatValidations','*','16','BE01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','FormatValidations','*','16','BE02']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','FormatValidations','*','35','BE01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','FormatValidations','*','35','BE02']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

       
        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-WF-PMS-XML-R2202102'):
                paymSpecList = this.getFileFormatFieldsMetaData_US_WF_PMS_XML_R2202102();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_WF_PMS_XML_R2202102</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_WF_PMS_XML_R2202102()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','CustomerID','Customer Id',1,'CustomerID','',0,'','XXXXXXXXXXXXXXXXXX','File > PmtRec > IDInfo']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-WF-PMS-XML-R2202102','US-WF-PMS-XML-R2202102','OrgPartyShortName','Org Party ShortName',1,'OrgPartyShortName','',0,'','XXXXXXXXXXXXXXX','File > PmtRec > OrgnrParty > Name > Name2']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'US-WF-PMS-XML-R2202102':
                if(gSKS_EFT_VendorPaym.BE01)
                {
                    this.updateVendorFields('TradingPartnerId', gSKS_EFT_VendorPaym.BE01);
                }

                if(gSKS_EFT_VendorPaym.BE02)
                {
                    this.updateVendorFields('BusinessFuncCode', gSKS_EFT_VendorPaym.BE02);
                }

                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('DeliveryCode', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }

                if(gSKS_EFT_VendorPaym.WBeneAdvice)
                {
                    this.updateVendorFields('TranHandlingCode', gSKS_EFT_VendorPaym.WBeneAdvice, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'US-WF-PMS-XML-R2202102':
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('OrgPartyShortName', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('CustomerID', gSKS_EFT_Bank.W02);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>