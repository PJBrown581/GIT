<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_DD_OutboundFormat_NETS_LS_DebtorInfo</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_DD_OutboundFormat_NETS_LS_DebtorInfo extends SKS_DD_OutboundFormat
{
    System.Text.StringBuilder   sb;

    int     debtor;
    str     taxNum;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    public str formatStructure(CustDirectDebitMandate  _custDirectDebitMandate)
    {
        sb = new System.Text.StringBuilder();

        mCustDirectDebitMandate = _custDirectDebitMandate;

        this.rec_DataDeliveryStart();

        this.rec_001();

        ttsbegin;

        while(mCustDirectDebitMandate)
        {    
            if(this.CheckMandateSentStatus(mCustDirectDebitMandate.CustAccount)) // only one mandate record can be at sent status per customer
            {
                next mCustDirectDebitMandate;
                continue;
            }
            taxNum = SKS_EFT_Setup::getCustLegalIdNumber(mCustDirectDebitMandate.CustAccount);
            if(mCustDirectDebitMandate.Status == CustMandateStatus::Canceled || mCustDirectDebitMandate.SKS_EB_MandateAutoStatus == SKS_EB_MandateAutoStatus::Canceled/*Bug 11030*/)
            {
                this.rec_540();
            }
            else
            {
                this.rec_510();
            }
            mCustDirectDebitMandate.selectForUpdate(true);
            mCustDirectDebitMandate.SKS_EB_BankRegisterStatus = SKS_EB_BankRegisterStatus::Sent;
            mCustDirectDebitMandate.SKS_EB_RegisterStatusSent = NoYesCombo::Yes;
            mCustDirectDebitMandate.SKS_EB_AutoStatusDate = DateTimeUtil::getSystemDateTime();
            mCustDirectDebitMandate.update();

            next mCustDirectDebitMandate;
        }        

        ttscommit;

        this.rec_DataDeliveryEnd();

        if(debtor == 0)
        {
            sb.Clear();
        }

        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_DataDeliveryStart</Name>
				<Source><![CDATA[
    public boolean rec_DataDeliveryStart()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                                 Position      Size
        // 1    Record type                                             (  01-  03)      3
        // 2    Filler                                                  (  04-  08)      5
        // 3    Filler                                                  (  09-  23)      15
        // 4    Filler                                                  (  24-  30)      7
        // 5    Data Supplier identification                            (  31-  36)      6
        // 6    Delivery type                                           (  37-  38)      2
        // 7    Year                                                    (  39-  40)      2
        // 8    Month                                                   (  41-  42)      2
        // 9    Date                                                    (  43-  44)      2
        // 10   Filler                                                  (  45-  45)      1
        // 11   Filler/TEST                                             (  46-  49)      4
        // 12   Filler                                                  (  50-  50)      1
        // 13   Filler                                                  (  51-  53)      3
        // 14   Filler                                                  (  54-  62)      9
        // 15   Data Supplier no.                                       (  63-  70)      8
        // 16   Check CVR no.                                           (  71-  71)      1
        // 17   Filler                                                  (  72-  80)      9
        //------------------------------------------------------------------------------------------------------
        str todayDate;

        //Nbr   Content
        // 1    Record type                                             01-  03
        sb.Append('000');

        // 2    Filler                                                  04-  08
        sb.Append(SKS_PP_StringFormats::strFill(5, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 3    Filler                                                  09-  23
        sb.Append('000000000000000');

        // 4    Filler                                                  24-  30
        sb.Append(SKS_PP_StringFormats::strFill(7, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        mSKS_PP_Bank = SKS_PP_Bank::find(mCustDirectDebitMandate.CreditorBankAccount);
        mSKS_EB_BankTable = SKS_EB_BankTable::find(mSKS_PP_Bank.BankID);
        
        // 5    Data Supplier identification                            31-  36
        sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::space, SKS_PP_FillSide::Right));

        // 6    Delivery type                                           37-  38
        sb.Append('40');

        todayDate = date2str(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()), 321, DateDay::Digits2, DateSeparator::None, DateMonth::Digits2, DateSeparator::None, DateYear::Digits2);
        
        // 7    Year                                                    39-  40
        sb.Append(subStr(todayDate, 1, 2));

        // 8    Month                                                   41-  42
        sb.Append(subStr(todayDate, 3, 2));

        // 9    Date                                                    43-  44
        sb.Append(subStr(todayDate, 5, 2));

        // 10   Filler                                                  45-  45
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::space, SKS_PP_FillSide::Right));

        // 11   Filler/TEST                                                  46-  49
        if(mSKS_EB_BankTable.RegistrationTestFile == NoYes::Yes) //Bug 11067 - Issue 2
        {
            sb.Append('TEST');
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::space, SKS_PP_FillSide::Right));
        }

        // 12   Filler                                                  50-  50
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::space, SKS_PP_FillSide::Right));

        // 13   Filler                                                  51-  53
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::space, SKS_PP_FillSide::Right));

        // 14   Filler                                                  54-  62
        sb.Append(SKS_PP_StringFormats::strFill(9, '', SKS_PP_FillCharacter::space, SKS_PP_FillSide::Right));

        // 15   Data Supplier no.                                       63-  70
        sb.Append(SKS_PP_StringFormats::strFill(8, mSKS_EB_BankTable.CreditorNumber3, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 16   Check CVR no.                                           71-  71
        sb.Append('X');

        // 17   Filler                                                  72-  80
        sb.Append(SKS_PP_StringFormats::strFill(9, '', SKS_PP_FillCharacter::space, SKS_PP_FillSide::Right));

        sb.Append(System.Environment::NewLine);

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_001</Name>
				<Source><![CDATA[
	public boolean rec_001() //Creditor
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                                 Position      Size
        // 1    Record type                                             (  01-  03)      3
        // 2    Creditor no.                                            (  04-  08)      5
        // 3    Filler                                                  (  09-  23)      15
        // 4    Year                                                    (  24-  25)      2
        // 5    Month                                                   (  26-  27)      2
        // 6    Day                                                     (  28-  29)      2
        // 7    Filler                                                  (  30-  43)      14
        // 8    Filler                                                  (  44-  80)      37
        //-------------------------------------------------------------------------------------------------------

        // 1    Record type                                             (  01-  03)
        sb.Append('001');

        // 2    Creditor no.                                            (  04-  08)
        sb.Append(SKS_PP_StringFormats::strFill(5, mSKS_EB_BankTable.CreditorNumber4, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 3    Filler                                                  (  09-  23)
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 4    Year                                                    (  24-  25)
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 5    Month                                                   (  26-  27)
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 6    Day                                                     (  28-  29)
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 7    Filler                                                  (  30-  43)
        sb.Append(SKS_PP_StringFormats::strFill(14, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 8    Filler                                                  (  44-  80)
        sb.Append(SKS_PP_StringFormats::strFill(37, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append(System.Environment::NewLine);

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_510</Name>
				<Source><![CDATA[
    public boolean rec_510() //Registration of Mandates
    {
        debtor++;

        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                                 Position      Size
        // 1    Record type                                             (  01-  03)      3
        // 2    Creditor no.                                            (  04-  08)      5
        // 3    Customer no.                                            (  09-  23)      15
        // 4    Registration no                                         (  24-  27)      4
        // 5    Account no.                                             (  28-  37)      10
        // 6    CVR no.                                                 (  38-  45)      8
        // 7    Filler                                                  (  46-  56)      11
        // 8    Filler                                                  (  57-  80)      24
        //------------------------------------------------------------------------------------------------------

        // 1    Record type                                             (  01-  03)
        sb.Append('510');

        // 2    Creditor no.                                            (  04-  08)
        sb.Append(SKS_PP_StringFormats::strFill(5, mSKS_EB_BankTable.CreditorNumber4/*Bug 11067*/, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 3    Customer no.                                            (  09-  23)
        sb.Append(SKS_PP_StringFormats::strFill(15, mCustDirectDebitMandate.CustAccount, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 4    Debtors Registration no                                 (  24-  27)
        sb.Append(SKS_PP_StringFormats::strFill(4, this.getBankRegistrationCode(), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 5    Debtors Account no.                                     (  28-  37)
        sb.Append(SKS_PP_StringFormats::strFill(10, CustBankAccount::find(mCustDirectDebitMandate.CustAccount, mCustDirectDebitMandate.BankAccount).AccountNum, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)); //Modified for Bug 11027

        //6    Debtor CPR no or CVR no                                  (  61-  71)
        sb.Append(SKS_PP_StringFormats::strFill(8, taxNum, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 7    Filler                                                  (  46-  56)
        sb.Append(SKS_PP_StringFormats::strFill(11, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 8    Filler                                                  (  57-  80)
        sb.Append(SKS_PP_StringFormats::strFill(24, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append(System.Environment::NewLine);

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_540</Name>
				<Source><![CDATA[
    public boolean rec_540() //Cancellation of Mandates
    {
        debtor++;

        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                                 Position      Size
        // 1    Record type                                             (  01-  03)      3
        // 2    Creditor no.                                            (  04-  08)      5
        // 3    Customer no.                                            (  09-  23)      15
        // 4    Filler                                                  (  46-  56)      33
        // 5    Filler                                                  (  57-  80)      24
        //------------------------------------------------------------------------------------------------------

        // 1    Record type                                             (  01-  03)
        sb.Append('540');

        // 2    Creditor no.                                            (  04-  08)
        sb.Append(SKS_PP_StringFormats::strFill(5, mSKS_EB_BankTable.CreditorNumber4/*Bug 11067*/, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 3    Customer no.                                            (  09-  23)
        sb.Append(SKS_PP_StringFormats::strFill(15, mCustDirectDebitMandate.CustAccount, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 4    Filler                                                  (  24-  56)
        sb.Append(SKS_PP_StringFormats::strFill(33, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 5    Filler                                                  (  57-  80)
        sb.Append(SKS_PP_StringFormats::strFill(24, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append(System.Environment::NewLine);

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_DataDeliveryEnd</Name>
				<Source><![CDATA[
    public boolean rec_DataDeliveryEnd()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                                 Position      Size
        // 1    Record type                                             (  01-  03)      3
        // 2    Creditor no.                                            (  04-  08)      5
        // 3    Filler                                                  (  09-  23)      15
        // 4    Number of debtors                                       (  24-  30)      7
        // 5    Amount - collection                                     (  31-  43)      13
        // 6    Amount – disbursement                                   (  44-  56)      13
        // 7   Filler                                                   (  57-  80)      24
        //------------------------------------------------------------------------------------------------------

        //Nbr   Content
        // 1    Record type                                             01-  03
        sb.Append('999');

        // 2    Creditor no.                                            04-  08
        sb.Append(SKS_PP_StringFormats::strFill(5, mSKS_EB_BankTable.CreditorNumber4/*Bug 11067*/, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 3    Filler                                                  09-  23
        sb.Append('999999999999999');

        // 4    Number of debtors                                       24-  30
        sb.Append(SKS_PP_StringFormats::strFill(7, num2Str(debtor,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 5    Amount - collection                                     31-  43
        sb.Append(SKS_PP_StringFormats::strMoney(0, 13));

        // 6    Amount – disbursement                                   44-  56
        sb.Append(SKS_PP_StringFormats::strMoney(0, 13));

        // 7   Filler                                                   57-  80
        sb.Append(SKS_PP_StringFormats::strFill(24, '', SKS_PP_FillCharacter::space, SKS_PP_FillSide::Right));
        
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>