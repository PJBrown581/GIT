<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_UK_NATWEST_BLMT103</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_UK_NATWEST_BLMT103 extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_UK_NATWEST_BLMT103 extends SKS_EFT_Format
{
    #define.STDDP('STDDP')
    #define.URGDP('URGDP')
    #define.INTP('INTP')
    #define.FED_WIRE('FED-WIRE')

    BankAccountTable        mBankAccountTable;
    #define.FormatVersion('20220914')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();

            // Get SKS_EFT_Bank
            this.getSKS_EFT_Bank();

            // Get Bank account
            mBankAccountTable = BankAccountTable::find(mSKS_EFT_FileDetail.BankAccountId);

            //Get Remittance Information
            this.getRemittanceAddress(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber);

            this.rec_Fields();

            next mSKS_EFT_FileDetail;
        }
        this.fileWrite('-');
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceNbrs</Name>
				<Source><![CDATA[
    protected str getInvoiceNbrs()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        select InvoiceNumber from invSKS_EFT_FileDetail
        where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
           && invSKS_EFT_FileDetail.InvoiceNumber != '';

        while(invSKS_EFT_FileDetail)
        {
            sb.Append(invSKS_EFT_FileDetail.InvoiceNumber);

            next invSKS_EFT_FileDetail;

            if(invSKS_EFT_FileDetail)
            {
                sb.Append(', ');
            }
        }

        return this.CharacterReplacement(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Beneficiary</Name>
				<Source><![CDATA[
    private void rec_Beneficiary()
    {
        //------------------------------------------------------------------
        //  :59F:Beneficiary Customer
        //  Beneficiary Name/Address
        //------------------------------------------------------------------
        str address;

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #STDDP)
        {
            //  :59F:Beneficiary Customer
            if(mSKS_EFT_FileDetail.DepBankIBAN != '')
            {
                this.fileWrite(':59:/' + subStr(mSKS_EFT_FileDetail.DepBankIBAN, 1, 34));
            }
            else
            {
                this.fileWrite(':59:/' + subStr(mSKS_EFT_FileDetail.DepBankAcct, 1, 34));
            }

            //  Beneficiary Name/Address
            if(mRemittanceName != '')
            {
                this.fileWrite(subStr(mRemittanceName, 1, 35));
            }           
        }
        else
        {
            //  :59F:Beneficiary Customer
            if(mSKS_EFT_FileDetail.DepBankIBAN != '')
            {
                this.fileWrite(':59F:/' + subStr(mSKS_EFT_FileDetail.DepBankIBAN, 1, 34));
            }
            else
            {
                this.fileWrite(':59F:/' + subStr(mSKS_EFT_FileDetail.DepBankAcct, 1, 34));
            }

            //  Beneficiary Name
            if(mRemittanceName != '')
            {
                this.fileWrite('1/' + subStr(mRemittanceName, 1, 33));
            }

            address += mRemittanceCountryRegionId;

            if(address != '' && (mRemittanceCity != ''))
            {
                address += '/';
                address += mRemittanceCity;
            }

            if(address != '')
            {
                //  Beneficiary Address
                if(mRemittanceAdrLine1 != '')
                {
                    this.fileWrite('2/' + subStr(mRemittanceAdrLine1, 1, 33));
                }

                if(mRemittanceAdrLine2 != '')
                {
                    this.fileWrite('2/' + subStr(mRemittanceAdrLine2, 1, 33));
                }
                this.fileWrite('3/' + subStr(address, 1, 33));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_BeneficiaryBank</Name>
				<Source><![CDATA[
    private void rec_BeneficiaryBank()
    {
        //------------------------------------------------------------------
        //  :57:Account With Institution
        //------------------------------------------------------------------

        //  Account With Institution

        if(mSKS_EFT_FileDetail.DepBankTransit && (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #STDDP ||
                                                  mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGDP))
        {
            //Code = mSKS_EFT_FileDetail.DepBankTransit;
            this.fileWrite(':57C://SC' + subStr(strKeep(mSKS_EFT_FileDetail.DepBankTransit, '0123456789'), 1, 6));
        }
        else if(mSKS_EFT_FileDetail.DepSwiftNo != '') 
        {
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #INTP)
            {
                this.fileWrite(':57A:' + subStr(mSKS_EFT_FileDetail.DepSwiftNo, 1, 11));
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FED_WIRE)
            {
                this.fileWrite(':57D:' + subStr(mSKS_EFT_FileDetail.DepSwiftNo, 1, 11));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Fields</Name>
				<Source><![CDATA[
    private void rec_Fields()
    {
        //------------------------------------------------------------------
        //  :20:Debit Reference
        //  :23B:Bank Operation Code
        //  :32A:Value, Currency, Amount
        //  :50:Ordering Customer
        //  Ordering Customer Name/Address
        //  :57:Account With Institution
        //  :59:Beneficiary Customer
        //  Beneficiary Name/Address
        //  :70:Beneficiary Reference
        //  :71A:Details of Charges
        //--------------------------------------------------------------------
        str amount;
        str value;

        //  :20:Debit Reference
        this.fileWrite(':20:' + subStr(mBankAccountTable.SWIFTNo, 1, 16));

        //  :23B:Bank Operation Code
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #STDDP)
        {
            this.fileWrite(':23B:SSTD');
        }
        else
        {
            this.fileWrite(':23B:SPRI');
        }
        //  :32A:Value, Currency, Amount
        amount = num2str(-1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 0, 2, 2, 0);

        this.fileWrite(':32A:' + SKS_PP_StringFormats::strDateYYMMDD(mSKS_EFT_FileDetail.EffectiveDate)
                               + mSKS_EFT_FileDetail.PaymentCurrencyCode
                               + subStr(amount, strLen(amount), -15));


        //  :50:Ordering Customer
        //  Ordering Customer Name/Address
        this.rec_Ordering();

        //  :57:Account With Institution
        this.rec_BeneficiaryBank();

        //  :59:Beneficiary Customer
        //  Beneficiary Name/Address
        this.rec_Beneficiary();

        //  :70:Beneficiary Reference
        this.rec_RemitInfo();

        //  :71A:Details of Charges   
        value = SKS_EFT_Format::getCodelookupvalue('Charges', mSKS_EFT_FileDetail.RecId);

        if(value)
        {
            this.fileWrite(':71A:' + value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Ordering</Name>
				<Source><![CDATA[
    private void rec_Ordering()
    {
        //------------------------------------------------------------------
        //  :50:Ordering Customer
        //  Ordering Customer Name/Address
        //------------------------------------------------------------------

        //  :50:Ordering Customer
        this.fileWrite(':50K:/' + subStr(strKeep(mBankAccountTable.BankSortCode, '0123456789'), 1, 6) + subStr(strKeep(mSKS_EFT_FileDetail.BankBankAcct, '0123456789'), 1, 8));

        //  Ordering Customer Name/Address
        if(mSKS_EFT_Bank.WOrdPartyName != '')
        {
            this.fileWrite(subStr(mSKS_EFT_Bank.WOrdPartyName, 1, 35));
        }
        
        if(mSKS_EFT_Bank.WOrdPartyAddr != '')
        {
            this.fileWrite(subStr(mSKS_EFT_Bank.WOrdPartyAddr, 1, 35));
        }

        if(mSKS_EFT_Bank.WOrdPartyAddr2 != '')
        {
            this.fileWrite(subStr(mSKS_EFT_Bank.WOrdPartyAddr2, 1, 35));
        }

        if(mSKS_EFT_Bank.WOrdPartyCity != '')
        {
            this.fileWrite(subStr(mSKS_EFT_Bank.WOrdPartyCity, 1, 35));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_RemitInfo</Name>
				<Source><![CDATA[
    private void rec_RemitInfo()
    {
        //------------------------------------------------------------------
        //  :70:Beneficiary Reference
        //------------------------------------------------------------------

        str invNum;
        str value1;
        str value2;
        str value3;
        str value4;

        invNum = this.getInvoiceNbrs();

        if(invNum)
        {
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #STDDP)
            {
                invNum = '/RFB/' + invNum;

                this.fileWrite(':70:' + subStr(invNum, 1, 18));
            }
            else
            {
                value1 = subStr(invNum, 1, 35);
                value2 = subStr(invNum, 36, 35);
                value3 = subStr(invNum, 71, 35);
                value4 = subStr(invNum, 106, 35);
    
                if(value1)
                {
                    this.fileWrite(':70:' + value1);
                }
                if(value2)
                {
                    this.fileWrite(value2);
                }
                if(value3)
                {
                    this.fileWrite(value3);
                }
                if(value4)
                {
                    this.fileWrite(value4);
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>