<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_LK_COMBANK_151</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_LK_COMBANK_151 extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_LK_COMBANK_151 extends SKS_EFT_Format
{
    #define.FormatVersion('20220524')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();
    
            // Get SKS_EFT_Bank
            this.getSKS_EFT_Bank();
    
            // Payment
            this.rec_Payment();
    
            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Payment</Name>
				<Source><![CDATA[
    public boolean rec_Payment()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Description                    Length
        // A)    Tran Id                             04
        // B)    Destination Bank                    04
        // C)    Destination Branch                  03
        // D)    Destination Account                 12
        // E)    Destination Account Name            20
        // F)    Transaction Code                    02
        // G)    Return Code                         02
        // H)    Credit/Debit Code                   01
        // I)    Return Date                         06
        // J)    Amount                              12
        // K)    Currency Code                       03
        // L)    Originating Bank                    04
        // M)    Originating Branch                  03
        // N)    Originating Account                 12
        // O)    Originating Account Name            20
        // P)    Particulars                         15
        // Q)    Reference                           15
        // R)    Value date                          06
        // S)    Security field                      06
        // T)    Filler                              01
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        LedgerJournalTrans ledgerJournalTrans;
        ;
    
        //      Tran Id                             04
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        //      Destination Bank                    04
        sb.Append(SKS_PP_StringFormats::strFill(4, subStr(mSKS_EFT_FileDetail.DepBankTransit, strLen(mSKS_EFT_FileDetail.DepBankTransit), -4), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //       Destination Branch                 03
        sb.Append(SKS_PP_StringFormats::strFill(3, this.CharacterReplacement(mSKS_EFT_VendorPaym.WBenBankBranch), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //       Destination Account                12
        sb.Append(SKS_PP_StringFormats::strFill(12, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        //      Destination Account Name            20
        sb.Append(SKS_PP_StringFormats::strFill(20, this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //      Transaction Code                    02
        sb.Append('23');
    
        //      Return Code                         02
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
    
        //      Credit/Debit Code                   01
        if(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur >  0)
        {
            sb.Append('1');
        }
        else
        {
            sb.Append('0');
        }
    
        //      Return Date                         06
        sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        //      Amount                              12
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur), 12));
    
        //      Currency Code                       03
        sb.Append(mSKS_EFT_FileDetail.PaymentCurrencyCode);
    
        //      Originating Bank                    04
        sb.Append('7056');
    
        //      Originating Branch                  03
        str originBranch;

        originBranch = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('OriginBranch', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        sb.Append(SKS_PP_StringFormats::strFill(3, this.CharacterReplacement(originBranch), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //      Originating Account                 12
        sb.Append(SKS_PP_StringFormats::strFill(12, mSKS_EFT_FileDetail.BankBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        //      Originating Account Name            20
        sb.Append(SKS_PP_StringFormats::strFill(20, this.CharacterReplacement(mSKS_EFT_FileDetail.FileACHCompanyName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //      Particulars                         15
        select firstonly crossCompany Txt from ledgerJournalTrans where
            ledgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;
    
        sb.Append(SKS_PP_StringFormats::strFill(15, this.CharacterReplacement(ledgerJournalTrans.Txt), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //      Reference                           15
        sb.Append(SKS_PP_StringFormats::strFill(15, this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //      Value date                          06
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(mSKS_EFT_File.EffectiveDate));
    
        //      Security field                      06
        sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //      Filler                              01
        sb.Append('@');
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>