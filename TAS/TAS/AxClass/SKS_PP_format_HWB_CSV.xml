<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_format_HWB_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_format_HWB_CSV  extends SKS_PP_Format_BankGroup
{
    //--> SKS_DevOps_16116
    int mItemCount;
    real mItemSum;
    #define.Comma(',')
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtFormatHeader</Name>
				<Source><![CDATA[
    //<-- SKS_DevOps_16116

    // CSV format
    // Account Number               Max(10)   
    // Check or Serial Number       Max(10)
    // Issue Date                   Max(10)   MM/DD/YYYY
    // Dollar Amount                
    // Payee                        Max(45)                       
    // Type Indicator 

    // SKS_DevOps_16116
    protected str txtFormatHeader()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        mItemCount = 0;
        mItemSum = 0;
    
        sb.Append('00');
        sb.Append(#Comma);

        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        str ChkNbr;
        int Mult;
        str ItemType;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str VendName;
        ;
    
        mItemCount++; // SKS_DevOps_16116
        //Convert negative void numbers to positives
        Mult = 1;
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
            if(mSKS_PP_FileDetail.chkcuryamt < 0)
            {
                Mult = -1;
            }
        }
        else
        {
            ItemType = 'I';
            mItemSum = mItemSum + mSKS_PP_FileDetail.ChkCuryAmt; // SKS_DevOps_16116
        }
    
        Vendname = mSKS_PP_FileDetail.VendName;
        if(strfind(Vendname, ',', 1, strlen(VendName)) > 0)
        {
            Vendname = '"' + SubStr(Vendname, 1, 40) + '"';
        }
        else
        {
            Vendname = SubStr(Vendname, 1, 40);
        }
        if(strContains(Vendname, '&'))
        {
            Vendname = strRem(Vendname, '&');
        }
    
        ChkNbr = SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left);    //SKS#DevOps:15943        
    
        //--> SKS_DevOps_16116
        sb.Append('01');
        sb.Append(#Comma);

        sb.Append(subStr(mSKS_PP_FileDetail.BnkBankTransit, 1, 9));
        sb.Append(#Comma);
        //<-- SKS_DevOps_16116

        // Account Number               Max(10)
        sb.Append(subStr(mSKS_PP_FileDetail.BnkBankAcct, 1, 10));
        sb.Append(#Comma);

        // Check or Serial Number       Max(10)
        sb.Append(ChkNbr);
        sb.Append(#Comma);

        // Issue Date                   Max(10)   MMDDYYYY
        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(#Comma);

        // Dollar Amount
        sb.Append(SKS_PP_StringFormats::strMoney(mSKS_PP_FileDetail.ChkCuryAmt * Mult, 10)); // SKS_DevOps_16116
        sb.Append(#Comma);

        // Type Indicator
        sb.Append(ItemType);
        sb.Append(#Comma);

        // Payee                        
        sb.Append(VendName);
        
    
        Return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtFormatTrailer</Name>
				<Source><![CDATA[
   // SKS_DevOps_16116
    protected str txtFormatTrailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        sb.Append('99');
        sb.Append(#Comma);
        sb.Append(SKS_PP_StringFormats::strFill(10,int2str(mItemCount),SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
        sb.Append(#Comma);
        sb.Append(SKS_PP_StringFormats::strMoney(mItemSum, 10));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>