<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_WF_PM_3266</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_WF_PM_3266 Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_WF_PM_3266 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220614';
        dataContractVersion = '1.0';
        conFormatID = ['US-WF-PM-3266'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'XXXXXXXXXX','Company id','','',1,'US - Wells Fargo - Payment Manager - 3266',0,'','','US-WF-PM-3266',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,1,0,'US-WF-PM-3266',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-WF-PM-3266'):
                paymSpecList = this.getPaymSpecsMetaData_US_WF_PM_3266();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_WF_PM_3266</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_WF_PM_3266()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Cash Concentration and Disbursement (CCD)',1,'ACH-CCD','','ACH-CCD','TRADE PAY',0,'US-WF-PM-3266',0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'USD wire',1,'WIRE-MTS','','WIRE-MTS','TRADE PAY',0,'US-WF-PM-3266',0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Foreign currency wire',1,'WIRE-IWI','','WIRE-IWI','TRADE PAY',0,'US-WF-PM-3266',0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-WF-PM-3266'):
                notesList = this.getNotesMetaData_US_WF_PM_3266();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_WF_PM_3266</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_WF_PM_3266()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-WF-PM-3266','ACH-CCD','-Company Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-WF-PM-3266','WIRE-MTS','-Company Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-WF-PM-3266','WIRE-IWI','-Company Name is set in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-WF-PM-3266'):
                validationsList = this.getValidationsMetaData_US_WF_PM_3266();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_WF_PM_3266</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_WF_PM_3266()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Originating account','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 26 > Originating account','Bank account number ',0,'AccountNum','','',1,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Originating bank ID SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','Field 28 > Originating bank ID type','Swift code related to Bank',0,'SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Originating bank ID Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','Field 28 > Originating bank ID type','Routing Number related to Bank',0,'RegistrationNum','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Receiving party Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Field 30 > Receiving party name','Name related to Vendor','16','WBeneName','','',0,0,1,'22',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Receiving party Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field 33 > Receiving party address 1','Address related to vendor','16','WBeneAddr','','',1,0,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Receiving party Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field 34 > Receiving party address 2','Address related to vendor','16','WBeneAddr2','','',1,0,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Receiving party City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Field 35 > Receiving party city','Vendor city','16','WBeneCity','','',1,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Receiving party City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/Province','Field 36 > Receiving party state / province','Vendor state','16','WBeneState','','',1,0,1,'3',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Field 37 > Receiving party postal code','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field 38 > Receiving party country code','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Receiving bank name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Name','Field 40 > Receiving bank name','Country related to vendor bank','16','WBenBankName','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Receiving bank address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Address','Field 41 > Receiving bank address','Address related to vendor bank','16','WBenBankAddr','','',1,0,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Receiving bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > City','Field 42 > Receiving bank city ','Address related to vendor bank','16','WBenBankCity','','',1,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Receiving bank Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Country','Field 45 > Receiving bank country code','Country related to vendor bank','16','WBenBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Receiving party account','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','Field 47 >  Receiving party account','Bank Account number related to vendor','9','AccountNum','','',0,0,1,'17',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Receiving bank Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','Field 49 > Receiving bank primary ID type','Swift Code related to Vendor','9','SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Receiving bank Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Field 49 > Receiving bank primary ID type','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Ordering party name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Field 68 > Ordering party name','Name related to bank','15','WOrdPartyName','','',1,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Ordering partyAddress','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Field 70 > Ordering party address1','Address related to bank','15','WOrdPartyAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Ordering party city','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Field 72 > Ordering party city','City related to bank','15','WOrdPartyCity','','',1,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Ordering party State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','Field 73 > Ordering party state / province','Bank Country Sub Division','15','WOrdPartyState','','',1,0,1,'3',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Ordering party Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Field 74 > Ordering party postal code','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','ACH-CCD','','Ordering party Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Field 75 > Ordering party country code','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Originating account','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 26 > Originating account','Bank account number ',0,'AccountNum','','',1,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Originating bank ID SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','Field 28 > Originating bank ID type','Swift code related to Bank',0,'SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Originating bank ID Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','Field 28 > Originating bank ID type','Routing Number related to Bank',0,'RegistrationNum','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Receiving party Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Field 30 > Receiving party name','Name related to Vendor','16','WBeneName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Receiving party Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field 33 > Receiving party address 1','Address related to vendor','16','WBeneAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Receiving party Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field 34 > Receiving party address 2','Address related to vendor','16','WBeneAddr2','','',1,0,1,'25',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Receiving party City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Field 35 > Receiving party city','Vendor city','16','WBeneCity','','',1,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Receiving party City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/Province','Field 36 > Receiving party state / province','Vendor state','16','WBeneState','','',1,0,1,'3',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Field 37 > Receiving party postal code','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field 38 > Receiving party country code','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Receiving bank name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Name','Field 40 > Receiving bank name','Country related to vendor bank','16','WBenBankName','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Receiving bank address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Address','Field 41 > Receiving bank address','Address related to vendor bank','16','WBenBankAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Receiving bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > City','Field 42 > Receiving bank city ','Address related to vendor bank','16','WBenBankCity','','',1,0,1,'25',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Receiving bank Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Country','Field 45 > Receiving bank country code','Country related to vendor bank','16','WBenBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Receiving party account','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','Field 47 >  Receiving party account','Bank Account number related to vendor','9','AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Receiving bank Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','Field 49 > Receiving bank primary ID type','Swift Code related to Vendor','9','SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Receiving bank Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Field 49 > Receiving bank primary ID type','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Ordering party name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Field 68 > Ordering party name','Name related to bank','15','WOrdPartyName','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Ordering partyAddress','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Field 70 > Ordering party address1','Address related to bank','15','WOrdPartyAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Ordering party address2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','Field 71 > Ordering party address2','Address related to bank','15','WOrdPartyAddr2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Ordering party city','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Field 72 > Ordering party city','City related to bank','15','WOrdPartyCity','','',1,0,1,'25',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Ordering party State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','Field 73 > Ordering party state / province','Bank Country Sub Division','15','WOrdPartyState','','',1,0,1,'3',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Ordering party Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Field 74 > Ordering party postal code','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-MTS','','Ordering party Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Field 75 > Ordering party country code','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Originating account','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Field 26 > Originating account','Bank account number ',0,'AccountNum','','',1,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Originating bank ID SWIFT code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','Field 28 > Originating bank ID type','Swift code related to Bank',0,'SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Originating bank ID Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','Field 28 > Originating bank ID type','Routing Number related to Bank',0,'RegistrationNum','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Receiving party Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Field 30 > Receiving party name','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Receiving party Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field 33 > Receiving party address 1','Address related to vendor','16','WBeneAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Receiving party Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field 34 > Receiving party address 2','Address related to vendor','16','WBeneAddr2','','',1,0,1,'25',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Receiving party City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Field 35 > Receiving party city','Vendor city','16','WBeneCity','','',1,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Receiving party City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/Province','Field 36 > Receiving party state / province','Vendor state','16','WBeneState','','',1,0,1,'3',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Field 37 > Receiving party postal code','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field 38 > Receiving party country code','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Receiving bank name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Name','Field 40 > Receiving bank name','Country related to vendor bank','16','WBenBankName','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Receiving bank address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Address','Field 41 > Receiving bank address','Address related to vendor bank','16','WBenBankAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Receiving bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > City','Field 42 > Receiving bank city ','Address related to vendor bank','16','WBenBankCity','','',1,0,1,'25',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Receiving bank Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Country','Field 45 > Receiving bank country code','Country related to vendor bank','16','WBenBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Receiving party account','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank account number','Field 47 >  Receiving party account','Bank Account number related to vendor','9','AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Receiving bank Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','Field 49 > Receiving bank primary ID type','Swift Code related to Vendor','9','SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Receiving bank Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Field 49 > Receiving bank primary ID type','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Ordering party name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Field 68 > Ordering party name','Name related to bank','15','WOrdPartyName','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Ordering partyAddress','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Field 70 > Ordering party address1','Address related to bank','15','WOrdPartyAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Ordering party address2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','Field 71 > Ordering party address2','Address related to bank','15','WOrdPartyAddr2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Ordering party city','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Field 72 > Ordering party city','City related to bank','15','WOrdPartyCity','','',1,0,1,'25',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Ordering party State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','Field 73 > Ordering party state / province','Bank Country Sub Division','15','WOrdPartyState','','',1,0,1,'3',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Ordering party Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','Field 74 > Ordering party postal code','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-WF-PM-3266','WIRE-IWI','','Ordering party Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Field 75 > Ordering party country code','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>