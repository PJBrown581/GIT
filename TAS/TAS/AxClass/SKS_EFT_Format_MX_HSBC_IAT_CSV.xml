<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_MX_HSBC_IAT_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_MX_HSBC_IAT_CSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_MX_HSBC_IAT_CSV extends SKS_EFT_Format
{
    #define.FormatVersion('20220517')
    int  recCount, seqNum;
    #define.Separator(',')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        BankAccountId prevBankAccount;
    
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();
    
            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();
    
            this.rec_Header();
    
            prevBankAccount = mSKS_EFT_FileDetail.BankAccountId;
    
            next mSKS_EFT_FileDetail;
    
            if(prevBankAccount != mSKS_EFT_FileDetail.BankAccountId)
            {
                this.rec_Summary();
                recCount = 0;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Header</Name>
				<Source><![CDATA[
    //  1       Transaction Number
    //  2       Ordering Account
    //  3       Beneficiary Account
    //  4       Amount
    //  5       Currency
    //  6       Reference
    boolean rec_Header()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        recCount++;
    
        //  1       Transaction Number
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(6, num2str(recCount, 0, 0, 0, 0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));
    
        //  2       Ordering Account
        sb.Append(this.wrapField(substr(mSKS_EFT_FileDetail.BankBankAcct, 1, 10)));
    
        //  3       Beneficiary Account
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.DepBankAcct, 1, 10)));
    
        //  4       Amount
        sb.Append(this.wrapField(num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0, 2, 1, 0)));
    
        //  5       Currency
        if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'MXN')
        {
            sb.Append(this.wrapField('1'));
        }
        else if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'USD')
        {
            sb.Append(this.wrapField('2'));
        }
        else
        {
            sb.Append(this.wrapField(''));
        }
    
        //  6       Reference
        sb.Append(this.wrapField(strRem(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), ','), false));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Summary</Name>
				<Source><![CDATA[
    //  1       Block Number
    //  2       Total Transactions
    //  3       Reference
    boolean rec_Summary()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        seqNum++;
    
        //  1       Block Number
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(6, num2str(seqNum, 0, 0, 0, 0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));
    
        //  2       Total Transactions
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(6, num2str(recCount, 0, 0, 0, 0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));
    
        //  3       Reference
        sb.Append(this.wrapField('', false));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '',  boolean _addSeparator = true)
    {
        str text;
    
        text = _field;
    
        if(_addSeparator)
        {
            text += #Separator;
        }
        return text;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>