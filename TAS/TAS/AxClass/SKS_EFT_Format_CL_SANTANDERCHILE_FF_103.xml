<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_CL_SANTANDERCHILE_FF_103</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_CL_SANTANDERCHILE_FF_103 extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_CL_SANTANDERCHILE_FF_103 extends SKS_EFT_Format
{
    str   rutID;
    int seqNum;
    #define.FormatVersion('20220330')
    SKS_EFT_FileDetail invSKS_EFT_FileDetail;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        while(mSKS_EFT_FileDetail)
        {
            this.getSKS_EFT_FileFormatPaymSpec();

            this.rec_details();

            next mSKS_EFT_FileDetail;
        }
        seqNum = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_details</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_details
    /// </summary>
    /// <returns>true/false</returns>
    public boolean rec_details()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        // 1    Supplier tax id                                          11          (  1 -   11)
        rutID = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RUTID', mSKS_EFT_FileDetail.RecId));
        sb.Append(SKS_PP_StringFormats::strFill(11, rutID, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 2    Supplier name                                            40          (  12 -   51)
        sb.Append(SKS_PP_StringFormats::strFill(40, this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 3    Method of Payment                                        2          (52 -   53)
        sb.Append('03');

        // 4    Suppliers Routing Number                                 4          (  54 -  57)
        sb.Append(SKS_PP_StringFormats::strFill(4, this.CharacterReplacement(mSKS_EFT_FileDetail.DepBankTransit), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 5    Suppliers Bank Account Number                            18          ( 58 - 75)
        sb.Append(SKS_PP_StringFormats::strFill(18, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 6    Invoice Number                                           3           ( 76 - 78)
        sb.Append('001');

        // 7    Invoice Sign  “+”                                        1         (79 - 79)
        sb.Append('+');

        // 8    Total Amount of Invoices (Factura 01)                    11          (80 - 90)
        // 9    Total Amount of Invoices                                 13          ( 91 - 103)
        if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CLP')             //SKS#DevOps:17698
        {
            sb.Append(SKS_PP_StringFormats::strFill(11, num2Str(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1), 0, 0, 0, 0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            sb.Append(SKS_PP_StringFormats::strFill(13, num2Str(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1), 0, 0, 0, 0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));     //SKS#DevOps:17698
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(11, SKS_PP_StringFormats::strMoney(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur), 11), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            sb.Append(SKS_PP_StringFormats::strFill(13, SKS_PP_StringFormats::strMoney(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur), 11), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        }

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
              order by mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
            mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>