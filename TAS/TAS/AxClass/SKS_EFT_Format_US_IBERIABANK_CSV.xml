<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_IBERIABANK_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_IBERIABANK_CSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_US_IBERIABANK_CSV extends SKS_EFT_Format
{
    #define.FormatVersion('20220711')
    #define.DOM_WIRE('DOM-WIRE')
    #define.INTL_WIRE('INTL-WIRE')

    #define.Separator(',')
    #define.DoubleQuote('"')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        
        while(mSKS_EFT_FileDetail)
        {
            //SKS_VSTS_13120 -->
            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();
    
            // Get SKS_EFT_Bank
            this.getSKS_EFT_Bank();
            //SKS_VSTS_13120 <--

            this.rec_Payment();

            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Payment</Name>
				<Source><![CDATA[
    boolean rec_Payment()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        //  Originator Account Name
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_Bank.WOrdPartyName)));

        //  Debit Account Number
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.BankBankAcct));

        //  Beneficiary Bank Name
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBenBankName)));

        if(mSKS_EFT_FileDetail.PaymSpec == #DOM_WIRE)//SKS_VSTS_13031
        {
            //  Beneficiary Bank ABA
            if(mSKS_EFT_FileDetail.DepBankTransit)
            {
                sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankTransit));
            }
            else
            {
                sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepSwiftNo));
            }
        }
        else
        {
            //  Beneficiary Bank ABA
            if(mSKS_EFT_FileDetail.DepSwiftNo)
            {
                sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepSwiftNo));
            }
            else
            {
                sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankTransit));
            }
        }
    
        
        //  Beneficiary Account Name
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneName)));

        //  Beneficiary ID Type
        sb.Append(this.wrapField('Checking'));

        //  Beneficiary Bank Account No
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankAcct));

        //  Amount
        sb.Append(this.wrapField(num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0, 2, 1, 0)));

        //  Originating Bank Address 1
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_Bank.WOrdPartyAddr) + ' ' + this.CharacterReplacement(mSKS_EFT_Bank.WOrdPartyAddr2)));//SKS_VSTS_13031

        //  Originating Bank Address 2
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_Bank.WOrdPartyCity) + ' ' + this.CharacterReplacement(mSKS_EFT_Bank.WOrdPartyState)));//SKS_VSTS_13031
        
        //  Originating Bank Address 3
        sb.Append(this.wrapField(mSKS_EFT_Bank.WOrdPartyZipCode));
        
        if(mSKS_EFT_FileDetail.PaymSpec == #INTL_WIRE)
        {
            if(mSKS_EFT_VendorPaym.WIntBankId)
            {
                //  Correspondent Bank Name
                sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WIntBankName)));

                //  Correspondent Bank ABA
                sb.Append(this.wrapField(mSKS_EFT_VendorPaym.WIntBankId));

                //  Intermediary Bank Name
                sb.Append(this.wrapField());

                //  Intermediary Bank Swift/BIC
                sb.Append(this.wrapField());
            }
            else if(mSKS_EFT_VendorPaym.WIntBankSwift)
            {
                //  Correspondent Bank Name
                sb.Append(this.wrapField());

                //  Correspondent Bank ABA
                sb.Append(this.wrapField());

                //  Intermediary Bank Name
                sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WIntBankName)));

                //  Intermediary Bank Swift/BIC            
                sb.Append(this.wrapField(mSKS_EFT_VendorPaym.WIntBankSwift));
            }
        }

        //  Recipient Address 1
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneAddr) + ' ' + this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneAddr2)));

        if(mSKS_EFT_FileDetail.PaymSpec == #DOM_WIRE)
        {
            //  Recipient Address 2
            sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneCity) + ' ' + substr(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneState), 1, 2)));//SKS_VSTS_13282
        }
        else
        {
            //  Recipient Address 2
            sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneCity) + ' ' + this.getLogisticsAddressCountryISO(mSKS_EFT_VendorPaym.WBeneCountryRegionId)));
        }

        //  Recipient Address 3
        sb.Append(this.wrapField(mSKS_EFT_VendorPaym.WBeneZipPostal));

        //  Payment Date
        sb.Append(this.wrapField(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_EFT_FileDetail.PaymentTransDate, DateSeparator::Slash)));

        //  Special Instructions
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WPmtInstText1), false));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '', boolean _addSeparator = true)
    {
        str text;
        text = _field;

        if(strContains(text, ','))
        {
            text = #DoubleQuote + text + #DoubleQuote;
        }
        
        if(_addSeparator)
        {
            text += #Separator;
        }

        return text;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>