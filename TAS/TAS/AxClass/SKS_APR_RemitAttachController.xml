<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_APR_RemitAttachController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Controller class <c>SKS_APR_RemitAttachController</c> to initiate report SKS_APR_RemitAttachmentDetail.
/// Class extends from base class SKS_APR_AttachAdviceController.
/// </summary>
class SKS_APR_RemitAttachController extends SKS_APR_AttachAdviceController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getQuery</Name>
				<Source><![CDATA[
    public Query getQuery()
    {
        return this.parmReportContract().parmQueryContracts().lookup(this.getFirstQueryContractKey());
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        SKS_APR_RemitAttachController::construct(_args).startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Construct the <c>SKS_APR_RemitAttachController</c> object.
    /// </summary>
    public static SKS_APR_RemitAttachController construct(Args _args)
    {
        SKS_APR_RemitAttachController   controller  = new SKS_APR_RemitAttachController();
        controller.parmReportName(ssrsReportStr(SKS_APR_RemitAttachmentDetail, Report));
        controller.parmArgs(_args);
        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the report Name SKS_APR_RemitAttachmentDetail.
    /// </summary>
    /// <param name = "calledFromInitParmDefault"></param>
    protected void initializeParameters(boolean calledFromInitParmDefault)
    {
        this.parmReportName(ssrsReportStr(SKS_APR_RemitAttachmentDetail, Report));
        super(calledFromInitParmDefault);
    }

]]></Source>
			</Method>
			<Method>
				<Name>SKS_APR_AttachAdviceController_Post_construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Post event Handler for class <c>SKS_APR_AttachAdviceController</c> construct method.
    /// </summary>
    /// <param name="args">XppPrePostArgs object</param>
    [PostHandlerFor(classStr(SKS_APR_AttachAdviceController), staticMethodStr(SKS_APR_AttachAdviceController, construct))]
    public static void SKS_APR_AttachAdviceController_Post_construct(XppPrePostArgs args)
    {
        SKS_APR_RemitAttachController controller;

        switch (args.getArg('_controllerClass'))
        {
            case classStr(SKS_APR_RemitAttachController) :
                controller = new SKS_APR_RemitAttachController();
                controller.parmReportName(ssrsReportStr(SKS_APR_RemitAttachmentDetail, Report));
                break;

            default :
                break;
        }
        if(controller)
        {
            args.setReturnValue(controller);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>