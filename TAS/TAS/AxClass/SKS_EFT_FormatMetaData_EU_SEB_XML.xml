<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_EU_SEB_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_EU_SEB_XML extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_EU_SEB_XML Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230522';
        dataContractVersion = '1.0';
        conFormatID = ['EU-SEB-XML-DK','EU-SEB-XML-FI','EU-SEB-XML-DE','EU-SEB-XML-NO','EU-SEB-XML-PL','EU-SEB-XML-SE','EU-SEB-XML-UK','EU-SEB-XML-INT','EU-SEB-XML-US'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'EU - SEB - XML - Denmark',0,'','','EU-SEB-XML-DK',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'EU-SEB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'EU - SEB - XML - Finland',0,'','','EU-SEB-XML-FI',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'EU-SEB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,1,1,'','','','',0,'','','','',0,'EU - SEB - XML - Germany',0,'','','EU-SEB-XML-DE',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'EU-SEB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'EU - SEB - XML - Norway',0,'','','EU-SEB-XML-NO',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'EU-SEB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'EU - SEB - XML - Poland',0,'','','EU-SEB-XML-PL',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'EU-SEB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'EU - SEB - XML - Sweden',0,'','','EU-SEB-XML-SE',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'EU-SEB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,1,1,'','','','',0,'','','','',0,'EU - SEB - XML - United Kingdom',0,'','','EU-SEB-XML-UK',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'EU-SEB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'EU - SEB - XML - Intra Group Transfers',0,'','','EU-SEB-XML-INT',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'EU-SEB-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'EU - SEB - XML - United States of America',0,'','','EU-SEB-XML-US',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'EU-SEB-XML',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
                //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
                //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
                //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('EU-SEB-XML-DK'):
                paymSpecList = this.getPaymSpecsMetaData_EU_SEB_XML_DK();
                break;

            case ('EU-SEB-XML-FI'):
                paymSpecList = this.getPaymSpecsMetaData_EU_SEB_XML_FI();
                break;

            case ('EU-SEB-XML-DE'):
                paymSpecList = this.getPaymSpecsMetaData_EU_SEB_XML_DE();
                break;

            case ('EU-SEB-XML-NO'):
                paymSpecList = this.getPaymSpecsMetaData_EU_SEB_XML_NO();
                break;

            case ('EU-SEB-XML-PL'):
                paymSpecList = this.getPaymSpecsMetaData_EU_SEB_XML_PL();
                break;

            case ('EU-SEB-XML-SE'):
                paymSpecList = this.getPaymSpecsMetaData_EU_SEB_XML_SE();
                break;

            case ('EU-SEB-XML-UK'):
                paymSpecList = this.getPaymSpecsMetaData_EU_SEB_XML_UK();
                break;

            case ('EU-SEB-XML-INT'):
                paymSpecList = this.getPaymSpecsMetaData_EU_SEB_XML_INT();
                break;

            case ('EU-SEB-XML-US'):
                paymSpecList = this.getPaymSpecsMetaData_EU_SEB_XML_US();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_EU_SEB_XML_DK</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_EU_SEB_XML_DK()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Credit transfer with remittance info on statement',1,'CTWR','','CTWR','TRADE PAY',0,'EU-SEB-XML-DK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Same day value credit transfer',1,'SDCT','','SDCT','TRADE PAY',0,'EU-SEB-XML-DK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Credit transfer with strd rmt Info - paying slip OCR FI71',1,'FI71','','FI71','TRADE PAY',0,'EU-SEB-XML-DK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Credit transfer with strd rmt Info - paying slip OCR Giro04',1,'GIRO-04','','GIRO-04','TRADE PAY',0,'EU-SEB-XML-DK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Credit transfer with strd rmt Info - paying slip OCR Giro15',1,'GIRO-15','','GIRO-15','TRADE PAY',0,'EU-SEB-XML-DK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Credit transfer with ustrd rmt Info - pay slip Giro01 & FI73',1,'FI73','','FI73','TRADE PAY',0,'EU-SEB-XML-DK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Credit transfer with strd rmt Info - paying slip OCR & FI75',1,'FI75','','FI75','TRADE PAY',0,'EU-SEB-XML-DK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Local payment urgent',1,'LP-URG','','LP-URG','TRADE PAY',0,'EU-SEB-XML-DK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International payment non-urgent',1,'INTP-NUR','','INTP-NUR','TRADE PAY',0,'EU-SEB-XML-DK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International payment urgent',1,'INTP-UR','','INTP-UR','TRADE PAY',0,'EU-SEB-XML-DK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA payment (SCT)',1,'SEPA-CT','','SEPA-CT','TRADE PAY',0,'EU-SEB-XML-DK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA same day execution',1,'SEPA-SDE','','SEPA-SDE','TRADE PAY',0,'EU-SEB-XML-DK',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_EU_SEB_XML_FI</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_EU_SEB_XML_FI()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International payment non-urgent',1,'INTP-NUR','','INTP-NUR','TRADE PAY',0,'EU-SEB-XML-FI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International payment urgent',1,'INTP-UR','','INTP-UR','TRADE PAY',0,'EU-SEB-XML-FI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA payment (SCT)',1,'SEPA-CT','','SEPA-CT','TRADE PAY',0,'EU-SEB-XML-FI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA same day execution',1,'SEPA-SDE','','SEPA-SDE','TRADE PAY',0,'EU-SEB-XML-FI',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_EU_SEB_XML_DE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_EU_SEB_XML_DE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Local payment urgent',1,'LP-URG','','LP-URG','TRADE PAY',0,'EU-SEB-XML-DE',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International payment non-urgent',1,'INTP-NUR','','INTP-NUR','TRADE PAY',0,'EU-SEB-XML-DE',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International payment urgent',1,'INTP-UR','','INTP-UR','TRADE PAY',0,'EU-SEB-XML-DE',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA payment (SCT)',1,'SEPA-CT','','SEPA-CT','TRADE PAY',0,'EU-SEB-XML-DE',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA same day execution',1,'SEPA-SDE','','SEPA-SDE','TRADE PAY',0,'EU-SEB-XML-DE',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_EU_SEB_XML_NO</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_EU_SEB_XML_NO()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Credit transfer KID/OCR reference',1,'P-KIDR','','P-KIDR','TRADE PAY',0,'EU-SEB-XML-NO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Credit transfer with structured inf',1,'P-CSTRD','','P-CSTRD','TRADE PAY',0,'EU-SEB-XML-NO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Credit transfer with advice',1,'P-CTWR','','P-CTWR','TRADE PAY',0,'EU-SEB-XML-NO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Credit transfer without remittance info',1,'P-CTWOR','','P-CTWOR','TRADE PAY',0,'EU-SEB-XML-NO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Local payment urgent',1,'LP-URG','','LP-URG','TRADE PAY',0,'EU-SEB-XML-NO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International payment non-urgent',1,'INTP-NUR','','INTP-NUR','TRADE PAY',0,'EU-SEB-XML-NO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International payment urgent',1,'INTP-UR','','INTP-UR','TRADE PAY',0,'EU-SEB-XML-NO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA payment (SCT)',1,'SEPA-CT','','SEPA-CT','TRADE PAY',0,'EU-SEB-XML-NO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA same day execution',1,'SEPA-SDE','','SEPA-SDE','TRADE PAY',0,'EU-SEB-XML-NO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_EU_SEB_XML_PL</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_EU_SEB_XML_PL()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Local payment non-urgent (Elixir)',1,'LP-NURG','','LP-NURG','TRADE PAY',0,'EU-SEB-XML-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Local payment urgent (SORBNet)',1,'LP-URGSO','','LP-URGSO','TRADE PAY',0,'EU-SEB-XML-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International payment non-urgent',1,'INTP-NUR','','INTP-NUR','TRADE PAY',0,'EU-SEB-XML-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International payment urgent',1,'INTP-UR','','INTP-UR','TRADE PAY',0,'EU-SEB-XML-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA payment (SCT)',1,'SEPA-CT','','SEPA-CT','TRADE PAY',0,'EU-SEB-XML-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA same day execution',1,'SEPA-SDE','','SEPA-SDE','TRADE PAY',0,'EU-SEB-XML-PL',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_EU_SEB_XML_SE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_EU_SEB_XML_SE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Payment to Bankgirot',1,'P-PBOR','','P-PBOR','TRADE PAY',0,'EU-SEB-XML-SE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Payment to Plusgirot',1,'P-PPOR','','P-PPOR','TRADE PAY',0,'EU-SEB-XML-SE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Credit transfer with advice',1,'P-FTWR','','P-FTWR','TRADE PAY',0,'EU-SEB-XML-SE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Credit transfer without remittance info',1,'P-FTWOR','','P-FTWOR','TRADE PAY',0,'EU-SEB-XML-SE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Same day transfer',1,'STRF','','STRF','TRADE PAY',0,'EU-SEB-XML-SE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International payment non-urgent',1,'INTP-NUR','','INTP-NUR','TRADE PAY',0,'EU-SEB-XML-SE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International payment urgent',1,'INTP-UR','','INTP-UR','TRADE PAY',0,'EU-SEB-XML-SE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA payment (SCT)',1,'SEPA-CT','','SEPA-CT','TRADE PAY',0,'EU-SEB-XML-SE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA same day execution',1,'SEPA-SDE','','SEPA-SDE','TRADE PAY',0,'EU-SEB-XML-SE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_EU_SEB_XML_UK</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_EU_SEB_XML_UK()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'BACS Payment',1,'BACS','','BACS','TRADE PAY',0,'EU-SEB-XML-UK',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'CHAPS Payment',1,'CHAPS','','CHAPS','TRADE PAY',0,'EU-SEB-XML-UK',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'UK Faster Payment',1,'FSTR-PAY','','FSTR-PAY','TRADE PAY',0,'EU-SEB-XML-UK',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Salary Payment',1,'SALARY','','SALARY','TRADE PAY',0,'EU-SEB-XML-UK',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International payment non-urgent',1,'INTP-NUR','','INTP-NUR','TRADE PAY',0,'EU-SEB-XML-UK',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International payment urgent',1,'INTP-UR','','INTP-UR','TRADE PAY',0,'EU-SEB-XML-UK',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA payment (SCT)',1,'SEPA-CT','','SEPA-CT','TRADE PAY',0,'EU-SEB-XML-UK',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA same day execution',1,'SEPA-SDE','','SEPA-SDE','TRADE PAY',0,'EU-SEB-XML-UK',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_EU_SEB_XML_INT</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_EU_SEB_XML_INT()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Treasury Payments',1,'TREA','','TREA','TRADE PAY',0,'EU-SEB-XML-INT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Intra Company Payments',1,'INTC','','INTC','TRADE PAY',0,'EU-SEB-XML-INT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Same Day Value Payments',1,'SDVA','','SDVA','TRADE PAY',0,'EU-SEB-XML-INT',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_EU_SEB_XML_US</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_EU_SEB_XML_US()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'CHIPS Payment',1,'CHIPS','','CHIPS','TRADE PAY',0,'EU-SEB-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Express (FEDWire)',1,'FED-WIRE','','FED-WIRE','TRADE PAY',0,'EU-SEB-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Common and urgent international payments',1,'COMURG-INT','','COMURG-INT','TRADE PAY',0,'EU-SEB-XML-US',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('EU-SEB-XML-DK'):
                notesList = this.getNotesMetaData_EU_SEB_XML_DK();
                break;

            case ('EU-SEB-XML-FI'):
                notesList = this.getNotesMetaData_EU_SEB_XML_FI();
                break;

            case ('EU-SEB-XML-DE'):
                notesList = this.getNotesMetaData_EU_SEB_XML_DE();
                break;

            case ('EU-SEB-XML-NO'):
                notesList = this.getNotesMetaData_EU_SEB_XML_NO();
                break;

            case ('EU-SEB-XML-PL'):
                notesList = this.getNotesMetaData_EU_SEB_XML_PL();
                break;

            case ('EU-SEB-XML-SE'):
                notesList = this.getNotesMetaData_EU_SEB_XML_SE();
                break;

            case ('EU-SEB-XML-UK'):
                notesList = this.getNotesMetaData_EU_SEB_XML_UK();
                break;

            case ('EU-SEB-XML-INT'):
                notesList = this.getNotesMetaData_EU_SEB_XML_INT();
                break;

            case ('EU-SEB-XML-US'):
                notesList = this.getNotesMetaData_EU_SEB_XML_US();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_EU_SEB_XML_DK</Name>
				<Source><![CDATA[
    private container getNotesMetaData_EU_SEB_XML_DK()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-DK','CTWR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-DK','SDCT','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-DK','FI71','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::OCR:-Invoice Payment ID number. If the leading characters are >71< then the following 15 characters will be used. Otherwise the first 15 characters are used.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-DK','GIRO-04','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::OCR:-Invoice Payment ID number. If the leading characters are >Giro 04< then the following 16 characters will be used. Otherwise the first 16 characters are used.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-DK','GIRO-15','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::OCR:-Invoice Payment ID number. If the leading characters are >Giro 15< then the following 16 characters will be used. Otherwise the first 16 characters are used.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-DK','FI73','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-DK','FI75','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::OCR:-Invoice Payment ID number. If the leading characters are >75< then the following 15 characters will be used. Otherwise the first 15 characters are used.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-DK','LP-URG','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-DK','INTP-NUR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-DK','INTP-UR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-DK','SEPA-CT','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::OCR Reference Number:-OCR number comes from the Invoice payment id number.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-DK','SEPA-SDE','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_EU_SEB_XML_FI</Name>
				<Source><![CDATA[
    private container getNotesMetaData_EU_SEB_XML_FI()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-FI','INTP-NUR','-This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-FI','INTP-UR','-This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-FI','SEPA-CT','-This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::OCR Reference Number:-OCR number comes from the Invoice payment id number.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-FI','SEPA-SDE','-This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_EU_SEB_XML_DE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_EU_SEB_XML_DE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-DE','LP-URG','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-DE','INTP-NUR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-DE','INTP-UR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-DE','SEPA-CT','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::OCR Reference Number:-OCR number comes from the Invoice payment id number.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-DE','SEPA-SDE','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_EU_SEB_XML_NO</Name>
				<Source><![CDATA[
    private container getNotesMetaData_EU_SEB_XML_NO()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-NO','P-KIDR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::OCR Reference Number:-OCR number comes from the Invoice payment id number.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-NO','P-CSTRD','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::OCR Reference Number:-OCR number comes from the Invoice payment id number.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-NO','P-CTWR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-NO','P-CTWOR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-NO','LP-URG','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-NO','INTP-NUR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::Regulatory Reporting:-Currency of the payment must be NOK (Norwegian Krone).:-For Central bank purpose code and Name Goto Payment Tab > Notification to the Central Bank(Group) > Fill Central bank purpose code and Name fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-NO','INTP-UR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::Regulatory Reporting:-Currency of the payment must be NOK (Norwegian Krone).:-For Central bank purpose code and Name Goto Payment Tab > Notification to the Central Bank(Group) > Fill Central bank purpose code and Name fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-NO','SEPA-CT','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::OCR Reference Number:-OCR number comes from the Invoice payment id number.::Regulatory Reporting:-Currency of the payment must be NOK (Norwegian Krone).:-For Central bank purpose code and Name Goto Payment Tab > Notification to the Central Bank(Group) > Fill Central bank purpose code and Name fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-NO','SEPA-SDE','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::Regulatory Reporting:-Currency of the payment must be NOK (Norwegian Krone).:-For Central bank purpose code and Name Goto Payment Tab > Notification to the Central Bank(Group) > Fill Central bank purpose code and Name fields.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_EU_SEB_XML_PL</Name>
				<Source><![CDATA[
    private container getNotesMetaData_EU_SEB_XML_PL()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-PL','LP-NURG','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-PL','LP-URGSO','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-PL','INTP-NUR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-PL','INTP-UR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-PL','SEPA-CT','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab::OCR Reference Number:-OCR number comes from the Invoice payment id number.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-PL','SEPA-SDE','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_EU_SEB_XML_SE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_EU_SEB_XML_SE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-SE','P-PBOR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::OCR Reference Number:-OCR number comes from the Invoice payment id number.::Regulatory Reporting:-Currency of the payment must be SEK (Swedish Krona).:-For Central bank purpose code and Name Goto Payment Tab > Notification to the Central Bank(Group) > Fill Central bank purpose code and Name fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-SE','P-PPOR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::OCR Reference Number:-OCR number comes from the Invoice payment id number.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-SE','P-FTWR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-SE','P-FTWOR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-SE','STRF','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-SE','INTP-NUR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::Regulatory Reporting:-Currency of the payment must be SEK (Swedish Krona).:-For Central bank purpose code and Name Goto Payment Tab > Notification to the Central Bank(Group) > Fill Central bank purpose code and Name fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-SE','INTP-UR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::Regulatory Reporting:-Currency of the payment must be SEK (Swedish Krona).:-For Central bank purpose code and Name Goto Payment Tab > Notification to the Central Bank(Group) > Fill Central bank purpose code and Name fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-SE','SEPA-CT','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::OCR Reference Number:-OCR number comes from the Invoice number.::Regulatory Reporting:-Currency of the payment must be SEK (Swedish Krona).:-For Central bank purpose code and Name Goto Payment Tab > Notification to the Central Bank(Group) > Fill Central bank purpose code and Name fields.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-SE','SEPA-SDE','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::Regulatory Reporting:-Currency of the payment must be SEK (Swedish Krona).:-For Central bank purpose code and Name Goto Payment Tab > Notification to the Central Bank(Group) > Fill Central bank purpose code and Name fields.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_EU_SEB_XML_UK</Name>
				<Source><![CDATA[
    private container getNotesMetaData_EU_SEB_XML_UK()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-UK','BACS','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-UK','CHAPS','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-UK','FSTR-PAY','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-UK','SALARY','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-UK','INTP-NUR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-UK','INTP-UR','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-UK','SEPA-CT','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab::OCR Reference Number:-OCR number comes from the Invoice payment id number.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-UK','SEPA-SDE','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-UK','FED-WIRE','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_EU_SEB_XML_INT</Name>
				<Source><![CDATA[
    private container getNotesMetaData_EU_SEB_XML_INT()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-INT','TREA','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-INT','INTC','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-INT','SDVA','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_EU_SEB_XML_US</Name>
				<Source><![CDATA[
    private container getNotesMetaData_EU_SEB_XML_US()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['EU-SEB-XML-US','CHIPS','Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab::OCR Reference Number:-OCR number comes from the Invoice payment id number.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('EU-SEB-XML-DK'):
                validationsList = this.getValidationsMetaData_EU_SEB_XML_DK();
                break;

            case ('EU-SEB-XML-FI'):
                validationsList = this.getValidationsMetaData_EU_SEB_XML_FI();
                break;

            case ('EU-SEB-XML-DE'):
                validationsList = this.getValidationsMetaData_EU_SEB_XML_DE();
                break;

            case ('EU-SEB-XML-NO'):
                validationsList = this.getValidationsMetaData_EU_SEB_XML_NO();
                break;

            case ('EU-SEB-XML-PL'):
                validationsList = this.getValidationsMetaData_EU_SEB_XML_PL();
                break;

            case ('EU-SEB-XML-SE'):
                validationsList = this.getValidationsMetaData_EU_SEB_XML_SE();
                break;

            case ('EU-SEB-XML-UK'):
                validationsList = this.getValidationsMetaData_EU_SEB_XML_UK();
                break;

            case ('EU-SEB-XML-INT'):
                validationsList = this.getValidationsMetaData_EU_SEB_XML_INT();
                break;

            case ('EU-SEB-XML-US'):
                validationsList = this.getValidationsMetaData_EU_SEB_XML_US();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_EU_SEB_XML_DK</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_EU_SEB_XML_DK()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','CTWR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','CTWR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','CTWR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','CTWR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','CTWR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','CTWR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','CTWR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','CTWR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','CTWR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','CTWR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','CTWR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','Vendor city','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','CTWR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> CtrySubDvsn','Bank Country Sub Division','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','CTWR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','CTWR','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','CTWR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SDCT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SDCT','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SDCT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SDCT','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SDCT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SDCT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SDCT','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SDCT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SDCT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SDCT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SDCT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','Vendor city','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SDCT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> CtrySubDvsn','Bank Country Sub Division','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SDCT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SDCT','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SDCT','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI71','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI71','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI71','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI71','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI71','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI71','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI71','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI71','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI71','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','Vendor city','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI71','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> CtrySubDvsn','Bank Country Sub Division','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI71','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI71','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI71','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-04','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-04','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-04','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-04','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-04','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-04','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-04','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-04','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-04','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','Vendor city','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-04','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> CtrySubDvsn','Bank Country Sub Division','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-04','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-04','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-04','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-15','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-15','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-15','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-15','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-15','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-15','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-15','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-15','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-15','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','Vendor city','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-15','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> CtrySubDvsn','Bank Country Sub Division','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-15','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-15','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','GIRO-15','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI73','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI73','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI73','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI73','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI73','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI73','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI73','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI73','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI73','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','Vendor city','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI73','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> CtrySubDvsn','Bank Country Sub Division','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI73','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI73','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI73','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI75','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI75','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI75','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI75','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI75','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI75','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI75','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI75','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI75','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','Vendor city','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI75','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> CtrySubDvsn','Bank Country Sub Division','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI75','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI75','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','FI75','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','LP-URG','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','LP-URG','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','LP-URG','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','LP-URG','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','LP-URG','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','LP-URG','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','LP-URG','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','LP-URG','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','LP-URG','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','LP-URG','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','LP-URG','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','Vendor city','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','LP-URG','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> CtrySubDvsn','Bank Country Sub Division','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','LP-URG','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','LP-URG','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','LP-URG','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-NUR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-NUR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-NUR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-NUR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-NUR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-NUR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-NUR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-NUR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-NUR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-NUR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-NUR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','Vendor city','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-NUR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> CtrySubDvsn','Bank Country Sub Division','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-NUR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-NUR','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-NUR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-UR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-UR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-UR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-UR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-UR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-UR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-UR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-UR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-UR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-UR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-UR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','Vendor city','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-UR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> CtrySubDvsn','Bank Country Sub Division','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-UR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-UR','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','INTP-UR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > BldgNb','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','Bank State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > CtrySubDvsn','State/province related to bank','15','WOrdPartyState','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','Vendor city','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> CtrySubDvsn','Bank Country Sub Division','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-CT','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > BldgNb','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','Bank State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > CtrySubDvsn','State/province related to bank','15','WOrdPartyState','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','Vendor city','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> CtrySubDvsn','Bank Country Sub Division','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DK','SEPA-SDE','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'20',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_EU_SEB_XML_FI</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_EU_SEB_XML_FI()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-NUR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-NUR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-NUR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-NUR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-NUR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-NUR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-NUR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-NUR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-NUR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-NUR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-NUR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-NUR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-NUR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-NUR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-NUR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-NUR','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-UR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-UR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-UR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-UR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-UR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-UR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-UR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-UR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-UR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-UR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-UR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-UR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-UR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-UR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-UR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','INTP-UR','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-CT','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-FI','SEPA-SDE','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_EU_SEB_XML_DE</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_EU_SEB_XML_DE()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);

        //B2C
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','0',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer','1','AccountNum','','','3','1',1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer','1','BankIBAN','','','3','1',1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer','1','RegistrationNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Customer Swift number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code','1','SWIFTNo','','','3',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Country/Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to Customer bank','35','WBenBankCountryRegionId','','',0,1,'','',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Customer Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Customer Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr2','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine ','ZIP/Postal code  related to Customer','35','WBeneZipPostal','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine','Customer city','35','WBeneCity','','',1,1,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Customer Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Customer','35','WBeneCountryRegionId','','',1,1,'',0,0,'6']);
        
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','0',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer','1','AccountNum','','','3','1',1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer','1','BankIBAN','','','3','1',1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer','1','RegistrationNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Customer Swift number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code','1','SWIFTNo','','','3',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Country/Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to Customer bank','35','WBenBankCountryRegionId','','',0,1,'','',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Customer Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Customer Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr2','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine ','ZIP/Postal code  related to Customer','35','WBeneZipPostal','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine','Customer city','35','WBeneCity','','',1,1,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Customer Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Customer','35','WBeneCountryRegionId','','',1,1,'',0,0,'6']);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','0',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer','1','AccountNum','','','3','1',1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer','1','BankIBAN','','','3','1',1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer','1','RegistrationNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Customer Swift number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code','1','SWIFTNo','','','3',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Country/Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to Customer bank','35','WBenBankCountryRegionId','','',0,1,'','',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Customer Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Customer Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr2','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine ','ZIP/Postal code  related to Customer','35','WBeneZipPostal','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine','Customer city','35','WBeneCity','','',1,1,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Customer Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Customer','35','WBeneCountryRegionId','','',1,1,'',0,0,'6']);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Bank Country code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Bank Zip/postal code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','37','WOrdPartyZipCode','','',1,1,'','',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Bank City','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','37','WOrdPartyCity','','',1,1,'','35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Bank Address 1','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Address related to bank','37','WOrdPartyAddr','','',1,1,'','35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Bank Address 2','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > BldgNb','Address related to bank','37','WOrdPartyAddr2','','',1,1,'','35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','0',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer','1','AccountNum','','','3','1',1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer','1','BankIBAN','','','3','1',1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Customer Swift number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code','1','SWIFTNo','','','3',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Country/Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to Customer bank','35','WBenBankCountryRegionId','','',0,1,'','',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Customer Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Customer Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr2','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine ','ZIP/Postal code  related to Customer','35','WBeneZipPostal','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine','Customer city','35','WBeneCity','','',1,1,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Customer Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Customer','35','WBeneCountryRegionId','','',1,1,'',0,0,'6']);
        
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Bank Country code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Bank Zip/postal code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','37','WOrdPartyZipCode','','',1,1,'','',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Bank City','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','37','WOrdPartyCity','','',1,1,'','35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Bank Address 1','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Address related to bank','37','WOrdPartyAddr','','',1,1,'','35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Bank Address 2','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > BldgNb','Address related to bank','37','WOrdPartyAddr2','','',1,1,'','35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','0',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer','1','AccountNum','','','3','1',1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer','1','BankIBAN','','','3','1',1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Customer Swift number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code','1','SWIFTNo','','','3',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Country/Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to Customer bank','35','WBenBankCountryRegionId','','',0,1,'','',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Customer Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Customer Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to Customer','35','WBeneAddr2','','',1,'1',1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine ','ZIP/Postal code  related to Customer','35','WBeneZipPostal','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstlAdr > AdrLine','Customer city','35','WBeneCity','','',1,1,1,'35',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Customer Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Customer','35','WBeneCountryRegionId','','',1,1,'',0,0,'6']);
       
        //B2B
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',1,0,1,'70',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',24,'IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',24,'AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',24,'SWIFTNo','','','0',1,1,20,0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Creditor sort code','26','RegistrationNum','','',3,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code','26','SWIFTNo','','',3,1,'1','20',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Bank Account Number','Cash and bank management > Select bank account > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number','26','AccountNum','','',3,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','IBAN','Cash and bank management > Select bank account > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN','26','IBAN','','',3,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','28','Name','','',0,0,1,'70',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Company(account LE) Country/Region','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Company(account LE)','34','CountryRegionId','','',1,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Company(account LE) Address 1','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Street','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to Company(account LE)','34','Street','','',1,'1',1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Company(account LE) ZIP/Postal Code','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','ZIP/Postal code  related to Company(account LE)','34','ZipCode','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','LP-URG','','Company(account LE) City','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to Company(account LE)','34','City','','',1,1,1,'35',0,'4','',0]);
        
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',1,0,1,'70',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',24,'IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',24,'AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',24,'SWIFTNo','','','0',1,1,20,0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Creditor sort code','26','RegistrationNum','','',3,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code','26','SWIFTNo','','',3,1,'1','20',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Bank Account Number','Cash and bank management > Select bank account > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number','26','AccountNum','','',3,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','IBAN','Cash and bank management > Select bank account > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN','26','IBAN','','',3,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','28','Name','','',0,0,1,'70',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Company(account LE) Country/Region','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Company(account LE)','34','CountryRegionId','','',1,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Company(account LE) Address 1','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Street','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to Company(account LE)','34','Street','','',1,'1',1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Company(account LE) ZIP/Postal Code','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','ZIP/Postal code  related to Company(account LE)','34','ZipCode','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-NUR','','Company(account LE) City','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to Company(account LE)','34','City','','',1,1,1,'35',0,'4','',0]);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',1,0,1,'70',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',24,'IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',24,'AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',24,'SWIFTNo','','','0',1,1,20,0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Creditor sort code','26','RegistrationNum','','',3,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code','26','SWIFTNo','','',3,1,'1','20',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Bank Account Number','Cash and bank management > Select bank account > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number','26','AccountNum','','',3,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','IBAN','Cash and bank management > Select bank account > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN','26','IBAN','','',3,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','28','Name','','',0,0,1,'70',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Company(account LE) Country/Region','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Company(account LE)','34','CountryRegionId','','',1,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Company(account LE) Address 1','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Street','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to Company(account LE)','34','Street','','',1,'1',1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Company(account LE) ZIP/Postal Code','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','ZIP/Postal code  related to Company(account LE)','34','ZipCode','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','INTP-UR','','Company(account LE) City','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to Company(account LE)','34','City','','',1,1,1,'35',0,'4','',0]);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',1,0,1,'70',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Bank Address 1','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Address related to bank','23','WOrdPartyAddr','','',1,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Bank Address 2','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > BldgNb','Address related to bank','23','WOrdPartyAddr2','','',1,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Bank City','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','23','WOrdPartyCity','','',1,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Bank Zip/postal code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','23','WOrdPartyZipCode','','',1,1,'','',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Bank Country code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','23','WOrdPartyCountryRegionId','','',1,1,'',0,0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',24,'IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',24,'AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',24,'SWIFTNo','','','0',1,1,20,0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code','26','SWIFTNo','','',0,0,'1','20',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Bank Account Number','Cash and bank management > Select bank account > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number','26','AccountNum','','',3,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','IBAN','Cash and bank management > Select bank account > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN','26','IBAN','','',3,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','28','Name','','',0,0,1,'70',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Company(account LE) Country/Region','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Company(account LE)','34','CountryRegionId','','',1,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Company(account LE) Address 1','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Street','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to Company(account LE)','34','Street','','',1,'1',1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Company(account LE) ZIP/Postal Code','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','ZIP/Postal code  related to Company(account LE)','34','ZipCode','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-CT','','Company(account LE) City','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to Company(account LE)','34','City','','',1,1,1,'35',0,'4','',0]);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',1,0,1,'70',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Bank Address 1','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Address related to bank','23','WOrdPartyAddr','','',1,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Bank Address 2','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > BldgNb','Address related to bank','23','WOrdPartyAddr2','','',1,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Bank City','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','23','WOrdPartyCity','','',1,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Bank Zip/postal code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','23','WOrdPartyZipCode','','',1,1,'','',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Bank Country code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','23','WOrdPartyCountryRegionId','','',1,1,'',0,0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',24,'IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',24,'AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',24,'SWIFTNo','','','0',1,1,20,0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code','26','SWIFTNo','','',0,0,'1','20',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Bank Account Number','Cash and bank management > Select bank account > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number','26','AccountNum','','',3,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','IBAN','Cash and bank management > Select bank account > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN','26','IBAN','','',3,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','28','Name','','',0,0,1,'70',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Company(account LE) Country/Region','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Company(account LE)','34','CountryRegionId','','',1,1,'',0,0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Company(account LE) Address 1','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Street','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine > Address','Address related to Company(account LE)','34','Street','','',1,'1',1,'30',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Company(account LE) ZIP/Postal Code','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','ZIP/Postal code  related to Company(account LE)','34','ZipCode','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-DE','SEPA-SDE','','Company(account LE) City','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to Company(account LE)','34','City','','',1,1,1,'35',0,'4','',0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_EU_SEB_XML_NO</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_EU_SEB_XML_NO()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-KIDR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-KIDR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-KIDR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-KIDR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-KIDR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-KIDR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-KIDR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-KIDR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-KIDR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-KIDR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-KIDR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-KIDR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-KIDR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-KIDR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-KIDR','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CSTRD','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CSTRD','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CSTRD','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CSTRD','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CSTRD','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CSTRD','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CSTRD','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CSTRD','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CSTRD','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CSTRD','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CSTRD','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CSTRD','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CSTRD','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CSTRD','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CSTRD','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWR','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWOR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWOR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWOR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWOR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWOR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWOR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWOR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWOR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWOR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWOR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWOR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWOR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWOR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWOR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','P-CTWOR','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','LP-URG','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','LP-URG','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','LP-URG','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','LP-URG','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','LP-URG','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','LP-URG','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','LP-URG','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','LP-URG','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','LP-URG','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','LP-URG','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','LP-URG','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','LP-URG','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','LP-URG','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','LP-URG','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','LP-URG','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-NUR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-NUR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-NUR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-NUR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-NUR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-NUR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-NUR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-NUR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-NUR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-NUR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-NUR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-NUR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-NUR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-NUR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-NUR','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-UR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-UR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-UR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-UR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-UR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-UR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-UR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-UR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-UR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-UR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-UR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-UR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-UR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-UR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','INTP-UR','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-CT','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-NO','SEPA-SDE','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_EU_SEB_XML_PL</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_EU_SEB_XML_PL()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-NURG','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-NURG','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-NURG','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-NURG','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-NURG','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-NURG','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-NURG','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-NURG','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-NURG','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-NURG','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-NURG','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-NURG','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-NURG','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-NURG','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-NURG','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-NURG','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-URGSO','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-URGSO','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-URGSO','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-URGSO','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-URGSO','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-URGSO','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-URGSO','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-URGSO','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-URGSO','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-URGSO','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-URGSO','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-URGSO','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-URGSO','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-URGSO','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-URGSO','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','LP-URGSO','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-NUR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-NUR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-NUR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-NUR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-NUR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-NUR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-NUR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-NUR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-NUR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-NUR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-NUR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-NUR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-NUR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-NUR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-NUR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-NUR','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-UR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-UR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-UR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-UR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-UR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-UR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-UR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-UR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-UR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-UR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-UR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-UR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-UR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-UR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-UR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','INTP-UR','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-CT','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-PL','SEPA-SDE','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_EU_SEB_XML_SE</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_EU_SEB_XML_SE()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PBOR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PBOR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PBOR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PBOR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PBOR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PBOR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PBOR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PBOR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PBOR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PBOR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PBOR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PBOR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PBOR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PBOR','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PBOR','','Payment Id','Accounts payable > Invoice journal > New > Select Name > Lines > New > Invoice tab > Payment Id','PmtInf > CdTrfTxInf > RmtInf > Strd > CdtrRefInf > Ref','Reference number related to payment','13','PaymId','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PPOR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PPOR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PPOR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PPOR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PPOR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PPOR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PPOR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PPOR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PPOR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PPOR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PPOR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PPOR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PPOR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-PPOR','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWR','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWOR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWOR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWOR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWOR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWOR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWOR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWOR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWOR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWOR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWOR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWOR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWOR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWOR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWOR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWOR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','P-FTWOR','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','STRF','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','STRF','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','STRF','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','STRF','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','STRF','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','STRF','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','STRF','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','STRF','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','STRF','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','STRF','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','STRF','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','STRF','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','STRF','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','STRF','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','STRF','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','STRF','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-NUR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-NUR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-NUR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-NUR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-NUR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-NUR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-NUR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-NUR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','1',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-NUR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-NUR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-NUR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-NUR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-NUR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-NUR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-NUR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-NUR','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-UR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-UR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-UR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-UR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-UR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-UR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-UR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-UR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-UR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-UR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-UR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-UR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-UR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-UR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-UR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','INTP-UR','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-CT','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-SE','SEPA-SDE','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_EU_SEB_XML_UK</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_EU_SEB_XML_UK()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','','3','2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','','3','2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','','3','2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','','3','2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','','3','2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','','3','2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','','3','2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);

        //CNP
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','','3','2',1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','1','AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','1','BankIBAN','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','1','SWIFTNo','','',1,1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','1','RegistrationNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','35','WBeneName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','35','WBeneZipPostal','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','35','WBeneCity','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','State/province','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','35','WBeneState','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Country/Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','35','WBeneCountryRegionId','','',0,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','35','WBeneAddr','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','35','WBeneAddr2','','',1,1,1,'35',0,6]);
  
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','','3','2',1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','1','AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','1','BankIBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','1','SWIFTNo','','','3',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','1','RegistrationNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','35','WBeneName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','35','WBeneZipPostal','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','35','WBeneCity','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','State/province','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','35','WBeneState','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Country/Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','35','WBeneCountryRegionId','','',0,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','35','WBeneAddr','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','35','WBeneAddr2','','',1,1,1,'35',0,6]);
       
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','','3','2',1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','1','AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','1','BankIBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','1','SWIFTNo','','','3',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','1','RegistrationNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','35','WBeneName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','35','WBeneZipPostal','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','35','WBeneCity','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','State/province','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','35','WBeneState','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Country/Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','35','WBeneCountryRegionId','','',0,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','35','WBeneAddr','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','35','WBeneAddr2','','',1,1,1,'35',0,6]);
       
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','','3','2',1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','1','AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','1','BankIBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) >Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','1','SWIFTNo','','',0,1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','35','WBeneName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','35','WBeneZipPostal','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','35','WBeneCity','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','State/province','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','35','WBeneState','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Country/Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','35','WBeneCountryRegionId','','',0,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','35','WBeneAddr','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','35','WBeneAddr2','','',1,1,1,'35',0,6]);
        
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','','3','2',1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','1','AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','1','BankIBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','1','RegistrationNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','1','SWIFTNo','','','3',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','35','WBeneName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','35','WBeneZipPostal','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','35','WBeneCity','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','State/province','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','35','WBeneState','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Country/Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','35','WBeneCountryRegionId','','',0,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','35','WBeneAddr','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','35','WBeneAddr2','','',1,1,1,'35',0,6]);
       
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','','3','2',1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','1','AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','1','BankIBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','1','RegistrationNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','1','SWIFTNo','','','3',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','35','WBeneName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','35','WBeneZipPostal','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','35','WBeneCity','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','State/province','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','35','WBeneState','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Country/Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','35','WBeneCountryRegionId','','',0,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','35','WBeneAddr','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','35','WBeneAddr2','','',1,1,1,'35',0,6]);
        
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Zip/postal code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','37','WOrdPartyZipCode','','',1,1,'','',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','City','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','37','WOrdPartyCity','','',1,1,'','35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Country/Region','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Address 1','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','37','WOrdPartyAddr','','',1,1,'','35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Address 2','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','37','WOrdPartyAddr2','','',1,1,'','35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','','3','2',1,'11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','1','AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','1','BankIBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','1','SWIFTNo','','',0,0,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','35','WBeneName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','35','WBeneZipPostal','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','35','WBeneCity','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','State/province','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','35','WBeneState','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Country/Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','35','WBeneCountryRegionId','','',0,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','35','WBeneAddr','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','35','WBeneAddr2','','',1,1,1,'35',0,6]);
        
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Zip/postal code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','37','WOrdPartyZipCode','','',1,1,'','',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','City','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','37','WOrdPartyCity','','',1,1,'','35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Country/Region','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Address 1','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > PstlAdr > Address','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','37','WOrdPartyAddr','','',1,1,'','35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Address 2','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','37','WOrdPartyAddr2','','',1,1,'','35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','1','AccountNum','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','1','BankIBAN','','','3',1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','1','SWIFTNo','','',0,0,1,'20',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','35','WBeneName','','',0,0,1,'70',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','35','WBeneZipPostal','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','City','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','35','WBeneCity','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','State/province','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','35','WBeneState','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Country/Region','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','35','WBeneCountryRegionId','','',0,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','35','WBeneAddr','','',1,1,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','35','WBeneAddr2','','',1,1,1,'35',0,6]);

        //B2B
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',24,'AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',24,'IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',24,'SWIFTNo','','','3',1,1,'20',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',24,'RegistrationNum','','','3','2',1,'11',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Bank Account Number','Cash and bank management > Select bank account > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','26','AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','IBAN','Cash and bank management > Select bank account > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','26','IBAN','','',1,1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Swift Code','Cash and bank management > Select bank account > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','26','SWIFTNo','','',1,1,1,'20',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','BACS','','Routing number','Cash and bank management > Select bank account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','26','RegistrationNum','','','3',1,1,'35',0,4]);
       
        
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',24,'AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',24,'IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',24,'SWIFTNo','','','3',1,1,'20',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',24,'RegistrationNum','','','3','2',1,'11',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Bank Account Number','Cash and bank management > Select bank account > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','26','AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','IBAN','Cash and bank management > Select bank account > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','26','IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Swift Code','Cash and bank management > Select bank account > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','26','SWIFTNo','','','3',1,1,'20',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','CHAPS','','Routing number','Cash and bank management > Select bank account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','26','RegistrationNum','','','3',1,1,'35',0,4]);
        
       
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',24,'AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',24,'IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',24,'SWIFTNo','','','3',1,1,'20',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',24,'RegistrationNum','','','3','2',1,'11',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Bank Account Number','Cash and bank management > Select bank account > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','26','AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','IBAN','Cash and bank management > Select bank account > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','26','IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Swift Code','Cash and bank management > Select bank account > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','26','SWIFTNo','','','3',1,1,'20',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','FSTR-PAY','','Routing number','Cash and bank management > Select bank account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','26','RegistrationNum','','','3',1,1,'35',0,4]);
       
       
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',24,'AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',24,'IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',24,'SWIFTNo','','','3',1,1,'20',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',24,'RegistrationNum','','','3','2',1,'11',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Bank Account Number','Cash and bank management > Select bank account > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','26','AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','IBAN','Cash and bank management > Select bank account > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','26','IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SALARY','','Swift Code','Cash and bank management > Select bank account > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','26','SWIFTNo','','',0,1,1,'20',0,4]);
              
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',24,'AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',24,'IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',24,'SWIFTNo','','','3',1,1,'20',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',24,'RegistrationNum','','','3','2',1,'11',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Bank Account Number','Cash and bank management > Select bank account > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','26','AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','IBAN','Cash and bank management > Select bank account > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','26','IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Routing number','Cash and bank management > Select bank account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','26','RegistrationNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-NUR','','Swift Code','Cash and bank management > Select bank account > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','26','SWIFTNo','','','3',1,1,'20',0,4]);
                
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',24,'AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',24,'IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',24,'SWIFTNo','','','3',1,1,'20',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',24,'RegistrationNum','','','3','2',1,'11',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Bank Account Number','Cash and bank management > Select bank account > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','26','AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','IBAN','Cash and bank management > Select bank account > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','26','IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Routing number','Cash and bank management > Select bank account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','26','RegistrationNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','INTP-UR','','Swift Code','Cash and bank management > Select bank account > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','26','SWIFTNo','','','3',1,1,'20',0,4]);
         
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','37','WOrdPartyZipCode','','',1,1,'','',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','37','WOrdPartyCity','','',1,1,'','35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'',0,0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','37','WOrdPartyAddr','','',1,1,'','35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','37','WOrdPartyAddr2','','',1,1,'','35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',24,'AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',24,'IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',24,'SWIFTNo','','','3',1,1,'20',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',24,'RegistrationNum','','','3','2',1,'11',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Bank Account Number','Cash and bank management > Select bank account > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','26','AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','IBAN','TAS > Cash and bank management > Select bank account > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','26','IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-CT','','Swift Code','Cash and bank management > Select bank account > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','26','SWIFTNo','','',0,0,1,'20',0,4]);
          
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',0,0,1,'70',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','37','WOrdPartyZipCode','','',1,1,'','',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','37','WOrdPartyCity','','',1,1,'','35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'',0,0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','37','WOrdPartyAddr','','',1,1,'','35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','37','WOrdPartyAddr2','','',1,1,'','35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',24,'AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',24,'IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',24,'SWIFTNo','','',0,1,1,'20',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Bank Account Number','Cash and bank management > Select bank account > General tab > Identification(group) > BankACcountNumber','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Bank Account Number','Account Number related to vendor','26','AccountNum','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','IBAN','Cash and bank management > Select bank account > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN','26','IBAN','','','3',1,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-UK','SEPA-SDE','','Swift Code','Cash and bank management > Select bank account > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','26','SWIFTNo','','',0,0,1,'20',0,4]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_EU_SEB_XML_INT</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_EU_SEB_XML_INT()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','TREA','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','INTC','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-INT','SDVA','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_EU_SEB_XML_US</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_EU_SEB_XML_US()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','CHIPS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','CHIPS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','CHIPS','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','CHIPS','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','CHIPS','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','','3','2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','CHIPS','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','CHIPS','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','CHIPS','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','CHIPS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','CHIPS','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','CHIPS','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','CHIPS','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','CHIPS','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','CHIPS','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','CHIPS','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','CHIPS','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','CHIPS','','Intermediary Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','Intermediary Bank ID','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','FED-WIRE','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','FED-WIRE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','FED-WIRE','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','FED-WIRE','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','FED-WIRE','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Debit Bank ID','Bank Routing Number',0,'RegistrationNum','','','3','2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','FED-WIRE','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','FED-WIRE','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','FED-WIRE','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','FED-WIRE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','FED-WIRE','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','FED-WIRE','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','FED-WIRE','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','FED-WIRE','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','FED-WIRE','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','FED-WIRE','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','FED-WIRE','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','FED-WIRE','','Intermediary Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','Intermediary Bank ID','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,'2',1,'11',0,0]);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','COMURG-INT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','COMURG-INT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','COMURG-INT','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','COMURG-INT','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','0',0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','COMURG-INT','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','COMURG-INT','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','COMURG-INT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','COMURG-INT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','COMURG-INT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','COMURG-INT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','COMURG-INT','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','COMURG-INT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','COMURG-INT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','COMURG-INT','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','COMURG-INT','','Charges','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Other notes(group) > Charges','PmtInf > CdTrfTxInf > ChrgBr','Charge bearer ','16','WChargesIndic','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','COMURG-INT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-SEB-XML-US','COMURG-INT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['EU-SEB-XML','ClrSysId','Clearing System Id']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['EU-SEB-XML','CtgyPurp','Category Purpose']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['EU-SEB-XML','Charges','Charges']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['EU-SEB-XML','RmtPurp','Remittance Purpose Code']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','ATBLZ','ATBLZ']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','AUBSB','AUBSB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','DEBLZ','DEBLZ']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','CACPA','CACPA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','CNAPS','CNAPS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','USPID','USPID']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','ESNCC','ESNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','USABA','USABA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','GRBIC','GRBIC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','HKNCC','HKNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','IENCC','IENCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','INFSC','INFSC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','ITNCC','ITNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','NZNCC','NZNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','PLKNR','PLKNR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','PTNCC','PTNCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','RUCBC','RUCBC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','GBDSC','GBDSC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','CHBCC','CHBCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','CHSIC','CHSIC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','ClrSysId','ZANCC','ZANCC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','CtgyPurp','Dividend','DIVI']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','CtgyPurp','Interest','INTE']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','CtgyPurp','PensionPayment','PENS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','CtgyPurp','SalaryPayment','SALA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','CtgyPurp','Securities','SECU']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','CtgyPurp','SupplierPayment','SUPP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','CtgyPurp','InterCompany payment','INTC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','CtgyPurp','TreasuryPayment','TREA']);


        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','Charges','BorneByDebtor','DEBT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','Charges','BorneByCreditor','CRED']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','Charges','Charges shared by Debtor and Creditor','SHAR']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','BtchBookg','True','true']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','BtchBookg','False','false']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','RmtPurp','GOD','GOD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','RmtPurp','STR','STR']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('EU-SEB-XML-INT'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_EU_SEB_XML_INT();
                break;

            case ('EU-SEB-XML-DE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_EU_SEB_XML_DE();
                break;

            case ('EU-SEB-XML-DK'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_EU_SEB_XML_DK();
                break;

            case ('EU-SEB-XML-FI'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_EU_SEB_XML_FI();
                break;

            case ('EU-SEB-XML-NO'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_EU_SEB_XML_NO();
                break;

            case ('EU-SEB-XML-PL'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_EU_SEB_XML_PL();
                break;

            case ('EU-SEB-XML-SE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_EU_SEB_XML_SE();
                break;

            case ('EU-SEB-XML-UK'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_EU_SEB_XML_UK();
                break;

            case ('EU-SEB-XML-US'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_EU_SEB_XML_US();
                break;
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_EU_SEB_XML_INT</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_EU_SEB_XML_INT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-INT','TREA','ClrSysId','Clearing System Id',0,'ClrSysId','',0,'','','CdtTrfTxInf > FinInstnId > ClrSysMmbId > ClrSysId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-INT','INTC','ClrSysId','Clearing System Id',0,'ClrSysId','',0,'','','CdtTrfTxInf > FinInstnId > ClrSysMmbId > ClrSysId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-INT','SDVA','ClrSysId','Clearing System Id',0,'ClrSysId','',0,'','','CdtTrfTxInf > FinInstnId > ClrSysMmbId > ClrSysId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-INT','TREA','Purp','Purpose',1,'Purp','',0,'','XXXX','CdtTrfTxInf > Purp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-INT','INTC','Purp','Purpose',1,'Purp','',0,'','XXXX','CdtTrfTxInf > Purp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-INT','SDVA','Purp','Purpose',1,'Purp','',0,'','XXXX','CdtTrfTxInf > Purp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-INT','SDVA','CtgyPurp','Category Purpose',0,'CtgyPurp','InterCompany payment',0,'','','PmtInf > PmtTpInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-INT','TREA','CtgyPurp','Category Purpose',0,'CtgyPurp','InterCompany payment',0,'','','PmtInf > PmtTpInf > CtgyPurp > Cd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-INT','TREA','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-INT','INTC','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-INT','SDVA','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_EU_SEB_XML_DE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_EU_SEB_XML_DE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-DE','INTP-NUR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-DE','INTP-UR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-DE','LP-URG','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_EU_SEB_XML_DK</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_EU_SEB_XML_DK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-DK','CTWR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-DK','FI71','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-DK','FI73','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-DK','FI75','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-DK','GIRO-04','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-DK','GIRO-15','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-DK','INTP-NUR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-DK','INTP-UR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-DK','LP-URG','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-DK','SDCT','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_EU_SEB_XML_FI</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_EU_SEB_XML_FI()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-FI','INTP-NUR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-FI','INTP-UR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-FI','INTP-NUR','BtchBookg','Batch Booking',0,'BtchBookg','True',0,'','','PmtInf > BtchBookg']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-FI','INTP-UR','BtchBookg','Batch Booking',0,'BtchBookg','True',0,'','','PmtInf > BtchBookg']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-FI','SEPA-CT','BtchBookg','Batch Booking',0,'BtchBookg','True',0,'','','PmtInf > BtchBookg']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-FI','SEPA-SDE','BtchBookg','Batch Booking',0,'BtchBookg','True',0,'','','PmtInf > BtchBookg']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_EU_SEB_XML_NO</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_EU_SEB_XML_NO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-NO','INTP-NUR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-NO','INTP-UR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-NO','LP-URG','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-NO','P-CSTRD','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-NO','P-CTWOR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-NO','P-CTWR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-NO','P-KIDR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_EU_SEB_XML_PL</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_EU_SEB_XML_PL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-PL','INTP-NUR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-PL','INTP-UR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-PL','LP-NURG','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-PL','LP-URGSO','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_EU_SEB_XML_SE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_EU_SEB_XML_SE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-SE','INTP-NUR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-SE','INTP-UR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-SE','P-FTWOR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-SE','P-FTWR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-SE','P-PBOR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-SE','P-PPOR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-SE','STRF','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_EU_SEB_XML_UK</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_EU_SEB_XML_UK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-UK','BACS','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-UK','CHAPS','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-UK','FSTR-PAY','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-UK','INTP-NUR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-UK','INTP-UR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-UK','SALARY','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_EU_SEB_XML_US</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_EU_SEB_XML_US()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-US','CHIPS','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-US','FED-WIRE','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-US','COMURG-INT','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-US','COMURG-INT','ClrSysId','Clearing System Id',0,'ClrSysId','',0,'','','CdtTrfTxInf > FinInstnId > ClrSysMmbId > ClrSysId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-US','COMURG-INT','Purp','Purpose',1,'Purp','',0,'','XXXX','CdtTrfTxInf > Purp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-US','COMURG-INT','RmtPurp','Remittance Purpose Code',0,'RmtPurp','',0,'','','Rmtinf > Ustrd']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-SEB-XML','EU-SEB-XML-SE','FormatValidations','P-PBOR','9','BankIBAN']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-SEB-XML','EU-SEB-XML-SE','FormatValidations','P-PBOR','9','SWIFTNo']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-SEB-XML','EU-SEB-XML-SE','FormatValidations','P-PPOR','9','BankIBAN']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-SEB-XML','EU-SEB-XML-SE','FormatValidations','P-PPOR','9','SWIFTNo']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-SEB-XML','EU-SEB-XML-SE','FormatValidations','P-PPOR','13','PaymId']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-SEB-XML','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-SEB-XML','*','FormatValidations','*','16','WChargesIndic']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-SEB-XML','*','FormatValidations','*','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-SEB-XML','*','FormatValidations','*','15','W02']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-SEB-XML','*','FormatValidations','*','0','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-SEB-XML','EU-SEB-XML-UK','FormatValidations','*','*','26']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['EU-SEB-XML','Btchbkg','Batch Booking']);

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','Btchbkg','True','Y']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-SEB-XML','Btchbkg','False','N']);

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('EU-SEB-XML-DE'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_EU_SEB_XML_DE();
                break;

            case ('EU-SEB-XML-DK'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_EU_SEB_XML_DK();
                break;

            case ('EU-SEB-XML-FI'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_EU_SEB_XML_FI();
                break;

            case ('EU-SEB-XML-NO'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_EU_SEB_XML_NO();
                break;

            case ('EU-SEB-XML-PL'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_EU_SEB_XML_PL();
                break;

            case ('EU-SEB-XML-SE'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_EU_SEB_XML_SE();
                break;

            case ('EU-SEB-XML-UK'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_EU_SEB_XML_UK();
                break;

            case ('EU-SEB-XML-INT'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_EU_SEB_XML_INT();
                break;

            case ('EU-SEB-XML-US'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_EU_SEB_XML_US();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_EU_SEB_XML_DE</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_EU_SEB_XML_DE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-DE','SenderId','Sender id',1,'SenderId','',1,'','XXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > Orgid > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-DE','BankId','Bank id',1,'BankId','',1,'','XXXXXXXXXXXXXX','PmtInf > Dbtr > Id > Orgid > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_EU_SEB_XML_DK</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_EU_SEB_XML_DK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-DK','SenderId','Sender id',1,'SenderId','',1,'','XXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > Orgid > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-DK','BankId','Bank id',1,'BankId','',1,'','XXXXXXXXXXXXXX','PmtInf > Dbtr > Id > Orgid > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_EU_SEB_XML_FI</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_EU_SEB_XML_FI()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-FI','SenderId','Sender id',1,'SenderId','',1,'','XXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > Orgid > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-FI','BankId','Bank id',1,'BankId','',1,'','XXXXXXXXXXXXXX','PmtInf > Dbtr > Id > Orgid > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_EU_SEB_XML_NO</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_EU_SEB_XML_NO()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-NO','SenderId','Sender id',1,'SenderId','',1,'','XXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > Orgid > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-NO','BankId','Bank id',1,'BankId','',1,'','XXXXXXXXXXXXXX','PmtInf > Dbtr > Id > Orgid > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_EU_SEB_XML_PL</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_EU_SEB_XML_PL()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-PL','SenderId','Sender id',1,'SenderId','',1,'','XXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > Orgid > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-PL','BankId','Bank id',1,'BankId','',1,'','XXXXXXXXXXXXXX','PmtInf > Dbtr > Id > Orgid > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_EU_SEB_XML_SE</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_EU_SEB_XML_SE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-SE','SenderId','Sender id',1,'SenderId','',1,'','XXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > Orgid > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-SE','BankId','Bank id',1,'BankId','',1,'','XXXXXXXXXXXXXX','PmtInf > Dbtr > Id > Orgid > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-SE','Btchbkg','Batch booking(Y/N)',0,'Btchbkg','',0,'','','PmtInf > BtchBookg']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_EU_SEB_XML_UK</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_EU_SEB_XML_UK()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-UK','SenderId','Sender id',1,'SenderId','',1,'','XXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > Orgid > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-UK','BankId','Bank id',1,'BankId','',1,'','XXXXXXXXXXXXXX','PmtInf > Dbtr > Id > Orgid > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_EU_SEB_XML_US</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_EU_SEB_XML_US()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-US','SenderId','Sender id',1,'SenderId','',1,'','XXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > Orgid > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-US','BankId','Bank id',1,'BankId','',1,'','XXXXXXXXXXXXXX','PmtInf > Dbtr > Id > Orgid > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_EU_SEB_XML_INT</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_EU_SEB_XML_INT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-INT','SenderId','Sender id',1,'SenderId','',1,'','XXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > Orgid > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-SEB-XML','EU-SEB-XML-INT','BankId','Bank id',1,'BankId','',1,'','XXXXXXXXXXXXXX','PmtInf > Dbtr > Id > Orgid > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('EU-SEB-XML-DE'):
            case ('EU-SEB-XML-DK'):
            case ('EU-SEB-XML-FI'):
            case ('EU-SEB-XML-INT'):
            case ('EU-SEB-XML-NO'):
            case ('EU-SEB-XML-PL'):
            case ('EU-SEB-XML-UK'):
            case ('EU-SEB-XML-US'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('SenderId', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('BankId', gSKS_EFT_Bank.W02);
                }
                break;
            case ('EU-SEB-XML-SE'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('SenderId', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('BankId', gSKS_EFT_Bank.W02);
                }
                if(gSKS_EFT_Bank.W03)
                {
                    this.updateBankFields('Btchbkg', gSKS_EFT_Bank.W03);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('EU-SEB-XML-US'):
            case ('EU-SEB-XML-UK'):
            case ('EU-SEB-XML-SE'):
            case ('EU-SEB-XML-PL'):
            case ('EU-SEB-XML-NO'):
            case ('EU-SEB-XML-INT'):
            case ('EU-SEB-XML-FI'):
            case ('EU-SEB-XML-DK'):
            case ('EU-SEB-XML-DE'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>