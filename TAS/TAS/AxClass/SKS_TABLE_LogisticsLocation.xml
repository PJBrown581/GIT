<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_TABLE_LogisticsLocation</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_TABLE_LogisticsLocation
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>LogisticsLocation_onUpdating</Name>
				<Source><![CDATA[
    [DataEventHandler(tableStr(LogisticsLocation), DataEventType::Updating)]
    public static void LogisticsLocation_onUpdating(Common sender, DataEventArgs e)
    {
        LogisticsLocation locLogisticsLocation;
        SKS_EFT_FileFormat locSKS_EFT_FileFormat_Select;
        SKS_EFT_FileFormat locSKS_EFT_FileFormat_Update;
        SKS_EFT_VendorPaym locSKS_EFT_VendorPaym_Select;
        SKS_EFT_VendorPaym locSKS_EFT_VendorPaym_Update;

        locLogisticsLocation = sender as LogisticsLocation;

        if(locLogisticsLocation)
        {
            // When the Vendor Address Description or Name change, set the flag for all related Methods of Payment
            if(locLogisticsLocation.Description != locLogisticsLocation.orig().Description && (SKS_EFT_Setup::find().ModAPEFT || SKS_EFT_Setup::find().ModAREFT))
            {

                while select crosscompany recid from locSKS_EFT_VendorPaym_Select
                join locSKS_EFT_FileFormat_Select
                group by locSKS_EFT_VendorPaym_Select.dataAreaId
                where locSKS_EFT_VendorPaym_Select.FormatId == locSKS_EFT_FileFormat_Select.FormatId
                && locSKS_EFT_FileFormat_Select.MastAcctList == NoYes::Yes
                && locSKS_EFT_VendorPaym_Select.MALStatus == SKS_EFT_MALStatus::Pending
                && (locSKS_EFT_VendorPaym_Select.WBeneRemittanceLocation == locLogisticsLocation.RecId
                || locSKS_EFT_VendorPaym_Select.LogisticsLocationRecID == locLogisticsLocation.RecId)
                {
                    changeCompany(locSKS_EFT_VendorPaym_Select.company())
                    {
                        update_recordSet locSKS_EFT_VendorPaym_Update
                        setting MALStatus = SKS_EFT_MALStatus::New
                        join locSKS_EFT_FileFormat_Update
                        where locSKS_EFT_VendorPaym_Update.FormatId == locSKS_EFT_FileFormat_Update.FormatId
                        && locSKS_EFT_FileFormat_Update.MastAcctList == NoYes::Yes
                        && locSKS_EFT_VendorPaym_Update.MALStatus == SKS_EFT_MALStatus::Pending
                        && (locSKS_EFT_VendorPaym_Update.WBeneRemittanceLocation == locLogisticsLocation.RecId
                        || locSKS_EFT_VendorPaym_Update.LogisticsLocationRecID == locLogisticsLocation.RecId);
                    }
                    locSKS_EFT_VendorPaym_Update = null;
                    locSKS_EFT_FileFormat_Update = null;

                }

                while select crosscompany recid from locSKS_EFT_VendorPaym_Select
                join locSKS_EFT_FileFormat_Select
                group by locSKS_EFT_VendorPaym_Select.dataAreaId
                where locSKS_EFT_VendorPaym_Select.FormatId == locSKS_EFT_FileFormat_Select.FormatId
                && locSKS_EFT_FileFormat_Select.MastAcctList == NoYes::Yes
                && locSKS_EFT_VendorPaym_Select.MALStatus == SKS_EFT_MALStatus::Approved
                && (locSKS_EFT_VendorPaym_Select.WBeneRemittanceLocation == locLogisticsLocation.RecId
                || locSKS_EFT_VendorPaym_Select.LogisticsLocationRecID == locLogisticsLocation.RecId)
                {
                    changeCompany(locSKS_EFT_VendorPaym_Select.company())
                    {
                        update_recordSet locSKS_EFT_VendorPaym_Update
                        setting MALStatus = SKS_EFT_MALStatus::Update
                        join locSKS_EFT_FileFormat_Update
                        where locSKS_EFT_VendorPaym_Update.FormatId == locSKS_EFT_FileFormat_Update.FormatId
                        && locSKS_EFT_FileFormat_Update.MastAcctList == NoYes::Yes
                        && locSKS_EFT_VendorPaym_Update.MALStatus == SKS_EFT_MALStatus::Approved
                        && (locSKS_EFT_VendorPaym_Update.WBeneRemittanceLocation == locLogisticsLocation.RecId
                        || locSKS_EFT_VendorPaym_Update.LogisticsLocationRecID == locLogisticsLocation.RecId);
                    }
                    locSKS_EFT_VendorPaym_Update = null;
                    locSKS_EFT_FileFormat_Update = null;

                }
            }

            while select crosscompany recid from locSKS_EFT_VendorPaym_Select
            join locSKS_EFT_FileFormat_Select
            group by locSKS_EFT_VendorPaym_Select.dataAreaId
            where locSKS_EFT_VendorPaym_Select.FormatId == locSKS_EFT_FileFormat_Select.FormatId
            && (locSKS_EFT_VendorPaym_Select.WBeneRemittanceLocation == locLogisticsLocation.RecId
            || locSKS_EFT_VendorPaym_Select.LogisticsLocationRecID == locLogisticsLocation.RecId)
            {
                changeCompany(locSKS_EFT_VendorPaym_Select.company())
                {
                    update_recordSet locSKS_EFT_VendorPaym_Update
                    setting WBeneName = locLogisticsLocation.Description
                    join locSKS_EFT_FileFormat_Update
                    where locSKS_EFT_VendorPaym_Update.FormatId == locSKS_EFT_FileFormat_Update.FormatId
                        && (locSKS_EFT_VendorPaym_Update.WBeneRemittanceLocation == locLogisticsLocation.RecId
                        || locSKS_EFT_VendorPaym_Update.LogisticsLocationRecID == locLogisticsLocation.RecId);
                }
                locSKS_EFT_VendorPaym_Update = null;
                locSKS_EFT_FileFormat_Update = null;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>