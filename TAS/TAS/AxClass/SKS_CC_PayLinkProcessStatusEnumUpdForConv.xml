<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_CC_PayLinkProcessStatusEnumUpdForConv</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_CC_PayLinkProcessStatusEnumUpdForConv
{        
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Used to convert enum values for enum SKS_CC_PayLinkProcessStatus
    /// to allow for a new enum element NA as default or '0' value.
    /// </summary>
    /// <param name = "_args">The specified arguments.</param>
    public static void main(Args _args)
    {
        Dialog dialog = new Dialog("@SKS:SKGCCPayLinkProcessStatusEnumConv");
        
        DialogText dialogTextMsg = dialog.addText(strFmt("@SKS:SKGCCPayLinkProcessStatusEnumConvDlgMsg", '\n'), 500);

        dialog.run();

        if (!dialog.closedOk())        
        {
            return;
        }

        SKS_CC_PayLinkProcessStatusEnumUpdForConv::processPayLinkStatusEnumUpgrade(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>processPayLinkStatusEnumUpgrade</Name>
				<Source><![CDATA[
    public static void processPayLinkStatusEnumUpgrade(boolean _showInfologMessage = false)
    {
        SKS_PP_Setup sKS_PP_Setup = SKS_PP_Setup::find();
        if (!sKS_PP_Setup)
        {
            return;
        }
            
        boolean needsPayLinkUpdate, needsSetupUpdate;

        SKS_CC_PayLinkQueue payLinkQueueCheck;        

        if (sKS_PP_Setup.CCPayLinkEnumUpgraded == NoYes::No)
        {
            needsSetupUpdate = true;
        
            select firstonly1 RecId from payLinkQueueCheck;
            if (payLinkQueueCheck.RecId)
            {
                needsPayLinkUpdate = true;
            }
        }
        else
        {
            select firstonly1 RecId from payLinkQueueCheck
                where payLinkQueueCheck.Status == 0;

            if (payLinkQueueCheck.RecId)
            {
                needsPayLinkUpdate = true;
            }
        }

        if (needsPayLinkUpdate || needsSetupUpdate)
        {
            ttsbegin;

            if (needsPayLinkUpdate)
            {
                SKS_CC_PayLinkProcessStatusEnumUpdForConv::updatePayLinkQueue();
            }
        
            if (needsSetupUpdate)
            {
                sKS_PP_Setup.selectForUpdate(true);
                sKS_PP_Setup.CCPayLinkEnumUpgraded = NoYes::Yes;
                sKS_PP_Setup.doUpdate();
            }

            ttscommit;

            if (_showInfologMessage)
            {
                info("@SKS:SKGCCPayLinkEnumConversionProcessCompleted");
            }
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePayLinkQueue</Name>
				<Source><![CDATA[
    public static void updatePayLinkQueue()
    {
        SKS_CC_PayLinkQueue payLinkQueueUpd;
        payLinkQueueUpd.skipDataMethods(true);
        payLinkQueueUpd.skipEvents(true);
        payLinkQueueUpd.skipDatabaseLog(true);

        update_recordset payLinkQueueUpd
            setting Status = 6
            where payLinkQueueUpd.Status == 5;
        
        update_recordset payLinkQueueUpd
            setting Status = 5
            where payLinkQueueUpd.Status == 4;

        update_recordset payLinkQueueUpd
            setting Status = 4
            where payLinkQueueUpd.Status == 3;

        update_recordset payLinkQueueUpd
            setting Status = 3
            where payLinkQueueUpd.Status == 2;

        update_recordset payLinkQueueUpd
            setting Status = 2
            where payLinkQueueUpd.Status == 1;

        update_recordset payLinkQueueUpd
            setting Status = 1
            where payLinkQueueUpd.Status == 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>