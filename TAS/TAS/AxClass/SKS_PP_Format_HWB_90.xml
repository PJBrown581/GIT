<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_HWB_90</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_HWB_90 extends SKS_PP_Format_BankGroup
{
    TextStreamIo file;
    int chkCount;
    real chkSum;
    
    // Pos 01-02    2        Record-Type '01'
    // Pos 03-11    9        Bank ABA
    // Pos 12-21    10       Bank Account number
    // Pos 22-31    10       Serial/Check Number    
    // Pos 32-39    8        Issue Date MMDDCCYY 
    // Pos 40-49    10       Issue Amount
    // Pos 50-50    1        Issue/ Void Flag    
    // Pos 51-90    40       Issue Name

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        int Mult = 1;
        str ItemType;
        ;
    
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
            if(mSKS_PP_FileDetail.ChkCuryAmt < 0)
            {
                Mult = -1;
            }
        }
        else
        {
            ItemType = 'I';
        }
    
        chkCount++;
        chkSum = chkSum + mSKS_PP_FileDetail.ChkCuryAmt;
    
        sb.Append('01');
        sb.Append(SKS_PP_StringFormats::strFill(9, mSKS_PP_FileDetail.BnkBankTransit, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        if (ItemType == 'I')
        {
            sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_PP_FileDetail.ChkDocDate));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));
        }
        sb.Append(SKS_PP_StringFormats::strMoney(Mult * mSKS_PP_FileDetail.ChkCuryAmt, 10));
        sb.Append(ItemType);
        sb.Append(SKS_PP_StringFormats::strFill(40, mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupHeader</Name>
				<Source><![CDATA[
    // Pos 01-02    1        Record-Type
    // Pos 03-10    8        File Creation Date MMDDCCYY   

    protected str txtGroupHeader()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        sb.Append('00');        
        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));
      
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    // Pos 01-01    1        Record-Type '99'
    // Pos 22-31    10       Total Issue/Void records
    // Pos 32-43    10       Dollar Amount Tally
    protected str txtGroupTrailer()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        sb.Append('99');
        sb.Append(SKS_PP_StringFormats::strFill(10, int2str(chkCount), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(chkSum, 10));
    
        chkSum = 0;
        chkCount = 0;
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>