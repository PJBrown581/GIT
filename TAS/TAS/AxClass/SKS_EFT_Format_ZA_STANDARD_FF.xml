<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_ZA_STANDARD_FF</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_ZA_STANDARD_FF extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_ZA_STANDARD_FF extends SKS_EFT_Format
{
    #define.FormatVersion('20220429')
    int mCreditCount;
    AmountMST mCreditAmount;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        BankAccount         lBankBankAccount;
        BankRegNum          lBankBankTransit;
        SKS_EFT_WOrdPartyId lWOrdPartyId;
    
    
        //Header
        this.rec_Header();
    
        while(mSKS_EFT_FileDetail)
        {
            this.getSKS_EFT_Bank();
    
            lBankBankAccount = mSKS_EFT_FileDetail.BankBankAcct;
            lBankBankTransit = mSKS_EFT_FileDetail.BankBankTransit;
            lWOrdPartyId = mSKS_EFT_Bank.WOrdPartyId;
    
            //Detail
            this.rec_Detail();
    
            next mSKS_EFT_FileDetail;
    
            if(lBankBankAccount != mSKS_EFT_FileDetail.BankBankAcct ||
               lBankBankTransit != mSKS_EFT_FileDetail.BankBankTransit ||
               lWOrdPartyId != mSKS_EFT_Bank.WOrdPartyId)
            {
                //Contra
                this.rec_Contra(lBankBankAccount, lBankBankTransit, lWOrdPartyId);
            }
    
        }
    
    
    
        //Trailer
        this.rec_Trailer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Contra</Name>
				<Source><![CDATA[
    boolean rec_Contra(BankAccount _BankBankAccount,
                       BankRegNum  _BankBankTransit,
                       SKS_EFT_WOrdPartyId _WOrdPartyId)
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Description                Length  Position
        // 1    SC                              2     1-  2
        // 2    Sub Batch Number                3     3-  5
        // 3    Sub Batch Description          30     6- 35
        // 4    C/D                             1        36
        // 5    Branch Number-Contra Acc        6    37- 42
        // 6    Account Number-Contra Acc      13    43- 55
        // 7    Customer Statement Reference   30    56- 85
        // 8    Account Name-Contra Acc        30    86-155
        // 9    Filler                         28   156-143
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
    
        // 1    SC                              2     1-  2
        sb.Append('SC');
    
        // 2    Sub Batch Number                3     3-  5
        sb.Append('001');
    
        // 3    Sub Batch Description          30     6- 35
        sb.Append(SKS_PP_StringFormats::strFill(30, mSKS_EFT_File.FileNbr, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 4    C/D                             1        36
        sb.Append('D');
    
        // 5    Branch Number-Contra Acc        6    37- 42
        sb.Append(SKS_PP_StringFormats::strFill(6, _BankBankTransit, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 6    Account Number-Contra Acc      13    43- 55
        sb.Append(SKS_PP_StringFormats::strFill(13, _BankBankAccount, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 7    Customer Statement Reference   30    56- 85
        sb.Append(SKS_PP_StringFormats::strFill(30, mSKS_EFT_File.FileNbr, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 8    Account Name-Contra Acc        30    86-155
        sb.Append(SKS_PP_StringFormats::strFill(30, _WOrdPartyId, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 9    Filler                         28   156-143
        sb.Append(SKS_PP_StringFormats::strFill(28, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Detail</Name>
				<Source><![CDATA[
    boolean rec_Detail()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Description                Length  Position
        // 1    SD                              2     1-  2
        // 2    Sub Batch Number                3     3-  5
        // 3    Transaction Reference Number   10     6- 15
        // 4    Credit or Debit indicator       1        16
        // 5    Branch Number                   6    17- 22
        // 6    Account Number                 13    23- 35
        // 7    Account Name                   30    36- 65
        // 8    Creditor Number                16    66- 81
        // 9    Amount                         15    82- 96
        //10    Statement Reference            30    97-126
        //11    RTGS Indicator                  1       127
        //12    Filler                         16   128-143
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        mCreditCount++;
        mCreditAmount += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
    
        // 1    SD                              2     1-  2
        sb.Append('SD');
    
        // 2    Sub Batch Number                3     3-  5
        sb.Append('001');
    
        // 3    Transaction Reference Number   10     6- 15
        sb.Append(SKS_PP_StringFormats::strFill(10, this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 4    Credit or Debit indicator       1        16
        sb.Append('C');
    
        // 5    Branch Number                   6    17- 22
        sb.Append(SKS_PP_StringFormats::strFill(6, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 6    Account Number                 13    23- 35
        sb.Append(SKS_PP_StringFormats::strFill(13, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 7    Account Name                   30    36- 65
        sb.Append(SKS_PP_StringFormats::strFill(30, mSKS_EFT_FileDetail.AccountName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 8    Creditor Number                16    66- 81
        sb.Append(SKS_PP_StringFormats::strFill(16, mSKS_EFT_FileDetail.AccountNum, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 9    Amount                         15    82- 96
        sb.Append(SKS_PP_StringFormats::strMoney(-1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 15));
    
        //10    Statement Reference            30    97-126
        sb.Append(SKS_PP_StringFormats::strFill(30, this.CharacterReplacement(mSKS_EFT_FileDetail.AccountName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //11    RTGS Indicator                  1       127
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //12    Filler                         16   128-143
        sb.Append(SKS_PP_StringFormats::strFill(16, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Header</Name>
				<Source><![CDATA[
    boolean rec_Header()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Description         Length  Position
        // 1    SB                       2     1-  2
        // 2    Activation Date          8     3- 11
        // 3    Batch Description       30    12- 42
        // 4    Filler                 103    43-146
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder   sb = new System.Text.StringBuilder();
    
        // 1    SB                       2     1-  2
        sb.Append('SB');
    
        // 2    Activation Date          8     3- 11
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_File.EffectiveDate));
    
        // 3    Batch Description       30    12- 42
        sb.Append(SKS_PP_StringFormats::strFill(30, mSKS_EFT_File.FileNbr, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 4    Filler                 103    43-146
        sb.Append(SKS_PP_StringFormats::strFill(103, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Trailer</Name>
				<Source><![CDATA[
    boolean rec_Trailer()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Description                     Length  Position
        // 1    ST                                   2     1-  2
        // 2    Total Of Debit Records               7     3-  9
        // 3    Total Of All Credit Records          7    10- 16
        // 4    Total Of Contra Records              3    17- 19
        // 4    Total Amount of Debit records       15    20- 34
        // 4    Total Amount of Credit records      15    35- 49
        // 4    Filler                              94    50-143
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        // 1    ST                                   2     1-  2
        sb.Append('ST');
    
        // 2    Total Of Debit Records               7     3-  9
        sb.Append(SKS_PP_StringFormats::strFill(7, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 3    Total Of All Credit Records          7    10- 16
        sb.Append(SKS_PP_StringFormats::strFill(7, int2str(mCreditCount), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 4    Total Of Contra Records              3    17- 19
        sb.Append('001');
    
        // 4    Total Amount of Debit records       15    20- 34
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 4    Total Amount of Credit records      15    35- 49
        sb.Append(SKS_PP_StringFormats::strMoney(-1 * mCreditAmount, 15));
    
        // 4    Filler                              94    50-143
        sb.Append(SKS_PP_StringFormats::strFill(94, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>