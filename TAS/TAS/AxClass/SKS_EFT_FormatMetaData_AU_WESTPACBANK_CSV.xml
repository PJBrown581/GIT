<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_AU_WESTPACBANK_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_AU_WESTPACBANK_CSV Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_AU_WESTPACBANK_CSV Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20221207';
        dataContractVersion = '1.0';
        conFormatID = ['AU-WESTPACBANK-CSV'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'AU - Western Pacific Bank - CSV',0,'','','AU-WESTPACBANK-CSV',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'AU-WESTPACBANK-CSV',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'NZ - Western Pacific Bank - CSV',0,'','','NZ-WESTPACBANK-CSV',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'AU-WESTPACBANK-CSV',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('AU-WESTPACBANK-CSV'):
                paymSpecList = this.getPaymSpecsMetaData_AU_WESTPACBANK_CSV();
                break;
            case ('NZ-WESTPACBANK-CSV'):
                paymSpecList = this.getPaymSpecsMetaData_NZ_WESTPACBANK_CSV();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_AU_WESTPACBANK_CSV</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_AU_WESTPACBANK_CSV()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH - Citibank Automated Clearing House Record',1,'ACH','','ACH','TRADE PAY',0,'AU-WESTPACBANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'RT - Real Time Payment Record',1,'RTPR','','RTPR','TRADE PAY',0,'AU-WESTPACBANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'B - BPAY Payment Record',1,'BPAY','','BPAY','TRADE PAY',0,'AU-WESTPACBANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'E - EFT Payment Record ',1,'EFT','','EFT','TRADE PAY',0,'AU-WESTPACBANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_NZ_WESTPACBANK_CSV</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_NZ_WESTPACBANK_CSV()
    {
        container   paymSpecList;
               
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International Payments',1,'OTT','','OTT','TRADE PAY',0,'NZ-WESTPACBANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Payments',1,'EFT-NZ','','EFT-NZ','TRADE PAY',0,'NZ-WESTPACBANK-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,0,0,0]);

        return paymSpecList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('AU-WESTPACBANK-CSV'):
                validationsList = this.getValidationsMetaData_AU_WESTPACBANK_CSV();
                break;
            case ('NZ-WESTPACBANK-CSV'):
                validationsList = this.getValidationsMetaData_NZ_WESTPACBANK_CSV();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_AU_WESTPACBANK_CSV</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_AU_WESTPACBANK_CSV()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','ACH','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','ACH > Routing Code ','Routing number related to Vendor','9','RegistrationNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','ACH','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','ACh > Account Number','Account Number related to vendor','9','AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','ACH','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','ACH  > Swift Code','Swift Code related to Vendor','9','SWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','ACH','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','ACH > IBAN','IBAN related to vendor','9','BankIBAN','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','ACH','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Payee Account Name','Beneficiary name','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','ACH','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Payee Street 1 > Beneficiary address','Payee Street 1','16','WBeneAddr','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','ACH','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address 2','ACH > Payee address 2','Address related to vendor','16','WIntBankAddr2','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','ACH','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Payee City > Beneficiary address','Payee City','16','WBeneCity','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','ACH','','Vendor Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Payee Country','Payee Country ','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','ACH','','Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','ACH > Funding BSB Number','Bank Routing Number',0,'RegistrationNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','ACH','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','ACH > Bank account','Bank account number ',0,'AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','RTPR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','RT > BSB Number ','Bank State Branch number of the account to be credited','9','RegistrationNum','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','RTPR','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','RT > Account Number','Account number of the account to be credited','9','AccountNum','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','RTPR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Payee Account Name','Beneficiary name','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','RTPR','','Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','ACH > Funding BSB Number','Bank Routing Number',0,'RegistrationNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','RTPR','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','ACH > Bank account','Bank account number ',0,'AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','BPAY','','Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','ACH > Funding BSB Number','Bank Routing Number',0,'RegistrationNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','BPAY','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','ACH > Bank account','Bank account number ',0,'AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','EFT','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','RT > BSB Number ','Bank State Branch number of the account to be credited','9','RegistrationNum','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','EFT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','RT > Account Number','Account number of the account to be credited','9','AccountNum','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','EFT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Payee Account Name','Beneficiary name','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','EFT','','Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','ACH > Funding BSB Number','Bank Routing Number',0,'RegistrationNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','EFT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','ACH > Bank account','Bank account number ',0,'AccountNum','','',1,1,'','',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_NZ_WESTPACBANK_CSV</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_NZ_WESTPACBANK_CSV()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-WESTPACBANK-CSV','EFT-NZ','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','ACh > Account Number','Account Number related to vendor','9','AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['NZ-WESTPACBANK-CSV','OTT','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','ACh > Account Number','Account Number related to vendor','9','AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','OTT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','ACH > IBAN','IBAN related to vendor','9','BankIBAN','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-WESTPACBANK-CSV','OTT','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','ACH  > Swift Code','Swift Code related to Vendor','9','SWIFTNo','','',1,1,'','',0,0]);
               
        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData</Name>
				<Source><![CDATA[
    protected container getFormatLookupsMetaData(str _formatID)
    {
        container   formatLookupsList;

        //Metadata column names of data elements

        switch (_formatID)
        {
        }

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('NZ-WESTPACBANK-CSV'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_NZ_WESTPACBANK_CSV();
                break;
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_NZ_WESTPACBANK_CSV</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_NZ_WESTPACBANK_CSV()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-WESTPACBANK-CSV','NZ-WESTPACBANK-CSV','EFT-NZ','BankCode','Bank Code',1,'BankCode','',1,'','XX','EFT']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-WESTPACBANK-CSV','NZ-WESTPACBANK-CSV','EFT-NZ','BranchCode','Branch Code',1,'BranchCode','',1,'','XXXX','EFT']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-WESTPACBANK-CSV','NZ-WESTPACBANK-CSV','EFT-NZ','AccountSuffix','Account Suffix',1,'AccountSuffix','',1,'','XX','EFT']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-WESTPACBANK-CSV','NZ-WESTPACBANK-CSV','EFT-NZ','FundingBankCode','Funding Bank Code',1,'FundingBankCode','',1,'','XX','EFT']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-WESTPACBANK-CSV','NZ-WESTPACBANK-CSV','EFT-NZ','FundingBranchCode','Funding Branch Code',1,'FundingBranchCode','',1,'','XXXX','EFT']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-WESTPACBANK-CSV','NZ-WESTPACBANK-CSV','EFT-NZ','FundingAccountSuffix','Funding Account Suffix',1,'FundingAccountSuffix','',1,'','XX','EFT']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['AU-WESTPACBANK-CSV','AU-WESTPACBANK-CSV','FormatValidations','BPAY','15','W01']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('AU-WESTPACBANK-CSV'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_AU_WESTPACBANK_CSV();
                break;

            case ('NZ-WESTPACBANK-CSV'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_NZ_WESTPACBANK_CSV();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_AU_WESTPACBANK_CSV</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_AU_WESTPACBANK_CSV()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-WESTPACBANK-CSV','AU-WESTPACBANK-CSV','BPAYBillNum','BPAY Biller Number',1,'BPAYBillNum','',0,'','XXXXXXXXXX','BPAY Biller Number']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_NZ_WESTPACBANK_CSV</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_NZ_WESTPACBANK_CSV()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-WESTPACBANK-CSV','NZ-WESTPACBANK-CSV','BranchCode','Branch Code',1,'BranchCode','',0,'','XXXX','EFT']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-WESTPACBANK-CSV','NZ-WESTPACBANK-CSV','BankCode','Bank Code',1,'BankCode','',0,'','XX','EFT']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-WESTPACBANK-CSV','NZ-WESTPACBANK-CSV','AccountSuffix','Account Suffix',1,'AccountSuffix','',0,'','XX','EFT']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('AU-WESTPACBANK-CSV'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('BPAYBillNum', gSKS_EFT_Bank.W01);
                }
               
                break;
            case ('NZ-WESTPACBANK-CSV'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('BranchCode', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('BankCode', gSKS_EFT_Bank.W02);
                }
                if(gSKS_EFT_Bank.W03)
                {
                    this.updateBankFields('AccountSuffix', gSKS_EFT_Bank.W03);
                }
               
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>