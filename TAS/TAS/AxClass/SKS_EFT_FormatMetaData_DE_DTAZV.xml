<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_DE_DTAZV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_DE_DTAZV
/// </summary>
public class SKS_EFT_FormatMetaData_DE_DTAZV Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230518';
        dataContractVersion = '1.0';
        conFormatID = ['DE-DTAZV'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'DE - DTAZV',0,'','','DE-DTAZV',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'DE-DTAZV',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('DE-DTAZV'):
                paymSpecList = this.getPaymSpecsMetaData_DE_DTAZV();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_DE_DTAZV</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_DE_DTAZV()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross border payment transactions based on DTAZV',1,'CB','','CB','TRADE PAY',0,'DE-DTAZV',0,0,0,1,1,0,0,1,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch(_formatID)
        {
        }
        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('DE-DTAZV'):
                notesList = this.getNotesMetaData_DE_DTAZV();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_DE_DTAZV</Name>
				<Source><![CDATA[
    private container getNotesMetaData_DE_DTAZV()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['DE-DTAZV','CB','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('DE-DTAZV'):
                validationsList = this.getValidationsMetaData_DE_DTAZV();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_DE_DTAZV</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_DE_DTAZV()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DTAZV','CB','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Header Record > Field 4 > Customer number','Bank account number ',0,'AccountNum','','',0,0,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DTAZV','CB','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Header Record > Field 5 > Name','Name related to bank','15','WOrdPartyName','','',0,0,'','70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DTAZV','CB','','Street','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Header Record > Field 5 > Street','Address related to bank','15','WOrdPartyAddr','','',0,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DTAZV','CB','','Street','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','Header Record > Field 5 > Street','Address related to bank','15','WOrdPartyAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DTAZV','CB','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Header Record > Field 5 > City','City related to bank','15','WOrdPartyCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DTAZV','CB','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','Data Record > Field 8 > Bank Identifier Code (BIC) of beneficarys payment','Swift Code related to Vendor','9','SWIFTNo','','',1,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DTAZV','CB','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','Data Record > Field 9 > Name','Vendor Bank Name','16','WBenBankName','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DTAZV','CB','','Vendor bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Address','Data Record > Field 9 > Street','Address related to vendor bank','16','WBenBankAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DTAZV','CB','','Vendor bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Address','Data Record > Field 9 > City','Address related to vendor bank','16','WBenBankCity','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DTAZV','CB','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/Region','Data Record > Field 9 > Country code of payees payment service provider','Country related to vendor bank','16','WBenBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DTAZV','CB','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Data Record > Field 10 > Name','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DTAZV','CB','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Data Record > Field 10 > Country code for country of payee or cheque recipient','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DTAZV','CB','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Data Record > Field 10 > Street','Address related to vendor','16','WBeneAddr','','',0,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DTAZV','CB','','Vendor City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Data Record > Field 10 > City','Vendor city','16','WBeneCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DTAZV','CB','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','Data Record > Field 10 > IBAN or account number of payee','IBAN related to vendor','9','BankIBAN','','',3,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['DE-DTAZV','CB','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Data Record > Field 10 > IBAN or account number of payee','Account Number related to vendor','9','AccountNum','','',3,0,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['DE-DTAZV','FeeRule','Fee Rule']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['DE-DTAZV','TypeOfPayment','Code for type of payment']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DTAZV','FeeRule','Fees debited to ordering customer','00']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DTAZV','FeeRule','All fees and expenses debited to principal (payer)','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DTAZV','FeeRule','All fees and expenses debited to payee','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DTAZV','TypeOfPayment','Standard transmission','00']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DTAZV','TypeOfPayment','urgent SWIFT','10']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DTAZV','TypeOfPayment','Cross-border transfer in accordance with a bilateral agreement with the bank','15']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DTAZV','TypeOfPayment','Cheque drawing any form of dispatch','20']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DTAZV','TypeOfPayment','Cheque drawing sent by registered mail','21']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DTAZV','TypeOfPayment','Cheque drawing sent by special delivery ','22']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DTAZV','TypeOfPayment','Cheque drawing sent by registered /express mail','23']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DTAZV','TypeOfPayment','Cheque drawing to principal any form of dispatch','30']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DTAZV','TypeOfPayment','Cheque drawing to principal sent by registered mail','31']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DTAZV','TypeOfPayment','Cheque drawing to principal sent by special delivery','32']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['DE-DTAZV','TypeOfPayment','Cheque drawing to principal sent by registered /express mail','33']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData</Name>
				<Source><![CDATA[
    protected container getFormatLookupsMetaData(str _formatID)
    {
        container   formatLookupsList;

        //Metadata column names of data elements

        switch (_formatID)
        {
        }

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('DE-DTAZV'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_DE_DTAZV();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_DE_DTAZV</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_DE_DTAZV()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['DE-DTAZV','DE-DTAZV','CB','FeeRule','Fee Rule',0,'FeeRule','',0,'','','Data Record > Field 21 > Fee rule']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['DE-DTAZV','DE-DTAZV','CB','TypeOfPayment','Code for type of payment',0,'TypeOfPayment','',0,'','','Data Record > Field 21 > Code for type of payment']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['DE-DTAZV','DE-DTAZV','CB','Q3bankcode','German bank code',1,'Q3bankcode','',1,'','XXXXXXXX','Bank Code']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        //container   conDelete;
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>