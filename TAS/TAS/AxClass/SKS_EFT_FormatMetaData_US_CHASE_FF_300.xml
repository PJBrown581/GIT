<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_CHASE_FF_300</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_CHASE_FF_300 Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_CHASE_FF_300 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230505';
        dataContractVersion = '1.0';
        conFormatID = ['US-CHASE-FF-300'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'XXXXXXXXXX','Company Id','','',0,'US - J.P. Morgan Chase - 300',0,'','','US-CHASE-FF-300',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,'300',0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CHASE-FF-300',0,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-CHASE-FF-300'):
                paymSpecList = this.getPaymSpecsMetaData_US_CHASE_FF_300();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CHASE_FF_300</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CHASE_FF_300()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check payment',1,'CHK','','CHK','TRADE PAY',0,'US-CHASE-FF-300',0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,2,0,3,2,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-CHASE-FF-300'):
                notesList = this.getNotesMetaData_US_CHASE_FF_300();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CHASE_FF_300</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CHASE_FF_300()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CHASE-FF-300','CHK','EFT+ bank account > AP EFT+:-Customer Input Id is stored in the  Company Info > Company Id tab.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-CHASE-FF-300'):
                validationsList = this.getValidationsMetaData_US_CHASE_FF_300();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_CHASE_FF_300</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_CHASE_FF_300()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-FF-300','CHK','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','ACC Header and DOC DocHeader> Account Number > position(3-20)','Bank account number ',0,'AccountNum','','',0,1,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-FF-300','CHK','','Name','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Remittance Location','PEName record > Payee Name > position(3-42)','Beneficiary Name','12','Name','','',0,1,1,'40',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-FF-300','CHK','','Address ','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','PEAddress record > Payee Address Line 1 > Position (3-42) & Address Line 2 > Position (43-82)','Beneficiary Address','10','Street','','',1,1,1,'80',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-FF-300','CHK','','City','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','PEAddress record > City > position (203-221)','Beneficiary City','10','City','','',1,1,1,'19',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-FF-300','CHK','','State','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','PEAddress record > State > position(222-223)','Beneficiary State','10','State','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-FF-300','CHK','','ZIP/Postal Code ','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','PEAddress record > Zip Code > position(224-232)','Beneficiary Zip/postal code','10','ZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-FF-300','CHK','','Country/Region','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','PEAddress record > ISO Country code > position(235-300)','Beneficiary Country related','10','CountryRegionId','','',1,1,'',0,0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CHASE-FF-300','DlvryCd','Delivery code']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CHASE-FF-300','DlvryCd','US-MAIL','US-MAIL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CHASE-FF-300','DlvryCd','Courier to Payee Address','CPA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CHASE-FF-300','DlvryCd','Courier to a Setup Address','CSA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CHASE-FF-300','DlvryCd','UPS back to payor','HQ1']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CHASE-FF-300','DlvryCd','UPS to the payee','PY1']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('US-CHASE-FF-300'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CHASE_FF_300();
                break;
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CHASE_FF_300</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CHASE_FF_300()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CHASE-FF-300','US-CHASE-FF-300','CHK','DlvryCd','Delivery code',0,'DlvryCd','',0,'','','DocHeader record > Delivery code']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CHASE-FF-300','US-CHASE-FF-300','FormatValidations','CHK','16','WBeneMailHandling']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CHASE-FF-300','US-CHASE-FF-300','FormatValidations','CHK','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CHASE-FF-300','*','FormatLookup','*','*','']);
        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch(_formatID)
        {
            case ('US-CHASE-FF-300'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CHASE_FF_300();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CHASE_FF_300</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CHASE_FF_300()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CHASE-FF-300','US-CHASE-FF-300','FormCode','Form Code',1,'FormCode','',0,'','XX','DocHeader record > Form Code > position (27-28)']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'US-CHASE-FF-300':
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('FormCode', gSKS_EFT_Bank.W01);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vednor code lookpus from BE0X and Legacu code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'US-CHASE-FF-300':
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('DlvryCd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>