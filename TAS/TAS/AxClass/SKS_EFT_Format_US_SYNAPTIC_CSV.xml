<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_SYNAPTIC_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_SYNAPTIC_CSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_US_SYNAPTIC_CSV extends SKS_EFT_Format
{
    #define.FormatVersion('20220623')
    #define.Seperator(',')

    SKS_EFT_FileDetail  invSKS_EFT_FileDetail;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    [SuppressBPWarningAttribute("BPCheckNestedLoopinCode","Necessary to allow the processing of every invoice(inner loop) for every relevant parent file detail record(outer loop)")]
    protected void formatStructure()
    {
        while(mSKS_EFT_FileDetail)
        {
            //Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();

            while select InvoiceDate,InvoiceSettleAmountPmtCur,InvoiceNumber from invSKS_EFT_FileDetail
                where  invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
            {
                
                this.rec_Details();
            }
            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Details</Name>
				<Source><![CDATA[
    public boolean rec_Details()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        //  1   Vendor ID
        sb.Append(this.wrapField(mSKS_EFT_VendorPaym.VendAccount));

        //  2   Invoice number
        sb.Append(this.wrapField(subStr(invSKS_EFT_FileDetail.InvoiceNumber,1,50)));

        //  3   Invoice Date
        sb.append(this.wrapField(SKS_PP_StringFormats::strDateMMDDYYYY(invSKS_EFT_FileDetail.InvoiceDate,DateSeparator::Slash)));
        
        //  4  Invoice Amount
        sb.Append(this.wrapField(num2Str(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0, 2, 1, 0)));

        //  5  Payment Id/Voucher
        sb.Append(this.wrapField(subStr(this.getJournalVoucher(),1,50)));

        //  6  Payment reference number
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference),false));//SKS_VSTS_13173
        
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '', boolean _Delimit = true)
    {
        if(_Delimit)
        {
            return _field + #Seperator;
        }
        else
        {
            return _field;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJournalVoucher</Name>
				<Source><![CDATA[
    private str getJournalVoucher()
    {
        LedgerJournalTrans ledgerJournalTrans;

        select Voucher from ledgerJournalTrans where
            ledgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;

        return ledgerJournalTrans.Voucher;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>