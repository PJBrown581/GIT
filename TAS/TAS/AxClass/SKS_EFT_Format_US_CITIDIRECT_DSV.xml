<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_CITIDIRECT_DSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_CITIDIRECT_DSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_US_CITIDIRECT_DSV extends SKS_EFT_Format
{
    #define.FormatVersion('202200901')
    #define.Separator('#')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();

            // Get RemittanceAddress
            this.getAddress(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber);
    
            // Details
            this.rec_Details();

            next mSKS_EFT_FileDetail;
        }        
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAddress</Name>
				<Source><![CDATA[
    void getAddress(boolean UseCheckNum)
    {
        LedgerJournalTrans      lLedgerJournalTrans;
        LogisticsLocation       lLogisticsLocation;
        LogisticsPostalAddress  lRemittancePostalAddress;
        container               address;
        Array vendAddrArray = new Array(Types::String);
        EventHandlerResult result = new EventHandlerResult();
    
        this.getAddress_delegate(mSKS_EFT_VendorPaym, result);

        if(!result.result())
        {
            if(UseCheckNum && mSKS_EFT_FileDetail.PaymentLineRecId != 0)
            {
                select * from lRemittancePostalAddress join  RemittanceAddress from lLedgerJournalTrans
                        where lRemittancePostalAddress.Location == lLedgerJournalTrans.RemittanceLocation
                            && lLedgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;
    
                lLogisticsLocation = LogisticsLocation::find(lLedgerJournalTrans.RemittanceLocation);
    
                //Populate Remittance Information
                mRemittanceName = lLogisticsLocation.Description;
    
                vendAddrArray = SKS_PP_50000Bas::StreetToAddressLineArray(lRemittancePostalAddress.Street,2);
    
                mRemittanceAdrLine1 = '';
                mRemittanceAdrLine2 = '';
                mRemittanceAdrLine3 = '';
    
                if(vendAddrArray.exists(1))
                {
                    mRemittanceAdrLine1 = vendAddrArray.value(1);
                    if (vendAddrArray.exists(2))
                    {
                        mRemittanceAdrLine2 = vendAddrArray.value(2);
                    }
                    if (vendAddrArray.exists(3))
                    {
                        mRemittanceAdrLine3 = vendAddrArray.value(3);
                    }
                }
                mRemittanceCity = lRemittancePostalAddress.City;
                mRemittanceState = lRemittancePostalAddress.State;
                mRemittanceZipCode = lRemittancePostalAddress.ZipCode;
                mRemittanceCountryRegionId = this.getLogisticsAddressCountryISO(lRemittancePostalAddress.CountryRegionId);
            }
            else
            {
                //Populate Remittance Information from Vendor eBanking details
                mRemittanceName = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName);
                mRemittanceAdrLine1 = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr);
                mRemittanceAdrLine2 = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr2);
                mRemittanceCity = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneCity);
                mRemittanceState = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneState);
                mRemittanceZipCode = mSKS_EFT_VendorPaym.WBeneZipPostal;
                mRemittanceCountryRegionId = this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId);
            }
        }
        else            //SKS#devOps:14603
        {
            address =  result.result();

            mRemittanceName = this.CharacterReplacement(conPeek(address, 1));
            mRemittanceAdrLine1 = this.CharacterReplacement(conPeek(address, 2));
            mRemittanceAdrLine2 = this.CharacterReplacement(conPeek(address, 3));
            mRemittanceCity = this.CharacterReplacement(conPeek(address, 4));
            mRemittanceState = this.CharacterReplacement(conPeek(address, 5));
            mRemittanceZipCode = conPeek(address, 6);
            mRemittanceCountryRegionId = this.getLogisticsAddressCountryISO(conPeek(address, 7));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAddress_delegate</Name>
				<Source><![CDATA[
    delegate void getAddress_delegate(SKS_EFT_VendorPaym sks_EFT_VendorPaym, EventHandlerResult _result)
    {
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Details</Name>
				<Source><![CDATA[
    public boolean rec_Details()
    {
        //---------------------------------------------------------------------------------
        //Nbr   Description                                     length
        // 1    Payment Method                                      3
        // 2    Company Name                                        35
        // 3    Debit Account #                                     34
        // 4    Payment Currency                                    3
        // 5    Clearing Country Code (Payable ISO Code)            2
        // 6    Payment Amount                                      11.2
        // 7    Equivalent Amount                                   11.2
        // 8    Value Date                                          8
        // 9    Beneficiary Name                                    35
        // 10   Beneficiary Address 1                               35
        // 11   Beneficiary Address 2                               35
        // 12   Beneficiary Address 3                               35
        // 13   Ordering Party Name                                 35
        // 14   Ordering Party  Address 1                           35
        // 15   Ordering Party Address 2                            35
        // 16   Ordering Party Address  3                           35
        // 17   Mail-to Name                                        35
        // 18   Mail-to Address 1                                   35
        // 19   Mail-to Address 2                                   35
        // 20   Mail-to Address 3                                   35
        // 21   Mail-to Country Code (Country ISO Code)             2
        // 22   Customer Reference Number                           35
        // 23   Payment Details Line 1-4                            4*35
        //---------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str benAdd1, benAdd2, benAdd3;
        str bankAdd1, bankAdd2, bankAdd3;
        str invNumbers;//SKS_VSTS_13509
        
        //Nbr   Description                                     length
        // 1    Payment Method                                      3
        sb.Append(this.wrapField('CHQ'));

        // 2    Company Name                                        35
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName), 35));

        // 3    Debit Account #                                     34
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.BankBankAcct, 34));

        // 4    Payment Currency                                    3
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.PaymentCurrencyCode, 3));

        // 5    Clearing Country Code (Payable ISO Code)            2
        sb.Append(this.wrapField(''));

        // 6    Payment Amount                                      11.2
        sb.Append(this.wrapField(num2str((mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur) * -1,0,2,1,0), 13));

        // 7    Equivalent Amount                                   11.2
        sb.Append(this.wrapField(''));

        // 8    Value Date                                          8
        sb.Append(this.wrapField(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_EFT_FileDetail.EffectiveDate)));

        // 9    Beneficiary Name                                    35
        sb.Append(this.wrapField(this.CharacterReplacement(mRemittanceName), 35));

        // 10   Beneficiary Address 1                               35
        if(mRemittanceAdrLine1)
        {
            benAdd1 = mRemittanceAdrLine1;
        }
        if(mRemittanceAdrLine2)
        {
            benAdd1 += ' ' + mRemittanceAdrLine2;
        }
        sb.Append(this.wrapField(this.CharacterReplacement(strLRTrim(benAdd1)), 35));

        // 11   Beneficiary Address 2                               35        
        if(mRemittanceCity)
        {
            benAdd2 = mRemittanceCity;
        }
        if(mRemittanceState)
        {
            benAdd2 += ' ' + mRemittanceState;
        }
        sb.Append(this.wrapField(this.CharacterReplacement(strLRTrim(benAdd2)), 35));

        // 12   Beneficiary Address 3                               35
        if(mRemittanceZipCode)
        {
            benAdd3 = mRemittanceZipCode;
        }
        if(mRemittanceCountryRegionId)
        {
            benAdd3 += ' ' + mRemittanceCountryRegionId;
        }
        sb.Append(this.wrapField(this.CharacterReplacement(strLRTrim(benAdd3)), 35));

        // 13   Ordering Party Name                                 35
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName), 35));

        // 14   Ordering Party  Address 1                           35
        if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr)
        {
            bankAdd1 = mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr;
        }
        if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2)
        {
            bankAdd1 += ' ' + mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2;
        }
        sb.Append(this.wrapField(this.CharacterReplacement(strLRTrim(bankAdd1)), 35));

        // 15   Ordering Party Address 2                            35
        
        if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity)
        {
            bankAdd2 = mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity;
        }
        if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyState)
        {
            bankAdd2 += ' ' + mSKS_EFT_FileDetail_BankAccount.WOrdPartyState;
        }
        sb.Append(this.wrapField(this.CharacterReplacement(strLRTrim(bankAdd2)), 35));

        // 16   Ordering Party Address  3                           35
        if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode)
        {
            bankAdd3 = mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode;
        }        
        if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId)
        {
            bankAdd3 += ' ' + this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId);
        }
        sb.Append(this.wrapField(this.CharacterReplacement(strLRTrim(bankAdd3)), 35));

        // 17   Mail-to Name                                        35
        sb.Append(this.wrapField(this.CharacterReplacement(mRemittanceName), 35));

        // 18   Mail-to Address 1                                   35
        sb.Append(this.wrapField(this.CharacterReplacement(strLRTrim(benAdd1)), 35));

        // 19   Mail-to Address 2                                   35
        sb.Append(this.wrapField(this.CharacterReplacement(strLRTrim(benAdd2)), 35));

        // 20   Mail-to Address 3                                   35
        sb.Append(this.wrapField(this.CharacterReplacement(strLRTrim(benAdd3)), 35));

        // 21   Mail-to Country Code (Country ISO Code)             2
        sb.Append(this.wrapField(mRemittanceCountryRegionId));

        // 22   Customer Reference Number                           35
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 35));

        //SKS_VSTS_13509 -->
        invNumbers = this.getInvoiceNbrs();

        // 23   Payment Details Line 1                            35
        sb.Append(this.wrapField(subStr(invNumbers,1,35), 35));

        // 24   Payment Details Line 2                            35
        sb.Append(this.wrapField(subStr(invNumbers,36,35), 35));

        // 25   Payment Details Line 3                            35
        sb.Append(this.wrapField(subStr(invNumbers,71,35), 35));

        // 26   Payment Details Line 4                            35
        sb.Append(this.wrapField(subStr(invNumbers,106,35), 35,false));
        //SKS_VSTS_13509 <--

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '', int _fieldLength = 0, boolean _addSeparator = true)
    {
        str text;
        ;
        if(_fieldLength > 0)
        {
            text = subStr(_field, 1, _fieldLength);
        }
        else
        {
            text = _field;
        }
        if(_addSeparator)
        {
            text += #Separator;
        }
        return text;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceNbrs</Name>
				<Source><![CDATA[
    private str getInvoiceNbrs()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        str invDetailsString;

        EventHandlerResult result = new EventHandlerResult();

        this.getInvoiceNbrs_delegate(mSKS_EFT_FileDetail, result);

        if(!result.result())
        {
            while select InvoiceNumber from invSKS_EFT_FileDetail
                where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                   && invSKS_EFT_FileDetail.InvoiceNumber != ''
            {
                invDetailsString += strFmt('%1 ', invSKS_EFT_FileDetail.InvoiceNumber);
            }

            return strLRTrim(invDetailsString);
        }
        else
        {
            return result.result();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceNbrs_delegate</Name>
				<Source><![CDATA[
    delegate void getInvoiceNbrs_delegate(SKS_EFT_FileDetail _SKS_EFT_FileDetail, EventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
            join mSKS_EFT_FileDetail_BankAccount 
              order by mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary&&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId &&                
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_BankAccount.RefRecId;  
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>