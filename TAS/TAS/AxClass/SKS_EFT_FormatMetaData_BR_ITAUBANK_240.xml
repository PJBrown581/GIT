<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_BR_ITAUBANK_240</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_BR_ITAUBANK_240 Extends SKS_EFT_Format_MetaData
/// </summary>
class SKS_EFT_FormatMetaData_BR_ITAUBANK_240 Extends SKS_EFT_Format_MetaData
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230516';
        dataContractVersion = '1.0';
        conFormatID = ['BR-ITAUBANK-240'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'BR - ITAUBANK Bank - 240',0,'','','BR-ITAUBANK-240',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'BR-ITAUBANK-240',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('BR-ITAUBANK-240'):
                paymSpecList = this.getPaymSpecsMetaData_BR_ITAUBANK_240();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_BR_ITAUBANK_240</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_BR_ITAUBANK_240()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cred Contra',1,'CREDCONTRA','','CREDCONTRA','TRADE PAY',0,'BR-ITAUBANK-240',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Doc C',1,'DOC','','DOC','TRADE PAY',0,'BR-ITAUBANK-240',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'TED Another holder',1,'TED','','TED','TRADE PAY',0,'BR-ITAUBANK-240',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'PIX Transfer',1,'PIX','','PIX','TRADE PAY',0,'BR-ITAUBANK-240',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);


        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('BR-ITAUBANK-240'):
                notesList = this.getNotesMetaData_BR_ITAUBANK_240();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_BR_ITAUBANK_240</Name>
				<Source><![CDATA[
    private container getNotesMetaData_BR_ITAUBANK_240()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['BR-ITAUBANK-240','CREDCONTRA','-File Header > REGISTRATION NUMBER is printing from Cash and bank management> Bank accounts> Bank accounts > Company id.:-Detail Record > YOUR NUMBER is printing from Accounts payable> Payments> Vendor payment journal > Company document :-Detail Record > NO REGISTRATION is printing from Accounts payable> Vendors> All vendors > CNPJ/CPF']);
        notesList = ConIns(notesList,conLen(notesList)+1,['BR-ITAUBANK-240','DOC','-File Header > REGISTRATION NUMBER is printing from Cash and bank management> Bank accounts> Bank accounts > Company id.:-Detail Record > YOUR NUMBER is printing from Accounts payable> Payments> Vendor payment journal > Company document :-Detail Record > NO REGISTRATION is printing from Accounts payable> Vendors> All vendors > CNPJ/CPF']);
        notesList = ConIns(notesList,conLen(notesList)+1,['BR-ITAUBANK-240','TED','-File Header > REGISTRATION NUMBER is printing from Cash and bank management> Bank accounts> Bank accounts > Company id.:-Detail Record > YOUR NUMBER is printing from Accounts payable> Payments> Vendor payment journal > Company document :-Detail Record > NO REGISTRATION is printing from Accounts payable> Vendors> All vendors > CNPJ/CPF']);
        notesList = ConIns(notesList,conLen(notesList)+1,['BR-ITAUBANK-240','PIX','-File Header > REGISTRATION NUMBER is printing from Cash and bank management> Bank accounts> Bank accounts > Company id.:-Detail Record > YOUR NUMBER is printing from Accounts payable> Payments> Vendor payment journal > Company document :-Detail Record > NO REGISTRATION is printing from Accounts payable> Vendors> All vendors > CNPJ/CPF']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('BR-ITAUBANK-240'):
                validationsList = this.getValidationsMetaData_BR_ITAUBANK_240();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_BR_ITAUBANK_240</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_BR_ITAUBANK_240()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['BR-ITAUBANK-240','CREDCONTRA','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Agentcy, Account , DAC','Bank account number',0,'AccountNum','','',0,0,1,34,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['BR-ITAUBANK-240','CREDCONTRA','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Header record > BANK NAME','Name related to bank','15','WOrdPartyName','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['BR-ITAUBANK-240','CREDCONTRA','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Detail record > FAVORED BANK, Agentcy, Account , DAC','Account Number related to vendor','9','AccountNum','','',0,0,1,34,0,0]);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['BR-ITAUBANK-240','DOC','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Agentcy, Account , DAC','Bank account number',0,'AccountNum','','',0,0,1,34,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['BR-ITAUBANK-240','DOC','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Header record > BANK NAME','Name related to bank','15','WOrdPartyName','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['BR-ITAUBANK-240','DOC','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Detail record > FAVORED BANK, Agentcy, Account , DAC','Account Number related to vendor','9','AccountNum','','',0,0,1,34,0,0]);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['BR-ITAUBANK-240','TED','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Agentcy, Account , DAC','Bank account number',0,'AccountNum','','',0,0,1,34,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['BR-ITAUBANK-240','TED','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Header record > BANK NAME','Name related to bank','15','WOrdPartyName','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['BR-ITAUBANK-240','TED','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Detail record > FAVORED BANK, Agentcy, Account , DAC','Account Number related to vendor','9','AccountNum','','',0,0,1,34,0,0]);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['BR-ITAUBANK-240','PIX','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Agentcy, Account , DAC','Bank account number',0,'AccountNum','','',0,0,1,34,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['BR-ITAUBANK-240','PIX','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Header record > BANK NAME','Name related to bank','15','WOrdPartyName','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['BR-ITAUBANK-240','PIX','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Detail record > FAVORED BANK, Agentcy, Account , DAC','Account Number related to vendor','9','AccountNum','','',0,0,1,34,0,0]);
        
        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('BR-ITAUBANK-240'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_BR_ITAUBANK_240();
                break;
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_BR_ITAUBANK_240</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_BR_ITAUBANK_240()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['BR-ITAUBANK-240','BR-ITAUBANK-240','CREDCONTRA','PaymentType','Payment Type',1,'PaymentType','',0,'20','XX','Batch Header > PaymentType']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['BR-ITAUBANK-240','BR-ITAUBANK-240','DOC','PaymentType','Payment Type',1,'PaymentType','',0,'20','XX','Batch Header > PaymentType']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['BR-ITAUBANK-240','BR-ITAUBANK-240','TED','PaymentType','Payment Type',1,'PaymentType','',0,'20','XX','Batch Header > PaymentType']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['BR-ITAUBANK-240','BR-ITAUBANK-240','PIX','PaymentType','Payment Type',1,'PaymentType','',0,'20','XX','Batch Header > PaymentType']);
        
        
        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['BR-ITAUBANK-240','BR-ITAUBANK-240','PaymSpec','PROVDRES','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['BR-ITAUBANK-240','BR-ITAUBANK-240','PaymSpec','SEVERAL','','']);
        
        return deleteList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>