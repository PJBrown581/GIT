<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_BOA_CASHPRO</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_BOA_CASHPRO Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_BOA_CASHPRO Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220609';
        dataContractVersion = '1.0';
        conFormatID = ['US-BOA-CASHPRO'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'US - Bank of America - CashPro',0,'','','US-BOA-CASHPRO',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,1,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-BOA-CASHPRO',0,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-BOA-CASHPRO'):
                paymSpecList = this.getPaymSpecsMetaData_US_BOA_CASHPRO();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_BOA_CASHPRO</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_BOA_CASHPRO()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Domestic High Value (Wire)',1,'URG','','Wire-DHV','DIRECT PAY',0,'US-BOA-CASHPRO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,1,0,'',0,0,0,0,0,'International High Value (Wire)',1,'URG','','Wire-IHV','DIRECT PAY',0,'US-BOA-CASHPRO',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-BOA-CASHPRO'):
                notesList = this.getNotesMetaData_US_BOA_CASHPRO();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_BOA_CASHPRO</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_BOA_CASHPRO()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-CASHPRO','Wire-DHV','-']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-CASHPRO','Wire-IHV','-']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-BOA-CASHPRO'):
                validationsList = this.getValidationsMetaData_US_BOA_CASHPRO();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_BOA_CASHPRO</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_BOA_CASHPRO()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-DHV','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Payment Records > 5th Position > Originator Name','Originator Name','15','WOrdPartyName','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-DHV','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Payment Records > 7th Position > Originator Address','Originator Address','15','WOrdPartyAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-DHV','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Payment Records > 8th Position > Originator City','Originator City','15','WOrdPartyCity','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-DHV','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Payment Records > 9th Position > Originator Country','Originator Country','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-DHV','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Payment Records > 10th Position > Beneficiary Name','Beneficiary Name','16','WBeneName','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-DHV','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Payment Records > 12th Position > Beneficiary Address','Beneficiary Address','16','WBeneAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-DHV','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Payment Records > 13th Position > Beneficiary City','Beneficiary City','16','WBeneCity','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-DHV','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Payment Records > 14th Position > Beneficiary Postal Code','Beneficiary Postal Code','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-DHV','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Payment Records > 15th Position > Beneficiary Country','Beneficiary Country','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-DHV','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','Payment Records > 1st Position > Destination Country (2)','Beneficiary Bank ISO Country Code','16','WBenBankCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-DHV','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Payment Records > 3rd Position > Debit account','Account Number realted to Bank',0,'AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-DHV','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Payment Records > 11th Position > Beneficiary Account','Beneficiary Bank Account Number','9','AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-DHV','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Payment Records > 16th Position > Beneficiary bank Id','Beneficiary bank routing number','9','RegistrationNum','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-DHV','','Line1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instruction(group) > Line1','Payment Records > 64th Position > Beneficiary Information Line 1','Beneficiary Information Line 1','16','WPmtInstText1','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-DHV','','Line2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instruction(group) > Line2','Payment Records > 65th Position > Beneficiary Information Line 2','Beneficiary Information Line 2','16','WPmtInstText2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-DHV','','Line3','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instruction(group) > Line3','Payment Records > 66th Position > Beneficiary Information Line 3','Beneficiary Information Line 3','16','WPmtInstText3','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-DHV','','Line4','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instruction(group) > Line4','Payment Records > 67th Position > Beneficiary Information Line 4','Beneficiary Information Line 4','16','WPmtInstText4','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-DHV','','Account','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Account','Payment Records > 74th Position > Intermediary Bank ID','Intermediary Bank ID','16','WIntBankAcct','','',1,0,1,'31',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-IHV','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','Payment Records > 5th Position > Originator Name','Originator Name','15','WOrdPartyName','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-IHV','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','Payment Records > 7th Position > Originator Address','Originator Address','15','WOrdPartyAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-IHV','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','Payment Records > 8th Position > Originator City','Originator City','15','WOrdPartyCity','','',1,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-IHV','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','Payment Records > 9th Position > Originator Country','Originator Country','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-IHV','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Payment Records > 10th Position > Beneficiary Name','Beneficiary Name','16','WBeneName','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-IHV','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Payment Records > 12th Position > Beneficiary Address','Beneficiary Address','16','WBeneAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-IHV','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Payment Records > 13th Position > Beneficiary City','Beneficiary City','16','WBeneCity','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-IHV','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Payment Records > 14th Position > Beneficiary Postal Code','Beneficiary Postal Code','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-IHV','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Payment Records > 15th Position > Beneficiary Country','Beneficiary Country','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-IHV','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','Payment Records > 1st Position > Destination Country (2)','Beneficiary Bank ISO Country Code','16','WBenBankCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-IHV','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Payment Records > 3rd Position > Debit account','Account Number realted to Bank',0,'AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-IHV','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Payment Records > 11th Position > Beneficiary Account','Beneficiary Bank Account Number','9','AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-IHV','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Payment Records > 16th Position > Beneficiary bank Id','Beneficiary bank routing number','9','RegistrationNum','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-IHV','','Line1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instruction(group) > Line1','Payment Records > 64th Position > Beneficiary Information Line 1','Beneficiary Information Line 1','16','WPmtInstText1','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-IHV','','Line2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instruction(group) > Line2','Payment Records > 65th Position > Beneficiary Information Line 2','Beneficiary Information Line 2','16','WPmtInstText2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-IHV','','Line3','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instruction(group) > Line3','Payment Records > 66th Position > Beneficiary Information Line 3','Beneficiary Information Line 3','16','WPmtInstText3','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-IHV','','Line4','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > Payment instruction(group) > Line4','Payment Records > 67th Position > Beneficiary Information Line 4','Beneficiary Information Line 4','16','WPmtInstText4','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-CASHPRO','Wire-IHV','','Account','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Account','Payment Records > 74th Position > Intermediary Bank ID','Intermediary Bank ID','16','WIntBankAcct','','',1,0,1,'31',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>