<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_Table_VendorPaym_EH</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_Table_VendorPaym_EH
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>SKS_EFT_VendorPaym_onUpdating</Name>
				<Source><![CDATA[
    /// <summary>
    ///This code protects from the data entity attempting to place values in fields that are populated based on the "Use vendor bank account" option
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [DataEventHandler(tableStr(SKS_EFT_VendorPaym), DataEventType::Updating)]
    public static void SKS_EFT_VendorPaym_onUpdating(Common sender, DataEventArgs e)
    {
      
        SKS_EFT_VendorPaym SKS_EFT_VendorPaym = sender as SKS_EFT_VendorPaym;
        SKS_EFT_VendorPaym origVendPaym = sender.orig();

        VendBankAccount VendBankAccount = VendBankAccount::findByCompany(SKS_EFT_VendorPaym.VendCompany,
                                                         SKS_EFT_VendorPaym.VendAccount,
                                                         SKS_EFT_VendorPaym.VendBankAccountId);
        if(SKS_EFT_VendorPaym.WBeneUseVendBankAcc)
        {
            if(SKS_EFT_VendorPaym.WBenBankName != origVendPaym.WBenBankName ||
                SKS_EFT_VendorPaym.WBenBankAddr != origVendPaym.WBenBankAddr ||
                SKS_EFT_VendorPaym.WBenBankCity != origVendPaym.WBenBankCity ||
                SKS_EFT_VendorPaym.WBenBankCountryRegionId != origVendPaym.WBenBankCountryRegionId)
            {
                logisticsLocation logisticsLocation = LogisticsLocation::find(vendBankAccount.Location);
                logisticsPostalAddress logisticsPostalAddress = LogisticsLocationEntity::location2PostalAddress(logisticsLocation.RecId, DateTimeUtil::getSystemDateTime(), true);

                SKS_EFT_VendorPaym.WBenBankName = vendBankAccount.Name;
                SKS_EFT_VendorPaym.WBenBankAddr = strRem(logisticsPostalAddress.Street, '\r\n');
                SKS_EFT_VendorPaym.WBenBankCity = logisticsPostalAddress.City;
                SKS_EFT_VendorPaym.WBenBankCountryRegionId = logisticsPostalAddress.CountryRegionId;
            }
        }

        if(SKS_EFT_VendorPaym.WIntUseVendBankAcc)
        {
            SKS_EFT_VendorPaym.WIntBankAcct = vendBankAccount.SKS_IHB_WIntBankAcct;
            SKS_EFT_VendorPaym.WIntBankAddr = vendBankAccount.SKS_IHB_WIntBankAddr;
            SKS_EFT_VendorPaym.WIntBankAddr2 = vendBankAccount.SKS_IHB_WIntBankAddr2;
            SKS_EFT_VendorPaym.WIntBankBranch = vendBankAccount.SKS_IHB_WIntBankBranch;
            SKS_EFT_VendorPaym.WIntBankCity = vendBankAccount.SKS_IHB_WIntBankCity;
            SKS_EFT_VendorPaym.WIntBankCountryRegionId = vendBankAccount.SKS_IHB_WIntBankCountryRegionId;
            SKS_EFT_VendorPaym.WIntBankId = vendBankAccount.SKS_IHB_WIntBankId;
            SKS_EFT_VendorPaym.WIntBankName = vendBankAccount.SKS_IHB_WIntBankName;
            SKS_EFT_VendorPaym.WIntBankSwift = vendBankAccount.SKS_IHB_WIntBankSwift;
        }
            
        if(SKS_EFT_VendorPaym.WCrePartyUseVendBankAcc)
        {
            SKS_EFT_VendorPaym.WIntBankAcct = vendBankAccount.SKS_IHB_WIntBankAcct;
            SKS_EFT_VendorPaym.WIntBankAddr = vendBankAccount.SKS_IHB_WIntBankAddr;
            SKS_EFT_VendorPaym.WIntBankAddr2 = vendBankAccount.SKS_IHB_WIntBankAddr2;
            SKS_EFT_VendorPaym.WIntBankBranch = vendBankAccount.SKS_IHB_WIntBankBranch;
            SKS_EFT_VendorPaym.WIntBankCity = vendBankAccount.SKS_IHB_WIntBankCity;
            SKS_EFT_VendorPaym.WIntBankCountryRegionId = vendBankAccount.SKS_IHB_WIntBankCountryRegionId;
            SKS_EFT_VendorPaym.WIntBankId = vendBankAccount.SKS_IHB_WIntBankId;
            SKS_EFT_VendorPaym.WIntBankName = vendBankAccount.SKS_IHB_WIntBankName;
            SKS_EFT_VendorPaym.WIntBankSwift = vendBankAccount.SKS_IHB_WIntBankSwift;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>