<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_BOA_EDI820</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_BOA_EDI820 Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_BOA_EDI820 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20221212';
        dataContractVersion = '1.0';
        conFormatID = ['US-BOA-EDI820'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,1,0,0,'','','','',0,'XXXXXXXXXX','Company Id','','',1,'US - Bank of America - Payment Order/Remittance Advice',0,'','','US-BOA-EDI820',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,1,0,0,1,'','','',0,0,'','',0,'','',0,'','','3',1,0,0,0,0,'US-BOA-EDI820',1,1,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-BOA-EDI820'):
                paymSpecList = this.getPaymSpecsMetaData_US_BOA_EDI820();
                break;
        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_BOA_EDI820</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_BOA_EDI820()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'ACH - Cash Concentration and Disbursement (CCD)',1,'ACH-CCD','','ACH-CCD','TRADE PAY',0,'US-BOA-EDI820',0,0,0,1,1,0,0,1,1,0,1,1,1,0,0,0,1,0,0,1,1,1,2,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'ACH - Cash Concentration and Disbursement (CCD+)',1,'ACH-CCP','','ACH-CCD+','TRADE PAY',0,'US-BOA-EDI820',0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'ACH - Prearranged Payment and Deposit (PPD)',1,'ACH-PPD','','ACH-PPD','EXP REIMB',0,'US-BOA-EDI820',0,0,0,1,1,0,0,1,1,0,1,1,1,0,0,0,1,0,0,1,1,1,2,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'ACH - Prearranged Payment and Deposit (PPD+)',1,'ACH-PPP','','ACH-PPD+','EXP REIMB',0,'US-BOA-EDI820',0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'ACH - Corporate Trade Exchange (CTX)',1,'ACH-CTX','','ACH-CTX','TRADE PAY',0,'US-BOA-EDI820',0,0,0,1,1,0,0,1,1,0,1,1,1,0,0,0,1,0,0,1,1,1,2,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Wire - Fed (FWT)',1,'FWT','','Wire-FED','DIRECT PAY',0,'US-BOA-EDI820',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,1,0,'',0,0,0,0,0,'Wire - SWIFT (SWT)',1,'SWT','','Wire-SWIFT','DIRECT PAY',0,'US-BOA-EDI820',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Wire - CHIPS (CWT)',1,'CWT','','Wire-CHIPS','DIRECT PAY',0,'US-BOA-EDI820',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,1,0,'',0,0,0,0,0,'Wire - BFX Fixed Credit SWIFT',1,'BFXP','','Wire-BFXP','DIRECT PAY',0,'US-BOA-EDI820',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'DIRECT PAY',0,0,0,0,0,'International ACH Transaction',1,'ACH-IAT','','ACH-IAT','TRADE PAY',0,'US-BOA-EDI820',0,0,0,1,1,0,0,1,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'DIRECT PAY',0,0,0,0,0,'Corporate check - U.S. Mail',1,'CHK-PBC-US','','CHK-PBC-US','TRADE PAY',0,'US-BOA-EDI820',0,0,1,1,1,0,0,0,0,1,0,1,1,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'DIRECT PAY',0,0,0,0,0,'Corporate check - Foreign Mail',1,'CHK-PBC-FM','','CHK-PBC-FM','TRADE PAY',0,'US-BOA-EDI820',0,0,1,1,1,0,0,0,0,1,0,1,1,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'DIRECT PAY',0,0,0,0,0,'Corporate check - Canadian Mail',1,'CHK-PBC-CM','','CHK-PBC-CM','TRADE PAY',0,'US-BOA-EDI820',0,0,1,1,1,0,0,0,0,1,0,1,1,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'DIRECT PAY',0,0,0,0,0,'Corporate check - Overnight to Payee',1,'CHK-PBC-RD','','CHK-PBC-RD','TRADE PAY',0,'US-BOA-EDI820',0,0,1,1,1,0,0,0,0,1,0,1,1,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'DIRECT PAY',0,0,0,0,0,'Corporate check - Special Handling Overnight to Payer',1,'CHK-PBC-OD','','CHK-PBC-OD','TRADE PAY',0,'US-BOA-EDI820',0,0,1,1,1,0,0,0,0,1,0,1,1,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'DIRECT PAY',0,0,0,0,0,'Corporate check - Overnight to Payee with Saturday delivery',1,'CHK-PBC-OS','','CHK-PBC-OS','TRADE PAY',0,'US-BOA-EDI820',0,0,1,1,1,0,0,0,0,1,0,1,1,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'DIRECT PAY',0,0,0,0,0,'Corporate check - Overnight to Payer\'s second location',1,'CHK-PBC-OM','','CHK-PBC-OM','TRADE PAY',0,'US-BOA-EDI820',0,0,1,1,1,0,0,0,0,1,0,1,1,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ePayables (CCC)',1,'CCC','','ePay-CC','DIRECT PAY',0,'US-BOA-EDI820',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Paymode-X',1,'CDA','','Paymode-X','DIRECT PAY',0,'US-BOA-EDI820',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'DIRECT PAY',0,0,0,0,0,'ACH - Cash Concentration and Disbursement International GBS',1,'ACH-CCD-GB','','ACH-CCD-GB','TRADE PAY',0,'US-BOA-EDI820',0,0,0,1,1,0,0,1,1,0,1,1,1,0,0,0,1,0,0,1,1,1,2,0,0]);

        return paymSpecList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-BOA-EDI820'):
                notesList = this.getNotesMetaData_US_BOA_EDI820();
                break;
        }
        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_BOA_EDI820</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_BOA_EDI820()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','ACH-CCD','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on the AR EFT+ or Direct debit file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.10 Originating Company Identifier is set on the AR EFT+ or Direct debit bank account > Account/company tab > Company Id field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+/DD bank account if populated. Otherwise the Bank account routing number will be used.::AP:-N4*RB.02 and N4*RB.03 data is set on the Address information tab in Vendor Bank Account. State and Postal code are required for US and Canada.::DD:-N4*RB.02 and N4*RB.03 data is set on the Address tab of Customer Bank Account. State and Postal code are required for US and Canada.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','ACH-CCD+','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-N1*PE data stored on Beneficiary section of Vendor eBanking details > Payment specifications. Use Advice field for split remittance. E-mail is set on Vendor eBanking details.:-BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+ bank account.  If field is blank, the bank account routing number will be used.:-N4*RB.02 and N4*RB.03 data is stored on the Address information tab in Vendor Bank Account.State and Postal code are required for US and Canada.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','ACH-CTX','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on the AR EFT+ or Direct debit file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.10 Originating Company Identifier stored on the AR EFT+ or Direct debit bank account > Account/company tab > Company Id field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+/DD bank account. If blank, the bank account routing number will be used.::AP:-N1*PE data stored on Beneficiary section of Vendor eBanking details > Payment specifications.Use Advice field for split remittance. E-mail is set on Vendor eBanking details.:-N4*RB.02 and N4*RB.03 data is stored on the Address information tab in Vendor Bank Account. State and Postal code are required for US and Canada.::DD:-N4*RB.02 and N4*RB.03 data is set on the Address tab of Customer Bank Account. State and Postal code are required for US and Canada.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','ACH-PPD','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on the AR EFT+ or Direct debit file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.10 Originating Company Identifier stored on  the AR EFT+ or Direct debitbank account > Account/company tab > Company Id field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+ bank account. If blank, the bank account routing number will be used.::AP:-N4*RB.02 and N4*RB.03 data is stored on the Address information tab in Vendor Bank Account. State and Postal code are required for US and Canada.::DD:-N4*RB.02 and N4*RB.03 data is set on the Address tab of Customer Bank Account. State and Postal code are required for US and Canada.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','ACH-PPD+','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+ bank account. If field is blank, the bank account routing number will be used.:-N4*RB.02 and N4*RB.03 data is stored on the Address information tab in Vendor Bank Account. State and Postal code are required for US and Canada.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','CHK-PBC-CM','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-If this is the East coast format enter a Y on the East coast format version (Y/N) field on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account. The East coast format uses the check number in TRN.02 and the West coast format uses a different value.:-The spec denotes that this payment specification has a Mail handling type that requires previous setup with the bank. Please work with BOA to setup this type prior to use.:-REF*PO will be included if Invoice description is set in AP Invoice journal line or if a Purchase order number is present.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','CHK-PBC-FM','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-If this is the East coast format enter a Y on the East coast format version (Y/N) field on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account.  The East coast format uses the check number in TRN.02 and the West coast format uses a different value.:-REF*PO will be included if Invoice description is set in AP Invoice journal line or if a Purchase order number is present.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','CHK-PBC-OD','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-If this is the East coast format enter a Y on the East coast format version (Y/N) field on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account.  The East coast format uses the check number in TRN.02 and the West coast format uses a different value.:-The spec denotes that this payment specification has a Mail handling type that requires previous setup with the bank. Please work with BOA to setup this type prior to use.:-REF*PO will be included if Invoice description is set in AP Invoice journal line or if a Purchase order number is present.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','CHK-PBC-OM','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-If this is the East coast format enter a Y on the East coast format version (Y/N) field on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account.  The East coast format uses the check number in TRN.02 and the West coast format uses a different value.:-The spec denotes that this payment specification has a Mail handling type that requires previous setup with the bank. Please work with BOA to setup this type prior to use.:-REF*PO will be included if Invoice description is set in AP Invoice journal line or if a Purchase order number is present.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','CHK-PBC-OS','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-If this is the East coast format enter a Y on the East coast format version (Y/N) field on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account.  The East coast format uses the check number in TRN.02 and the West coast format uses a different value.:-The spec denotes that this payment specification has a Mail handling type that requires previous setup with the bank. Please work with BOA to setup this type prior to use.:-REF*PO will be included if Invoice description is set in AP Invoice journal line or if a Purchase order number is present.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','CHK-PBC-RD','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-If this is the East coast format enter a Y on the East coast format version (Y/N) field on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account.  The East coast format uses the check number in TRN.02 and the West coast format uses a different value.:-The spec denotes that this payment specification has a Mail handling type that requires previous setup with the bank. Please work with BOA to setup this type prior to use.:-REF*PO will be included if Invoice description is set in AP Invoice journal line or if a Purchase order number is present.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','CHK-PBC-US','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-If this is the East coast format enter a Y on the East coast format version (Y/N) field on Wire/IAT ordering party section of File info tab of Bank account > AP EFT+ bank account.  The East coast format uses the check number in TRN.02 and the West coast format uses a different value.:-REF*PO will be included if Invoice description is set in AP Invoice journal line or if a Purchase order number is present.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','ePay-CC','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-REF*PSM Reference Identification stored on EFT+ bank account > Account/company tab > Company Id field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','Paymode-X','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820_PAYMODE_X.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-On EFT+ file formats > Payment specifications set the Default trading partner to Paymode-X.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','Wire-BFXP','-Supports payments in a different currency.:-BPR.16 (Effective Entry Date) is padded.  If currency is CAD or MXN padding is 1 day. For other currencies padding is 2 days.:-ISA,IEA,GS and GE data needs setup using EDI820 button on EFT+ file formats.:-N1*PE data stored on Beneficiary section of Vendor eBanking details > Payment specifications.Use Advice field for split remittance. E-mail is set on Vendor eBanking details.:-N4*RB.02 and N4*RB.03 data is stored on the Address information tab in Vendor Bank Account. State and Postal code are required for US and Canada.:-Beneficiary bank ISO country code requirements:--AU - enter BSB code in Vendor bank account SWIFT code field.:--DE and GB - enter IBAN on Vendor bank account:--MY,KR,CN,CA,TH,TW and GB - enter Purpose of payment in Vendor eBanking details > Payment specifications > Bank instructions - Line 5.:--KR and CN - Vendor bank account contact phone required.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','Wire-CHIPS','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-N1*PE data stored on Beneficiary section of Vendor eBanking details > Payment specifications.Address fields may be required. Use Advice field for split remittance. E-mail is set on Vendor eBanking details.:-N4*RB.02 and N4*RB.03 data is stored on the Address information tab in Vendor Bank Account. State and Postal code are required for US and Canada.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','Wire-FED','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-N1*PE data stored on Beneficiary section of Vendor eBanking details > Payment specifications.Use Advice field for split remittance. E-mail is set on Vendor eBanking details.:-N4*RB.02 and N4*RB.03 data is stored on the Address information tab in Vendor Bank Account. State and Postal code are required for US and Canada.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','Wire-SWIFT','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-N1*PE data stored on Beneficiary section of Vendor eBanking details > Payment specifications.Use Advice field for split remittance. E-mail is set on Vendor eBanking details.:-N4*RB.02 and N4*RB.03 data is stored on the Address information tab in Vendor Bank Account. State and Postal code are required for US and Canada.:-For Australia, BSB code must be entered into vendor\'s SWIFT field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','ACH-IAT','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment pecifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on EFT+ file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+ bank account. If field is blank, the bank account routing number will be used.:-N4*RB.02 and N4*RB.03 data is stored on the Address information tab in Vendor Bank Account. State and Postal code are required for US and Canada.::-Bank account address is stored in the Cash and Bank Management > Address field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-EDI820','ACH-CCD-GBS','-ISA,IEA,GS and GE data needs setup using EDI820 subscreen on the AR EFT+ or Direct debit file formats. Import the data with the supplied EDI820_US_BOA_EDI820.csv. Review any fields with a Value type of Fixed value and verify data in the Fixed value field.:-BPR.10 Originating Company Identifier is set on the AR EFT+ or Direct debit bank account > Account/company tab > Company Id field.:-BPR.07 ODFI Identification Number will use the Originating DFI Id on Company info tab of Bank account > AP EFT+/DD bank account if populated. Otherwise the Bank account routing number will be used.::AP:-N4*RB.02 and N4*RB.03 data is set on the Address information tab in Vendor Bank Account. State and Postal code are required for US and Canada.::DD:-N4*RB.02 and N4*RB.03 data is set on the Address tab of Customer Bank Account. State and Postal code are required for US and Canada.']);

        return notesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-BOA-EDI820'):
                validationsList = this.getValidationsMetaData_US_BOA_EDI820();
                break;
        }
        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_BOA_EDI820</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_BOA_EDI820()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','ODFI Identification Number',0,'RegistrationNum','','',1,1,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'22',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Name','N1*RB.02 Receiving Bank Name','Receiving Bank Name','16','WBenBankName','','',1,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','N4*RB.01 City Name','Bank City Name','16','WBenBankCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit State','N4*RB.02 State or Province Code','Bank state','14','State','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit > ZIP/postal code','N4*RB.03 Postal Code','Bank Postal Code','14','ZipCode','','',1,1,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','ODFI Identification Number',0,'RegistrationNum','','',1,1,1,'12',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD','','Name','TAS > Common > Customer eBanking details > Payment specifications > Customer Bank Account >  Name','N1*RB.02 Bank Name','Bank Name',1,'Name','','',1,0,1,'60',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD','','City','TAS > Common > Customer eBanking details > Payment specifications > Customer Bank Account > Address(Tab)> City','N4*RB.01 City Name','Bank City Name','8','City','','',0,1,1,'30',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD','','State/province','TAS > Common > Customer eBanking details > Payment specifications > Customer bank accounts > Address(Tab) >Edit State','N4*RB.02 State or Province Code','Bank state','8','State','','',1,1,1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD','','ZIP/postal code','TAS > Common > Customer eBanking details > Payment specifications > Customer bank accounts > Address(Tab) >Edit > ZIP/postal code','N4*RB.03 Postal Code','Bank Postal Code','8','ZipCode','','',1,1,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','BPR*13','Routing number related to Vendor','9','RegistrationNum','','',1,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD+','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD+','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'22',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD+','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','ODFI Identification Number',0,'RegistrationNum','','',1,1,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD+','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Name','N1*RB.02 Receiving Bank Name','Receiving Bank Name','16','WBenBankName','','',1,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD+','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','N4*RB.01 City Name','Bank City Name','16','WBenBankCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD+','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit State','N4*RB.02 State or Province Code','Bank state','14','State','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD+','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit > ZIP/postal code','N4*RB.03 Postal Code','Bank Postal Code','14','ZipCode','','',1,1,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD+','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','BPR*13','Routing number related to Vendor','9','RegistrationNum','','',1,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CTX','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','ODFI Identification Number',0,'RegistrationNum','','',1,1,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CTX','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CTX','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'22',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CTX','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','ODFI Identification Number',0,'RegistrationNum','','',1,1,1,'12',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CTX','','Name','TAS > Common > Customer eBanking details > Payment specifications > Customer Bank Account >  Name','N1*RB.02 Bank Name','Bank Name',1,'Name','','',1,0,1,'60',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CTX','','City','TAS > Common > Customer eBanking details > Payment specifications > Customer Bank Account > Address(Tab)> City','N4*RB.01 City Name','Bank City Name','8','City','','',0,1,1,'30',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CTX','','State/province','TAS > Common > Customer eBanking details > Payment specifications > Customer bank accounts > Address(Tab) >Edit State','N4*RB.02 State or Province Code','Bank state','8','State','','',1,1,1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CTX','','ZIP/postal code','TAS > Common > Customer eBanking details > Payment specifications > Customer bank accounts > Address(Tab) >Edit > ZIP/postal code','N4*RB.03 Postal Code','Bank Postal Code','8','ZipCode','','',1,1,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CTX','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','BPR*13','Routing number related to Vendor','9','RegistrationNum','','',1,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','ODFI Identification Number',0,'RegistrationNum','','',1,1,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'22',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Name','N1*RB.02 Receiving Bank Name','Receiving Bank Name','16','WBenBankName','','',1,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','N4*RB.01 City Name','Bank City Name','16','WBenBankCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit State','N4*RB.02 State or Province Code','Bank state','14','State','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit > ZIP/postal code','N4*RB.03 Postal Code','Bank Postal Code','14','ZipCode','','',1,1,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','ODFI Identification Number',0,'RegistrationNum','','',1,1,1,'12',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD','','Name','TAS > Common > Customer eBanking details > Payment specifications > Customer Bank Account >  Name','N1*RB.02 Bank Name','Bank Name',1,'Name','','',1,0,1,'60',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD','','City','TAS > Common > Customer eBanking details > Payment specifications > Customer Bank Account > Address(Tab)> City','N4*RB.01 City Name','Bank City Name','8','City','','',0,1,1,'30',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD','','State/province','TAS > Common > Customer eBanking details > Payment specifications > Customer bank accounts > Address(Tab) >Edit State','N4*RB.02 State or Province Code','Bank state','8','State','','',1,1,1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD','','ZIP/postal code','TAS > Common > Customer eBanking details > Payment specifications > Customer bank accounts > Address(Tab) >Edit > ZIP/postal code','N4*RB.03 Postal Code','Bank Postal Code','8','ZipCode','','',1,1,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','BPR*13','Routing number related to Vendor','9','RegistrationNum','','',1,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD+','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','ODFI Identification Number',0,'RegistrationNum','','',1,1,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD+','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD+','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'22',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD+','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Name','N1*RB.02 Receiving Bank Name','Receiving Bank Name','16','WBenBankName','','',1,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD+','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','N4*RB.01 City Name','Bank City Name','16','WBenBankCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD+','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit State','N4*RB.02 State or Province Code','Bank state','14','State','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD+','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit > ZIP/postal code','N4*RB.03 Postal Code','Bank Postal Code','14','ZipCode','','',1,1,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-PPD+','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','BPR*13','Routing number related to Vendor','9','RegistrationNum','','',1,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','ODFI Identification Number',0,'RegistrationNum','','',1,1,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','BPR*.09 Account Number','Bank account number',0,'AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','BPR*13','Routing number related to Vendor','9','RegistrationNum','','',1,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','BPR*15','Account Number related to vendor','9','AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'22',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Name','N1*RB.02 Receiving Bank Name','Receiving Bank Name','16','WBenBankName','','',1,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','N4*RB.01 City Name','Bank City Name','16','WBenBankCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit State','N4*RB.02 State or Province Code','Bank state','14','State','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit > ZIP/postal code','N4*RB.03 Postal Code','Bank Postal Code','14','ZipCode','','',1,1,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','Name','TAS > Common > Customer eBanking details > Payment specifications > Customer Bank Account >  Name','N1*RB.02 Bank Name','Bank Name',1,'Name','','',1,0,1,'60',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','City','TAS > Common > Customer eBanking details > Payment specifications > Customer Bank Account > Address(Tab)> City','N4*RB.01 City Name','Bank City Name','8','City','','',0,1,1,'30',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N2*PE.01 > Address','Address related to vendor','16','WBeneAddr','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','N2*PE.02 > Address','Address related to vendor','16','WBeneAddr2','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','N4*PE.01 > City','vendor City','16','WBeneCity','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','N4*PE.02 > State','State related to vendor','16','WBeneState','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','N4*PE.03 > ZIP/Postal code','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country/Region','N4*PE.04 > Country code','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','P51 Record > Position(4-38)','N2*PR.01 > Address','15','WOrdPartyAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','P51 Record > Position(39-73)','N2*PR.02 > Address','15','WOrdPartyAddr2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','P52 Record > Position(4-33)','N4*PR.01 > City','15','WOrdPartyCity','','',1,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','N4*PR.02 > State','Ordering Party State','15','WOrdPartyState','','',1,0,'2','2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','N4*PR.03 > ZIP/Postal code','Ordering Party Postal Code','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-IAT','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','N4*PR.04 > Country code','Ordering Party Country code','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-CM','','Name','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Remittance Location','N1*PE.02 Payee Name','Payee Name','12','Name','','',1,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-CM','','Address','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N3*PE.01 Address Information','Address','10','Street','','',1,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-CM','','City','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.01 City Address','City Address','10','City','','',1,0,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-CM','','State','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.02 State or Province Code','State or Province Code','10','State','','',1,1,1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-CM','','ZIP/Postal Code ','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.03 Postal Code','Postal Code','10','ZipCode','','',1,1,1,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-CM','','Country/Region','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.04','Country related','10','CountryRegionId','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-CM','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-CM','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','Routing Number',0,'RegistrationNum','','',1,1,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-CM','','Description','AP > Invoice Journal> List Tab > Description ID','REF*PO.03 Reference Description','Invoice Description','13','Txt','','',1,0,1,'45',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-FM','','Name','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Remittance Location','N1*PE.02 Payee Name','Payee Name','12','Name','','',1,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-FM','','Address','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N3*PE.01 Address Information','Address','10','Street','','',1,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-FM','','City','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.01 City Address','City Address','10','City','','',1,0,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-FM','','State','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.02 State or Province Code','State or Province Code','10','State','','',1,1,1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-FM','','ZIP/Postal Code ','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.03 Postal Code','Postal Code','10','ZipCode','','',1,1,1,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-FM','','Country/Region','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.04','Country related','10','CountryRegionId','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-FM','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-FM','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','Routing Number',0,'RegistrationNum','','',1,1,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-FM','','Description','AP > Invoice Journal> List Tab > Description ID','REF*PO.03 Reference Description','Invoice Description','13','Txt','','',1,0,1,'45',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OD','','Name','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Remittance Location','N1*PE.02 Payee Name','Payee Name','12','Name','','',1,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OD','','Address','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N3*PE.01 Address Information','Address','10','Street','','',1,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OD','','City','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.01 City Address','City Address','10','City','','',1,0,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OD','','State','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.02 State or Province Code','State or Province Code','10','State','','',1,1,1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OD','','ZIP/Postal Code ','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.03 Postal Code','Postal Code','10','ZipCode','','',1,1,1,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OD','','Country/Region','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.04','Country related','10','CountryRegionId','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OD','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OD','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','Routing Number',0,'RegistrationNum','','',1,1,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OD','','Description','AP > Invoice Journal> List Tab > Description ID','REF*PO.03 Reference Description','Invoice Description','13','Txt','','',1,0,1,'45',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OM','','Name','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Remittance Location','N1*PE.02 Payee Name','Payee Name','12','Name','','',1,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OM','','Address','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N3*PE.01 Address Information','Address','10','Street','','',1,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OM','','City','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.01 City Address','City Address','10','City','','',1,0,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OM','','State','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.02 State or Province Code','State or Province Code','10','State','','',1,1,1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OM','','ZIP/Postal Code ','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.03 Postal Code','Postal Code','10','ZipCode','','',1,1,1,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OM','','Country/Region','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.04','Country related','10','CountryRegionId','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OM','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OM','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','Routing Number',0,'RegistrationNum','','',1,1,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OM','','Description','AP > Invoice Journal> List Tab > Description ID','REF*PO.03 Reference Description','Invoice Description','13','Txt','','',1,0,1,'45',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OS','','Name','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Remittance Location','N1*PE.02 Payee Name','Payee Name','12','Name','','',1,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OS','','Address','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N3*PE.01 Address Information','Address','10','Street','','',1,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OS','','City','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.01 City Address','City Address','10','City','','',1,0,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OS','','State','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.02 State or Province Code','State or Province Code','10','State','','',1,1,1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OS','','ZIP/Postal Code ','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.03 Postal Code','Postal Code','10','ZipCode','','',1,1,1,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OS','','Country/Region','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.04','Country related','10','CountryRegionId','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OS','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','Routing Number',0,'RegistrationNum','','',1,1,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-OS','','Description','AP > Invoice Journal> List Tab > Description ID','REF*PO.03 Reference Description','Invoice Description','13','Txt','','',1,0,1,'45',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-RD','','Name','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Remittance Location','N1*PE.02 Payee Name','Payee Name','12','Name','','',1,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-RD','','Address','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N3*PE.01 Address Information','Address','10','Street','','',1,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-RD','','City','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.01 City Address','City Address','10','City','','',1,0,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-RD','','State','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.02 State or Province Code','State or Province Code','10','State','','',1,1,1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-RD','','ZIP/Postal Code ','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.03 Postal Code','Postal Code','10','ZipCode','','',1,1,1,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-RD','','Country/Region','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.04','Country related','10','CountryRegionId','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-RD','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-RD','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','Routing Number',0,'RegistrationNum','','',1,1,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-RD','','Description','AP > Invoice Journal> List Tab > Description ID','REF*PO.03 Reference Description','Invoice Description','13','Txt','','',1,0,1,'45',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-US','','Name','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Remittance Location','N1*PE.02 Payee Name','Payee Name','12','Name','','',1,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-US','','Address','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N3*PE.01 Address Information','Address','10','Street','','',1,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-US','','City','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.01 City Address','City Address','10','City','','',1,0,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-US','','State','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.02 State or Province Code','State or Province Code','10','State','','',1,1,1,'2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-US','','ZIP/Postal Code ','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.03 Postal Code','Postal Code','10','ZipCode','','',1,1,1,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-US','','Country/Region','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.04','Country related','10','CountryRegionId','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-US','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-US','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','Routing Number',0,'RegistrationNum','','',1,1,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','CHK-PBC-US','','Description','AP > Invoice Journal> List Tab > Description ID','REF*PO.03 Reference Description','Invoice Description','13','Txt','','',1,0,1,'45',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ePay-CC','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ePay-CC','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Paymode-X','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Paymode-X','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-BFXP','','Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','BPR*.19 Intermediary DFI ID Number','Intermediary DFI ID Number','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-BFXP','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','BPR*.19 Intermediary DFI ID Number','Intermediary DFI ID Number','16','WIntBankId','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-BFXP','','Account','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Account','BPR*.21 Intermediary Bank account number','Intermediary Bank account number','16','WIntBankAcct','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-BFXP','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-BFXP','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE.01 Address Information','Payee Address','16','WBeneAddr','','',1,1,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-BFXP','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE.02 Address Information','Payee Address','16','WBeneAddr2','','',1,1,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-BFXP','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','N4*PE.01 City Address','Vendor city','16','WBeneCity','','',1,0,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-BFXP','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','N4*PE.02 State or Province Code','State or Province Code ','16','WBeneState','','',1,1,1,1,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-BFXP','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','N4*PE.03 Postal Code','State or Province Code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-BFXP','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','N4*PE.04 Country Code','Country Code ','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-BFXP','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-BFXP','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Name','N1*RB.02 Receiving Bank Name','Receiving Bank Name','16','WBenBankName','','',1,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-BFXP','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','N4*RB.01 City Name','Bank City Name','16','WBenBankCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-BFXP','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit State','N4*RB.02 State or Province Code','Bank state','14','State','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-BFXP','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit > ZIP/postal code','N4*RB.03 Postal Code','Bank Postal Code','14','ZipCode','','',1,1,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-CHIPS','','Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','BPR*.19 Intermediary DFI ID Number','Intermediary DFI ID Number','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-CHIPS','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','BPR*.19 Intermediary DFI ID Number','Intermediary DFI ID Number','16','WIntBankId','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-CHIPS','','Account','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Account','BPR*.21 Intermediary Bank account number','Intermediary Bank account number','16','WIntBankAcct','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-CHIPS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-CHIPS','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE.01 Address Information','Payee Address','16','WBeneAddr','','',1,1,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-CHIPS','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE.02 Address Information','Payee Address','16','WBeneAddr2','','',1,1,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-CHIPS','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','N4*PE.01 City Address','Vendor city','16','WBeneCity','','',1,0,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-CHIPS','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','N4*PE.02 State or Province Code','State or Province Code ','16','WBeneState','','',1,1,1,1,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-CHIPS','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','N4*PE.03 Postal Code','State or Province Code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-CHIPS','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','N4*PE.04 Country Code','Country Code ','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-CHIPS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-CHIPS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Name','N1*RB.02 Receiving Bank Name','Receiving Bank Name','16','WBenBankName','','',1,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-CHIPS','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','N4*RB.01 City Name','Bank City Name','16','WBenBankCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-CHIPS','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit State','N4*RB.02 State or Province Code','Bank state','14','State','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-CHIPS','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit > ZIP/postal code','N4*RB.03 Postal Code','Bank Postal Code','14','ZipCode','','',1,1,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','BPR*.19 Intermediary DFI ID Number','Intermediary DFI ID Number','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','BPR*.19 Intermediary DFI ID Number','Intermediary DFI ID Number','16','WIntBankId','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank Name','N1*IK 02 Name','Intermediary Bank Name','16','WIntBankName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','Branch','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Branch','N3*IK 01 Name','Branch','16','WIntBankBranch','','',1,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > City','N4*IK.01 City Address','City','16','WIntBankCity','','',1,0,1,'19',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','N4*IK.04 Country code','Intermediary Bank Country related to vendor','16','WIntBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE.01 Address Information','Payee Address','16','WBeneAddr','','',1,1,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE.02 Address Information','Payee Address','16','WBeneAddr2','','',1,1,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','N4*PE.01 City Address','Vendor city','16','WBeneCity','','',1,0,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','N4*PE.02 State or Province Code','State or Province Code ','16','WBeneState','','',1,1,1,1,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','N4*PE.03 Postal Code','State or Province Code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','N4*PE.04 Country Code','Country Code ','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Name','N1*RB.02 Receiving Bank Name','Receiving Bank Name','16','WBenBankName','','',1,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','N4*RB.01 City Name','Bank City Name','16','WBenBankCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit State','N4*RB.02 State or Province Code','Bank state','14','State','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit > ZIP/postal code','N4*RB.03 Postal Code','Bank Postal Code','14','ZipCode','','',1,1,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','Vendor Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','BPR*.15 Account Number','Account Number related to vendor','9','AccountNum','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-FED','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','BPR*13','Routing number related to Vendor','9','RegistrationNum','','',1,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','BPR*.19 Intermediary DFI ID Number','Intermediary DFI ID Number','16','WIntBankSwift','','',1,1,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','BPR*.19 Intermediary DFI ID Number','Intermediary DFI ID Number','16','WIntBankId','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','Account','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Account','BPR*.21 Intermediary Bank account number','Intermediary Bank account number','16','WIntBankAcct','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank Name','N1*IK 02 Name','Intermediary Bank Name','16','WIntBankName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','Branch','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Branch','N3*IK 01 Name','Branch','16','WIntBankBranch','','',1,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > City','N4*IK.01 City Address','City','16','WIntBankCity','','',1,0,1,'19',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','N4*IK.04 Country code','Intermediary Bank Country related to vendor','16','WIntBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE.01 Address Information','Payee Address','16','WBeneAddr','','',1,1,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','N3*PE.02 Address Information','Payee Address','16','WBeneAddr2','','',1,1,1,'55',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','N4*PE.01 City Address','Vendor city','16','WBeneCity','','',1,0,1,'23',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','N4*PE.02 State or Province Code','State or Province Code ','16','WBeneState','','',1,1,1,1,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','N4*PE.03 Postal Code','State or Province Code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','N4*PE.04 Country Code','Country Code ','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Name','N1*RB.02 Receiving Bank Name','Receiving Bank Name','16','WBenBankName','','',1,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','N4*RB.01 City Name','Bank City Name','16','WBenBankCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit State','N4*RB.02 State or Province Code','Bank state','14','State','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit > ZIP/postal code','N4*RB.03 Postal Code','Bank Postal Code','14','ZipCode','','',1,1,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','Wire-SWIFT','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','BPR*13','Swift Code related to Vendor','9','SWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD-GB','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','ODFI Identification Number',0,'RegistrationNum','','',1,1,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD-GB','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','N1*PE.02 Payee Name','Payee Name','16','WBeneName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD-GB','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'22',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD-GB','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary Bank(group) > Name','N1*RB.02 Receiving Bank Name','Receiving Bank Name','16','WBenBankName','','',1,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD-GB','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','N4*RB.01 City Name','Bank City Name','16','WBenBankCity','','',0,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD-GB','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit State','N4*RB.02 State or Province Code','Bank state','14','State','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD-GB','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) >Edit > ZIP/postal code','N4*RB.03 Postal Code','Bank Postal Code','14','ZipCode','','',1,1,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD-GB','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR*.07 ODFI Identification Number','ODFI Identification Number',0,'RegistrationNum','','',1,1,1,'12',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD-GB','','Name','TAS > Common > Customer eBanking details > Payment specifications > Customer Bank Account >  Name','N1*RB.02 Bank Name','Bank Name',1,'Name','','',1,0,1,'60',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD-GB','','City','TAS > Common > Customer eBanking details > Payment specifications > Customer Bank Account > Address(Tab)> City','N4*RB.01 City Name','Bank City Name','8','City','','',0,1,1,'30',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD-GB','','State/province','TAS > Common > Customer eBanking details > Payment specifications > Customer bank accounts > Address(Tab) >Edit State','N4*RB.02 State or Province Code','Bank state','8','State','','',1,1,1,'35',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD-GB','','ZIP/postal code','TAS > Common > Customer eBanking details > Payment specifications > Customer bank accounts > Address(Tab) >Edit > ZIP/postal code','N4*RB.03 Postal Code','Bank Postal Code','8','ZipCode','','',1,1,1,'10',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-EDI820','ACH-CCD-GB','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','BPR*13','Routing number related to Vendor','9','RegistrationNum','','',1,'2',1,'11',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-BOA-EDI820','BusinessCode','Business Code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-BOA-EDI820','OBIdentification','Identificaiton Code Qualifier']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-BOA-EDI820','REF91Description','REF91 Description']);

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-BOA-EDI820','Charges','Charges']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-BOA-EDI820','IntermediaryNumQualifier','Intermediary DFI ID Number Qualifier']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-BOA-EDI820','CommunicationNumber','Communication Number']);

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','BusinessCode','Annuity','ANN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','BusinessCode','Business','BUS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','BusinessCode','Deposit','DEP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','BusinessCode','Loan','LOA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','BusinessCode','Miscellaneous','MIS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','BusinessCode','Mortgage','MOR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','BusinessCode','Pension','PEN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','BusinessCode','Remittance','REM']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','BusinessCode','Rent/Lease','RLS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','BusinessCode','Salary/Payroll','SAL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','BusinessCode','TelephoneInitiatedTransaction','TEL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','BusinessCode','InternetInitiatedTransaction','WEB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','OBIdentification','National Clearing System','13']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','OBIdentification','BIC Code/SWIFT Id','SW']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','OBIdentification','IBAN Code/SWIFT Id','31']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','REF91Description','Annuity','ANN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','REF91Description','Business','BUS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','REF91Description','Deposit','DEP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','REF91Description','Loan','LOA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','REF91Description','Miscellaneous','MIS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','REF91Description','Mortgage','MOR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','REF91Description','Pension','PEN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','REF91Description','Remittance','REM']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','REF91Description','Rent/Lease','RLS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','REF91Description','Salary/Payroll','SAL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','REF91Description','TelephoneInitiatedTransaction','TEL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','REF91Description','InternetInitiatedTransaction','WEB']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','Charges','Shared','00']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','Charges','Originator','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','Charges','Beneficiary','02']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','IntermediaryNumQualifier','Intl non-U.S.(ZZ)','ZZ']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','IntermediaryNumQualifier','U.S. Domestic (01)','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','IntermediaryNumQualifier','SWIFT (02)','02']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','IntermediaryNumQualifier','CHIPS (03)','03']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','CommunicationNumber','None','None']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','CommunicationNumber','E-mail','E-mail']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','CommunicationNumber','US mail','US mail']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-EDI820','CommunicationNumber','Foreign mail','Foreign mail']);

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('US-BOA-EDI820'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_BOA_EDI820();
                break;
        }
        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_BOA_EDI820</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_BOA_EDI820()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','ACH-IAT','BusinessCode','Business Code',0,'BusinessCode','',0,'','','BPR*17 > Business Function Code']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','ACH-IAT','OBIdentification','Identificaiton Code Qualifier',0,'OBIdentification','',0,'','','N1OB*03 > Identification Code Qualifier']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','ACH-IAT','REF91Description','REF 91 Description',0,'REF91Description','',0,'','','REF91*03 > Description']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','Wire-FED','Charges','Charges',0,'Charges','',0,'','','REF*CA.02 Reference Identificaiton']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','Wire-SWIFT','Charges','Charges',0,'Charges','',0,'','','REF*CA.02 Reference Identificaiton']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','Wire-CHIPS','Charges','Charges',0,'Charges','',0,'','','REF*CA.02 Reference Identificaiton']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','Wire-BFXP','Charges','Charges',0,'Charges','',0,'','','REF*CA.02 Reference Identificaiton']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','ACH-CCD-GB','Charges','Charges',0,'Charges','',0,'','','REF*CA.02 Reference Identificaiton']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','ACH-CCD','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > 04 Communication Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','ACH-CCD+','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > 04 Communication Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','ACH-PPD','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > 04 Communication Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','ACH-PPD+','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > 04 Communication Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','ACH-CTX','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > 04 Communication Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','Wire-FED','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > 04 Communication Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','Wire-SWIFT','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > 04 Communication Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','Wire-CHIPS','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > 04 Communication Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','Wire-BFXP','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > 04 Communication Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','ACH-IAT','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > 04 Communication Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','CHK-PBC-US','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > 04 Communication Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','CHK-PBC-FM','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > 04 Communication Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','CHK-PBC-CM','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > 04 Communication Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','CHK-PBC-RD','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > 04 Communication Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','CHK-PBC-OD','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > 04 Communication Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','CHK-PBC-OS','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > 04 Communication Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','CHK-PBC-OM','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > 04 Communication Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','ePay-CC','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > 04 Communication Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','Paymode-X','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > 04 Communication Number']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','Wire-FED','IntermediaryNumQualifier','Intermediary DFI ID Number Qualifier',0,'IntermediaryNumQualifier','',0,'','','BPR*.19 Intermediary DFI ID Number Qualifier']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','Wire-SWIFT','IntermediaryNumQualifier','Intermediary DFI ID Number Qualifier',0,'IntermediaryNumQualifier','',0,'','','BPR*.19 Intermediary DFI ID Number Qualifier']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','Wire-CHIPS','IntermediaryNumQualifier','Intermediary DFI ID Number Qualifier',0,'IntermediaryNumQualifier','',0,'','','BPR*.19 Intermediary DFI ID Number Qualifier']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','Paymode-X','PaymodeXId','Paymode-X id',1,'PaymodeXId','',0,'','','N1 > PE > PaymodeXId']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription
        switch (_formatID)
        {
        }
        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EDI820','US-BOA-EDI820','FormatValidations','ACH-CTX','16','WBenBankName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EDI820','US-BOA-EDI820','FormatValidations','ACH-CTX','16','WBenBankCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EDI820','US-BOA-EDI820','FormatValidations','ACH-CTX','14','State']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EDI820','US-BOA-EDI820','FormatValidations','ACH-CTX','14','ZipCode']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EDI820','US-BOA-EDI820','FormatValidations','*','3','Txt']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EDI820','US-BOA-EDI820','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EDI820','US-BOA-EDI820','FormatValidations','*','16','WChargesIndic']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EDI820','US-BOA-EDI820','FormatValidations','*','15','W02']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EDI820','US-BOA-EDI820','FormatValidations','Paymode-X','15','W03']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EDI820','US-BOA-EDI820','FormatValidations','Paymode-X','16','BE02']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EDI820','US-BOA-EDI820','FormatValidations','ACH-IAT','0','9']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EDI820','US-BOA-EDI820','FormatValidations','ACH-CCD-GBS','0','RegistrationNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EDI820','US-BOA-EDI820','FormatValidations','ACH-CCD-GBS','16','WBeneName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EDI820','US-BOA-EDI820','FormatValidations','ACH-CCD-GBS','15','WOrdPartyName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EDI820','US-BOA-EDI820','FormatValidations','ACH-CCD-GBS','16','WBenBankName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EDI820','US-BOA-EDI820','FormatValidations','ACH-CCD-GBS','16','WBenBankCity']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EDI820','US-BOA-EDI820','FormatValidations','ACH-CCD-GBS','14','State']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EDI820','US-BOA-EDI820','FormatValidations','ACH-CCD-GBS','14','ZipCode']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-EDI820','US-BOA-EDI820','FormatValidations','ACH-CCD-GBS','9','RegistrationNum']);


        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;
        switch(_formatID)
        {
            case ('US-BOA-EDI820'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_BOA_EDI820();
                break;
        }
        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_BOA_EDI820</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_BOA_EDI820()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','Name','ACH-IAT N2 OB Name',1,'Name','',0,'','XXXXXXXXXXXX','N2* OB * Name']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','CheckPrintingABA','Check printing ABA',1,'CheckPrintingABA','',0,'','999999999','BPR*.07 DFI ID Number']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-EDI820','US-BOA-EDI820','PaymodexId','Paymode-X id',1,'PaymodexId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','N1*PR.04 Identification Code']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('US-BOA-EDI820'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('Name', gSKS_EFT_Bank.W01);
                }

                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('CheckPrintingABA', gSKS_EFT_Bank.W02);
                }
                if(gSKS_EFT_Bank.W03)
                {
                    this.updateBankFields('PaymodexId', gSKS_EFT_Bank.W03);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateARBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the direct debit bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateARBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('US-BOA-EDI820'):
                if(gSKS_EFTAR_Bank.W01)
                {
                    this.updateARBankFields('Name', gSKS_EFTAR_Bank.W01);
                }
                if(gSKS_EFTAR_Bank.W02)
                {
                    this.updateARBankFields('CheckPrintingABA', gSKS_EFTAR_Bank.W02);
                }
                if(gSKS_EFTAR_Bank.W03)
                {
                    this.updateARBankFields('PaymodexId', gSKS_EFTAR_Bank.W03);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vednor code lookpus from BE0X and Legacu code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('US-BOA-EDI820'):
                if(gSKS_EFT_VendorPaym.BE01)
                {
                    this.updateVendorFields('PaymodeXId', gSKS_EFT_VendorPaym.BE01);
                }

                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                if(gSKS_EFT_VendorPaym.WIntBankQualifier)
                {
                    this.updateVendorFields('IntermediaryNumQualifier', gSKS_EFT_VendorPaym.WIntBankQualifier, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneAdvice)
                {
                    this.updateVendorFields('CommunicationNumber', gSKS_EFT_VendorPaym.WBeneAdvice, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCustomerCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating customer code lookpus from BE0X
    /// </summary>
    protected void updateCustomerCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('US-BOA-EDI820'):
                if(gSKS_EFT_CustomerPaym.BE01)
                {
                    this.updateCustomerFields('PaymodeXId', gSKS_EFT_CustomerPaym.BE01);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>