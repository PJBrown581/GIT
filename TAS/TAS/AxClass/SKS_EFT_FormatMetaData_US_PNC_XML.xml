<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_PNC_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_PNC_XML extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_PNC_XML Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20221107';
        dataContractVersion = '1.0';
        conFormatID = ['US-PNC-XML'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'XXXXXXXXXXX','Company id','','',1,'US-PNC-ISO20022',0,'','','US-PNC-XML',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-PNC-XML',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-PNC-XML'):
                paymSpecList = this.getPaymSpecsMetaData_US_PNC_XML();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_PNC_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_PNC_XML()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Wire - Fed (FWT)',1,'FWT','','Wire-FED','DIRECT PAY',0,'US-PNC-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,1,1,0,'',0,0,0,0,0,'Wire - International (BOP)',1,'BOP','','Wire-INTL','DIRECT PAY',0,'US-PNC-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check',1,'CHK','','CHK','TRADE PAY',0,'US-PNC-XML',0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Cash Concentration and Disbursement (CCD)',1,'ACH-CCD','','ACH-CCD','TRADE PAY',0,'US-PNC-XML',0,1,0,1,1,0,0,1,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Prearranged Payment and Deposit (PPD)',1,'ACH-PPD','','ACH-PPD','DIRECT PAY',0,'US-PNC-XML',0,1,0,1,1,0,0,1,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[1,1,0,0,'',0,0,0,0,0,'Corporate Trade Exchange (CTX)',1,'ACH-CTX','','ACH-CTX','DIRECT PAY',0,'US-PNC-XML',0,1,0,1,1,0,0,1,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-PNC-XML'):
                notesList = this.getNotesMetaData_US_PNC_XML();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_PNC_XML</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_PNC_XML()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-PNC-XML','Wire-FED','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Sender id is required and is stored on the Company id field on the Company info tab of EFT+ bank account > AP EFT+.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-PNC-XML','Wire-INTL','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Sender id is required and is stored on the Company id field on the Company info tab of EFT+ bank account > AP EFT+.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-PNC-XML','ACH-CCD','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Sender id is required and is stored on the Company id field on the Company info tab of EFT+ bank account > AP EFT+.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-PNC-XML','ACH-PPD','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Sender id is required and is stored on the Company id field on the Company info tab of EFT+ bank account > AP EFT+.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-PNC-XML','CHK','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Sender id is required and is stored on the Company id field on the Company info tab of EFT+ bank account > AP EFT+.:-The Mail handling field on the Wire transfer/IAT-1 tab of Vendor eBanking details > Payment specifications is required and will default to US Mail if left blank.:--If the Mail handling field is set to FEDEX Bulk then the Address code field in the Account info tab of Vendor eBanking details > Payment specifications.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-PNC-XML','ACH-CTX','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:-Sender id is required and is stored on the Company id field on the Company info tab of EFT+ bank account > AP EFT+.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-PNC-XML'):
                validationsList = this.getValidationsMetaData_US_PNC_XML();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_PNC_XML</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_PNC_XML()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Swift code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,'','9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank Id','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id  related to vendor','16','WIntBankId','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > Ctry','Intermediary Bank Country related to vendor','16','WIntBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > AdrLine','Intermediary Bank Address related to vendor','16','WIntBankAddr','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address 2','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > AdrLine','Intermediary Bank Address related to vendor','16','WIntBankAddr2','','',1,1,1,'16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > City','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > AdrLine','City','16','WIntBankCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > Nm','Name related to Vendor Bank','16','WBenBankName','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to vendor bank','16','WBenBankCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','ZIP/Postal Code related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Payment Line 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 1','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText1','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Payment Line 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 2','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText2','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Payment Line 3','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 3','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText3','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-FED','','Payment Line 4','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 4','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText4','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Swift code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,'','9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank Id','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id  related to vendor','16','WIntBankId','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > Ctry','Intermediary Bank Country related to vendor','16','WIntBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > AdrLine','Intermediary Bank Address related to vendor','16','WIntBankAddr','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address 2','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > AdrLine','Intermediary Bank Address related to vendor','16','WIntBankAddr2','','',1,1,1,'16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > City','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > AdrLine','City','16','WIntBankCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > Nm','Name related to Vendor Bank','16','WBenBankName','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to vendor bank','16','WBenBankCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','ZIP/Postal Code related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Payment Line 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 1','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText1','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Payment Line 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 2','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText2','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Payment Line 3','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 3','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText3','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','Wire-INTL','','Payment Line 4','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 4','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText4','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > Nm','Name related to Vendor Bank','16','WBenBankName','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to vendor bank','16','WBenBankCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','ZIP/Postal Code related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','Payment Line 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 1','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText1','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','Payment Line 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 2','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText2','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','Payment Line 3','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 3','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText3','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CCD','','Payment Line 4','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 4','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText4','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > Nm','Name related to Vendor Bank','16','WBenBankName','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to vendor bank','16','WBenBankCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','ZIP/Postal Code related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','Payment Line 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 1','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText1','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','Payment Line 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 2','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText2','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','Payment Line 3','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 3','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText3','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-PPD','','Payment Line 4','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 4','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText4','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CTX','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CTX','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CTX','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CTX','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CTX','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CTX','','Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CTX','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CTX','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CTX','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CTX','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CTX','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CTX','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CTX','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CTX','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','ZIP/Postal Code related to vendor','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CTX','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn','State or Province Code ','16','WBeneState','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','ACH-CTX','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','CHK','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','CHK','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','CHK','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','CHK','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','CHK','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','CHK','','Swift code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','CHK','','Routing Number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing Number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Routing Number related to Bank',0,'RegistrationNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','CHK','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','CHK','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','CHK','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','CHK','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to vendor bank','16','WBenBankCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','CHK','','Payment Line 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 1','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText1','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','CHK','','Payment Line 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 2','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText2','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','CHK','','Payment Line 3','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 3','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText3','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-PNC-XML','CHK','','Payment Line 4','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer - 3(Fast tab) > Payment Instructions(group) > Line 4','PmtInf > CdTrfTxInf > RmtInf','Payment line for unstructured info','16','WPmtInstText4','','',1,'2',1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-PNC-XML','DlvryMtd','Delivery Method Prtry']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-PNC-XML','DlvryMtd','US Mail','UM']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-PNC-XML','DlvryMtd','FEDEX Overnight','ON']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-PNC-XML','DlvryMtd','FEDEX Bulk','BM']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-PNC-XML','DlvryMtd','Canadian','CN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-PNC-XML','DlvryMtd','International','IT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-PNC-XML','DlvryMtd','FEDEX Two Day','2D']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-PNC-XML','DlvryMtd','USPS Priority','PM']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('US-PNC-XML'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_PNC_XML();
                break;
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_PNC_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_PNC_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-PNC-XML','US-PNC-XML','CHK','DlvryMtd','Delivery Method',0,'DlvryMtd','',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-PNC-XML','US-PNC-XML','CHK','AddrCd','Address code',1,'AddrCd','',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-PNC-XML','US-PNC-XML','CHK','UseCdtrAddressPurpose','UseCdtrAddressPurpose',1,'UseCdtrAddressPurpose','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > ChqInstr > DlvrTo']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-PNC-XML','','CodeLookup','CdtrId','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-PNC-XML','','CodeLookupValues','CdtrId','Vendor','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-PNC-XML','','CodeLookupValues','CdtrId','Receiver','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-PNC-XML','US-PNC-XML','PaymSpecFields','CCD','CdtrId','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-PNC-XML','US-PNC-XML','PaymSpecFields','PPD','CdtrId','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-PNC-XML','US-PNC-XML','PaymSpecFields','CHK','CdtrId','']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-PNC-XML','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-PNC-XML','*','FormatValidations','*','15','W01']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('US-PNC-XML'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_PNC_XML();
                break;
        }
        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_PNC_XML</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_PNC_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-PNC-XML','US-PNC-XML','InitgPtySchm','Initiating Party Scheme name',1,'InitgPtySchm','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','InitgPty > Id > Orgid > Othr > SchmeNm > Prtry']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'US-PNC-XML':
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('InitgPtySchm', gSKS_EFT_Bank.W01);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'US-PNC-XML':
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('DlvryMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                if(gSKS_EFT_VendorPaym.BE01)
                {
                    this.updateVendorFields('AddrCd', gSKS_EFT_VendorPaym.BE01);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>