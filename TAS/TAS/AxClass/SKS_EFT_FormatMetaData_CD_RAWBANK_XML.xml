<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_CD_RAWBANK_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_CD_RAWBANK_XML
/// </summary>
class SKS_EFT_FormatMetaData_CD_RAWBANK_XML Extends SKS_EFT_Format_MetaData
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20221116';
        dataContractVersion = '1.0';
        conFormatID = ['CD-RAWBANK-XML'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,1,1,'','','','',0,'','','','',0,'CD - Raw Bank - XML - Pain.001.001.03DB',0,'','','CD-RAWBANK-XML',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'CD-RAWBANK-XML',1]);
        

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('CD-RAWBANK-XML'):
                paymSpecList = this.getPaymSpecsMetaData_CD_RAWBANK_XML();
                break;
        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_CD_RAWBANK_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_CD_RAWBANK_XML()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Payments',1,'DOM','','DOM','TRADE PAY',0,'CD-RAWBANK-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International Payments',1,'INTL','','INTL','TRADE PAY',0,'CD-RAWBANK-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('CD-RAWBANK-XML'):
                notesList = this.getNotesMetaData_CD_RAWBANK_XML();
                break;
        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_CD_RAWBANK_XML</Name>
				<Source><![CDATA[
    private container getNotesMetaData_CD_RAWBANK_XML()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['CD-RAWBANK-XML','DOM','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CD-RAWBANK-XML','INTL','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('CD-RAWBANK-XML'):
                validationsList = this.getValidationsMetaData_CD_RAWBANK_XML();
                break;
        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_CD_RAWBANK_XML</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_CD_RAWBANK_XML()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > DbtrAgt > BrnchId > Id','Name related to bank','15','WOrdPartyId','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Address related to bank','15','WOrdPartyAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > BldgNb','Address related to bank','15','WOrdPartyAddr2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank routing number',0,'RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',3,0,'1','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Creditor sort code','9','RegistrationNum','','',3,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > Nm','Vendor Bank Name','16','WBenBankName','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Vendor Branch Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Branch','PmtInf > CdTrfTxInf > CdtrAgt > BrnchId > Id','Vendor Branch Name','16','WBenBankBranch','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd ','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm ','Vendor city','16','WBeneCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn ','State related to vendor','16','WBeneState','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',3,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',3,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > DbtrAgt > BrnchId > Id','Name related to bank','15','WOrdPartyId','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Address related to bank','15','WOrdPartyAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > BldgNb','Address related to bank','15','WOrdPartyAddr2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','15','WOrdPartyCity','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank routing number',0,'RegistrationNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',3,0,'1','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Creditor sort code','9','RegistrationNum','','',3,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > Nm','Vendor Bank Name','16','WBenBankName','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Vendor Branch Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Branch','PmtInf > CdTrfTxInf > CdtrAgt > BrnchId > Id','Vendor Branch Name','16','WBenBankBranch','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',1,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd ','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','City ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm ','Vendor city','16','WBeneCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn ','State related to vendor','16','WBeneState','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',3,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',3,0,1,'34',0,0]);
        
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Id','PmtInf > DbtrAgt > BrnchId > Id','Id related to bank','23','WOrdPartyId','','',1,0,1,'140',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',1,0,1,'140',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Country code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','23','WOrdPartyCountryRegionId','','',1,1,'',0,0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Address 1','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Address related to bank','23','WOrdPartyAddr','','',1,0,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Address 2','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > BldgNb','Address related to bank','23','WOrdPartyAddr2','','',1,0,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank City','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','23','WOrdPartyCity','','',1,0,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Zip/postal code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','23','WOrdPartyZipCode','','',1,1,'','',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',24,'IBAN','','','3',0,1,'34',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',24,'AccountNum','','','3',0,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',24,'SWIFTNo','','','3',1,0,0,0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank routing number',24,'RegistrationNum','','','3',0,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Vendor Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','26','SWIFTNo','','',3,0,'1','11',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Creditor sort code','26','RegistrationNum','','',3,0,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','WBeneName','','',1,0,1,'140',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Vendor Country Region','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Company(account LE)','16','WBeneCountryRegionId','','',0,1,'',0,0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Vendor Address 1','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Street','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to Company(account LE)','16','WBeneAddr','','',1,0,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','ZIP/Postal Code ','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd ','ZIP/Postal code  related to Company(account LE)','16','WBeneZipPostal','','',0,1,'','',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','City ','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm ','Company(account LE) city','16','WBeneCity','','',0,0,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','State/province','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > State/province','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn ','State related to Company(account LE)','16','WBeneState','','',1,0,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Vendor bank IBAN','Cash and bank management > Select bank account > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','26','BankIBAN','','',3,0,1,'34',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Account Number','Cash and bank management > Select bank account > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','26','AccountNum','','',3,0,1,'34',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Id','PmtInf > DbtrAgt > BrnchId > Id','Id related to bank','23','WOrdPartyId','','',1,0,1,'140',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Name','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',1,0,1,'140',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Country code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','23','WOrdPartyCountryRegionId','','',1,1,'',0,0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Address 1','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Address related to bank','23','WOrdPartyAddr','','',1,0,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Address 2','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > BldgNb','Address related to bank','23','WOrdPartyAddr2','','',1,0,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank City','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','23','WOrdPartyCity','','',1,0,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Zip/postal code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','23','WOrdPartyZipCode','','',1,1,'','',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',24,'IBAN','','','3',0,1,'34',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',24,'AccountNum','','','3',0,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',24,'SWIFTNo','','','3',1,0,0,0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank routing number',24,'RegistrationNum','','','3',0,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Vendor Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','26','SWIFTNo','','',3,0,'1','11',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Creditor sort code','26','RegistrationNum','','',3,0,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','WBeneName','','',1,0,1,'140',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Vendor Country Region','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to Company(account LE)','16','WBeneCountryRegionId','','',0,1,'',0,0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Vendor Address 1','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > Street','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to Company(account LE)','16','WBeneAddr','','',1,0,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','ZIP/Postal Code ','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd ','ZIP/Postal code  related to Company(account LE)','16','WBeneZipPostal','','',0,1,'','',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','City ','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm ','Company(account LE) city','16','WBeneCity','','',0,0,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','State/province','Organization administration > Organization > Legal entities > Select Purpose as BTB EFT Address tab(Edit) > State/province','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn ','State related to Company(account LE)','16','WBeneState','','',1,0,1,'35',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Vendor bank IBAN','Cash and bank management > Select bank account > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','26','BankIBAN','','',3,0,1,'34',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Account Number','Cash and bank management > Select bank account > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','26','AccountNum','','',3,0,1,'34',0,4]);
        
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > DbtrAgt > BrnchId > Id','Name related to bank','37','WOrdPartyId','','',1,0,1,'140',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',1,0,1,'140',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Country code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Address 1','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Address related to bank','37','WOrdPartyAddr','','',1,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Address 2','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > BldgNb','Address related to bank','37','WOrdPartyAddr2','','',1,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank City','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','37','WOrdPartyCity','','',1,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Zip/postal code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','37','WOrdPartyZipCode','','',1,1,'','',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,0,0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank routing number',0,'RegistrationNum','','','3',0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Vendor Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','1','SWIFTNo','','',3,0,'1','11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Creditor sort code','1','RegistrationNum','','',3,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','35','WBeneName','','',1,0,1,'140',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Vendor Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','35','WBeneCountryRegionId','','',0,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Vendor Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','35','WBeneAddr','','',1,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Vendor Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','35','WBeneAddr2','','',1,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd ','ZIP/Postal code  related to vendor','35','WBeneZipPostal','','',0,1,'','',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','City ','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm ','Vendor city','35','WBeneCity','','',0,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','State/province','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn ','State related to vendor','35','WBeneState','','',1,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Vendor bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','1','BankIBAN','','',3,0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','DOM','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','1','AccountNum','','',3,0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > DbtrAgt > BrnchId > Id','Name related to bank','37','WOrdPartyId','','',1,0,1,'140',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Name','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','37','WOrdPartyName','','',1,0,1,'140',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Country code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','37','WOrdPartyCountryRegionId','','',1,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Address 1','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','Address related to bank','37','WOrdPartyAddr','','',1,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Address 2','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > BldgNb','Address related to bank','37','WOrdPartyAddr2','','',1,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank City','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','City related to bank','37','WOrdPartyCity','','',1,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Zip/postal code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','37','WOrdPartyZipCode','','',1,1,'','',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3',0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',1,0,0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank routing number',0,'RegistrationNum','','','3',0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Vendor Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','1','SWIFTNo','','',3,0,'1','11',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Creditor sort code','1','RegistrationNum','','',3,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','35','WBeneName','','',1,0,1,'140',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Vendor Country Region','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','35','WBeneCountryRegionId','','',0,1,'',0,0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Vendor Address 1','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','35','WBeneAddr','','',1,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Vendor Address 2','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','35','WBeneAddr2','','',1,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','ZIP/Postal Code ','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd ','ZIP/Postal code  related to vendor','35','WBeneZipPostal','','',0,1,'','',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','City ','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm ','Vendor city','35','WBeneCity','','',0,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','State/province','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > CtrySubDvsn ','State related to vendor','35','WBeneState','','',1,0,1,'35',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Vendor bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Customer bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','1','BankIBAN','','',3,0,1,'34',0,6]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CD-RAWBANK-XML','INTL','','Bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Payment specifications > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','1','AccountNum','','',3,0,1,'34',0,6]);
        
        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description
        
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CD-RAWBANK-XML','InstrPrty','Instruction Priority']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CD-RAWBANK-XML','Purp','Purp Code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CD-RAWBANK-XML','CtgyPurp','Category Purpose']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CD-RAWBANK-XML','InstrPrty','HIGH','HIGH']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CD-RAWBANK-XML','InstrPrty','NORM','NORM']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CD-RAWBANK-XML','Purp','CDCD','CDCD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CD-RAWBANK-XML','Purp','CDCB','CDCB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CD-RAWBANK-XML','Purp','CDOC','CDOC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CD-RAWBANK-XML','Purp','ACCT','ACCT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CD-RAWBANK-XML','CtgyPurp','CASH','CASH']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CD-RAWBANK-XML','CtgyPurp','CCRD','CCRD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CD-RAWBANK-XML','CtgyPurp','DIVI','DIVI']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CD-RAWBANK-XML','CtgyPurp','EPAY','EPAY']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CD-RAWBANK-XML','CtgyPurp','GOVT','GOVT']);

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('CD-RAWBANK-XML'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_CD_RAWBANK_XML();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_CD_RAWBANK_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_CD_RAWBANK_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CD-RAWBANK-XML','CD-RAWBANK-XML','DOM','InstrPrty','Instruction Priority',0,'InstrPrty','',0,'','','PmtInf > PmtTpInf > InstrPrty ']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CD-RAWBANK-XML','CD-RAWBANK-XML','INTL','InstrPrty','Instruction Priority',0,'InstrPrty','',0,'','','PmtInf > PmtTpInf > InstrPrty ']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CD-RAWBANK-XML','CD-RAWBANK-XML','DOM','Purp','Purpose Codes',0,'Purp','',0,'','','PmtInf > CdtTrfTxInf > Purp > Cd ']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CD-RAWBANK-XML','CD-RAWBANK-XML','INTL','Purp','Purpose Codes',0,'Purp','',0,'','','PmtInf > CdtTrfTxInf > Purp > Cd ']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CD-RAWBANK-XML','CD-RAWBANK-XML','DOM','CtgyPurp','Category Purpose',0,'CtgyPurp','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Cd ']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CD-RAWBANK-XML','CD-RAWBANK-XML','INTL','CtgyPurp','Category Purpose',0,'CtgyPurp','',0,'','','PmtInf > PmtTpInf > CtgyPurp > Cd ']);
        
        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3
        
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CD-RAWBANK-XML','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CD-RAWBANK-XML','*','FormatValidations','*','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CD-RAWBANK-XML','*','FormatValidations','*','15','W02']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CD-RAWBANK-XML','*','FormatValidations','*','15','W03']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CD-RAWBANK-XML','*','FormatValidations','*','15','W04']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CD-RAWBANK-XML','*','FormatValidations','*','1','*']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CD-RAWBANK-XML','*','FormatValidations','*','35','*']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CD-RAWBANK-XML','*','FormatValidations','*','37','*']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CD-RAWBANK-XML','BtchBookg','Batch Booking (TRUE/FALSE)']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CD-RAWBANK-XML','FlwInd','Flow indicator']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CD-RAWBANK-XML','BtchBookg','TRUE','1']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CD-RAWBANK-XML','BtchBookg','FALSE','0']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CD-RAWBANK-XML','FlwInd','Production','PROD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CD-RAWBANK-XML','FlwInd','Pre production','PREPROD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CD-RAWBANK-XML','FlwInd','Homologation','HOMOLOGATION']);
        
        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('CD-RAWBANK-XML'):
                paymSpecList = this.getFileFormatFieldsMetaData_CD_RAWBANK_XML();
                break;
        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_CD_RAWBANK_XML</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_CD_RAWBANK_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CD-RAWBANK-XML','CD-RAWBANK-XML','BtchBookg','Batch Booking (TRUE/FALSE)',0,'BtchBookg','',0,'','','PmtInf > BtchBookg']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CD-RAWBANK-XML','CD-RAWBANK-XML','PrvtDtInf','Private Delta Information',1,'PrvtDtInf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','DltPrvtData > DltPrvtDataDtl > PrvtDtInf']);        
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CD-RAWBANK-XML','CD-RAWBANK-XML','FlwInd','Flow Indicator',0,'FlwInd','',0,'','','DltPrvtData > FlwInd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CD-RAWBANK-XML','CD-RAWBANK-XML','BankId','Debtor Agent Bank Id',1,'BankId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','DbtrAgt > Id > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {

            case ('CD-RAWBANK-XML'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('BtchBookg', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('PrvtDtInf', gSKS_EFT_Bank.W02);
                }
                if(gSKS_EFT_Bank.W03)
                {
                    this.updateBankFields('FlwInd', gSKS_EFT_Bank.W03);
                }
                if(gSKS_EFT_Bank.W04)
                {
                    this.updateBankFields('BankId', gSKS_EFT_Bank.W04);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
       
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>