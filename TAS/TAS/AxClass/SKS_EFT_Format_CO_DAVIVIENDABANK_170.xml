<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_CO_DAVIVIENDABANK_170</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_CO_DAVIVIENDABANK_170 extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_CO_DAVIVIENDABANK_170 extends SKS_EFT_Format
{
    #define.FormatVersion('20220329')
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        #define.ACH('ACH')
        boolean first = true;

        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();

            // Get SKS_EFT_Bank
            this.getSKS_EFT_Bank();

            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            if(first)
            {
                // Control Log File record
                this.rec_ControlLogFile();
                first = false;
            }

            // Transfer Log File record
            this.rec_TransferLogFile();

            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_ControlLogFile</Name>
				<Source><![CDATA[
    public boolean rec_ControlLogFile()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Description                                                     Length      Position
        //1	    control log identifier	                                            2	    (1  - 2)
        //2	    Company NIT	                                                        16	    (3  - 18)
        //3	    Service Code	                                                    4	    (19 - 22)
        //4	    Subservice Code	                                                    4	    (23 - 26)
        //5	    Company account	                                                    16	    (27 - 42)
        //6	    Account Type	                                                    2	    (43	- 44)
        //7	    Bank code	                                                        18	    (45	- 50)
        //8	    Total Transfer value	                                            6	    (51	- 68)
        //9	    Total number of transfers	                                        6	    (69	- 74)
        //10	Process Date 	                                                    8	    (75	- 82)
        //11	Process Time (HHMMSS)	                                            6	    (83 - 88)
        //12	Operator code	                                                    4	    (89 - 92)
        //13    Unprocessed code                                                    4       (93-  96)
        //14    Generation Date                         		                    8       (97- 104)
        //15    Generation time                           		    	            6       (105- 110)
        //16    Enrollment flag	                        		                    2       (111- 112)
        //17    Type of identification                                   	    	2       (113- 114)            
        //18    Client number assigned by Davivienda	                            12    	(115- 126)
        //19    Collection Office (send field with zeros)	        	            4       (127- 130)
        //20    Future field (send field with zeros)			                    40      (131- 170)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;

        //1	    control log identifier	                                            2	    (1  - 2)
        sb.Append('RC');

        //2	    Company NIT	                                                        16	    (3  - 18)
        str companyNIT;

        companyNIT = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CompanyNIT', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        sb.Append(SKS_PP_StringFormats::strFill(16, this.CharacterReplacement(companyNIT), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //3	    Service Code	                                                    4	    (19 - 22)
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Right));

        //4	    Subservice Code	                                                    4	    (23 - 26)
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Right));

        //5	    Company account	                                                    16	    (27 - 42)
        sb.Append(SKS_PP_StringFormats::strFill(16, mSKS_EFT_FileDetail.BankBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //6	    Account Type	                                                    2	    (43	- 44)
        if(mSKS_EFT_FileDetail.BankAcctType == BankAccountType::SavingsAccount)
        {
            sb.Append('CA');
        }
        else
        {
            sb.Append('CC');
        }

        //7	    Bank code	                                                        6	    (45	- 50)
        sb.Append('000051');

        //8	    Total Transfer value	                                            18	    (51	- 68)
        sb.Append(SKS_PP_StringFormats::strMoney(-1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 18));

        //9	    Total number of transfers	                                        6	    (69	- 74)
        select COUNT(InvoiceOrigAmountCur) from tmpSKS_EFT_FileDetail
            where
                tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary;
        sb.Append(SKS_PP_StringFormats::strFill(6, num2str(tmpSKS_EFT_FileDetail.InvoiceOrigAmountCur,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //10	Process Date 	                                                    8	    (75	- 82)
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));

        //11	Process Time (HHMMSS)	                                            6	    (83 - 88)
        sb.Append(SKS_PP_StringFormats::strTimeHHMMSS());

        //12	Operator code	                                                    4	    (89 - 92)
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //13    Unprocessed code                                                    4       (93-  96)
        sb.Append('9999');

        //14    Generation Date                         		                    8       (97- 104)
        sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //15    Generation time                           		    	            6       (105- 110)
        sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //16    Enrollment flag	                        		                    2       (111- 112)
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //17    Type of identification                                   	    	2       (113- 114)
        sb.Append('01');

        //18    Client number assigned by Davivienda	                            12    	(115- 126)
        sb.Append(SKS_PP_StringFormats::strFill(12, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //19    Collection Office (send field with zeros)	        	            4       (127- 130)
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //20    Future field (send field with zeros)			                    40      (131- 170)
        sb.Append(SKS_PP_StringFormats::strFill(40, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_TransferLogFile</Name>
				<Source><![CDATA[
    public boolean rec_TransferLogFile()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Description                                                     Length      Position
        //1	    Type of transfer record	                                            2	    (1  - 2)
        //2	    Nit of the product or service destination	                        16	    (3  - 18)
        //3	    Reference	                                                        16	    (19 - 34)
        //4	    Product or service destination or origin	                        16	    (35 - 50)
        //5	    Type of product or service	                                        2	    (51 - 52)
        //6	    Bank code	                                                        6	    (53	- 58)
        //7	    Transfer value/quota	                                            18	    (59	- 76)
        //8	    Heel: Enterprise	                                                6	    (77	- 82)
        //9	    Type of identification	                                            2	    (83	- 84)
        //10	Validate Transfers to ACH	                                        1	    (85	- 85)
        //11	Result of the process assuming the values	                        4	    (86 - 89)
        //12	Response message	                                                40	    (90 - 129)
        //13    Cumulative value of the collection                                  18      (130- 147)         		
        //14    Application Date (send field with zeros)		                    8       (148- 155)
        //15    Collection Office (send field with zeros)		    	            4       (156- 159)
        //16    Motive (send field with zeros)	                        		    4       (160- 163)
        //17    send field with zeros                                   	    	7       (164- 170)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        //1	    Type of transfer record	                                            2	    (1  - 2)
        sb.Append('TR');

        //2	    Nit of the product or service destination	                        16	    (3  - 18)
        str companyNIT;

        companyNIT = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CompanyNIT', mSKS_EFT_FileDetail.RecId));
        sb.Append(SKS_PP_StringFormats::strFill(16, this.CharacterReplacement(companyNIT), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        //3	    Reference	                                                        16	    (19 - 34)
        sb.Append(SKS_PP_StringFormats::strFill(16, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //4	    Product or service destination or origin	                        16	    (35 - 50)
        sb.Append(SKS_PP_StringFormats::strFill(16, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //5	    Type of product or service	                                        2	    (51 - 52)
        sb.Append(SKS_PP_StringFormats::strFill(2, this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('TypeOfProd', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //6	    Bank code	                                                        6	    (53	- 58)
        sb.Append('000051');

        //7	    Transfer value/quota	                                            18	    (59	- 76)
        sb.Append(SKS_PP_StringFormats::strMoney(-1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 18));

        //8	    Heel: Enterprise	                                                6	    (77	- 82)
        sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //9	    Type of identification	                                            2	    (83	- 84)
        sb.Append(SKS_PP_StringFormats::strFill(2, this.CharacterReplacement(SKS_EFT_Format::getValueFromCode('TypeOfId', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId)), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //10	Validate Transfers to ACH	                                        1	    (85	- 85)
        sb.Append('1');

        //11	Result of the process assuming the values	                        4	    (86 - 89)
        sb.Append('9999');

        //12	Response message	                                                40	    (90 - 129)
        sb.Append(SKS_PP_StringFormats::strFill(40, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //13    Cumulative value of the collection                                  18      (130- 147)
        sb.Append(SKS_PP_StringFormats::strFill(18, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //14    Application Date (send field with zeros)                            8       (148- 155)
        sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        		                   
        //15    Collection Office (send field with zeros)		    	            4       (156- 159)
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //16    Motive (send field with zeros)	                        		    4       (160- 163)
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //17    send field with zeros                                   	    	7       (164- 170)
        sb.Append(SKS_PP_StringFormats::strFill(7, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>