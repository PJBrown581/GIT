<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_PNC_BW_ISI_80</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_PNC_BW_ISI_80 extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_US_PNC_BW_ISI_80 extends SKS_EFT_Format
{
    #define.FormatVersion('20220722')
    int                     mItemSequence;
    AmountMST               mItemAmount;
    BankAccountTable        mBankAccountTable;

    #define.SWT('Wire-SWIFT')
    #define.FWT('Wire-FED')

    str jobName;
    str batchId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        // Get SKS_EFT_Bank
        this.getSKS_EFT_Bank();
    
        // Batch Header
        this.rec_BatchHeader();
    
        mItemAmount = 0;
        mItemSequence = 0;
    
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();
    
            // Get SKS_EFT_Bank
            this.getSKS_EFT_Bank();

            jobName = SKS_EFT_Format::getCodelookupvalue('JobName', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);
            batchId = SKS_EFT_Format::getCodelookupvalue('BatchId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);
    
            //Get Bank Currency
            if(mBankAccountTable.AccountID != mSKS_EFT_Bank.BankAccountId)
            {
                select CurrencyCode, AccountID from mBankAccountTable where mBankAccountTable.AccountID == mSKS_EFT_Bank.BankAccountId;
            }
    
            //Funds Transfer Header
            this.rec_FTR_Header1();
            this.rec_FTR_Header2();
    
            //Sender's Reference
            this.rec_SRF();
    
            //Debit Party Record
            this.rec_DBT();
    
            //Beneficiary Bank REecord
            this.rec_BBK1();
            this.rec_BBK2();
    
            //Beneficiary Record
            this.rec_BNF1();
            this.rec_BNF2();
            this.rec_BNF345();
    
            //Funds Transfer Trailer
            this.rec_FTR_Trailer();
            next mSKS_EFT_FileDetail;
        }
    
        //Batch trailer
        this.rec_BatchTrailer1();
        this.rec_BatchTrailer2();
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_BatchHeader</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Position    Size
    // 1    BHDR-Record-Type                                      1 -  4       4
    // 2    BHDR-Job-Name                                         5 - 10       6
    // 3    BHDR-BATCH-ID                                        11 - 20      10
    // 4    BHDR-MN-DATE                                         21 - 26       6
    // 5    BHDR-MN-TIME                                         27 - 32       6
    // 6    FTR_Batch_Sequence                                   33 - 36       4
    // 7    BHDR-PASSWORD                                        37 - 44       8
    // 8    BHDR-BANK                                            45 - 47       3
    // 9    BHDR-New-Password                                    48 - 55       8
    //10    BHDR-COMMENT                                         56 - 80      25
    boolean rec_BatchHeader()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        // 1    BHDR-Record-Type                                      1 -  4       4
        sb.Append('*AMT');
    
        // 2    BHDR-Job-Name                                         5 - 10       6
        sb.Append(SKS_PP_StringFormats::strFill(6,this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('JobName', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank)),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 3    BHDR-BATCH-ID                                        11 - 20      10
        sb.Append(SKS_PP_StringFormats::strFill(10,this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BatchId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank)),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 4    BHDR-MN-DATE                                         21 - 26       6
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
    
        // 5    BHDR-MN-TIME                                         27 - 32       6
        sb.Append(SKS_PP_StringFormats::strTimeHHMMSS());
    
        // 6    FTR_Batch_Sequence                                   33 - 36       4
        sb.Append(SKS_PP_StringFormats::strFill(4,'',SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 7    BHDR-PASSWORD                                        37 - 44       8
        sb.Append(SKS_PP_StringFormats::strFill(8,'BATCH',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 8    BHDR-BANK                                            45 - 47       3
        sb.Append(SKS_PP_StringFormats::strFill(3,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 9    BHDR-New-Password                                    48 - 55       8
        sb.Append(SKS_PP_StringFormats::strFill(8,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //10    BHDR-COMMENT                                         56 - 80      25
        sb.Append(SKS_PP_StringFormats::strFill(25,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_BatchTrailer1</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Position    Size
    // 1    BTRL1_Record_Type                                     1 -  4       4
    // 2    BTRL1_Job_Name                                        5 - 10       6
    // 3    BTRL1_Batch_Id                                       11 - 20      10
    // 4    BTRL1_MN_DATE                                        21 - 26       6
    // 5    BTRL1_MN_TIME                                        27 - 32       6
    // 6    BTRL1_Batch_Sequence                                 33 - 36       4
    // 7    BTRL1-Transfer_Total                                 37 - 51      15
    // 8    BTRL1-Transfer_Count                                 52 - 56       5
    // 9    BTRL1-TestKey                                        57 - 72      16
    //10    Filler                                               73 - 80       8
    
    boolean rec_BatchTrailer1()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        // 1    BTRL1_Record_Type                                     1 -  4       4
        sb.Append('/AMT');
    
        // 2    BTRL1_Job_Name                                        5 - 10       6
        sb.Append(SKS_PP_StringFormats::strFill(6,this.CharacterReplacement(jobName),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 3    BTRL1_Batch_Id                                       11 - 20      10
        sb.Append(SKS_PP_StringFormats::strFill(10,this.CharacterReplacement(batchId),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 4    BTRL1_MN_DATE                                        21 - 26       6
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
    
        // 5    BTRL1_MN_TIME                                        27 - 32       6
        sb.Append(SKS_PP_StringFormats::strTimeHHMMSS());
    
        // 6    BTRL1_Batch_Sequence                                 33 - 36       4
        sb.Append(SKS_PP_StringFormats::strFill(4,'',SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 7    BTRL1-Transfer_Total                                 37 - 51      15
        sb.Append(SKS_PP_StringFormats::strFill(15,num2str(-1 * mItemAmount,0,2,1,0),SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 8    BTRL1-Transfer_Count                                 52 - 56       5
        sb.Append(SKS_PP_StringFormats::strFill(5,int2str(mItemSequence),SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 9    BTRL1-TestKey                                        57 - 72      16
        sb.Append(SKS_PP_StringFormats::strFill(16,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //10    Filler                                               73 - 80       8
        sb.Append(SKS_PP_StringFormats::strFill(8,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_BatchTrailer2</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Position    Size
    // 1    BTRL2_Record_Type                                     1 -  4       4
    // 2    BTRL2_Ant_Total                                       5 - 19      15
    // 3    BTRL2_Ant_Count                                      20 - 24       5
    // 4    BTRL2-Adv_Total                                      25 - 39      15
    // 5    BTRL2-Adv_Count                                      40 - 44       5
    // 6    BTRL2-Adm_Total                                      45 - 59      15
    // 7    BTRL2-Adm_Count                                      60 - 64       5
    // 8    Filler                                               65 - 80      16
    
    boolean rec_BatchTrailer2()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        // 1    BTRL2_Record_Type                                     1 -  4       4
        sb.Append('2AMT');
    
        // 2    BTRL2_Ant_Total                                       5 - 19      12
        sb.Append(SKS_PP_StringFormats::strFill(15,'0.00',SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 3    BTRL2_Ant_Count                                      20 - 24       5
        sb.Append(SKS_PP_StringFormats::strFill(5,'',SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 4    BTRL2-Adv_Total                                      25 - 39      12
        sb.Append(SKS_PP_StringFormats::strFill(15,'0.00',SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 5    BTRL2-Adv_Count                                      40 - 44       5
        sb.Append(SKS_PP_StringFormats::strFill(5,'',SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 6    BTRL2-Adm_Total                                      45 - 59      12
        sb.Append(SKS_PP_StringFormats::strFill(15,'0.00',SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 7    BTRL2-Adm_Count                                      60 - 64       5
        sb.Append(SKS_PP_StringFormats::strFill(5,'',SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 8    Filler                                               65 - 80      16
        sb.Append(SKS_PP_StringFormats::strFill(16,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_BBK1</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Position    Size
    // 1    Reserved                                                   1       1
    // 2    Field_Tag                                             2 -  5       4
    // 3    IDTYPE                                                     6       1
    // 4    Delimiter                                                  7       1
    // 5    ID                                                    8 - 31      24
    // 6    Filler                                               32 - 80      49
    
    boolean rec_BBK1()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
        // 1    Reserved                                                   1       1
        sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 2    Field_Tag                                             2 -  5       4
        sb.Append('BBK=');
    
        if(mSKS_EFT_FileDetail.PaymSpec == #FWT)
        {
            // 3    IDTYPE                                                     6       1
            sb.Append('A');
    
            // 4    Delimiter                                                  7       1
            sb.Append('/');
    
            // 5    ID                                                    8 - 31      24
            sb.Append(SKS_PP_StringFormats::strFill(24,mSKS_EFT_FileDetail.DepBankTransit,SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        }
        else
        {
            // 3    IDTYPE                                                     6       1
            sb.Append('S');
    
            // 4    Delimiter                                                  7       1
            sb.Append('/');
    
            // 5    ID                                                    8 - 31      24
            sb.Append(SKS_PP_StringFormats::strFill(24,mSKS_EFT_FileDetail.DepSwiftNo,SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        }
    
        // 6    Filler                                               32 - 80      49
        sb.Append(SKS_PP_StringFormats::strFill(49,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_BBK2</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Position    Size
    // 1    Reserved                                                   1       1
    // 2    Reserved                                                   2       1
    // 3    Name                                                  3 - 37      35
    // 4    Filler                                               38 - 80      43
    
    boolean rec_BBK2()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
        // 1    Reserved                                                   1       1
        sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 2    Reserved                                                   2       1
        sb.Append('-');
    
        // 3    Name                                                  3 - 37      35
        sb.Append(SKS_PP_StringFormats::strFill(35,this.CharacterReplacement(mSKS_EFT_VendorPaym.WBenBankName),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 4    Filler                                               38 - 80      43
        sb.Append(SKS_PP_StringFormats::strFill(43,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_BNF1</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Position    Size
    // 1    Reserved                                                   1       1
    // 2    Field_Tag                                             2 -  5       4
    // 3    BNF_ID:IDTYPE                                              6       1
    // 4    BNF_ID:Delimeter                                           7       1
    // 5    BNF_ID:ID                                             8 - 71      64
    // 6    Filler                                               72 - 80       9
    
    boolean rec_BNF1()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
        // 1    Reserved                                                   1       1
        sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 2    Field_Tag                                             2 -  5       4
        sb.Append('BNF=');
    
        // 3    BNF_ID:IDTYPE                                              6       1
        if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::FinancialInstitutionAccount)
        {
            sb.Append('G');
        }
        else
        {
            sb.Append('D');
        }
    
        // 4    BNF_ID:Delimeter                                           7       1
        sb.Append('/');
    
        // 5    BNF_ID:ID                                             8 - 71      64
        sb.Append(SKS_PP_StringFormats::strFill(64,mSKS_EFT_FileDetail.DepBankAcct,SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 6    Filler                                               72 - 80       9
        sb.Append(SKS_PP_StringFormats::strFill(9,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_BNF2</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Position    Size
    // 1    Reserved                                                   1       1
    // 2    Reserved                                                   2       1
    // 3    Name                                                  3 - 37      35
    // 4    Filler                                               38 - 80      43
    
    boolean rec_BNF2()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
        // 1    Reserved                                                   1       1
        sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 2    Reserved                                                   2       1
        sb.Append('-');
    
        // 3    Name                                                  3 - 37      35
        sb.Append(SKS_PP_StringFormats::strFill(35,this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneName),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 4    Filler                                               38 - 80      43
        sb.Append(SKS_PP_StringFormats::strFill(43,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_BNF345</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Position    Size
    // 1    Reserved                                                   1       1
    // 2    Reserved                                                   2       1
    // 3    Address                                               3 - 37      35
    // 4    Filler                                               38 - 80      43
    
    boolean rec_BNF345()
    {
        str BNFAddress;
    
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        void address(str _value)
        {
            if(_value)
            {
                // 1    Reserved                                                   1       1
                sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
                // 2    Reserved                                                   2       1
                sb.Append('-');
    
                // 3    Address                                               3 - 37      35
                sb.Append(SKS_PP_StringFormats::strFill(35,_value,SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
                // 4    Filler                                               38 - 80      43
                sb.Append(SKS_PP_StringFormats::strFill(43,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
                this.fileWrite(sb.ToString());
                sb = new System.Text.StringBuilder();
            }
        }
    
        //Required Address
        address(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneAddr));
        address(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneAddr2));
    
        BNFAddress = this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneCity);
    
        if(mSKS_EFT_VendorPaym.WBeneState)
        {
            if(BNFAddress)
            {
                BNFAddress += ', ';
            }
            BNFAddress = BNFAddress + this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneState);
        }
    
        if(mSKS_EFT_VendorPaym.WBeneZipPostal)
        {
            if(BNFAddress)
            {
                BNFAddress += ' ';
            }
            BNFAddress = BNFAddress + mSKS_EFT_VendorPaym.WBeneZipPostal;
        }
    
        if(mSKS_EFT_VendorPaym.WBeneCountryRegionId)
        {
            if(BNFAddress)
            {
                BNFAddress += ' ';
            }
            BNFAddress = BNFAddress + mSKS_EFT_VendorPaym.WBeneCountryRegionId;
        }
    
        address(BNFAddress);
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_DBT</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Position    Size
    // 1    Reserved                                                   1       1
    // 2    Field_Tag                                             2 -  5       4
    // 3    IDTYPE                                                     6       1
    // 4    Delimiter                                                  7       1
    // 5    ID                                                    8 - 31      24
    // 6    Filler                                               32 - 80      49
    
    boolean rec_DBT()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
        // 1    Reserved                                                   1       1
        sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 2    Field_Tag                                             2 -  5       4
        sb.Append('DBT=');
    
        // 3    IDTYPE                                                     6       1
        if(mSKS_EFT_Bank.AcctType == BankAccountType::FinancialInstitutionAccount)
        {
            sb.Append('G');
        }
        else
        {
            sb.Append('D');
        }
    
        // 4    Delimiter                                                  7       1
        sb.Append('/');
    
        // 5    ID                                                    8 - 31      24
        sb.Append(SKS_PP_StringFormats::strFill(24,mSKS_EFT_FileDetail.BankBankAcct,SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 6    Filler                                               32 - 80      49
        sb.Append(SKS_PP_StringFormats::strFill(49,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_FTR_Header1</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Position    Size
    // 1    FTR_Record_Type                                       1 -  4       4
    // 2    FTR_Batch_Sequence                                    5 -  8       4
    // 3    FTR_Item_Sequence                                     9 - 14       6
    // 4    FTR_System_Ref                                       15 - 30      16
    // 5    FTR_Msg_Type                                         31 - 34       4
    // 6    FTR_Type                                             35 - 36       2
    // 7    FTR_FX_Flag                                               37       1
    // 8    FTR_Cdt_Cur_Code                                     38 - 40       3
    // 9    FTR_Dbt_Cur_Code                                     41 - 43       3
    //10    FTR_Amount                                           44 - 58      15
    //11    FTR_Funds_Type                                            59       1
    //12    FTR_Tran_Type                                        60 - 62       3
    //13    FTR_Priority                                              63       1
    //14    FTR_Flag1                                                 64       1
    //15    FTR_Generate_Ant                                          65       1
    //16    FTR_PDM_Flag                                              66       1
    //17    FTR_MAC                                              67 - 75       9
    //18    FTR_Bank                                             76 - 78       3
    //19    FTR_IBK_Secwir_Flag                                       79       1
    //20    FTR_BBK_Secwir_Flag                                       80       1
    
    boolean rec_FTR_Header1()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        // 1    FTR_Record_Type                                       1 -  4       4
        sb.Append('*FTR');
    
        // 2    FTR_Batch_Sequence                                    5 -  8       4
        sb.Append(SKS_PP_StringFormats::strFill(4,'',SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 3    FTR_Item_Sequence                                     9 - 14       6
        mItemSequence++;
        sb.Append(SKS_PP_StringFormats::strFill(6,int2str(mItemSequence),SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 4    FTR_System_Ref                                       15 - 30      16
        sb.Append(SKS_PP_StringFormats::strFill(16,'',SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 5    FTR_Msg_Type                                         31 - 34       4
        sb.Append(SKS_PP_StringFormats::strFill(4,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 6    FTR_Type                                             35 - 36       2
        sb.Append('NR');
    
        if(mSKS_EFT_FileDetail.PaymentCurrencyCode != 'USD')
        {
            // 7    FTR_FX_Flag                                               37       1
            sb.Append('T');
    
            // 8    FTR_Cdt_Cur_Code                                     38 - 40       3
            sb.Append(mSKS_EFT_FileDetail.PaymentCurrencyCode);
    
            // 9    FTR_Dbt_Cur_Code                                     41 - 43       3
            sb.Append(SKS_PP_StringFormats::strFill(3,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        }
        else if(mBankAccountTable.CurrencyCode != 'USD')
        {
            // 7    FTR_FX_Flag                                               37       1
            sb.Append('T');
    
            // 8    FTR_Cdt_Cur_Code                                     38 - 40       3
            sb.Append(SKS_PP_StringFormats::strFill(3,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
            // 9    FTR_Dbt_Cur_Code                                     41 - 43       3
            sb.Append(mBankAccountTable.CurrencyCode);
        }
        else
        {
            // 7    FTR_FX_Flag                                               37       1
            sb.Append('F');
    
            // 8    FTR_Cdt_Cur_Code                                     38 - 40       3
            sb.Append(mSKS_EFT_FileDetail.PaymentCurrencyCode);
    
            // 9    FTR_Dbt_Cur_Code                                     41 - 43       3
            sb.Append(mBankAccountTable.CurrencyCode);
        }
    
        //10    FTR_Amount                                           44 - 58      15
        mItemAmount += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        sb.Append(SKS_PP_StringFormats::strFill(15, num2str(-1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,0,2,1,0),SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        //11    FTR_Funds_Type                                            59       1
        sb.Append('S');
    
        //12    FTR_Tran_Type                                        60 - 62       3
        sb.Append('FTR');
    
        //13    FTR_Priority                                              63       1
        sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //14    FTR_Flag1                                                 64       1
        sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //15    FTR_Generate_Ant                                          65       1
        sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //16    FTR_PDM_Flag                                              66       1
        sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //17    FTR_MAC                                              67 - 75       9
        sb.Append(SKS_PP_StringFormats::strFill(9,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //18    FTR_Bank                                             76 - 78       3
        sb.Append(SKS_PP_StringFormats::strFill(3,mSKS_EFT_Bank.WOrdPartyId,SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //19    FTR_IBK_Secwir_Flag                                       79       1
        sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //20    FTR_BBK_Secwir_Flag                                       80       1
        sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_FTR_Header2</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Position    Size
    // 1    FTR_Record_Type                                       1 -  4       4
    // 2    FTR_Reverse_Flag                                           5       1
    // 3    FTR_Create_Date                                       6 - 11       6
    // 4    FTR_Release_Date                                     12 - 17       6
    // 5    FTR_Value_Date                                       18 - 23       6
    // 6    FTR_Routing                                          24 - 26       3
    // 7    FTR_Repeat_Code                                      27 - 34       8
    // 8    FTR_Charges                                          35 - 37       3
    // 9    FTR_Dbt_Dept                                         38 - 47      10
    //10    FTR_Dbt_Rtc                                          48 - 50       3
    //11    FTR_Cdt_Dept                                         51 - 60      10
    //12    FTR_Cdt_Rtc                                          61 - 63       3
    //13    FTR_Test_Key                                         64 - 79      16
    //14    Filler                                                    80       1
    
    boolean rec_FTR_Header2()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        // 1    FTR_Record_Type                                       1 -  4       4
        sb.Append('2FTR');
        // 2    FTR_Reverse_Flag                                           5       1
        sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 3    FTR_Create_Date                                       6 - 11       6
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
    
        // 4    FTR_Release_Date                                     12 - 17       6
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(mSKS_EFT_File.EffectiveDate));
    
        // 5    FTR_Value_Date                                       18 - 23       6
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(mSKS_EFT_File.EffectiveDate));
    
        // 6    FTR_Routing                                          24 - 26       3
        if(mSKS_EFT_FileDetail.PaymSpec == #FWT)
        {
            sb.Append('FED');
        }
        else
        {
            sb.Append('SWT');
        }
    
        // 7    FTR_Repeat_Code                                      27 - 34       8
        sb.Append(SKS_PP_StringFormats::strFill(8,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 8    FTR_Charges                                          35 - 37       3
        sb.Append(SKS_PP_StringFormats::strFill(3,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 9    FTR_Dbt_Dept                                         38 - 47      10
        sb.Append(SKS_PP_StringFormats::strFill(10,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //10    FTR_Dbt_Rtc                                          48 - 50       3
        sb.Append(SKS_PP_StringFormats::strFill(3,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //11    FTR_Cdt_Dept                                         51 - 60      10
        sb.Append(SKS_PP_StringFormats::strFill(10,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //12    FTR_Cdt_Rtc                                          61 - 63       3
        sb.Append(SKS_PP_StringFormats::strFill(3,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //13    FTR_Test_Key                                         64 - 79      16
        sb.Append(SKS_PP_StringFormats::strFill(16,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //14    Filler                                                    80       1
        sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_FTR_Trailer</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Position    Size
    // 1    TRL_Record_Type                                       1 -  4       4
    // 2    TRL_Batch_Sequence                                    5 -  8       4
    // 3    TRL_Item_Sequence                                     9 - 14       6
    // 4    Filler                                               15 - 80      66
    
    boolean rec_FTR_Trailer()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        // 1    TRL_Record_Type                                       1 -  4       4
        sb.Append('/FTR');
    
        // 2    TRL_Batch_Sequence                                    5 -  8       4
        sb.Append(SKS_PP_StringFormats::strFill(4,'',SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 3    TRL_Item_Sequence                                    9 - 14       6
        sb.Append(SKS_PP_StringFormats::strFill(6,int2str(mItemSequence),SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
    
        // 4    Filler                                               15 - 80      66
        sb.Append(SKS_PP_StringFormats::strFill(66,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_SRF</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Position    Size
    // 1    Reserved                                                   1       1
    // 2    Field_Tag                                             2 -  5       4
    // 3    Sender_Ref_Number                                     6 - 21      16
    // 4    Filler                                               22 - 80      59
    
    boolean rec_SRF()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        // 1    Reserved                                                   1       1
        sb.Append(SKS_PP_StringFormats::strFill(1,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 2    Field_Tag                                             2 -  5       4
        sb.Append('SRF=');
    
        // 3    Sender_Ref_Number                                     6 - 21      16
        sb.Append(SKS_PP_StringFormats::strFill(16,this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        // 4    Filler                                               22 - 80      59
        sb.Append(SKS_PP_StringFormats::strFill(59,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    // Overridden in order to group by Payment Currency Code
    protected void selectPaymentRecords()
    {
        select * from mSKS_EFT_FileDetail
          order by mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>