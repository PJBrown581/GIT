<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_CITICONNECT_XML_RF</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_CITICONNECT_XML_RF extends SKS_EFT_Format_ISO_20022_001001003
/// </summary>
class SKS_EFT_Format_US_CITICONNECT_XML_RF extends SKS_EFT_Format_ISO_20022_001001003
{
    //------------------------------------------------------------------------------------------------------
    /// <summary>
    /// This is extending the SEPA_Credit Format
    /// </summary>
    //------------------------------------------------------------------------------------------------------
    #define.FormatVersion('20230508')
    #define.FT607('FT-607')
    #define.CHK487('CHK-487')
    #define.OTC894('OTC-894')
    #define.DFT391('DFT-391')
    #define.CBFT392('CBFT-392')                  //SKG#VSTS:11471
    #define.CBFT896('CBFT-896')
    #define.CACH460('CACH-460')
    #define.BKT602('BKT-602')
    #define.DFT603('DFT-603')
    #define.CBFT604('CBFT-604')
    #define.ACHCCD('ACH-CCD')
    #define.ACHPPD('ACH-PPD')
    #define.ACHCTX('ACH-CTX')
    #define.FT499('FT-499')
    #define.BKT500('BKT-500')
    #define.WLW571('WLW-571')
    #define.ACH502('CCD-502')
    #define.ACH503('PPD-503')
    #define.CPS28('CPS-28')
    #define.CPS29('CPS-29')
    #define.USFCP821('USFCP-821')

    #define.ACH_SEPA('ACH-SEPA')
    #define.ACH_DC('ACH-DC')
    #define.ACH_KID('ACH-KID')
    #define.ACH_PG('ACH-PG')
    #define.ACH_BG('ACH-BG')
    #define.CB_WIRE('CB-WIRE')

    #define.DOM391('DOM-391')
    #define.CB392('CB-392')          //SKG#VSTS:11471
    #define.BKT393('BKT-393')       //SKG#VSTS:11471
    #define.DC417('DC-417')
    #define.CHECK416('CHECK-416')
    #define.IBRS429('IBRS-429')
    #define.IBRS430('IBRS-430')
    #define.CHECK427('CHECK-427')
    #define.DOM391RT('DOM-391-RT')  //SKG#VSTS:7509

    #define.ACH964('ACH-964')
    #define.CHECK815('CHECK-815')
    #define.DFT555('DFT-555')
    #define.CBFT574('CBFT-574')     //SKG#VSTS:11518

    #define.CHK804('CHK-804')       //SKG#VSTS:7453
    #define.DFT574('DFT-574')       //SKG#VSTS:7453

    #define.ACHCCP('ACH-CCP')
    #define.ACHPPP('ACH-PPP')
    #define.CCDP14('CCDP-14')
    #define.CTX17('CTX-17')
    #define.CHK19('CHK-19')
    #define.CHK585('CHK-585')
    #define.CTX942('CTX-942')
    #define.CHK20('CHK-20')
    #define.CPS706('CPS-706')
    #define.ACH780('ACH-780')
    #define.DOM317('DOM-317')
    #define.DOM555('DOM-555')               //SKG#VSTS:11518
    #define.SEPA848('SEPA-848')
    #define.SEPA939('SEPA-939')
    #define.ACH208('ACH-208')
    #define.DOM303('DOM-303')
    #define.DOM903('DOM-903')
    #define.DOM325('DOM-325')
    #define.DOM332('DOM-332')
    #define.DOM789('DOM-789')
    #define.DOM548('DOM-548')
    #define.ACH150('ACH-150')
    #define.SEPA938('SEPA-938')
    #define.ACH809('ACH-809')
    #define.BKT440('BKT-440')
    #define.DOM441('DOM-441')
    #define.TLPAY451('TLPAY-451')
    #define.RT453('RT-453')
    #define.DL454('DL-454')
    #define.CBFT442('CBFT-442')
    #define.CHK478('CHK-478')
    #define.DE397('DE-397')
    #define.PLG400('PLG-400')
    #define.ATPAY403('ATPAY-403')
    #define.CHK405('CHK-405')
    #define.LLG408('LLG-408')
    #define.CHK436('CHK-436')
    #define.PRL398('PRL-398')
    #define.PRL401('PRL-401')
    #define.DD437('DD-437')
    #define.DOM540('DOM-540')
    #define.DFT914('DFT-914')
    #define.BKT410('BKT-410')
    #define.PRL414('PRL-414')
    #define.PLG527('PLG-527')
    #define.CHK418('CHK-418')
    #define.GIRO421('GIRO-421')
    #define.ATPAY424('ATPAY-424')
    #define.CHK425('CHK-425')
    #define.PRL426('PRL-426')

    #define.CHK496('CHK-496')
    #define.CHK834('CHK-834')
    #define.BWPMT835('BWPMT-835')
    #define.DFT441('DFT-441')
    #define.CHK443('CHK-443')
    #define.CHK445('CHK-445')
    #define.CHK455('CHK-455')
    #define.CBFT827('CBFT-827')
    #define.DIT828('DIBT-828')
    #define.DPRL831('DPRL-831')
    #define.DPENS832('DPENS-832')
    #define.BKT833('BKT-833')
    #define.GIRO527('GIRO-527')
    #define.CHK415('CHK-415')
    #define.ATPAY403('ATPAY-403')   //SKG#VSTS:9402
    #define.CHECK405('CHECK-405')   //SKG#VSTS:9402
    #define.DE397('DE-397')         //SKG#VSTS:9403
    #define.CHK396('CHK-396')       //SKG#VSTS:9403
    #define.BPAY889('BPAY-889')     //SKG#VSTS:9403

    #define.ACH_WL('ACH-WL')
    #define.WIRE_WL('WIRE-WL')
    #define.CHK_WL('CHK-WL')
    #define.SEPA_WL('SEPA-WL')

    #define.ACH_WL_RC('ACH-WL-RC')
    #define.WIRE_WL_RC('WIRE-WL-RC')
    #define.CHK_WL_RC('CHK-WL-RC')
    #define.SEPA_WL_RC('SEPA-WL-RC')
    #define.WIRE_WL_O('WIRE-WL-O')
    #define.WIRE_WLORC('WIRE-WLORC')

    #define.CHK815('CHK-815')           //SKG#VSTS:10808
    #define.BKT547('BKT-547')           //SKG#VSTS:10808

    #define.WIRE574('WIRE-574')
    #define.ACH410('ACH-410')
    #define.WIRE391('WIRE-391')
    #define.WIRE392('WIRE-392')

    #define.CDFT392('CDFT-392')
    #define.SIP962('SIP-962')

    #define.CHK423('CHK-423')           //SKG#VSTS:11471
    #define.CHK420('CHK-420')           //SKG#VSTS:11471
    #define.PRL422('PRL-422')           //SKG#VSTS:11471
    #define.GIRO421('GIRO-421')         //SKG#VSTS:11471

    #define.BKT547('BKT-547')           //SKG#VSTS:11518
    #define.SSK853('SSK-853')           //SKG#VSTS:11518
    #define.ACH580('ACH-580')
    #define.CHK465('CHK-465')

    #define.BFT551('BFT-551')
    #define.CHK402('CHK-402')           //SKS_VSTS_12162

    //SKS_VSTS_11880 --->
    #define.CHK493('CHK-493')
    #define.CHK494('CHK-494')
    //SKS_VSTS_11880<---

    #define.SEPA('SEPA')            //SKG#VSTS:12473
    #define.XPRS888('XPRS-888')     //SKG#VSTS:12473
    
    #define.TAX592('TAX-592')       //SKG#VSTS:12473
    #define.VAT984('VAT-984')      //SKG#VSTS:12473

    #define.WIRE_WL_I('WIRE-WL-I')      //SKS_VSTS_13659
    #define.WIRE_WLIRC('WIRE-WLIRC')    //SKS_VSTS_13659

    #define.CTX950('CTX-950')           //SKS#VSTS:13477
    #define.CDM950('CDM-950')           //SKS#VSTS:13477
    #define.CHK950('CHK-950')           //SKS#VSTS:13477
    #define.RTGS605('RTGS-605')         //SKG#VSTS:14212

    #define.PPW_WL('PPW-WL')            //SKS#VSTS:14271
    #define.PPW_PH_WL('PPW-PH-WL')      //SKS#DevOps:14542    

    #define.DFT541('DFT-541')       //SKG#DevOps:15853
    #define.RTGS539('RTGS-539')     //SKG#DevOps:15853
    #define.TAX908('TAX-908')       //SKG#DevOps:15853
    #define.TAX927('TAX-927')       //SKG#DevOps:15853
    #define.TAX947('TAX-947')       //SKG#DevOps:15853
    #define.IFT_CB392('IFT-CB392')  //SKG#DevOps:15853
    #define.CDT862('CDT-862')       //SKG#DevOps:15853

    #define.WIRE_WL_IC('WIRE-WL-IC')      //SKG#DevOps:17359
    #define.WIREWLICRC('WIREWLICRC')      //SKG#DevOps:17359
    #define.WIRE_WL_IS('WIRE-WL-IS')      //SKG#DevOps:17359
    #define.WIREWLISRC('WIREWLISRC')      //SKG#DevOps:17359
    #define.WIRE_WL_IP('WIRE-WL-IP')      //SKG#DevOps:17359
    #define.WIREWLIPRC('WIREWLIPRC')      //SKG#DevOps:17359

    str bankCode;
    str bankCodeText;
    str email, telNo;
    SKS_PP_Setup lSKS_PP_Setup;
    //str street, city, postalCode, countryRegionId;
    

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankPurposeCode</Name>
				<Source><![CDATA[
    private void getBankPurposeCode()
    {
        msks_EFT_FileDetail_PaymentLine = sks_EFT_FileDetail_PaymentLine::find(mSKS_EFT_FileDetail.RecId); //FDD-10590
    
        bankCodeText = this.CharacterReplacement(msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeText); //FDD-10590

        bankCode = this.CharacterReplacement(msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeCode); //FDD-10590

        return;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getEmailandTelephonenumber</Name>
				<Source><![CDATA[
    private void getEmailandTelephonenumber()
    {
        VendTable   lVendTable;
        DirPartyLocation                dirPartyLocation;
        LogisticsElectronicAddress      lLogisticsElectronicAddress;
        LogisticsElectronicAddressRole  lLogisticsElectronicAddressRole;
        LogisticsLocationRole           lLogisticsLocationRole;

        boolean telephonenumber = true;
        boolean emailvalue = true;

        lVendTable = VendTable::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum);

        while select Location from DirPartyLocation where dirPartyLocation.party == lVendTable.Party
            join lLogisticsElectronicAddress where lLogisticsElectronicAddress.Location == dirPartyLocation.Location
                join LocationRole from lLogisticsElectronicAddressRole where lLogisticsElectronicAddressRole.ElectronicAddress == lLogisticsElectronicAddress.RecId
                    join Name from lLogisticsLocationRole
                        where lLogisticsLocationRole.RecId == lLogisticsElectronicAddressRole.LocationRole && lLogisticsLocationRole.Name == 'SKGPaymentContact'
        {
            if(lLogisticsElectronicAddress.Type == LogisticsElectronicAddressMethodType::Phone && telephonenumber)
            {
                if(lLogisticsElectronicAddress.Locator)
                {
                    telNo = this.CharacterReplacement(lLogisticsElectronicAddress.Locator);
                    telephonenumber = false;
                }
            }
            else if(lLogisticsElectronicAddress.Type == LogisticsElectronicAddressMethodType::Email && emailvalue)
            {
                if(lLogisticsElectronicAddress.Locator)
                {
                    email = this.CharacterReplacement(lLogisticsElectronicAddress.Locator);
                    emailvalue = false;
                }
            }
        }

        return;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf()
    {
        //------------------------------------------------------------------------------------------------------
        //      2.27: CdtTrfTxInf
        //          2.28: PmtId
        //          2.31: PmtTpInf
        //          2.42: Amt
        //          2.51: ChrgBr
        //          2.52: ChqInstr
        //          2.77: CdtrAgt
        //          2.79: Cdtr
        //          2.80: CdtrAcct
        //          2.98: RmtInf
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtTrfTxInf;
        boolean printChqInstr;


        //      2.27: CdtTrfTxInf
        nodeCdtTrfTxInf = nodePmtInf.appendChild(xmlDoc.createElement('CdtTrfTxInf'));

        //          2.28: PmtId
        this.node_CdtTrfTxInf_PmtId(nodeCdtTrfTxInf);

        //          2.31 PmtTpInf
        this.node_CdtTrfTxInf_PmtTpInf(nodeCdtTrfTxInf);

        //          2.42: Amt
        this.node_CdtTrfTxInf_Amt(nodeCdtTrfTxInf);

        //          2.51: ChrgBr
        this.node_CdtTrfTxInf_ChrgBr(nodeCdtTrfTxInf);

        //          2.52 ChqInstr
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-TW':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHECK427:
                        printChqInstr = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHECK416:
                        printChqInstr = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHECK815:
                        printChqInstr = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHECK405:
                        printChqInstr = true;
                        break;
                }
                break;
        }

        if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::Yes ||
           subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) == 'CHK'      ||
           printChqInstr)
        {
            this.node_CdtTrfTxInf_ChqInstr(nodeCdtTrfTxInf);
        }

        if((subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -2) == 'WL') ||
           (subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -2) == 'RC') ||
            mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'WIRE-WL-O' ||
            mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'WIRE-WL-I')            //SKS_VSTS_13659
        {
            //          2.71: IntrmyAgt1
            this.node_CdtTrfTxInf_IntrmyAgt1WL(nodeCdtTrfTxInf);
        }
        else
        {
            //          2.71: IntrmyAgt1
            this.node_CdtTrfTxInf_IntrmyAgt1(nodeCdtTrfTxInf);
        }

        //          2.72: IntrmyAgt1Acct
        this.node_CdtTrfTxInf_IntrmyAgt1Acct(nodeCdtTrfTxInf);

        //          2.73: IntrmyAgt2
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)            
        {
            case 'US-CITICONNECT-XML-US':       
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #FT499:
                        this.node_CdtTrfTxInf_IntrmyAgt2(nodeCdtTrfTxInf);      //SKS#DevOps:16222
                        break;
                }
                break;
        }

        if((subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -2) == 'WL') ||
            (subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -2) == 'RC') ||
            mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'WIRE-WL-O' ||
            mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'WIRE-WL-I')            //SKS_VSTS_13659
        {
            //          2.77: CdtrAgt
            this.node_CdtTrfTxInf_CdtrAgtWL(nodeCdtTrfTxInf);
        }
        else
        {
            //          2.77: CdtrAgt
            this.node_CdtTrfTxInf_CdtrAgt(nodeCdtTrfTxInf);
        }

        //          2.79: Cdtr
        this.node_CdtTrfTxInf_Cdtr(nodeCdtTrfTxInf);

        if((subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -2) == 'WL') ||
            (subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -2) == 'RC') ||
            mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'WIRE-WL-O' ||
            mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'WIRE-WL-I')            //SKS_VSTS_13659
        {
            //          2.80: CdtrAcct
            this.node_CdtTrfTxInf_CdtrAcctWL(nodeCdtTrfTxInf);
        }
        else
        {
            //          2.80: CdtrAcct
            this.node_CdtTrfTxInf_CdtrAcct(nodeCdtTrfTxInf);
        }

        //          2.82: InstrForCdtrAgt
        this.node_CdtTrfTxInf_InstrForCdtrAgt(nodeCdtTrfTxInf);

        //          2.85: InstrForDbtrAgt
        this.node_CdtTrfTxInf_InstrForDbtrAgt(nodeCdtTrfTxInf);

        //          2.86: Purp
        this.node_CdtTrfTxInf_Purp(nodeCdtTrfTxInf);

        //          2.89: RgltryRptg
        this.node_CdtTrfTxInf_RgltryRptg(nodeCdtTrfTxInf);

        //          2.90: Tax
        this.node_CdtTrfTxInf_Tax(nodeCdtTrfTxInf);

        //          2.91: RltdRmtInf
        this.node_CdtTrfTxInf_RltdRmtInf(nodeCdtTrfTxInf);

        //          2.98: RmtInf
        this.node_CdtTrfTxInf_RmtInf(nodeCdtTrfTxInf);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt2</Name>
				<Source><![CDATA[
    /// <summary>
    /// IntrmyAgt2
    /// </summary>
    /// <param name = "_nodeCdtTrfTxInf">IntrmyAgt2</param>
    protected void node_CdtTrfTxInf_IntrmyAgt2(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.73: IntrmyAgt2
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeIntrmyAgt1;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
    
        if(msKS_EFT_FileDetail_CreditParty.CrePartySwift != '' || msKS_EFT_FileDetail_CreditParty.CrePartyBankId != '')
        {
            //          2.73: IntrmyAgt2
            nodeIntrmyAgt1 = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt2'));
    
            //              FinInstnId
            nodeFinInstnId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(msKS_EFT_FileDetail_CreditParty.CrePartySwift)
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', msKS_EFT_FileDetail_CreditParty.CrePartySwift, 0, false);  //SKS_FDD_10590
            }
            //                  ClrSysMmbId
            else if(msKS_EFT_FileDetail_CreditParty.CrePartyBankId)
            {
                //      ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                //          MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', msKS_EFT_FileDetail_CreditParty.CrePartyBankId, 0, false);  //SKS_FDD_10590
            }
    
            if(msKS_EFT_FileDetail_CreditParty.CrePartyName)
            {
                //                  Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName), 140, false);
            }
            
            //                  PstlAdr
            this.node_PstlAdr(nodeFinInstnId, msKS_EFT_FileDetail_CreditParty.CrePartyCountryRegionId, msKS_EFT_FileDetail_CreditParty.CrePartyAddr, '', msKS_EFT_FileDetail_CreditParty.CrePartyCity);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_CdtTrfTxInf_Cdtr()
    /// </summary>
    /// <param name = "_nodeCdtTrfTxInf"></param>

    protected void node_CdtTrfTxInf_Cdtr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.79: Cdtr
        //              Nm
        //              PstlAdr
        //              Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtr;
    
        //          2.79: Cdtr
        nodeCdtr = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Cdtr'));
    
        //              Nm
        this.node_CdtTrfTxInf_Cdtr_Nm(nodeCdtr);
    
        //              PstlAdr
        this.node_PmtInf_Cdtr_PstlAdr(nodeCdtr);
    
        //              Id
        this.node_PmtInf_Cdtr_Id(nodeCdtr);

        //              CtctDtls
        this.node_PmtInf_Cdtr_CtctDtls(nodeCdtr);           //SKS#VSTS:14271
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Amt</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_CdtTrfTxInf_Amt()
    /// </summary>
    /// <param name = "_nodeCdtTrfTxInf"></param>
    protected void node_CdtTrfTxInf_Amt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.42: Amt
        //              2.43: InstdAmt
        //------------------------------------------------------------------------------------------------------
        XmlElement currentElement;
        XmlElement nodeAmt;
        XmlElement nodeEqvtAmt;
        boolean    noDecimal;
    
        //          2.42: Amt
        nodeAmt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Amt'));
    
        //              2.43: InstdAmt
        if(subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -2) == 'RC')
        {
            switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
            {
                case 'US-CITICONNECT-WL-XML-CL':
                    if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CLP')
                    {
                        noDecimal = true;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-KR':
                    if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'KRW')
                    {
                        noDecimal = true;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-TW':
                    if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'TWD')
                    {
                        noDecimal = true;
                    }
                    break;
            }
            if((mSKS_EFT_FileDetail.PaymentCurrencyCode == 'XOF' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'XAF' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'XPF' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'BIF' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'KMF' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'GNF' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'HUF' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'ISK' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'IDR' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'JPY' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'KRW' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'LAK' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'PYG' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'RWF' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'TWD' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'UGX' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'VUV' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'VND' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CLP')&&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE_WL)
            {
                noDecimal = true;
            }
            //          EqvtAmt
            nodeEqvtAmt = nodeAmt.appendChild(xmlDoc.createElement('EqvtAmt'));

            if(noDecimal)
            {
                //              Amt
                currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeEqvtAmt, 'Amt', num2str(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1),0,0,0,0));
            }
            else
            {
                //              Amt
                currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeEqvtAmt, 'Amt', num2str(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1),0,2,1,0));
            }

            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', mSKS_EFT_FileDetail.PaymentCurrencyCode);
            //              CcyOfTrf
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeEqvtAmt, 'CcyOfTrf', mSKS_EFT_FileDetail.DepBankCurrency);
        }
        else
        {
            switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
            {
                case 'US-CITICONNECT-XML-CL':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #BKT440:
                        case #DFT441:
                        case #CHK455:
                            noDecimal = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-KR':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM391:
                        case #BKT393:
                            noDecimal = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-TW':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #IBRS429:
                        case #IBRS430:
                        case #CHECK427:
                        case #BKT393:
                            noDecimal = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-JP':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM391:
                        case #BKT410:
                            noDecimal = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-CL':
                    if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CLP')
                    {
                        noDecimal = true;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-KR':
                    if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'KRW')
                    {
                        noDecimal = true;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-TW':
                    if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'TWD')
                    {
                        noDecimal = true;
                    }
                    break;
            }
            if((mSKS_EFT_FileDetail.PaymentCurrencyCode == 'XOF' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'XAF' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'XPF' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'BIF' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'KMF' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'GNF' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'HUF' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'ISK' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'IDR' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'JPY' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'KRW' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'LAK' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'PYG' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'RWF' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'TWD' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'UGX' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'VUV' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'VND' ||
                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CLP')&&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE_WL)
            {
                noDecimal = true;
            }
            
            //              2.43: InstdAmt
            if(noDecimal)
            {
                currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAmt, 'InstdAmt', num2str(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1),0,0,0,0));
            }
            else
            {
                currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAmt, 'InstdAmt', num2str(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1),0,2,1,0));
            }

            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', mSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr_Nm</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Cdtr_Nm(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.79: Cdtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
        int len;
        str name = mSKS_EFT_FileDetail.AccountName;
    
        select firstonly * from msks_EFT_FileDetail_BankAddress where
            msks_EFT_FileDetail_BankAddress.RefRecId == mSKS_EFT_FileDetail.RecId &&
            msks_EFT_FileDetail_BankAddress.AddressType == SKS_EFT_AddressType::VendBankAddress;

        EventHandlerResult result = new EventHandlerResult();

        this.node_CdtTrfTxInf_Cdtr_Nm_delegate(mSKS_EFT_FileDetail, mSKS_EFT_FileFormatPaymSpec, result);

        if(!result.result())
        {

            if(mRemittanceName)
            {
                name = mRemittanceName;
            }
            switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
            {
                case 'US-CITICONNECT-XML-AU':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CHK396:
                        case #DOM391:
                        case #CB392:
                        case #BKT393:
                            len = 70;
                            break;
                        case #DE397:
                            len = 32;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-AU':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH_WL:
                        case #SEPA_WL:
                        case #CHK_WL:
                        case #WIRE_WL:
                            len = 35;
                            break;
                        default:
                            len = 105;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-AG':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            len = 35;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-CA':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH_WL:
                            len = 30;
                            break;
                        case #WIRE_WL:
                            len = 35;
                            break;
                        default:
                            len = 105;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-GB':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CDFT392:
                            len = 70;
                            break;
                        case #SIP962:
                            len = 35;       //SKS#DevOps:14844
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-GB':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH_WL:
                            len = 18;
                            break;
                        case #WIRE_WL:
                            len = 35;
                            break;
                        default:
                            len = 105;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-HK':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ATPAY403:
                            len = 20;
                            name = strUpr(name);
                            break;
                        case #CHECK405:
                        case #DOM391:
                        case #CB392:
                            len = 70;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-IL':   //SKG#VSTS:11518
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM555:
                            len = 16;
                            break;
                        case #CBFT574:
                            len = 16;
                            break;
                        case #RTGS605:
                            len = 140;
                            break;
                        case #CBFT392: 
                            len = 35;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-IN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #IFT_CB392:    //SKG#VSTS:12473
                        case #DOM540:
                            len = 35;
                            break;
                        case #DFT541:       //SKG#VSTS:15853
                        case #RTGS539:      //SKG#VSTS:15853
                            len = 70;
                            break;
                        default:
                            len = 140;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-JM':        //SKS#DevOps:19378
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            len = 105;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-SG':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT391:
                            len = 35;
                            break;
                        case #CHK420:
                        case #CHK423:
                        case #CB392:
                        case #BKT393:
                            len = 70;
                            break;
                        case #GIRO421:
                        case #PRL422:
                            len = 20;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-SG':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH_WL:
                            len = 20;
                            break;
                        case #WIRE_WL:
                            len = 35;
                            break;
                        default:
                            len = 105;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-TN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #BKT547:
                            len = 70;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-TR':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM555:
                        case #CBFT574:
                            len = 35;
                            break;
                        case #BKT547:
                            len = 70;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-KR':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM391:
                        case #CB392:
                        case #BKT393:
                            len = 70;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-NZ':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM391:
                        case #CB392:
                        case #BKT393:
                            len = 70;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-ID':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM391:
                            len = 70;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-JP':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM391:
                        case #WIRE392:
                            len = 70;
                            break;
                        case #WIRE391:
                            name = strUpr(name);
                            len = 48;
                            break;
                        case #ACH410:
                            len = 48;
                            if(msks_EFT_FileDetail_BankAddress.BankAccountNameKana_JP)
                            {
                                name = msks_EFT_FileDetail_BankAddress.BankAccountNameKana_JP;
                            }
                            name = strUpr(name);
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-MY':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM391:
                        case #CB392:
                        case #BKT393:
                            len = 70;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-TW':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CB392:
                        case #BKT393:
                            len = 70;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-VN':       //SKS#DevOps:16681
                    len = 35;
                    break;
                case 'US-CITICONNECT-WL-XML-US':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH_WL:
                            len = 22;
                            break;
                        case #WIRE_WL:
                            len = 35;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-ZA':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH809:
                        case #WIRE574:
                            len = 70;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-CZ':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SEPA:
                            len = 70;
                            break;
                        case #CBFT574:
                            len = 35;
                            break;
                        case #DFT555:
                            len = 20;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-RO':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM789:
                        case #CBFT574:
                            len = 35;
                            break;                        
                    }
                    break;
                case 'US-CITICONNECT-XML-HU':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM903:
                        case #CBFT574:
                            len = 35;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-PL':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SEPA:
                            len = 70;
                            break;
                        case #TAX592:
                        case #VAT984:
                        case #CBFT574:
                            len = 35;
                            break;
                        case #DFT555:
                            len = 20;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-KZ':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH_WL:
                        case #WIRE_WL:
                        case #SEPA_WL:
                            len = 35;
                            break;
                        default:
                            len = 105;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-RU':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH_WL:
                        case #WIRE_WL:
                        case #SEPA_WL:
                            len = 35;
                            break;
                        default:
                            len = 105;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-BA':            //SKS#DevOPs:16138
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            len = 105;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-BB':            //SKS#DevOPs:16237
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            len = 105;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-MK':            //SKS#DevOPs:16428
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            len = 105;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-US':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CTX950:       //SKG#VSTS:13477
                        case #CDM950:       //SKG#VSTS:13477
                        case #CHK950:       //SKG#VSTS:13477
                        case #FT499:       //SKG#DevOps:15095
                        case #CHK19:        //SKG#DevOps:16961
                        case #ACHCCP:       //SKG#DevOps:17066
                        case #DFT603:        //DevOps18471
                            len = 35;
                            break;
                        default:
                            len = 140;
                            break;
                    }
                    break;                
                case 'US-CITICONNECT-WL-XML-AE':
                case 'US-CITICONNECT-WL-XML-AL':
                case 'US-CITICONNECT-WL-XML-AO':
                case 'US-CITICONNECT-WL-XML-AT':
                case 'US-CITICONNECT-WL-XML-AZ':
                case 'US-CITICONNECT-WL-XML-BD':
                case 'US-CITICONNECT-WL-XML-BE':
                case 'US-CITICONNECT-WL-XML-BF':
                case 'US-CITICONNECT-WL-XML-BG':
                case 'US-CITICONNECT-WL-XML-BH':
                case 'US-CITICONNECT-WL-XML-BJ':
                case 'US-CITICONNECT-WL-XML-BM':
                case 'US-CITICONNECT-WL-XML-BN':
                case 'US-CITICONNECT-WL-XML-BR':
                case 'US-CITICONNECT-WL-XML-BS':
                case 'US-CITICONNECT-WL-XML-BW':
                case 'US-CITICONNECT-WL-XML-BY':
                case 'US-CITICONNECT-WL-XML-CD':
                case 'US-CITICONNECT-WL-XML-CH':
                case 'US-CITICONNECT-WL-XML-CI':
                case 'US-CITICONNECT-WL-XML-CL':
                case 'US-CITICONNECT-WL-XML-CM':
                case 'US-CITICONNECT-WL-XML-CN':
                case 'US-CITICONNECT-WL-XML-CO':
                case 'US-CITICONNECT-WL-XML-CR':
                case 'US-CITICONNECT-WL-XML-CY':
                case 'US-CITICONNECT-WL-XML-CZ':
                case 'US-CITICONNECT-WL-XML-DE':
                case 'US-CITICONNECT-WL-XML-DK':
                case 'US-CITICONNECT-WL-XML-DO':
                case 'US-CITICONNECT-WL-XML-DZ':
                case 'US-CITICONNECT-WL-XML-EE':
                case 'US-CITICONNECT-WL-XML-EG':
                case 'US-CITICONNECT-WL-XML-ES':
                case 'US-CITICONNECT-WL-XML-ET':
                case 'US-CITICONNECT-WL-XML-FI':
                case 'US-CITICONNECT-WL-XML-FR':
                case 'US-CITICONNECT-WL-XML-GA':
                case 'US-CITICONNECT-WL-XML-GE':
                case 'US-CITICONNECT-WL-XML-GH':
                case 'US-CITICONNECT-WL-XML-GR':
                case 'US-CITICONNECT-WL-XML-GT':
                case 'US-CITICONNECT-WL-XML-GW':
                case 'US-CITICONNECT-WL-XML-GY':
                case 'US-CITICONNECT-WL-XML-HK':
                case 'US-CITICONNECT-WL-XML-HN':
                case 'US-CITICONNECT-WL-XML-HR':
                case 'US-CITICONNECT-WL-XML-HU':
                case 'US-CITICONNECT-WL-XML-ID':
                case 'US-CITICONNECT-WL-XML-IE':
                case 'US-CITICONNECT-WL-XML-IL':
                case 'US-CITICONNECT-WL-XML-IN':
                case 'US-CITICONNECT-WL-XML-IT':
                case 'US-CITICONNECT-WL-XML-JO':
                case 'US-CITICONNECT-WL-XML-JP':
                case 'US-CITICONNECT-WL-XML-KE':
                case 'US-CITICONNECT-WL-XML-KH':
                case 'US-CITICONNECT-WL-XML-KR':
                case 'US-CITICONNECT-WL-XML-KW':
                case 'US-CITICONNECT-WL-XML-LA':
                case 'US-CITICONNECT-WL-XML-LB':
                case 'US-CITICONNECT-WL-XML-LI':
                case 'US-CITICONNECT-WL-XML-LK':
                case 'US-CITICONNECT-WL-XML-LT':
                case 'US-CITICONNECT-WL-XML-LU':
                case 'US-CITICONNECT-WL-XML-LV':
                case 'US-CITICONNECT-WL-XML-MA':
                case 'US-CITICONNECT-WL-XML-ME':
                case 'US-CITICONNECT-WL-XML-MC':
                case 'US-CITICONNECT-WL-XML-MD':
                case 'US-CITICONNECT-WL-XML-MM':
                case 'US-CITICONNECT-WL-XML-MN':
                case 'US-CITICONNECT-WL-XML-MR':
                case 'US-CITICONNECT-WL-XML-MT':
                case 'US-CITICONNECT-WL-XML-MU':
                case 'US-CITICONNECT-WL-XML-MW':
                case 'US-CITICONNECT-WL-XML-MX':
                case 'US-CITICONNECT-WL-XML-MY':
                case 'US-CITICONNECT-WL-XML-MZ':
                case 'US-CITICONNECT-WL-XML-NA':
                case 'US-CITICONNECT-WL-XML-NE':
                case 'US-CITICONNECT-WL-XML-NG':
                case 'US-CITICONNECT-WL-XML-NL':
                case 'US-CITICONNECT-WL-XML-NO':
                case 'US-CITICONNECT-WL-XML-NP':
                case 'US-CITICONNECT-WL-XML-NZ':
                case 'US-CITICONNECT-WL-XML-OM':
                case 'US-CITICONNECT-WL-XML-PE':
                case 'US-CITICONNECT-WL-XML-PG':
                case 'US-CITICONNECT-WL-XML-PH':
                case 'US-CITICONNECT-WL-XML-PK':
                case 'US-CITICONNECT-WL-XML-PL':
                case 'US-CITICONNECT-WL-XML-PT':
                case 'US-CITICONNECT-WL-XML-PY':
                case 'US-CITICONNECT-WL-XML-QA':
                case 'US-CITICONNECT-WL-XML-RO':
                case 'US-CITICONNECT-WL-XML-RS':
                case 'US-CITICONNECT-WL-XML-RW':
                case 'US-CITICONNECT-WL-XML-SA':
                case 'US-CITICONNECT-WL-XML-SC':
                case 'US-CITICONNECT-WL-XML-SE':
                case 'US-CITICONNECT-WL-XML-SI':
                case 'US-CITICONNECT-WL-XML-SK':
                case 'US-CITICONNECT-WL-XML-SN':
                case 'US-CITICONNECT-WL-XML-SZ':
                case 'US-CITICONNECT-WL-XML-TD':
                case 'US-CITICONNECT-WL-XML-TG':
                case 'US-CITICONNECT-WL-XML-TH':
                case 'US-CITICONNECT-WL-XML-TN':
                case 'US-CITICONNECT-WL-XML-TR':
                case 'US-CITICONNECT-WL-XML-TT':
                case 'US-CITICONNECT-WL-XML-TW':
                case 'US-CITICONNECT-WL-XML-TZ':
                case 'US-CITICONNECT-WL-XML-UG':
                case 'US-CITICONNECT-WL-XML-UY':
                case 'US-CITICONNECT-WL-XML-UZ':
                case 'US-CITICONNECT-WL-XML-VN':
                case 'US-CITICONNECT-WL-XML-ZA':
                case 'US-CITICONNECT-WL-XML-ZM':
                case 'US-CITICONNECT-WL-XML-MO':            //SKS_VSTS_13720
                case 'US-CITICONNECT-WL-XML-FJ':
                case 'US-CITICONNECT-WL-XML-BO':
                case 'US-CITICONNECT-WL-XML-IS':
                case 'US-CITICONNECT-WL-XML-HT':
                case 'US-CITICONNECT-WL-XML-NI':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                        case #CHK_WL:
                            len = 35;
                            break;
                        default:
                            len = 105;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-MG':
                case 'US-CITICONNECT-WL-XML-ML':
                case 'US-CITICONNECT-WL-XML-KM':        //SKS#DevOps:16946
                case 'US-CITICONNECT-WL-XML-GM':        //SKS#DevOps:17970
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            len = 105;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-PPW-XML':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #PPW_WL:
                        case #PPW_PH_WL:
                            len = 140;      //SKS#DevOps:19720
                            break;
                    }
                    break;
                default:
                    len = 140;
                    break;
            }

            //              Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', this.CharacterReplacement(name), len);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  Othr
        //                  Id
        //              Tp/Ptry
        //------------------------------------------------------------------------------------------------------

        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
        XmlElement nodeCdtrAcctIdOthr;
        XmlElement nodeCdtrAcctTp;
        VendBankAccount mVendBankAccount;
        str acctType, iban, acctNum;
        int length;
        boolean leadZeros = false;
        boolean acctTypeCd = false;
        boolean acctTypePrtry = false;
        boolean vendAcctName = false;
        boolean printCdtrAcct = true;

        iban        = mSKS_EFT_FileDetail.DepBankIBAN;
        acctNum     = mSKS_EFT_FileDetail.DepBankAcct;

        acctType    = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BenAcctTpCd', mSKS_EFT_FileDetail.RecId)); //SKS_FDD_10590
        
        if(acctType == '')
        {
            if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::SavingsAccount)
            {
                acctType = 'SVGS';
            }
            else
            {
                acctType = 'CACC';
            }
        }
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-AE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT574:
                        length  = 34;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 35;
                        break;
                    case #DFT441:
                        acctTypeCd  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        acctNum = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT393:
                        iban    = '';
                        length  = 10;
                        break;
                    case #CB392:
                    case #DOM391:
                        iban    = '';
                        length  = 34;
                        break;
                    case #DE397:
                        iban    = '';
                        length  = 9;
                        break;
                    case #PRL398:
                        iban    = '';
                        vendAcctName = true;
                        break;
                    case #BPAY889:
                        printCdtrAcct = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-BE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        acctNum = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-BR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                    case #RT453:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 35;
                        break;
                    case #DL454:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 10;
                        break;
                    case #TLPAY451:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 20;
                        break;
                    case #DOM441:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 34;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT602:
                    case #CACH460:
                    case #CBFT604:
                    case #DFT603:
                        iban        = '';
                        acctTypeCd  = true;
                        break;
                    case #CPS706:
                        iban        = '';
                        length = 35;
                        acctTypeCd  = true;
                        break;
                    case #ACH780:
                        iban        = '';
                        length = 12;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 35;
                        break;
                    case #CBFT442:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 34;
                        break;
                    case #DFT441:
                        acctTypeCd  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DFT391:
                    case #CBFT392:
                        iban    = '';
                        break;
                    case #PLG400:
                        iban    = '';
                        length = 32;
                        break;
                    case #PRL401:
                        iban        = '';
                        length      = 32;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 35;
                        break;
                    case #DFT441:
                        acctTypeCd  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 35;
                        break;
                    case #CBFT442:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 34;
                        break;
                    case #DFT441:
                        acctTypeCd  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                    case #DFT555:
                        iban    = '';
                        length = 17;
                        break;
                    case #DOM317:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 35;
                        break;
                    case #XPRS888:
                        iban    = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                    case #CB_WIRE:
                        acctNum = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_DC:
                        iban    = '';
                        break;
                    case #ACH208:
                        iban    = '';
                        acctTypeCd = true;
                        length = 14;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 35;
                        break;
                    case #CBFT442:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 34;
                        break;
                    case #DFT441:
                        acctTypeCd  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-EC':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 35;
                        break;
                    case #CBFT442:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 34;
                        break;
                    case #DFT441:
                        acctTypeCd  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-FI':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        acctNum = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-FR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        acctNum = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-GB':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        acctNum = '';
                        break;
                    case #ACH_DC:
                        iban    = '';
                        break;
                    case #SIP962:
                        iban    = '';
                        length = 8;
                        break;
                    case #CDFT392:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'GB' &&
                           mSKS_EFT_FileDetail.DepBankIBAN != '')     //SKS#DevOps:17871, 20008
                        {
                            iban = mSKS_EFT_FileDetail.DepBankIBAN;
                        }
                        else if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                        }
                       
                        length = 32;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-GT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 35;
                        break;
                    case #CBFT442:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 34;
                        break;
                    case #DFT441:
                        acctTypeCd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM391:
                    case #CB392:
                        iban    = '';
                        length  = 34;
                        break;
                    case #ATPAY403:
                        iban    = '';
                        length = 9;
                        break;
                    case #CHECK405:
                        printCdtrAcct = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM441:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM303:
                        iban    = '';
                        break;
                    case #DOM903:
                        length      = 16;
                        acctTypeCd  = true;
                        break;
                    case #CBFT574:
                        length      = 34;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-ID':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #LLG408:
                    case #DOM391:
                        iban    = '';
                        length = 34;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        acctNum = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM540:                    
                    case #RTGS539:          //SKG#DevOps:15853                    
                    case #CDT862:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 34;
                        break;
                    case #IFT_CB392:        //SKG#DevOps:15853
                        iban        = '';
                        length      = 34;
                        break;
                    case #DFT914:
                    case #DFT541:           //SKG#DevOps:15853
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 30;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        iban        = '';
                        length      = 9;
                        break;
                    case #CBFT574:
                    case #CBFT392:      //SKS#DevOps:16141
                        length = 34;
                        break;
                    case #RTGS605:
                        acctNum = '';
                        length = 23;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_DC:
                        acctNum = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH964:
                    case #DFT555:
                        length  = 30;
                        break;
                    case #CBFT574:
                        length  = 34;
                        break;
                    case #CHECK815:
                        printCdtrAcct = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH410:
                        iban    = '';
                        length  = 7;

                        mVendBankAccount = VendBankAccount::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum, mSKS_EFT_FileDetail.DepBankAccountId);
                
                        switch(mVendBankAccount.TransType_JP)
                        {
                            case VendBankTransType_JP::Checking:
                                acctType = 'TO';
                                break;
                            case VendBankTransType_JP::OrdinarySavings:
                                acctType = 'FU';
                                break;
                            case VendBankTransType_JP::Others:
                                acctType = 'SO';
                                break;
                            case VendBankTransType_JP::Savings:
                                acctType = 'TI';
                                break;
                            default:
                                acctType = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BenAcctTpPrtry', mSKS_EFT_FileDetail.RecId));
                                break;
                        }

                        acctTypePrtry = true;

                        break;
                    case #WIRE391:
                        iban    = '';
                        length  = 7;
                        break;
                    case #WIRE392:
                        iban    = '';
                        length  = 34;
                        break;
                    case #BKT410:
                        iban    = '';
                        acctTypeCd = true;
                        length  = 34;
                        break;
                    case #DOM391:
                        iban = '';
                        break;
                    case #BKT393:
                        length  = 10;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-KE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        iban    = '';
                        length = 17;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-KR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM391:
                    case #CB392:
                        iban    = '';
                        length  = 34;
                        break;
                    case #PRL414:
                        iban    = '';
                        length  = 15;
                        break;
                    case #BKT393:
                        iban    = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-LU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        acctNum = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-MX':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BWPMT835:
                        iban    = '';
                        break;
                    case #DFT441:
                    case #CBFT827:
                    case #DIT828:
                    case #DPRL831:
                    case #DPENS832:
                    case #BKT833:
                        iban        = '';
                        acctTypeCd  = true;
                        break;
                    case #BKT440:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 35;
                        break;
                    case #CBFT442:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 34;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-MY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT393:
                    case #DFT391:
                    case #CB392:
                    case #CBFT392:
                        iban    = '';
                        break;
                    case #PLG527:
                        iban    = '';
                        length = 34;
                        break;
                    case #DOM391:
                        iban    = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        acctNum = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_DC:
                    case #ACH_KID:
                        iban        = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT393:
                    case #DC417:
                        iban    = '';
                        length  = 10;
                        break;
                    case #CB392:
                    case #DOM391:
                        iban    = '';
                        length  = 34;
                        break;
                    case #CHECK416:
                        printCdtrAcct = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM441:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 35;
                        break;
                    case #CBFT442:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 34;
                        break;
                    case #DFT441:
                        acctTypeCd  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        iban    = '';
                        length = 17;
                        break;
                    case #DOM325:
                    case #DFT555:
                    case #TAX592:
                    case #VAT984:
                        length = 26;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case 'CCD':
                    case 'PPD':
                    case #FT607:
                        acctTypeCd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-RO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM548:
                        acctNum = '';
                        break;
                    case #DOM789:
                        acctNum = '';
                        vendAcctName = true;
                        length = 24;
                        break;
                    case #CBFT574:
                        iban = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-RU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM548:
                        iban    = '';
                        length = 20;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_PG:
                        iban        = '';
                        break;
                    case #ACH150:
                        iban    = '';
                        length  = 16;
                        break;
                    case #ACH_BG:
                        length      = 10;
                        leadZeros   = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DFT391:
                    case #CB392:
                    case #BKT393:
                        iban    = '';
                        length      = 34;
                        break;
                    case #GIRO421:
                        iban    = '';
                        length      = 11;
                        break;
                    case #PRL422:
                        iban        = '';
                        break;
                    case #BFT551:
                        iban = '';
                        length  = 34;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA938:
                        acctNum = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SV':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 35;
                        break;
                    case #CBFT442:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 34;
                        break;
                    case #DFT441:
                        acctTypeCd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ATPAY424:
                    case #PRL426:
                        iban    = '';
                        length  = 15;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT574:
                    case #DOM555:
                        length  = 34;
                        break;
                    case #BKT547:
                        iban    = '';
                        length  = 10;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT547:
                        iban    = '';
                        length  = 10;
                        break;
                    case #DOM555:
                        iban    = '';
                        length = 20;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TW':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #IBRS430:
                    case #IBRS429:
                    case #CB392:
                    case #BKT393:
                        iban    = '';
                        length  = 34;
                        break;
                    case #CHECK427:
                        printCdtrAcct = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-UA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        iban    = '';
                        length = 14;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACHCCD:
                    case #ACHCTX:
                    case #ACHPPD:
                    case #CPS29:
                    case #USFCP821:
                    case #CTX942:
                        iban        = '';
                        acctTypeCd  = true;
                        break;
                    case #ACHCCP:
                    case #ACHPPP:
                    case #CCDP14:
                    case #CTX17:
                        iban        = '';
                        length = 17;
                        acctTypeCd  = true;
                        break;
                    case #BKT500:
                    case #CPS28:
                    case #FT499:
                    case #WLW571:
                        acctTypeCd  = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-UY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DFT441:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 35;
                        break;
                    case #BKT440:
                        iban    = '';
                        acctTypeCd  = true;
                        length  = 10;
                        break;
                    case #CBFT442:
                        iban    = '';
                        acctTypeCd  = true;
                        length  = 34;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-VN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DFT391:
                    case #CBFT392:
                        iban        = '';
                        length      = 34;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PY':
                iban = '';
                break;
            case 'US-CITICONNECT-XML-VE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM441:
                        iban        = '';
                        acctTypeCd  = true;
                        length      = 34;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-ZA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH809:
                        iban    = '';
                        length  = 13;
                        acctTypePrtry  = true;
                        if(acctType == 'CACC')
                        {
                            acctType = '1';
                        }
                        else
                        {
                            acctType = '2';
                        }
                        break;
                    case #WIRE574:                                   //SKG#VSTS:10574
                        iban    = '';
                        length = 34;
                        break;
                }
                break;
        }

        if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::No  &&
           printCdtrAcct &&
           subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK')
        {
            //          2.80: CdtrAcct
            nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));

            //              Id
            nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));

            if(iban)
            {
                //                  IBAN
                nodeCdtrAcctId = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN);
            }

            else if(acctNum)
            {
                //                  Othr
                nodeCdtrAcctIdOthr = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));

                if(leadZeros)
                {
                    //                         Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctIdOthr, 'Id', SKS_PP_StringFormats::strFill(length, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
                }
                else
                {
                    //                      Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctIdOthr, 'Id', mSKS_EFT_FileDetail.DepBankAcct, length);
                }
            }

            //              Tp
            //                  Cd/Ptry
            if(acctTypeCd)
            {
                nodeCdtrAcctTp = nodeCdtrAcct.appendChild(xmlDoc.createElement('Tp'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctTp, 'Cd', acctType);
            }
            else if(acctTypePrtry)
            {
                nodeCdtrAcctTp = nodeCdtrAcct.appendChild(xmlDoc.createElement('Tp'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctTp, 'Prtry', acctType);
            }
            if(vendAcctName)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcct, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName), 0, false); //SKS_FDD_10590
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                  Nm
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------
        
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeBrnchId;
        XmlElement nodeClrSysMmbId;     //SKS_VSTS_13694
        XmlElement nodeClrSysId;        //SKS_VSTS_13694
        str value, swift, rtg, bankName;
        boolean benBankName;
        boolean pstlAddr    = true;
        boolean branchId    = true;
        boolean printCdtrAgt = true;
        boolean printBranchNm;
        boolean printClrSysMmbId;
        swift = mSKS_EFT_FileDetail.DepSwiftNo;
        rtg   = mSKS_EFT_FileDetail.DepBankTransit;
        bankName = mSKS_EFT_FileDetail_BenBank.BenBankName;
        
        EventHandlerResult result = new EventHandlerResult();

        this.node_CdtTrfTxInf_RmtInf_CdtrAgt_delegate(_nodeCdtTrfTxInf,mSKS_EFT_FileDetail, mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_FileDetail_BenBank, mSKS_EB_CharacterReplacement, xmldoc, result);

        if(!result.result())
        {
            switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
            {
                case 'US-CITICONNECT-XML-AE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CBFT574:
                            rtg   = '';
                            branchId = false;
                            break;
                        case #CHK804:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-AR':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT441:
                            swift = '';
                            break;
                        case #BKT440:
                        case #CHK443:
                        case #CHK445:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-AT':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CB_WIRE:
                        case #ACH_SEPA:
                            branchId = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-AU':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM391:
                        case #DE397:
                            swift       = '';
                            benBankName = true;
                            break;
                        case #CB392:
                            rtg         = '';
                            benBankName = true;
                            break;
                        case #PRL398:
                            swift       = '';
                            benBankName = true;
                            break;
                        case #CHK396:
                            printCdtrAgt = false;
                            break;
                        case #BPAY889:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-BE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CB_WIRE:
                        case #ACH_SEPA:
                            branchId = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-BR':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM441:
                        case #RT453:
                        case #DL454:
                            swift = '';
                            break;
                        case #BKT440:
                        case #TLPAY451:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-CA':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CPS706:
                        case #ACH780:
                            swift = '';
                            branchId = false;
                            break;
                        case #BKT602:
                            branchId = false;
                            break;
                        case #DFT603:
                            swift   = '';
                            benBankName = true;
                            branchId = false;
                            break;
                        case #CBFT604:
                            benBankName = true;
                            branchId = false;
                            break;
                        case #CHK20:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-CL':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT441:
                            swift = '';
                            break;
                        case #BKT440:
                        case #CHK455:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-CO':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT441:
                            swift = '';
                            break;
                        case #BKT440:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-CN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT391:
                        case #PLG400:
                            swift       = '';
                            benBankName = true;
                            break;
                        case #PRL401:
                            benBankName = true;
                            break;
                        case #CHK402:
                            swift       = '';
                            rtg         = '';
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-CR':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT441:
                            swift = '';
                            break;
                        case #BKT440:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-CZ':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM555:
                            branchId = false;
                            swift = '';
                            break;
                        case #DFT555:
                            swift = '';
                            break;
                        case #XPRS888:
                            swift = '';
                            break;
                        case #ACH_SEPA:
                            branchId = false;
                            break;
                        case #CBFT574:
                            branchId = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-DE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CB_WIRE:
                        case #ACH_SEPA:
                            branchId = false;
                            break;
                        case #SEPA848:
                        case #SEPA939:
                            rtg      = '';
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-DO':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT441:
                            swift = '';
                            break;
                        case #BKT440:
                            printCdtrAgt = false;
                            break;
                        case #CHK465:
                            if(!(swift || rtg))
                            {
                                printCdtrAgt = false;
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-DK':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH_DC:
                        case #CB_WIRE:
                            branchId = false;
                            break;
                        case #ACH208:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-EC':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT441:
                            swift = '';
                            break;
                        case #BKT440:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-FI':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CB_WIRE:
                        case #ACH_SEPA:
                            branchId = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-FR':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CB_WIRE:
                        case #ACH_SEPA:
                            branchId = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-GB':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SIP962:           //SKS#DevOps:14844
                            if(rtg == '')
                            {
                                swift = '';
                            }
                            branchId = false;
                            break;
                        case #ACH_DC:           //SKS#DevOps:16877
                            if(rtg)
                            {
                                swift = '';
                            }
                            branchId = false;
                            break;
                        case #CB_WIRE:
                        case #ACH_SEPA:
                            rtg      = '';
                            branchId = false;
                            break;
                        case #SEPA848:
                            rtg      = '';
                            break;
                        case #CDFT392:
                            if (this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'GB')                   //SKS#VSTS:14490
                            {
                                rtg = '';
                                printClrSysMmbId = true;
                            }
                            else if(mSKS_EFT_FileDetail.DepBankTransit)
                            {
                                swift   = '';
                            }
                            else
                            {
                                rtg='';
                            }

                            benBankName = true;
                            branchId = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-GT':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT441:
                            swift = '';
                            break;
                        case #BKT440:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-HK':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ATPAY403:
                            swift = '';
                            break;
                        case #CB392:
                            rtg         = '';
                            benBankName = true;
                            break;
                        case #CHECK405:
                        case #CHK405:
                            printCdtrAgt = false;
                            break;
                        case #DOM391:
                            benBankName = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-HN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM441:
                            swift = '';
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-HU':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM303:
                        case #DOM903:
                            swift = '';
                            benBankName = true;
                            break;
                        case #CBFT574:
                            benBankName = true;
                            break;

                    }
                    break;
                case 'US-CITICONNECT-XML-ID':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #LLG408:
                            swift    = '';
                            benBankName = true;
                            break;
                        case #DOM391:
                            swift    = '';
                            benBankName = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-IE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH_SEPA:
                        case #CB_WIRE:
                            branchId = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-IN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM540:
                        case #DFT541:            //SKG#DevOps:15853
                        case #RTGS539:           //SKG#DevOps:15853
                            swift = '';
                            break;
                        case #DFT914:
                            rtg   = '';
                            benBankName = true;
                            break;
                        case #IFT_CB392:        //SKG#DevOps:15853
                            benBankName = true;
                            break;
                        case #CHK436:
                        case #DD437:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-IL':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #RTGS605:
                            printCdtrAgt = false;
                            break;
                        case #DOM555:
                            swift   = '';
                            benBankName = true;
                            break;
                        case #CBFT574:
                        case #CBFT392:      //SKS#DevOps:16141
                            benBankName = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-IT':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH_DC:
                        case #CB_WIRE:
                            branchId = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-JO':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CBFT574:
                            rtg   = '';
                            branchId = false;
                            break;
                        case #CHECK815:
                            printCdtrAgt = false;
                            break;
                        case #DFT555:
                        case #ACH964:
                            rtg   = '';
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-JP':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH410:
                        case #WIRE391:
                            swift = '';
                            branchId = false;
                            break;
                        case #WIRE392:
                            rtg         = '';
                            benBankName = true;                                                         //SKG#VSTS:10575
                            branchId    = false;
                            break;
                        case #BKT410:
                            swift = '';
                            break;
                        case #DOM391:
                            swift = '';
                            benBankName = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-KE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM555:
                            swift = '';
                            branchId = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-KR':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM391:                                                          //SKG#VSTS:7570
                            benBankName = true;
                            printBranchNm = true;
                            break;
                        case #CB392:
                            rtg         = '';
                            benBankName = true;
                            printBranchNm = true;
                            break;
                        case #PRL414:
                            swift = '';
                            benBankName = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-LU':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH_SEPA:
                        case #CB_WIRE:
                            branchId = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-MX':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #BWPMT835:
                        case #DPRL831:
                        case #DPENS832:
                        case #DIT828:
                            swift = '';
                            break;
                        case #DFT441:
                            swift       = '';
                            break;
                        case #BKT440:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-MY':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM391:
                            if(mSKS_EFT_FileDetail.DepBankTransit)
                            {
                                swift = '';
                            }
                            else
                            {
                                rtg   = '';
                            }
                            benBankName = true;
                            break;
                        case #DFT391:
                            if(mSKS_EFT_FileDetail.DepBankTransit)
                            {
                                swift = '';
                            }
                            else
                            {
                                rtg   = '';
                            }
                            benBankName = true;
                            break;
                        case #CHK415:
                            printCdtrAgt = false;
                            break;
                        case #CB392:
                            benBankName = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-NL':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH_SEPA:
                        case #CB_WIRE:
                            branchId = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-NO':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH_DC:
                        case #ACH_KID:
                        case #CB_WIRE:
                            branchId = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-NZ':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM391:
                            swift       = '';
                            benBankName = true;
                            break;
                        case #DC417:
                            swift       = '';
                            break;
                        case #DOM391RT:                                                          //SKG VSTS:7570
                            swift = '';
                            break;
                        case #CB392:
                            rtg         = '';
                            benBankName = true;
                            break;
                        case #CHECK416:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-PA':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM441:
                            swift = '';
                            break;
                        case #CHK478:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-PE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT441:
                            swift = '';
                            break;
                        case #BKT440:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-PL':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM555:
                            swift = '';
                            branchId = false;
                            break;
                        case #DOM325:
                            swift = '';
                            break;
                        case #DFT555:
                            swift = '';
                            break;
                        case #TAX592:
                        case #VAT984:
                            swift = '';
                            break;
                        case #ACH_SEPA:
                            branchId    = false;
                            break;
                        case #CBFT574:
                            branchId = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-PH':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CHK418:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-RO':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM332:
                        case #DOM789:
                            swift = '';
                            benBankName = true;
                            break;
                        case #CBFT574:
                            benBankName = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-RU':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM548:
                            swift = '';
                            benBankName = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-SE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH_PG:
                        case #ACH_BG:
                            swift       = '';
                            branchId    = false;
                            break;
                        case #DFT441:
                            swift = '';
                            break;
                        case #ACH150:
                            swift = '';
                            break;
                        case #CB_WIRE:
                            branchId = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-SG':                                               //SKG#VSTS:11471
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #GIRO421:
                        case #PRL422:
                            swift       = '';
                            break;
                        case #CB392:
                            benBankName = true;
                            break;
                        case #CHK420:
                        case #CHK423:
                            printCdtrAgt = false;
                            break;
                        case #DFT391:
                            benBankName = true;
                            branchId    = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-SK':                                               //SKG#VSTS:11471
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SEPA938:
                            rtg      = '';
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-SV':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT441:
                            swift       = '';
                            break;
                        case #BKT440:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-TH':                                               //SKG VSTS:11518
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ATPAY424:
                        case #PRL426:
                            swift       = '';
                            break;
                        case #CHK425:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-TN':                                               //SKG VSTS:11518
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CHK815:
                            printCdtrAgt = false;
                            break;
                        case #DOM555:
                            if(mSKS_EFT_FileDetail.DepBankTransit)
                            {
                                swift = '';
                            }
                            else
                            {
                                rtg   = '';
                            }
                            branchId = false;
                            break;
                        case #CBFT574:
                            rtg         = '';
                            benBankName = true;
                            branchId    = false;
                            break;
                        case #BKT547:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-TR':                                               //SKG VSTS:11518
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM555:
                            swift       = '';
                            benBankName = true;
                            branchId = false;
                            break;
                        case #CBFT574:
                            rtg         = '';
                            benBankName = true;
                            branchId    = false;
                            break;
                        case #SSK853:
                            branchId    = false;
                            break;
                        case #BKT547:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-TW':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #IBRS429:
                        case #IBRS430:
                            swift = '';
                            break;
                        case #CB392:
                            rtg     = '';
                            benBankName = true;
                            break;
                        case #CHECK427:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-UA':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM555:
                            swift   = '';
                            branchId = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-UY':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT441:
                            swift = '';
                            break;
                        case #BKT440:
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-US':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #BKT500:
                            swift = '';
                            branchId = false;
                            break;
                        case #ACHCTX:
                            if((mSKS_EFT_FileDetail.DepSwiftNo != '' || mSKS_EFT_FileDetail.DepBankTransit)&&
                                lSKS_PP_Setup.RegCustomerID == 'fc3ce6')     //SKS#DevOps:19784
                            {
                                //          2.77: CdtrAgt
                                nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));

                                //              FinInstnId
                                nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
                
                                //                  BIC
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 0, false);

                                if(mSKS_EFT_FileDetail.DepBankTransit)
                                {
                                    nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit);
                                }
                                //                  Nm
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(bankName), 0, false);                             
                                
                                //                  PstlAdr
                                this.node_CdtTrfTxInf_CdtrAgt_PstlAdr(nodeFinInstnId);

                                printCdtrAgt = false;
                            }
                            else
                            {
                                swift = '';
                                branchId = false;
                            }
                            break;
                        case #USFCP821:
                            branchId = false;
                            break;
                        case #ACHPPD:
                        case #ACHCCD:
                            switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
                            {
                                case 'CCD-502':
                                case 'PPD-503':
                                    swift = '';
                                    benBankName = true;
                                    branchId    = false;
                                    break;
                                default:
                                    swift = '';
                                    branchId = false;
                                    break;
                            }
                            break;
                        case #ACHCCP:
                        case #ACHPPP:
                        case #CCDP14:
                        case #CTX17:
                        case #CTX942:
                            swift = '';
                            break;
                        case #FT499:                            //SKS#VSTS:14564
                            if(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId == 'USA' ||
                    !(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId =='' && mSKS_EFT_FileDetail.DepBankTransit ==''))      //DevOps18567
                            {
                                swift = '';
                            }
                            benBankName = true;
                            branchId    = false;
                            break;
                        case #CPS28:
                        case #CPS29:
                            branchId = false;
                            break;
                        case #CHK19:
                        case #CHK585:
                        case #CHK950:   //SKS_VSTS_13477
                            printCdtrAgt = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-VE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM441:
                            swift = '';
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-VN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT391:
                            swift = '';
                            benBankName = true;
                            bankName = mSKS_EFT_FileDetail_BenBank.BenBankName + mSKS_EFT_FileDetail_BenBank.BenBankBranch;
                            branchId = false;
                            break;
                        case #CBFT392:
                            rtg = '';
                            if(swift)
                            {
                                benBankName = false;
                                pstlAddr = false;
                            }
                            branchId = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-ZA':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH809:                                                           //SKG VSTS:10574
                            swift    = '';
                            branchId = false;
                            break;
                        case #WIRE574:                                                          //SKG#VSTS:10574
                            if(swift == '')
                            {
                                benBankName = true;
                            }
                            if(swift == '' && mSKS_EFT_VendorPaym.WBenBankName)
                            {
                                pstlAddr = true;
                            }
                            else
                            {
                                pstlAddr = false;
                            }
                            branchId = false;
                            break;
                    }
                    break;
            }
         
            if(printCdtrAgt)
            {
                //          2.77: CdtrAgt
                nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));
         
                //              FinInstnId
                nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
         
                if(swift)
                {
                    //                  BIC
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', swift, 0, false);

                    if(printClrSysMmbId)
                    {
                        nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                        nodeClrSysId = nodeClrSysMmbId.appendChild(xmlDoc.createElement('ClrSysId'));

                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', 'IS', 0, false);

                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit);       //SKS#VSTS:14490
                    }
                }
                else if(rtg)
                {
                    //                  ClrSysMmbId
                    this.node_CdtTrfTxInf_CdtrAgt_MmbId(nodeFinInstnId);
                }
         
                if(benBankName)
                {
                    //                  Nm
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(bankName), 0, false); //SKS_FDD_10590
                }
                if(pstlAddr)
                {
                    //                  PstlAdr
                    this.node_CdtTrfTxInf_CdtrAgt_PstlAdr(nodeFinInstnId);
                }
         
                value = SKS_EFT_Format::getCodelookupvalue('BenBrnchId', mSKS_EFT_FileDetail.RecId); //SKS_FDD_10590
                if(value == '')
                {
                    value = this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankBranch);
                }
         
                if(branchId)
                {
                    if(printBranchNm)
                    {
                        if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                        {
                            nodeBrnchId = nodeCdtrAgt.appendChild(xmlDoc.createElement('BrnchId'));

                            //              Nm
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBrnchId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankBranch));
                        }
                    }
                    else
                    {
                        nodeBrnchId = nodeCdtrAgt.appendChild(xmlDoc.createElement('BrnchId'));

                        if(value)
                        {
                            //              Id
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBrnchId, 'Id', value, 0, false);
                        }
             
                        if(mSKS_EFT_FileDetail_BenBank.BenBankName)
                        {
                            //              Nm
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBrnchId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankName), 0, false);
                        }
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt_MmbId</Name>
				<Source><![CDATA[
    /// <summary>
    /// CdtrAgt
    /// </summary>
    /// <param name = "_nodeFinInstnId">CdtrAgt_MmbId</param>
    protected void node_CdtTrfTxInf_CdtrAgt_MmbId(XmlElement _nodeFinInstnId)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.77: CdtrAgent
        //          MmbId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeClrSysMmbId;
        XmlElement nodeClrSysId;
        str value;
        int len;
        boolean leadZeros = false;

        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BenBankRC', mSKS_EFT_FileDetail.RecId)); //SKS_FDD_10590

        if(value)
        {
            nodeClrSysMmbId = _nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', value, 0, false);
        }
        else if((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CBFT574    ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CBFT392)    &&              //SKS#DevOps:16141    
                mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CITICONNECT-XML-IL')            //SKS#VSTS:14212
        {
            nodeClrSysMmbId = _nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

            nodeClrSysId = nodeClrSysMmbId.appendChild(xmlDoc.createElement('ClrSysId'));
            if(mSKS_EFT_FileDetail.DepSwiftNo)
            {
                value = 'IS';
            }
            else if(mSKS_EFT_FileDetail.DepBankTransit)
            {
                value = 'FW';
            }
            else
            {
                value = 'OT';
            }
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', value, 0, false);

            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 11, false);
        }
        else if(mSKS_EFT_FileDetail.DepBankTransit)
        {
            nodeClrSysMmbId = _nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
            switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
            {
                case 'US-CITICONNECT-XML-US':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WLW571:
                            switch(mSKS_EFT_FileDetail.DepBankCodeType)
                            {
                                case BankCodeType::Code_SC:
                                    value = 'GBSC';
                                    break;
                                case BankCodeType::Code_FW:
                                    value = 'USFW';
                                    break;
                            }
                            break;
                        case #CTX950:           //SKG#VSTS:13477
                        case #CDM950:           //SKG#VSTS:13477
                            len = 9;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-IL':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM555:
                            len = 5;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-SE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH_PG:
                            value = 'SESBA';
                            break;
                        case #ACH_BG:
                            value = 'SESBA';
                            leadZeros = true;
                            len = 10;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-IN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT541:                //SKG#DevOps:15853
                        case #RTGS539:               //SKG#DevOps:15853
                            len = 11;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-ZA':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH809:                                                           //SKGVSTS:10574
                            len = 6;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-JP':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH410:                                                           //SKGVSTS:10575
                        case #WIRE391:
                            len = 11;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-SG':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #PRL422:                                                           //SKGVSTS:11471
                        case #DFT391:
                            len = 11;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-TR':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM555:                                                           //SKGVSTS:11518
                            len = 12;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-PL':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #TAX592:
                            len = 6;
                            break;
                        case #DFT555:
                        case #VAT984:
                            len = 8;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-UY':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT441:
                            len = 3;
                            break;
                        case #CBFT442:
                            len = 11;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-VN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT391:
                            len = 11;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-PY':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT441:
                            len = 3;
                            break;
                        case #CBFT442:
                            len = 11;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-CZ':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #XPRS888:
                        case #DFT555:
                            len = 7;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-GB':           //SKS_VSTS_13694
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CDFT392:
                            switch(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId))
                            {
                                case 'GB':
                                    value = 'SC';
                                    break;
                                case 'IE':
                                    value = 'IE';
                                    break;
                                case 'US':
                                    value = 'USFW';
                                    break;
                            }
                            break;
                    }
                    break;
            }
            if(value)
            {
                nodeClrSysId = nodeClrSysMmbId.appendChild(xmlDoc.createElement('ClrSysId'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', value);
            }
            if(leadZeros)                                                                       //SKGVSTS:7312
            {
                //                         Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', SKS_PP_StringFormats::strFill(len, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            }
            else
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, len, false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChqInstr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChqInstr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.52 ChqInstr
        //              2.58 DlvryMtd
        //              2.65 ChqMtrtyDt
        //              2.69: PrtLctn
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeChqInstr;
        XmlElement nodeDlvryMtd;
        XmlElement nodeDlvryTo;
        XmlElement nodeAdr;
        str chqTp, DlvryMtd, destBrnch;
        boolean chqNb = false;
        boolean dlvryMtdFlag = false;
        boolean dlvryToFlag  = false;
        boolean unStrdAddr   = false;
        boolean ChqMtrtyDt   = true;
        
        chqTp    = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Chqtp', mSKS_EFT_FileDetail.RecId)); //SKS_FDD_10590
        DlvryMtd = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DlvryMtd', mSKS_EFT_FileDetail.RecId)); //SKS_FDD_10590
        destBrnch = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DestBrnch', mSKS_EFT_FileDetail.RecId)); //SKS_FDD_10590

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-AE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK804:
                        DlvryMtdFlag = true;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK443:
                        DlvryMtdFlag = true;
                        DlvryToFlag  = true;
                        break;
                    case #CHK445:
                        DlvryMtdFlag = true;
                        DlvryToFlag  = true;
                        ChqMtrtyDt   = false;
                        break;
                    case #BKT440:
                        ChqMtrtyDt   = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK396:
                        DlvryMtdFlag = true;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-BE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-BH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-BN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }   
                break;
            case 'US-CITICONNECT-XML-BR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #RT453:
                    case #DOM441:
                    case #BKT440:
                        ChqMtrtyDt   = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK20:
                        chqNb        = true;
                        DlvryMtdFlag = true;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK455:
                        DlvryMtdFlag = true;
                        DlvryToFlag  = true;
                        break;
                    case #BKT440:
                        ChqMtrtyDt   = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        ChqMtrtyDt   = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        ChqMtrtyDt = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-CY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-CZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-DE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK465:
                    case #BKT440:
                        ChqMtrtyDt = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-EC':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        ChqMtrtyDt = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-EE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-ES':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-FI':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-FR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-GB':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-GR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-GT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        ChqMtrtyDt   = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHECK405:
                    case #CHK405:
                        DlvryMtdFlag = true;
                        DlvryToFlag  = true;
                        break;
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-HK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM441:
                        ChqMtrtyDt   = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-ID':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-IE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK436:
                        chqNb        = true;
                        DlvryMtdFlag = true;
                        DlvryToFlag  = true;
                        break;
                    case #DD437:
                        DlvryMtdFlag = true;
                        DlvryToFlag  = true;
                        ChqMtrtyDt   = false;
                        break;
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-IN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-IT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHECK815:
                        DlvryMtdFlag = true;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-KE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-KW':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-MA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-MT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-MX':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        ChqMtrtyDt   = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-MX':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-MY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK415:
                        DlvryMtdFlag = true;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-NO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHECK416:
                        DlvryMtdFlag = true;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-NZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-OM':
            case 'US-CITICONNECT-WL-XML-PH':
            case 'US-CITICONNECT-WL-XML-SA':
            case 'US-CITICONNECT-WL-XML-ZA':
            case 'US-CITICONNECT-WL-XML-SE':
            case 'US-CITICONNECT-WL-XML-CH':
            case 'US-CITICONNECT-WL-XML-TH':
            case 'US-CITICONNECT-WL-XML-TN':
            case 'US-CITICONNECT-WL-XML-TR':
            case 'US-CITICONNECT-WL-XML-AE':
            case 'US-CITICONNECT-WL-XML-FJ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM441:
                        ChqMtrtyDt   = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        ChqMtrtyDt   = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK418:
                        DlvryMtdFlag= true;
                        DlvryToFlag = true;
                        unStrdAddr  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-PT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK420:
                    case #CHK423:
                        DlvryMtdFlag = true;
                        DlvryToFlag  = true;
                        break;
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-SG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SV':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        ChqMtrtyDt   = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK425:
                        DlvryMtdFlag = true;
                        DlvryToFlag = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK815:
                        DlvryMtdFlag = true;
                        DlvryToFlag = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TW':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHECK427:
                        DlvryMtdFlag = true;
                        DlvryToFlag = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-UY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DFT441:
                        ChqMtrtyDt   = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK585:
                    case #CHK950:   //SKS_VSTS_13477
                        chqNb = true;
                        break;
                    case #CHK19:
                        chqNb = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        ChqMtrtyDt = false;
                        DlvryToFlag  = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-VE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM441:
                        ChqMtrtyDt   = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK420:
                        DlvryMtdFlag = true;
                        DlvryToFlag  = true;
                        break;
                }
                break;
        }

        //          2.52 ChqInstr
        nodeChqInstr = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('ChqInstr'));
    
        //              2.53 ChqTp
        if(chqTp)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'ChqTp', chqTp, 0, false);
        }
        if(chqNb && mSKS_EFT_FileFormatPaymSpec.UseCheckNumber)
        {
            //              2.54 ChqNb
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'ChqNb', SKS_PP_StringFormats::strFill(10, mSKS_EFT_FileDetail.PaymentReference, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        }
        
        if(DlvryMtdFlag && DlvryMtd)    //SKS#DevOps:17162
        {
            //              2.58 DlvryMtd
            nodeDlvryMtd = nodeChqInstr.appendChild(xmlDoc.createElement('DlvryMtd'));

            //                  2.59: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryMtd, 'Cd', DlvryMtd, 0, false);
        }
            
        if(dlvryToFlag)
        {
            //              2.61 DlvrTo
            nodeDlvryTo = nodeChqInstr.appendChild(xmlDoc.createElement('DlvrTo'));

            if(DlvryMtd == 'CRDB' || DlvryMtd == 'MLDB' || DlvryMtd == 'RGDB' || DlvryMtd == 'PUDB')
            {
                //              2.62 Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryTo, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName));      //SKS_FDD_10590

                //              2.63 Adr
                nodeAdr = nodeDlvryTo.appendChild(xmlDoc.createElement('Adr'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'StrtNm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr), 0, false);        //SKS_FDD_10590
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'BldgNb', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2), 16, false);       //SKS_FDD_10590

                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK20)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'PstCd', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode), 0, false);       //SKS#DevOps:17783
                }

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'TwnNm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity), 0, false);     //SKS_FDD_10590
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'Ctry', this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId));        //SKS_FDD_10590
            }
            else
            {
                //              2.62 Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryTo, 'Nm', this.CharacterReplacement(mRemittanceName));

                //              2.63 Adr
                nodeAdr = nodeDlvryTo.appendChild(xmlDoc.createElement('Adr'));

                if(unStrdAddr)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'Ctry', this.getLogisticsAddressCountryISO(mRemittanceCountryRegionId));
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'AdrLine', this.CharacterReplacement(mRemittanceAdrline1), 0, false);
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'AdrLine', this.CharacterReplacement(mRemittanceCity), 0, false);
                }
                else
                {
                    if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK20 && mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CITICONNECT-XML-CA')
                    {
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'StrtNm', this.CharacterReplacement(mRemittanceStreet), 70, false);
                    }
                    else
                    {
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'StrtNm', this.CharacterReplacement(mRemittanceAdrline1), 0, false);
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'BldgNb', this.CharacterReplacement(mRemittanceAdrline2), 16, false);
                    }

                    if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK_WL   ||
                       mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK20)           //SKS#DevOps:17783
                    {
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'PstCd', this.CharacterReplacement(mRemittanceZipCode), 0, false);
                    }
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'TwnNm', this.CharacterReplacement(mRemittanceCity), 0, false);
                    if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK_WL)
                    {
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'CtrySubDvsn', this.CharacterReplacement(mRemittanceState), 0, false);
                    }
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'Ctry', this.getLogisticsAddressCountryISO(mRemittanceCountryRegionId));
                }
            }
        }

        if(ChqMtrtyDt)
        {
            //              2.65 ChqMtrtyDt
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'ChqMtrtyDt', SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_File.EffectiveDate, DateSeparator::Hyphen), 0, false);
        }
        
        if(destBrnch)
        {
            //              22.69: PrtLctn
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'PrtLctn', destBrnch);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChrgBr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.51: ChrgBr
        //------------------------------------------------------------------------------------------------------
        str value;
    
        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ChrgBr', mSKS_EFT_FileDetail.RecId)); //SKS_FDD_10590

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-CZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        value = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH410:
                        value = strUpr(value);
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-KE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        if(!value)
                        {
                            value = 'DEBT';
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        value = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        value = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-UA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        value = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-US':           //SKS_VSTS_13397
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #USFCP821:
                        value = 'SHAR';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT547:
                    case #DOM555:
                        value = '';
                        break;
                    default:
                        if(!value)
                        {
                            value = 'OUR';
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AT':
            case 'US-CITICONNECT-WL-XML-BE':
            case 'US-CITICONNECT-WL-XML-CY':
            case 'US-CITICONNECT-WL-XML-CZ':
            case 'US-CITICONNECT-WL-XML-DE':
            case 'US-CITICONNECT-WL-XML-EE':
            case 'US-CITICONNECT-WL-XML-ES':
            case 'US-CITICONNECT-WL-XML-FI':
            case 'US-CITICONNECT-WL-XML-FR':
            case 'US-CITICONNECT-WL-XML-GR':
            case 'US-CITICONNECT-WL-XML-IE':
            case 'US-CITICONNECT-WL-XML-IT':
            case 'US-CITICONNECT-WL-XML-LU':
            case 'US-CITICONNECT-WL-XML-LV':
            case 'US-CITICONNECT-WL-XML-MC':
            case 'US-CITICONNECT-WL-XML-MT':
            case 'US-CITICONNECT-WL-XML-NL':
            case 'US-CITICONNECT-WL-XML-PT':
            case 'US-CITICONNECT-WL-XML-SI':
            case 'US-CITICONNECT-WL-XML-SK':
            case 'US-CITICONNECT-WL-XML-IS':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA_WL:
                        value = 'SHAR';
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-KZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        value = 'OUR';
                        break;
                }
                break;
        }

        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'ChrgBr', value, 0, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_InstrForCdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_InstrForCdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.82: InstrForCdtrAgt
        //              InstrInf
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeInstrForCdtrAgt;
        str value, CNS1, CNS2;
        str instrInfvalue;
        str addressinf;

        VendBankAccount                 mVendBankAccount;
        EventHandlerResult result = new EventHandlerResult();

        mVendBankAccount = VendBankAccount::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum, mSKS_EFT_FileDetail.DepBankAccountId);
        this.node_CdtTrfTxInf_InstrForCdtrAgt_delegate(_nodeCdtTrfTxInf,mSKS_EFT_FileDetail, mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_FileDetail_BenBank, msKS_EFT_FileDetail_CreditParty, mVendBankAccount, xmldoc, result);

        if(!result.result())
        {
            switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
            {
                case 'US-CITICONNECT-WL-XML-US':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ZW')
                            {
                                this.getEmailandTelephonenumber();

                                if(email)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));
    
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(email, 1, 30));

                                    if(strLen(email) > 30)
                                    {
                                        //          2.82: InstrForCdtrAgt
                                        nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(email, 31, 30));
                                    }
                                }

                                if(msKS_EFT_FileDetail_CreditParty.CrePartyName)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName), 1, 30));

                                    instrInfvalue = 'FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName);

                                    if(strLen(instrInfvalue) > 30)
                                    {
                                        //          2.82: InstrForCdtrAgt
                                        nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                    }
                                }

                                if(msKS_EFT_FileDetail_CreditParty.CrePartyAcct)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct, 1, 30));

                                    instrInfvalue = 'Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct;

                                    if(strLen(instrInfvalue) > 30)
                                    {
                                        //          2.82: InstrForCdtrAgt
                                        nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                    }
                                }

                            }
                            else //DevOps18352
                            {
                                if(msKS_EFT_FileDetail_CreditParty.CrePartyName || msKS_EFT_FileDetail_CreditParty.CrePartyAcct) //DevOps 18887
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', 'FFC');
                                }

                                if(msKS_EFT_FileDetail_CreditParty.CrePartyName)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf',subStr( this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName), 1, 30));

                                    if(strLen(msKS_EFT_FileDetail_CreditParty.CrePartyName) > 30)
                                    {
                                        //          2.82: InstrForCdtrAgt
                                        nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(msKS_EFT_FileDetail_CreditParty.CrePartyName, 31, 35));
                                    }
                                    if(strLen(msKS_EFT_FileDetail_CreditParty.CrePartyName) > 65)
                                    {
                                        //          2.82: InstrForCdtrAgt
                                        nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(msKS_EFT_FileDetail_CreditParty.CrePartyName, 66, 35));
                                    }
                                    if(strLen(msKS_EFT_FileDetail_CreditParty.CrePartyName) > 100)
                                    {
                                        //          2.82: InstrForCdtrAgt
                                        nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(msKS_EFT_FileDetail_CreditParty.CrePartyName, 101, 35));
                                    }
                                }

                                if(msKS_EFT_FileDetail_CreditParty.CrePartyAcct)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct, 1, 35));
                                }
                            }
                            break;

                    }
                    break;
                case 'US-CITICONNECT-WL-XML-BG':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            //          2.82: InstrForCdtrAgt
                            nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));
    
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/DTYPE/PORD');

                            //          2.82: InstrForCdtrAgt
                            nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/BAEREF/');

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyName)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName), 1, 30));

                                instrInfvalue = 'FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName);

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyAcct)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct, 1, 30));

                                instrInfvalue = 'Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct;

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }


                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-RU':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('UIN', mSKS_EFT_FileDetail.RecId));
            
                            if(value)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(value, 1, 30));

                                if(strLen(value) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(value, 31, 30));
                                }
                            }

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyName)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName), 1, 30));

                                instrInfvalue = 'FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName);

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyAcct)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct, 1, 30));

                                instrInfvalue = 'Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct;

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-SE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'SEK')
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));
    
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/UTL/');

                                if(msKS_EFT_FileDetail_CreditParty.CrePartyName)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName), 1, 30));

                                    instrInfvalue = 'FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName);

                                    if(strLen(instrInfvalue) > 30)
                                    {
                                        //          2.82: InstrForCdtrAgt
                                        nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                    }
                                }

                                if(msKS_EFT_FileDetail_CreditParty.CrePartyAcct)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct, 1, 30));

                                    instrInfvalue = 'Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct;

                                    if(strLen(instrInfvalue) > 30)
                                    {
                                        //          2.82: InstrForCdtrAgt
                                        nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                    }
                                }

                            }
                            break;
                    }
                    break;                
                case 'US-CITICONNECT-XML-NL':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CB_WIRE:
                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CentralBankCode', mSKS_EFT_FileDetail.RecId));
            
                            if(value)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', value);
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-DE':
                case 'US-CITICONNECT-WL-XML-GB':
                case 'US-CITICONNECT-WL-XML-CR':
                case 'US-CITICONNECT-WL-XML-BM':
                case 'US-CITICONNECT-WL-XML-CA':
                case 'US-CITICONNECT-WL-XML-CO':
                case 'US-CITICONNECT-WL-XML-DO':
                case 'US-CITICONNECT-WL-XML-GH':
                case 'US-CITICONNECT-WL-XML-HN':
                case 'US-CITICONNECT-WL-XML-HK':
                case 'US-CITICONNECT-WL-XML-IE':
                case 'US-CITICONNECT-WL-XML-MW':
                case 'US-CITICONNECT-WL-XML-NG':
                case 'US-CITICONNECT-WL-XML-SG':
                case 'US-CITICONNECT-WL-XML-CH':
                case 'US-CITICONNECT-WL-XML-TT':
                case 'US-CITICONNECT-WL-XML-UG':
                case 'US-CITICONNECT-WL-XML-AL':
                case 'US-CITICONNECT-WL-XML-DZ':
                case 'US-CITICONNECT-WL-XML-AO':
                case 'US-CITICONNECT-WL-XML-AU':
                case 'US-CITICONNECT-WL-XML-AT':
                case 'US-CITICONNECT-WL-XML-AZ':
                case 'US-CITICONNECT-WL-XML-BH':
                case 'US-CITICONNECT-WL-XML-BE':
                case 'US-CITICONNECT-WL-XML-BW':
                case 'US-CITICONNECT-WL-XML-BR':
                case 'US-CITICONNECT-WL-XML-BN':
                case 'US-CITICONNECT-WL-XML-KH':
                case 'US-CITICONNECT-WL-XML-CM':
                case 'US-CITICONNECT-WL-XML-CI':
                case 'US-CITICONNECT-WL-XML-HR':
                case 'US-CITICONNECT-WL-XML-CY':
                case 'US-CITICONNECT-WL-XML-CZ':
                case 'US-CITICONNECT-WL-XML-DK':
                case 'US-CITICONNECT-WL-XML-EG':
                case 'US-CITICONNECT-WL-XML-EE':
                case 'US-CITICONNECT-WL-XML-FI':
                case 'US-CITICONNECT-WL-XML-FR':
                case 'US-CITICONNECT-WL-XML-GE':
                case 'US-CITICONNECT-WL-XML-GR':
                case 'US-CITICONNECT-WL-XML-GT':
                case 'US-CITICONNECT-WL-XML-GY':
                case 'US-CITICONNECT-WL-XML-HU':
                case 'US-CITICONNECT-WL-XML-IN':
                case 'US-CITICONNECT-WL-XML-IL':
                case 'US-CITICONNECT-WL-XML-IT':
                case 'US-CITICONNECT-WL-XML-JP':
                case 'US-CITICONNECT-WL-XML-JO':
                case 'US-CITICONNECT-WL-XML-KZ':
                case 'US-CITICONNECT-WL-XML-KE':
                case 'US-CITICONNECT-WL-XML-KR':
                case 'US-CITICONNECT-WL-XML-KW':
                case 'US-CITICONNECT-WL-XML-LA':
                case 'US-CITICONNECT-WL-XML-LV':
                case 'US-CITICONNECT-WL-XML-LB':
                case 'US-CITICONNECT-WL-XML-LI':
                case 'US-CITICONNECT-WL-XML-LU':
                case 'US-CITICONNECT-WL-XML-MT':
                case 'US-CITICONNECT-WL-XML-MU':
                case 'US-CITICONNECT-WL-XML-MX':
                case 'US-CITICONNECT-WL-XML-MC':
                case 'US-CITICONNECT-WL-XML-MN':
                case 'US-CITICONNECT-WL-XML-ME':
                case 'US-CITICONNECT-WL-XML-MA':
                case 'US-CITICONNECT-WL-XML-MZ':
                case 'US-CITICONNECT-WL-XML-MM':
                case 'US-CITICONNECT-WL-XML-NA':
                case 'US-CITICONNECT-WL-XML-NL':
                case 'US-CITICONNECT-WL-XML-NZ':
                case 'US-CITICONNECT-WL-XML-NO':
                case 'US-CITICONNECT-WL-XML-OM':
                case 'US-CITICONNECT-WL-XML-PG':
                case 'US-CITICONNECT-WL-XML-PY':
                case 'US-CITICONNECT-WL-XML-PH':
                case 'US-CITICONNECT-WL-XML-PT':
                case 'US-CITICONNECT-WL-XML-PR':
                case 'US-CITICONNECT-WL-XML-QA':
                case 'US-CITICONNECT-WL-XML-RO':
                case 'US-CITICONNECT-WL-XML-RW':
                case 'US-CITICONNECT-WL-XML-SA':
                case 'US-CITICONNECT-WL-XML-SN':
                case 'US-CITICONNECT-WL-XML-RS':
                case 'US-CITICONNECT-WL-XML-SK':
                case 'US-CITICONNECT-WL-XML-SI':
                case 'US-CITICONNECT-WL-XML-ZA':
                case 'US-CITICONNECT-WL-XML-ES':
                case 'US-CITICONNECT-WL-XML-LK':
                case 'US-CITICONNECT-WL-XML-SZ':
                case 'US-CITICONNECT-WL-XML-TW':
                case 'US-CITICONNECT-WL-XML-TH':
                case 'US-CITICONNECT-WL-XML-TN':
                case 'US-CITICONNECT-WL-XML-TR':
                case 'US-CITICONNECT-WL-XML-AE':
                case 'US-CITICONNECT-WL-XML-UY':
                case 'US-CITICONNECT-WL-XML-ZM':
                case 'US-CITICONNECT-WL-XML-ZW':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyName)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName), 1, 30));

                                instrInfvalue = 'FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName);

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyAcct)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct, 1, 30));

                                instrInfvalue = 'Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct;

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-ET':                //SKS#DevOps:18131
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                            {
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));
    
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankBranch));
                            }
                            if(msKS_EFT_FileDetail_CreditParty.CrePartyName)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName), 1, 30));

                                instrInfvalue = 'FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName);

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyAcct)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct, 1, 30));

                                instrInfvalue = 'Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct;

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-ID':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            if(msKS_EFT_FileDetail_CreditParty.CrePartyName)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName), 1, 30));

                                instrInfvalue = 'FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName);

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyAcct)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct, 1, 30));

                                instrInfvalue = 'Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct;

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-US':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #FT499://DevOps18352

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyName || msKS_EFT_FileDetail_CreditParty.CrePartyAcct)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', 'FFC');
                            }

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyName)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf',subStr( this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName), 1, 30));

                                if(strLen(msKS_EFT_FileDetail_CreditParty.CrePartyName) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(msKS_EFT_FileDetail_CreditParty.CrePartyName, 31, 35));
                                }
                                if(strLen(msKS_EFT_FileDetail_CreditParty.CrePartyName) > 65)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(msKS_EFT_FileDetail_CreditParty.CrePartyName, 66, 35));
                                }
                                if(strLen(msKS_EFT_FileDetail_CreditParty.CrePartyName) > 100)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(msKS_EFT_FileDetail_CreditParty.CrePartyName, 101, 35));
                                }
                            }

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyAcct)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct, 1, 35));
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-PE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            if(mSKS_EFT_FileDetail_Intermediary.IntBankAcct)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(mSKS_EFT_FileDetail_Intermediary.IntBankAcct, 1, 30), 35);

                                if(strLen(mSKS_EFT_FileDetail_Intermediary.IntBankAcct) > 30)
                                {
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(mSKS_EFT_FileDetail_Intermediary.IntBankAcct, 31, 30), 35);
                                }
                            }

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyName)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName), 1, 30));

                                instrInfvalue = 'FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName);

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyAcct)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct, 1, 30));

                                instrInfvalue = 'Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct;

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-CN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CBFT392:              //SKS#VSTS:14428
                            CNS1 = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpCodeCNS1', mSKS_EFT_FileDetail.RecId));
                            CNS2 = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpCodeCNS2', mSKS_EFT_FileDetail.RecId));

                            if(CNS1)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                //                      InstrInf
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/CNS1/一' + CNS1, 0, false);
                            }
                            if(CNS2)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                //                      InstrInf
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/CNS2/一' +  CNS2, 0, false);
                            }
                            if((CNS1 || CNS2) && this.getInvoiceNbrs())
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                //                      InstrInf
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/CNIN/' + this.CharacterReplacement(this.getInvoiceNbrs()), 0, false);
                            }
                            break;
                        case #CBFT896:
                            if((this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' ||
                            mRemittanceCountryRegionId == 'CN') &&
                            (mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNY' ||
                                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'RMB'))
                            {
                                this.getBankPurposeCode();
                                value = bankCodeText;

                                if(value)
                                {
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', value, 30);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-HK':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CB392:
                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InstrInf', mSKS_EFT_FileDetail.RecId));
                            if((this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HK' ||
                                mRemittanceCountryRegionId == 'HK') &&                            
                                (mSKS_EFT_FileDetail.PaymentCurrencyCode == 'USD' ||
                                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'EUR' ||
                                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNY' ||
                                 mSKS_EFT_FileDetail.PaymentCurrencyCode == 'RMB'))
                            {
                                value = '/ACC/RTGS';

                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', value, 30);
                            }
                            else if(value)              //SKS#DevOps:15468
                            {
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/REC/CHEQUE');

                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', value);     //SKS#DevOps:15596
                            }
                            break;
                        case #CHECK405:
                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InstrForCdtrAgt', mSKS_EFT_FileDetail.RecId));
                            if(value)
                            {
                                value = '/HKLI/' + value;

                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', value, 30);
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-CN':
                    switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
                    {
                        case #WIRE_WL_O:
                        case #WIRE_WLORC:
                            
                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpCode', mSKS_EFT_FileDetail.RecId));
                
                            nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/ACC/RMBCITISH');

                            if(value)
                            {
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(this.CharacterReplacement(value), 1, 30));

                                if(strLen(value) > 30)
                                {
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(this.CharacterReplacement(value), 31, 30));
                                }
                            }

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyName)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('FFC ' + msKS_EFT_FileDetail_CreditParty.CrePartyName, 1, 30));

                                instrInfvalue = 'FFC ' + msKS_EFT_FileDetail_CreditParty.CrePartyName;

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyAcct)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct, 1, 30));

                                instrInfvalue = 'Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct;

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            break;
                        case #WIRE_WL:
                        case #WIRE_WL_RC:
                            if(msKS_EFT_FileDetail_CreditParty.CrePartyName)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('FFC ' + msKS_EFT_FileDetail_CreditParty.CrePartyName, 1, 30));

                                instrInfvalue = 'FFC ' + msKS_EFT_FileDetail_CreditParty.CrePartyName;

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyAcct)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct, 1, 30));

                                instrInfvalue = 'Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct;

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-PL':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ZW')
                            {
                                this.getEmailandTelephonenumber();

                                if(email)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));
    
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(email, 1, 30));

                                    if(strLen(email) > 30)
                                    {
                                        //          2.82: InstrForCdtrAgt
                                        nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(email, 31, 30));
                                    }
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-PK':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            
                            if(msKS_EFT_FileDetail_CreditParty.CrePartyName)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName), 1, 30));

                                instrInfvalue = 'FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName);

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyAcct)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct, 1, 30));

                                instrInfvalue = 'Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct;

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            addressinf = mSKS_EFT_FileDetail_BenBank.BenBankBranch + ' ' +
                                         mSKS_EFT_FileDetail_BenBank.BenBankAddr + ' ' +
                                         mSKS_EFT_FileDetail_BenBank.BenBankCity + ' ' +
                                         this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId);

                            if(addressinf)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(this.CharacterReplacement(addressinf), 1, 30));
                
                                if(strLen(addressinf) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(this.CharacterReplacement(addressinf), 31, 30));
                                }

                                if(strLen(addressinf) > 60)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(this.CharacterReplacement(addressinf), 61, 30));
                                }

                                if(strLen(addressinf) > 90)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(this.CharacterReplacement(addressinf), 91, 30));
                                }

                                if(strLen(addressinf) > 120)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(this.CharacterReplacement(addressinf), 121, 30));
                                }

                                if(strLen(addressinf) > 150)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(this.CharacterReplacement(addressinf), 151, 30));
                                }
                            }
                            break;
                    }
                    break;

                case 'US-CITICONNECT-WL-XML-VN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyName)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName), 1, 30));

                                instrInfvalue = 'FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName);

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyAcct)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct, 1, 30));

                                instrInfvalue = 'Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct;

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            addressinf = mSKS_EFT_FileDetail_VendAddress.BeneAddr + ' ' +
                                         mSKS_EFT_FileDetail_VendAddress.BeneAddr2 + ' ' +
                                         mSKS_EFT_FileDetail_VendAddress.BeneCity + ' ' +
                                         mSKS_EFT_FileDetail_VendAddress.BeneState + ' ' +
                                         mSKS_EFT_FileDetail_VendAddress.BeneZipPostal + ' ' +
                                         this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId);

                            if(addressinf)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(this.CharacterReplacement(addressinf), 1, 30));

                                if(strLen(addressinf) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(this.CharacterReplacement(addressinf), 31, 30));
                                }

                                if(strLen(addressinf) > 60)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(this.CharacterReplacement(addressinf), 61, 30));
                                }

                                if(strLen(addressinf) > 90)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(this.CharacterReplacement(addressinf), 91, 30));
                                }

                                if(strLen(addressinf) > 120)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(this.CharacterReplacement(addressinf), 121, 30));
                                }

                                if(strLen(addressinf) > 150)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(this.CharacterReplacement(addressinf), 151, 30));
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-IL':
                    switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
                    {
                        case #DOM555:

                            //          2.82: InstrForCdtrAgt
                            nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/ILTE/' + this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ILInstrInf', mSKS_EFT_FileDetail.RecId)));
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-NZ':
                    switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
                    {
                        case #DOM391RT:

                            //          2.82: InstrForCdtrAgt
                            nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/REC/SCP');

                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-ZA':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE574:

                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InstrForCdtrAgt', mSKS_EFT_FileDetail.RecId));  //SKS_FDD_10590
    
                            if(value)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));
    
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', value);
                            }
                            break;
                    }
                    break;

                case 'US-CITICONNECT-XML-TR':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SSK853:

                            //          2.82: InstrForCdtrAgt
                            nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));
            
                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PaymPeriod', mSKS_EFT_FileDetail.RecId));    //SKS_FDD_10590
                            if(value)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/TRSP/'+value);
                            }
            
                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('StampDutyAmt', mSKS_EFT_FileDetail.RecId));    //SKS_FDD_10590
                            if(value)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/TRSA/'+value, 15);
                            }
            
                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('UnemploymentAmt', mSKS_EFT_FileDetail.RecId));  //SKS_FDD_10590
                            if(value)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/TRUA/'+value, 15);
                            }
            
                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('NetpremiumAmt', mSKS_EFT_FileDetail.RecId));   //SKS_FDD_10590
                            if(value)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/TRNA/'+value, 15);
                            }

                            //this.getLegalEntityPostalAddress();       //SKS_FDD_10590
            
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/TRLN/'+CompanyInfo::find().Name);     //SKS_FDD_10590
            
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/TRA1/'+ this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.Addr), 35);        //SKS_FDD_10590
            
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/TRA2/'+ this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.City), 35);        //SKS_FDD_10590
                    
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/TRA3/'+ mSKS_EFT_FileDetail_BankAccount.ZipPostal +' '+ mSKS_EFT_FileDetail_BankAccount.CountryRegionId, 35);     //SKS_FDD_10590

                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-JP':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE392:

                            //          2.82: InstrForCdtrAgt
                            nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));
                
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/REC/NRT');

                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-CA':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT603:

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyName)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName), 1, 30));

                                instrInfvalue = 'FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName);

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyAcct)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct, 1, 30));

                                instrInfvalue = 'Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct;

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-GB':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CDFT392:

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyName)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName), 1, 30));

                                instrInfvalue = 'FFC ' + this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName);

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            if(msKS_EFT_FileDetail_CreditParty.CrePartyAcct)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr('Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct, 1, 30));

                                instrInfvalue = 'Acc No ' + msKS_EFT_FileDetail_CreditParty.CrePartyAcct;

                                if(strLen(instrInfvalue) > 30)
                                {
                                    //          2.82: InstrForCdtrAgt
                                    nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', subStr(instrInfvalue, 31, 30));
                                }
                            }

                            break;
                        case #CB_WIRE:
                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CentralBankCode', mSKS_EFT_FileDetail.RecId));
            
                            if(value)
                            {
                                //          2.82: InstrForCdtrAgt
                                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', value);
                            }
                            break;
                    }
                    break;

            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt1</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_IntrmyAgt1(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.71: IntrmyAgt1
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeIntrmyAgt1;
        XmlElement nodeFinInstnId;
        XmlElement nodeBrnchId;
        XmlElement nodeClrSysMmbId;
        str intSwiftCode, intBankId, country;
        boolean intBankBranch = true;
        boolean intBankName   = false;
        boolean intPstlAddr = true;

        intSwiftCode = mSKS_EFT_FileDetail_Intermediary.IntBankSwift;
        intBankId    = mSKS_EFT_FileDetail_Intermediary.IntBankId;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-AT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        intBankName  = true;
                        intBankBranch = false;
                        break;
                    case #CB_WIRE:
                        intBankBranch = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BPAY889:
                        intSwiftCode  = '';
                        intBankId     = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-BE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        intBankName  = true;
                        intBankBranch = false;
                        break;
                    case #CB_WIRE:
                        intBankBranch = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT604:
                        intBankId    = '';
                        intBankBranch = false;
                        break;
                    case #DFT603:
                        intBankName = true;
                        intBankBranch = false;
                        if(intSwiftCode)                      //SKG#VSTS:13377
                        {
                            intBankId = '';
                        }
                        else if(intBankId)
                        {
                            country = this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId);
                            switch(country)
                            {
                                case 'AU':
                                    intBankId = '//AU' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6);
                                    break;
                                case 'CA':
                                    intBankId = subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 9);
                                    break;
                                case 'US':
                                    intBankId = '//FW' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 9);
                                    break;
                                case 'PR':
                                    intBankId = '//FW' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 9);
                                    break;
                                case 'GH':
                                    intBankId = '//GH' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6);
                                    break;
                                case 'ZA':
                                    intBankId = '//ZA' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6);
                                    break;
                                case 'ZM':
                                    intBankId = '//ZM' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6);
                                    break;
                                case 'GB':
                                    intBankId = '//SC' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6);
                                    break;
                                default:
                                    intBankId = mSKS_EFT_FileDetail_Intermediary.IntBankId;
                                    break;
                            }
                        }
                        break;
                    case #BKT602:
                        intBankBranch = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        intBankName  = true;
                        intBankBranch = false;
                        break;
                    case #CB_WIRE:
                        intBankBranch = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_DC:
                    case #CB_WIRE:
                        intBankBranch = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-FI':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        intBankName  = true;
                        intBankBranch = false;
                        break;
                    case #CB_WIRE:
                        intBankBranch = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-FR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        intBankName  = true;
                        intBankBranch = false;
                        break;
                    case #CB_WIRE:
                        intBankBranch = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-GB':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        intBankName  = true;
                        intBankBranch = false;
                        break;
                    case #ACH_DC:
                    case #CB_WIRE:
                        intBankBranch = false;
                        break;
                    case #CDFT392:
                        intBankName = true;
                        if(intSwiftCode)                      //SKG#VSTS:13377
                        {
                            intBankId = '';
                        }
                        else if(intBankId)
                        {
                            country = this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId);
                            switch(country)
                            {
                                case 'AU':
                                    intBankId = '//AU' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6);
                                    break;
                                case 'CA':
                                    intBankId = '//CC' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 9);
                                    break;
                                case 'US':
                                    intBankId = '//FW' +subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 9);
                                    break;
                                case 'PR':
                                    intBankId = '//FW' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 9);
                                    break;
                                case 'GH':
                                    intBankId = '//GH' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6);
                                    break;
                                case 'ZA':
                                    intBankId = '//ZA' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6);
                                    break;
                                case 'ZM':
                                    intBankId = '//ZM' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6);
                                    break;
                                case 'GB':
                                    intBankId = subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6);
                                    break;
                                default:
                                    intBankId = mSKS_EFT_FileDetail_Intermediary.IntBankId;
                                    break;
                            }
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        intBankName  = true;
                        intBankBranch = false;
                        break;
                    case #CB_WIRE:
                        intBankBranch = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_DC:
                    case #CB_WIRE:
                        intBankBranch = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE392:
                        intBankId     = '';
                        intBankName  = true;
                        intBankBranch = false;
                        break;
                    case #ACH410:
                    case #WIRE391:
                        intBankBranch = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-LU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        intBankName  = true;
                        intBankBranch = false;
                        break;
                    case #CB_WIRE:
                        intBankBranch = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-MX':
                //This is applicable for the entire MX payment specs
                intBankBranch = false;
                break;
            case 'US-CITICONNECT-XML-NO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_DC:
                    case #ACH_KID:
                    case #CB_WIRE:
                        intBankBranch = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        intBankName  = true;
                        intBankBranch = false;
                        break;
                    case #CB_WIRE:
                        intBankBranch = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_PG:
                    case #CB_WIRE:
                    case #ACH_BG:
                        intBankBranch = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CPS29:
                        intSwiftCode  = '';
                        intBankBranch = false;
                        intBankName = true;
                        break;
                    case #USFCP821:
                        intBankId    = '';
                        intBankBranch = false;
                        intBankName = true;
                        break;
                    case #CPS28:
                        intBankBranch = false;
                        intBankName = true;
                        break;
                    case #FT499:
                        intBankName = true;
                        if(intSwiftCode)                      //SKG#VSTS:13377
                        {
                            intBankId = '';
                        }
                        else if(intBankId)
                        {
                            country = this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId);      //SKG#VSTS:13377
                            switch(country)
                            {
                                case 'AU':
                                    intBankId = '//AU' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6);
                                    break;
                                case 'CA':
                                    intBankId = '//CC' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 9);
                                    break;
                                case 'US':
                                    intBankId = subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 9);
                                    break;
                                case 'PR':
                                    intBankId = '//FW' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 9);
                                    break;
                                case 'GH':
                                    intBankId = '//GH' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6);
                                    break;
                                case 'ZA':
                                    intBankId = '//ZA' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6);
                                    break;
                                case 'ZM':
                                    intBankId = '//ZM' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6);
                                    break;
                                case 'GB':
                                    intBankId = '//SC' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6);
                                    break;
                                default:
                                    intBankId = mSKS_EFT_FileDetail_Intermediary.IntBankId;
                                    break;
                            }
                        }
                        break;
                    default:
                        intBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-ZA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE574:
                        intSwiftCode = mSKS_EFT_FileDetail_Intermediary.IntBankSwift;
                        intBankId    = '';
                        intBankBranch = false;
                        if(intSwiftCode == '')
                        {
                            intBankName  = true;
                        }
                        break;
                    case #ACH809:
                        intBankBranch = false;
                        break;
                }
                break;
            
        }

        if(intSwiftCode || intBankId)
        {
            //          2.71: IntrmyAgt1
            nodeIntrmyAgt1 = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt1'));
    
            //              FinInstnId
            nodeFinInstnId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(intSwiftCode)
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail_Intermediary.IntBankSwift, 0, false);  //SKS_FDD_10590
            }
            
            if(intBankId)       //SKG#VSTS:10575
            {
                //                  ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail_Intermediary.IntBankId, 0, false);  //SKS_FDD_10590
            }
    
            if(intBankName && mSKS_EFT_FileDetail_Intermediary.IntBankName)
            {
                //                  Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankName), 35, false);   //SKS_FDD_10590
            }
            if(intPstlAddr)
            {
                //                  PstlAdr
                this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId, mSKS_EFT_FileDetail_Intermediary.IntBankAddr + '' + mSKS_EFT_FileDetail_Intermediary.IntBankAddr2, '', mSKS_EFT_FileDetail_Intermediary.IntBankCity);   //SKS_FDD_10590
            }

            if(intBankBranch && mSKS_EFT_FileDetail_Intermediary.IntBankBranch)        //SKS_FDD_10590
            {
                //              BrnchId
                nodeBrnchId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('BrnchId'));
                //              Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBrnchId, 'Id', this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankBranch));       //SKS_FDD_10590
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt1WL</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_IntrmyAgt1WL(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.71: IntrmyAgt1
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeIntrmyAgt1;
        XmlElement nodeFinInstnId;
        XmlElement nodeBrnchId;
        XmlElement nodeClrSysMmbId;
        str intSwiftCode, intBankId;
        boolean intBankBranch = true;
        boolean intBankName   = false;
        boolean intPstlAddr = true;

        intSwiftCode = mSKS_EFT_FileDetail_Intermediary.IntBankSwift;
        intBankId    = mSKS_EFT_FileDetail_Intermediary.IntBankId;

        str country;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-WL-XML-PY':
            case 'US-CITICONNECT-WL-XML-AZ':
            case 'US-CITICONNECT-WL-XML-BR':
            case 'US-CITICONNECT-WL-XML-CA':
            case 'US-CITICONNECT-WL-XML-CR':
            case 'US-CITICONNECT-WL-XML-GH':
            case 'US-CITICONNECT-WL-XML-PH':
            case 'US-CITICONNECT-WL-XML-DO':
            case 'US-CITICONNECT-WL-XML-IN':
            case 'US-CITICONNECT-WL-XML-DZ':
            case 'US-CITICONNECT-WL-XML-AU':
            case 'US-CITICONNECT-WL-XML-AT':
            case 'US-CITICONNECT-WL-XML-BS':
            case 'US-CITICONNECT-WL-XML-BH':
            case 'US-CITICONNECT-WL-XML-BD':
            case 'US-CITICONNECT-WL-XML-BE':
            case 'US-CITICONNECT-WL-XML-BJ':
            case 'US-CITICONNECT-WL-XML-BM':
            case 'US-CITICONNECT-WL-XML-BW':
            case 'US-CITICONNECT-WL-XML-BN':
            case 'US-CITICONNECT-WL-XML-BG':
            case 'US-CITICONNECT-WL-XML-BF':
            case 'US-CITICONNECT-WL-XML-CM':
            case 'US-CITICONNECT-WL-XML-TD':
            case 'US-CITICONNECT-WL-XML-CL':
            case 'US-CITICONNECT-WL-XML-CN':
            case 'US-CITICONNECT-WL-XML-CO':
            case 'US-CITICONNECT-WL-XML-CD':
            case 'US-CITICONNECT-WL-XML-CI':
            case 'US-CITICONNECT-WL-XML-HR':
            case 'US-CITICONNECT-WL-XML-CY':
            case 'US-CITICONNECT-WL-XML-CZ':
            case 'US-CITICONNECT-WL-XML-DK':
            case 'US-CITICONNECT-WL-XML-EG':
            case 'US-CITICONNECT-WL-XML-EE':
            case 'US-CITICONNECT-WL-XML-ET':
            case 'US-CITICONNECT-WL-XML-FI':
            case 'US-CITICONNECT-WL-XML-FR':
            case 'US-CITICONNECT-WL-XML-GA':
            case 'US-CITICONNECT-WL-XML-DE':
            case 'US-CITICONNECT-WL-XML-GR':
            case 'US-CITICONNECT-WL-XML-GT':
            case 'US-CITICONNECT-WL-XML-GW':
            case 'US-CITICONNECT-WL-XML-GY':
            case 'US-CITICONNECT-WL-XML-HK':
            case 'US-CITICONNECT-WL-XML-HU':
            case 'US-CITICONNECT-WL-XML-ID':
            case 'US-CITICONNECT-WL-XML-IE':
            case 'US-CITICONNECT-WL-XML-IL':
            case 'US-CITICONNECT-WL-XML-IT':
            case 'US-CITICONNECT-WL-XML-JP':
            case 'US-CITICONNECT-WL-XML-JO':
            case 'US-CITICONNECT-WL-XML-KZ':
            case 'US-CITICONNECT-WL-XML-KE':
            case 'US-CITICONNECT-WL-XML-KR':
            case 'US-CITICONNECT-WL-XML-KW':
            case 'US-CITICONNECT-WL-XML-LA':
            case 'US-CITICONNECT-WL-XML-LB':
            case 'US-CITICONNECT-WL-XML-LI':
            case 'US-CITICONNECT-WL-XML-LT':
            case 'US-CITICONNECT-WL-XML-LU':
            case 'US-CITICONNECT-WL-XML-MW':
            case 'US-CITICONNECT-WL-XML-MY':
            case 'US-CITICONNECT-WL-XML-MT':
            case 'US-CITICONNECT-WL-XML-MU':
            case 'US-CITICONNECT-WL-XML-MX':
            case 'US-CITICONNECT-WL-XML-ME':
            case 'US-CITICONNECT-WL-XML-MA':
            case 'US-CITICONNECT-WL-XML-MZ':
            case 'US-CITICONNECT-WL-XML-MM':
            case 'US-CITICONNECT-WL-XML-NA':
            case 'US-CITICONNECT-WL-XML-NP':
            case 'US-CITICONNECT-WL-XML-NZ':
            case 'US-CITICONNECT-WL-XML-NE':
            case 'US-CITICONNECT-WL-XML-NL':
            case 'US-CITICONNECT-WL-XML-NG':
            case 'US-CITICONNECT-WL-XML-NO':
            case 'US-CITICONNECT-WL-XML-OM':
            case 'US-CITICONNECT-WL-XML-PK':
            case 'US-CITICONNECT-WL-XML-PG':
            case 'US-CITICONNECT-WL-XML-PE':
            case 'US-CITICONNECT-WL-XML-PL':
            case 'US-CITICONNECT-WL-XML-PT':
            case 'US-CITICONNECT-WL-XML-QA':
            case 'US-CITICONNECT-WL-XML-RO':
            case 'US-CITICONNECT-WL-XML-RU':
            case 'US-CITICONNECT-WL-XML-RW':
            case 'US-CITICONNECT-WL-XML-SA':
            case 'US-CITICONNECT-WL-XML-SN':
            case 'US-CITICONNECT-WL-XML-RS':
            case 'US-CITICONNECT-WL-XML-SC':
            case 'US-CITICONNECT-WL-XML-SG':
            case 'US-CITICONNECT-WL-XML-SK':
            case 'US-CITICONNECT-WL-XML-SI':
            case 'US-CITICONNECT-WL-XML-ZA':
            case 'US-CITICONNECT-WL-XML-ES':
            case 'US-CITICONNECT-WL-XML-LK':
            case 'US-CITICONNECT-WL-XML-SE':
            case 'US-CITICONNECT-WL-XML-CH':
            case 'US-CITICONNECT-WL-XML-TZ':
            case 'US-CITICONNECT-WL-XML-TW':
            case 'US-CITICONNECT-WL-XML-TH':
            case 'US-CITICONNECT-WL-XML-TG':
            case 'US-CITICONNECT-WL-XML-TT':
            case 'US-CITICONNECT-WL-XML-TN':
            case 'US-CITICONNECT-WL-XML-UG':
            case 'US-CITICONNECT-WL-XML-AE':
            case 'US-CITICONNECT-WL-XML-GB':
            case 'US-CITICONNECT-WL-XML-US':
            case 'US-CITICONNECT-WL-XML-UY':
            case 'US-CITICONNECT-WL-XML-UZ':
            case 'US-CITICONNECT-WL-XML-VN':
            case 'US-CITICONNECT-WL-XML-ZM':
            case 'US-CITICONNECT-WL-XML-AL':
            case 'US-CITICONNECT-WL-XML-AO':
            case 'US-CITICONNECT-WL-XML-KH':
            case 'US-CITICONNECT-WL-XML-GE':
            case 'US-CITICONNECT-WL-XML-LV':
            case 'US-CITICONNECT-WL-XML-MC':
            case 'US-CITICONNECT-WL-XML-MN':
            case 'US-CITICONNECT-WL-XML-SZ':
            case 'US-CITICONNECT-WL-XML-TR':
            case 'US-CITICONNECT-WL-XML-AG':
            case 'US-CITICONNECT-WL-XML-MO':                //SKS_VSTS_13720
            case 'US-CITICONNECT-WL-XML-BB':                //SKS#DevOps:16237
            case 'US-CITICONNECT-WL-XML-ML':                //SKS#DevOps:16237
            case 'US-CITICONNECT-WL-XML-FJ':
            case 'US-CITICONNECT-WL-XML-HT':
            case 'US-CITICONNECT-WL-XML-NI':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        intBankName  = true;
                        break;
                    default:
                        intSwiftCode = '';
                        intBankId = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-BY':
            case 'US-CITICONNECT-WL-XML-HN':
            case 'US-CITICONNECT-WL-XML-MD':
            case 'US-CITICONNECT-WL-XML-MR':
            case 'US-CITICONNECT-WL-XML-BO':
            case 'US-CITICONNECT-WL-XML-IS':
            case 'US-CITICONNECT-WL-XML-BA':        //SKS#DevOps:16138
            case 'US-CITICONNECT-WL-PPW-XML':       //SKS#VSTS:14271            
            case 'US-CITICONNECT-WL-XML-KM':    //SKS#DevOps:16946
            case 'US-CITICONNECT-WL-XML-GM':    //SKS#DevOps:17970
            case 'US-CITICONNECT-WL-XML-MG':    //SKS#DevOps:16946
                intSwiftCode = '';
                intBankId = '';
                break;
        }

        if(intSwiftCode || intBankId)
        {
            //          2.71: IntrmyAgt1
            nodeIntrmyAgt1 = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt1'));
    
            //              FinInstnId
            nodeFinInstnId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(intSwiftCode)
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail_Intermediary.IntBankSwift, 0, false);  //SKS_FDD_10590
            }
            else if(intBankId)       //SKG#VSTS:10575
            {
                //                  ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                country = this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId);

                switch(country)
                {
                    case 'AU':
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', '//AU' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6));
                        break;
                    case 'CA':
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', '//CC' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 9));
                        break;
                    case 'US':
                    case 'PR':
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', '//FW' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 9));
                        break;
                    case 'GH':
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', '//GH' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6));
                        break;
                    case 'ZA':
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', '//ZA' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6));
                        break;
                    case 'ZM':
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', '//ZM' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6));
                        break;
                    case 'GB':
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', '//SC' + subStr(mSKS_EFT_FileDetail_Intermediary.IntBankId, 1, 6));
                        break;
                    default:
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail_Intermediary.IntBankId, 0, false);
                        break;
                }
            }
    
            if(intBankName && mSKS_EFT_FileDetail_Intermediary.IntBankName)
            {
                //                  Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankName), 35, false);   //SKS_FDD_10590
            }
            if(intPstlAddr)
            {
                //                  PstlAdr
                this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId, mSKS_EFT_FileDetail_Intermediary.IntBankAddr + '' + mSKS_EFT_FileDetail_Intermediary.IntBankAddr2, '', mSKS_EFT_FileDetail_Intermediary.IntBankCity);   //SKS_FDD_10590
            }

            if(intBankBranch && mSKS_EFT_FileDetail_Intermediary.IntBankBranch)        //SKS_FDD_10590
            {
                //              BrnchId
                nodeBrnchId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('BrnchId'));
                //              Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBrnchId, 'Id', this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankBranch));       //SKS_FDD_10590
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt1Acct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_IntrmyAgt1Acct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.72: IntrmyAgt1Acct
        //              Id
        //                  OthrId
        //                      Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeIntrmyAgt1Acct;
        XmlElement nodeIntrmyAgt1AcctId;
        XmlElement nodeIntrmyAgt1AcctIdOthr;
    
        boolean printAgt1Acct;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-WL-XML-PY':
            case 'US-CITICONNECT-WL-XML-BR':
            case 'US-CITICONNECT-WL-XML-CA':
            case 'US-CITICONNECT-WL-XML-CR':
            case 'US-CITICONNECT-WL-XML-GH':
            case 'US-CITICONNECT-WL-XML-DO':
            case 'US-CITICONNECT-WL-XML-DZ':
            case 'US-CITICONNECT-WL-XML-AU':
            case 'US-CITICONNECT-WL-XML-AT':
            case 'US-CITICONNECT-WL-XML-BS':
            case 'US-CITICONNECT-WL-XML-BH':
            case 'US-CITICONNECT-WL-XML-BD':
            case 'US-CITICONNECT-WL-XML-BE':
            case 'US-CITICONNECT-WL-XML-BJ':
            case 'US-CITICONNECT-WL-XML-BM':
            case 'US-CITICONNECT-WL-XML-BW':
            case 'US-CITICONNECT-WL-XML-BN':
            case 'US-CITICONNECT-WL-XML-BG':
            case 'US-CITICONNECT-WL-XML-BF':
            case 'US-CITICONNECT-WL-XML-CM':
            case 'US-CITICONNECT-WL-XML-TD':
            case 'US-CITICONNECT-WL-XML-CL':
            case 'US-CITICONNECT-WL-XML-CN':
            case 'US-CITICONNECT-WL-XML-CO':
            case 'US-CITICONNECT-WL-XML-CD':
            case 'US-CITICONNECT-WL-XML-CI':
            case 'US-CITICONNECT-WL-XML-HR':
            case 'US-CITICONNECT-WL-XML-CY':
            case 'US-CITICONNECT-WL-XML-CZ':
            case 'US-CITICONNECT-WL-XML-DK':
            case 'US-CITICONNECT-WL-XML-EG':
            case 'US-CITICONNECT-WL-XML-EE':
            case 'US-CITICONNECT-WL-XML-ET':
            case 'US-CITICONNECT-WL-XML-FI':
            case 'US-CITICONNECT-WL-XML-FR':
            case 'US-CITICONNECT-WL-XML-GA':
            case 'US-CITICONNECT-WL-XML-DE':
            case 'US-CITICONNECT-WL-XML-GR':
            case 'US-CITICONNECT-WL-XML-GT':
            case 'US-CITICONNECT-WL-XML-GW':
            case 'US-CITICONNECT-WL-XML-GY':
            case 'US-CITICONNECT-WL-XML-HK':
            case 'US-CITICONNECT-WL-XML-HU':
            case 'US-CITICONNECT-WL-XML-ID':
            case 'US-CITICONNECT-WL-XML-IE':
            case 'US-CITICONNECT-WL-XML-IL':
            case 'US-CITICONNECT-WL-XML-IT':
            case 'US-CITICONNECT-WL-XML-JP':
            case 'US-CITICONNECT-WL-XML-JO':
            case 'US-CITICONNECT-WL-XML-KZ':
            case 'US-CITICONNECT-WL-XML-KE':
            case 'US-CITICONNECT-WL-XML-KR':
            case 'US-CITICONNECT-WL-XML-KW':
            case 'US-CITICONNECT-WL-XML-LA':
            case 'US-CITICONNECT-WL-XML-LB':
            case 'US-CITICONNECT-WL-XML-LI':
            case 'US-CITICONNECT-WL-XML-LT':
            case 'US-CITICONNECT-WL-XML-LU':
            case 'US-CITICONNECT-WL-XML-MW':
            case 'US-CITICONNECT-WL-XML-MY':
            case 'US-CITICONNECT-WL-XML-MT':
            case 'US-CITICONNECT-WL-XML-MU':
            case 'US-CITICONNECT-WL-XML-MX':
            case 'US-CITICONNECT-WL-XML-ME':
            case 'US-CITICONNECT-WL-XML-MA':
            case 'US-CITICONNECT-WL-XML-MZ':
            case 'US-CITICONNECT-WL-XML-MM':
            case 'US-CITICONNECT-WL-XML-NA':
            case 'US-CITICONNECT-WL-XML-NL':
            case 'US-CITICONNECT-WL-XML-NP':
            case 'US-CITICONNECT-WL-XML-NZ':
            case 'US-CITICONNECT-WL-XML-NE':
            case 'US-CITICONNECT-WL-XML-NO':
            case 'US-CITICONNECT-WL-XML-OM':
            case 'US-CITICONNECT-WL-XML-PG':
            case 'US-CITICONNECT-WL-XML-PL':
            case 'US-CITICONNECT-WL-XML-PT':
            case 'US-CITICONNECT-WL-XML-QA':
            case 'US-CITICONNECT-WL-XML-RO':
            case 'US-CITICONNECT-WL-XML-RW':
            case 'US-CITICONNECT-WL-XML-SA':
            case 'US-CITICONNECT-WL-XML-SN':
            case 'US-CITICONNECT-WL-XML-RS':
            case 'US-CITICONNECT-WL-XML-SC':
            case 'US-CITICONNECT-WL-XML-SG':
            case 'US-CITICONNECT-WL-XML-SK':
            case 'US-CITICONNECT-WL-XML-SI':
            case 'US-CITICONNECT-WL-XML-ZA':
            case 'US-CITICONNECT-WL-XML-ES':
            case 'US-CITICONNECT-WL-XML-LK':
            case 'US-CITICONNECT-WL-XML-SE':
            case 'US-CITICONNECT-WL-XML-CH':
            case 'US-CITICONNECT-WL-XML-TZ':
            case 'US-CITICONNECT-WL-XML-TW':
            case 'US-CITICONNECT-WL-XML-TH':
            case 'US-CITICONNECT-WL-XML-TG':
            case 'US-CITICONNECT-WL-XML-TT':
            case 'US-CITICONNECT-WL-XML-TN':
            case 'US-CITICONNECT-WL-XML-UG':
            case 'US-CITICONNECT-WL-XML-AE':
            case 'US-CITICONNECT-WL-XML-GB':
            case 'US-CITICONNECT-WL-XML-US':
            case 'US-CITICONNECT-WL-XML-UY':
            case 'US-CITICONNECT-WL-XML-UZ':
            case 'US-CITICONNECT-WL-XML-VN':
            case 'US-CITICONNECT-WL-XML-ZM':
            case 'US-CITICONNECT-WL-XML-AL':
            case 'US-CITICONNECT-WL-XML-AO':
            case 'US-CITICONNECT-WL-XML-KH':
            case 'US-CITICONNECT-WL-XML-GE':
            case 'US-CITICONNECT-WL-XML-LV':
            case 'US-CITICONNECT-WL-XML-MC':
            case 'US-CITICONNECT-WL-XML-MN':
            case 'US-CITICONNECT-WL-XML-SZ':
            case 'US-CITICONNECT-WL-XML-TR':
            case 'US-CITICONNECT-WL-XML-FJ':
            case 'US-CITICONNECT-WL-XML-AG':
            case 'US-CITICONNECT-WL-XML-BO':
            case 'US-CITICONNECT-WL-XML-MO':
            case 'US-CITICONNECT-WL-XML-HT':
            case 'US-CITICONNECT-WL-XML-NI':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        printAgt1Acct = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-RU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.PaymentCurrencyCode != 'RUB')
                        {
                            printAgt1Acct = true;
                        }
                        break;
                }
                break;
        }
        if(printAgt1Acct && mSKS_EFT_FileDetail_Intermediary.IntBankAcct)
        {
        
            //          2.71: IntrmyAgt1Acct
            nodeIntrmyAgt1Acct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt1Acct'));
                
            //              Id
            nodeIntrmyAgt1AcctId = nodeIntrmyAgt1Acct.appendChild(xmlDoc.createElement('Id'));
    
            //                  Othr
            nodeIntrmyAgt1AcctIdOthr = nodeIntrmyAgt1AcctId.appendChild(xmlDoc.createElement('Othr'));

            //                      Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeIntrmyAgt1AcctIdOthr, 'Id', mSKS_EFT_FileDetail_Intermediary.IntBankAcct);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_PmtTpInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.31 PmtTpInf
        //              LclInstrm
        //                  Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePmtTpInf;
        XmlElement nodeLclInstrm;
        XmlElement nodeCtgyPurp;
        boolean pmtTpInf = false;
        boolean printPrtry = false;
        boolean printCd;
        boolean printCtgyPurp = false;
        boolean printLclInstrm = false;
        str value,ctgyPurpValue;
               
        
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-PR':
                switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
                {
                    case 'CCD':
                    case 'PPD':
                        printLclInstrm = true;
                        pmtTpInf = true;
                        printCd = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-AE':
                {
                    ctgyPurpValue = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CtgyPurpPrtry', mSKS_EFT_FileDetail.RecId));

                    if(ctgyPurpValue)
                    {
                        printCtgyPurp=true;
                    }
                }
                break;
            case 'US-CITICONNECT-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
                {
                    case 'WLW-571':
                        printLclInstrm = true;
                        pmtTpInf = true;
                        printPrtry = true;
                        break;
                    case 'FT-499':
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CtgyPurpPrtry', mSKS_EFT_FileDetail.RecId));                       

                        if(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId == 'ARE' && value)
                        {
                            pmtTpInf = true;
                            printCtgyPurp = true;
                        }
                        break;
                }
                break;
        }
        if(pmtTpInf)
        {
            //          2.31 PmtTpInf
            nodePmtTpInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('PmtTpInf'));
    
            if(printLclInstrm)
            {
                if(printPrtry)
                {
                    //              LclInstrm
                    nodeLclInstrm = nodePmtTpInf.appendChild(xmlDoc.createElement('LclInstrm'));

                    //                  Prtry
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Prtry', 'CITI571');
                }
                else if(printCd)
                {
                    //              LclInstrm
                    nodeLclInstrm = nodePmtTpInf.appendChild(xmlDoc.createElement('LclInstrm'));

                    //                  Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Cd', mSKS_EFT_FileFormatPaymSpec.PaymSpec, 0, false);
                }
            }
            if(printCtgyPurp)
            {
                nodePmtTpInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('PmtTpInf'));
                nodeCtgyPurp= nodePmtTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Prtry', '/REF/' + value);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Purp</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Purp(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.88: Purp
        //              Prtry
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeId;
        str purp, docTypeCd, value;
        boolean purpCd = false;
        boolean purpPrtry = true;
        
        purp  = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Purp', mSKS_EFT_FileDetail.RecId));  //SKS_FDD_10590
        docTypeCd = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DocTypeCd', mSKS_EFT_FileDetail.RecId));  //SKS_FDD_10590
        
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-AE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT574:
                        value = purp;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        value = purp;
                        break;
                    case #DFT441:
                        value = docTypeCd;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DE397:
                    case #PRL398:
                        value = purp;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-BR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                    case #DOM441:
                    case #DL454:
                    case #TLPAY451:
                        value = purp;
                        break;
                    case #RT453:
                        value = purp;
                        purpCd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        value = purp;
                        break;
                    case #DFT441:
                        value = docTypeCd;
                        break;
                    case #CHK455:
                        value = docTypeCd;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PLG400:
                        value = purp;
                        purpCd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        value = purp;
                        break;
                    case #DFT441:
                        value = docTypeCd;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        value = purp;
                        break;
                    case #DFT441:
                        value = docTypeCd;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA848:
                        value = purp;
                        purpCd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        value = purp;
                        break;
                    case #DFT441:
                        value = docTypeCd;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-EC':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        value = purp;
                        break;
                    case #DFT441:
                    case 'CHK-468':
                        value = docTypeCd;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-GB':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA848:
                        value = purp;
                        purpCd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-GT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        value = purp;
                        break;
                    case #DFT441:
                        value = docTypeCd;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ATPAY403:
                        value = purp;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM441:
                        value = purp;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH964:
                    case #DFT555:
                    case #CBFT574:
                        value = purp;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT410:
                    case #ACH410:
                        value = purp;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IL':                   //SKS#DevOps:16141
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT392:
                        value = purp;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-MX':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        value = purp;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM441:
                    case #CHK478:
                        value = purp;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        value = purp;
                        break;
                    case #DFT441:
                    case 'CHK-484':
                        value = docTypeCd;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK487:
                        value = docTypeCd;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-RU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM548:
                        value = purp;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #GIRO421:
                    case #PRL422:
                        value = purp;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA938:
                        value = purp;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SV':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        value = purp;
                        break;
                    case #DFT441:
                    case 'CHK-469':
                        value = docTypeCd;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ATPAY424:
                    case #CHK425:
                        value = purp;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT574:
                        value = purp;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT574:
                    case #DOM555:
                        value = purp;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CTX942:
                        value = purp;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-UY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                    case #CHK493:
                    case #CHK494:
                    case #DFT441:
                        if(docTypeCd)
                        {
                            value = docTypeCd;
                        }
                        else
                        {
                            value = '00';
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-VE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM441:
                        value = purp;
                        break;
                }
                break;
            default:
                value = docTypeCd;
                break;
        }

        if(value)
        {
            nodeId = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Purp'));

            if(purpCd)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeId, 'Cd', value);
            }
            else if(purpPrtry)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeId, 'Prtry', value);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RgltryRptg</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RgltryRptg(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.89: RgltryRptg
        //              Dtls
        //                  Inf
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeRgltryRptg;
        XmlElement nodeDtls;
        str value, cd, purposeCd, refNum, loanRefNum, paymentCtgycd, typeOfPaym, typeOfPayment;
        str shippingLoc, origin, purpFunds;
        str codeValue, infValue;
        int i, pos, length;
    
        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CenBankCode', mSKS_EFT_FileDetail.RecId));  //SKS_FDD_10590
        cd = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('cd', mSKS_EFT_FileDetail.RecId));                                     //SKG#VSTS:7453     //SKS_FDD_10590
        paymentCtgycd = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PaymentCtgyCd', mSKS_EFT_FileDetail.RecId));               //SKG#VSTS:10574        //SKS_FDD_10590
        typeOfPaym = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TypeOfPaym', mSKS_EFT_FileDetail.RecId));                     //SKG#VSTS:11518        //SKS_FDD_10590
        typeOfPayment = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TypeOfPayment', mSKS_EFT_FileDetail.RecId));               //SKG#VSTS:11518        //SKS_FDD_10590

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-AE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DFT574:
                    case #CBFT574:
                        codeValue = cd;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-MY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT392:
                    case #BKT393:
                        this.getBankPurposeCode();
                        purposeCd = subStr(bankCodeText, 1, 140);
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-RU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM548:
                        codeValue = cd;
                        infValue  = value;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        codeValue = cd;
                        infValue  = typeOfPaym;
                        break;
                    case #BKT547:
                        infValue = typeOfPaym;
                        break;
                    case #CBFT574:
                        infValue = typeOfPayment;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-ZA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE574:
                        codeValue = paymentCtgycd;
                        if(codeValue)
                        {
                            refNum = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RefNum', mSKS_EFT_FileDetail.RecId));     //SKS_FDD_10590
                            loanRefNum = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LoanRefNum', mSKS_EFT_FileDetail.RecId));     //SKS_FDD_10590
    
                            if(refNum || loanRefNum)
                            {
                                if (paymentCtgycd == '10301' || paymentCtgycd == '10302' || paymentCtgycd == '10303' || paymentCtgycd == '10304' || paymentCtgycd == '10305' || paymentCtgycd == '10306' ||
                                    paymentCtgycd == '10307' || paymentCtgycd == '10308' || paymentCtgycd == '10309' || paymentCtgycd == '10310' || paymentCtgycd == '10311' || paymentCtgycd == '10500' ||
                                    paymentCtgycd == '10600' || paymentCtgycd == '10101' || paymentCtgycd == '10102' || paymentCtgycd == '10103' || paymentCtgycd == '10104' || paymentCtgycd == '10105' ||
                                    paymentCtgycd == '10106' || paymentCtgycd == '10107' || paymentCtgycd == '10108' || paymentCtgycd == '10109' || paymentCtgycd == '10110' || paymentCtgycd == '10111')
                                {
                                    if (paymentCtgycd == '10301' || paymentCtgycd == '10302' || paymentCtgycd == '10303' || paymentCtgycd == '10304' || paymentCtgycd == '10305' || paymentCtgycd == '10306' ||
                                        paymentCtgycd == '10307' || paymentCtgycd == '10308' || paymentCtgycd == '10309' || paymentCtgycd == '10310' || paymentCtgycd == '10311' || paymentCtgycd == '10500' || paymentCtgycd == '10600')
                                    {
                                        infValue = refNum;
                                        length   = 18;
                                    }
                                    else
                                    {
                                        infValue = refNum;
                                    }
                                }
    
                                if (paymentCtgycd == '10600' || paymentCtgycd == '30904' || paymentCtgycd == '30905' || paymentCtgycd == '30906' || paymentCtgycd == '30907' ||
                                    paymentCtgycd == '80100' || paymentCtgycd == '80200' || paymentCtgycd == '80300' || paymentCtgycd == '80400')
                                {
                                    infValue = loanRefNum;
                                    length   = 14;
                                }
                            }
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE392:
                        shippingLoc = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Origin', mSKS_EFT_FileDetail.RecId));
                        origin      = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ShippingLocation', mSKS_EFT_FileDetail.RecId));
                        purpFunds   = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpFunds', mSKS_EFT_FileDetail.RecId));
                        
                        if(purpFunds)
                        {
                            infValue = '/MOF/' + mRemittanceCountryRegionId + ' ' + purpFunds;
                        }
                        else if(shippingLoc || origin)
                        {
                            infValue = '/MOF/' + mRemittanceCountryRegionId + ' '+'0001'+' '+ origin +' '+ shippingLoc;
                        }
                        break;
                }
                break;
            default:
                infValue  = value;
                break;
        }

        if(codeValue || purposeCd || infValue)
        {
            //                      RgltryRptg
            nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));
            
            //                              Dtls
            nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

            if(codeValue)
            {
                //                  2.59: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Cd', codeValue, 0, false);
            }
            if(purposeCd)
            {
                for(i=0; i<4; i++)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', subStr(purposeCd, pos, 35), 0, false);
                    pos = pos+35;
                }
            }
            if(infValue)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', infValue, length, false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RltdRmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RltdRmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.91: RltdRmtInf
        //              2.93: RmtLctnMtd
        //              2.94: RmtLctnElctrncAdr
        //------------------------------------------------------------------------------------------------------
        XmlElement              nodeRltdRmtInf;
        str value, address;
        boolean printRmtId;
        XmlElement              nodeRmtLctnPstlAdr;
        XmlElement              nodeAdr;
        str SpecHanCodes,AddrLogo,AdvTempNo; //DevOps19140
        boolean printAddr;
    
        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RmtLctnMtd', mSKS_EFT_FileDetail.RecId));        //SKS_FDD_10590
        SpecHanCodes = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('SpecHanCodes', mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookup));  // DevOps 19140
        AddrLogo = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('AddrLogo', mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookup)); //DevOps 19140
        AdvTempNo = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('AdvTempNo', mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookup));//DevOps19140

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
                {
                    case 'CHK-19':
                        value = '/ADVCD/'+SpecHanCodes+'/'+AddrLogo+'/'+AdvTempNo; //DevOps19140
                        printRmtId = true;
                        break;
                    case 'CHK19CAMAL':
                        value = '/ADVCD///TMP04';
                        printRmtId = true;
                        break;
                    case 'CHK19USFED':
                        value = '/ADVCD/01//TMP01';
                        printRmtId = true;
                        break;
                    case 'CHK19CAFED':
                        value = '/ADVCD/01//TMP04';
                        printRmtId = true;
                        break;
                    case 'CHKUSFED02':
                        value = '/ADVCD/02//TMP01';
                        printRmtId = true;
                        break;
                    case 'CHKUSFED03':
                        value = '/ADVCD/03//TMP01';
                        printRmtId = true;
                        break;
                    case 'CHKCAFED02':    //SKS_VSTS_13397
                        printRmtId = true;
                        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK19)
                        {
                            value = '/ADVCD/02//TMP04';
                        }
                        else
                        {
                            value = '/ADVCD/02//TMP03';
                        }
                        break;
                    case 'CHKCAFED03':                  //SKS_VSTS_13397
                        printRmtId = true;
                        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK19)
                        {
                            value = '/ADVCD/03//TMP04';
                        }
                        else
                        {
                            value = '/ADVCD/03//TMP03';
                        }
                        break;
                    case 'CHK20CAMAL':                      //SKS_VSTS_13397
                        value = '/ADVCD///TMP03';
                        break;
                    case 'CHK20CAFED':                      //SKS_VSTS_13397
                        value = '/ADVCD/01//TMP03';
                        break;
                    case 'FT-499':
                    case #USFCP821:
                        printAddr = true;
                        break;
                }
                break;
        }
            
        if(value == 'FAX')      //SKS_FDD_10590, SKS#VSTS:13158
        {
            if(mSKS_EFT_FileDetail_VendAddress.Locator)
            {
                address = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.Locator); //SKS_FDD_10590
            }
        }
        else if(value == 'FAXI' || value == 'FAX')
        {
            if(mSKS_EFT_FileDetail_VendAddress.Fax)
            {
                address = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.Fax); //SKS_FDD_16447
            }
        }
    
        if(address || value || printAddr)
        {
            //          2.91: RltdRmtInf
            nodeRltdRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RltdRmtInf'));
    
            //              2.93: RmtLctnMtd
            if(printRmtId)
            {
                //              2.93: RmtLctnMtd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRltdRmtInf, 'RmtId', value, 0, false);
            }
            else if(value)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRltdRmtInf, 'RmtLctnMtd', value, 0, false);
            }
            if(address)
            {
                //              2.94: RmtLctnElctrncAdr
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRltdRmtInf, 'RmtLctnElctrncAdr', address, 0, false);
            }

            if(printAddr)//DevOps19219
            {
                //              2.95: RmtLctnPstlAdr
                nodeRmtLctnPstlAdr = nodeRltdRmtInf.appendChild(xmlDoc.createElement('RmtLctnPstlAdr'));
                
                //                      Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtLctnPstlAdr, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName), 35);
                
                //                      Adr
                nodeAdr = nodeRmtLctnPstlAdr.appendChild(xmlDoc.createElement('Adr'));
                
                //                          Ctry
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'Ctry', this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId));

                if(mSKS_EFT_FileDetail_VendAddress.BeneAddr)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'AdrLine',mSKS_EFT_FileDetail_VendAddress.BeneAddr,false);
                }
                if(mSKS_EFT_FileDetail_VendAddress.BeneAddr2)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAdr, 'AdrLine',mSKS_EFT_FileDetail_VendAddress.BeneAddr2,false);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
    
        
        boolean printstrd;
        boolean printRmtInf = true;
        boolean printRmtInfUstrd;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BPAY889:
                        printRmtInf = false;
                        break;
                    case #CB392:
                    case #PRL398:
                    case #CHK396:
                    case #DOM391:
                        printstrd = true;
                        break;
                    default:
                        printRmtInfUstrd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-BE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        printstrd = true;
                        break;
                    default:
                        printRmtInfUstrd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH780:
                        printRmtInf = false;
                        break;
                    case #CHK20:
                    case #CPS706:
                        printstrd = true;
                        break;
                    default:
                        printRmtInfUstrd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CN':
                printRmtInfUstrd = true;
                break;
            case 'US-CITICONNECT-XML-CZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA:
                        printstrd = true;
                        break;
                    default:
                        printRmtInfUstrd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA848:
                    case #SEPA939:
                        printstrd = true;
                        break;
                    default:
                        printRmtInfUstrd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-GB':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA848:
                    case #SEPA939:
                        printstrd = true;
                        break;
                    default:
                        printRmtInfUstrd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HK':
                printRmtInfUstrd = true;
                break;
            case 'US-CITICONNECT-XML-IN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DD437:
                    case #DOM540:
                    case #DFT914:
                    case #CDT862:
                        printstrd = true;
                        break;
                    default:
                        printRmtInfUstrd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK418:
                        printstrd = true;
                        break;
                    default:
                        printRmtInfUstrd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #VAT984:
                        printRmtInf = false;
                        break;
                    case #SEPA:
                        printstrd = true;
                        break;
                    default:
                        printRmtInfUstrd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-KR':
                printRmtInfUstrd = true;
                break;
            case 'US-CITICONNECT-XML-MY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB392:
                        printstrd = true;
                        break;
                    default:
                        printRmtInfUstrd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_KID:
                        printstrd = true;
                        break;
                    default:
                        printRmtInfUstrd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB392:
                    case #CHECK416:
                    case #DOM391:
                    case #BKT393:
                        printstrd = true;
                        break;
                    default:
                        printRmtInfUstrd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_PG:
                    case #ACH_BG:
                        printstrd = true;
                        break;
                    default:
                        printRmtInfUstrd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SG':
                printRmtInfUstrd = true;
                break;
            case 'US-CITICONNECT-XML-TR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SSK853:
                        printRmtInf = false;
                        break;
                    default:
                        printRmtInfUstrd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ATPAY424:
                    case #CHK425:
                    case #PRL426:
                        printstrd = true;
                        break;
                    default:
                        printRmtInfUstrd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TW':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB392:
                    case #IBRS429:
                    case #IBRS430:
                    case #CHECK427:
                    case #BKT393:
                        printstrd = true;
                        break;
                    default:
                        printRmtInfUstrd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACHCCD:
                    case #ACHPPD:
                    case #WLW571:
                    case #CHK585:
                        printRmtInf = false;
                        break;
                    case #ACHCTX:
                    case #CCDP14:
                    case #CTX17:
                    case #CHK19:
                    case #CTX942:
                        printstrd = true;
                        break;
                    default:
                        printRmtInfUstrd = true;
                        break;
                }
                break;
            default:
                printRmtInfUstrd = true;
                break;
        }

        if(printRmtInf)
        {
            if(printstrd)
            {
                this.node_CdtTrfTxInf_RmtInf_Strd(_nodeCdtTrfTxInf);
            }
            else if(printRmtInfUstrd)
            {
                this.node_CdtTrfTxInf_RmtInf_Ustrd(_nodeCdtTrfTxInf);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_RfrdDocInf</Name>
				<Source><![CDATA[
    private void node_CdtTrfTxInf_RmtInf_RfrdDocInf(XmlElement _nodeStrd, SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //------------------------------------------------------------------------------------------------------
        //              2.101: RfrdDocInf
        //                  2.102: Tp
        //                      2.103: CdOrPrtry
        //                          2.104: Cd
        //                  2.107: Number
        //                  2.108: RltdDt
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeRfrdDocInf;
        XmlElement nodeTp;
        XmlElement nodeCdOrPrtry;
    
        //              2.101: RfrdDocInf
        nodeRfrdDocInf = _nodeStrd.appendChild(xmlDoc.createElement('RfrdDocInf'));
    
        //                  2.102: Tp
        nodeTp = nodeRfrdDocInf.appendChild(xmlDoc.createElement('Tp'));
    
        //                      2.103: CdOrPrtry
        nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));
    
        //                          2.104: Cd
        if(_invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur <= 0)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'CINV');

            //                  2.107: Number
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceNumber));

            //                  2.108: RltdDt
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(_invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'CREN');

            //                  2.107: Number
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceNumber));

            //                  2.108: RltdDt
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(_invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_Strd</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf_Strd(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //------------------------------------------------------------------------------------------------------
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        XmlElement nodeRmtInf;
        XmlElement nodeStrd;
        XmlElement nodeRfrdDocAmt;
        XmlElement nodeCdtrRefInf;
        XmlElement nodeTp;
        XmlElement nodeCdOrPrtry;
        XmlElement nodeRfrdDocInf;
        XmlElement currentElement;
        str fik, spclHandlgCd, value;
        boolean firstRec = true;
        LedgerJournalTransTxt   description;
        boolean printCdtrRefInf;
        boolean printRmtInfUstrd;
        boolean printRfrdDocInf;
    
        EventHandlerResult result = new EventHandlerResult();

        this.node_CdtTrfTxInf_RmtInf_Strd_delegate(_nodeCdtTrfTxInf, mSKS_EFT_FileDetail, mSKS_EFT_FileFormatPaymSpec, mSKS_EB_CharacterReplacement, xmldoc, result);

        if(!result.result())
        {
            while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
            {
                switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
                {
                    case 'US-CITICONNECT-XML-BE':
                        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                        {
                            case #ACH_SEPA:
                                printCdtrRefInf = true;
                                break;
                        }
                        break;
                    case 'US-CITICONNECT-XML-SE':
                        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                        {
                            case #ACH_PG:
                            case #ACH_BG:
                                printCdtrRefInf = true;
                                printRmtInfUstrd = true;
                                break;
                        }
                        break;
                    case 'US-CITICONNECT-XML-NO':
                        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                        {
                            case #ACH_KID:
                                printCdtrRefInf = true;
                                break;
                        }
                        break;
                    case 'US-CITICONNECT-XML-DE':
                        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                        {
                            case #ACH_SEPA:
                            case #SEPA848:
                            case #SEPA939:
                                printCdtrRefInf = true;
                                break;
                        }
                        break;
                    case 'US-CITICONNECT-XML-GB':
                        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                        {
                            case #ACH_SEPA:
                            case #SEPA848:
                            case #SEPA939:
                                printCdtrRefInf = true;
                                break;
                        }
                        break;
                    case 'US-CITICONNECT-XML-CZ':
                        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                        {
                            case #SEPA:
                                printCdtrRefInf = true;
                                break;
                        }
                        break;
                    case 'US-CITICONNECT-XML-PL':
                        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                        {
                            case #SEPA:
                                printCdtrRefInf = true;
                                break;
                        }
                        break;
                    case 'US-CITICONNECT-XML-US':
                        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                        {
                            case #CHK19:
                            case #CHK20:
                                printRfrdDocInf = true;
                                break;
                        }
                        break;
                    case 'US-CITICONNECT-XML-CA':           //SKS#DevOps:16756
                        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                        {
                            case #CHK19:
                                printRfrdDocInf = true;
                                break;
                            case #CHK20:
                                printRfrdDocInf = true;
                                spclHandlgCd = SKS_EFT_Format::getCodelookupvalue('SpclHndlgCode', mSKS_EFT_FileDetail.RecId);      //SKS#DevOps:16756
                                value = SKS_EFT_Format::getCodelookupvalue('FormCode', mSKS_EFT_FileDetail.RecId);
                                break;
                        }
                        break;
                }
                if(invSKS_EFT_FileDetail.InvoiceNumber ||(invSKS_EFT_FileDetail.PaymId && printCdtrRefInf))        //SKG#VSTS:14062
                {
                    if(firstRec)
                    {
                        //          2.98: RmtInf
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                        firstRec = false;
                    }
    
                    //              2.100: Strd
                    nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));
    
                    if(invSKS_EFT_FileDetail.PaymId && printCdtrRefInf)         //SKG#VSTS:14062
                    {
                        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                        {
                            case #ACH_SEPA:
                                fik = subStr(invSKS_EFT_FileDetail.PaymId, 1, 12);              //SKG#VSTS:14062
                                break;
                            case #ACH_PG:
                            case #ACH_BG:
                            case #ACH_KID:                                                      //SKG#VSTS:7131
                                fik = subStr(invSKS_EFT_FileDetail.PaymId, 1, 25);              //SKG#VSTS:14062
                                break;
                            case #SEPA848:
                            case #SEPA939:
                                fik = subStr(invSKS_EFT_FileDetail.PaymId, 1, 35);              //SKG#VSTS:14062
                                break;
                            case #SEPA:                                                         //SKG#VSTS:12473
                                fik = subStr(invSKS_EFT_FileDetail.PaymId, 1, 35);              //SKG#VSTS:14062
                                break;
                            default:
                                fik = invSKS_EFT_FileDetail.PaymId;                             //SKG#VSTS:14062
                                break;
                        }
    
                        //            2.120: CdtrRefInf
                        nodeCdtrRefInf = nodeStrd.appendChild(xmlDoc.createElement('CdtrRefInf'));
    
                        //              2.121: Tp
                        nodeTp = nodeCdtrRefInf.appendChild(xmlDoc.createElement('Tp'));
    
                        //                  2.122: CdOrPrtry
                        nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));
    
                        //                      2.123: Cd
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'SCOR');
    
                        //               2.126: Ref
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', this.CharacterReplacement(fik));
                    }
                    else
                    {
                        //              2.101: RfrdDocInf
                        this.node_CdtTrfTxInf_RmtInf_RfrdDocInf(nodeStrd, invSKS_EFT_FileDetail);
    
                        //              2.109 RfrdDocAmt
                        nodeRfrdDocAmt = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocAmt'));
                        this.node_RmtInf_Amt(nodeRfrdDocAmt, invSKS_EFT_FileDetail);
                    }
                }
                else if(printRmtInfUstrd)
                {
                    description = LedgerJournalTrans::findRecId(invSKS_EFT_FileDetail.PaymentLineRecId, false).Txt;

                    if(description)
                    {
                        //          2.98: RmtInf
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(description), 140);
                        break;
                    }
                }
                else if(printRfrdDocInf)
                {
                    if(firstRec)
                    {
                        //          2.98: RmtInf
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/GLTG/' + num2str((mSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur) * -1, 0,2,1,0));

                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/GLTD/' + num2str(mSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur * -1, 0,2,1,0));

                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/GLTN/' + num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0,2,1,0));

                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PMDH/' + CompanyInfo::findDataArea(mSKS_EFT_FileDetail.AccountCompany).Name);

                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PMDH/' + (SKS_EFT_Setup::find().APEMReplyToAddr));    //SKS_VSTS_13397

                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/NAVC/' + mSKS_EFT_FileDetail.AccountNum);

                        if(spclHandlgCd)
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/NASH/' + spclHandlgCd);
                        }
                        
                        if(value)
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/NAAT/' + value);
                        }

                        firstRec = false;
                    }


                    //              2.100: Strd
                    nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));

                    //              2.101: RfrdDocInf
                    nodeRfrdDocInf = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocInf'));

                    switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)//SKS_VSTS_13771
                    {
                        case 'CHK-19':
                        case 'CHK19USFED':
                        case 'CHKUSFED02':
                        case 'CHKUSFED03':
                        case 'CHK20CAMAL':
                        case 'CHK20CAFED':
                        case 'CHKCAFED02':
                        case 'CHKCAFED03':
                            //                  2.107: Number
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', subStr(this.CharacterReplacement(invSKS_EFT_FileDetail.InvoiceNumber), 1, 20));//SKS_VSTS_13771
                            break;
                        default :
                            //                  2.107: Number
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', this.CharacterReplacement(invSKS_EFT_FileDetail.InvoiceNumber));
                            break;
                    }

                    //                  2.108: RltdDt
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));

                    //                 2.109 RfrdDocAmt
                    nodeRfrdDocAmt = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocAmt'));

                    if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == #CHK19 && (invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1 < 0)) //SKS_DeVOps_17711--->
                    {
                        //                  2.111           DscntApldAmt
                        currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocAmt, 'DscntApldAmt', num2str(invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur * -1,0,2,1,0));
                        SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', invSKS_EFT_FileDetail.PaymentCurrencyCode);
                        
                        //                                  CdtNoteAmt
                        currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocAmt, 'CdtNoteAmt', num2str(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,0,2,1,0));
                        SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', invSKS_EFT_FileDetail.PaymentCurrencyCode);

                        //                                  RmtdAmt
                        currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocAmt, 'RmtdAmt', num2str(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,0,2,1,0));
                        SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', invSKS_EFT_FileDetail.PaymentCurrencyCode);
                    }
                    else    //SKS_DeVOps_17711<---
                    {
                        //                  2.110       DuePyblAmt
                        currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocAmt, 'DuePyblAmt', num2str((invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur) * -1,0,2,1,0));
                        SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', invSKS_EFT_FileDetail.PaymentCurrencyCode);

                        //                  2.111           DscntApldAmt
                        currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocAmt, 'DscntApldAmt', num2str(invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur * -1,0,2,1,0));
                        SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', invSKS_EFT_FileDetail.PaymentCurrencyCode);

                        //                                  RmtdAmt
                        currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocAmt, 'RmtdAmt', num2str(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0));
                        SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', invSKS_EFT_FileDetail.PaymentCurrencyCode);
                    }

                    //                                  AddtlRmtInf
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeStrd, 'AddtlRmtInf', invSKS_EFT_FileDetail.InvoiceTransactionTxt, 0, false);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_Ustrd</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf_Ustrd(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeRmtInf;
        str invNumbers;
        str value, taxId, rsnForPmt, dob;
        str paymDetails, purpose, idType, prdYear, prdType, prdRange, pmtSymbol, PurpOfPmt;
        int i, j;
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        PaymId ledgerTransPaymId;
        str invDetailsString, itrsCode, purpCodeIN;
        str bankCodeDescription;
    
        str acctype, pop;
        str ntn, unn, voCode;
        VendBankAccount mVendBankAccount;

        mVendBankAccount = VendBankAccount::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum, mSKS_EFT_FileDetail.DepBankAccountId);

        idType = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('IdType', mSKS_EFT_FileDetail.RecId));
        prdYear = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PrdYear', mSKS_EFT_FileDetail.RecId));
        prdType = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PrdType', mSKS_EFT_FileDetail.RecId));
        prdRange = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PrdRange', mSKS_EFT_FileDetail.RecId));
        pmtSymbol = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PmtSymbol', mSKS_EFT_FileDetail.RecId));
        purpCodeIN = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpCodeIN', mSKS_EFT_FileDetail.RecId));        //SKS#DevOps:17289


        EventHandlerResult result = new EventHandlerResult();

        this.getBankPurposeCode();
    
        this.node_CdtTrfTxInf_RmtInf_Ustrd_delegate(_nodeCdtTrfTxInf,mSKS_EFT_FileDetail, mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_FileDetail_VendAddress, mSKS_EFT_FileDetail_BenBank, mSKS_EFT_FileDetail_Intermediary, msKS_EFT_FileDetail_CreditParty, mVendBankAccount, bankCode, bankCodeText, mRemittanceName, mSKS_EB_CharacterReplacement, xmldoc, result);
        
        if(!result.result())
        {
            invNumbers = this.getInvoiceNbrs();

            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RmtOvr', mSKS_EFT_FileDetail.RecId));  //SKS_FDD_10590

            switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
            {
                case 'US-CITICONNECT-XML-NL':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH_SEPA:
                        case #CB_WIRE:          //SKS#DevOps:16938
                            ledgerTransPaymId = mSKS_EFT_FileDetail.LedgerTrans_PaymId;
                            if(ledgerTransPaymId && invNumbers)
                            {
                                invNumbers = invNumbers + ', ' + ledgerTransPaymId;
                            }
                            else if(ledgerTransPaymId)
                            {
                                invNumbers = ledgerTransPaymId;
                            }
                            if(invNumbers)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                            
                                for(i=0; i<4; i++)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 35, false);    
                                    invNumbers = strDel(invNumbers,1,35);
                                }
                            }
                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-CR':       //SKS#DevOps:17939
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CBFT442:
                            //          2.98: RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                            //                  Ustrd
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'Vendor payment');
            
                            //                  Ustrd Line 1
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers, 1, 35), 35, false);

                            //                  Ustrd Line 2
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers, 36, 35), 35, false);

                            //                  Ustrd Line 3
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers, 71, 35), 35, false);

                            //                  Ustrd Line 4
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers, 105, 35), 35, false);
                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-US':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACHCCP:
                        case #ACHPPP:          //SKS#DevOps:16937
                        case #FT499:
                        case #USFCP821:
                            ledgerTransPaymId = mSKS_EFT_FileDetail.LedgerTrans_PaymId;
                            if(ledgerTransPaymId && invNumbers)
                            {
                                invNumbers = invNumbers + ', ' + ledgerTransPaymId;
                            }
                            else if(ledgerTransPaymId)
                            {
                                invNumbers = ledgerTransPaymId;
                            }
                            if(invNumbers)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                            
                                for(i=0; i<4; i++)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 35, false);
                                    invNumbers = strDel(invNumbers,1,35);
                                }
                            }
                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-AL':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            if(invNumbers)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(invNumbers, 1, 35));
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-BH':            //SKS#DevOps:17213
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpOfPmt', mSKS_EFT_FileDetail.RecId));
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/REF/'+ value);

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(invNumbers, 1, 35));
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-JM':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::SavingsAccount)
                            {
                                acctype = '/ACC/TYPE SA';
                            }
                            else
                            {
                                acctype = '/ACC/TYPE CA';
                            }

                            //          2.98: RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                

                            //                  Ustrd Line 1
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', acctype);
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-TN':            //SKS#DevOps:17213
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            pop = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpOfPmtTN', mSKS_EFT_FileDetail.RecId));
                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ActivitySector', mSKS_EFT_FileDetail.RecId));
                            if(invNumbers || pop || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/REF/'+ pop + '/' + value);

                                //                  Ustrd Line 2
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-KE':
                case 'US-CITICONNECT-WL-XML-MZ':
                case 'US-CITICONNECT-WL-XML-QA':
                case 'US-CITICONNECT-WL-XML-AM':
                case 'US-CITICONNECT-WL-XML-LA':
                case 'US-CITICONNECT-WL-XML-MN':
                case 'US-CITICONNECT-WL-XML-MU':
                case 'US-CITICONNECT-WL-XML-NA':
                case 'US-CITICONNECT-WL-XML-RS':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            if(bankCodeText)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(bankCodeText, 1, 35));
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-MM':        //SKS#DevOps:15473
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            itrsCode = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ITRSCode', mSKS_EFT_FileDetail.RecId));

                            if(bankCodeText || itrsCode)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(bankCodeText, 1, 35));

                                //                  Ustrd Line 2
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(itrsCode, 1, 35));
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-MD':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            if(bankCodeText || telNo)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(bankCodeText, 1, 35));

                                //                  Ustrd Line 2
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'Tel No ' + telNo, 35);
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-MK':        //SKS#DevOps:16428
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            this.getEmailandTelephonenumber();
                            rsnForPmt = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RsnForPmt', mSKS_EFT_FileDetail.RecId));
                            if(rsnForPmt || telNo)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(rsnForPmt, 1, 35));

                                //                  Ustrd Line 2
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', telNo, 35);
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-KH':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            if(bankCodeText || telNo)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(bankCodeText, 1, 35));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'Tel No ' + telNo);
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-GE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            if(bankCodeText)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'RFP' + substr(bankCodeText, 1, 35));
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-CA':        //SKS#DevOps:18212
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH_WL:
                            pop = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TransactionCode', mSKS_EFT_FileDetail.RecId));
                
                            if(invNumbers || pop)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                if(pop)
                                {
                                    //                  Ustrd Line 1
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'PYMT TYPE'+ pop);
                                }

                                //                  Ustrd Line 2
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                            }
                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-ZM':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            if(bankCodeText)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'RFP' + substr(bankCodeText, 1, 35));

                                //                  Ustrd Line 2
                                if(mSKS_EFT_FileDetail.DepBankTransit == '' &&
                                   mSKS_EFT_FileDetail.DepSwiftNo)          //VSTS#14580
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(mSKS_EFT_FileDetail_BenBank.BenBankBranch, 1, 35), 35, false);       //VSTS#14580
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-VN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpCode', mSKS_EFT_FileDetail.RecId));

                            if(value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(value, 1, 35), 35, false);

                                //                  Ustrd Line 2
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankBranch), 1, 35), 35, false);
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-AU':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            if(strLen(mRemittanceName) > 35)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                if(strLen(mRemittanceName) > 35)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'Full Bnf name ' + subStr(mRemittanceName, 1, 21), 35);

                                    if(strLen(mRemittanceName) > 21)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(mRemittanceName, 22, 35), 35);
                                    }

                                    if(strLen(mRemittanceName) > 56)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(mRemittanceName, 57, 35), 35);
                                    }

                                    if(strLen(mRemittanceName) > 92)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(mRemittanceName, 92, 35), 35);
                                    }
                                }
                            }
                            else if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-BA':    //SKS#DevOps:16138
                case 'US-CITICONNECT-WL-XML-ML':    //SKS#DevOps:16946
                case 'US-CITICONNECT-WL-XML-KM':    //SKS#DevOps:16946
                case 'US-CITICONNECT-WL-XML-GM':    //SKS#DevOps:17970
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            if(invNumbers)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers, 1, 35), 35, false);

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers, 36, 35), 35, false);

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers, 71, 35), 35, false);

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers, 105, 35), 35, false);
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-ET':    //SKS#DevOps:18131
                case 'US-CITICONNECT-WL-XML-IS':    //SKS#DevOps:18131
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            rsnForPmt = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RsnForPmt', mSKS_EFT_FileDetail.RecId));

                            if(invNumbers || rsnForPmt)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(rsnForPmt, 1, 35));
                    
                                //                  Ustrd Line 2
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(invNumbers), 140);
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-GY':    //SKS#DevOps:18131
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            rsnForPmt = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RsnForPmt', mSKS_EFT_FileDetail.RecId));

                            if(invNumbers || rsnForPmt || mSKS_EFT_FileDetail.DepBankTransit)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(rsnForPmt, 1, 35), 35, false);

                                //                  Ustrd Line 2
                                if(mSKS_EFT_FileDetail.DepBankTransit)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'TRANSIT CODE '+ subStr(mSKS_EFT_FileDetail.DepBankTransit, 1, 8));
                                }
                                //                  Ustrd Line 2
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(invNumbers), 140);
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-MG':    //SKS#DevOps:18138
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            rsnForPmt = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RsnForPmt', mSKS_EFT_FileDetail.RecId));

                            if(invNumbers || rsnForPmt)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(rsnForPmt, 1, 35));

                                //                  Ustrd Line 2
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers, 1, 35), 35, false);

                                //                  Ustrd Line 3
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers, 36, 35), 35, false);

                                //                  Ustrd Line 4
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers, 71, 35), 35, false);

                                //                  Ustrd Line 5
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(invNumbers, 105, 35), 35, false);
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-KZ':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            rsnForPmt = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RsnForPmt', mSKS_EFT_FileDetail.RecId));

                            if(rsnForPmt || mRemittanceName)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(rsnForPmt, 1, 35));

                                if(strLen(mRemittanceName) > 35)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'Full Bnf name ' + subStr(mRemittanceName, 1, 21), 35);

                                    if(strLen(mRemittanceName) > 21)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(mRemittanceName, 22, 35), 35);
                                    }

                                    if(strLen(mRemittanceName) > 56)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(mRemittanceName, 57, 35), 35);
                                    }
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-AZ':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            taxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TAXID', mSKS_EFT_FileDetail.RecId));

                            rsnForPmt = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RsnForPmt', mSKS_EFT_FileDetail.RecId));

                            if(taxId || rsnForPmt || mSKS_EFT_FileDetail.DepBankTransit || mVendBankAccount.SKS_IHB_WIntBankAcct)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                if(taxId)
                                {
                                    //                  Ustrd Line 1
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr('Tax ID' + taxId, 1, 35));
                                }
                                else
                                {
                                    //                  Ustrd Line 1
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                                }

                                //                  Ustrd Line 2
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(bankCodeText, 1, 35));

                                if(mSKS_EFT_FileDetail.DepBankTransit)
                                {
                                    //                  Ustrd Line 3
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr('BIK' + mSKS_EFT_FileDetail.DepBankTransit, 1, 35));
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                                }

                                //                  Ustrd Line 4
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(mVendBankAccount.SKS_IHB_WIntBankAcct, 1, 35));
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-CO':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            this.getEmailandTelephonenumber();

                            taxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TAXID', mSKS_EFT_FileDetail.RecId));


                            if(bankCodeText || telNo || taxId || (strLen(mSKS_EFT_FileDetail.DepSwiftNo) < 11 && mSKS_EFT_FileDetail_BenBank.BenBankBranch))
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(bankCodeText, 1, 35));

                                //                  Ustrd Line 2
                                if(telNo)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr('Tel No ' + telNo, 1, 35));
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                                }

                                //                  Ustrd Line 3
                                if(taxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr('Tax ID ' + taxId, 1, 35));
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                                }

                                if(strLen(mSKS_EFT_FileDetail.DepSwiftNo) < 11)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankBranch));
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-BR':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            this.getEmailandTelephonenumber();

                            taxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TAXID', mSKS_EFT_FileDetail.RecId));


                            if(bankCodeText || telNo || taxId || (!mSKS_EFT_FileDetail.DepBankIBAN && mSKS_EFT_FileDetail_BenBank.BenBankBranch))
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(bankCodeText, 1, 35));

                                //                  Ustrd Line 2
                                if(telNo)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr('Tel No ' + telNo, 1, 35));
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                                }

                                //                  Ustrd Line 3
                                if(taxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr('Tax ID ' + taxId, 1, 35));
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                                }

                                if(!mSKS_EFT_FileDetail.DepBankIBAN)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankBranch));
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-BG':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            dob = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DOB', mSKS_EFT_FileDetail.RecId));

                            if(dob)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr('DOB ' + dob, 1, 35));
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-CL':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            taxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TAXID', mSKS_EFT_FileDetail.RecId));

                            rsnForPmt = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RsnForPmt', mSKS_EFT_FileDetail.RecId));      //SKS#DevOps:17397

                            this.getEmailandTelephonenumber();

                            if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::SavingsAccount)
                            {
                                acctype = 'Saving Account';
                            }
                            else
                            {
                                acctype = 'Current Account';
                            }

                            //          2.98: RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                            //                  Ustrd Line 1
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(rsnForPmt, 1, 35));          //SK#DevOps:17397

                            //                  Ustrd Line 2
                            if(taxId)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'Tax ID ' + subStr(taxId, 1, 9));
                            }
                            else
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                            }

                            //                  Ustrd Line 3
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', acctype);

                            //                  Ustrd Line 4
                            if(telNo)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr('Tel No ' + telNo, 1, 35));
                            }
                            else
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-CN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            this.getEmailandTelephonenumber();
                            this.getBankPurposeCode();

                            dob = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DOB', mSKS_EFT_FileDetail.RecId));

                            if(invNumbers || telNo || dob || bankCodeText)      //SKS#DevOps:17276
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', bankCodeText);

                                //                  Ustrd Line 2
                                if(dob)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr('DOB ' + dob, 1, 35));
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                                }
                
                                //                  Ustrd Line 3
                                if(telNo)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr('Tel No ' + telNo, 1, 35));
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                                }
                                //                  Ustrd Line 4
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(invNumbers, 1, 35));
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-CR':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            taxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TAXID', mSKS_EFT_FileDetail.RecId));

                            if(taxId)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                
                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'TaxID' + substr(taxId, 1, 12));
                            }
                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-PE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            taxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TAXID', mSKS_EFT_FileDetail.RecId));

                            if(taxId)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                
                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'TaxID' + substr(taxId, 1, 11));
                            }
                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-DO':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            taxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TAXID', mSKS_EFT_FileDetail.RecId));

                            this.getEmailandTelephonenumber();

                            if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::SavingsAccount)
                            {
                                acctype = 'Saving Account';
                            }
                            else
                            {
                                acctype = 'Current Account';
                            }

                            //          2.98: RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                            if(bankCodeText)
                            {
                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'RFP' + substr(bankCodeText, 1, 35));
                            }
                            else
                            {
                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                            }

                            //                  Ustrd Line 2
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', acctype);

                            //                  Ustrd Line 3
                            if(telNo)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr('Tel No ' + telNo, 1, 35));
                            }
                            else
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                            }
                        
                            //                  Ustrd Line 4
                            if(taxId)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'Tax ID ' + subStr(taxId, 1, 11));
                            }
                            else
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                            }
                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-GH':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            //          2.98: RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                            //                  Ustrd Line 1
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(invNumbers, 1, 25));
                
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(invNumbers, 26, 25));

                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(invNumbers, 51, 25));

                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(invNumbers, 76, 25));

                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-GT':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            taxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TAXID', mSKS_EFT_FileDetail.RecId));

                            if(taxId || bankCodeText)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                if(taxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr('Tax ID ' + taxId, 1, 35));
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                                }

                                //                  Ustrd Line 2
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(bankCodeText, 1, 35));
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-IN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            //          2.98: RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                            bankCode = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpCode', mSKS_EFT_FileDetail.RecId));
                            bankCodeDescription = this.getCodelookupDescription('PurpCode', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId);        //SKS#DevOps:17440

                            if(bankCodeDescription || bankCode)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(bankCodeDescription, 1, 35));       //SKS#DevOps:17353

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(this.CharacterReplacement(bankCode), 1, 35));
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-MY':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            this.getEmailandTelephonenumber();
                
                            if(invNumbers || telNo)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(invNumbers, 1, 35));

                                //                  Ustrd Line 2
                                if(telNo)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr('Phone Number ' + telNo, 1, 35));
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                                }
                            }

                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-KR':
                case 'US-CITICONNECT-WL-XML-CD':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            this.getEmailandTelephonenumber();
                
                            if(bankCodeText || telNo)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(bankCodeText, 1, 35));

                                //                  Ustrd Line 2
                                if(telNo)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr('Phone Number ' + telNo, 1, 35));
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-PK':
                    str purpofPmtPK, relationPK, taxidPK, purposeDesc, relation;

                    ntn = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('NTN', mSKS_EFT_FileDetail.RecId));
                    purpofPmtPK = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpOfPmtPK ', mSKS_EFT_FileDetail.RecId));   //SKS#DevOps:19000
                    purposeDesc = this.CharacterReplacement(this.getCodelookupDescription('PurpOfPmtPK ', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId));   //SKS#DevOps:19977
                    relationPK = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RelationPK ', mSKS_EFT_FileDetail.RecId));   //SKS#DevOps:19000
                    relation = this.CharacterReplacement(this.getCodelookupDescription('RelationPK ', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId));   //SKS#DevOps:19977
                    taxidPK = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('UltRmtTaxID ', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));   //SKS#DevOps:19000

                    if(ntn || purpofPmtPK || relationPK || taxidPK)
                    {
                        //          2.98: RmtInf
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                        //                  Ustrd Line 1
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', purpofPmtPK + ' ' + purposeDesc);   //SKS#DevOps:19977

                        //                  Ustrd Line 2
                        if(ntn)
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'NTN' + ntn, 35);
                        }
                        else
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                        }

                        //                  Ustrd Line 3
                        if(taxidPK)
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'RUID ' + taxidPK, 35);
                        }
                        else
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                        }

                        //                  Ustrd Line 4
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', relationPK + ' - ' + relation);   //SKS#DevOps:19977
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-ZA':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpCode', mSKS_EFT_FileDetail.RecId));

                            if(value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'BOP Code ' + subStr(value, 1, 6));
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-LK':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            if(mSKS_EFT_FileDetail.DepBankTransit || mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'Bank Code ' + mSKS_EFT_FileDetail.DepBankTransit + ' ' + 'Branch Code ' + this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankBranch), 35);
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-TW':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            this.getEmailandTelephonenumber();

                            if(bankCodeText || telNo)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(bankCodeText, 1, 35));

                                //                  Ustrd Line 2
                                if(telNo)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr('Phone Number ' + telNo, 1, 35));
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-RU':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'RUB')
                            {
                                voCode = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('VOCode', mSKS_EFT_FileDetail.RecId));

                                if(voCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '(VO' + subStr(voCode, 1, 5) + ')');
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-BY':

                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            unn = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TAXID', mSKS_EFT_FileDetail.RecId));

                            if(unn || bankCodeText)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(bankCodeText, 1, 35));
                
                                //                  Ustrd Line 2
                                if(unn)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr('UNN' + unn, 1, 35));
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-JO':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpCode', mSKS_EFT_FileDetail.RecId));

                            if(value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr('/' + value, 1, 35), false);
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-UG':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            purpose = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpPmt', mSKS_EFT_FileDetail.RecId));
                            
                            //          2.98: RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                            for(i =0; i < 4; i++)                         //SKS_VSTS_14837
                            {
                                //                  Ustrd Line 1to4
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', purpose, 35);   //SKS#DevOps:15702
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-PY':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            taxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TAXID', mSKS_EFT_FileDetail.RecId));

                            if(taxId || bankCodeText)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(bankCodeText, 1, 35));

                                //                  Ustrd Line 2
                                if(taxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'Tax ID ' + subStr(taxId, 1, 11));
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-UZ':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            if(bankCodeText || invNumbers || (strLen(mSKS_EFT_FileDetail.DepSwiftNo) < 11 && mSKS_EFT_FileDetail_BenBank.BenBankBranch))
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(bankCodeText, 1, 35));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(invNumbers, 1, 35));

                                if(strLen(mSKS_EFT_FileDetail.DepSwiftNo) < 11)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankBranch));
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-US':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UA' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AR' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ZW')
                            {
                                taxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TAXID', mSKS_EFT_FileDetail.RecId));

                                this.getEmailandTelephonenumber();

                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(bankCodeText, 1, 35));

                                //                  Ustrd Line 2
                                if(taxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'Tax ID ' + subStr(taxId, 1, 35));
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                                }

                                if(telNo)
                                {
                                    //                  Ustrd Line 3
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'Tel No ' + substr(telNo, 1, 20));
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');
                                }
                            }
                            else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'EC' ||
                                        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SV')
                            {
                                this.getEmailandTelephonenumber();

                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(bankCodeText, 1, 35));

                                //                  Ustrd Line 2
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(telNo, 1, 20));
                            }
                            else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PS')
                            {
                                purpose = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpCode', mSKS_EFT_FileDetail.RecId));

                                taxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TaxId', mSKS_EFT_FileDetail.RecId));

                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //                  Ustrd Line 1
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', purpose);

                                //                  Ustrd Line 2
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', taxId);
                            }
                            else if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-ID':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            if(bankCode)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(bankCode), 140);
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-BS':
                case 'US-CITICONNECT-WL-XML-SA':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            purpose = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpPmt', mSKS_EFT_FileDetail.RecId));
                
                            if(purpose)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(purpose), 35);
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-BD':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Nationality', mSKS_EFT_FileDetail.RecId));        //SKS#DevOps:15203
                            if(bankCodeText || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(bankCodeText), 140);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', value, 140, false);
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-TH':
                case 'US-CITICONNECT-WL-XML-DZ':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpCode', mSKS_EFT_FileDetail.RecId));
                
                            if(value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
    
                                //              2.99: Ustrd
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', value, 140);
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-GB':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            if(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId == 'GIB')
                            {
                                if(bankCodeText || telNo)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                    //                  Ustrd Line 1
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(bankCodeText, 1, 35));

                                    //                  Ustrd Line 2
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'Tel No ' + telNo);
                                }
                            }
                            else
                            {
                                if(invNumbers || value)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                    //              2.99: Ustrd
                                    if(value)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                    }
                                    else
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                    }
                                }
                            }
                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-IN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT541:               //SKS#DevOps:15853
                        case #RTGS539:
                        case #IFT_CB392:
                            //                  RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                            //                      Ustrd
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', purpCodeIN, 35, false); //SKS#DevOps:17289

                            while select InvoiceNumber, EffectiveDate from invSKS_EFT_FileDetail
                                where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                            {
                                invDetailsString = strFmt('/PMDD/%1 %2', invSKS_EFT_FileDetail.InvoiceNumber, date2str(invSKS_EFT_FileDetail.EffectiveDate, 123, DateDay::Digits2, DateSeparator::Hyphen, DateMonth::Digits2, DateSeparator::Hyphen, DateYear::Digits4));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 35, false);
                            }

                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-RO':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            if(mSKS_EFT_FileDetail.DepSwiftNo)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
    
                                //              2.99: Ustrd
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'Fiscal Code:'+ mSKS_EFT_FileDetail.DepSwiftNo, 140);
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-PR':
                    switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
                    {
                        case 'PPD':
                        
                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RmtInf', mSKS_EFT_FileDetail.RecId));  //SKS_FDD_10590
    
                            if(value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', value, 140);
                            }
                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-GB':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SIP962:               //SKS#DevOps:14844

                            //          2.98: RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                            //              2.99: Ustrd
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');

                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');

                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '');

                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'PYMT TYPE0099');

                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-PL':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #TAX592:
                            if(idType || prdYear || prdType || prdRange || pmtSymbol)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', idType + prdYear + prdType + prdRange + pmtSymbol, 140, false);
                            }
                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-TR':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM555:
                            if(invNumbers)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
            
                                if(subStr(invNumbers, 1, 25))
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/INPDC/' + subStr(invNumbers, 1, 25));
                                }
                                if(subStr(invNumbers, 26, 25))
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/INPDC/' + subStr(invNumbers, 26, 25));
                                }
                            }
                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-AE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CBFT574:
                        case #DFT574:
                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Ustrd-Prefix', mSKS_EFT_FileDetail.RecId));    //SKS_FDD_10590

                            if(value)
                            {
                                value = value + invNumbers;
                            }

                            //          2.98: RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);

                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-SE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH150:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                                {
                                    value += this.CharacterReplacement(strFmt('%1 %2 ',mSKS_EFT_FileDetail.PaymId,mSKS_EFT_FileDetail.PaymentReference));
                                }

                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', strLRTrim(value), 25);
                                }
                                else if(invNumbers)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-ZA':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH150:
                            if(invNumbers)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                for(i=0; i<3; i++)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 35, false);
    
                                    invNumbers = strDel(invNumbers,1,35);
                                }

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                            }
                            break;
                        case #ACH809:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 20);
                                }
                            }
                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-VN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT391:
                        case #CBFT392:
                            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurposeCode', mSKS_EFT_FileDetail.RecId));

                            //                  RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                            //                      Ustrd
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(value, 1, 35), 35, false);

                            //                      Ustrd
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(value, 36, 35), 35, false);

                            //                      Ustrd
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(value, 71, 35), 35, false);

                            //                      Ustrd
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(value, 105, 35), 35, false);
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-IL':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM555:
                            if(invNumbers)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                for(i=0; i<3; i++)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 35, false);
    
                                    invNumbers = strDel(invNumbers,1,35);
                                }

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                            }
                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                case 'US-CITICONNECT-XML-JP':
                    //                  RmtInf
                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                    i = 1;
                    j = 4;

                    while select InvoiceNumber, InvoiceDate, PaymentCurrencyCode, InvoiceSettleAmountPmtCur from invSKS_EFT_FileDetail
                    where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                    {
                        if(i <= j)
                        {
                            i++;

                            invDetailsString = strFmt('/PMDD/%1 %2 %3%4', invSKS_EFT_FileDetail.InvoiceNumber, date2str(invSKS_EFT_FileDetail.InvoiceDate, 321, DateDay::Digits2, DateSeparator::Hyphen, DateMonth::Digits2, DateSeparator::Hyphen, DateYear::Digits4), invSKS_EFT_FileDetail.PaymentCurrencyCode, num2Str(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0, 2, 1, 0));
                    
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 35, false);
                        }
                    }
                    break;
                case 'US-CITICONNECT-XML-KR':
                    //                  RmtInf
                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                    i = 1;
                    j = 4;

                    while select InvoiceNumber, InvoiceDate, PaymentCurrencyCode, InvoiceSettleAmountPmtCur from invSKS_EFT_FileDetail
                    where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                    {
                        if(i <= j)
                        {
                            i++;

                            invDetailsString = strFmt('/PMDD/%1 %2 %3%4', invSKS_EFT_FileDetail.InvoiceNumber, date2str(invSKS_EFT_FileDetail.InvoiceDate, 321, DateDay::Digits2, DateSeparator::Hyphen, DateMonth::Digits2, DateSeparator::Hyphen, DateYear::Digits4), invSKS_EFT_FileDetail.PaymentCurrencyCode, num2Str(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0, 2, 1, 0));
                    
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 35, false);
                        }
                    }
                    break;
                case 'US-CITICONNECT-XML-SG':
                    //                  RmtInf
                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                    i = 1;
                    j = 4;

                    while select InvoiceNumber, InvoiceDate, PaymentCurrencyCode, InvoiceSettleAmountPmtCur from invSKS_EFT_FileDetail
                    where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                    {
                        if(i <= j)
                        {
                            i++;

                            invDetailsString = strFmt('/PMDD/%1 %2 %3%4', invSKS_EFT_FileDetail.InvoiceNumber, date2str(invSKS_EFT_FileDetail.InvoiceDate, 321, DateDay::Digits2, DateSeparator::Hyphen, DateMonth::Digits2, DateSeparator::Hyphen, DateYear::Digits4), invSKS_EFT_FileDetail.PaymentCurrencyCode, num2Str(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0, 2, 1, 0));
                    
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 35, false);
                        }
                    }
                    break;
                case 'US-CITICONNECT-XML-CN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CHK402:
                        case #DFT391:
                        case #PLG400:
                            j = 2;
                            break;
                        default:
                            j = 4;
                            break;
                    }

                    i = 1;

                    while select InvoiceNumber, InvoiceDate, PaymentCurrencyCode, InvoiceSettleAmountPmtCur from invSKS_EFT_FileDetail
                    where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                    {
                        if(i <= j)
                        {
                            i++;

                            invDetailsString = strFmt('/PMDD/%1 %2 %3%4', invSKS_EFT_FileDetail.InvoiceNumber, date2str(invSKS_EFT_FileDetail.InvoiceDate, 321, DateDay::Digits2, DateSeparator::Hyphen, DateMonth::Digits2, DateSeparator::Hyphen, DateYear::Digits4), invSKS_EFT_FileDetail.PaymentCurrencyCode, num2Str(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0, 2, 1, 0));
                    
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 35, false);
                        }
                    }
                    break;
                case 'US-CITICONNECT-XML-MY':
                    paymDetails = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PaymDetails', mSKS_EFT_FileDetail.RecId));

                    if((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GIRO527                 ||
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK415                  ||
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DFT391                  ||
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CBFT392                 ||
                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BKT393) && paymDetails)
                    {
                        //                  RmtInf
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CBFT392  ||
                            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BKT393)
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', paymDetails, 35, false);
                        }
                        else
                        {
                            this.getBankPurposeCode();
                            purpose = subStr(bankCodeText,1 ,140);
    
                            for(i=0; i<4; i++)
                            {
                                if(i == 0)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', paymDetails, 35, false);
                                }
                                else if(i == 1)
                                {
                                    if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GIRO527)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PMDD/.', 0, false);
                                    }
                                    else
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(purpose, 1, 35), 0, false);
                                    }
                                }
                                else if(i == 2)
                                {
                                    if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GIRO527)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PMDD/' + subStr(invNumbers, 1, 35), 0, false);
                                    }
                                    else
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(purpose, 36, 35), 0, false);
                                    }
                                }
                                else if(i == 3)
                                {
                                    if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GIRO527)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PMDD/' + subStr(invNumbers, 35, 35), 0, false);
                                    }
                                    else
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(purpose, 71, 35), 0, false);
                                    }
                                }
                            }
                        }
                    }
                    break;
                case 'US-CITICONNECT-XML-CZ':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CBFT574:

                            if(invNumbers)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                for(i=0; i<4; i++)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 35, false);
    
                                    invNumbers = strDel(invNumbers,1,35);
                                }
                            }
                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-HK':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ATPAY403:
                            j = 2;
                            break;
                        case #CHECK405:
                        case #CHK405:
                            j = 3;
                            break;
                        default:
                            j = 4;
                            break;
                    }

                    //                  RmtInf
                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                    i = 1;
                    while select InvoiceNumber, InvoiceDate, PaymentCurrencyCode, InvoiceSettleAmountPmtCur from invSKS_EFT_FileDetail
                    where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                    {
                        if(i <= j)
                        {
                            i++;

                            invDetailsString = strFmt('/PMDD/%1 %2 %3%4', invSKS_EFT_FileDetail.InvoiceNumber, date2str(invSKS_EFT_FileDetail.InvoiceDate, 321, DateDay::Digits2, DateSeparator::Hyphen, DateMonth::Digits2, DateSeparator::Hyphen, DateYear::Digits4), invSKS_EFT_FileDetail.PaymentCurrencyCode, num2Str(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0, 2, 1, 0));
                    
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 35, false);
                        }
                    }

                    break;
                case 'US-CITICONNECT-XML-HU':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CBFT574:
                            //                  RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                            for(i=0; i<4; i++)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 35, false);
    
                                invNumbers = strDel(invNumbers,1,35);
                            }
                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-RO':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CBFT574:
                            //                  RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                            for(i=0; i<4; i++)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 35, false);
    
                                invNumbers = strDel(invNumbers,1,35);
                            }
                            break;
                        default:
                            if(invNumbers || value)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(value)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                                }
                                else
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                                }
                            }
                            break;
                    }
                    break;
                default:
                    if(invNumbers || value)
                    {
                        //          2.98: RmtInf
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                        //              2.99: Ustrd
                        if(value)
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(value), 140);
                        }
                        else
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
                        }
                    }
                    break;
            }
            if((mSKS_EFT_FileDetail.PaymentCurrencyCode == 'GYD' ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'BBD') &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE_WL)         //SKS#DevOps:17206
            {
                PurpOfPmt = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpOfPmtGYDBBD', mSKS_EFT_FileDetail.RecId));   //SKS_FDD_10590
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', PurpOfPmt, 140, false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_Id</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty_Id(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          9.1.12: Id
        //              9.1.13: OrgId
        //                  9.1.15: Othr
        //                      9.1.1.16: Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOther;
        str InitgPtyId;        //SKS_FDD_10590
        boolean InitgPtyIdValue = false;
        int length;
        
        SKS_EFT_FileDetail      locSKS_EFT_FileDetail;      //SKS_VSTS_13549--->

        select * from locSKS_EFT_FileDetail
            where locSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                  locSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                  locSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary;

        while(locSKS_EFT_FileDetail)
        {
            if(!strContains(locSKS_EFT_FileDetail.FormatId, 'WL-XML'))
            {
                next locSKS_EFT_FileDetail;
            }
            else
            {
                break;
            }
        }

        if(locSKS_EFT_FileDetail)
        {
            InitgPtyId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InitgPtyId', locSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));

            switch(locSKS_EFT_FileDetail.FormatId)
            {
                case 'US-CITICONNECT-XML-US':
                    switch(locSKS_EFT_FileDetail.TransactionCode)
                    {
                        case #ACHCCD:
                        case #ACHPPD:
                        case #ACHCTX:
                        case #BKT500:
                        case #WLW571:
                        case #FT499:
                        case #ACHCCP:
                        case #ACHPPP:
                        case #CCDP14:
                        case #CTX17:
                        case #CHK19:
                        case #CHK585:
                        case #CTX942:
                            length = 35;
                            InitgPtyIdvalue = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-AU':
                case 'US-CITICONNECT-WL-XML-AE':
                case 'US-CITICONNECT-WL-XML-AL':
                case 'US-CITICONNECT-WL-XML-AO':
                case 'US-CITICONNECT-WL-XML-AT':
                case 'US-CITICONNECT-WL-XML-AZ':
                case 'US-CITICONNECT-WL-XML-BD':
                case 'US-CITICONNECT-WL-XML-BE':
                case 'US-CITICONNECT-WL-XML-BF':
                case 'US-CITICONNECT-WL-XML-BG':
                case 'US-CITICONNECT-WL-XML-BH':
                case 'US-CITICONNECT-WL-XML-BJ':
                case 'US-CITICONNECT-WL-XML-BM':
                case 'US-CITICONNECT-WL-XML-BN':
                case 'US-CITICONNECT-WL-XML-BR':
                case 'US-CITICONNECT-WL-XML-BS':
                case 'US-CITICONNECT-WL-XML-BW':
                case 'US-CITICONNECT-WL-XML-BY':
                case 'US-CITICONNECT-WL-XML-CA':
                case 'US-CITICONNECT-WL-XML-CD':
                case 'US-CITICONNECT-WL-XML-CH':
                case 'US-CITICONNECT-WL-XML-CI':
                case 'US-CITICONNECT-WL-XML-CL':
                case 'US-CITICONNECT-WL-XML-CM':
                case 'US-CITICONNECT-WL-XML-CN':
                case 'US-CITICONNECT-WL-XML-CO':
                case 'US-CITICONNECT-WL-XML-CR':
                case 'US-CITICONNECT-WL-XML-CY':
                case 'US-CITICONNECT-WL-XML-CZ':
                case 'US-CITICONNECT-WL-XML-DE':
                case 'US-CITICONNECT-WL-XML-DK':
                case 'US-CITICONNECT-WL-XML-DO':
                case 'US-CITICONNECT-WL-XML-DZ':
                case 'US-CITICONNECT-WL-XML-EE':
                case 'US-CITICONNECT-WL-XML-EG':
                case 'US-CITICONNECT-WL-XML-ES':
                case 'US-CITICONNECT-WL-XML-ET':
                case 'US-CITICONNECT-WL-XML-FI':
                case 'US-CITICONNECT-WL-XML-FR':
                case 'US-CITICONNECT-WL-XML-GA':
                case 'US-CITICONNECT-WL-XML-GB':
                case 'US-CITICONNECT-WL-XML-GE':
                case 'US-CITICONNECT-WL-XML-GH':
                case 'US-CITICONNECT-WL-XML-GR':
                case 'US-CITICONNECT-WL-XML-GT':
                case 'US-CITICONNECT-WL-XML-GW':
                case 'US-CITICONNECT-WL-XML-GY':
                case 'US-CITICONNECT-WL-XML-HK':
                case 'US-CITICONNECT-WL-XML-HN':
                case 'US-CITICONNECT-WL-XML-HR':
                case 'US-CITICONNECT-WL-XML-HU':
                case 'US-CITICONNECT-WL-XML-ID':
                case 'US-CITICONNECT-WL-XML-IE':
                case 'US-CITICONNECT-WL-XML-IL':
                case 'US-CITICONNECT-WL-XML-IN':
                case 'US-CITICONNECT-WL-XML-IT':
                case 'US-CITICONNECT-WL-XML-JO':
                case 'US-CITICONNECT-WL-XML-JP':
                case 'US-CITICONNECT-WL-XML-KE':
                case 'US-CITICONNECT-WL-XML-KH':
                case 'US-CITICONNECT-WL-XML-KR':
                case 'US-CITICONNECT-WL-XML-KW':
                case 'US-CITICONNECT-WL-XML-KZ':
                case 'US-CITICONNECT-WL-XML-LA':
                case 'US-CITICONNECT-WL-XML-LB':
                case 'US-CITICONNECT-WL-XML-LI':
                case 'US-CITICONNECT-WL-XML-LK':
                case 'US-CITICONNECT-WL-XML-LT':
                case 'US-CITICONNECT-WL-XML-LU':
                case 'US-CITICONNECT-WL-XML-LV':
                case 'US-CITICONNECT-WL-XML-MA':
                case 'US-CITICONNECT-WL-XML-MC':
                case 'US-CITICONNECT-WL-XML-MD':
                case 'US-CITICONNECT-WL-XML-MM':
                case 'US-CITICONNECT-WL-XML-MN':
                case 'US-CITICONNECT-WL-XML-MR':
                case 'US-CITICONNECT-WL-XML-MT':
                case 'US-CITICONNECT-WL-XML-MU':
                case 'US-CITICONNECT-WL-XML-MW':
                case 'US-CITICONNECT-WL-XML-MX':
                case 'US-CITICONNECT-WL-XML-MY':
                case 'US-CITICONNECT-WL-XML-MZ':
                case 'US-CITICONNECT-WL-XML-NA':
                case 'US-CITICONNECT-WL-XML-NE':
                case 'US-CITICONNECT-WL-XML-NG':
                case 'US-CITICONNECT-WL-XML-NL':
                case 'US-CITICONNECT-WL-XML-NO':
                case 'US-CITICONNECT-WL-XML-NP':
                case 'US-CITICONNECT-WL-XML-NZ':
                case 'US-CITICONNECT-WL-XML-OM':
                case 'US-CITICONNECT-WL-XML-PE':
                case 'US-CITICONNECT-WL-XML-PG':
                case 'US-CITICONNECT-WL-XML-PH':
                case 'US-CITICONNECT-WL-XML-PK':
                case 'US-CITICONNECT-WL-XML-PL':
                case 'US-CITICONNECT-WL-XML-PT':
                case 'US-CITICONNECT-WL-XML-PY':
                case 'US-CITICONNECT-WL-XML-QA':
                case 'US-CITICONNECT-WL-XML-RO':
                case 'US-CITICONNECT-WL-XML-RS':
                case 'US-CITICONNECT-WL-XML-RU':
                case 'US-CITICONNECT-WL-XML-RW':
                case 'US-CITICONNECT-WL-XML-SA':
                case 'US-CITICONNECT-WL-XML-SC':
                case 'US-CITICONNECT-WL-XML-SE':
                case 'US-CITICONNECT-WL-XML-SG':
                case 'US-CITICONNECT-WL-XML-SI':
                case 'US-CITICONNECT-WL-XML-SK':
                case 'US-CITICONNECT-WL-XML-SN':
                case 'US-CITICONNECT-WL-XML-SZ':
                case 'US-CITICONNECT-WL-XML-TD':
                case 'US-CITICONNECT-WL-XML-TG':
                case 'US-CITICONNECT-WL-XML-TH':
                case 'US-CITICONNECT-WL-XML-TN':
                case 'US-CITICONNECT-WL-XML-TR':
                case 'US-CITICONNECT-WL-XML-TT':
                case 'US-CITICONNECT-WL-XML-TW':
                case 'US-CITICONNECT-WL-XML-TZ':
                case 'US-CITICONNECT-WL-XML-UG':
                case 'US-CITICONNECT-WL-XML-US':
                case 'US-CITICONNECT-WL-XML-UY':
                case 'US-CITICONNECT-WL-XML-UZ':
                case 'US-CITICONNECT-WL-XML-VN':
                case 'US-CITICONNECT-WL-XML-ZA':
                case 'US-CITICONNECT-WL-XML-ZM':
                case 'US-CITICONNECT-WL-XML-AG':
                case 'US-CITICONNECT-WL-XML-FJ':
                case 'US-CITICONNECT-WL-XML-MO':                //SKS_VSTS_13720
                case 'US-CITICONNECT-WL-XML-HT':
                case 'US-CITICONNECT-WL-XML-BO':
                case 'US-CITICONNECT-WL-XML-IS':
                case 'US-CITICONNECT-WL-PPW-XML':               //SKS_VSTS_14271
                case 'US-CITICONNECT-WL-XML-BA':               //SKS_VSTS_16138
                case 'US-CITICONNECT-WL-XML-BB':               //SKS#DevOps:16237
                case 'US-CITICONNECT-WL-XML-MG':               //SKS#DevOps:16946
                case 'US-CITICONNECT-WL-XML-ML':               //SKS#DevOps:16946
                case 'US-CITICONNECT-WL-XML-KM':               //SKS#DevOps:16946
                case 'US-CITICONNECT-WL-XML-GM':               //SKS#DevOps:17970
                case 'US-CITICONNECT-WL-XML-NI':
                    switch(locSKS_EFT_FileDetail.TransactionCode)
                    {
                        case #ACH_WL:
                        case #WIRE_WL:
                        case #CHK_WL:
                        case #SEPA_WL:
                        case #PPW_WL:                      //SKS_VSTS_14271
                        case #PPW_PH_WL:                   //SKS#DevOps:14542
                            length = 9;
                            InitgPtyIdvalue = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-IN':               //SKS#DevOps:16696
                    switch(locSKS_EFT_FileDetail.TransactionCode)
                    {
                        case #IFT_CB392:
                        case #RTGS539:
                            length = 35;
                            InitgPtyIdvalue = true;
                            break;
                    }
                    break;
            }
        }
        else
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            InitgPtyId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InitgPtyId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));

            switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
            {
                case 'US-CITICONNECT-XML-US':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACHCCD:
                        case #ACHPPD:
                        case #ACHCTX:
                        case #BKT500:
                        case #WLW571:
                        case #FT499:
                        case #ACHCCP:
                        case #ACHPPP:
                        case #CCDP14:
                        case #CTX17:
                        case #CHK19:
                        case #CHK585:
                        case #CTX942:
                        case #CDM950://SKS_VSTS_13477
                        case #CHK950://SKS_VSTS_13477
                        case #CTX950://SKS_VSTS_13477
                            length = 35;
                            InitgPtyIdvalue = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-AU':
                case 'US-CITICONNECT-WL-XML-AE':
                case 'US-CITICONNECT-WL-XML-AL':
                case 'US-CITICONNECT-WL-XML-AO':
                case 'US-CITICONNECT-WL-XML-AT':
                case 'US-CITICONNECT-WL-XML-AZ':
                case 'US-CITICONNECT-WL-XML-BD':
                case 'US-CITICONNECT-WL-XML-BE':
                case 'US-CITICONNECT-WL-XML-BF':
                case 'US-CITICONNECT-WL-XML-BG':
                case 'US-CITICONNECT-WL-XML-BH':
                case 'US-CITICONNECT-WL-XML-BJ':
                case 'US-CITICONNECT-WL-XML-BM':
                case 'US-CITICONNECT-WL-XML-BN':
                case 'US-CITICONNECT-WL-XML-BR':
                case 'US-CITICONNECT-WL-XML-BS':
                case 'US-CITICONNECT-WL-XML-BW':
                case 'US-CITICONNECT-WL-XML-BY':
                case 'US-CITICONNECT-WL-XML-CA':
                case 'US-CITICONNECT-WL-XML-CD':
                case 'US-CITICONNECT-WL-XML-CH':
                case 'US-CITICONNECT-WL-XML-CI':
                case 'US-CITICONNECT-WL-XML-CL':
                case 'US-CITICONNECT-WL-XML-CM':
                case 'US-CITICONNECT-WL-XML-CN':
                case 'US-CITICONNECT-WL-XML-CO':
                case 'US-CITICONNECT-WL-XML-CR':
                case 'US-CITICONNECT-WL-XML-CY':
                case 'US-CITICONNECT-WL-XML-CZ':
                case 'US-CITICONNECT-WL-XML-DE':
                case 'US-CITICONNECT-WL-XML-DK':
                case 'US-CITICONNECT-WL-XML-DO':
                case 'US-CITICONNECT-WL-XML-DZ':
                case 'US-CITICONNECT-WL-XML-EE':
                case 'US-CITICONNECT-WL-XML-EG':
                case 'US-CITICONNECT-WL-XML-ES':
                case 'US-CITICONNECT-WL-XML-ET':
                case 'US-CITICONNECT-WL-XML-FI':
                case 'US-CITICONNECT-WL-XML-FR':
                case 'US-CITICONNECT-WL-XML-GA':
                case 'US-CITICONNECT-WL-XML-GB':
                case 'US-CITICONNECT-WL-XML-GE':
                case 'US-CITICONNECT-WL-XML-GH':
                case 'US-CITICONNECT-WL-XML-GR':
                case 'US-CITICONNECT-WL-XML-GT':
                case 'US-CITICONNECT-WL-XML-GW':
                case 'US-CITICONNECT-WL-XML-GY':
                case 'US-CITICONNECT-WL-XML-HK':
                case 'US-CITICONNECT-WL-XML-HN':
                case 'US-CITICONNECT-WL-XML-HR':
                case 'US-CITICONNECT-WL-XML-HU':
                case 'US-CITICONNECT-WL-XML-ID':
                case 'US-CITICONNECT-WL-XML-IE':
                case 'US-CITICONNECT-WL-XML-IL':
                case 'US-CITICONNECT-WL-XML-IN':
                case 'US-CITICONNECT-WL-XML-IT':
                case 'US-CITICONNECT-WL-XML-JO':
                case 'US-CITICONNECT-WL-XML-JP':
                case 'US-CITICONNECT-WL-XML-KE':
                case 'US-CITICONNECT-WL-XML-KH':
                case 'US-CITICONNECT-WL-XML-KR':
                case 'US-CITICONNECT-WL-XML-KW':
                case 'US-CITICONNECT-WL-XML-KZ':
                case 'US-CITICONNECT-WL-XML-LA':
                case 'US-CITICONNECT-WL-XML-LB':
                case 'US-CITICONNECT-WL-XML-LI':
                case 'US-CITICONNECT-WL-XML-LK':
                case 'US-CITICONNECT-WL-XML-LT':
                case 'US-CITICONNECT-WL-XML-LU':
                case 'US-CITICONNECT-WL-XML-LV':
                case 'US-CITICONNECT-WL-XML-MA':
                case 'US-CITICONNECT-WL-XML-MC':
                case 'US-CITICONNECT-WL-XML-MD':
                case 'US-CITICONNECT-WL-XML-MM':
                case 'US-CITICONNECT-WL-XML-MN':
                case 'US-CITICONNECT-WL-XML-MR':
                case 'US-CITICONNECT-WL-XML-MT':
                case 'US-CITICONNECT-WL-XML-MU':
                case 'US-CITICONNECT-WL-XML-MW':
                case 'US-CITICONNECT-WL-XML-MX':
                case 'US-CITICONNECT-WL-XML-MY':
                case 'US-CITICONNECT-WL-XML-MZ':
                case 'US-CITICONNECT-WL-XML-NA':
                case 'US-CITICONNECT-WL-XML-NE':
                case 'US-CITICONNECT-WL-XML-NG':
                case 'US-CITICONNECT-WL-XML-NL':
                case 'US-CITICONNECT-WL-XML-NO':
                case 'US-CITICONNECT-WL-XML-NP':
                case 'US-CITICONNECT-WL-XML-NZ':
                case 'US-CITICONNECT-WL-XML-OM':
                case 'US-CITICONNECT-WL-XML-PE':
                case 'US-CITICONNECT-WL-XML-PG':
                case 'US-CITICONNECT-WL-XML-PH':
                case 'US-CITICONNECT-WL-XML-PK':
                case 'US-CITICONNECT-WL-XML-PL':
                case 'US-CITICONNECT-WL-XML-PT':
                case 'US-CITICONNECT-WL-XML-PY':
                case 'US-CITICONNECT-WL-XML-QA':
                case 'US-CITICONNECT-WL-XML-RO':
                case 'US-CITICONNECT-WL-XML-RS':
                case 'US-CITICONNECT-WL-XML-RU':
                case 'US-CITICONNECT-WL-XML-RW':
                case 'US-CITICONNECT-WL-XML-SA':
                case 'US-CITICONNECT-WL-XML-SC':
                case 'US-CITICONNECT-WL-XML-SE':
                case 'US-CITICONNECT-WL-XML-SG':
                case 'US-CITICONNECT-WL-XML-SI':
                case 'US-CITICONNECT-WL-XML-SK':
                case 'US-CITICONNECT-WL-XML-SN':
                case 'US-CITICONNECT-WL-XML-SZ':
                case 'US-CITICONNECT-WL-XML-TD':
                case 'US-CITICONNECT-WL-XML-TG':
                case 'US-CITICONNECT-WL-XML-TH':
                case 'US-CITICONNECT-WL-XML-TN':
                case 'US-CITICONNECT-WL-XML-TR':
                case 'US-CITICONNECT-WL-XML-TT':
                case 'US-CITICONNECT-WL-XML-TW':
                case 'US-CITICONNECT-WL-XML-TZ':
                case 'US-CITICONNECT-WL-XML-UG':
                case 'US-CITICONNECT-WL-XML-US':
                case 'US-CITICONNECT-WL-XML-UY':
                case 'US-CITICONNECT-WL-XML-UZ':
                case 'US-CITICONNECT-WL-XML-VN':
                case 'US-CITICONNECT-WL-XML-ZA':
                case 'US-CITICONNECT-WL-XML-ZM':
                case 'US-CITICONNECT-WL-XML-AG':
                case 'US-CITICONNECT-WL-XML-MO':                //SKS_VSTS_13720
                case 'US-CITICONNECT-WL-XML-HT':
                case 'US-CITICONNECT-WL-XML-FJ':
                case 'US-CITICONNECT-WL-XML-BO':
                case 'US-CITICONNECT-WL-XML-IS':
                case 'US-CITICONNECT-WL-XML-NI':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH_WL:
                        case #WIRE_WL:
                        case #CHK_WL:
                        case #SEPA_WL:
                            length = 9;
                            InitgPtyIdvalue = true;
                            break;
                    }
                    break;
            }
        }
        
        if(InitgPtyId && InitgPtyIdvalue)
        {
            //          9.1.12: Id
            nodeId = _nodeInitgPty.appendChild(xmlDoc.createElement('Id'));
    
            //              9.1.13: OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            //                  9.1.15: Other
            nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
            //                      9.1.1.16: Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', this.CharacterReplacement(InitgPtyId), length);     //SKS_FDD_10590
            
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf()
    {
        //------------------------------------------------------------------------------------------------------
        //  2.0: PmtInf
        //      2.1: PmtInfId
        //      2.2: PmtMtd
        //      2.4: NbOfTxs
        //      2.5: CtrlSum
        //      2.6: PmtTpInf
        //      2.17: ReqdExctnDt
        //      2.19: Dbtr
        //      2.20: DbtrAcct
        //      2.21: DbtrAgt
        //      2.24 ChrgBr
        //------------------------------------------------------------------------------------------------------
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;
        boolean printPmtMtdCHK;

        batchCount++;

        // Select count and sum for this bank account
        select COUNT(InvoiceOrigAmountCur), SUM(InvoiceSettleAmountPmtCur) from tmpSKS_EFT_FileDetail
            where
                tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                tmpSKS_EFT_FileDetail.BankAccountId == mSKS_EFT_FileDetail.BankAccountId &&
                tmpSKS_EFT_FileDetail.EffectiveDate == mSKS_EFT_FileDetail.EffectiveDate &&
                tmpSKS_EFT_FileDetail.PaymMode == mSKS_EFT_FileDetail.PaymMode &&
                tmpSKS_EFT_FileDetail.PaymSpec == mSKS_EFT_FileDetail.PaymSpec &&
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == mSKS_EFT_FileDetail.PaymentCurrencyCode &&
                tmpSKS_EFT_FileDetail.PaymentCompany == mSKS_EFT_FileDetail.PaymentCompany;

        //  2.0: PmtInf
        nodePmtInf = nodeRoot.appendChild(xmlDoc.createElement('PmtInf'));

        //      2.1: PmtInfId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtInfId', SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr + '-' + int2str(batchCount),35));

        //      2.2: PmtMtd
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-TW':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHECK427:
                        printPmtMtdCHK = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHECK416:
                        printPmtMtdCHK = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHECK815:
                        printPmtMtdCHK = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHECK405:
                        printPmtMtdCHK = true;
                        break;
                }
                break;
        }

        if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AR)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'DD');
        }
        else if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::Yes ||
                subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) == 'CHK'      ||
                printPmtMtdCHK)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'CHK');
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'TRF');
        }

        //      2.4: NbOfTxs
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'NbOfTxs', num2str(tmpSKS_EFT_FileDetail.InvoiceOrigAmountCur,0,0,0,0));

        if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AP || mSKS_EFT_FileDetail.Module == SKS_EFT_Module::BTB || mSKS_EFT_FileDetail.Module == SKS_EFT_Module::CNP)
        {
            if((mSKS_EFT_FileDetail.PaymentCurrencyCode == 'XOF' ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'XAF' ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'XPF' ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'BIF' ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'KMF' ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'GNF' ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'HUF' ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'ISK' ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'IDR' ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'JPY' ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'KRW' ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'LAK' ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'PYG' ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'RWF' ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'TWD' ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'UGX' ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'VUV' ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'VND' ||
                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CLP')&&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE_WL)     //SKS#DevOps:17344
            {
                //      2.5: CtrlSum
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,0,0,0));
            }
            else
            {
                //      2.5: CtrlSum
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0));
            }
        }
        else
        {
            //      2.5: CtrlSum
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,0,2,1,0));
        }

        //      2.6: PmtTpInf
        if((mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::No && subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK')||
            mSKS_EFT_FileDetail.PaymSpec == #CHK_WL ||
            mSKS_EFT_FileDetail.PaymSpec == #CHK_WL_RC ||
            mSKS_EFT_FileDetail.PaymSpec == #CHK19 ||
            mSKS_EFT_FileDetail.PaymSpec == #CHK950)    //SKS_VSTS_13477
        {
            this.node_PmtInf_PmtTpInf(nodePmtInf);
        }

        if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AR)
        {
            //      2.18: ReqdColltnDt
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'ReqdColltnDt', SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate, DateSeparator::Hyphen));
        }
        else
        {
            //      2.17: ReqdExctnDt
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'ReqdExctnDt', SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate, DateSeparator::Hyphen));
        }
        
        //For AP
        if(mSKS_EFT_FileFormatPaymSpec.UseWithVendors && mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AP)
        {
            this.node_PmtInf_DbtrNodes(nodePmtInf);
        }

        //For AR
        if(mSKS_EFT_FileFormatPaymSpec.UseWithCustomers && mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AR)
        {
            this.node_PmtInf_CdtrNodes(nodePmtInf);
        }

        //      2.24 ChrgBr
        this.node_PmtInf_ChrgBr(nodePmtInf);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr</Name>
				<Source><![CDATA[
    protected void node_GrpHdr()
    {
        //------------------------------------------------------------------------------------------------------
        //  1.0: GrpHdr
        //      1.1: MsgId
        //      1.2: CreDtTm
        //      1.6: NbOfTxs
        //      1.7: CtrlSum
        //      1.8: InitgPty
        //          Nm
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeGrpHdr;
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;
        real amount;
        boolean isSpecific = true;
    
        // Select count and sum for this file
        while select InvoiceOrigAmountCur, InvoiceSettleAmountPmtCur, PaymentCurrencyCode, TransactionCode from tmpSKS_EFT_FileDetail
            where
                tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary
        {
            if((tmpSKS_EFT_FileDetail.PaymentCurrencyCode == 'XOF' ||
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == 'XAF' ||
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == 'XPF' ||
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == 'BIF' ||
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == 'KMF' ||
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == 'GNF' ||
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == 'HUF' ||
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == 'ISK' ||
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == 'IDR' ||
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == 'JPY' ||
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == 'KRW' ||
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == 'LAK' ||
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == 'PYG' ||
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == 'RWF' ||
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == 'TWD' ||
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == 'UGX' ||
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == 'VUV' ||
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == 'VND' ||
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == 'CLP')&&
                tmpSKS_EFT_FileDetail.TransactionCode == #WIRE_WL)     //SKS#DevOps:17344
            {
                amount+= str2Num(num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,0,0,0,0));
            }
            else
            {
                amount+= str2Num(num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,0,2,1,0));
                isSpecific = false;
            }
        }
    
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail1;

        // Select count and sum for this file
        select COUNT(InvoiceOrigAmountCur) from tmpSKS_EFT_FileDetail1
            where
                tmpSKS_EFT_FileDetail1.FileRecId == mSKS_EFT_File.RecId &&
                tmpSKS_EFT_FileDetail1.RecordSection == SKS_EFT_RecordSection::Payments &&
                tmpSKS_EFT_FileDetail1.RecordSummary != SKS_EFT_RecordSummary::NonSummary;

        //  1.0: GrpHdr
        nodeGrpHdr = nodeRoot.appendChild(xmlDoc.createElement('GrpHdr'));
    
        //      1.1: MsgId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'MsgId', SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr,35));
    
        //      1.2: CreDtTm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CreDtTm', DateTimeUtil::toStr(DateTimeUtil::utcNow()));
    
        //      1.3: Authstn
        this.node_GrpHdr_Authstn(nodeGrpHdr);
    
        //      1.6: NbOfTxs
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'NbOfTxs', num2str(tmpSKS_EFT_FileDetail1.InvoiceOrigAmountCur,0,0,0,0));
    
        
        //      1.7: CtrlSum
        if(isSpecific)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CtrlSum', num2str(amount * -1,0,0,0,0));
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CtrlSum', num2str(amount * -1,0,2,1,0));
        }           
    
        //      1.8: InitgPty
        this.node_GrpHdr_InitgPty(nodeGrpHdr);

    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_BtchBookg</Name>
				<Source><![CDATA[
    protected void node_PmtInf_BtchBookg(XmlElement _BtchBookg)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.3: BtchBookg
        //------------------------------------------------------------------------------------------------------
        str batchBooking;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-DE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                    case #SEPA939:
                    case #SEPA848:
                        batchBooking = 'true';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-FI':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        batchBooking = 'true';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-FR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        batchBooking = 'true';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-GB':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                    case #ACH_DC:
                    case #SEPA939:
                    case #SEPA848:
                        batchBooking = 'true';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        batchBooking = 'true';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_DC:
                        batchBooking = 'true';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH410:
                    case #WIRE391:
                        if(strUpr(this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BtchBookg', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank))) == 'Y')        //SKS_FDD_10590
                        {
                            batchBooking = 'TRUE';
                        }
                        else
                        {
                            batchBooking = 'FALSE';
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        batchBooking = 'true';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA938:
                        batchBooking = 'true';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-RO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM789:
                        if(strUpr(this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BtchBookg', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank))) == 'Y')
                        {
                            batchBooking = 'true';
                        }
                        else
                        {
                            batchBooking = 'false';
                        }
                        break;
                }
                break;
        }
        if(batchBooking)
        {
            //              2.3: BtchBookg
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _BtchBookg, 'BtchBookg', batchBooking);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_Id(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.79: Cdtr
        //          Id
        //              OrgId
        //                  Othr
        //                      Id
        //                      SchemeName
        //          or
        //              PrvtId
        //                  Othr
        //                      Id
        //                      SchemeName
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeId;
        XmlElement nodeOrgPvtId;
        XmlElement nodeOthr;
        XmlElement nodeSchmeNm;
        str CdtrId;
        str TaxID, value, benId;
        int length;
        boolean printCdtrId = true;
        boolean billerCode = false;
        boolean schmeNm = true;
        boolean bicCode = false;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT602:
                    case #DFT603:
                    case #CBFT604:
                        printCdtrId = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CPS28:
                    case #CPS29:
                    case #USFCP821:
                        printCdtrId = false;
                        break;
                    //SKS_VSTS_13477--->
                    case #CTX950:
                    case #CDM950:
                    case #CHK950:
                        printCdtrId = true;
                        schmeNm = false;
                        break;
                    //SKS_VSTS_13477<---
                }
                break;
            case 'US-CITICONNECT-XML-EC':
            case 'US-CITICONNECT-XML-CR':
            case 'US-CITICONNECT-XML-DO':
            case 'US-CITICONNECT-XML-SV':
            case 'US-CITICONNECT-XML-GT':
            case 'US-CITICONNECT-XML-CL':
            case 'US-CITICONNECT-XML-PE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT442:
                        printCdtrId = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-MX':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT827:
                    case #CBFT442:
                        printCdtrId = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK815:
                    case #BKT547:
                        printCdtrId = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-UY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT442:
                        printCdtrId = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-VN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DFT391:
                    case #CBFT392:
                        printCdtrId = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT547:
                        printCdtrId = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH410:
                    case #WIRE391:
                    case #WIRE392:
                        printCdtrId = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BPAY889:
                        billerCode = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-ZA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE574:
                        bicCode = true;
                        break;
                    case #ACH809:
                        length = 1;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-RO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM789:
                    case #CBFT574:
                        printCdtrId = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM903:
                    case #CBFT574:
                        printCdtrId = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IN':           //SKS#DevOps#15853
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DFT541:
                    case #RTGS539:
                    case #TAX908:
                    case #TAX927:
                    case #TAX947:
                    case #IFT_CB392:
                    case #CDT862:
                        printCdtrId = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-CO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        printCdtrId = true;
                        schmeNm = false;
                        break;
                    case #ACH_WL:
                    case #CHK_WL:
                    case #SEPA_WL:
                        printCdtrId = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-PK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        printCdtrId = true;
                        schmeNm = false;
                        break;
                    case #ACH_WL:
                    case #CHK_WL:
                    case #SEPA_WL:
                        printCdtrId = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-KR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        printCdtrId = true;
                        schmeNm = false;
                        break;
                    case #ACH_WL:
                    case #CHK_WL:
                    case #SEPA_WL:
                        printCdtrId = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        printCdtrId = true;
                        schmeNm = false;
                        break;
                    case #ACH_WL:
                    case #CHK_WL:
                    case #SEPA_WL:
                        printCdtrId = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AE':
            case 'US-CITICONNECT-WL-XML-AL':
            case 'US-CITICONNECT-WL-XML-AO':
            case 'US-CITICONNECT-WL-XML-AT':
            case 'US-CITICONNECT-WL-XML-AU':
            case 'US-CITICONNECT-WL-XML-BD':
            case 'US-CITICONNECT-WL-XML-BE':
            case 'US-CITICONNECT-WL-XML-BF':
            case 'US-CITICONNECT-WL-XML-BG':
            case 'US-CITICONNECT-WL-XML-BH':
            case 'US-CITICONNECT-WL-XML-BJ':
            case 'US-CITICONNECT-WL-XML-BM':
            case 'US-CITICONNECT-WL-XML-BN':
            case 'US-CITICONNECT-WL-XML-BR':
            case 'US-CITICONNECT-WL-XML-BS':
            case 'US-CITICONNECT-WL-XML-BW':
            case 'US-CITICONNECT-WL-XML-BY':
            case 'US-CITICONNECT-WL-XML-CA':
            case 'US-CITICONNECT-WL-XML-CD':
            case 'US-CITICONNECT-WL-XML-CH':
            case 'US-CITICONNECT-WL-XML-CI':
            case 'US-CITICONNECT-WL-XML-CL':
            case 'US-CITICONNECT-WL-XML-CM':
            case 'US-CITICONNECT-WL-XML-CN':
            case 'US-CITICONNECT-WL-XML-CR':
            case 'US-CITICONNECT-WL-XML-CY':
            case 'US-CITICONNECT-WL-XML-CZ':
            case 'US-CITICONNECT-WL-XML-DE':
            case 'US-CITICONNECT-WL-XML-DK':
            case 'US-CITICONNECT-WL-XML-DO':
            case 'US-CITICONNECT-WL-XML-DZ':
            case 'US-CITICONNECT-WL-XML-EE':
            case 'US-CITICONNECT-WL-XML-EG':
            case 'US-CITICONNECT-WL-XML-ES':
            case 'US-CITICONNECT-WL-XML-ET':
            case 'US-CITICONNECT-WL-XML-FI':
            case 'US-CITICONNECT-WL-XML-FR':
            case 'US-CITICONNECT-WL-XML-GA':
            case 'US-CITICONNECT-WL-XML-GB':
            case 'US-CITICONNECT-WL-XML-GE':
            case 'US-CITICONNECT-WL-XML-GH':
            case 'US-CITICONNECT-WL-XML-GR':
            case 'US-CITICONNECT-WL-XML-GT':
            case 'US-CITICONNECT-WL-XML-GW':
            case 'US-CITICONNECT-WL-XML-GY':
            case 'US-CITICONNECT-WL-XML-HK':
            case 'US-CITICONNECT-WL-XML-HN':
            case 'US-CITICONNECT-WL-XML-HR':
            case 'US-CITICONNECT-WL-XML-HU':
            case 'US-CITICONNECT-WL-XML-ID':
            case 'US-CITICONNECT-WL-XML-IE':
            case 'US-CITICONNECT-WL-XML-IL':
            case 'US-CITICONNECT-WL-XML-IN':
            case 'US-CITICONNECT-WL-XML-IT':
            case 'US-CITICONNECT-WL-XML-JO':
            case 'US-CITICONNECT-WL-XML-JP':
            case 'US-CITICONNECT-WL-XML-KE':
            case 'US-CITICONNECT-WL-XML-KH':
            case 'US-CITICONNECT-WL-XML-KW':
            case 'US-CITICONNECT-WL-XML-KZ':
            case 'US-CITICONNECT-WL-XML-LA':
            case 'US-CITICONNECT-WL-XML-LB':
            case 'US-CITICONNECT-WL-XML-LI':
            case 'US-CITICONNECT-WL-XML-LK':
            case 'US-CITICONNECT-WL-XML-LT':
            case 'US-CITICONNECT-WL-XML-LU':
            case 'US-CITICONNECT-WL-XML-LV':
            case 'US-CITICONNECT-WL-XML-MA':
            case 'US-CITICONNECT-WL-XML-MC':
            case 'US-CITICONNECT-WL-XML-MD':
            case 'US-CITICONNECT-WL-XML-MM':
            case 'US-CITICONNECT-WL-XML-MN':
            case 'US-CITICONNECT-WL-XML-MR':
            case 'US-CITICONNECT-WL-XML-MT':
            case 'US-CITICONNECT-WL-XML-MU':
            case 'US-CITICONNECT-WL-XML-MW':
            case 'US-CITICONNECT-WL-XML-MX':
            case 'US-CITICONNECT-WL-XML-MY':
            case 'US-CITICONNECT-WL-XML-MZ':
            case 'US-CITICONNECT-WL-XML-NA':
            case 'US-CITICONNECT-WL-XML-NE':
            case 'US-CITICONNECT-WL-XML-NG':
            case 'US-CITICONNECT-WL-XML-NL':
            case 'US-CITICONNECT-WL-XML-NO':
            case 'US-CITICONNECT-WL-XML-NP':
            case 'US-CITICONNECT-WL-XML-NZ':
            case 'US-CITICONNECT-WL-XML-OM':
            case 'US-CITICONNECT-WL-XML-PE':
            case 'US-CITICONNECT-WL-XML-PG':
            case 'US-CITICONNECT-WL-XML-PH':
            case 'US-CITICONNECT-WL-XML-PL':
            case 'US-CITICONNECT-WL-XML-PT':
            case 'US-CITICONNECT-WL-XML-PY':
            case 'US-CITICONNECT-WL-XML-QA':
            case 'US-CITICONNECT-WL-XML-RO':
            case 'US-CITICONNECT-WL-XML-RS':
            case 'US-CITICONNECT-WL-XML-RU':
            case 'US-CITICONNECT-WL-XML-RW':
            case 'US-CITICONNECT-WL-XML-SA':
            case 'US-CITICONNECT-WL-XML-SC':
            case 'US-CITICONNECT-WL-XML-SE':
            case 'US-CITICONNECT-WL-XML-SG':
            case 'US-CITICONNECT-WL-XML-SI':
            case 'US-CITICONNECT-WL-XML-SK':
            case 'US-CITICONNECT-WL-XML-SN':
            case 'US-CITICONNECT-WL-XML-SZ':
            case 'US-CITICONNECT-WL-XML-TD':
            case 'US-CITICONNECT-WL-XML-TG':
            case 'US-CITICONNECT-WL-XML-TH':
            case 'US-CITICONNECT-WL-XML-TN':
            case 'US-CITICONNECT-WL-XML-TR':
            case 'US-CITICONNECT-WL-XML-TT':
            case 'US-CITICONNECT-WL-XML-TW':
            case 'US-CITICONNECT-WL-XML-TZ':
            case 'US-CITICONNECT-WL-XML-UG':
            case 'US-CITICONNECT-WL-XML-US':
            case 'US-CITICONNECT-WL-XML-UY':
            case 'US-CITICONNECT-WL-XML-UZ':
            case 'US-CITICONNECT-WL-XML-VN':
            case 'US-CITICONNECT-WL-XML-ZA':
            case 'US-CITICONNECT-WL-XML-ZM':
            case 'US-CITICONNECT-WL-XML-AG':
            case 'US-CITICONNECT-WL-XML-MO':                //SKS_VSTS_13720
            case 'US-CITICONNECT-WL-XML-HT':
            case 'US-CITICONNECT-WL-XML-FJ':
            case 'US-CITICONNECT-WL-XML-BO':
            case 'US-CITICONNECT-WL-XML-IS':
            case 'US-CITICONNECT-WL-XML-BA':                //SKS#DevOps:16138
            case 'US-CITICONNECT-WL-XML-BB':                //SKS#DevOps:16138
            case 'US-CITICONNECT-WL-PPW-XML':                //SKS_VSTS_14271
            case 'US-CITICONNECT-WL-XML-ML':
            case 'US-CITICONNECT-WL-XML-KM':    //SKS#DevOps:16946
            case 'US-CITICONNECT-WL-XML-GM':    //SKS#DevOps:17970
            case 'US-CITICONNECT-WL-XML-MG':    //SKS#DevOps:16946
            case 'US-CITICONNECT-WL-XML-NI':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_WL:
                    case #CHK_WL:
                    case #SEPA_WL:
                    case #WIRE_WL:
                    case #PPW_WL:                            //SKS_VSTS_14271
                    case #PPW_PH_WL:                         //SKS#DevOps:14542
                        printCdtrId = false;
                        break;
                }
                break;            
        }
    
        if(printCdtrId)
        {
            TaxID = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BenTaxId', mSKS_EFT_FileDetail.RecId));        //SKS_FDD_10590
    
            benId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BenId', mSKS_EFT_FileDetail.RecId));       //SKS_FDD_10590

            if(TaxID == '')
            {
                TaxID = mSKS_EFT_FileDetail.VATNum;
            }
                
            //SKS_VSTS_13477--->
            switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
            {
                case 'US-CITICONNECT-XML-US':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CTX950:
                        case #CDM950:
                        case #CHK950:
                            TaxID = mSKS_EFT_FileDetail.AccountNum;
                            break;
                    }
                    break;
            }
            //SKS_VSTS_13477<---

            if(TaxID || benId )
            {
                //          Id
                nodeId = _nodeCdtr.appendChild(xmlDoc.createElement('Id'));
                CdtrId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CdtrId', mSKS_EFT_FileDetail.RecId));         //SKS_FDD_10590
                if(CdtrId == 'PrvtId')
                {
                    nodeOrgPvtId = nodeId.appendChild(xmlDoc.createElement('PrvtId'));
                }
                else
                {
                    nodeOrgPvtId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
                }
                if(bicCode)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOrgPvtId, 'BICOrBEI', benId);
                }
                else
                {
                    nodeOthr = nodeOrgPvtId.appendChild(xmlDoc.createElement('Othr'));
                
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', TaxID, length);
    
                    if(schmeNm)
                    {
                        nodeSchmeNm = nodeOthr.appendChild(xmlDoc.createElement('SchmeNm'));
    
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', 'TXID');
                    }
                }
            }
            else if(billerCode)
            {
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BillerCode', mSKS_EFT_FileDetail.RecId));      //SKS_FDD_10590
    
                if(value)
                {
                    //          Id
                    nodeId = _nodeCdtr.appendChild(xmlDoc.createElement('Id'));
    
                    //            OrgId
                    nodeOrgPvtId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
                    //                  Othr
                    nodeOthr = nodeOrgPvtId.appendChild(xmlDoc.createElement('Othr'));
    
                    //                      Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.DepBankAcct, 10);
                    //                          SchmeNm
                    nodeSchmeNm = nodeOthr.appendChild(xmlDoc.createElement('SchmeNm'));
    
                    //                      Prtry
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Prtry', value);
    
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_CtctDtls</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_CtctDtls(XmlElement _nodeCdtr)
    {
        XmlElement nodeCtctDtls;
        str address;
        
        address = SKS_EFT_Format::getCodelookupvalue('PayPalEmail', mSKS_EFT_FileDetail.RecId);     //SKS#DevOps:14972

        if(address  && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PPW_WL)
        {
            //              CtctDtls
            nodeCtctDtls = _nodeCdtr.appendChild(xmlDoc.createElement('CtctDtls'));
            
            //                  EmailAdr
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtctDtls, 'EmailAdr', address, 127); //SKS#DevOps:14972
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------

        XmlElement nodePstlAdr;
        str address, address1, address2;
        str value,benType,resStatus,transType,transFacilityType;
        str iinbin, eknp,bdcode, iin, kpp;

        boolean pstlAdr2AdrLines = false;
        boolean strdUstrd = false;
        boolean strd = false;
        boolean ustrd = true;
        boolean printAddress = true;

        VendBankAccount                 mVendBankAccount;

        EventHandlerResult result = new EventHandlerResult();

        this.getBankPurposeCode();

        mVendBankAccount = VendBankAccount::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum, mSKS_EFT_FileDetail.DepBankAccountId);

        this.node_PmtInf_Cdtr_PstlAdr_delegate(_nodeCdtr,mSKS_EFT_FileDetail, mSKS_EFT_FileFormatPaymSpec, mVendBankAccount, xmldoc, result);

        if(!result.result())
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ARState', mSKS_EFT_FileDetail.RecId));

            switch( mSKS_EFT_FileFormatPaymSpec.FormatId)
            {
                case 'US-CITICONNECT-WL-XML-AU':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                        case #ACH_WL:
                            //      PstlAdr
                            nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 1, 35), 0, false);

                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', '/' + subStr(mRemittanceCity + '/ /' + mRemittanceZipCode + '/', 1, 35), 0, false);

                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', '/' + subStr(mRemittanceState +'/ /' + 'AU' + '/', 1, 35), 0, false);

                            printAddress = false;

                            break;
                        case #CHK_WL:
                            //      PstlAdr
                            nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 1, 35), 0, false);

                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine2, 1, 35), 0, false);

                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceCity + ', ' + mRemittanceState + ' ' +
                            mRemittanceZipCode + ' ' + this.getLogisticsAddressCountryISO(mRemittanceCountryRegionId), 1, 35), 0, false);

                            printAddress = false;

                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-US':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH_WL:

                            //      PstlAdr
                            nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 1, 35), 0, false);

                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceCity + ',' + mRemittanceState, 1, 35), 0, false);

                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr('US' +',' + mRemittanceZipCode, 1, 35), 0, false);

                            printAddress = false;

                            break;
                        case #WIRE_WL:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'EC')
                            {
                                mRemittanceAdrLine1 = mRemittanceAdrLine1 + mRemittanceAdrLine2;

                                if(strLen(mRemittanceName) > 35)
                                {
                                    address = address + subStr(mRemittanceName, 36, 105) + ' ADD-';
                                }
                                if(mRemittanceAdrLine1)
                                {
                                    address = address + mRemittanceAdrLine1;
                                }
                                if(mRemittanceZipCode)
                                {
                                    address = address + ' ' + mRemittanceZipCode;
                                }
                                if(mRemittanceCountryRegionId)
                                {
                                    address = address + ' ' + mRemittanceCountryRegionId;
                                }
                                if(address)
                                {
                                    //      PstlAdr
                                    nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 1, 35)), 0, false);

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 36, 35)), 0, false);

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 71, 35)), 0, false);

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 106, 35)), 0, false);
                                }
                            }
                            else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PA' ||
                                    this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AR' ||
                                    this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'EI' ||
                                    this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UA' ||
                                    this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ZW')
                            {
                                if(strLen(mRemittanceName) > 35)
                                {
                                    address = address + subStr(mRemittanceName, 36, 105) + ' ADD-';
                                }
                                if(mRemittanceAdrLine1)
                                {
                                    address = address + mRemittanceAdrLine1;
                                }
                                if(mRemittanceAdrLine2)
                                {
                                    address = address + ' ' + mRemittanceAdrLine2;
                                }
                                if(mRemittanceCity)
                                {
                                    address = address + ' ' + mRemittanceCity;
                                }
                                if(mRemittanceCountryRegionId)
                                {
                                    address = address + ' ' + mRemittanceCountryRegionId;
                                }
                                if(mRemittanceState)
                                {
                                    address = address + ' ' + mRemittanceState;
                                }
                                if(mRemittanceZipCode)
                                {
                                    address = address + ' ' + mRemittanceZipCode;
                                }
       
                                if(address)
                                {
                                    //      PstlAdr
                                    nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 1, 35)), 0, false);

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 36, 35)), 0, false);

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 71, 35)), 0, false);

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 106, 35)), 0, false);
                                }
                            }
                            else
                            {
                                if(strLen(mRemittanceName) > 35)
                                {
                                    address = address + subStr(mRemittanceName, 36, 105) + ' ADD-';
       
                                    if(mRemittanceAdrLine1)
                                    {
                                        address = address + mRemittanceAdrLine1;
                                    }
                                    if(mRemittanceAdrLine2)
                                    {
                                        address = address + ' ' + mRemittanceAdrLine2;
                                    }
                                    if(mRemittanceCity)
                                    {
                                        address = address + ' ' + mRemittanceCity;
                                    }
                                    if(mRemittanceCountryRegionId)
                                    {
                                        address = address + ' ' + mRemittanceCountryRegionId;
                                    }
                                    if(mRemittanceState)
                                    {
                                        address = address + ' ' + mRemittanceState;
                                    }
                                    if(mRemittanceZipCode)
                                    {
                                        address = address + ' ' + mRemittanceZipCode;
                                    }
                                    if(address)
                                    {
                                        //      PstlAdr
                                        nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 1, 35)), 0, false);

                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 36, 35)), 0, false);

                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 71, 35)), 0, false);

                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 106, 35)), 0, false);
                                    }
                                }
                                else
                                {
                                    this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity, 35, mRemittanceAdrLine2, mRemittanceState, true);
                                }
                            }
                            printAddress = false;
                            break;
                        }
                    break;
                case 'US-CITICONNECT-WL-XML-BA':        //SKS#DevOps:16138
                case 'US-CITICONNECT-WL-XML-MG':        //SKS#DevOps:16946
                case 'US-CITICONNECT-WL-XML-ML':        //SKS#DevOps:16946
                case 'US-CITICONNECT-WL-XML-KM':        //SKS#DevOps:16946
                case 'US-CITICONNECT-WL-XML-GY':        //SKS#DevOps:18131
                case 'US-CITICONNECT-WL-XML-GM':        //SKS#DevOps:17970
                case 'US-CITICONNECT-WL-XML-JM':        //SKS#DevOps:17378
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity, 35, mRemittanceAdrLine2, mRemittanceState, true);
                            printAddress = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-BB':        //SKS#DevOps:16237
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity, 35, mRemittanceAdrLine2, mRemittanceState, true);
                            printAddress = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-KZ':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            iinbin = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('IINBIN', mSKS_EFT_FileDetail.RecId));
                            eknp = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('EKNP', mSKS_EFT_FileDetail.RecId));
                            bdcode = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BudgetCode', mSKS_EFT_FileDetail.RecId));

                            if(iinbin || eknp || bdcode)
                            {
                                //      PstlAdr
                                nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', 'IIN/BIN' + iinbin, 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', 'EKNP' + eknp, 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', bdcode, 35, false);
                            }
                            printAddress = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-RU':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'RUB')
                            {
                                iin = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('IINBIN', mSKS_EFT_FileDetail.RecId));
                                kpp = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('KPP', mSKS_EFT_FileDetail.RecId));

                                if(iin || kpp)
                                {
                                    //      PstlAdr
                                    nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', 'INN' + subStr(iin, 1, 12), 0, false);

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', 'KPP ' + kpp, 0, false);
                                }       
                                printAddress = false;
                            }
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-ID':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:

                            benType = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BeneType', mSKS_EFT_FileDetail.RecId));
                            resStatus = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ResStatus', mSKS_EFT_FileDetail.RecId));
                            transType = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TransType', mSKS_EFT_FileDetail.RecId));
                            transFacilityType = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TransFacilityType', mSKS_EFT_FileDetail.RecId));
   
                            if(benType || resStatus || transType || transFacilityType || (strLen(mRemittanceName) > 35))
                            {
                                //      PstlAdr
                                nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                if(strLen(mRemittanceName) > 35)
                                {
                                    mRemittanceName = subStr(mRemittanceName, 36, 105);

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(mRemittanceName), 35, false);

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(this.CharacterReplacement(mRemittanceName), 36, 35), 35, false);

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(this.CharacterReplacement(mRemittanceName), 71, 35), 35, false);
                                }
                                address = strFmt('SKN/%1/%2/%3/%4',benType,resStatus,transType,transFacilityType);
                                //          AdrLine
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(address), 35, false);
                            }

                            printAddress = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-AZ':
                case 'US-CITICONNECT-WL-XML-BM':
                case 'US-CITICONNECT-WL-XML-BR':
                case 'US-CITICONNECT-WL-XML-BY':
                case 'US-CITICONNECT-WL-XML-CA':
                case 'US-CITICONNECT-WL-XML-CD':
                case 'US-CITICONNECT-WL-XML-CL':
                case 'US-CITICONNECT-WL-XML-CN':
                case 'US-CITICONNECT-WL-XML-CO':
                case 'US-CITICONNECT-WL-XML-CR':
                case 'US-CITICONNECT-WL-XML-GB':
                case 'US-CITICONNECT-WL-XML-GE':
                case 'US-CITICONNECT-WL-XML-HN':
                case 'US-CITICONNECT-WL-XML-KE':
                case 'US-CITICONNECT-WL-XML-KR':
                case 'US-CITICONNECT-WL-XML-LK':
                case 'US-CITICONNECT-WL-XML-MM':
                case 'US-CITICONNECT-WL-XML-MO':
                case 'US-CITICONNECT-WL-XML-HT':
                case 'US-CITICONNECT-WL-XML-MU':
                case 'US-CITICONNECT-WL-XML-MY':
                case 'US-CITICONNECT-WL-XML-MZ':
                case 'US-CITICONNECT-WL-XML-NG':
                case 'US-CITICONNECT-WL-XML-PE':
                case 'US-CITICONNECT-WL-XML-PK':
                case 'US-CITICONNECT-WL-XML-PL':
                case 'US-CITICONNECT-WL-XML-PY':
                case 'US-CITICONNECT-WL-XML-RO':
                case 'US-CITICONNECT-WL-XML-RS':
                case 'US-CITICONNECT-WL-XML-TW':
                case 'US-CITICONNECT-WL-XML-UG':                
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CHK_WL:
                            if(strLen(mRemittanceName) > 35)
                            {
                                mRemittanceAdrLine1 = subStr(mRemittanceName, 36, 105) + ' ADD-' + mRemittanceAdrLine1 + ' ' + mRemittanceAdrLine2 + ' ' + mRemittanceCity + ' ' + mRemittanceCountryRegionId + ' ' + mRemittanceState + ' ' + mRemittanceZipCode;
                                //      PstlAdr
                                nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 1, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 36, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 71, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 106, 35), 0, false);
                            }
                            else
                            {
                                this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity, 35, mRemittanceAdrLine2, mRemittanceState, true);
                            }
                            printAddress = false;
                            break;
                        case #WIRE_WL:
                            if(strLen(mRemittanceName) > 35)
                            {
                                address = address + subStr(mRemittanceName, 36, 105) + ' ADD-';
                            }
                            if(mRemittanceAdrLine1)
                            {
                                address = address + mRemittanceAdrLine1;
                            }
                            if(mRemittanceAdrLine2)
                            {
                                address = address + ' ' + mRemittanceAdrLine2;
                            }
                            if(mRemittanceCity)
                            {
                                address = address + ' ' + mRemittanceCity;
                            }
                            if(mRemittanceCountryRegionId)
                            {
                                address = address + ' ' + mRemittanceCountryRegionId;
                            }
                            if(mRemittanceState)
                            {
                                address = address + ' ' + mRemittanceState;
                            }
                            if(mRemittanceZipCode)
                            {
                                address = address + ' ' + mRemittanceZipCode;
                            }
                            if(address)
                            {
                                //      PstlAdr
                                nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 1, 35)), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 36, 35)), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 71, 35)), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 106, 35)), 0, false);
                            }
                            printAddress = false;
                            break;
                        case #SEPA_WL:
                        case #ACH_WL:
                            strd = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-AE':
                case 'US-CITICONNECT-WL-XML-AO':
                case 'US-CITICONNECT-WL-XML-AT':
                case 'US-CITICONNECT-WL-XML-BD':
                case 'US-CITICONNECT-WL-XML-BE':
                case 'US-CITICONNECT-WL-XML-BF':
                case 'US-CITICONNECT-WL-XML-BG':
                case 'US-CITICONNECT-WL-XML-BH':
                case 'US-CITICONNECT-WL-XML-BJ':
                case 'US-CITICONNECT-WL-XML-BN':
                case 'US-CITICONNECT-WL-XML-BS':
                case 'US-CITICONNECT-WL-XML-BW':
                case 'US-CITICONNECT-WL-XML-CH':
                case 'US-CITICONNECT-WL-XML-CI':
                case 'US-CITICONNECT-WL-XML-CM':
                case 'US-CITICONNECT-WL-XML-CY':
                case 'US-CITICONNECT-WL-XML-CZ':
                case 'US-CITICONNECT-WL-XML-DK':
                case 'US-CITICONNECT-WL-XML-DO':
                case 'US-CITICONNECT-WL-XML-DZ':
                case 'US-CITICONNECT-WL-XML-EE':
                case 'US-CITICONNECT-WL-XML-EG':
                case 'US-CITICONNECT-WL-XML-ES':
                case 'US-CITICONNECT-WL-XML-FI':
                case 'US-CITICONNECT-WL-XML-FR':
                case 'US-CITICONNECT-WL-XML-GA':
                case 'US-CITICONNECT-WL-XML-GH':
                case 'US-CITICONNECT-WL-XML-GR':
                case 'US-CITICONNECT-WL-XML-GT':
                case 'US-CITICONNECT-WL-XML-GW':
                case 'US-CITICONNECT-WL-XML-HK':
                case 'US-CITICONNECT-WL-XML-HR':
                case 'US-CITICONNECT-WL-XML-HU':
                case 'US-CITICONNECT-WL-XML-IE':
                case 'US-CITICONNECT-WL-XML-IL':
                case 'US-CITICONNECT-WL-XML-IN':
                case 'US-CITICONNECT-WL-XML-IT':
                case 'US-CITICONNECT-WL-XML-JO':
                case 'US-CITICONNECT-WL-XML-JP':
                case 'US-CITICONNECT-WL-XML-KW':
                case 'US-CITICONNECT-WL-XML-LB':
                case 'US-CITICONNECT-WL-XML-LI':
                case 'US-CITICONNECT-WL-XML-LT':
                case 'US-CITICONNECT-WL-XML-LU':
                case 'US-CITICONNECT-WL-XML-LV':
                case 'US-CITICONNECT-WL-XML-MA':
                case 'US-CITICONNECT-WL-XML-ME':
                case 'US-CITICONNECT-WL-XML-MC':
                case 'US-CITICONNECT-WL-XML-MD':
                case 'US-CITICONNECT-WL-XML-MN':
                case 'US-CITICONNECT-WL-XML-MT':
                case 'US-CITICONNECT-WL-XML-MR':
                case 'US-CITICONNECT-WL-XML-MW':
                case 'US-CITICONNECT-WL-XML-MX':
                case 'US-CITICONNECT-WL-XML-NE':
                case 'US-CITICONNECT-WL-XML-NL':
                case 'US-CITICONNECT-WL-XML-NO':
                case 'US-CITICONNECT-WL-XML-NP':
                case 'US-CITICONNECT-WL-XML-NZ':
                case 'US-CITICONNECT-WL-XML-OM':
                case 'US-CITICONNECT-WL-XML-PG':
                case 'US-CITICONNECT-WL-XML-PT':
                case 'US-CITICONNECT-WL-XML-QA':
                case 'US-CITICONNECT-WL-XML-RW':
                case 'US-CITICONNECT-WL-XML-SA':
                case 'US-CITICONNECT-WL-XML-SC':
                case 'US-CITICONNECT-WL-XML-SE':
                case 'US-CITICONNECT-WL-XML-SG':
                case 'US-CITICONNECT-WL-XML-SI':
                case 'US-CITICONNECT-WL-XML-SK':
                case 'US-CITICONNECT-WL-XML-SN':
                case 'US-CITICONNECT-WL-XML-SZ':
                case 'US-CITICONNECT-WL-XML-TD':
                case 'US-CITICONNECT-WL-XML-TG':
                case 'US-CITICONNECT-WL-XML-TH':
                case 'US-CITICONNECT-WL-XML-TN':
                case 'US-CITICONNECT-WL-XML-TR':
                case 'US-CITICONNECT-WL-XML-TT':
                case 'US-CITICONNECT-WL-XML-TZ':
                case 'US-CITICONNECT-WL-XML-UY':
                case 'US-CITICONNECT-WL-XML-UZ':
                case 'US-CITICONNECT-WL-XML-ZA':
                case 'US-CITICONNECT-WL-XML-ZM':
                case 'US-CITICONNECT-WL-XML-AG':                //SKS_VSTS_13720
                case 'US-CITICONNECT-WL-XML-FJ':
                case 'US-CITICONNECT-WL-XML-BO':
                case 'US-CITICONNECT-WL-XML-IS':
                case 'US-CITICONNECT-WL-XML-NI':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                        case #CHK_WL:
                            if(strLen(mRemittanceName) > 35)
                            {
                                mRemittanceAdrLine1 = subStr(mRemittanceName, 36, 105) + ' ADD-' + mRemittanceAdrLine1 + ' ' + mRemittanceAdrLine2 + ' ' + mRemittanceCity + ' ' + mRemittanceCountryRegionId + ' ' + mRemittanceState + ' ' + mRemittanceZipCode;
                                //      PstlAdr
                                nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 1, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 36, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 71, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 106, 35), 0, false);
                            }
                            else
                            {
                                this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity, 35, mRemittanceAdrLine2, mRemittanceState, true);
                            }
                            printAddress = false;
                            break;
                        case #SEPA_WL:
                        case #ACH_WL:
                            strd = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-DE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CHK_WL:
                            if(strLen(mRemittanceName) > 35)
                            {
                                mRemittanceAdrLine1 = subStr(mRemittanceName, 36, 105) + ' ADD-' + mRemittanceAdrLine1 + ' ' + mRemittanceAdrLine2 + ' ' + mRemittanceCity + ' ' + mRemittanceCountryRegionId + ' ' + mRemittanceState + ' ' + mRemittanceZipCode;
                                //      PstlAdr
                                nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 1, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 36, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 71, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 106, 35), 0, false);
                            }
                            else
                            {
                                this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity, 35, mRemittanceAdrLine2, mRemittanceState, true);
                            }
                            printAddress = false;
                            break;
                        case #SEPA_WL:
                        case #ACH_WL:
                            strd = true;
                            break;
                        case #WIRE_WL:
                            if(strLen(mRemittanceName) > 35)
                            {
                                mRemittanceAdrLine1 = subStr(mRemittanceName, 36, 105) + ' ADD-' + mRemittanceAdrLine1 + ' ' + mRemittanceAdrLine2 + ' ' + mRemittanceCity + ' ' + mRemittanceCountryRegionId + ' ' + mRemittanceState + ' ' + mRemittanceZipCode;
                                //      PstlAdr
                                nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 1, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 36, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 71, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 106, 35), 0, false);
                            }
                            else
                            {
                                this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, subStr(mRemittanceAdrline1, 1, 35), mRemittanceZipCode, mRemittanceCity, 35, subStr(mRemittanceAdrline1, 36, 35), mRemittanceState, true);
                            }
                            printAddress = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-AL':
                case 'US-CITICONNECT-WL-XML-KH':
                case 'US-CITICONNECT-WL-XML-LA':
                case 'US-CITICONNECT-WL-XML-PH':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CHK_WL:
                            if(strLen(mRemittanceName) > 35)
                            {
                                mRemittanceAdrLine1 = subStr(mRemittanceName, 36, 105) + ' ADD-' + mRemittanceAdrLine1 + ' ' + mRemittanceAdrLine2 + ' ' + mRemittanceCity + ' ' + mRemittanceCountryRegionId + ' ' + mRemittanceState + ' ' + mRemittanceZipCode;
                                //      PstlAdr
                                nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 1, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 36, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 71, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 106, 35), 0, false);
                            }
                            else
                            {
                                //      PstlAdr
                                nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                //          StrtNm
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'StrtNm', this.CharacterReplacement(mRemittanceAdrline1), 35, false);

                                //          BldgNb
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'BldgNb', this.CharacterReplacement(mRemittanceAdrLine2), 35, false);

                                //          PstCd
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'PstCd', mRemittanceZipCode, 16, false);

                                //          TwnNm
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', this.CharacterReplacement(mRemittanceCity), 35, false);

                                //          CtrySubDvsn
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'CtrySubDvsn', this.CharacterReplacement(mRemittanceState), 35, false);

                                //          Ctry
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', mRemittanceCountryRegionId, 2, false);
                            }
                            printAddress = false;
                            break;
                        case #WIRE_WL:
                            if(strLen(mRemittanceName) > 35)
                            {
                                address = address + subStr(mRemittanceName, 36, 105) + ' ADD-';
                            }
                            if(mRemittanceAdrLine1)
                            {
                                address = address + mRemittanceAdrLine1;
                            }
                            if(mRemittanceAdrLine2)
                            {
                                address = address + ' ' + mRemittanceAdrLine2;
                            }
                            if(mRemittanceCity)
                            {
                                address = address + ' ' + mRemittanceCity;
                            }
                            if(mRemittanceCountryRegionId)
                            {
                                address = address + ' ' + mRemittanceCountryRegionId;
                            }
                            if(mRemittanceState)
                            {
                                address = address + ' ' + mRemittanceState;
                            }
                            if(mRemittanceZipCode)
                            {
                                address = address + ' ' + mRemittanceZipCode;
                            }
      
                            if(address)
                            {
                                //      PstlAdr
                                nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 1, 35)), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 36, 35)), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 71, 35)), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address, 106, 35)), 0, false);
                            }
                            printAddress = false;
                            break;
                        case #SEPA_WL:
                        case #ACH_WL:
                            strd = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-NA':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                        case #CHK_WL:
                            if(strLen(mRemittanceName) > 35)
                            {
                                mRemittanceAdrLine1 = subStr(mRemittanceName, 36, 105) + ' ADD-' + mRemittanceAdrLine1 + ' ' + mRemittanceAdrLine2 + ' ' + mRemittanceCity + ' ' + mRemittanceCountryRegionId + ' ' + mRemittanceState + ' ' + mRemittanceZipCode;
                                //      PstlAdr
                                nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 1, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 36, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 71, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 106, 35), 0, false);
                            }
                            else
                            {

                                //      PstlAdr
                                nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                //          StrtNm
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'StrtNm', this.CharacterReplacement(mRemittanceAdrline1), 35, false);

                                //          BldgNb
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'BldgNb', this.CharacterReplacement(mRemittanceAdrLine2), 35, false);

                                //          PstCd
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'PstCd', mRemittanceZipCode, 16, false);

                                //          TwnNm
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', this.CharacterReplacement(mRemittanceCity), 35, false);

                                //          CtrySubDvsn
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'CtrySubDvsn', this.CharacterReplacement(mRemittanceState), 35, false);

                                //          Ctry
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', mRemittanceCountryRegionId, 2, false);
                            }

                            printAddress = false;
                            break;
                        case #SEPA_WL:
                        case #ACH_WL:
                            strd = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-XML-VN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #WIRE_WL:
                            if(strLen(mRemittanceName) > 35)
                            {
                                //      PstlAdr
                                nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceName, 36, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceName, 71, 35), 0, false);
                            }
                            printAddress = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-AU':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #BPAY889:
                            ustrd = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-BR':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #BKT440:
                        case #DOM441:
                        case #RT453:
                        case #DL454:
                        case #TLPAY451:
                            pstlAdr2AdrLines = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-CA':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CHK20:
                        case #CPS706:
                            pstlAdr2AdrLines = true;
                            break;
                        case #ACH780:
                            strd = true;
                            break;
                        case #DFT603:
                            if(strLen(mRemittanceName) > 35)
                            {
                                address1 = subStr(mRemittanceName, 36, 105) + ' ADD-';
                    
                                address1 = address1 + mRemittanceAdrline1;
    
                                if(mRemittanceAdrline2)
                                {
                                    if(address1)
                                    {
                                        address1 += ' ';               //SKS_VSTS_12787
                                    }
                                    address1 += mRemittanceAdrline2;
                                }
                                if(mRemittanceCity)
                                {
                                    if(address1)
                                    {
                                        address1 += ' ';               //SKS_VSTS_12787
                                    }
                                    address1 += mRemittanceCity;
                                }
                                if(mRemittanceState)
                                {
                                    if(address1)
                                    {
                                        address1 += ' ';               //SKS_VSTS_12787
                                    }
                                    address1 += mRemittanceState;
                                }
                                if(mRemittanceZipCode)
                                {
                                    if(address1)
                                    {
                                        address1 += ' ';               //SKS_VSTS_12787
                                    }
                                    address1 += mRemittanceZipCode;
                                }
                                //      PstlAdr
                                nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                //          Ctry
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', mRemittanceCountryRegionId, 2, false);

                                //          AdrLine
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address1, 1, 35)), 35, false);
                        
                                //          AdrLine 2
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address1, 36, 35)), 35, false);

                                //          AdrLine 3
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address1, 71, 35)), 35, false);
                        
                            }
                            else
                            {
                                address1 = mRemittanceAdrline1;

                                if(mRemittanceAdrline2)
                                {
                                    if(address1)
                                    {
                                        address1 += ', ';               //SKS_VSTS_12787
                                    }
                                    address1 += mRemittanceAdrline2;
                                }

                                address2 = mRemittanceCity;

                                if(mRemittanceState)
                                {
                                    if(address2)
                                    {
                                        address2 += ', ';               //SKS_VSTS_12787
                                    }
                                    address2 += mRemittanceState;
                                }
                                if(mRemittanceZipCode)
                                {
                                    if(address2)
                                    {
                                        address2 += ' ';               //SKS_VSTS_12787
                                    }
                                    address2 += mRemittanceZipCode;
                                }

                                //      PstlAdr
                                nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                //          Ctry
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', mRemittanceCountryRegionId, 2, false);

                                //          AdrLine
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(address1), 35, false);

                                //          AdrLine 2
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(address2), 35, false);

                                printAddress = false;
                            }

                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-CL':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #BKT440:
                        case #CBFT442:
                            pstlAdr2AdrLines = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-CO':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #BKT440:
                            pstlAdr2AdrLines = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-CR':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #BKT440:
                        case #CBFT442:
                            pstlAdr2AdrLines = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-CZ':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM555:
                            strd = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-DO':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #BKT440:
                        case #CBFT442:
                            pstlAdr2AdrLines = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-EC':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #BKT440:
                        case #CBFT442:
                            pstlAdr2AdrLines = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-GT':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #BKT440:
                        case #CBFT442:
                            pstlAdr2AdrLines = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-HN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM441:
                            pstlAdr2AdrLines = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-HU':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM303:
                        case #DOM903:
                            strd = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-HK':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #BKT393:
                            strd = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-JP':               //SKS#VSTS:14823

                    //      PstlAdr
                    nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                    //          Ctry
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', mRemittanceCountryRegionId, 2, false);

                    //          AdrLine 1
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(mRemittanceAdrline1), 35, false);

                    //          AdrLine 2
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(mRemittanceAdrline2), 35, false);

                    //          AdrLine 3
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(strLTrim(mRemittanceZipCode + ' ' + this.CharacterReplacement(mRemittanceCity))), 35, false);
    
                    printAddress = false;
                    break;
                case 'US-CITICONNECT-XML-IN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DD437:
                            pstlAdr2AdrLines = true;
                            break;
                        case #DOM540:
                            if(strLen(mRemittanceName) > 35)
                            {
                                mRemittanceAdrLine1 = subStr(mRemittanceName, 36, 105) + ' ADD-' + mRemittanceAdrLine1 + ' ' + mRemittanceAdrLine2 + ' ' + mRemittanceCity + ' ' + mRemittanceCountryRegionId + ' ' + mRemittanceState + ' ' + mRemittanceZipCode;
   
                                //      PstlAdr
                                nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 1, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 36, 35), 0, false);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', subStr(mRemittanceAdrLine1, 71, 35), 0, false);
                            }
                            else
                            {
                                this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity, 35, mRemittanceAdrLine2, mRemittanceState, true);
                            }

                            printAddress = false;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-AR':
                case 'US-CITICONNECT-XML-MX':
                    pstlAdr2AdrLines = true;
                    break;
                case 'US-CITICONNECT-XML-PA':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM441:
                        case #CHK478:
                            pstlAdr2AdrLines = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-PE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #BKT440:
                        case #CBFT442:
                            pstlAdr2AdrLines = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-PH':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CHK418:
                            pstlAdr2AdrLines = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-SG':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #BFT551:
                            strd = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-SV':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #BKT440:
                        case #CBFT442:
                            pstlAdr2AdrLines = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-TR':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM555:
                            pstlAdr2AdrLines = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-US':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CCDP14:
                        case #CTX17:
                        case #CTX950:   //SKS_VSTS_13477
                        case #CDM950:   //SKS_VSTS_13477
                        case #CHK950:   //SKS_VSTS_13477
                            pstlAdr2AdrLines = true;
                            break;
                        case #ACHPPP:
                            strd = true;
                            break;
                        case #ACHCCP:       //SKS#DevOps:17066
                        case #CHK19:        //SKS#DevOps:16893
                            pstlAdr2AdrLines = true;
                            value = mRemittanceState;
                            if(strLen(mRemittanceName) > 35)            //SKS#DevOps:16961
                            {
                                mRemittanceAdrLine1 = subStr(mRemittanceName, 36, 35);

                                if(strLen(mRemittanceName) > 70)
                                {
                                    mRemittanceAdrLine2 = subStr(mRemittanceName, 71, 35);
                                }
                                else
                                {
                                    mRemittanceAdrLine2 = mRemittanceAdrline1;
                                }
                                mRemittanceZipCode = strRem(mRemittanceZipCode, '-');
                            }
                            break;
                        case #FT499:
                            if(strLen(mRemittanceName) > 35)
                            {
                                address1 = subStr(mRemittanceName, 36, 105) + ' ADD-';

                                address1 = address1 + mRemittanceAdrline1;

                                if(mRemittanceAdrline2)
                                {
                                    if(address1)
                                    {
                                        address1 += ' ';               //SKS_VSTS_12787
                                    }
                                    address1 += mRemittanceAdrline2;
                                }
                                if(mRemittanceCity)
                                {
                                    if(address1)
                                    {
                                        address1 += ' ';               //SKS_VSTS_12787
                                    }
                                    address1 += mRemittanceCity;
                                }
                                if(mRemittanceState)
                                {
                                    if(address1)
                                    {
                                        address1 += ' ';               //SKS_VSTS_12787
                                    }
                                    address1 += mRemittanceState;
                                }
                                if(mRemittanceZipCode)
                                {
                                    if(address1)
                                    {
                                        address1 += ' ';               //SKS_VSTS_12787
                                    }
                                    address1 += mRemittanceZipCode;
                                }
                                //      PstlAdr
                                nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                //          Ctry
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', mRemittanceCountryRegionId, 2, false);

                                //          AdrLine
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address1, 1, 35)), 35, false);

                                //          AdrLine 2
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address1, 36, 35)), 35, false);

                                //          AdrLine 3
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(address1, 71, 35)), 35, false);
                            }
                            else
                            {
                                address1 = mRemittanceAdrline1;

                                if(mRemittanceAdrline2)
                                {
                                    if(address1)
                                    {
                                        address1 += ', ';               //SKS_VSTS_12787
                                    }
                                    address1 += mRemittanceAdrline2;
                                }

                                address2 = mRemittanceCity;

                                if(mRemittanceState)
                                {
                                    if(address2)
                                    {
                                        address2 += ', ';               //SKS_VSTS_12787
                                    }
                                    address2 += mRemittanceState;
                                }
                                if(mRemittanceZipCode)
                                {
                                    if(address2)
                                    {
                                        address2 += ' ';               //SKS_VSTS_12787
                                    }
                                    address2 += mRemittanceZipCode;
                                }

                                //      PstlAdr
                                nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                                //          Ctry
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', mRemittanceCountryRegionId, 2, false);

                                //          AdrLine
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(address1), 35, false);

                                //          AdrLine 2
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(address2), 35, false);
                            }
                            printAddress = false;
                            break;
                        }
                    break;
                case 'US-CITICONNECT-XML-UY':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #BKT440:
                        case #CBFT442:
                            pstlAdr2AdrLines = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-VE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DOM441:
                            pstlAdr2AdrLines = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-ZA':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #ACH809:
                            strd = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-VN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #DFT391:
                        case #CBFT392:
                            strd = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-WL-PPW-XML':           //SKS#VSTS:14271
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #PPW_WL:
                        case #PPW_PH_WL:                //SKS#DevOps:14542
                            strd = true;
                            break;
                    }
                    break;
            }

            if(((mRemittanceZipCode || mRemittanceCity || mRemittanceCountryRegionId ||
                 mRemittanceAdrline1 || mRemittanceAdrline2 ) || value) && printAddress)
            {
                if(pstlAdr2AdrLines)
                {
                    //      PstlAdr
                    nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));

                    //          PstCd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'PstCd', mRemittanceZipCode, 16, false);

                    //          TwnNm
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', this.CharacterReplacement(mRemittanceCity), 35, false);

                    //          CtrySubDvsn
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'CtrySubDvsn', this.CharacterReplacement(value), 35, false);

                    //          Ctry
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', mRemittanceCountryRegionId, 2, false);

                    //          AdrLine
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(mRemittanceAdrline1), 35, false);

                    //          AdrLine 2
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(mRemittanceAdrline2), 35, false);
                }
                else if(strdUstrd)
                {
                    this.node_PstlAdr_StrdUstrd(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity, 35, mRemittanceAdrLine2, mRemittanceState);
                }
                else if(strd)
                {
                    this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity, 35, mRemittanceAdrLine2, mRemittanceState, true);
                }
                else if(ustrd)
                {
                    this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_ChrgBr(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.24 ChrgBr
        //------------------------------------------------------------------------------------------------------
    
        //Not used. Overriding base class
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Id(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          9.1.12: Id
        //              9.1.13: OrgId
        //                  9.1.15: Othr
        //                      9.1.16: Id
        //                          9.1.17: SchmeNm
        //                              9.1.18: Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOther;
        XmlElement nodePrvtId;
        XmlElement nodeSchmeNm;
        str     bankId, panId, taxId;
        str     otherId, cdOrPrtry;
        boolean cd = false;
        boolean prtry = false;
        boolean prvtId = false;
        int length;

        bankId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BankId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        panId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PANID', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        taxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TAXID', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));

        switch( mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BPAY889:
                        otherId = mSKS_EFT_FileDetail_BankAccount.WOrdPartyId;
                        length = 35;
                        prtry = true;
                        cdOrPrtry = 'CUST';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CPS706:
                        otherId = bankId;
                        cd = true;
                        cdOrPrtry = 'TXID';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        otherId = bankId;
                        cd = true;
                        cdOrPrtry = 'TXID';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                    case #SEPA848:
                    case #SEPA939:
                        otherId = bankId;
                        cd = true;
                        cdOrPrtry = 'BANK';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DO':
                switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
                {
                    case 'BKT-440':
                        otherId = '';
                        break;
                    default:
                        otherId = mSKS_EFT_FileDetail_BankAccount.WOrdPartyId;
                        length = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PR':
                switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
                {
                    case 'PPD':
                    case 'FT-607':
                        otherId = mSKS_EFT_FileDetail_BankAccount.WOrdPartyId;
                        length = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        otherId = bankId;
                        cd = true;
                        cdOrPrtry = 'TXID';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WLW571:
                        otherId = mSKS_EFT_FileDetail_BankAccount.WOrdPartyId;
                        length = 35;
                        cd = true;
                        cdOrPrtry = 'CUST';
                        break;
                    case #CHK585:
                        otherId = bankId;
                        cd = true;
                        cdOrPrtry = 'TAXID';
                        break;
                    case #CTX950:       //SKS_VSTS_13477
                    case #CDM950:       //SKS_VSTS_13477
                    case #CHK950:       //SKS_VSTS_13477
                        otherId = mSKS_EFT_FileDetail_BankAccount.WOrdPartyId;
                        length = 10;
                        cd = true;
                        cdOrPrtry = 'TXID';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AT':
            case 'US-CITICONNECT-XML-BE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        cd        = false;
                        cdOrPrtry = 'BANK';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-FI':
            case 'US-CITICONNECT-XML-FR':
            case 'US-CITICONNECT-XML-IE':
            case 'US-CITICONNECT-XML-LU':
            case 'US-CITICONNECT-XML-NL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        otherId = bankId;
                        cd = true;
                        cdOrPrtry = 'BANK';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DK':
            case 'US-CITICONNECT-XML-IT':
            case 'US-CITICONNECT-XML-NO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_DC:
                        otherId = bankId;
                        cd = true;
                        cdOrPrtry = 'BANK';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-GB':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                    case #ACH_DC:
                    case #SEPA848:
                    case #SEPA939:
                        otherId = bankId;
                        cd = true;
                        cdOrPrtry = 'BANK';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #TAX908:
                        if(panId)
                        {
                            otherId     = panId;
                            prtry       = true;
                            cdOrPrtry   = 'PANID';
                        }
                        else if(taxId)
                        {
                            otherId     = taxId;
                            prtry       = true;
                            cdOrPrtry   = 'TXID';
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-RU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM548:
                        cdOrPrtry = 'BANK';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA938:
                        otherId = bankId;
                        cd = true;
                        cdOrPrtry = 'BANK';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #TAX592:

                        prvtId = true;
                        otherId = subStr( mSKS_EFT_FileDetail_BankAccount.WOrdPartyId, 1, 14);
                        cd = true;
                        cdOrPrtry = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DbtrId', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
        }
        if(otherId)
        {
            //          Id
            nodeId = _nodeDbtr.appendChild(xmlDoc.createElement('Id'));
    
            if(!prvtId)
            {
                //              OrgId
                nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));

                //                  Othr
                nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
            }
            else
            {
                //          PrvtId
                nodePrvtId = nodeId.appendChild(xmlDoc.createElement('PrvtId'));
    
                //                  Othr
                nodeOther = nodePrvtId.appendChild(xmlDoc.createElement('Othr'));
            }
    
            //                      Id
            if(otherId)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', this.CharacterReplacement(otherId));
            }

            if(cd || prtry)
            {
                //                      SchmeNm
                nodeSchmeNm = nodeOther.appendChild(xmlDoc.createElement('SchmeNm'));

                if(cd)
                {
                    //                      Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', cdOrPrtry);
                }
                else if(prtry)
                {
                    //                      Prtry
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Prtry', cdOrPrtry);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Nm</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Nm(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          Nm
        //------------------------------------------------------------------------------------------------------
        int len;
        str name = mSKS_EFT_FileDetail_BankAccount.WOrdPartyName;
    
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM391:
                    case #CB392:
                    case #DE397:
                    case #CHK396:
                    case #BPAY889:
                    case #BKT393:
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_WL:
                        len = 18;
                        break;
                    case #WIRE_WL:
                    case #CHK_WL:
                    case #SEPA_WL:
                        len = 105;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        len = 105;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_WL:
                        len = 30;
                        break;
                    case #WIRE_WL:
                    case #CHK_WL:
                    case #SEPA_WL:
                        len = 105;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK402:
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #RTGS539:          //SKG#DevOps:15853
                    case #DFT541:           //SKG#DevOps:15853
                    case #TAX927:           //SKG#DevOps:15853
                    case #TAX947:           //SKG#DevOps:15853
                    case #IFT_CB392:        //SKG#DevOps:15853
                    case #CDT862:           //SKG#DevOps:15853
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                    case #SEPA:
                    case #XPRS888:
                    case #CBFT574:
                    case #DFT555:
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-GB':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CDFT392:
                    case #SIP962:
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ATPAY403:
                    case #CHECK405:
                    case #DOM391:
                    case #CB392:
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT574:
                        len = 35;
                        break;
                    case #DOM903:
                        len = 30;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-RO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT574:
                    case #DOM789:
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-KE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-KR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM391:
                    case #CB392:
                    case #BKT393:
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM391:
                    case #CB392:
                    case #BKT393:
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-ID':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM391:
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                    case #RTGS605:
                        len = 35;
                        break;
                    case #CBFT574:
                    case #CBFT392:      //SKS#DevOps:16141
                        len = 30;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM391:
                    case #WIRE392:
                        len = 35;
                        break;
                    case #ACH410:
                    case #WIRE391:
                        len = 35;
                        name = strUpr(name);
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                    case #SEPA:
                    case #TAX592:
                    case #VAT984:
                    case #CBFT574:
                    case #DFT555:
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-MY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM391:
                    case #CB392:
                    case #BKT393:
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB392:
                    case #BKT393:
                    case #GIRO421:
                    case #PRL422:
                    case #CHK420:
                    case #CHK423:
                    case #DFT391:
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-SG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_WL:
                        len = 12;
                        break;
                    case #WIRE_WL:
                    case #CHK_WL:
                    case #SEPA_WL:
                        len = 105;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT547:
                    case #DOM555:
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT547:
                    case #DOM555:
                    case #SSK853:
                    case #CBFT574:
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TW':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB392:
                    case #BKT393:
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CTX950:        // SKG#VSTS:13477
                    case #CDM950:        // SKG#VSTS:13477
                    case #CHK950:        // SKG#VSTS:13477
                        len = 16;
                        break;
                    default:
                        len = 70;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-ZA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH809:
                    case #WIRE574:
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-VN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DFT391:
                    case #CBFT392:
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AE':
            case 'US-CITICONNECT-WL-XML-AL':
            case 'US-CITICONNECT-WL-XML-AO':
            case 'US-CITICONNECT-WL-XML-AT':
            case 'US-CITICONNECT-WL-XML-AZ':
            case 'US-CITICONNECT-WL-XML-BD':
            case 'US-CITICONNECT-WL-XML-BE':
            case 'US-CITICONNECT-WL-XML-BF':
            case 'US-CITICONNECT-WL-XML-BG':
            case 'US-CITICONNECT-WL-XML-BH':
            case 'US-CITICONNECT-WL-XML-BJ':
            case 'US-CITICONNECT-WL-XML-BM':
            case 'US-CITICONNECT-WL-XML-BN':
            case 'US-CITICONNECT-WL-XML-BR':
            case 'US-CITICONNECT-WL-XML-BS':
            case 'US-CITICONNECT-WL-XML-BW':
            case 'US-CITICONNECT-WL-XML-BY':
            case 'US-CITICONNECT-WL-XML-CD':
            case 'US-CITICONNECT-WL-XML-CH':
            case 'US-CITICONNECT-WL-XML-CI':
            case 'US-CITICONNECT-WL-XML-CL':
            case 'US-CITICONNECT-WL-XML-CM':
            case 'US-CITICONNECT-WL-XML-CN':
            case 'US-CITICONNECT-WL-XML-CO':
            case 'US-CITICONNECT-WL-XML-CR':
            case 'US-CITICONNECT-WL-XML-CY':
            case 'US-CITICONNECT-WL-XML-CZ':
            case 'US-CITICONNECT-WL-XML-DE':
            case 'US-CITICONNECT-WL-XML-DK':
            case 'US-CITICONNECT-WL-XML-DO':
            case 'US-CITICONNECT-WL-XML-DZ':
            case 'US-CITICONNECT-WL-XML-EE':
            case 'US-CITICONNECT-WL-XML-EG':
            case 'US-CITICONNECT-WL-XML-ES':
            case 'US-CITICONNECT-WL-XML-ET':
            case 'US-CITICONNECT-WL-XML-FI':
            case 'US-CITICONNECT-WL-XML-FR':
            case 'US-CITICONNECT-WL-XML-GA':
            case 'US-CITICONNECT-WL-XML-GB':
            case 'US-CITICONNECT-WL-XML-GE':
            case 'US-CITICONNECT-WL-XML-GH':
            case 'US-CITICONNECT-WL-XML-GR':
            case 'US-CITICONNECT-WL-XML-GT':
            case 'US-CITICONNECT-WL-XML-GW':
            case 'US-CITICONNECT-WL-XML-GY':
            case 'US-CITICONNECT-WL-XML-HK':
            case 'US-CITICONNECT-WL-XML-HN':
            case 'US-CITICONNECT-WL-XML-HR':
            case 'US-CITICONNECT-WL-XML-HU':
            case 'US-CITICONNECT-WL-XML-ID':
            case 'US-CITICONNECT-WL-XML-IE':
            case 'US-CITICONNECT-WL-XML-IL':
            case 'US-CITICONNECT-WL-XML-IN':
            case 'US-CITICONNECT-WL-XML-IT':
            case 'US-CITICONNECT-WL-XML-JO':
            case 'US-CITICONNECT-WL-XML-JP':
            case 'US-CITICONNECT-WL-XML-KE':
            case 'US-CITICONNECT-WL-XML-KH':
            case 'US-CITICONNECT-WL-XML-KR':
            case 'US-CITICONNECT-WL-XML-KW':
            case 'US-CITICONNECT-WL-XML-KZ':
            case 'US-CITICONNECT-WL-XML-LA':
            case 'US-CITICONNECT-WL-XML-LB':
            case 'US-CITICONNECT-WL-XML-LI':
            case 'US-CITICONNECT-WL-XML-LK':
            case 'US-CITICONNECT-WL-XML-LT':
            case 'US-CITICONNECT-WL-XML-LU':
            case 'US-CITICONNECT-WL-XML-LV':
            case 'US-CITICONNECT-WL-XML-MA':
            case 'US-CITICONNECT-WL-XML-MC':
            case 'US-CITICONNECT-WL-XML-MD':
            case 'US-CITICONNECT-WL-XML-MM':
            case 'US-CITICONNECT-WL-XML-MN':
            case 'US-CITICONNECT-WL-XML-MR':
            case 'US-CITICONNECT-WL-XML-MT':
            case 'US-CITICONNECT-WL-XML-MU':
            case 'US-CITICONNECT-WL-XML-MW':
            case 'US-CITICONNECT-WL-XML-MX':
            case 'US-CITICONNECT-WL-XML-MY':
            case 'US-CITICONNECT-WL-XML-MZ':
            case 'US-CITICONNECT-WL-XML-NA':
            case 'US-CITICONNECT-WL-XML-NE':
            case 'US-CITICONNECT-WL-XML-NG':
            case 'US-CITICONNECT-WL-XML-NL':
            case 'US-CITICONNECT-WL-XML-NO':
            case 'US-CITICONNECT-WL-XML-NP':
            case 'US-CITICONNECT-WL-XML-NZ':
            case 'US-CITICONNECT-WL-XML-OM':
            case 'US-CITICONNECT-WL-XML-PE':
            case 'US-CITICONNECT-WL-XML-PG':
            case 'US-CITICONNECT-WL-XML-PH':
            case 'US-CITICONNECT-WL-XML-PK':
            case 'US-CITICONNECT-WL-XML-PL':
            case 'US-CITICONNECT-WL-XML-PT':
            case 'US-CITICONNECT-WL-XML-PY':
            case 'US-CITICONNECT-WL-XML-QA':
            case 'US-CITICONNECT-WL-XML-RO':
            case 'US-CITICONNECT-WL-XML-RS':
            case 'US-CITICONNECT-WL-XML-RU':
            case 'US-CITICONNECT-WL-XML-RW':
            case 'US-CITICONNECT-WL-XML-SA':
            case 'US-CITICONNECT-WL-XML-SC':
            case 'US-CITICONNECT-WL-XML-SE':
            case 'US-CITICONNECT-WL-XML-SI':
            case 'US-CITICONNECT-WL-XML-SK':
            case 'US-CITICONNECT-WL-XML-SN':
            case 'US-CITICONNECT-WL-XML-SZ':
            case 'US-CITICONNECT-WL-XML-TD':
            case 'US-CITICONNECT-WL-XML-TG':
            case 'US-CITICONNECT-WL-XML-TH':
            case 'US-CITICONNECT-WL-XML-TN':
            case 'US-CITICONNECT-WL-XML-TR':
            case 'US-CITICONNECT-WL-XML-TT':
            case 'US-CITICONNECT-WL-XML-TW':
            case 'US-CITICONNECT-WL-XML-TZ':
            case 'US-CITICONNECT-WL-XML-UG':
            case 'US-CITICONNECT-WL-XML-US':
            case 'US-CITICONNECT-WL-XML-UY':
            case 'US-CITICONNECT-WL-XML-UZ':
            case 'US-CITICONNECT-WL-XML-VN':
            case 'US-CITICONNECT-WL-XML-ZA':
            case 'US-CITICONNECT-WL-XML-ZM':
            case 'US-CITICONNECT-WL-XML-MO':                //SKS_VSTS_13720
            case 'US-CITICONNECT-WL-XML-HT':
            case 'US-CITICONNECT-WL-XML-FJ':
            case 'US-CITICONNECT-WL-XML-BO':
            case 'US-CITICONNECT-WL-XML-IS':
            case 'US-CITICONNECT-WL-XML-MG':        //SKS#DevOps:16946
            case 'US-CITICONNECT-WL-XML-ML':
            case 'US-CITICONNECT-WL-XML-KM':
            case 'US-CITICONNECT-WL-XML-GM':        //SKS#DevOps:17970
            case 'US-CITICONNECT-WL-XML-NI':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                    case #CHK_WL:
                    case #SEPA_WL:
                    case #ACH_WL:
                        len = 105;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-PPW-XML':           //SKS#VSTS:14271
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PPW_WL:
                    case #PPW_PH_WL:                    //SKS#DevOps:14542
                        len = 140;
                        break;
                }
                break;
            default:
                len = 70;
                break;
        }
        //          Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeDbtr, 'Nm', this.CharacterReplacement(name), len, false);        //SKS_FDD_10590
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_PstlAdr(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePstlAdr;
        str address, address1, address2;
        boolean pstlAdr2AdrLines = false;
        boolean strd = false;
        boolean ustrd = true;
        boolean speccstrd = false;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DE397:
                    case #PRL398:
                        strd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PLG400:
                    case #PRL401:
                        strd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH780:
                    case #CHK20:
                    case #CPS706:
                    case #DFT603:
                        strd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH208:
                        strd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ATPAY403:
                    case #CHK405:
                    case #BKT393:
                        strd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM303:
                    case #DOM903:
                        strd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DD437:
                        pstlAdr2AdrLines = true;
                        break;
                    case #DOM540:
                    case #DFT914:
                    case #CHK436:
                        strd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT410:
                    case #BKT393:
                        strd = true;
                        break;
                    case #ACH410:

                        this.node_PstlAdr(_nodeDbtr, strUpr(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId), strUpr(address), strUpr(mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode), strUpr(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity), 75);     //SKS_FDD_10590

                        ustrd = false;

                        break;
                }
                break;
            case 'US-CITICONNECT-XML-KE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PRL414:
                    case #DOM555:
                        strd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-KR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        strd = true;
                        break;
                    case #PRL414:
                        strd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-MY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PLG527:
                        strd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK418:
                        strd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-RO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM332:
                    case #DOM789:
                    case #CHK436:
                        strd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-RU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM548:
                        strd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_PG:
                    case #ACH_BG:
                        pstlAdr2AdrLines = true;
                        break;
                    case #ACH150:
                        strd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #GIRO421:
                        strd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-UA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        strd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACHCCP:
                    case #ACHPPP:
                    case #CCDP14:
                    case #CTX17:
                    case #CHK19:
                    case #CHK585:
                    case #CTX942:
                        strd = true;
                        break;
                    case #FT499:
                        ustrd = false;
                        speccstrd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-ZA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH809:
                        strd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-VN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DFT391:
                    case #CBFT392:
                        strd = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AE':
            case 'US-CITICONNECT-WL-XML-AL':
            case 'US-CITICONNECT-WL-XML-AO':
            case 'US-CITICONNECT-WL-XML-AT':
            case 'US-CITICONNECT-WL-XML-AU':
            case 'US-CITICONNECT-WL-XML-AZ':
            case 'US-CITICONNECT-WL-XML-BD':
            case 'US-CITICONNECT-WL-XML-BE':
            case 'US-CITICONNECT-WL-XML-BF':
            case 'US-CITICONNECT-WL-XML-BG':
            case 'US-CITICONNECT-WL-XML-BH':
            case 'US-CITICONNECT-WL-XML-BJ':
            case 'US-CITICONNECT-WL-XML-BM':
            case 'US-CITICONNECT-WL-XML-BN':
            case 'US-CITICONNECT-WL-XML-BR':
            case 'US-CITICONNECT-WL-XML-BS':
            case 'US-CITICONNECT-WL-XML-BW':
            case 'US-CITICONNECT-WL-XML-BY':
            case 'US-CITICONNECT-WL-XML-CA':
            case 'US-CITICONNECT-WL-XML-CD':
            case 'US-CITICONNECT-WL-XML-CH':
            case 'US-CITICONNECT-WL-XML-CI':
            case 'US-CITICONNECT-WL-XML-CL':
            case 'US-CITICONNECT-WL-XML-CM':
            case 'US-CITICONNECT-WL-XML-CN':
            case 'US-CITICONNECT-WL-XML-CO':
            case 'US-CITICONNECT-WL-XML-CR':
            case 'US-CITICONNECT-WL-XML-CY':
            case 'US-CITICONNECT-WL-XML-CZ':
            case 'US-CITICONNECT-WL-XML-DE':
            case 'US-CITICONNECT-WL-XML-DK':
            case 'US-CITICONNECT-WL-XML-DO':
            case 'US-CITICONNECT-WL-XML-DZ':
            case 'US-CITICONNECT-WL-XML-EE':
            case 'US-CITICONNECT-WL-XML-EG':
            case 'US-CITICONNECT-WL-XML-ES':
            case 'US-CITICONNECT-WL-XML-ET':
            case 'US-CITICONNECT-WL-XML-FI':
            case 'US-CITICONNECT-WL-XML-FR':
            case 'US-CITICONNECT-WL-XML-GA':
            case 'US-CITICONNECT-WL-XML-GB':
            case 'US-CITICONNECT-WL-XML-GE':
            case 'US-CITICONNECT-WL-XML-GH':
            case 'US-CITICONNECT-WL-XML-GR':
            case 'US-CITICONNECT-WL-XML-GT':
            case 'US-CITICONNECT-WL-XML-GW':
            case 'US-CITICONNECT-WL-XML-GY':
            case 'US-CITICONNECT-WL-XML-HK':
            case 'US-CITICONNECT-WL-XML-HN':
            case 'US-CITICONNECT-WL-XML-HR':
            case 'US-CITICONNECT-WL-XML-HU':
            case 'US-CITICONNECT-WL-XML-ID':
            case 'US-CITICONNECT-WL-XML-IE':
            case 'US-CITICONNECT-WL-XML-IL':
            case 'US-CITICONNECT-WL-XML-IN':
            case 'US-CITICONNECT-WL-XML-IT':
            case 'US-CITICONNECT-WL-XML-JO':
            case 'US-CITICONNECT-WL-XML-JP':
            case 'US-CITICONNECT-WL-XML-KE':
            case 'US-CITICONNECT-WL-XML-KH':
            case 'US-CITICONNECT-WL-XML-KR':
            case 'US-CITICONNECT-WL-XML-KW':
            case 'US-CITICONNECT-WL-XML-KZ':
            case 'US-CITICONNECT-WL-XML-LA':
            case 'US-CITICONNECT-WL-XML-LB':
            case 'US-CITICONNECT-WL-XML-LI':
            case 'US-CITICONNECT-WL-XML-LK':
            case 'US-CITICONNECT-WL-XML-LT':
            case 'US-CITICONNECT-WL-XML-LU':
            case 'US-CITICONNECT-WL-XML-LV':
            case 'US-CITICONNECT-WL-XML-MA':
            case 'US-CITICONNECT-WL-XML-MC':
            case 'US-CITICONNECT-WL-XML-MD':
            case 'US-CITICONNECT-WL-XML-MM':
            case 'US-CITICONNECT-WL-XML-MN':
            case 'US-CITICONNECT-WL-XML-MR':
            case 'US-CITICONNECT-WL-XML-MT':
            case 'US-CITICONNECT-WL-XML-MU':
            case 'US-CITICONNECT-WL-XML-MW':
            case 'US-CITICONNECT-WL-XML-MX':
            case 'US-CITICONNECT-WL-XML-MY':
            case 'US-CITICONNECT-WL-XML-MZ':
            case 'US-CITICONNECT-WL-XML-NA':
            case 'US-CITICONNECT-WL-XML-NE':
            case 'US-CITICONNECT-WL-XML-NG':
            case 'US-CITICONNECT-WL-XML-NL':
            case 'US-CITICONNECT-WL-XML-NO':
            case 'US-CITICONNECT-WL-XML-NP':
            case 'US-CITICONNECT-WL-XML-NZ':
            case 'US-CITICONNECT-WL-XML-OM':
            case 'US-CITICONNECT-WL-XML-PE':
            case 'US-CITICONNECT-WL-XML-PG':
            case 'US-CITICONNECT-WL-XML-PH':
            case 'US-CITICONNECT-WL-XML-PK':
            case 'US-CITICONNECT-WL-XML-PL':
            case 'US-CITICONNECT-WL-XML-PT':
            case 'US-CITICONNECT-WL-XML-PY':
            case 'US-CITICONNECT-WL-XML-QA':
            case 'US-CITICONNECT-WL-XML-RO':
            case 'US-CITICONNECT-WL-XML-RS':
            case 'US-CITICONNECT-WL-XML-RU':
            case 'US-CITICONNECT-WL-XML-RW':
            case 'US-CITICONNECT-WL-XML-SA':
            case 'US-CITICONNECT-WL-XML-SC':
            case 'US-CITICONNECT-WL-XML-SE':
            case 'US-CITICONNECT-WL-XML-SG':
            case 'US-CITICONNECT-WL-XML-SI':
            case 'US-CITICONNECT-WL-XML-SK':
            case 'US-CITICONNECT-WL-XML-SN':
            case 'US-CITICONNECT-WL-XML-SZ':
            case 'US-CITICONNECT-WL-XML-TD':
            case 'US-CITICONNECT-WL-XML-TG':
            case 'US-CITICONNECT-WL-XML-TH':
            case 'US-CITICONNECT-WL-XML-TN':
            case 'US-CITICONNECT-WL-XML-TR':
            case 'US-CITICONNECT-WL-XML-TT':
            case 'US-CITICONNECT-WL-XML-TW':
            case 'US-CITICONNECT-WL-XML-TZ':
            case 'US-CITICONNECT-WL-XML-UG':
            case 'US-CITICONNECT-WL-XML-US':
            case 'US-CITICONNECT-WL-XML-UY':
            case 'US-CITICONNECT-WL-XML-UZ':
            case 'US-CITICONNECT-WL-XML-VN':
            case 'US-CITICONNECT-WL-XML-ZA':
            case 'US-CITICONNECT-WL-XML-ZM':
            case 'US-CITICONNECT-WL-XML-AG':
            case 'US-CITICONNECT-WL-XML-MO':                //SKS_VSTS_13720
            case 'US-CITICONNECT-WL-XML-HT':
            case 'US-CITICONNECT-WL-XML-FJ':
            case 'US-CITICONNECT-WL-XML-BO':
            case 'US-CITICONNECT-WL-XML-IS':
            case 'US-CITICONNECT-WL-XML-BA':            //SKS#DevOps:16138
            case 'US-CITICONNECT-WL-XML-BB':            //SKS#DevOps:16237
            case 'US-CITICONNECT-WL-XML-MG':            //SKS#DevOps:16946
            case 'US-CITICONNECT-WL-XML-ML':            //SKS#DevOps:16946
            case 'US-CITICONNECT-WL-XML-KM':            //SKS#DevOps:16946
            case 'US-CITICONNECT-WL-XML-GM':        //SKS#DevOps:17970
            case 'US-CITICONNECT-WL-XML-NI':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_WL:
                    case #WIRE_WL:
                    case #CHK_WL:
                    case #SEPA_WL:
                        strd = true;
                        ustrd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-PPW-XML':           //SKS#VSTS:14271
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PPW_WL:
                    case #PPW_PH_WL:                //SKS#DevOps:14542
                        strd = true;
                        break;
                }
                break;
            default:
                ustrd = true;
                break;
        }

        if(pstlAdr2AdrLines &&
          (mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode            ||          //SKS_FDD_10590
        mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity               ||
           mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId    ||
           mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr               ||
           mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2))
        {
            //      PstlAdr
            nodePstlAdr = _nodeDbtr.appendChild(xmlDoc.createElement('PstlAdr'));

            //          PstCd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'PstCd', mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, 16, false);            //SKS_FDD_10590

            //          TwnNm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity), 35, false);        //SKS_FDD_10590

            //          Ctry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId), 2, false);      //SKS_FDD_10590

            //          AdrLine
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr), 35, false);      //SKS_FDD_10590

            //          AdrLine 2
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2), 35, false);     //SKS_FDD_10590
        }
        else if(strd)
        {
            this.node_PstlAdr(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity, 35, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2, mSKS_EFT_FileDetail_BankAccount.WOrdPartyState, true);       //SKS_FDD_10590
        }
        else if(ustrd)
        {
            address = mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr;      //SKS_FDD_10590
    
            if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2)
            {
                address += ' ' + mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2;      //SKS_FDD_10590
            }
    
            this.node_PstlAdr(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, address, mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity, 75);     //SKS_FDD_10590
        }
        else if(speccstrd)
        {
            switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
            {
                case 'US-CITICONNECT-XML-US':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #FT499:

                            address1 = mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr;
    
                            if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2)
                            {
                                if(address1)
                                {
                                    address1 += ', ';               //SKS_VSTS_12787
                                }
                                address1 += mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2;
                            }

                            address2 = mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity;

                            if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyState)
                            {
                                if(address2)
                                {
                                    address2 += ', ';               //SKS_VSTS_12787
                                }
                                address2 += mSKS_EFT_FileDetail_BankAccount.WOrdPartyState;
                            }
                            if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode)
                            {
                                if(address2)
                                {
                                    address2 += ' ';               //SKS_VSTS_12787
                                }
                                address2 += mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode;
                            }

                            //      PstlAdr
                            nodePstlAdr = _nodeDbtr.appendChild(xmlDoc.createElement('PstlAdr'));

                            //          Ctry
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId), 2, false);

                            //          AdrLine
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(address1), 35, false);

                            //          AdrLine 2
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(address2), 35, false);

                            break;
                    }
            }
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: DbtrAcct
        //          Id
        //              IBAN
        //              Othr

        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;
        XmlElement nodeOthr;
        XmlElement nodeSchmeNm;
        int length;
        str iban, acctNum, schmeNm;
        //boolean schmeNmCd   = false;
        boolean schmeNmCd   = true;
        boolean schmeNmPrtry= false;
        boolean bankCcy     = false;

        iban        = mSKS_EFT_FileDetail.BankBankIBAN;
        acctNum     = mSKS_EFT_FileDetail.BankBankAcct;
        schmeNm = 'BBAN';

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-AE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK804:
                    case #CBFT574:
                    case #DFT574:
                        schmeNmCd = false;
                        length = 10;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        iban    = '';
                        length  = 10;
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                        schmeNm     = 'BBAN';
                        schmeNmCd   = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM391:
                    case #CB392:
                    case #CHK396:
                        iban    = '';
                        schmeNmCd = false;
                        length  = 35;
                        break;
                    case #BKT393:
                    case #BPAY889:
                    case #DE397:
                    case #PRL398:
                        iban    = '';
                        schmeNmCd = false;
                        length  = 34;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-BE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                        schmeNm     = 'BBAN';
                        schmeNmCd   = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-BR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                    case #DOM441:
                    case #RT453:
                    case #DL454:
                    case #TLPAY451:
                        iban    = '';
                        length  = 10;
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CACH460:
                    case #BKT602:
                    case #CBFT604:
                        iban    = '';
                        schmeNmCd = false;
                        break;
                    case #CPS706:
                        iban    = '';
                        schmeNmCd = false;
                        length  = 17;
                        break;
                    case #ACH780:
                        iban    = '';
                        schmeNmCd = false;
                        length  = 10;
                        break;
                    case #CHK20:
                        schmeNmCd = false;
                        length  = 17;
                        break;
                    case #DFT603:
                        iban = '';
                        schmeNmCd = false;
                        bankCcy = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        iban    = '';
                        length  = 10;
                        schmeNmCd = false;
                        break;
                    case #CBFT442:
                        iban    = '';
                        length  = 34;
                        schmeNmCd = false;
                        break;
                    
                }
                break;
            case 'US-CITICONNECT-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT392:
                        if(acctNum)         //SKS#DevOps:16703
                        {
                            iban = '';
                        }
                        schmeNm     = 'BBAN';
                        schmeNmCd   = true;
                        break;
                    case #PLG400:
                    case #PRL401:
                        iban    = '';
                        length  = 34;
                        schmeNmCd = false;
                        break;
                    case #DFT391:
                        schmeNm     = 'BBAN';
                        schmeNmCd   = true;
                        break;
                    case #CHK402:
                        iban = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        iban    = '';
                        length  = 10;
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                    case #CBFT442:
                        iban    = '';
                        length  = 22;           //SKS#DevOps:14956
                        schmeNmCd = false;
                        break;
                    case #DFT391:               //SKS#DevOps:14956                        
                        length  = 22;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                    case #DOM317:
                        iban     = '';
                        schmeNmCd = false;
                        length   = 10;
                        break;
                    case #XPRS888:
                        iban = '';
                        length = 10;
                        break;
                    case #SEPA:
                        length = 10;
                        break;
                    case #CBFT574:
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                        schmeNm     = 'BBAN';
                        schmeNmCd   = true;
                        break;
                    case #SEPA848:
                    case #SEPA939:
                        length   = 10;
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        iban    = '';
                        length  = 10;
                        schmeNmCd = false;
                        break;
                    case #CBFT442:
                        iban    = '';
                        length  = 34;
                        schmeNmCd = false;
                        break;
                    case #CHK465:
                        schmeNm     = 'BBAN';
                        schmeNmCd   = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                        schmeNm     = 'BBAN';
                        schmeNmCd   = true;
                        break;
                    case #ACH208:
                        iban    = '';
                        length  = 10;
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-EC':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        iban    = '';
                        length  = 10;
                        schmeNmCd = false;
                        break;
                    case #CBFT442:
                        iban    = '';
                        length  = 34;
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-FI':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                        schmeNm     = 'BBAN';
                        schmeNmCd   = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-FR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                        schmeNm     = 'BBAN';
                        schmeNmCd   = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-GB':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                        schmeNm     = 'BBAN';
                        schmeNmCd   = true;
                        break;
                    case #CDFT392:
                    case #SEPA848:
                    case #SEPA939:
                    case #SIP962:
                        length  = 10;
                        schmeNmCd = false;
                        break;
                    case #ACH_DC:
                        if(acctNum)         //SKS#DevOps:16877
                        {
                            iban = '';
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-GT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        iban    = '';
                        length  = 10;
                        schmeNmCd = false;
                        break;
                    case #CBFT442:
                        iban    = '';
                        length  = 34;
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM391:
                    case #CB392:
                    case #ATPAY403:
                    case #CHECK405:
                    case #CHK405:
                        iban    = '';
                        schmeNmCd = false;
                        length  = 34;
                        break;
                    case #BKT393:
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM441:
                        iban    = '';
                        length  = 10;
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM303:
                    case #CBFT574:
                        iban    = '';
                        length  = 10;
                        schmeNmCd = false;
                        break;
                    case #DOM903:
                        iban    = '';
                        schmeNm     = 'BBAN';
                        schmeNmCd   = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-ID':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #LLG408:
                    case #DOM391:
                        iban    = '';
                        schmeNmCd = false;
                        length  = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                        schmeNm     = 'BBAN';
                        schmeNmCd   = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #RTGS605:
                    case #DOM555:
                        iban    = '';
                        length  = 10;
                        break;
                    case #CBFT574:
                    case #CBFT392:          //SKS#DevOps:16141
                        length  = 10;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK436:
                    case #DD437:
                    case #DOM540:
                        iban    = '';
                        length  = 34;
                        schmeNmCd = false;
                        break;
                    case #DFT914:
                        iban    = '';
                        length  = 35;
                        schmeNmCd = false;
                        break;
                    case #DFT541:       //SKG#DevOps:15853
                    case #RTGS539:      //SKG#DevOps:15853
                    case #TAX908:       //SKG#DevOps:15853                    
                    case #IFT_CB392:    //SKG#DevOps:15853
                    case #CDT862:
                        iban    = '';
                        length  = 34;
                        break;
                    case #TAX927:       //SKG#DevOps:15853
                    case #TAX947:       //SKG#DevOps:15853
                        iban    = '';
                        length  = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                        schmeNm     = 'BBAN';
                        schmeNmCd   = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH964:
                    case #CHECK815:
                        schmeNmCd = false;
                        length  = 30;
                        break;
                    case #CBFT574:
                        schmeNmCd = false;
                        length = 10;
                        break;
                    case #DFT555:
                        length  = 10;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE391:
                    case #WIRE392:
                    case #BKT410:
                    case #ACH410:
                    case #DOM391:
                        iban    = '';
                        schmeNmCd = false;
                        length  = 35;
                        break;
                    case #BKT393:
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-KE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        iban     = '';
                        schmeNmCd = false;
                        length   = 10;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-KR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM391:
                    case #CB392:
                        iban    = '';
                        schmeNmCd = false;
                        length  = 35;
                        break;
                    case #BKT393:
                    case #PRL414:
                        iban    = '';
                        schmeNmCd = false;
                        length  = 34;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-LU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                        schmeNm     = 'BBAN';
                        schmeNmCd   = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-MX':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        iban    = '';
                        length  = 10;
                        schmeNmCd = false;
                        break;
                    case #CBFT442:
                        iban    = '';
                        length  = 34;
                        schmeNmCd = false;
                        break;
                    default:
                        iban    = '';
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-MY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT393:
                    case #PLG527:
                    case #DOM391:
                    case #CB392:
                    case #CHK415:
                        iban    = '';
                        schmeNmCd = false;
                        length  = 34;
                        break;
                    case #GIRO527:
                        iban = '';
                        schmeNmCd = false;
                        break;
                    case #DFT391:
                    case #CBFT392:
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                        schmeNm     = 'BBAN';
                        schmeNmCd   = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                        schmeNm     = 'BBAN';
                        schmeNmCd   = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM391:
                    case #CB392:
                    case #BKT393:
                        iban    = '';
                        schmeNmCd = false;
                        length  = 35;
                        break;
                    case #DC417:
                    case #CHECK416:
                        iban    = '';
                        schmeNmCd = false;
                        length  = 10;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM441:
                    case #CHK478:
                        iban    = '';
                        length  = 10;
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        iban    = '';
                        length  = 10;
                        schmeNmCd = false;
                        break;
                    case #CBFT442:
                        iban    = '';
                        length  = 34;
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK418:
                        iban    = '';
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                    case #DOM325:
                        iban     = '';
                        schmeNmCd = false;
                        length   = 10;
                        break;
                    case #TAX592:
                        iban = '';
                        length = 10;
                        break;
                    case #DFT555:
                        iban = '';
                        break;
                    case #VAT984:           //SKS#VSTS:13627
                    case #SEPA:
                        length = 10;
                        break;
                    case #CBFT574:
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT442:
                        iban    = '';
                        length  = 10;
                        schmeNmCd = false;
                        break;
                    case #DFT441:
                        length = 10;
                        schmeNmCd = false;
                        break;
                    default:
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-RO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM332:
                    case #DOM789:
                    case #CBFT574:
                        iban     = '';
                        length   = 10;
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-RU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM548:
                        iban     = '';
                        length   = 10;
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_BG:
                        if(mSKS_EFT_FileDetail.BankBankAcct == '')
                        {
                            iban    = mSKS_EFT_FileDetail.BankBankIBAN;
                        }
                        else
                        {
                            iban        = '';
                            schmeNm     = 'BGNR';
                            schmeNmPrtry= true;
                        }
                        break;
                    case #ACH_PG:
                    case #CB_WIRE:
                        schmeNm     = 'BBAN';
                        schmeNmCd   = true;
                        break;
                    case #ACH150:
                        iban     = '';
                        length   = 10;
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB392:
                    case #BKT393:
                    case #PRL422:
                    case #CHK420:
                    case #CHK423:
                    case #GIRO421:
                        iban    = '';
                        schmeNmCd = false;
                        length  = 34;
                        break;
                    case #BFT551:
                        iban = '';
                        schmeNmCd = false;
                        length = 35;
                        break;
                    case #DFT391:
                        iban    = '';
                        length  = 34;
                        bankCcy = true;
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA938:
                        length  = 10;
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SV':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        iban    = '';
                        length  = 10;
                        schmeNmCd = false;
                        break;
                    case #CBFT442:
                        iban    = '';
                        length  = 34;
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ATPAY424:
                    case #PRL426:
                        iban     = '';
                        length   = 34;
                        schmeNmCd = false;
                        break;
                    case #CHK425:
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                    case #CHK815:
                    case #BKT547:
                        iban     = '';
                        schmeNmCd = false;
                        length   = 10;
                        break;
                    case #CBFT574:
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SSK853:
                        iban    = '';
                        schmeNmCd = false;
                        break;
                    case #CBFT574:
                    case #DOM555:
                        schmeNmCd = false;
                        length  = 10;
                        break;
                    case #BKT547:
                        iban    = '';
                        schmeNmCd = false;
                        length  = 10;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TW':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB392:
                    case #BKT393:
                    case #IBRS429:
                    case #IBRS430:
                    case #CHECK427:
                        iban    = '';
                        schmeNmCd = false;
                        length  = 34;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-UA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        iban     = '';
                        length   = 10;
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-UY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DFT441:
                        length = 10;
                        schmeNmCd = false;
                        break;
                    case #CBFT442:
                    case #BKT440:
                        iban    = '';
                        length  = 10;
                        schmeNmCd = false;
                        break;
                    case #CHK493:
                    case #CHK494:
                        length = 10;
                        schmeNmCd = false;
                        break;
                    default:
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACHPPD:
                    case #ACHCCD:
                    case #ACHCTX:
                    case #USFCP821:
                    case #CTX950://SKS_VSTS_13477
                    case #CDM950://SKS_VSTS_13477
                    case #CHK950://SKS_VSTS_13477
                        iban        = '';
                        schmeNmCd = false;
                        break;
                    case #WLW571:
                        iban        = '';
                        schmeNmCd = false;
                        bankCcy     = true;
                        break;
                    case #ACHCCP:
                    case #ACHPPP:
                    case #CTX17:
                    case #CHK585:
                    case #CTX942:
                    case #CHK19:
                        iban        = '';
                        schmeNmCd = false;
                        length = 17;
                        break;
                    case #CPS28:
                        schmeNmCd = false;
                        break;
                    case #CPS29:
                        iban        = '';
                        schmeNmCd = false;
                        break;
                    case #FT499:
                    case #BKT500:
                        iban        = '';
                        schmeNm     = 'BBAN';
                        schmeNmCd   = true;
                        break;
                    case #CCDP14:
                        schmeNmCd = false;
                        length = 17;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-VE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM441:
                        iban    = '';
                        length  = 10;
                        schmeNmCd = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-VN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DFT391:
                    case #CBFT392:
                        iban    = '';
                        schmeNmCd = false;
                        length  = 34;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-ZA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH809:
                    case #WIRE574:
                        iban    = '';
                        length  = 10;
                        schmeNmCd = false;
                        break;
                }
                break;
        }

        //      2.20: DbtrAcct
        nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));

        //          Id
        nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));

        if(iban)
        {
            //                  IBAN
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN', mSKS_EFT_FileDetail.BankBankIBAN);
        }

        else if(acctNum)
        {
            //          Othr
            nodeOthr = nodeDbtrAcctId.appendChild(xmlDoc.createElement('Othr'));

            //                      Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.BankBankAcct, length);

            if(schmeNmCd || schmeNmPrtry)
            {
                //                  SchmeNm
                nodeSchmeNm = nodeOthr.appendChild(xmlDoc.createElement('SchmeNm'));

                if(schmeNmCd)
                {
                    //                          Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', schmeNm);
                }
                else if(schmeNmPrtry)
                {
                    //                          Prtry
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Prtry', schmeNm);
                }
            }
        }
        if(bankCcy)
        {
            //          Ccy
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcct, 'Ccy', mSKS_EFT_FileDetail.CurrencyCode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct_Id_Othr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcct_Id_Othr(XmlElement _nodeAcctId)
    {
        //------------------------------------------------------------------------------------------------------
        //              Othr
        //                  Id
        //                  SchmeNm
        //                      Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeOthr;
        XmlElement nodeSchmeNm;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-ZA':
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH_BG)
                {
                    //              Othr
                    nodeOthr = _nodeAcctId.appendChild(xmlDoc.createElement('Othr'));

                    //                  Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.BankBankAcct, 10);       //SKG#VSTS:7312

                    //                  SchmeNm
                    nodeSchmeNm = nodeOthr.appendChild(xmlDoc.createElement('SchmeNm'));

                    //                          Prtry
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Prtry', 'BGNR');
                }
                else
                {
                    super(_nodeAcctId);
                }
                break;
            default:
                super(_nodeAcctId);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.21: DbtrAgt
        //          FinInstnId
        //              BIC
        //              ClrSysMmbId
        //              PstlAdr
        //                  Ctry
        //------------------------------------------------------------------------------------------------------
        
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmBId;
        XmlElement nodePstlAdr;
        XmlElement nodeBrnchId;
        str country, swift, rtg;
        boolean brnchNm = false;
        boolean brnchId = false;
        str branchId, registryNo;
        
        swift = mSKS_EFT_FileDetail.BankBankSwiftNo;
        branchId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DbtrAgtBranchId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        registryNo = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RegistryNo', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        
        select firstonly RegCustomerID from lSKS_PP_Setup;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-AE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT574:
                    case #CHK804:
                    case #DFT574:
                        country = 'AE';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DE397:
                    case #CHK396:
                    case #BKT393:
                        brnchId = true;
                        break;
                }
                country = 'AU';
                break;
            case 'US-CITICONNECT-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CACH460:
                    case #CHK20:
                    case #ACH780:
                        swift   = '';
                        break;
                    case #CPS706:
                        if(mSKS_EFT_FileDetail.BankBankSwiftNo == '')
                        {
                            rtg     = mSKS_EFT_FileDetail.BankBankTransit;
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DFT391:
                    case #CBFT392:
                    case #DOM317:
                        country = 'CZ';
                        break;
                    case #DOM555:
                        if(mSKS_EFT_FileDetail.BankBankSwiftNo == '')
                        {
                            rtg     = mSKS_EFT_FileDetail.BankBankTransit;
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DFT391:
                    case #CBFT392:
                        country = 'CN';
                        break;
                    case #CHK402:
                        brnchId = true;
                        country = 'CN';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                    case #ACH208:
                        country = 'DK';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-GB':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                    case #CDFT392:
                    case #SIP962:
                        country = 'GB';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ATPAY403:
                        brnchId = true;
                        country = 'HK';
                        break;
                    case #CHECK405:
                        brnchId = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM903:
                        country = 'HU';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHECK815:
                    case #CBFT574:
                        country = 'JO';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JP':
                country = 'JP';
                break;
            case 'US-CITICONNECT-XML-KE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        if(mSKS_EFT_FileDetail.BankBankSwiftNo == '')
                        {
                            rtg     = mSKS_EFT_FileDetail.BankBankTransit;
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-MY':
                brnchId = true;
                country = 'MY';
                break;
            case 'US-CITICONNECT-XML-PL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        if(mSKS_EFT_FileDetail.BankBankSwiftNo == '')
                        {
                            rtg = mSKS_EFT_FileDetail.BankBankTransit;
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #FT607:
                        rtg = mSKS_EFT_FileDetail.BankBankTransit;
                        country = 'PR';
                        break;
                    case #CHK487:
                        country = 'PR';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        if(mSKS_EFT_FileDetail.BankBankSwiftNo == '')
                        {
                            rtg = mSKS_EFT_FileDetail.BankBankTransit;
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SSK853:
                        brnchNm = true;
                        break;
                    case #DOM555:
                        if(mSKS_EFT_FileDetail.BankBankSwiftNo == '')
                        {
                            rtg = mSKS_EFT_FileDetail.BankBankTransit;
                        }
                        break;
                    case #CBFT574:
                        country = 'TR';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-UA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        if(mSKS_EFT_FileDetail.BankBankSwiftNo == '')
                        {
                            rtg = mSKS_EFT_FileDetail.BankBankTransit;
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
                {
                    case #ACHCCD:
                    case #ACHPPD:
                    case #ACHCCP:
                    case #ACHPPP:
                    case #CCDP14:
                    case #CTX17:
                    case #CHK585:
                    case #CTX942:
                    case #FT499:
                    case #CTX950:        //SKG#VSTS:13477
                    case #CDM950:        //SKG#VSTS:13477
                    case #CHK950:        //SKG#VSTS:13477
                        rtg     = mSKS_EFT_FileDetail.BankBankTransit;
                        swift   = '';
                        break;                        
                    case #ACHCTX:
                        if((mSKS_EFT_FileDetail.BankBankSwiftNo != '' || mSKS_EFT_FileDetail.BankBankTransit)&&
                            lSKS_PP_Setup.RegCustomerID == 'fc3ce6')            //SKS#DevOps:19784
                        {
                            break;
                        }
                        else
                        {
                            rtg     = mSKS_EFT_FileDetail.BankBankTransit;
                            swift   = '';
                        }
                        break;
                    case #ACH502:
                    case #ACH503:
                    case #WLW571:
                    case #BKT500:
                    case #CPS29:
                        rtg     = mSKS_EFT_FileDetail.BankBankTransit;
                        break;
                    //SKS_VSTS_13464--->
                    case #CHK19:
                    case 'CAMAL':
                    case 'CHK19USFED':
                    case 'CHK19CAFED':
                    case 'CHKUSFED02':
                    case 'CHKUSFED03':
                    case 'CHKCAFED02':
                    case 'CHKCAFED03':
                        rtg     = mSKS_EFT_FileDetail.BankBankTransit;
                        if(rtg)
                        {
                            swift = '';
                        }
                        break;
                    //SKS_VSTS_13464<---
                }
                break;
                
            case 'US-CITICONNECT-XML-VN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DFT391:
                    case #CBFT392:
                        country = 'VN';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-ZA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE574:
                        country = 'ZA';
                        break;
                }
                break;
        }
        
        //      2.21: DbtrAgt
        nodeDbtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAgt'));
        
        //          FinInstnId
        nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
        
        if(swift)
        {
            //              BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.BankBankSwiftNo, 0, false);
        }
        
        if(rtg)
        {
            //              ClrSysMmbId
            nodeClrSysMmBId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
        
            //                  MmbId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmBId, 'MmbId', mSKS_EFT_FileDetail.BankBankTransit, 0, false);
        }
        if(country)
        {
            //              PstlAdr
            nodePstlAdr = nodeFinInstnId.appendChild(xmlDoc.createElement('PstlAdr'));
        
            //                  Ctry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', country, 0, false);
        }
        
        if(registryNo)
        {
            //                  BrnchId
            nodeBrnchId = nodeDbtrAgt.appendChild(xmlDoc.createElement('BrnchId'));
        
            //                         Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBrnchId, 'Nm', this.CharacterReplacement(registryNo));
        }
        if(branchId)
        {
            //                  BrnchId
            nodeBrnchId = nodeDbtrAgt.appendChild(xmlDoc.createElement('BrnchId'));
        
            //                         Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBrnchId, 'Id', this.CharacterReplacement(branchId), 3, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.6: PmtTpInf
        //          2.8: SvcLvl
        //              2.9: Cd
        //          2.11: LclInstrm
        //              2.13: Prtry
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodePmftTpInf;
        XmlElement nodeLclInstrm;
        XmlElement nodeCtgyPurp;
        str value;
        str ctgyPurpValue;          //SKS_VSTS_13807
        boolean printSvcLvl = true;
        boolean printLclInstrm = true;
        boolean printLclInstrmCd;
        boolean printCtgyPurp = true;        
    
        //      2.6: PmtTpInf
        nodePmftTpInf = _nodePmtInf.appendChild(xmlDoc.createElement('PmtTpInf'));

        //          2.7: InstrPrty
        this.node_PmtInf_PmtTpInf_InstrPrty(nodePmftTpInf);

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WLW571:
                    case #CHECK427:
                    case #CPS28:
                    case #CPS29:
                    case #CHK950://SKS_VSTS_13477
                    case #CDM950://SKS_VSTS_13477
                        printSvcLvl = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TW':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHECK427:
                        printSvcLvl = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK436:
                    case #DFT914:
                        printSvcLvl = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK418:
                        printSvcLvl = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-MX':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT827:
                    case #DIT828:
                    case #DPRL831:
                    case #DPENS832:
                    case #BKT833:
                    case #CHK834:
                    case #BWPMT835:
                        printSvcLvl = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SG':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #BFT551:
                        printSvcLvl = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AU':
            case 'US-CITICONNECT-WL-XML-AT':
            case 'US-CITICONNECT-WL-XML-BE':
            case 'US-CITICONNECT-WL-XML-CA':
            case 'US-CITICONNECT-WL-XML-CY':
            case 'US-CITICONNECT-WL-XML-CZ':
            case 'US-CITICONNECT-WL-XML-EE':
            case 'US-CITICONNECT-WL-XML-HK':
            case 'US-CITICONNECT-WL-XML-IE':
            case 'US-CITICONNECT-WL-XML-IT':
            case 'US-CITICONNECT-WL-XML-IN':
            case 'US-CITICONNECT-WL-XML-MT':
            case 'US-CITICONNECT-WL-XML-MX':
            case 'US-CITICONNECT-WL-XML-PT':
            case 'US-CITICONNECT-WL-XML-SG':
            case 'US-CITICONNECT-WL-XML-GB':
            case 'US-CITICONNECT-WL-XML-US':
            case 'US-CITICONNECT-WL-XML-FI':
            case 'US-CITICONNECT-WL-XML-DE':
            case 'US-CITICONNECT-WL-XML-FR':
            case 'US-CITICONNECT-WL-XML-GR':
            case 'US-CITICONNECT-WL-XML-ES':
            case 'US-CITICONNECT-WL-XML-BH':
            case 'US-CITICONNECT-WL-XML-BN':
            case 'US-CITICONNECT-WL-XML-ID':
            case 'US-CITICONNECT-WL-XML-JP':
            case 'US-CITICONNECT-WL-XML-KE':
            case 'US-CITICONNECT-WL-XML-KW':
            case 'US-CITICONNECT-WL-XML-MA':
            case 'US-CITICONNECT-WL-XML-NZ':
            case 'US-CITICONNECT-WL-XML-NO':
            case 'US-CITICONNECT-WL-XML-OM':
            case 'US-CITICONNECT-WL-XML-PH':
            case 'US-CITICONNECT-WL-XML-SA':
            case 'US-CITICONNECT-WL-XML-ZA':
            case 'US-CITICONNECT-WL-XML-SE':
            case 'US-CITICONNECT-WL-XML-CH':
            case 'US-CITICONNECT-WL-XML-TH':
            case 'US-CITICONNECT-WL-XML-TN':
            case 'US-CITICONNECT-WL-XML-TR':
            case 'US-CITICONNECT-WL-XML-AE':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CHK_WL:
                    case #CHK_WL_RC:
                        printSvcLvl = false;
                        break;
                }
                break;
        }
    
        if(printSvcLvl)
        {
            //          2.8: SvcLvl
            this.node_PmtInf_PmtTpInf_SvcLvl(nodePmftTpInf);
        }

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-AE':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CBFT574:
                    case #DFT574:
                        value = 'CITI574';
                        printCtgyPurp = false;
                        break;
                    case #CHK804:
                        value = 'CITI804';
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AR':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #BKT440:
                    case #DFT441:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AT':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB_WIRE:
                        value = 'CITI392';
                        printLclInstrm = false;
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AU':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB392:
                        value = 'CITI392';
                        break;
                    case #DE397:
                    case #PRL398:
                    case #BPAY889:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    case #DOM391:
                        value = 'CITI391';
                        break;
                    case #BKT393:
                        value = 'CITI393';
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-BE':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB_WIRE:
                        value = 'CITI392';
                        printLclInstrm = false;
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-BR':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #BKT440:
                    case #RT453:
                    case #DL454:
                    case #TLPAY451:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    case #DOM441:
                        value = 'CITI441';
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CA':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CPS706:
                    case #ACH780:
                    case #BKT602:
                    case #DFT603:
                    case #CBFT604:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    case #CACH460:
                        value = 'CITI783';
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CL':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #BKT440:
                    case #DFT441:
                    case #CBFT442:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CN':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #OTC894:
                        value = 'CITI894';
                        break;
                    case #DFT391:
                        value = 'CITI391';
                        printCtgyPurp = false;
                        break;
                    case #CBFT896:
                        value = 'CITI896';
                        break;
                    case #CBFT392:
                        value = 'CITI392';
                        break;
                    case #PLG400:
                    case #PRL401:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    case #CHK402:
                        value = 'CITI402';
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CO':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #BKT440:
                    case #DFT441:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CR':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #BKT440:
                    case #DFT441:
                    case #CBFT442:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CZ':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #ACH_SEPA:
                        value = 'CITI795';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DE':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB_WIRE:
                        value = 'CITI392';
                        printLclInstrm = false;
                        break;
                    case #SEPA939:
                        value = 'SDCL';
                        printLclInstrmCd = true;
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DK':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB_WIRE:
                        value = 'CITI392';
                        printLclInstrm = false;
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DO':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #BKT440:
                    case #DFT441:
                    case #CBFT442:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-EC':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #BKT440:
                    case #DFT441:
                    case #CBFT442:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-FI':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB_WIRE:
                        value = 'CITI392';
                        printLclInstrm = false;
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-FR':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB_WIRE:
                        value = 'CITI392';
                        printLclInstrm = false;
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HU':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CBFT574:
                        value = 'CITI574';
                        printLclInstrm = true;
                        break;
                    case #DOM903:
                        value = 'CITI903';
                        printLclInstrm = true;
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-RO':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CBFT574:
                        value = 'CITI574';
                        printLclInstrm = true;
                        break;
                    case #DOM789:
                        value = 'CITI789';
                        printLclInstrm = true;
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-GB':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB_WIRE:
                        printLclInstrm = false;
                        printCtgyPurp = false;
                        break;
                    case #CDFT392:
                        value = 'CITI392';
                        printCtgyPurp = false;
                        break;
                    case #SIP962:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    case #SEPA939:
                        value = 'SDCL';
                        printLclInstrmCd = true;
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-GT':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #BKT440:
                    case #DFT441:
                    case #CBFT442:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HK':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB392:
                        value = 'CITI392';
                        break;
                    case #ATPAY403:
                    case #CHK405:
                    case #CHECK405:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    case #DOM391:
                        value = 'CITI391';
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HN':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #DOM441:
                        value = 'CITI441';
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-ID':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #LLG408:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    case #CB_WIRE:
                        value = 'CITI392';
                        printLclInstrm = false;
                        break;
                    case #DOM391:
                        value = 'CITI391';
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IE':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB_WIRE:
                        value = 'CITI392';
                        printLclInstrm = false;
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IN':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CHK436:
                    case #DOM540:
                    case #DFT914:
                    case #DFT541:                   //SKS#DevOps:15853
                    case #RTGS539:                  //SKS#DevOps:15853
                    case #TAX908:                   //SKS#DevOps:15853
                    case #TAX927:                   //SKS#DevOps:15853
                    case #TAX947:                   //SKS#DevOps:15853
                    case #IFT_CB392:                //SKS#DevOps:15853
                    case #CDT862:                   //SKS#DevOps:15853
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IL':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #DOM555:
                    case #CBFT574:
                    case #CBFT392:      //SKS#DevOps:16141
                    case #RTGS605:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);                        
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IT':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB_WIRE:
                        value = 'CITI392';
                        printLclInstrm = false;
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JO':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #ACH964:
                        value = 'CITI964';
                        break;
                    case #CBFT574:
                        value = 'CITI574';
                        printCtgyPurp = false;
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JP':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #WIRE392:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        printCtgyPurp = false;
                        break;
                    case #BKT410:
                    case #ACH410:
                    case #WIRE391:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    case #DOM391:
                        value = 'CITI391';
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-KR':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB392:
                        value = 'CITI392';
                        break;
                    case #DOM391:
                        value = 'CITI391';
                        break;
                    case #BKT393:
                        value = 'CITI393';
                        break;
                    case #PRL414:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-LU':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB_WIRE:
                        value = 'CITI392';
                        printLclInstrm = false;
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-MX':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CBFT442:
                    case #BKT833:
                    case #BWPMT835:
                    case #CBFT827:
                    case #DIT828:
                    case #DPRL831:
                    case #DPENS832:
                    case #CHK496:
                    case #CHK834:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-MY':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB392:
                    case #CBFT392:
                        value = 'CITI392';
                        break;
                    case #DOM391:
                    case #DFT391:
                        value = 'CITI391';
                        break;
                    case #BKT393:
                        value = 'CITI393';
                        break;
                    case #PLG527:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    case #GIRO527:
                        value = 'CITI527';
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NL':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB_WIRE:
                        value = 'CITI392';
                        printLclInstrm = false;
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NO':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB_WIRE:
                        value = 'CITI392';
                        printLclInstrm = false;
                        break;
                    case #ACH_KID:
                        value = '0412';
                        printLclInstrmCd = true;
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NZ':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB392:
                        value = 'CITI392';
                        break;
                    case #DOM391:
                    case #DOM391RT:
                        value = 'CITI391';
                        break;
                    case #BKT393:
                        value = 'CITI393';
                        break;
                    case #DC417:
                        value = 'CITI417';
                        break;
                    case #CHECK416:
                        value = 'CITI416';
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PA':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CHK478:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    case #DOM441:
                        value = 'CITI441';
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PE':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #BKT440:
                    case #DFT441:
                    case #CBFT442:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PH':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CHK418:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PL':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #TAX592:
                    case #VAT984:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    case #ACH_SEPA:
                        value = 'CITI795';
                        break;
                }
                break;

            case 'US-CITICONNECT-XML-SE':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB_WIRE:
                        value = 'CITI392';
                        printLclInstrm = false;
                        break;
                    case #ACH_PG:
                        value = '0500';
                        printLclInstrmCd = true;
                        break;
                    case #ACH_BG:
                        value = '0014';
                        printLclInstrmCd = true;
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SG':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB392:
                        value = 'CITI392';
                        printCtgyPurp = false;
                        break;
                    case #BKT393:
                        value = 'CITI393';
                        break;
                    case #GIRO421:
                    case #CHK423:
                    case #CHK420:
                    case #PRL422:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    case #DFT391:
                        value = 'CITI391';
                        printCtgyPurp = false;
                        break;
                    case #BFT551:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SV':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #BKT440:
                    case #DFT441:
                    case #CBFT442:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SK':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #SEPA938:
                        value = 'SDCL';
                        printLclInstrmCd = true;
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TH':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #PRL426:
                    case #ATPAY424:
                    case #CHK425:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TN':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #BKT547:
                    case #CBFT574:
                    case #DOM555:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TR':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #BKT547:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        printCtgyPurp = false;
                        break;
                    case #SSK853:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    case #CBFT574:
                        value = 'CITI574';
                        printCtgyPurp = false;
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TW':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #CB392:
                        value = 'CITI392';
                        break;
                    case #IBRS429:
                        value = 'CITI429';
                        break;
                    case #IBRS430:
                        value = 'CITI430';
                        break;
                    case #CHECK427:
                        value = 'CITI427';
                        break;
                    case #BKT393:
                        value = 'CITI393';
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-VE':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #DOM441:
                        value = 'CITI441';
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-UY':       //SKS_VSTS_13615
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #BKT440:
                    case #CBFT442:
                    case #DFT441:
                        value = 'CITI' + subStr(mSKS_EFT_FileFormatPaymSpec.TransactionCode, strLen(mSKS_EFT_FileFormatPaymSpec.TransactionCode), -3);
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-US':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #ACHCCD:
                    case #ACHPPD:
                    case #ACHCTX:
                    case #ACHCCP:
                    case #ACHPPP:
                        value = subStr(mSKS_EFT_FileFormatPaymSpec.TransactionCode, strLen(mSKS_EFT_FileFormatPaymSpec.TransactionCode), -3);
                        printLclInstrmCd = true;
                        break;
                    case #USFCP821:
                    case #CTX942:
                    case #CTX950:                   // SKG#VSTS:13477
                    case #CHK950:                   // SKG#VSTS:13477
                        value = 'CITI' + subStr(mSKS_EFT_FileFormatPaymSpec.TransactionCode, strLen(mSKS_EFT_FileFormatPaymSpec.TransactionCode), -3);
                        break;
                    case #CCDP14:
                        value = 'CITI14';
                        break;
                    case #CTX17:
                    case #CPS28:
                    case #CPS29:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -2);
                        break;
                    case #CHK585:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    case #BKT500:
                        value = 'CITI500';
                        break;
                    case #WLW571:
                        value = 'CITI571';
                        break;
                    case #FT499:
                        value = 'CITI499';
                        break;
                    case #ACH502:
                        value = 'CITI502';
                        break;
                    case #ACH503:
                        value = 'CITI503';
                        break;
                    case 'CHK19CAMAL':
                    case 'CHK19USFED':
                    case 'CHK19CAFED':
                        value = 'CITI19';
                        break;
                    case 'CHKUSFED02':
                    case 'CHKUSFED03':
                    case #CHK19:
                        value = 'CITI19';
                        break;
                        //SKS_VSTS_13397--->
                    case 'CHKCAFED02':
                        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK19)
                        {
                            value = 'CITI19';
                        }
                        else
                        {
                            value = 'CITI20';
                        }
                        break;
                    case 'CHKCAFED03':
                        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK19)
                        {
                            value = 'CITI19';
                        }
                        else
                        {
                            value = 'CITI20';
                        }
                        break;
                    case 'CHK20CAMAL':
                    case 'CHK20CAFED':
                        value = 'CITI20';
                        break;
                        //SKS_VSTS_13397<---
                    case #CDM950:           //SKG#VSTS:13477
                        value = 'CDM';
                        printLclInstrmCd = true;
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-VN':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #DFT391:
                        value = 'CITI391';
                        printCtgyPurp = false;
                        break;
                    case #CBFT392:
                        value = 'CITI392';
                        printCtgyPurp = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-ZA':
                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #ACH809:
                        value = 'CITI' + subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -3);
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AE':
            case 'US-CITICONNECT-WL-XML-AL':
            case 'US-CITICONNECT-WL-XML-AO':
            case 'US-CITICONNECT-WL-XML-AT':
            case 'US-CITICONNECT-WL-XML-AU':
            case 'US-CITICONNECT-WL-XML-AZ':
            case 'US-CITICONNECT-WL-XML-BD':
            case 'US-CITICONNECT-WL-XML-BE':
            case 'US-CITICONNECT-WL-XML-BF':
            case 'US-CITICONNECT-WL-XML-BG':
            case 'US-CITICONNECT-WL-XML-BH':
            case 'US-CITICONNECT-WL-XML-BJ':
            case 'US-CITICONNECT-WL-XML-BM':
            case 'US-CITICONNECT-WL-XML-BN':
            case 'US-CITICONNECT-WL-XML-BR':
            case 'US-CITICONNECT-WL-XML-BS':
            case 'US-CITICONNECT-WL-XML-BW':
            case 'US-CITICONNECT-WL-XML-BY':
            case 'US-CITICONNECT-WL-XML-CA':
            case 'US-CITICONNECT-WL-XML-CD':
            case 'US-CITICONNECT-WL-XML-CH':
            case 'US-CITICONNECT-WL-XML-CI':
            case 'US-CITICONNECT-WL-XML-CL':
            case 'US-CITICONNECT-WL-XML-CM':
            case 'US-CITICONNECT-WL-XML-CN':
            case 'US-CITICONNECT-WL-XML-CO':
            case 'US-CITICONNECT-WL-XML-CR':
            case 'US-CITICONNECT-WL-XML-CY':
            case 'US-CITICONNECT-WL-XML-CZ':
            case 'US-CITICONNECT-WL-XML-DE':
            case 'US-CITICONNECT-WL-XML-DK':
            case 'US-CITICONNECT-WL-XML-DO':
            case 'US-CITICONNECT-WL-XML-DZ':
            case 'US-CITICONNECT-WL-XML-EE':
            case 'US-CITICONNECT-WL-XML-EG':
            case 'US-CITICONNECT-WL-XML-ES':
            case 'US-CITICONNECT-WL-XML-ET':
            case 'US-CITICONNECT-WL-XML-FI':
            case 'US-CITICONNECT-WL-XML-FR':
            case 'US-CITICONNECT-WL-XML-GA':
            case 'US-CITICONNECT-WL-XML-GB':
            case 'US-CITICONNECT-WL-XML-GE':
            case 'US-CITICONNECT-WL-XML-GH':
            case 'US-CITICONNECT-WL-XML-GR':
            case 'US-CITICONNECT-WL-XML-GT':
            case 'US-CITICONNECT-WL-XML-GW':
            case 'US-CITICONNECT-WL-XML-GY':
            case 'US-CITICONNECT-WL-XML-HK':
            case 'US-CITICONNECT-WL-XML-HN':
            case 'US-CITICONNECT-WL-XML-HR':
            case 'US-CITICONNECT-WL-XML-HU':
            case 'US-CITICONNECT-WL-XML-ID':
            case 'US-CITICONNECT-WL-XML-IE':
            case 'US-CITICONNECT-WL-XML-IL':
            case 'US-CITICONNECT-WL-XML-IN':
            case 'US-CITICONNECT-WL-XML-IT':
            case 'US-CITICONNECT-WL-XML-JO':
            case 'US-CITICONNECT-WL-XML-JP':
            case 'US-CITICONNECT-WL-XML-KE':
            case 'US-CITICONNECT-WL-XML-KH':
            case 'US-CITICONNECT-WL-XML-KR':
            case 'US-CITICONNECT-WL-XML-KW':
            case 'US-CITICONNECT-WL-XML-KZ':
            case 'US-CITICONNECT-WL-XML-LA':
            case 'US-CITICONNECT-WL-XML-LB':
            case 'US-CITICONNECT-WL-XML-LI':
            case 'US-CITICONNECT-WL-XML-LK':
            case 'US-CITICONNECT-WL-XML-LT':
            case 'US-CITICONNECT-WL-XML-LU':
            case 'US-CITICONNECT-WL-XML-LV':
            case 'US-CITICONNECT-WL-XML-MA':
            case 'US-CITICONNECT-WL-XML-MC':
            case 'US-CITICONNECT-WL-XML-MD':
            case 'US-CITICONNECT-WL-XML-MM':
            case 'US-CITICONNECT-WL-XML-MN':
            case 'US-CITICONNECT-WL-XML-MR':
            case 'US-CITICONNECT-WL-XML-MT':
            case 'US-CITICONNECT-WL-XML-MU':
            case 'US-CITICONNECT-WL-XML-MW':
            case 'US-CITICONNECT-WL-XML-MX':
            case 'US-CITICONNECT-WL-XML-MY':
            case 'US-CITICONNECT-WL-XML-MZ':
            case 'US-CITICONNECT-WL-XML-NA':
            case 'US-CITICONNECT-WL-XML-NE':
            case 'US-CITICONNECT-WL-XML-NG':
            case 'US-CITICONNECT-WL-XML-NL':
            case 'US-CITICONNECT-WL-XML-NO':
            case 'US-CITICONNECT-WL-XML-NP':
            case 'US-CITICONNECT-WL-XML-NZ':
            case 'US-CITICONNECT-WL-XML-OM':
            case 'US-CITICONNECT-WL-XML-PE':
            case 'US-CITICONNECT-WL-XML-PG':
            case 'US-CITICONNECT-WL-XML-PH':
            case 'US-CITICONNECT-WL-XML-PK':
            case 'US-CITICONNECT-WL-XML-PL':
            case 'US-CITICONNECT-WL-XML-PT':
            case 'US-CITICONNECT-WL-XML-PY':
            case 'US-CITICONNECT-WL-XML-QA':
            case 'US-CITICONNECT-WL-XML-RO':
            case 'US-CITICONNECT-WL-XML-RS':
            case 'US-CITICONNECT-WL-XML-RU':
            case 'US-CITICONNECT-WL-XML-RW':
            case 'US-CITICONNECT-WL-XML-SA':
            case 'US-CITICONNECT-WL-XML-SC':
            case 'US-CITICONNECT-WL-XML-SE':
            case 'US-CITICONNECT-WL-XML-SG':
            case 'US-CITICONNECT-WL-XML-SI':
            case 'US-CITICONNECT-WL-XML-SK':
            case 'US-CITICONNECT-WL-XML-SN':
            case 'US-CITICONNECT-WL-XML-SZ':
            case 'US-CITICONNECT-WL-XML-TD':
            case 'US-CITICONNECT-WL-XML-TG':
            case 'US-CITICONNECT-WL-XML-TH':
            case 'US-CITICONNECT-WL-XML-TN':
            case 'US-CITICONNECT-WL-XML-TR':
            case 'US-CITICONNECT-WL-XML-TT':
            case 'US-CITICONNECT-WL-XML-TW':
            case 'US-CITICONNECT-WL-XML-TZ':
            case 'US-CITICONNECT-WL-XML-UG':
            case 'US-CITICONNECT-WL-XML-US':
            case 'US-CITICONNECT-WL-XML-UY':
            case 'US-CITICONNECT-WL-XML-UZ':
            case 'US-CITICONNECT-WL-XML-VN':
            case 'US-CITICONNECT-WL-XML-ZA':
            case 'US-CITICONNECT-WL-XML-ZM':
            case 'US-CITICONNECT-WL-XML-AG':
            case 'US-CITICONNECT-WL-XML-MO':                //SKS_VSTS_13720
            case 'US-CITICONNECT-WL-XML-HT':
            case 'US-CITICONNECT-WL-XML-FJ':
            case 'US-CITICONNECT-WL-XML-BO':
            case 'US-CITICONNECT-WL-XML-BA':            //SKS#DevOps:16138
            case 'US-CITICONNECT-WL-XML-BB':            //SKS#DevOps:16138
            case 'US-CITICONNECT-WL-XML-MG':            //SKS#DevOps:16946
            case 'US-CITICONNECT-WL-XML-ML':            //SKS#DevOps:16946
            case 'US-CITICONNECT-WL-XML-KM':            //SKS#DevOps:16946
            case 'US-CITICONNECT-WL-XML-GM':            //SKS#DevOps:17970
            case 'US-CITICONNECT-WL-XML-NI':
                value = 'CITI949';                      //SKS#DevOps:14963
                printCtgyPurp = true;
                break;
            case 'US-CITICONNECT-WL-XML-IS':
                value = 'CITI949';
                break;
            case 'US-CITICONNECT-WL-PPW-XML':           //SKS#VSTS:14271
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PPW_WL:
                    case #PPW_PH_WL:                //SKS#DevOps:14542
                        value = 'WLTT';
                        break;
                }
                break;
            default:
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LclInstrm', mSKS_EFT_FileDetail.RecId));
                break;

        }
    
        if(value)
        {
            if(printLclInstrm)
            {
                //          2.11: LclInstrm
                nodeLclInstrm = nodePmftTpInf.appendChild(xmlDoc.createElement('LclInstrm'));
    
                if(printLclInstrmCd)
                {
                    //              2.12: Cd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Cd', value);
                }
                else
                {
                    //              2.13: Prtry
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Prtry', value);
                }
            }

            if(printCtgyPurp)
            {
                switch(value)
                {
                    case 'CITI894':
                        //              2.15: CtgyPurp
                        nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
                        //                  2.16: Prtry
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Prtry', 'ROTC');
                        break;
                    case 'CACH460':
                        //              2.15: CtgyPurp
                        nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
                        //                  2.16: Prtry
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Prtry', '460');
                        break;
                    case 'CITI392':
                        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                        {
                            case 'US-CITICONNECT-XML-IL':           //SKS#DevOps:16141      
                                break;
                            default:
                                //              2.15: CtgyPurp
                                nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
                                //                  2.16: Prtry
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Prtry', 'INTC');
                                break;
                        }
                        break;
                    case 'CITI391':
                    case 'CITI827':
                        //              2.15: CtgyPurp
                        nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
                        //                  2.16: Prtry
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Prtry', 'INTC');
                        break;
                    case 'CITI429':
                    case 'CITI430':
                    case 'CITI804':
                    case 'CITI19':
                    case 'CITI317':
                    case 'CITI425':
                        //              2.15: CtgyPurp
                        nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));

                        //                  2.16: Prtry
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Prtry', 'CASH');
                        break;
                    case 'CITI547':                           //SKG#VSTS:10808
                    case 'CITI574':
                        //              2.15: CtgyPurp
                        nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));

                        //                  2.16: Cd
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', 'CASH');
                        break;
                    case 'CITI332':
                        //              2.15: CtgyPurp
                        nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));

                        //                  2.16: Prtry
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Prtry', 'TAXS');
                        break;
                    case 'CITI398':
                    case 'CITI426':
                    case 'CITI831':
                        //              2.15: CtgyPurp
                        nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));

                        //                  2.16: Prtry
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Prtry', 'SALA');
                        break;
                    case 'CITI832':
                        //              2.15: CtgyPurp
                        nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
                        //                  2.16: Prtry
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Prtry', 'PENS');
                        break;
                    case 'CITI889':
                        //              2.15: CtgyPurp
                        nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
                        //                  2.16: Prtry
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Prtry', 'BPAY');
                        break;
                    case 'CITI949':
                        if(mSKS_EFT_FileFormatPaymSpec.FormatId != 'US-CITICONNECT-WL-XML-AE')
                        {
                            ctgyPurpValue = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CtgyPurpPrtry', mSKS_EFT_FileDetail.RecId));
                        }

                        if(ctgyPurpValue)
                        {

                            //              2.15: CtgyPurp
                            nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
                            //                  2.16: Prtry
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Prtry', '/REF/' + ctgyPurpValue);
                        }
                        break;
                    case 'CITI499':
                        if(mSKS_EFT_FileDetail.TransactionCode == #FT499 && mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId != 'ARE')
                        {
                            ctgyPurpValue = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CtgyPurpPrtry', mSKS_EFT_FileDetail.RecId));
                            
                            if(ctgyPurpValue)
                            {
                                //              2.15: CtgyPurp
                                nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
                                //                  2.16: Prtry
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Prtry', '/REF/' + ctgyPurpValue);
                            }
                        }
                        break;
                    case 'CITI809':                  //SKG#VSTS:10574
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CtgyPurp', mSKS_EFT_FileDetail.RecId)); //SKS_FDD_10590
                        if(value)
                        {
                            //              2.15: CtgyPurp
                            nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
                            //                  2.16: Prtry
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Prtry', value, 2);
                        }
                        break;
                    case 'CITI962':
                        //              2.15: CtgyPurp
                        nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
                        //                  2.16: Prtry
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Prtry', 'SIP');
                        break;
                    case 'CITI422':
                        //              2.15: CtgyPurp
                        nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
                    
                        //                  2.16: Prtry
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Prtry', 'SALA');
                        break;
                    case 'CITI853':
                        //              2.15: CtgyPurp
                        nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
                    
                        //                  2.16: Cd
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', 'SSBE');
                        break;
                    case 'CITI927':         //SKS#DevOps:15853
                        //              2.15: CtgyPurp
                        nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
                    
                        //                  2.16: Prtry
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Prtry', 'INCD');
                        break;
                    case 'CITI947':         //SKS#DevOps:15853
                        //              2.15: CtgyPurp
                        nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
                    
                        //                  2.16: Prtry
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Prtry', 'INPT');
                        break;
                    case 'CITI862':         //SKS#DevOps:15853
                        //              2.15: CtgyPurp
                        nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
                    
                        //                  2.15: Cd
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', 'TRAD');
                        break;
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl_Cd</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl_Cd(XmlElement _nodeSvcLvl)
    {
        //------------------------------------------------------------------------------------------------------
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
        str value;
    
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-AE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT574:
                        value = 'URGP';
                        break;
                    case #DFT574:
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        value = 'BKTR';
                        break;
                    case #DFT441:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                        value = 'URGP';
                        break;
                    case #ACH_SEPA:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB392:
                    case #DOM391:
                        value = 'URGP';
                        break;
                    case #DE397:
                    case #PRL398:
                    case #BPAY889:
                        value = 'NURG';
                        break;
                    case #BKT393:
                        value = 'BKTR';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-BE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                        value = 'URGP';
                        break;
                    case #ACH_SEPA:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-BR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        value = 'BKTR';
                        break;
                    case #DOM441:
                    case #TLPAY451:
                        value = 'NURG';
                        break;
                    case #RT453:
                        value = 'URGP';
                        break;
                    case #DL454:
                        value = 'SDVA';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CACH460:
                    case #CPS706:
                    case #ACH780:
                        value = 'NURG';
                        break;
                    case #CBFT604:
                    case #DFT603:
                        value = 'URGP';
                        break;
                    case #BKT602:
                        value = 'BKTR';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        value = 'BKTR';
                        break;
                    case #DFT441:
                    case #CBFT442:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #OTC894:
                    case #CBFT896:
                        value = 'WIRE';
                        break;
                    case #DFT391:
                    case #CBFT392:
                        value = 'URGP';
                        break;
                    case #PLG400:
                    case #PRL401:
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        value = 'BKTR';
                        break;
                    case #DFT441:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        value = 'BKTR';
                        break;
                    case #DFT441:
                    case #CBFT442:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM317:
                    case #DOM555:
                    case #DFT555:
                        value = 'NURG';
                        break;
                    case #XPRS888:
                    case #CBFT574:
                        value = 'URGP';
                        break;
                    case #SEPA:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                        value = 'URGP';
                        break;
                    case #SEPA939:
                    case #SEPA848:
                    case #ACH_SEPA:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                        value = 'URGP';
                        break;
                    case #ACH_DC:
                    case #ACH208:
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-DO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        value = 'BKTR';
                        break;
                    case #DFT441:
                    case #CBFT442:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-EC':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        value = 'BKTR';
                        break;
                    case #DFT441:
                    case #CBFT442:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-FI':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                        value = 'URGP';
                        break;
                    case #ACH_SEPA:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-FR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:
                        value = 'URGP';
                        break;
                    case #ACH_SEPA:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-GB':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_WIRE:                    
                        value = 'URGP';
                        break;
                    case #ACH_SEPA:
                    case #SEPA939:
                    case #SEPA848:
                        value = 'SEPA';
                        break;
                    case #ACH_DC:
                        value = 'NURG';
                        break;
                    case #SIP962:
                        value = 'URNS';
                        break;
                    case #CDFT392:      //SKS#DevOps:17871
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GB')
                        {
                            value = 'BKTR';
                        }
                        else
                        {
                            value = 'URGP';
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-GT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        value = 'BKTR';
                        break;
                    case #DFT441:
                    case #CBFT442:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB392:
                    case #DOM391:
                        value = 'URGP';
                        break;
                    case #ATPAY403:
                    case #CHK405:
                    case #CHECK405:
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM441:
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-HU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM303:
                    case #DOM903:
                        value = 'NURG';
                        break;
                    case #CBFT574:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-ID':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM391:
                        value = 'URGP';
                        break;
                    case #LLG408:
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        value = 'SEPA';
                        break;
                    case #CB_WIRE:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM540:
                    case #DFT541:           //SKS#DevOps:15853
                        value = 'URNS';
                        break;
                    case #RTGS539:              //SKS#DevOps:15853
                    case #TAX927:               //SKS#DevOps:15853
                    case #TAX947:               //SKS#DevOps:15853
                    case #IFT_CB392:            //SKS#DevOps:15853
                    case #CDT862:               //SKS#DevOps:15853
                        value = 'URGP';
                        break;
                    case #TAX908:               //SKG#VSTS:15853
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_DC:
                        value = 'SEPA';
                        break;
                    case #CB_WIRE:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        value = 'NURG';
                        break;
                    case #CBFT574:
                    case #RTGS605:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH964:
                    case #CHECK815:
                        value = 'NURG';
                        break;
                    case #CBFT574:
                    case #DFT555:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM391:
                    case #BKT410:
                    case #ACH410:
                        value = 'NURG';
                        break;
                    case #WIRE392:
                    case #WIRE391:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-KE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-KR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PRL414:
                        value = 'NURG';
                        break;
                    case #CB392:
                    case #DOM391:
                        value = 'URGP';
                        break;
                    case #BKT393:
                        value = 'BKTR';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-LU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        value = 'SEPA';
                        break;
                    case #CB_WIRE:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-MX':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT442:
                        value = 'URGP';
                        break;
                    case #BWPMT835:
                    case #CHK496:
                    case #CHK834:
                        value = 'NURG';
                        break;
                        //value =
                }
                break;
            case 'US-CITICONNECT-XML-MY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PLG527:
                    case #GIRO527:
                        value = 'NURG';
                        break;
                    case #CB392:
                    case #CBFT392:
                    case #DOM391:
                    case #DFT391:
                        value = 'URGP';
                        break;
                    case #BKT393:
                        value = 'BKTR';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_SEPA:
                        value = 'SEPA';
                        break;
                    case #CB_WIRE:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_DC:
                    case #ACH_KID:
                        value = 'NURG';
                        break;
                    case #CB_WIRE:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-NZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DC417:
                    case #CHECK416:
                        value = 'NURG';
                        break;
                    case #CB_WIRE:
                    case #DOM391:
                    case #DOM391RT:
                    case #CB392:
                        value = 'URGP';
                        break;
                    case #BKT393:
                        value = 'BKTR';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM441:
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DFT441:
                    case #CBFT442:
                        value = 'URGP';
                        break;
                    case #BKT440:
                        value = 'BKTR';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                    case #DOM325:
                    case #TAX592:
                    case #VAT984:
                    case #DFT555:
                        value = 'NURG';
                        break;
                    case #SEPA:
                        value = 'SEPA';
                        break;
                    case #CBFT574:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PR':
                switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
                {
                    case #FT607:
                        value = 'URGP';
                        break;
                    case 'CCD':
                    case 'PPD':
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-RO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM789:
                    case #DOM332:
                        value = 'NURG';
                        break;
                    case #CBFT574:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-RU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM548:
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_PG:
                    case #ACH_BG:
                    case #ACH150:
                        value = 'NURG';
                        break;
                    case #CB_WIRE:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #GIRO421:
                    case #PRL422:
                        value = 'NURG';
                        break;
                    case #CB392:
                    case #DFT391:
                        value = 'URGP';
                        break;
                    case #BKT393:
                        value = 'BKTR';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA938:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-SV':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT440:
                        value = 'BKTR';
                        break;
                    case #DFT441:
                    case #CBFT442:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PRL426:
                    case #ATPAY424:
                    case #CHK425:
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT547:
                        value = 'BKTR';
                        break;
                    case #DOM555:
                        value = 'NURG';
                        break;
                    case #CBFT574:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT547:
                        value = 'BKTR';
                        break;
                    case #DOM555:
                    case #SSK853:
                        value = 'NURG';
                        break;
                    case #CBFT574:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TW':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    
                    case #CB392:
                        value = 'URGP';
                        break;
                    case #IBRS429:
                        value = 'URNS';
                        break;
                    case #IBRS430:
                        value = 'NURG';
                        break;
                    case #BKT393:
                        value = 'BKTR';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-UA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    
                    case #DOM555:
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BKT500:
                        value = 'BKTR';
                        break;
                    case #ACHCCD:
                    case #ACHPPD:
                    case #ACHCTX:
                    case #ACH502:
                    case #ACH503:
                    case #ACHCCP:
                    case #ACHPPP:
                    case #CTX942:
                    case #CCDP14:
                    case #CTX17:
                    case #CTX950:               //SKG#VSTS:13477
                        value = 'NURG';
                        break;
                    case #FT499:
                    case #USFCP821:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-UY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DFT441:
                        value = 'URGP';
                        break;
                    case #CBFT442:
                        value = 'URGP';
                        break;
                    case #BKT440:
                        value = 'BKTR';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-VE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    
                    case #DOM441:
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-ZA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH809:
                        value = 'SDVA';
                        break;
                    case #WIRE574:
                        value = 'WIRE';
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AU':
            case 'US-CITICONNECT-WL-XML-CA':
            case 'US-CITICONNECT-WL-XML-GB':
            case 'US-CITICONNECT-WL-XML-SG':
            case 'US-CITICONNECT-WL-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_WL:
                        value = 'NURG';
                        break;
                    case #WIRE_WL:
                        value = 'URGP';
                        break;
                    case #SEPA_WL:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_WL:
                        value = 'NURG';
                        break;
                    case #WIRE_WL:
                        value = 'URGP';
                        break;
                    case #SEPA_WL:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-MC':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA_WL:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-BE':
            case 'US-CITICONNECT-WL-XML-CY':
            case 'US-CITICONNECT-WL-XML-CZ':
            case 'US-CITICONNECT-WL-XML-DE':
            case 'US-CITICONNECT-WL-XML-EE':
            case 'US-CITICONNECT-WL-XML-ES':
            case 'US-CITICONNECT-WL-XML-FI':
            case 'US-CITICONNECT-WL-XML-FR':
            case 'US-CITICONNECT-WL-XML-GR':
            case 'US-CITICONNECT-WL-XML-IE':
            case 'US-CITICONNECT-WL-XML-IT':
            case 'US-CITICONNECT-WL-XML-LU':
            case 'US-CITICONNECT-WL-XML-LV':
            case 'US-CITICONNECT-WL-XML-MT':
            case 'US-CITICONNECT-WL-XML-NL':
            case 'US-CITICONNECT-WL-XML-PT':
            case 'US-CITICONNECT-WL-XML-SI':
            case 'US-CITICONNECT-WL-XML-SK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA_WL:
                        value = 'SEPA';
                        break;
                    case #WIRE_WL:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AE':
            case 'US-CITICONNECT-WL-XML-AL':
            case 'US-CITICONNECT-WL-XML-AO':
            case 'US-CITICONNECT-WL-XML-AZ':
            case 'US-CITICONNECT-WL-XML-BD':
            case 'US-CITICONNECT-WL-XML-BF':
            case 'US-CITICONNECT-WL-XML-BG':
            case 'US-CITICONNECT-WL-XML-BH':
            case 'US-CITICONNECT-WL-XML-BJ':
            case 'US-CITICONNECT-WL-XML-BM':
            case 'US-CITICONNECT-WL-XML-BN':
            case 'US-CITICONNECT-WL-XML-BR':
            case 'US-CITICONNECT-WL-XML-BS':
            case 'US-CITICONNECT-WL-XML-BW':
            case 'US-CITICONNECT-WL-XML-BY':
            case 'US-CITICONNECT-WL-XML-CD':
            case 'US-CITICONNECT-WL-XML-CH':
            case 'US-CITICONNECT-WL-XML-CI':
            case 'US-CITICONNECT-WL-XML-CL':
            case 'US-CITICONNECT-WL-XML-CM':
            case 'US-CITICONNECT-WL-XML-CN':
            case 'US-CITICONNECT-WL-XML-CO':
            case 'US-CITICONNECT-WL-XML-CR':
            case 'US-CITICONNECT-WL-XML-DK':
            case 'US-CITICONNECT-WL-XML-DO':
            case 'US-CITICONNECT-WL-XML-DZ':
            case 'US-CITICONNECT-WL-XML-EG':
            case 'US-CITICONNECT-WL-XML-ET':
            case 'US-CITICONNECT-WL-XML-GA':
            case 'US-CITICONNECT-WL-XML-GE':
            case 'US-CITICONNECT-WL-XML-GH':
            case 'US-CITICONNECT-WL-XML-GT':
            case 'US-CITICONNECT-WL-XML-GW':
            case 'US-CITICONNECT-WL-XML-GY':
            case 'US-CITICONNECT-WL-XML-HK':
            case 'US-CITICONNECT-WL-XML-HN':
            case 'US-CITICONNECT-WL-XML-HR':
            case 'US-CITICONNECT-WL-XML-HU':
            case 'US-CITICONNECT-WL-XML-ID':
            case 'US-CITICONNECT-WL-XML-IL':
            case 'US-CITICONNECT-WL-XML-IN':
            case 'US-CITICONNECT-WL-XML-JO':
            case 'US-CITICONNECT-WL-XML-JP':
            case 'US-CITICONNECT-WL-XML-KE':
            case 'US-CITICONNECT-WL-XML-KH':
            case 'US-CITICONNECT-WL-XML-KR':
            case 'US-CITICONNECT-WL-XML-KW':
            case 'US-CITICONNECT-WL-XML-KZ':
            case 'US-CITICONNECT-WL-XML-LA':
            case 'US-CITICONNECT-WL-XML-LB':
            case 'US-CITICONNECT-WL-XML-LI':
            case 'US-CITICONNECT-WL-XML-LK':
            case 'US-CITICONNECT-WL-XML-LT':
            case 'US-CITICONNECT-WL-XML-MA':
            case 'US-CITICONNECT-WL-XML-MD':
            case 'US-CITICONNECT-WL-XML-MM':
            case 'US-CITICONNECT-WL-XML-MN':
            case 'US-CITICONNECT-WL-XML-MR':
            case 'US-CITICONNECT-WL-XML-MU':
            case 'US-CITICONNECT-WL-XML-MW':
            case 'US-CITICONNECT-WL-XML-MX':
            case 'US-CITICONNECT-WL-XML-MY':
            case 'US-CITICONNECT-WL-XML-MZ':
            case 'US-CITICONNECT-WL-XML-NA':
            case 'US-CITICONNECT-WL-XML-NE':
            case 'US-CITICONNECT-WL-XML-NG':
            case 'US-CITICONNECT-WL-XML-NO':
            case 'US-CITICONNECT-WL-XML-NP':
            case 'US-CITICONNECT-WL-XML-NZ':
            case 'US-CITICONNECT-WL-XML-OM':
            case 'US-CITICONNECT-WL-XML-PE':
            case 'US-CITICONNECT-WL-XML-PG':
            case 'US-CITICONNECT-WL-XML-PH':
            case 'US-CITICONNECT-WL-XML-PK':
            case 'US-CITICONNECT-WL-XML-PL':
            case 'US-CITICONNECT-WL-XML-PY':
            case 'US-CITICONNECT-WL-XML-QA':
            case 'US-CITICONNECT-WL-XML-RO':
            case 'US-CITICONNECT-WL-XML-RS':
            case 'US-CITICONNECT-WL-XML-RU':
            case 'US-CITICONNECT-WL-XML-RW':
            case 'US-CITICONNECT-WL-XML-SA':
            case 'US-CITICONNECT-WL-XML-SC':
            case 'US-CITICONNECT-WL-XML-SE':
            case 'US-CITICONNECT-WL-XML-SN':
            case 'US-CITICONNECT-WL-XML-SZ':
            case 'US-CITICONNECT-WL-XML-TD':
            case 'US-CITICONNECT-WL-XML-TG':
            case 'US-CITICONNECT-WL-XML-TH':
            case 'US-CITICONNECT-WL-XML-TN':
            case 'US-CITICONNECT-WL-XML-TR':
            case 'US-CITICONNECT-WL-XML-TT':
            case 'US-CITICONNECT-WL-XML-TW':
            case 'US-CITICONNECT-WL-XML-TZ':
            case 'US-CITICONNECT-WL-XML-UG':
            case 'US-CITICONNECT-WL-XML-UY':
            case 'US-CITICONNECT-WL-XML-UZ':
            case 'US-CITICONNECT-WL-XML-VN':
            case 'US-CITICONNECT-WL-XML-ZA':
            case 'US-CITICONNECT-WL-XML-ZM':
            case 'US-CITICONNECT-WL-XML-AG':
            case 'US-CITICONNECT-WL-XML-MO':                //SKS_VSTS_13720
            case 'US-CITICONNECT-WL-XML-HT':
            case 'US-CITICONNECT-WL-XML-FJ':
            case 'US-CITICONNECT-WL-XML-BO':
            case 'US-CITICONNECT-WL-XML-BA':            //SKS#DevOps:16138
            case 'US-CITICONNECT-WL-XML-BB':            //SKS#DevOps:16237
            case 'US-CITICONNECT-WL-XML-MG':            //SKS#DevOps:16946
            case 'US-CITICONNECT-WL-XML-ML':            //SKS#DevOps:16946
            case 'US-CITICONNECT-WL-XML-KM':            //SKS#DevOps:16946
            case 'US-CITICONNECT-WL-XML-GM':            //SKS#DevOps:17970
            case 'US-CITICONNECT-WL-XML-NI':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-IS':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA_WL:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-PPW-XML':           //SKS#VSTS:14271
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PPW_WL:
                    case #PPW_PH_WL:                //SKS#DevOps:14542
                        value = 'URGP';
                        break;
                }
                break;

        }
        //              2.9: Cd
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Cd', value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_RmtInf_Amt</Name>
				<Source><![CDATA[
    protected void node_RmtInf_Amt(XmlElement _nodeRfrdDocAmt, SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.42: Amt
        //              2.43: InstdAmt
        //------------------------------------------------------------------------------------------------------
        XmlElement  currentElement;
        AmountMST   gross = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        AmountMST   Remitted;
        AmountMST   CreditNote;

        if(_invSKS_EFT_FileDetail.InvoiceSettleAmountCur > 0)
        {
            Remitted = 0;
            CreditNote = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            //      2.110
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DuePyblAmt', num2str(gross * 1,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);

            //      2.111
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DscntApldAmt', num2str(_invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur * 1,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
        else
        {
            Remitted = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1;
            CreditNote = 0;
            //      2.110
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DuePyblAmt', num2str(gross * -1,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);

            //      2.111
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DscntApldAmt', num2str(_invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur * -1,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
        }

        if(Remitted != 0)
        {
            //      RmtdAmt
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'RmtdAmt', num2str(Remitted,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
        else
        {
            //      CdtNoteAmt
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'CdtNoteAmt', num2str(CreditNote,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_InstrForDbtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_InstrForDbtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.82: InstrForDbtrAgt
        //------------------------------------------------------------------------------------------------------

        boolean printInstrForDbtrAgt;

        this.getBankPurposeCode();

        EventHandlerResult result = new EventHandlerResult();

        
        this.node_CdtTrfTxInf_InstrForDbtrAgt_delegate(_nodeCdtTrfTxInf,mSKS_EFT_FileDetail, mSKS_EFT_FileFormatPaymSpec, xmldoc, result);

        if(!result.result())
        {
            switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
            {
                case 'US-CITICONNECT-XML-CN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #PLG400:
                        case #PRL401:
                            printInstrForDbtrAgt = true;
                            break;
                    }
                    break;
                case 'US-CITICONNECT-XML-BR':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #TLPAY451:
                            printInstrForDbtrAgt = true;
                            break;
                    }
                    break;
            }

            if(bankCodeText && printInstrForDbtrAgt)
            {
                //          2.85: InstrForDbtrAgt
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'InstrForDbtrAgt', this.CharacterReplacement(bankCodeText));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Tax</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Tax(XmlElement _nodeCdtTrfTxInf)
    {
        XmlElement  nodeTax;
        XmlElement  nodeRcrd;
        XmlElement  nodeTaxAmt;
        XmlElement  nodeTtlAmt;
        XmlElement  nodeTtlTaxAmt;
        XmlElement  nodeTaxblBaseAmt;
        XmlElement  nodeCdtr;
        XmlElement  nodeDbtr;        
        XmlElement  nodeFrToDt;
        XmlElement  nodePrd;
        str         value, certificateNumber;
        str         regnId, type, FrmsCd;
        str         BeneTaxId, AdmstnZn;
        AmountMST   taxAmt;
        SKS_EFT_TH_WithHoldingTaxFields     mSKS_EFT_TH_WithHoldingTaxFields;
        SKS_EFT_FileDetail_TaxWHTrans       sks_EFT_FD_TaxWHTrans; // SKS_FDD_10590
        boolean printTax;
        boolean printmtd;
        boolean printttlTaxAmt;
        boolean printTp;
        boolean printAddtlInf;
        boolean printWHTFormDetails;
        boolean printCtgy;
        boolean printTaxblBaseAmt;
        boolean printRate;
        boolean printDbtr;
        boolean printCdtr;
        PeriodStart start;       //SKS#DevOps:15853
        PeriodEnd End;

        start = FiscalCalendarYear::findYearByCalendarDate(Ledger::fiscalCalendar(CompanyInfo::find().RecId), systemDateGet()).StartDate;
        End = FiscalCalendarYear::findYearByCalendarDate(Ledger::fiscalCalendar(CompanyInfo::find().RecId), systemDateGet()).enddate;

        mSKS_EFT_TH_WithHoldingTaxFields = new SKS_EFT_TH_WithHoldingTaxFields();
        
        mSKS_EFT_TH_WithHoldingTaxFields.getSKS_EFT_TH_WithHoldingTaxFields(mSKS_EFT_FileDetail.PaymentLineRecId);
        certificateNumber   = mSKS_EFT_TH_WithHoldingTaxFields.CertificateNumber();
               
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-PL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #TAX592:
                        regnId      = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RegnId', mSKS_EFT_FileDetail.RecId));
                        type        = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Type', mSKS_EFT_FileDetail.RecId));
                        FrmsCd      = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('FrmsCd', mSKS_EFT_FileDetail.RecId));
                        printTax    = true;
                        printDbtr   = true;
                        break;
                    case #VAT984:
                        beneTaxId   = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BeneTaxId', mSKS_EFT_FileDetail.RecId));
                        admstnZn    = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('AdmstnZn', mSKS_EFT_FileDetail.RecId));
                        printTax    = true;
                        printCdtr   = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK425:
                        printTax = true;
                        printmtd = true;
                        printCtgy = true;
                        printWHTFormDetails = true;
                        printTaxblBaseAmt = true;
                        break;
                    case #ATPAY424:
                        printTax = true;
                        printmtd = true;
                        printTp = true;
                        printCtgy = true;
                        printWHTFormDetails = true;
                        printTaxblBaseAmt = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-RU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM548:
                        printTax = true;
                        printttlTaxAmt = true;
                        printRate = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-TR':
            case 'US-CITICONNECT-XML-UA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                        printTax = true;
                        printAddtlInf = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #TAX908:
                        //          Tax
                        nodeTax = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Tax'));

                        //              TtlTaxAmt
                        nodeTtlTaxAmt = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTax, 'TtlTaxAmt', num2str(this.getTotalTaxAmount(),0,2,0,0), 12, false);
                        SKS_EFT_Format::xmlsetAttributeText(nodeTtlTaxAmt, 'Ccy', mSKS_EFT_FileDetail.PaymentCurrencyCode);

                        //              Rcrd
                        nodeRcrd = nodeTax.appendChild(xmlDoc.createElement('Rcrd'));

                        //                  CertId
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'CertId', SKS_EFT_Format::getCodelookupvalue('CertId', mSKS_EFT_FileDetail.RecId), 0, false);

                        //              Prd
                        nodePrd = nodeRcrd.appendChild(xmlDoc.createElement('Prd'));

                        //                  FrToDt
                        nodeFrToDt = nodePrd.appendChild(xmlDoc.createElement('FrToDt'));

                        //                  FrDt
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFrToDt, 'FrDt', int2str(year(start)) + '-' + subStr(int2str(year(End)),3,4), 0, false);

                        //                  ToDt
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFrToDt, 'ToDt', int2str(year(start)) + '-' + subStr(int2str(year(End)),3,4), 0, false);


                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'AddtlInf',
                        '/INTA/'
                        + this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TaxHeadCode', mSKS_EFT_FileDetail.RecId)) + '/'
                        + this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TaxMinorHeadCode', mSKS_EFT_FileDetail.RecId))+ '/'
                        , 0, false);
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'AddtlInf','/INTV///////', 0, false);
                        break;
                    case #TAX927:
                        //          Tax
                        nodeTax = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Tax'));

                        //          Dbtr
                        nodeDbtr = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Dbtr'));

                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtr, 'TaxId', SKS_EFT_Format::getCodelookupvalue('IECode', mSKS_EFT_FileDetail.RecId), 0, false);

                        //              Rcrd
                        nodeRcrd = nodeTax.appendChild(xmlDoc.createElement('Rcrd'));

                        //                  Ctgy
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'Ctgy', SKS_EFT_Format::getCodelookupvalue('PortCode', mSKS_EFT_FileDetail.RecId), 35, false);

                        //                  CertId
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'CertId', SKS_EFT_Format::getCodelookupvalue('ChallanNumber', mSKS_EFT_FileDetail.RecId), 35, false);

                        //                  FrmsCd
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'FrmsCd', SKS_EFT_Format::getCodelookupvalue('BOENumber', mSKS_EFT_FileDetail.RecId), 35, false);
                        break;
                    case #TAX947:
                        //          Tax
                        nodeTax = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Tax'));

                        //          Dbtr
                        nodeDbtr = nodeTax.appendChild(xmlDoc.createElement('Dbtr'));

                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtr, 'TaxId', SKS_EFT_Format::getCodelookupvalue('SRINOrTINNumber', mSKS_EFT_FileDetail.RecId), 0, false);

                        //              Rcrd
                        nodeRcrd = nodeTax.appendChild(xmlDoc.createElement('Rcrd'));

                        //                  Tp
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'Tp', SKS_EFT_Format::getCodelookupvalue('TaxState', mSKS_EFT_FileDetail.RecId), 35, false);

                        //                  CertId
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'CertId', SKS_EFT_Format::getCodelookupvalue('VRNOrTRNNumber', mSKS_EFT_FileDetail.RecId), 20, false);

                        //                  FrmsCd
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'FrmsCd', SKS_EFT_Format::getCodelookupvalue('TextLabelValue', mSKS_EFT_FileDetail.RecId), 35, false);

                        //              Prd
                        nodePrd = nodeRcrd.appendChild(xmlDoc.createElement('Prd'));

                        //                  FrToDt
                        nodeFrToDt = nodePrd.appendChild(xmlDoc.createElement('FrToDt'));

                        //                  FrDt
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFrToDt, 'FrDt', SKS_PP_StringFormats::strDateYYYYMMDD(start, DateSeparator::Hyphen), 0, false);

                        //                  ToDt
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFrToDt, 'ToDt', SKS_PP_StringFormats::strDateYYYYMMDD(End, DateSeparator::Hyphen), 0, false);
                        break;
                }
                break;
        }

        if(printTax)
        {
            //          Tax
            nodeTax = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Tax'));

            if(printCdtr &&
               (beneTaxId || admstnZn || this.getInvoiceNbrs()))
            {
                //                  Cdtr
                nodeCdtr = nodeTax.appendChild(xmlDoc.createElement('Cdtr'));

                //                              TaxId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtr, 'TaxId', beneTaxId, 14, false);

                //                              AdmstnZn
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTax, 'AdmstnZn', admstnZn, 1, false);

                //                              RefNb
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTax, 'RefNb', this.getInvoiceNbrs(), 35, false);

                //                              TotalTaxAmount
                nodeTtlTaxAmt = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTax, 'TtlTaxAmt', num2str(this.getTotalTaxAmount(),0,2,0,0), 12, false);
                SKS_EFT_Format::xmlsetAttributeText(nodeTtlTaxAmt, 'Ccy', mSKS_EFT_FileDetail.PaymentCurrencyCode);
            }
            if(printDbtr &&
               (regnId || type || FrmsCd))
            {
                //                  Dbtr
                nodeDbtr = nodeTax.appendChild(xmlDoc.createElement('Dbtr'));

                //                              RegnId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtr, 'RegnId', regnId, 34, false);

                //                  Rcrd
                nodeRcrd = nodeTax.appendChild(xmlDoc.createElement('Rcrd'));

                //                      Tp
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'Tp', type, 35, false);

                //                      FrmsCd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'FrmsCd', FrmsCd, 7, false);
            }
            if(printmtd)
            {
                //              Mtd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTax, 'Mtd', SKS_EFT_Format::getCodelookupvalue('Mtd', mSKS_EFT_FileDetail.RecId), 0, false);  //SKS_FDD_10590

                //              SeqNb
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTax, 'SeqNb', certificateNumber, 0, false);
            }
            if(printttlTaxAmt)
            {
                //              TtlTaxAmt
                nodeTtlTaxAmt = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTax, 'TtlTaxAmt', num2str(this.getTotalWithholdTaxAmount(mSKS_EFT_FileDetail.RecId), 0, 2, 1, 0), 0, false);
                SKS_EFT_Format::xmlsetAttributeText(nodeTtlTaxAmt, 'Ccy', mSKS_EFT_FileDetail.PaymentCurrencyCode);
            }
            while select sks_EFT_FD_TaxWHTrans where sks_EFT_FD_TaxWHTrans.RefRecId == mSKS_EFT_FileDetail.RecId // SKS_FDD_10590
            {
                //              Rcrd
                nodeRcrd = nodeTax.appendChild(xmlDoc.createElement('Rcrd'));
                

                if(printCtgy)
                {
                    //              Tp
                    if(printTp &&
                       sks_EFT_FD_TaxWHTrans.TaxWithholdAmount < 0)// SKS_FDD_10590
                    {
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'Tp', 'CREN');
                    }
                    
                    //                    Ctgy
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'Ctgy', sks_EFT_FD_TaxWHTrans.TaxWithholdRevenueCode, 0, false);// SKS_FDD_10590
                    
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'CtgyDtls', this.CharacterReplacement(sks_EFT_FD_TaxWHTrans.TWHItemGrpHeading_TH_Name), 35, false);// SKS_FDD_10590
                    
                    //                  CertId
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'CertId', certificateNumber, 0, false);
                    
                    //                  FrmsCd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'FrmsCd', this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('FrmsCd', mSKS_EFT_FileDetail.RecId)), 0, false);    //SKS_FDD_10590
                }

                //                  TaxAmt
                nodeTaxAmt = nodeRcrd.appendChild(xmlDoc.createElement('TaxAmt'));
                
                taxAmt = sks_EFT_FD_TaxWHTrans.TaxWithholdAmount;

                if(printRate)
                {
                    value = SKS_EFT_Format::getCodelookupvalue('Rate', mSKS_EFT_FileDetail.RecId);   //SKS_FDD_10590
                    if(value == '04')
                    {
                        taxAmt = 0;
                    }
                    //                      Rate
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTaxAmt, 'Rate', value, 0, false);
                }
                
                else if(printTaxblBaseAmt)
                {
                    //                      Rate
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTaxAmt, 'Rate', num2str(sks_EFT_FD_TaxWHTrans.TaxWithholdValue, 0, 0, 0, 0), 0, false);
                    
                    //                      TaxblBaseAmt
                    nodeTaxblBaseAmt = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTaxAmt, 'TaxblBaseAmt', num2str(sks_EFT_FD_TaxWHTrans.InvoiceCurUpdatedWithholdBaseAmount, 0, 2, 1, 0), 0, false);
                    
                    SKS_EFT_Format::xmlsetAttributeText(nodeTaxblBaseAmt, 'Ccy', Currency::currencyCodeISO(sks_EFT_FD_TaxWHTrans.InvoiceCurrency));
                }

                //                      TtlAmt
                nodeTtlAmt = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTaxAmt, 'TtlAmt', num2str(this.getPositiveAmount(taxAmt), 0, 2, 1, 0), 0, false);
                
                SKS_EFT_Format::xmlsetAttributeText(nodeTtlAmt, 'Ccy', Currency::currencyCodeISO(sks_EFT_FD_TaxWHTrans.InvoiceCurrency));

                //                   AddtlInf
                if(printAddtlInf)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'AddtlInf', this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('AddtlInf', mSKS_EFT_FileDetail.RecId)), 0, false);    //SKS_FDD_10590
                }
                else if(printWHTFormDetails)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'AddtlInf', this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('WHTFormDetails', mSKS_EFT_FileDetail.RecId)), 0, false);  //SKS_FDD_10590
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTotalWithholdTaxAmount</Name>
				<Source><![CDATA[
    private AmountMST getTotalWithholdTaxAmount(RefRecId _fileDetailRecId)
    {
        SKS_EFT_FileDetail_TaxWHTrans   sks_EFT_FD_TaxWHTrans;
       
        select sum(TaxWithholdAmount) from sks_EFT_FD_TaxWHTrans
            where sks_EFT_FD_TaxWHTrans.RefRecId == _fileDetailRecId;

        return sks_EFT_FD_TaxWHTrans.TaxWithholdAmount;

    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrNodes</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrNodes(XmlElement _nodePmtInf)
    {
        //      2.19: Dbtr
        this.node_PmtInf_Dbtr(_nodePmtInf);
    
        if((subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -2) == 'WL') ||
            (subStr(mSKS_EFT_FileDetail.PaymSpec, strLen(mSKS_EFT_FileDetail.PaymSpec), -2) == 'RC') ||
            mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'WIRE-WL-O' ||
            mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'WIRE-WL-I')            //SKS_VSTS_13659
        {
            //      2.20: DbtrAcct
            this.node_PmtInf_DbtrAcctWL(_nodePmtInf);
    
            //      2.21: DbtrAgt
            this.node_PmtInf_DbtrAgtWL(_nodePmtInf);
        }
        else
        {
            //      2.20: DbtrAcct
            this.node_PmtInf_DbtrAcct(_nodePmtInf);
    
            //      2.21: DbtrAgt
            this.node_PmtInf_DbtrAgt(_nodePmtInf);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcctWL</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcctWL(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: DbtrAcct
        //          Id
        //              IBAN
        //              Othr
    
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;
        XmlElement nodeOthr;
        int length;
    
        if(mSKS_EFT_FileDetail.BankBankAcct || mSKS_EFT_FileDetail.BankBankIBAN)
        {
            //      2.20: DbtrAcct
            nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
            //          Id
            nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
        
            if(mSKS_EFT_FileDetail.BankBankAcct)
            {
                //          Othr
                nodeOthr = nodeDbtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
                switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
                {
                    case 'US-CITICONNECT-WL-XML-AE':
                    case 'US-CITICONNECT-WL-XML-AL':
                    case 'US-CITICONNECT-WL-XML-AO':
                    case 'US-CITICONNECT-WL-XML-AT':
                    case 'US-CITICONNECT-WL-XML-AU':
                    case 'US-CITICONNECT-WL-XML-AZ':
                    case 'US-CITICONNECT-WL-XML-BD':
                    case 'US-CITICONNECT-WL-XML-BE':
                    case 'US-CITICONNECT-WL-XML-BF':
                    case 'US-CITICONNECT-WL-XML-BG':
                    case 'US-CITICONNECT-WL-XML-BH':
                    case 'US-CITICONNECT-WL-XML-BJ':
                    case 'US-CITICONNECT-WL-XML-BM':
                    case 'US-CITICONNECT-WL-XML-BN':
                    case 'US-CITICONNECT-WL-XML-BR':
                    case 'US-CITICONNECT-WL-XML-BS':
                    case 'US-CITICONNECT-WL-XML-BW':
                    case 'US-CITICONNECT-WL-XML-BY':
                    case 'US-CITICONNECT-WL-XML-CA':
                    case 'US-CITICONNECT-WL-XML-CD':
                    case 'US-CITICONNECT-WL-XML-CH':
                    case 'US-CITICONNECT-WL-XML-CI':
                    case 'US-CITICONNECT-WL-XML-CL':
                    case 'US-CITICONNECT-WL-XML-CM':
                    case 'US-CITICONNECT-WL-XML-CN':
                    case 'US-CITICONNECT-WL-XML-CO':
                    case 'US-CITICONNECT-WL-XML-CR':
                    case 'US-CITICONNECT-WL-XML-CY':
                    case 'US-CITICONNECT-WL-XML-CZ':
                    case 'US-CITICONNECT-WL-XML-DE':
                    case 'US-CITICONNECT-WL-XML-DK':
                    case 'US-CITICONNECT-WL-XML-DO':
                    case 'US-CITICONNECT-WL-XML-DZ':
                    case 'US-CITICONNECT-WL-XML-EE':
                    case 'US-CITICONNECT-WL-XML-EG':
                    case 'US-CITICONNECT-WL-XML-ES':
                    case 'US-CITICONNECT-WL-XML-ET':
                    case 'US-CITICONNECT-WL-XML-FI':
                    case 'US-CITICONNECT-WL-XML-FR':
                    case 'US-CITICONNECT-WL-XML-GA':
                    case 'US-CITICONNECT-WL-XML-GB':
                    case 'US-CITICONNECT-WL-XML-GE':
                    case 'US-CITICONNECT-WL-XML-GH':
                    case 'US-CITICONNECT-WL-XML-GR':
                    case 'US-CITICONNECT-WL-XML-GT':
                    case 'US-CITICONNECT-WL-XML-GW':
                    case 'US-CITICONNECT-WL-XML-GY':
                    case 'US-CITICONNECT-WL-XML-HK':
                    case 'US-CITICONNECT-WL-XML-HN':
                    case 'US-CITICONNECT-WL-XML-HR':
                    case 'US-CITICONNECT-WL-XML-HU':
                    case 'US-CITICONNECT-WL-XML-ID':
                    case 'US-CITICONNECT-WL-XML-IE':
                    case 'US-CITICONNECT-WL-XML-IL':
                    case 'US-CITICONNECT-WL-XML-IN':
                    case 'US-CITICONNECT-WL-XML-IT':
                    case 'US-CITICONNECT-WL-XML-JO':
                    case 'US-CITICONNECT-WL-XML-JP':
                    case 'US-CITICONNECT-WL-XML-KE':
                    case 'US-CITICONNECT-WL-XML-KH':
                    case 'US-CITICONNECT-WL-XML-KR':
                    case 'US-CITICONNECT-WL-XML-KW':
                    case 'US-CITICONNECT-WL-XML-KZ':
                    case 'US-CITICONNECT-WL-XML-LA':
                    case 'US-CITICONNECT-WL-XML-LB':
                    case 'US-CITICONNECT-WL-XML-LI':
                    case 'US-CITICONNECT-WL-XML-LK':
                    case 'US-CITICONNECT-WL-XML-LT':
                    case 'US-CITICONNECT-WL-XML-LU':
                    case 'US-CITICONNECT-WL-XML-LV':
                    case 'US-CITICONNECT-WL-XML-MA':
                    case 'US-CITICONNECT-WL-XML-ME':
                    case 'US-CITICONNECT-WL-XML-MC':
                    case 'US-CITICONNECT-WL-XML-MD':
                    case 'US-CITICONNECT-WL-XML-MM':
                    case 'US-CITICONNECT-WL-XML-MN':
                    case 'US-CITICONNECT-WL-XML-MR':
                    case 'US-CITICONNECT-WL-XML-MT':
                    case 'US-CITICONNECT-WL-XML-MU':
                    case 'US-CITICONNECT-WL-XML-MW':
                    case 'US-CITICONNECT-WL-XML-MX':
                    case 'US-CITICONNECT-WL-XML-MY':
                    case 'US-CITICONNECT-WL-XML-MZ':
                    case 'US-CITICONNECT-WL-XML-NA':
                    case 'US-CITICONNECT-WL-XML-NE':
                    case 'US-CITICONNECT-WL-XML-NG':
                    case 'US-CITICONNECT-WL-XML-NL':
                    case 'US-CITICONNECT-WL-XML-NO':
                    case 'US-CITICONNECT-WL-XML-NP':
                    case 'US-CITICONNECT-WL-XML-NZ':
                    case 'US-CITICONNECT-WL-XML-OM':
                    case 'US-CITICONNECT-WL-XML-PE':
                    case 'US-CITICONNECT-WL-XML-PG':
                    case 'US-CITICONNECT-WL-XML-PH':
                    case 'US-CITICONNECT-WL-XML-PK':
                    case 'US-CITICONNECT-WL-XML-PL':
                    case 'US-CITICONNECT-WL-XML-PT':
                    case 'US-CITICONNECT-WL-XML-PY':
                    case 'US-CITICONNECT-WL-XML-QA':
                    case 'US-CITICONNECT-WL-XML-RO':
                    case 'US-CITICONNECT-WL-XML-RS':
                    case 'US-CITICONNECT-WL-XML-RU':
                    case 'US-CITICONNECT-WL-XML-RW':
                    case 'US-CITICONNECT-WL-XML-SA':
                    case 'US-CITICONNECT-WL-XML-SC':
                    case 'US-CITICONNECT-WL-XML-SE':
                    case 'US-CITICONNECT-WL-XML-SG':
                    case 'US-CITICONNECT-WL-XML-SI':
                    case 'US-CITICONNECT-WL-XML-SK':
                    case 'US-CITICONNECT-WL-XML-SN':
                    case 'US-CITICONNECT-WL-XML-SZ':
                    case 'US-CITICONNECT-WL-XML-TD':
                    case 'US-CITICONNECT-WL-XML-TG':
                    case 'US-CITICONNECT-WL-XML-TH':
                    case 'US-CITICONNECT-WL-XML-TN':
                    case 'US-CITICONNECT-WL-XML-TR':
                    case 'US-CITICONNECT-WL-XML-TT':
                    case 'US-CITICONNECT-WL-XML-TW':
                    case 'US-CITICONNECT-WL-XML-TZ':
                    case 'US-CITICONNECT-WL-XML-UG':
                    case 'US-CITICONNECT-WL-XML-US':
                    case 'US-CITICONNECT-WL-XML-UY':
                    case 'US-CITICONNECT-WL-XML-UZ':
                    case 'US-CITICONNECT-WL-XML-VN':
                    case 'US-CITICONNECT-WL-XML-ZA':
                    case 'US-CITICONNECT-WL-XML-ZM':
                    case 'US-CITICONNECT-WL-XML-AG':
                    case 'US-CITICONNECT-WL-XML-MO':                //SKS_VSTS_13720
                    case 'US-CITICONNECT-WL-XML-HT':
                    case 'US-CITICONNECT-WL-XML-FJ':
                    case 'US-CITICONNECT-WL-XML-BO':
                    case 'US-CITICONNECT-WL-XML-IS':
                    case 'US-CITICONNECT-WL-PPW-XML':                //SKS_VSTS_14271
                    case 'US-CITICONNECT-WL-XML-ML':
                    case 'US-CITICONNECT-WL-XML-KM':    //SKS#DevOps:16946
                    case 'US-CITICONNECT-WL-XML-GM':        //SKS#DevOps:17970
                    case 'US-CITICONNECT-WL-XML-MG':    //SKS#DevOps:16946
                    case 'US-CITICONNECT-WL-XML-NI':
                        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                        {
                            case #ACH_WL:
                            case #WIRE_WL:
                            case #CHK_WL:
                            case #SEPA_WL:
                            case #PPW_WL:               //SKS#VSTS:14271
                            case #PPW_PH_WL:            //SKS#DevOps:14542
                                length = 16;
                                break;
                            default:
                                length = 34;
                                break;
                        }
                        break;
                }
                //              Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.BankBankAcct, length);
            }

            else if(mSKS_EFT_FileDetail.BankBankIBAN)
            {
                //              IBAN
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN', mSKS_EFT_FileDetail.BankBankIBAN);
            }
        
            //          Ccy
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcct, 'Ccy', mSKS_EFT_FileDetail.CurrencyCode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAgtWL</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAgtWL(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.21: DbtrAgt
        //          FinInstnId
        //              BIC
        //              ClrSysMmbId
        //                  MmbId
        //              PstlAdr
        //                  Ctry
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeOthr;
        str value;
    
        value = SKS_EFT_Format::getCodelookupvalue('InitgPtyId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);
        //      2.21: DbtrAgt
        nodeDbtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAgt'));
    
        //          FinInstnId
        nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));

        if(mSKS_EFT_FileDetail.BankBankSwiftNo)
        {
            //              BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.BankBankSwiftNo, 11, false);
        }
        if(value)
        {
            //          Othr
            nodeOthr = nodeFinInstnId.appendChild(xmlDoc.createElement('Othr'));

            //              Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', this.CharacterReplacement(value), 9);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgtWL</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgtWL(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                  Nm
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
        XmlElement nodeBrnchId;
        int len;
        str swift, rtg;
        boolean benBankName = false;
        boolean pstlAdr = true;
        boolean benBankBranch = false;

        swift = mSKS_EFT_FileDetail.DepSwiftNo;
        rtg   = mSKS_EFT_FileDetail.DepBankTransit;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            
            case 'US-CITICONNECT-WL-XML-SN':
            case 'US-CITICONNECT-WL-XML-TG':
            case 'US-CITICONNECT-WL-XML-TW':
            case 'US-CITICONNECT-WL-XML-UG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-AE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-AL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-AZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-BG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;

                    case #SEPA_WL:
                        rtg   = '';
                        len = 11;
                        pstlAdr = false;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-BR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-BY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-CD':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-CI':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-CM':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-CR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-DO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-DZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-GH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        swift = '';
                        benBankName = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-GT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-IN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        swift = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-ID':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankTransit)
                        {
                            swift = '';
                            len = 7;
                        }

                        benBankName = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-IL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(rtg)
                        {
                            swift = '';
                            len = 5;
                        }
                        else
                        {
                            rtg = mSKS_EFT_FileDetail_BenBank.BenBankBranch;
                            len = 5;
                            swift = '';
                        }
                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-IS':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA_WL:
                        rtg = '';
                        len = 11;
                        pstlAdr = false;
                        break;
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-JO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-KE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-KR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-KZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-LK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-MZ':
            case 'US-CITICONNECT-WL-XML-PK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-ML':
            case 'US-CITICONNECT-WL-XML-KM':    //SKS#DevOps:16946
            case 'US-CITICONNECT-WL-XML-GM':        //SKS#DevOps:17970
            case 'US-CITICONNECT-WL-XML-MG':    //SKS#DevOps:16946
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        benBankBranch = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-MY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        benBankBranch = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-MK':            //SKS#DevOps:16428
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        benBankBranch = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-PE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        swift = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-SG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        swift = '';
                        len = 11;
                        benBankName = true;
                        break;
                    case #ACH_WL:
                        swift = '';
                        len = 7;
                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-ZM':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        
                        if(rtg)
                        {
                            rtg = '//ZM' + subStr(mSKS_EFT_FileDetail.DepBankTransit, 1, 6);
                            swift = '';
                        }
                        else if(swift)      //SKS#VSTS:14580
                        {
                            benBankName = true;
                        }
                        pstlAdr = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankTransit)
                        {
                            swift = '';
                            rtg = '//AU' + subStr(mSKS_EFT_FileDetail.DepBankTransit, 1, 6);
                        }
                        benBankName = true;
                        break;
                    case #ACH_WL:
                        if(mSKS_EFT_FileDetail.DepBankTransit)
                        {
                            swift = '';
                            rtg = subStr(mSKS_EFT_FileDetail.DepBankTransit, 1, 3) + '-' +  subStr(mSKS_EFT_FileDetail.DepBankTransit, 4, 3);
                        }
                        benBankName = true;
                        benBankBranch = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                    case #ACH_WL:
                        swift = '';
                        rtg = '//CC' + subStr(mSKS_EFT_FileDetail.DepBankTransit, 1, 9);
                        len = 9;
                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PS')
                        {
                            swift = '';
                            len = 5;
                        }
                        else
                        {
                            if(mSKS_EFT_FileDetail.DepSwiftNo)
                            {
                                rtg = '';
                                len = 11;
                            }
                            else
                            {
                                swift = '';
                                rtg = '//FW' + subStr(mSKS_EFT_FileDetail.DepBankTransit, 1, 9);
                                len = 9;
                            }
                        }

                        benBankName = true;
                        break;
                    case #ACH_WL:
                        swift = '';
                        len = 9;
                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-SE':

                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                    case #SEPA_WL:
                        rtg   = '';
                        pstlAdr = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-TH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        len = 11;
                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-GB':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:

                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GG' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'JE' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IM')
                        {
                            if(swift)
                            {
                                rtg = mSKS_EFT_FileDetail.DepSwiftNo;
                                swift = '';
                            }
                            else
                            {
                                rtg = '';
                                len = 11;
                            }
                        }
                        else if(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId == 'GIB')
                        {
                            if(swift)
                            {
                                rtg = '';
                            }
                        }
                        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GB' &&
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId) == 'GB')
                        {
                            if(mSKS_EFT_FileDetail.DepBankTransit && mSKS_EFT_FileDetail.DepBankAcct)
                            {
                                rtg = '//SC' + mSKS_EFT_FileDetail.DepBankTransit;
                                swift= '';
                            }
                            else if(mSKS_EFT_FileDetail.DepSwiftNo && mSKS_EFT_FileDetail.DepBankIBAN)
                            {
                                rtg = '';
                                len = 11;
                            }
                        }
                        
                        benBankName = true;
                        break;
                    case #ACH_WL:
                        swift = '';
                        len = 6;
                        benBankName = true;
                        break;
                    case #SEPA_WL:
                        rtg = '';
                        len = 11;
                        pstlAdr = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-VN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        swift = '';
                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-RU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'RUB')
                        {
                            swift = '';
                            rtg = 'RU' + subStr(mSKS_EFT_FileDetail.DepBankTransit, 1, 9) +  '.' +subStr(mSKS_EFT_FileDetail_Intermediary.IntBankAcct, 1, 20);
                        }
                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-ZA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        rtg = '';
                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-BD':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        swift = '';
                        len = 9;
                        benBankBranch = true;
                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-LV':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA_WL:
                        rtg   = '';
                        pstlAdr = false;
                        break;
                    case #WIRE_WL:
                        benBankBranch = true;
                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-RW':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA_WL:
                        rtg   = '';
                        pstlAdr = false;
                        break;
                    case #WIRE_WL:
                        benBankName = true;
                        benBankBranch = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AO':
            case 'US-CITICONNECT-WL-XML-AT':
            case 'US-CITICONNECT-WL-XML-BE':
            case 'US-CITICONNECT-WL-XML-BF':
            case 'US-CITICONNECT-WL-XML-BH':
            case 'US-CITICONNECT-WL-XML-BJ':
            case 'US-CITICONNECT-WL-XML-BM':
            case 'US-CITICONNECT-WL-XML-BN':
            case 'US-CITICONNECT-WL-XML-BS':
            case 'US-CITICONNECT-WL-XML-BW':
            case 'US-CITICONNECT-WL-XML-CH':
            case 'US-CITICONNECT-WL-XML-CL':
            case 'US-CITICONNECT-WL-XML-CO':
            case 'US-CITICONNECT-WL-XML-CY':
            case 'US-CITICONNECT-WL-XML-CZ':
            case 'US-CITICONNECT-WL-XML-DE':
            case 'US-CITICONNECT-WL-XML-DK':
            case 'US-CITICONNECT-WL-XML-EE':
            case 'US-CITICONNECT-WL-XML-EG':
            case 'US-CITICONNECT-WL-XML-ES':
            case 'US-CITICONNECT-WL-XML-ET':
            case 'US-CITICONNECT-WL-XML-FI':
            case 'US-CITICONNECT-WL-XML-FR':
            case 'US-CITICONNECT-WL-XML-GA':
            case 'US-CITICONNECT-WL-XML-GE':
            case 'US-CITICONNECT-WL-XML-GR':
            case 'US-CITICONNECT-WL-XML-GW':
            case 'US-CITICONNECT-WL-XML-GY':
            case 'US-CITICONNECT-WL-XML-HK':
            case 'US-CITICONNECT-WL-XML-HN':
            case 'US-CITICONNECT-WL-XML-HR':
            case 'US-CITICONNECT-WL-XML-HU':
            case 'US-CITICONNECT-WL-XML-IE':
            case 'US-CITICONNECT-WL-XML-IT':
            case 'US-CITICONNECT-WL-XML-JP':
            case 'US-CITICONNECT-WL-XML-KH':
            case 'US-CITICONNECT-WL-XML-KW':
            case 'US-CITICONNECT-WL-XML-LA':
            case 'US-CITICONNECT-WL-XML-LB':
            case 'US-CITICONNECT-WL-XML-LI':
            case 'US-CITICONNECT-WL-XML-LT':
            case 'US-CITICONNECT-WL-XML-LU':
            case 'US-CITICONNECT-WL-XML-MA':
            case 'US-CITICONNECT-WL-XML-MC':
            case 'US-CITICONNECT-WL-XML-MD':
            case 'US-CITICONNECT-WL-XML-MM':
            case 'US-CITICONNECT-WL-XML-MN':
            case 'US-CITICONNECT-WL-XML-MR':
            case 'US-CITICONNECT-WL-XML-MT':
            case 'US-CITICONNECT-WL-XML-MU':
            case 'US-CITICONNECT-WL-XML-MW':
            case 'US-CITICONNECT-WL-XML-MX':
            case 'US-CITICONNECT-WL-XML-NA':
            case 'US-CITICONNECT-WL-XML-NE':
            case 'US-CITICONNECT-WL-XML-NG':
            case 'US-CITICONNECT-WL-XML-NL':
            case 'US-CITICONNECT-WL-XML-NO':
            case 'US-CITICONNECT-WL-XML-NP':
            case 'US-CITICONNECT-WL-XML-NZ':
            case 'US-CITICONNECT-WL-XML-OM':
            case 'US-CITICONNECT-WL-XML-PG':
            case 'US-CITICONNECT-WL-XML-PH':
            case 'US-CITICONNECT-WL-XML-PL':
            case 'US-CITICONNECT-WL-XML-PT':
            case 'US-CITICONNECT-WL-XML-PY':
            case 'US-CITICONNECT-WL-XML-QA':
            case 'US-CITICONNECT-WL-XML-RO':
            case 'US-CITICONNECT-WL-XML-RS':
            case 'US-CITICONNECT-WL-XML-SA':
            case 'US-CITICONNECT-WL-XML-SC':
            case 'US-CITICONNECT-WL-XML-SI':
            case 'US-CITICONNECT-WL-XML-SK':
            case 'US-CITICONNECT-WL-XML-SZ':
            case 'US-CITICONNECT-WL-XML-TD':
            case 'US-CITICONNECT-WL-XML-TN':
            case 'US-CITICONNECT-WL-XML-TR':
            case 'US-CITICONNECT-WL-XML-TT':
            case 'US-CITICONNECT-WL-XML-TZ':
            case 'US-CITICONNECT-WL-XML-UY':
            case 'US-CITICONNECT-WL-XML-UZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        benBankName = true;
                        break;
                    case #SEPA_WL:
                        rtg   = '';
                        pstlAdr = false;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(swift)
                        {
                            rtg = '';
                        }

                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-MO':                //SKS_VSTS_13720
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(swift)
                        {
                            rtg = '';
                        }

                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-NI':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(swift)
                        {
                            rtg = '';
                        }

                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-HT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(swift)
                        {
                            rtg = '';
                        }

                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-FJ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(swift)
                        {
                            rtg = '';
                        }

                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-BO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(swift)
                        {
                            rtg = '';
                        }

                        benBankName = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-BA':        //SKS#DevOps:16138
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(swift)
                        {
                            rtg = '';
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-BB':        //SKS#DevOps:16237
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(swift)
                        {
                            rtg = '';
                        }
                        benBankName = true;
                        len = 35;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-PPW-XML':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PPW_WL:
                    case #PPW_PH_WL:                //SKS#DevOps:14542
                        rtg = '';
                        swift = '';
                }
                break;
            default:
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA_WL:
                        rtg   = '';
                        pstlAdr = false;
                        break;
                    case #WIRE_WL:
                        benBankBranch = true;
                        break;
                }
                break;
        }


        if((swift || rtg ) && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CHK_WL)
        {
            //          2.77: CdtrAgt
            nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));

            //              FinInstnId
            nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));

            if(rtg)
            {
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', rtg, len, false);
            }

            else if(swift)
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', swift, 0, false);
            }
            
            if(benBankName && mSKS_EFT_FileDetail_BenBank.BenBankName)
            {
                //                  Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankName), 35, false);
            }
            
            if(pstlAdr)
            {
                //                  PstlAdr
                this.node_CdtTrfTxInf_CdtrAgt_PstlAdr(nodeFinInstnId);
            }

            if(mSKS_EFT_FileDetail_BenBank.BenBankBranch  &&  benBankBranch)
            {
                //              BrnchId
                nodeBrnchId = nodeCdtrAgt.appendChild(xmlDoc.createElement('BrnchId'));

                //              Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBrnchId, 'Id', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankBranch));
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PPW_WL &&         //SKS#VSTS:14271
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PPW_PH_WL)        //SKS#DevOps:14542
        {
            //          2.77: CdtrAgt
            nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));

            //              FinInstnId
            nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));

            //                  PstlAdr
            this.node_CdtTrfTxInf_CdtrAgt_PstlAdr(nodeFinInstnId);
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt_PstlAdr(XmlElement _nodeCdtrAgt)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.77: CdtrAgent
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
        SKS_EB_Address          addressBldgNb, addressStrtNm, addressPstCd, addressCtrySubDvsn;
        container               address;

        if(strScan(mSKS_EFT_FileDetail_BenBank.BenBankAddr, ';', 1, strLen(mSKS_EFT_FileDetail_BenBank.BenBankAddr)))     //SKS_FDD_10590
        {
            address = this.addressSplit(mSKS_EFT_FileDetail_BenBank.BenBankAddr);      //SKS_FDD_10590
            addressStrtNm = conpeek(address,1);
            addressBldgNb = conpeek(address,2);
            addressPstCd  = conpeek(address,3);
            addressCtrySubDvsn  = conpeek(address,4);
        }
        else
        {
            addressStrtNm = mSKS_EFT_FileDetail_BenBank.BenBankAddr;       //SKS_FDD_10590
        }
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-WL-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_WL:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '', mSKS_EFT_FileDetail_BenBank.BenBankCity, 0, '', '', true);      //SKS_FDD_10590
                        break;
                    case #WIRE_WL:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '', mSKS_EFT_FileDetail_BenBank.BenBankCity, 0, '', '', true);      //SKS_FDD_10590
                        break;
                    case #CHK_WL:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, '', '', '');       //SKS_FDD_10590
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_WL:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '', mSKS_EFT_FileDetail_BenBank.BenBankCity, 0, '', '', true);      //SKS_FDD_10590
                        break;
                    case #WIRE_WL:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, addressStrtNm, addressPstCd, mSKS_EFT_FileDetail_BenBank.BenBankCity, 0, addressBldgNb, '', true);        //SKS_FDD_10590
                        break;
                    case #CHK_WL:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, '', '', '');       //SKS_FDD_10590
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AT':
            case 'US-CITICONNECT-WL-XML-BE':
            case 'US-CITICONNECT-WL-XML-CY':
            case 'US-CITICONNECT-WL-XML-CZ':
            case 'US-CITICONNECT-WL-XML-DE':
            case 'US-CITICONNECT-WL-XML-EE':
            case 'US-CITICONNECT-WL-XML-ES':
            case 'US-CITICONNECT-WL-XML-FI':
            case 'US-CITICONNECT-WL-XML-FR':
            case 'US-CITICONNECT-WL-XML-GR':
            case 'US-CITICONNECT-WL-XML-HK':
            case 'US-CITICONNECT-WL-XML-IE':
            case 'US-CITICONNECT-WL-XML-IT':
            case 'US-CITICONNECT-WL-XML-IN':
            case 'US-CITICONNECT-WL-XML-MT':
            case 'US-CITICONNECT-WL-XML-PT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, '', '', '');       //SKS_FDD_10590
                        break;
                    case #WIRE_WL:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '', mSKS_EFT_FileDetail_BenBank.BenBankCity, 0, '', '', true);      //SKS_FDD_10590
                        break;

                }
                break;
            case 'US-CITICONNECT-WL-XML-MX':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK_WL:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, '', '', '');       //SKS_FDD_10590
                        break;
                    case #WIRE_WL:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '', ''); // Zip and City not used at this time       //SKS_FDD_10590
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-IL':
            case 'US-CITICONNECT-WL-XML-KE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, addressStrtNm, addressPstCd, mSKS_EFT_FileDetail_BenBank.BenBankCity, 0, addressBldgNb, addressCtrySubDvsn, true);        //SKS_FDD_10590
                        break;
                    case #CHK_WL:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, '', '', '');       //SKS_FDD_10590
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-CN':
            case 'US-CITICONNECT-WL-XML-LA':
            case 'US-CITICONNECT-WL-XML-MN':
            case 'US-CITICONNECT-WL-XML-MR':
            case 'US-CITICONNECT-WL-XML-RW':
            case 'US-CITICONNECT-WL-XML-SC':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        this.node_PstlAdr_StrdUstrd(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, addressStrtNm, addressPstCd, mSKS_EFT_FileDetail_BenBank.BenBankCity, 0, addressBldgNb, addressCtrySubDvsn);        //SKS_FDD_10590
                        break;
                    case #CHK_WL:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, '', '', '');       //SKS_FDD_10590
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-CL':
            case 'US-CITICONNECT-WL-XML-PK':
            case 'US-CITICONNECT-WL-XML-UG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, addressStrtNm, addressPstCd, mSKS_EFT_FileDetail_BenBank.BenBankCity, 0, addressBldgNb, '', true);        //SKS_FDD_10590
                        break;
                    case #CHK_WL:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, '', '', '');       //SKS_FDD_10590
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-SG':
            case 'US-CITICONNECT-WL-XML-GB':
            case 'US-CITICONNECT-WL-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_WL:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '', mSKS_EFT_FileDetail_BenBank.BenBankCity, 0, '', '', true);      //SKS_FDD_10590
                        break;
                    case #WIRE_WL:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '', mSKS_EFT_FileDetail_BenBank.BenBankCity, 0, '', '', true);      //SKS_FDD_10590
                        break;
                    case #CHK_WL:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, '', '', '');       //SKS_FDD_10590
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-CD':
            case 'US-CITICONNECT-WL-XML-ET':
            case 'US-CITICONNECT-WL-XML-GE':
            case 'US-CITICONNECT-WL-XML-KR':
            case 'US-CITICONNECT-WL-XML-LK':
            case 'US-CITICONNECT-WL-XML-MY':
            case 'US-CITICONNECT-WL-XML-MD':
            case 'US-CITICONNECT-WL-XML-MZ':
            case 'US-CITICONNECT-WL-XML-NA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '', ''); // Zip and City not used at this time       //SKS_FDD_10590
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH410:
                        this.node_PstlAdr(_nodeCdtrAgt, strUpr(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId), strUpr(mSKS_EFT_FileDetail_BenBank.BenBankAddr), '', ''); // Zip and City not used at this time       //VSTS#12838

                        break;
                    default:
                        this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '', '');
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-VN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CBFT392:
                        if(mSKS_EFT_FileDetail.DepSwiftNo == '')
                        {
                            this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '', mSKS_EFT_FileDetail_BenBank.BenBankCity, 0, '', '', true);
                        }
                        break;
                    case #DFT391:
                        if(strLen(mSKS_EFT_FileDetail_BenBank.BenBankName + mSKS_EFT_FileDetail_BenBank.BenBankBranch) > 35)       // SKS#DevOps:16681
                        {
                            this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, substr(mSKS_EFT_FileDetail_BenBank.BenBankName + mSKS_EFT_FileDetail_BenBank.BenBankBranch, 36, 35), '', '', 35, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '');      //SKS#DevOps:16681
                        }
                        break;
                }
                break;
            default:
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE_WL)
                {
                    this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '', mSKS_EFT_FileDetail_BenBank.BenBankCity, 0, '', '', true);      //SKS_FDD_10590
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK_WL)
                {
                    this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, '', '', '');
                }
                else
                {
                    this.node_PstlAdr(_nodeCdtrAgt, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '', ''); // Zip and City not used at this time       //SKS_FDD_10590
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcctWL</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcctWL(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  Othr
        //                  Id
        //              Tp/Ptry
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
        XmlElement nodeCdtrAcctIdOthr;
        XmlElement nodeCdtrAcctTp;
        XmlElement nodeSchmeNm;
        boolean printSchmeNm;
        boolean printTp = true;     //SKS#VSTS:14271
        boolean printIbanAcctNum;
        str value, iban, acctNum, schmeNm;
        int length, leadZero, ibanlength;
        
        iban = mSKS_EFT_FileDetail.DepBankIBAN;
        acctNum = mSKS_EFT_FileDetail.DepBankAcct;


        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-WL-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                        }
                        break;
                    case #ACH_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                            length = 9;
                        }
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-CL':
            case 'US-CITICONNECT-WL-XML-CN':
            case 'US-CITICONNECT-WL-XML-CO':            
            case 'US-CITICONNECT-WL-XML-GH':
            case 'US-CITICONNECT-WL-XML-KE':
            case 'US-CITICONNECT-WL-XML-KR':
            case 'US-CITICONNECT-WL-XML-MY':
            case 'US-CITICONNECT-WL-XML-TW':
            case 'US-CITICONNECT-WL-XML-VN':
            case 'US-CITICONNECT-WL-XML-TH':
            case 'US-CITICONNECT-WL-XML-UG':
            case 'US-CITICONNECT-WL-XML-BB':            //SKS#DevOps:16237
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                        }
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-PE':
            case 'US-CITICONNECT-WL-XML-DZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                            length = 20;
                        }

                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-MK':            //SKS#DevOps:16428
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:          
                        length      = 34;
                        ibanlength  = 19;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-TN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:          //SKS#DevOps:15473                  
                        length      = 20;
                        ibanlength  = 24;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-LK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                            length = 12;
                        }

                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-ZM':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                            length = 13;
                        }

                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-CD':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                            length = 23;
                        }

                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-CI':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            iban = '';
                            acctNum = mSKS_EFT_FileDetail.DepBankIBAN;
                            length = 24;
                        }

                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-SN':
            case 'US-CITICONNECT-WL-XML-TG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                            length = 24;
                        }

                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-GB':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId == 'GBR')
                        {
                            if(mSKS_EFT_FileDetail.DepBankAcct && mSKS_EFT_FileDetail.DepBankTransit)
                            {
                                iban = '';
                                length = 8;
                            }
                            else if(mSKS_EFT_FileDetail.DepSwiftNo && mSKS_EFT_FileDetail.DepBankIBAN)
                            {
                                acctNum = '';
                                length = 22;
                            }
                        }
                        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GG' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'JE' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IM')
                        {
                            if(mSKS_EFT_FileDetail.DepBankIBAN)
                            {
                                iban = '';
                                acctNum = mSKS_EFT_FileDetail.DepBankIBAN;
                                length = 22;
                            }
                        }
                        else if(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId == 'GIB')
                        {
                            if(mSKS_EFT_FileDetail.DepSwiftNo && mSKS_EFT_FileDetail.DepBankIBAN)
                            {
                                acctNum = '';
                                length = 23;
                            }
                        }

                        break;

                    case #ACH_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                            length = 11;
                        }
                        break;
                    case #SEPA_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            acctNum = '';
                            length = 22;
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-RU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                            length = 20;
                        }
                        else if(mSKS_EFT_FileDetail_Intermediary.IntBankAcct)
                        {
                            iban = '';
                            acctNum = mSKS_EFT_FileDetail_Intermediary.IntBankAcct;

                            length = 20;
                        }
                        break;
                    case #ACH_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                            length = 20;
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AL':
            case 'US-CITICONNECT-WL-XML-AZ':
            case 'US-CITICONNECT-WL-XML-BY':
            case 'US-CITICONNECT-WL-XML-GT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            acctNum = '';
                            length = 28;
                        }
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-BR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            acctNum = '';
                            length = 29;
                        }
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-CR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            acctNum = '';
                            length = 22;
                        }
                        break;
                }
                break;
                
            case 'US-CITICONNECT-WL-XML-AE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            acctNum = '';
                            length = 22;
                        }
                        break;
                }
                break;
                    
            case 'US-CITICONNECT-WL-XML-KZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            acctNum = '';
                            length = 20;
                        }
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-PK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            acctNum = '';
                            length = 24;
                        }
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-SE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            acctNum = '';
                            length = 24;
                        }
                        break;
                    case #ACH_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            length = 16;
                            iban = '';
                        }
                        break;
                    case #SEPA_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            acctNum = '';
                            length = 24;
                        }
                        break;

                }
                break;                
            
            case 'US-CITICONNECT-WL-XML-CM':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            iban = '';
                            acctNum = mSKS_EFT_FileDetail.DepBankIBAN;
                            length = 27;
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            iban = '';
                            acctNum = mSKS_EFT_FileDetail.DepBankIBAN;
                        }
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-JO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            acctNum = '';
                            length = 30;
                        }
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-MZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            iban = '';
                            acctNum = mSKS_EFT_FileDetail.DepBankIBAN;
                            length = 25;
                        }
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_WL:
                        length = 17;
                        break;
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId == 'UKR' && mSKS_EFT_FileDetail.DepBankIBAN)         //SKS#VSTS:14743
                        {
                            acctNum = '';
                        }
                        else if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                            length = 34;
                        }
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-DO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                        }

                        break;
                    case #ACH_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                        }

                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-IN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        break;
                    case #ACH_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                        }

                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-ID':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                            length = 16;
                        }

                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-IL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            acctNum = '';
                            length = 22;
                        }
                        break;
                    case #ACH_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                            length = 9;
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-IS':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA_WL:
                    case #WIRE_WL:                  //SKS#VSTS:14051
                        acctNum = '';
                        length = 26;
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-EG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:                  //SKS#VSTS:14743
                        acctNum = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-ML':            //SKS#DevOps:16946
            case 'US-CITICONNECT-WL-XML-KM':            //SKS#DevOps:16946
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            iban = '';
                            length = 35;
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-GM':            //SKS#DevOps:17970
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            iban = '';
                            length = 18;
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-SG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                        }
                        break;

                    case #ACH_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                            length = 11;
                        }
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-ZA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                        }
                        break;

                    case #ACH_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                            length = 13;
                        }
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-BG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            acctNum = '';
                            length = 22;
                        }
                        break;

                    case #SEPA_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            acctNum = '';
                            length = 22;
                        }
                        break;

                }
                break;
            case 'US-CITICONNECT-WL-XML-MG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            acctNum = '';
                            length = 27;
                        }
                        else
                        {
                            length = 35;
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-AT':
            case 'US-CITICONNECT-WL-XML-BE':
            case 'US-CITICONNECT-WL-XML-CY':
            case 'US-CITICONNECT-WL-XML-CZ':
            case 'US-CITICONNECT-WL-XML-EE':
            case 'US-CITICONNECT-WL-XML-FI':
            case 'US-CITICONNECT-WL-XML-FR':
            case 'US-CITICONNECT-WL-XML-DE':
            case 'US-CITICONNECT-WL-XML-GR':
            case 'US-CITICONNECT-WL-XML-IT':
            case 'US-CITICONNECT-WL-XML-LV':
            case 'US-CITICONNECT-WL-XML-LU':
            case 'US-CITICONNECT-WL-XML-MT':
            case 'US-CITICONNECT-WL-XML-NL':
            case 'US-CITICONNECT-WL-XML-PT':
            case 'US-CITICONNECT-WL-XML-IE':
            case 'US-CITICONNECT-WL-XML-SK':
            case 'US-CITICONNECT-WL-XML-ES':
            case 'US-CITICONNECT-WL-XML-SI':
            case 'US-CITICONNECT-WL-XML-MC':
            case 'US-CITICONNECT-WL-XML-HR':
            case 'US-CITICONNECT-WL-XML-DK':
            case 'US-CITICONNECT-WL-XML-HU':
            case 'US-CITICONNECT-WL-XML-LI':
            case 'US-CITICONNECT-WL-XML-LT':
            case 'US-CITICONNECT-WL-XML-NO':
            case 'US-CITICONNECT-WL-XML-PL':
            case 'US-CITICONNECT-WL-XML-RO':
            case 'US-CITICONNECT-WL-XML-CH':

                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA_WL:
                        if(mSKS_EFT_FileDetail.DepBankIBAN)
                        {
                            acctNum = '';
                            length = 22;
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                            length = 9;
                        }
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-BF':
            case 'US-CITICONNECT-WL-XML-GW':
            case 'US-CITICONNECT-WL-XML-NE':
            case 'US-CITICONNECT-WL-XML-BD':
            case 'US-CITICONNECT-WL-XML-BJ':
            case 'US-CITICONNECT-WL-XML-BW':
            case 'US-CITICONNECT-WL-XML-BN':
            case 'US-CITICONNECT-WL-XML-GY':
            case 'US-CITICONNECT-WL-XML-MX':
            case 'US-CITICONNECT-WL-XML-NZ':
            case 'US-CITICONNECT-WL-XML-NG':
            case 'US-CITICONNECT-WL-XML-OM':
            case 'US-CITICONNECT-WL-XML-PG':
            case 'US-CITICONNECT-WL-XML-PH':
            case 'US-CITICONNECT-WL-XML-TZ':
            case 'US-CITICONNECT-WL-XML-MW':
            case 'US-CITICONNECT-WL-XML-RW':
            case 'US-CITICONNECT-WL-XML-TT':
            case 'US-CITICONNECT-WL-XML-UY':

                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';

                            switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
                            {
                                case 'US-CITICONNECT-WL-XML-BF':
                                case 'US-CITICONNECT-WL-XML-GW':
                                case 'US-CITICONNECT-WL-XML-NE':
                                    length = 24;
                                    break;
                                case 'US-CITICONNECT-WL-XML-MX':
                                    length = 18;
                                    break;
                                case 'US-CITICONNECT-WL-XML-NG':
                                    length = 10;
                                    break;
                                default:
                                    length = 35;
                                    break;
                            }

                        }
                        break;
                }
                break;

            case 'US-CITICONNECT-WL-XML-AG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        iban = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-JM':            //SKS_VSTS_13720
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        iban = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-MO':            //SKS#DevOps:19378
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        iban = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-NI':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        iban = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-HT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        iban = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-FJ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        iban = '';
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-XML-BO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_WL:
                        if(mSKS_EFT_FileDetail.DepBankAcct)
                        {
                            iban = '';
                        }
                        break;
                }
                break;
            case 'US-CITICONNECT-WL-PPW-XML':           //SKS#VSTS:14271
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PPW_WL:
                        iban = '';
                        acctNum = 'EMAIL';
                        printSchmeNm  = true;
                        schmeNm = 'EMAIL';
                        printTp = false;
                        break;
                    case #PPW_PH_WL:            //SKS#DevOps:14542
                        iban = '';
                        acctNum = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PayPalPhone', mSKS_EFT_FileDetail.RecId));
                        printSchmeNm  = true;
                        schmeNm = 'PHON';
                        printTp = false;
                        break;
                }
                break;
            default:
                if(mSKS_EFT_FileDetail.DepBankAcct)
                {
                    switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
                    {
                        case 'US-CITICONNECT-WL-XML-TD':
                        case 'US-CITICONNECT-WL-XML-GA':
                            length = 23;

                        case 'US-CITICONNECT-WL-XML-MU':
                            length = 9;
                            break;
                        default:
                            length = 35;
                            break;
                    }
                    break;
                }
                break;

        }

        if((iban || acctNum) && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CHK_WL)
        {
            //          2.80: CdtrAcct
            nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
            //              Id
            nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));

            if(printIbanAcctNum)
            {
                //                  IBAN
                nodeCdtrAcctId = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', iban, ibanlength, false);

                if(acctNum)
                {
                    //                  Othr
                    nodeCdtrAcctIdOthr = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));

                    //                      Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctIdOthr, 'Id', acctNum, length);
                }
            }
            else if(iban)
            {
                //                  IBAN
                nodeCdtrAcctId = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', iban);
            }
            else if(acctNum)
            {
                //                  Othr
                nodeCdtrAcctIdOthr = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));

                if(length)
                {
                    //                      Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctIdOthr, 'Id', acctNum, length);
                }
                else
                {
                    //                         Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctIdOthr, 'Id', SKS_PP_StringFormats::strFill(leadZero, acctNum, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
                }

                if(printSchmeNm && schmeNm)            //SKS#VSTS:14271
                {
                    nodeSchmeNm = nodeCdtrAcctIdOthr.appendChild(xmlDoc.createElement('SchmeNm'));
    
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Prtry', schmeNm);

                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctIdOthr, 'Issr', 'PAYPAL');
                }
            }
            
            if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::SavingsAccount)
            {
                value = 'SVGS';
            }
            else
            {
                value = 'CACC';
            }
            
            if((value == 'SVGS' || value == 'CACC') && printTp)
            {
                //              Tp
                nodeCdtrAcctTp = nodeCdtrAcct.appendChild(xmlDoc.createElement('Tp'));

                //                  Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctTp, 'Cd', value);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PstlAdr(XmlElement _node,
                                AddressCountryRegionId _countryId,
                                SKS_EB_Address _address,
                                AddressZipCodeId _postalCode,
                                AddressCity _city,
                                int _length = 35,
                                SKS_EB_Address _address2 = '',
                                AddressCountryRegionName  _state = '',
                                boolean isStructured = false)
    {
        //------------------------------------------------------------------------------------------------------
        //          PstlAdr
        //              Ctry
        //              AdrLine
        //              AdrLine
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePstlAdr;
        LogisticsAddressCountryRegionISOCode countryRegion;
    
        countryRegion = this.getLogisticsAddressCountryISO(_countryId);
    
        if(!isStructured)
        {
            if(countryRegion || _address || _postalCode || _city)
            {
                //      PstlAdr
                nodePstlAdr = _node.appendChild(xmlDoc.createElement('PstlAdr'));
    
                //          Ctry
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', countryRegion, 2, false);
    
                //          AdrLine
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(_address), _length, false);
    
                //          AdrLine
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', strLTrim(_postalCode + ' ' + this.CharacterReplacement(_city)), _length, false);
            }
        }
        else
        {
            //      PstlAdr
            nodePstlAdr = _node.appendChild(xmlDoc.createElement('PstlAdr'));
    
            //          StrtNm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'StrtNm', this.CharacterReplacement(_address), 70, false);
    
            _address2=strRem(strRem(_address2, '\r'), '\n');
            if(_address2 !='')
            {
                //          BldgNb
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'BldgNb', this.CharacterReplacement(_address2), 16, false);
            }

            //          PstCd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'PstCd', _postalCode, 16, false);
    
            //          TwnNm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', this.CharacterReplacement(_city), 35, false);
    
            //          CtrySubDvsn
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'CtrySubDvsn', this.CharacterReplacement(_state), 35, false);
    
            //          Ctry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', countryRegion, 2, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_PmtId</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_PmtId(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.28: PmtId
        //              2.29: InstrId
        //              2.30: EndToEndId
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodePmtId;
        boolean printInstrId = false;
        int length = 35;
    
        //          2.28: PmtId
        nodePmtId = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('PmtId'));
        

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-WL-XML-AE':
            case 'US-CITICONNECT-WL-XML-AL':
            case 'US-CITICONNECT-WL-XML-AO':
            case 'US-CITICONNECT-WL-XML-AT':
            case 'US-CITICONNECT-WL-XML-AU':
            case 'US-CITICONNECT-WL-XML-AZ':
            case 'US-CITICONNECT-WL-XML-BD':
            case 'US-CITICONNECT-WL-XML-BE':
            case 'US-CITICONNECT-WL-XML-BF':
            case 'US-CITICONNECT-WL-XML-BG':
            case 'US-CITICONNECT-WL-XML-BH':
            case 'US-CITICONNECT-WL-XML-BJ':
            case 'US-CITICONNECT-WL-XML-BM':
            case 'US-CITICONNECT-WL-XML-BN':
            case 'US-CITICONNECT-WL-XML-BR':
            case 'US-CITICONNECT-WL-XML-BS':
            case 'US-CITICONNECT-WL-XML-BW':
            case 'US-CITICONNECT-WL-XML-BY':
            case 'US-CITICONNECT-WL-XML-CA':
            case 'US-CITICONNECT-WL-XML-CD':
            case 'US-CITICONNECT-WL-XML-CH':
            case 'US-CITICONNECT-WL-XML-CI':
            case 'US-CITICONNECT-WL-XML-CL':
            case 'US-CITICONNECT-WL-XML-CM':
            case 'US-CITICONNECT-WL-XML-CN':
            case 'US-CITICONNECT-WL-XML-CO':
            case 'US-CITICONNECT-WL-XML-CR':
            case 'US-CITICONNECT-WL-XML-CY':
            case 'US-CITICONNECT-WL-XML-CZ':
            case 'US-CITICONNECT-WL-XML-DE':
            case 'US-CITICONNECT-WL-XML-DK':
            case 'US-CITICONNECT-WL-XML-DO':
            case 'US-CITICONNECT-WL-XML-DZ':
            case 'US-CITICONNECT-WL-XML-EE':
            case 'US-CITICONNECT-WL-XML-EG':
            case 'US-CITICONNECT-WL-XML-ES':
            case 'US-CITICONNECT-WL-XML-ET':
            case 'US-CITICONNECT-WL-XML-FI':
            case 'US-CITICONNECT-WL-XML-FR':
            case 'US-CITICONNECT-WL-XML-GA':
            case 'US-CITICONNECT-WL-XML-GB':
            case 'US-CITICONNECT-WL-XML-GE':
            case 'US-CITICONNECT-WL-XML-GH':
            case 'US-CITICONNECT-WL-XML-GR':
            case 'US-CITICONNECT-WL-XML-GT':
            case 'US-CITICONNECT-WL-XML-GW':
            case 'US-CITICONNECT-WL-XML-GY':
            case 'US-CITICONNECT-WL-XML-HK':
            case 'US-CITICONNECT-WL-XML-HN':
            case 'US-CITICONNECT-WL-XML-HR':
            case 'US-CITICONNECT-WL-XML-HU':
            case 'US-CITICONNECT-WL-XML-ID':
            case 'US-CITICONNECT-WL-XML-IE':
            case 'US-CITICONNECT-WL-XML-IL':
            case 'US-CITICONNECT-WL-XML-IN':
            case 'US-CITICONNECT-WL-XML-IT':
            case 'US-CITICONNECT-WL-XML-JO':
            case 'US-CITICONNECT-WL-XML-JP':
            case 'US-CITICONNECT-WL-XML-KE':
            case 'US-CITICONNECT-WL-XML-KH':
            case 'US-CITICONNECT-WL-XML-KR':
            case 'US-CITICONNECT-WL-XML-KW':
            case 'US-CITICONNECT-WL-XML-KZ':
            case 'US-CITICONNECT-WL-XML-LA':
            case 'US-CITICONNECT-WL-XML-LB':
            case 'US-CITICONNECT-WL-XML-LI':
            case 'US-CITICONNECT-WL-XML-LK':
            case 'US-CITICONNECT-WL-XML-LT':
            case 'US-CITICONNECT-WL-XML-LU':
            case 'US-CITICONNECT-WL-XML-LV':
            case 'US-CITICONNECT-WL-XML-MA':
            case 'US-CITICONNECT-WL-XML-MC':
            case 'US-CITICONNECT-WL-XML-MD':
            case 'US-CITICONNECT-WL-XML-MM':
            case 'US-CITICONNECT-WL-XML-MN':
            case 'US-CITICONNECT-WL-XML-MR':
            case 'US-CITICONNECT-WL-XML-MT':
            case 'US-CITICONNECT-WL-XML-MU':
            case 'US-CITICONNECT-WL-XML-MW':
            case 'US-CITICONNECT-WL-XML-MX':
            case 'US-CITICONNECT-WL-XML-MY':
            case 'US-CITICONNECT-WL-XML-MZ':
            case 'US-CITICONNECT-WL-XML-NA':
            case 'US-CITICONNECT-WL-XML-NE':
            case 'US-CITICONNECT-WL-XML-NG':
            case 'US-CITICONNECT-WL-XML-NL':
            case 'US-CITICONNECT-WL-XML-NO':
            case 'US-CITICONNECT-WL-XML-NP':
            case 'US-CITICONNECT-WL-XML-NZ':
            case 'US-CITICONNECT-WL-XML-OM':
            case 'US-CITICONNECT-WL-XML-PE':
            case 'US-CITICONNECT-WL-XML-PG':
            case 'US-CITICONNECT-WL-XML-PH':
            case 'US-CITICONNECT-WL-XML-PK':
            case 'US-CITICONNECT-WL-XML-PL':
            case 'US-CITICONNECT-WL-XML-PT':
            case 'US-CITICONNECT-WL-XML-PY':
            case 'US-CITICONNECT-WL-XML-QA':
            case 'US-CITICONNECT-WL-XML-RO':
            case 'US-CITICONNECT-WL-XML-RS':
            case 'US-CITICONNECT-WL-XML-RU':
            case 'US-CITICONNECT-WL-XML-RW':
            case 'US-CITICONNECT-WL-XML-SA':
            case 'US-CITICONNECT-WL-XML-SC':
            case 'US-CITICONNECT-WL-XML-SE':
            case 'US-CITICONNECT-WL-XML-SG':
            case 'US-CITICONNECT-WL-XML-SI':
            case 'US-CITICONNECT-WL-XML-SK':
            case 'US-CITICONNECT-WL-XML-SN':
            case 'US-CITICONNECT-WL-XML-SZ':
            case 'US-CITICONNECT-WL-XML-TD':
            case 'US-CITICONNECT-WL-XML-TG':
            case 'US-CITICONNECT-WL-XML-TH':
            case 'US-CITICONNECT-WL-XML-TN':
            case 'US-CITICONNECT-WL-XML-TR':
            case 'US-CITICONNECT-WL-XML-TT':
            case 'US-CITICONNECT-WL-XML-TW':
            case 'US-CITICONNECT-WL-XML-TZ':
            case 'US-CITICONNECT-WL-XML-UG':
            case 'US-CITICONNECT-WL-XML-US':
            case 'US-CITICONNECT-WL-XML-UY':
            case 'US-CITICONNECT-WL-XML-UZ':
            case 'US-CITICONNECT-WL-XML-VN':
            case 'US-CITICONNECT-WL-XML-ZA':
            case 'US-CITICONNECT-WL-XML-ZM':
            case 'US-CITICONNECT-WL-XML-AG':
            case 'US-CITICONNECT-WL-XML-MO':                //SKS_VSTS_13720
            case 'US-CITICONNECT-WL-XML-HT':
            case 'US-CITICONNECT-WL-XML-FJ':
            case 'US-CITICONNECT-WL-XML-BO':
            case 'US-CITICONNECT-WL-XML-IS':
            case 'US-CITICONNECT-WL-XML-BA':        //SKS#DevOps:16138
            case 'US-CITICONNECT-WL-XML-BB':        //SKS#DevOps:16138
            case 'US-CITICONNECT-WL-XML-ML':
            case 'US-CITICONNECT-WL-XML-KM':    //SKS#DevOps:16946
            case 'US-CITICONNECT-WL-XML-GM':    //SKS#DevOps:17970
            case 'US-CITICONNECT-WL-XML-NI':
            case 'US-CITICONNECT-WL-XML-MG':    //SKS#DevOps:16946
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_WL:
                    case #WIRE_WL:
                    case #SEPA_WL:
                        printInstrId = true;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DFT441:
                        length = 15;
                        break;
                    default:
                        length = 16;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-IL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM555:
                    case #RTGS605:
                    case #CBFT574:
                    case #CBFT392:      //SKS#DevOps:16141
                        length = 16;
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-PY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DFT603:
                        printInstrId = true;
                        break;
                }
                break;
        }
        
        if(printInstrId)
        {
            //              2.29: InstrId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'InstrId', SKS_PP_StringFormats::strRight(mSKS_EFT_FileDetail.PaymentReference, 35));
        }
        //              2.30: EndToEndId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId', SKS_PP_StringFormats::strRight(mSKS_EFT_FileDetail.PaymentReference, length));
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PstlAdr_StrdUstrd</Name>
				<Source><![CDATA[
    protected void node_PstlAdr_StrdUstrd(XmlElement _node,
                                AddressCountryRegionId _countryId,
                                SKS_EB_Address _address,
                                AddressZipCodeId _postalCode,
                                AddressCity _city,
                                int _length = 35,
                                SKS_EB_Address _address2 = '',
                                AddressCountryRegionName  _state = '')
    {
        //------------------------------------------------------------------------------------------------------
        //          PstlAdr
        //              Ctry
        //              AdrLine
        //              AdrLine
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePstlAdr;
        LogisticsAddressCountryRegionISOCode countryRegion;
    
        countryRegion = this.getLogisticsAddressCountryISO(_countryId);
    
        //      PstlAdr
        nodePstlAdr = _node.appendChild(xmlDoc.createElement('PstlAdr'));
    
        //          StrtNm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'StrtNm', this.CharacterReplacement(_address), 70, false);
    
        //          BldgNb
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'BldgNb', this.CharacterReplacement(_address2), 16, false);
    
        //          PstCd
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'PstCd', _postalCode, 16, false);
    
        //          TwnNm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', this.CharacterReplacement(_city), 35, false);
    
        //          Ctry
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', countryRegion, 2, false);

        //          AdrLine
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(_state), 35, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
            join mSKS_EFT_FileDetail_BenBank
            join mSKS_EFT_FileDetail_Intermediary
            join mSKS_EFT_FileDetail_CreditParty
            join msKS_EFT_FileDetail_Instructions
              order by mSKS_EFT_FileDetail.PaymentCompany, //SKS_VSTS_12798
        mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_BenBank.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_Intermediary.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_CreditParty.RefRecId &&
                mSKS_EFT_FileDetail.RecId == msKS_EFT_FileDetail_Instructions.RefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRemittanceAddress</Name>
				<Source><![CDATA[
    void getRemittanceAddress(boolean UseCheckNum)
    {
        EventHandlerResult result = new EventHandlerResult();       //SKS_VSTS_12574
        LedgerJournalTrans      lLedgerJournalTrans;
        LogisticsLocation       lLogisticsLocation;
        LogisticsPostalAddress  lRemittancePostalAddress;
        Array vendAddrArray = new Array(Types::String);
    
        if(UseCheckNum && mSKS_EFT_FileDetail.PaymentLineRecId != 0)            //SKS#DevOps:14706,15451
        {
            select firstonly crosscompany RemittanceLocation from lLedgerJournalTrans
                where lLedgerJournalTrans.Recid == mSKS_EFT_FileDetail.PaymentLineRecId
                join lRemittancePostalAddress
                where lRemittancePostalAddress.Location == lLedgerJournalTrans.RemittanceLocation;
    
            lLogisticsLocation = LogisticsLocation::find(lLedgerJournalTrans.RemittanceLocation);
    
            //Populate Remittance Information
            mRemittanceName = lLogisticsLocation.Description;
    
            vendAddrArray = SKS_PP_50000Bas::StreetToAddressLineArray(lRemittancePostalAddress.Street,2);
    
            mRemittanceAdrLine1 = '';
            mRemittanceAdrLine2 = '';
    
            if(vendAddrArray.exists(1))
            {
                mRemittanceAdrLine1 = vendAddrArray.value(1);
                if (vendAddrArray.exists(2))
                {
                    mRemittanceAdrLine2 = vendAddrArray.value(2);
                }
            }
            mRemittanceCity = this.CharacterReplacement(lRemittancePostalAddress.City);
            mRemittanceState = this.CharacterReplacement(lRemittancePostalAddress.State);
            mRemittanceZipCode = this.CharacterReplacement(lRemittancePostalAddress.ZipCode);
            mRemittanceCountryRegionId = this.getLogisticsAddressCountryISO(lRemittancePostalAddress.CountryRegionId);
            mRemittanceStreet = this.CharacterReplacement(lRemittancePostalAddress.Street);
        }
        else
        {
            //Populate Remittance Information from Vendor eBanking details
            mRemittanceName = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName);
            mRemittanceAdrLine1 = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr);
            mRemittanceAdrLine2 = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr2);
            mRemittanceCity = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneCity);
            mRemittanceState = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneState);
            mRemittanceZipCode = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneZipPostal);
            mRemittanceCountryRegionId = this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId);
        }
        //SKS_VSTS_12574--->
        this.getRemittanceAddress_delegate(mSKS_EFT_FileDetail, result);

        if(result.result())
        {
            mRemittanceName = this.CharacterReplacement(result.result());
        }
        //SKS_VSTS_12574<---
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        CompanyBankAccountId    prevBankAccountId;
        PaymMode                prevPaymMode;
        PaymSpec                prevPaymSpec;
        CurrencyCode            prevCurrency;
        SKS_EB_Date             prevEffectiveDate;
    
        xmlDoc = XmlDocument::newBlank(this.getEncoding());
    
        this.node_MessageRoot();
    
        this.node_GrpHdr();
    
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            //Get getSKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();
    
            if(prevBankAccountId != mSKS_EFT_FileDetail.BankAccountId ||
               prevPaymMode != mSKS_EFT_FileDetail.PaymMode ||
               prevPaymSpec != mSKS_EFT_FileDetail.PaymSpec ||
               prevCurrency != mSKS_EFT_FileDetail.PaymentCurrencyCode ||
               prevEffectiveDate != mSKS_EFT_FileDetail.EffectiveDate)
            {
                this.node_PmtInf();
    
                prevBankAccountId = mSKS_EFT_FileDetail.BankAccountId;
                prevPaymMode = mSKS_EFT_FileDetail.PaymMode;
                prevPaymSpec = mSKS_EFT_FileDetail.PaymSpec;
                prevCurrency = mSKS_EFT_FileDetail.PaymentCurrencyCode;
                prevEffectiveDate = mSKS_EFT_FileDetail.EffectiveDate;
            }
    
            // Get RemittanceAddress
            this.getRemittanceAddress((mSKS_EFT_FileFormatPaymSpec.UseCheckNumber || subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) == 'CHK'));
    
            //Get Addenda information
            this.setAddenda();
    
            //For AP
            this.node_CdtTrfTxInf();
                
            email = '';
            telNo = '';
            bankCodeText = '';
            bankCode = '';

            next mSKS_EFT_FileDetail;
        }
        this.fileWrite(xmlDoc.toString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_InstrForDbtrAgt_delegate</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    delegate void node_CdtTrfTxInf_InstrForDbtrAgt_delegate(XmlElement _nodeCdtTrfTxInf, SKS_EFT_FileDetail _sKS_EFT_FileDetail,SKS_EFT_FileFormatPaymSpec  _sKS_EFT_FileFormatPaymSpec, XmlDocument _xmldoc, EventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_Ustrd_delegate</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    delegate void node_CdtTrfTxInf_RmtInf_Ustrd_delegate(XmlElement _nodeCdtTrfTxInf, SKS_EFT_FileDetail _sKS_EFT_FileDetail,SKS_EFT_FileFormatPaymSpec  _sKS_EFT_FileFormatPaymSpec, SKS_EFT_FileDetail_VendAddress _sKS_EFT_FileDetail_VendAddress, SKS_EFT_FileDetail_BenBank _sKS_EFT_FileDetail_BenBank, SKS_EFT_FileDetail_Intermediary _sKS_EFT_FileDetail_Intermediary, SKS_EFT_FileDetail_CreditParty _sKS_EFT_FileDetail_CreditParty, VendBankAccount _vendBankAccount, str _bankCode,  str _bankCodeText, str _mRemittanceName, SKS_EB_CharacterReplacement _mSKS_EB_CharacterReplacement, XmlDocument _xmldoc, EventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_InstrForCdtrAgt_delegate</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    delegate void node_CdtTrfTxInf_InstrForCdtrAgt_delegate(XmlElement _nodeCdtTrfTxInf, SKS_EFT_FileDetail _sKS_EFT_FileDetail,SKS_EFT_FileFormatPaymSpec  _sKS_EFT_FileFormatPaymSpec, SKS_EFT_FileDetail_BenBank _sKS_EFT_FileDetail_BenBank, SKS_EFT_FileDetail_CreditParty _sKS_EFT_FileDetail_CreditParty, VendBankAccount _vendBankAccount, XmlDocument _xmldoc, EventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr_delegate</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    delegate void node_PmtInf_Cdtr_PstlAdr_delegate(XmlElement _nodeCdtr, SKS_EFT_FileDetail _sKS_EFT_FileDetail,SKS_EFT_FileFormatPaymSpec  _sKS_EFT_FileFormatPaymSpec,  VendBankAccount _vendBankAccount, XmlDocument _xmldoc, EventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTotalTaxAmount</Name>
				<Source><![CDATA[
    private Amount getTotalTaxAmount()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        VendInvoiceJour  vendinvoicejour;
        Amount taxamount;
        
        select InvoiceNumber from invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId;
        
        while(invSKS_EFT_FileDetail)
        {
            if(invSKS_EFT_FileDetail.InvoiceNumber == '')
            {
                // If no invoice number, go to next record
                next invSKS_EFT_FileDetail;
                continue;
            }
            select SumTax from vendinvoicejour where vendinvoicejour.InvoiceId == invSKS_EFT_FileDetail.InvoiceNumber;
            taxamount += vendinvoicejour.SumTax;
            
            next invSKS_EFT_FileDetail;
        }
        return taxamount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_Nm</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty_Nm(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          Nm
        //------------------------------------------------------------------------------------------------------
        Name companyName;
    
        companyName = CompanyInfo::find().Name();

        switch(mSKS_EFT_FileDetail.FormatId)
        {
            case 'US-CITICONNECT-XML-CA':
                switch(mSKS_EFT_FileDetail.TransactionCode)
                {
                    case #ACH410:
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeInitgPty, 'Nm', this.CharacterReplacement(strUpr(companyName)), 70, false);
                        break;
                    default:
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeInitgPty, 'Nm', this.CharacterReplacement(companyName), 70, false);
                        break;
                }
                break;
            case 'US-CITICONNECT-XML-US':
                switch(mSKS_EFT_FileDetail.TransactionCode)
                {
                    //SKS_VSTS_13477--->
                    case #CTX950:
                    case #CDM950:
                    case #CHK950:
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeInitgPty, 'Nm', this.CharacterReplacement(companyName), 16, false);
                        break;
                    //SKS_VSTS_13477<---
                    default:
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeInitgPty, 'Nm', this.CharacterReplacement(companyName), 70, false);
                        break;
                }
                break;
            default:
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeInitgPty, 'Nm', this.CharacterReplacement(companyName), 70, false);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodelookupDescription</Name>
				<Source><![CDATA[
    private str getCodelookupDescription(SKS_EB_CodeId _FormatFieldID, SKS_EFT_FileFormatPaymSpec _SKS_EFT_FileFormatPaymSpec, RefRecId _VendPaymRecId)
    {
        SKS_EFT_FileFormatPaymSpecFields lSKS_EFT_FileFormatPaymSpecFields;
        SKS_EB_CodeLookupValues lSKS_EB_CodeLookupValues;
        SKS_EFT_VendorPaymLookup lSKS_EFT_VendorPaymLookup;
        str ret = '';
    
        select FileFormatPaymSpecRecId, FormatFieldID, RecId, FieldType, FixedValue from lSKS_EFT_FileFormatPaymSpecFields
                                                                                   where lSKS_EFT_FileFormatPaymSpecFields.FileFormatPaymSpecRecId == _SKS_EFT_FileFormatPaymSpec.RecId &&
                                                                                         lSKS_EFT_FileFormatPaymSpecFields.FormatFieldID == _FormatFieldID join CodeLookupValuesRecId, FixedValue, FileFormatPaymSpecFieldsRecId
                                                                                    from lSKS_EFT_VendorPaymLookup
                                                                                   where lSKS_EFT_VendorPaymLookup.FileFormatPaymSpecFieldsRecId == lSKS_EFT_FileFormatPaymSpecFields.RecId
                                                                                      && lSKS_EFT_VendorPaymLookup.VendorPaymRecId == _VendPaymRecId;

        if(lSKS_EFT_FileFormatPaymSpecFields.FieldType == SKS_EFT_CodeFieldType::CodeLookup)
        {
            select DisplayValue, RecId from lSKS_EB_CodeLookupValues where lSKS_EB_CodeLookupValues.RecId == lSKS_EFT_VendorPaymLookup.CodeLookupValuesRecId;
            ret =  lSKS_EB_CodeLookupValues.DisplayValue;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr_Nm_delegate</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Delegate method of Cdtr_Nm
    /// </summary>
    /// <param name = "_sKS_EFT_FileDetail">SKS_EFT_FileDetail</param>
    /// <param name = "_sKS_EFT_FileFormatPaymSpec">SKS_EFT_FileFormatPaymSpec</param>
    /// <param name = "_result">true</param>
    delegate void node_CdtTrfTxInf_Cdtr_Nm_delegate(SKS_EFT_FileDetail _sKS_EFT_FileDetail,SKS_EFT_FileFormatPaymSpec  _sKS_EFT_FileFormatPaymSpec,EventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_Strd_delegate</Name>
				<Source><![CDATA[
    /// <summary>
    /// RmtInf_Strd_delegate
    /// </summary>
    /// <param name = "_nodeCdtTrfTxInf">CdtTrfTxInf</param>
    /// <param name = "_sKS_EFT_FileDetail">SKS_EFT_FileDetail</param>
    /// <param name = "_sKS_EFT_FileFormatPaymSpec">SKS_EFT_FileFormatPaymSpec</param>
    /// <param name = "_mSKS_EB_CharacterReplacement">SKS_EB_CharacterReplacement</param>
    /// <param name = "_xmldoc">Xmldoc</param>
    /// <param name = "_result">true</param>
    delegate void node_CdtTrfTxInf_RmtInf_Strd_delegate(XmlElement _nodeCdtTrfTxInf, SKS_EFT_FileDetail _sKS_EFT_FileDetail,SKS_EFT_FileFormatPaymSpec  _sKS_EFT_FileFormatPaymSpec, SKS_EB_CharacterReplacement _mSKS_EB_CharacterReplacement, XmlDocument _xmldoc, EventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_CdtrAgt_delegate</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_CdtTrfTxInf_RmtInf_CdtrAgt_delegate
    /// </summary>
    /// <param name = "_nodeCdtTrfTxInf">_nodeCdtTrfTxInf</param>
    /// <param name = "_sKS_EFT_FileDetail">_sKS_EFT_FileDetail</param>
    /// <param name = "_sKS_EFT_FileFormatPaymSpec">_sKS_EFT_FileFormatPaymSpec</param>
    /// <param name = "_sKS_EFT_FileDetail_BenBank">_sKS_EFT_FileDetail_BenBank</param>
    /// <param name = "_mSKS_EB_CharacterReplacement">_mSKS_EB_CharacterReplacement</param>
    /// <param name = "_xmldoc">_xmldoc</param>
    /// <param name = "_result">result</param>
    delegate void node_CdtTrfTxInf_RmtInf_CdtrAgt_delegate(XmlElement _nodeCdtTrfTxInf, SKS_EFT_FileDetail _sKS_EFT_FileDetail,SKS_EFT_FileFormatPaymSpec  _sKS_EFT_FileFormatPaymSpec, SKS_EFT_FileDetail_BenBank _sKS_EFT_FileDetail_BenBank,  SKS_EB_CharacterReplacement _mSKS_EB_CharacterReplacement, XmlDocument _xmldoc, EventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_InstrPrty</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_InstrPrty(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.7: InstrPrty
        //------------------------------------------------------------------------------------------------------
    
        boolean printInstrPrty;
        str value;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CITICONNECT-XML-US':
                switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
                {
                    case #ACHCTX:
                        printInstrPrty = true;
                        value = 'NORM';
                        break;
                }
                break;
        }

        if(printInstrPrty)
        {
            //          2.7: InstrPrty
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmftTpInf, 'InstrPrty', value);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>