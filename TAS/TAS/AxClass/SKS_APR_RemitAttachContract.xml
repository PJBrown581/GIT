<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_APR_RemitAttachContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_APR_RemitAttachContract
{
    RecId       recordId;
    AccountNum  vendAccount;
    DataAreaId  paymentCompany; //FDD-10590
    BankAccountID IHB;
    boolean     HideDueDate;
    DataAreaId  accountCompany;
    CompanyBankAccountId bankAccountID;

    //SKS 14816, RemitAttachControllerV2 -->
    boolean isRemitAttachControllerV2;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmSKS_EFTAP_File_RecordId</Name>
				<Source><![CDATA[
    //SKS 14816, RemitAttachControllerV2 <--

    /// <summary>
    /// Gets or sets the value of the datacontract parameter RecordId.
    /// </summary>
    /// <param name="_recordId">
    /// The new value of the datacontract parameter RecordId; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter RecordId
    /// </returns>
    [DataMemberAttribute('RecordId')]
    public RecId parmSKS_EFTAP_File_RecordId(RecId _recordId = recordId)
    {
        recordId = _recordId;
        return recordId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVendAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter RecordId.
    /// </summary>
    /// <param name="_vendAccount">
    /// The new value of the datacontract parameter vendAccount; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter vendAccount
    /// </returns>
    [DataMemberAttribute('VendAccount')]
    public VendAccount parmVendAccount(VendAccount _vendAccount = vendAccount)
    {
        vendAccount = _vendAccount;
        return vendAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIHB</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter In-house bank.
    /// </summary>
    /// <param name="_vendAccount">
    /// The new value of the datacontract parameter In-house bank; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter In-house bank
    /// </returns>
    [DataMemberAttribute('In-house bank')]
    public BankAccountID parmIHB(BankAccountID _IHB = IHB)
    {
        IHB = _IHB;
        return IHB;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymentCompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter paymentCompany.
    /// </summary>
    /// <param name="_paymentCompany">
    /// The new value of the datacontract parameter paymentCompany; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter paymentCompany
    /// </returns>
    /// FDD-10590
    [DataMemberAttribute('DataAreaId')]
    public DataAreaId parmPaymentCompany(DataAreaId  _paymentCompany = paymentCompany)
    {
        paymentCompany = _paymentCompany;
        return paymentCompany;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountCompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter accountCompany.
    /// </summary>
    /// <param name="_accountCompany">
    /// The new value of the datacontract parameter accountCompany; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter accountCompany
    /// </returns>
    [DataMemberAttribute('AccountCompany')]
    public DataAreaId parmAccountCompany(DataAreaId  _accountCompany = accountCompany)
    {
        accountCompany = _accountCompany;
        return accountCompany;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankAccountID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter bankAccountID.
    /// </summary>
    /// <param name="_bankAccountID">
    /// The new value of the datacontract parameter bankAccountID; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter bankAccountID
    /// </returns>
    [DataMemberAttribute('BankAccountID')]
    public DataAreaId parmBankAccountID(CompanyBankAccountId  _bankAccountID = bankAccountID)
    {
        bankAccountID = _bankAccountID;
        return bankAccountID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsRemitAttachControllerV2</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter isRemitAttachControllerV2.
    /// </summary>
    /// <param name="_isRemitAttachControllerV2">
    /// Boolean value to indicate that it is version 2 of RemitAttachController; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter isRemitAttachControllerV2
    /// </returns>
    /// <remarks>
    /// SKS 14816, RemitAttachControllerV2
    /// </remarks>
    [DataMemberAttribute('IsRemitAttachControllerV2')]
    public boolean parmIsRemitAttachControllerV2(boolean _isRemitAttachControllerV2 = isRemitAttachControllerV2)
    {
        isRemitAttachControllerV2 = _isRemitAttachControllerV2;
        return isRemitAttachControllerV2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHideDueDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter HideDueDate.
    /// </summary>
    /// <param name="_isRemitAttachControllerV2">
    /// Boolean value to indicate whether or not to hide the due date column on the report
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter HideDueDate
    /// </returns>
    /// <remarks>
    /// SKS 16746, HideDueDate
    /// </remarks>
    [DataMemberAttribute('HideDueDate')]
    public boolean parmHideDueDate(boolean _HideDueDate = HideDueDate)
    {
        HideDueDate = _HideDueDate;
        return HideDueDate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>