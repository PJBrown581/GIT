<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_MX_HSBC_INT_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_MX_HSBC_INT_CSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_MX_HSBC_INT_CSV extends SKS_EFT_Format
{
    #define.FormatVersion('20220511')
    #define.Separator(',')

    int  mRecCount;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();

            this.rec_Detail();

            next mSKS_EFT_FileDetail;

        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Detail</Name>
				<Source><![CDATA[
    boolean rec_Detail()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        Str bcType;

        //  1       Ordering Account
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(10, mSKS_EFT_FileDetail.BankBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));

        //  2       Reference
        sb.Append(this.wrapField(substr(mSKS_EFT_FileDetail.PaymentReference, 1, 16)));

        //  3       Amount
        sb.Append(this.wrapField(num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0, 2, 1, 0)));

        //  4       Value Date
        sb.Append(this.wrapField(date2str(mSKS_EFT_File.EffectiveDate, 123,DateDay::Digits2 ,DateSeparator::Slash,DateMonth::Digits2,DateSeparator::Slash,DateYear::Digits4,DateFlags::None)));

        //  5       Beneficiary Account
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.DepBankAcct, 1, 34)));

        // 6     Beneficiary Name
        sb.Append(this.wrapField(subStr(mSKS_EFT_VendorPaym.WBeneName,1,35),true));

        //7    Beneficiary Address 1
        sb.Append(this.wrapField(subStr(mSKS_EFT_VendorPaym.WBeneAddr,1,35),true));

        //8    Beneficiary Address 2
        sb.Append(this.wrapField(subStr(mSKS_EFT_VendorPaym.WBeneAddr2,1,35),true));

        //9    Beneficiary Address 3
        sb.Append(this.wrapField(subStr(mSKS_EFT_VendorPaym.WBeneCity,1,15),true));

        //10      Beneficiary Bank Type
        if(mSKS_EFT_FileDetail.DepSwiftNo &&
        (mSKS_EFT_FileDetail.DepBankCodeType == BankCodeType::Code_None ||
        mSKS_EFT_FileDetail.DepBankCodeType == BankCodeType::Code_SC))
        {
            bcType = 'A';
        }
        else if (!mSKS_EFT_FileDetail.DepSwiftNo &&
        (mSKS_EFT_FileDetail.DepBankCodeType == BankCodeType::Code_None ||
        mSKS_EFT_FileDetail.DepBankCodeType == BankCodeType::Code_FW))
        {
            bcType = 'C';
        }
        else if (mSKS_EFT_FileDetail.DepBankCodeType == BankCodeType::Code_CH ||
        mSKS_EFT_FileDetail.DepBankCodeType == BankCodeType::Code_CP)
        {
            bcType = 'D';
        }
        sb.Append(this.wrapField(bcType));

        //11    Beneficiary Bank Code
        if (mSKS_EFT_FileDetail.DepSwiftNo)
        {
            sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepSwiftNo));
        }
        else
        {
            sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankTransit));
        }
        // 12 Intermediary Bank Type
        sb.Append(this.wrapField(''));

        // 13 Intermediary Bank Code
        sb.Append(this.wrapField(''));

        // 14       Ordering Party Account
        sb.Append(this.wrapField(''));

        // 15       Ordering Party Name
        sb.Append(this.wrapField(''));

        // 16   Ordering Party  Address 1
        sb.Append(this.wrapField(''));

        // 17    Ordering Party Address 2
        sb.Append(this.wrapField(''));

        // 18    Ordering Party Address 2
        sb.Append(this.wrapField(''));

        // 19   Ordering party Institution
        sb.Append(this.wrapField(''));

        // 20   Ordering party Institution
        sb.Append(this.wrapField(''));

        // 21   Ordering party Institution
        sb.Append(this.wrapField(''));

        // 22   Ordering party Institution
        sb.Append(this.wrapField(''));

        // 23   Ordering party Institution
        sb.Append(this.wrapField(''));

        // 24   Ordering party Institution
        sb.Append(this.wrapField(''));

        // 25   Ordering party Institution
        sb.Append(this.wrapField(''));

        // 26   Ordering party Institution
        sb.Append(this.wrapField(''));

        // 27   Ordering party Institution
        sb.Append(this.wrapField(''));

        // 28   Purpose of payment
        sb.Append(this.wrapField(SKS_EFT_Format::getValueFromCode('PurPmt',mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId), false, false));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '',  boolean _Quote = false, boolean _addSeparator = true)
    {
        if(_addSeparator)
        {
            if(_Quote && _field != '' || _Quote == true)
            {
                return strReplace(_field, ',', ' ') + #Separator;
            }
            else
            {
                return _field + #Separator;
            }
        }
        else
        {
            if(_Quote && _field != '' || _Quote == true)
            {
                return strReplace(_field, ',', ' ');
            }
            else
            {
                return _field;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>