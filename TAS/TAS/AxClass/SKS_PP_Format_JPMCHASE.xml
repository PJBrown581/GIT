<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_JPMCHASE</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_JPMCHASE Extends SKS_PP_Format
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    //JPMchase
    //Standard Positive Pay
    //Pos 1:       1  Blank
    //Pos 2-12:    11 Bank Account Number - Required
    //Pos 13-15    3  Blank
    //Pos 16-25    10 Check Number  right Justified and Left Zero Filled
    //Pos 26-37    12 Check Amt     right Justified and Left Zero Filled
    //Pos 38-43    6  Blank
    //Pos 44-45    2  Void Indicator:  Code 26 for Void
    //Pos 46-60    15 Additional Info    Using this for 'Vendor Name'
    //Pos 61-68    8  Date of Issue-Format (mmddyyyy)
    //Pos 69-80    12 Blank
    protected str txtDetail()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        int Mult;
        str ItemType;
        Real Amt;
        ;
    
        //Convert negative void numbers to positives
        Mult = 1;
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = '26';
            amt = 0000000000.00;
        }
        else
        {
            amt = mSKS_PP_FileDetail.ChkCuryAmt;
            ItemType = '  ';
        }
    
        sb.Append(SKS_PP_StringFormats::strFill(1,' ',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(11,mSKS_PP_FileDetail.BnkBankAcct,SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(3,' ',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(10,mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(amt,12));
        sb.Append(SKS_PP_StringFormats::strFill(6,' ',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        sb.Append(ItemType);
        sb.Append(SKS_PP_StringFormats::strFill(15,mSKS_PP_FileDetail.vendname, SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(SKS_PP_StringFormats::strFill(12,' ',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>