<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_BOA_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_BOA_CSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_US_BOA_CSV extends SKS_EFT_Format
{
    #define.FormatVersion('20220314')
    #define.CR_CARD('CR-CARD')

    #define.Separator(',')
    #define.DoubleQuote('"')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;

        this.rec_Header();

        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
            {
                this.rec_Detail(invSKS_EFT_FileDetail);
            }
            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Header</Name>
				<Source><![CDATA[
    private boolean rec_Header()
    {
        //---------------------------------------------------------------------------------------------
        //1.BUYER ID
        //2.INSTRUCTION ID
        //3.INSTRUCTION EXPIRATION PERIOD
        //4.ACCOUNT NUMBER
        //5.PAYMENT CURRENCY CODE
        //6.GROSS AMOUNT
        //7.PAYMENT INSTRUCTION DESCRIPTION
        //8.EMAIL NOTES
        //9.SUPPLIER ID
        //10.SUPPLIER NAME
        //11.SUPPLIER ADDRESS LINE 1
        //12.SUPPLIER ADDRESS LINE 2
        //13.SUPPLIER CITY
        //14.SUPPLIER STATE
        //15.SUPPLIER POSTAL CODE
        //16.SUPPLIER COUNTRY CODE
        //17.SUPPLIER PRIMARY EMAIL ADDRESS
        //18.SUPPLIER ALTERNATE EMAIL ADDRESS 1
        //19.SUPPLIER ALTERNATE EMAIL ADDRESS 2
        //20.SUPPLIER ALTERNATE EMAIL ADDRESS 3
        //21.SUPPLIER ALTERNATE EMAIL ADDRESS 4
        //22.SUPPLIER ALTERNATE EMAIL ADDRESS 5
        //23.PAYMENT TYPE
        //24.STP SUPPLIER ID
        //25.INVOICE NUMBER
        //26.INVOICE AMOUNT
        //27.INVOICE DATE
        //28.PURCHASE ORDER NUMBER
        //29.PURCHASE ORDER DATE
        //30.INVOICE DESCRIPTION
        //31.REFERENCE FIELD 1
        //32.REFERENCE FIELD 2
        //33.REFERENCE FIELD 3
        //34.REFERENCE FIELD 4
        //35.REFERENCE FIELD 5
        //-------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        //1.BUYER ID
        sb.Append(this.wrapField('BUYER ID'));

        //2.INSTRUCTION ID
        sb.Append(this.wrapField('INSTRUCTION ID'));

        //3.INSTRUCTION EXPIRATION PERIOD
        sb.Append(this.wrapField('INSTRUCTION EXPIRATION PERIOD'));

        //4.ACCOUNT NUMBER
        sb.Append(this.wrapField('ACCOUNT NUMBER'));

        //5.PAYMENT CURRENCY CODE
        sb.Append(this.wrapField('PAYMENT CURRENCY CODE'));

        //6.GROSS AMOUNT
        sb.Append(this.wrapField('GROSS AMOUNT'));

        //7.PAYMENT INSTRUCTION DESCRIPTION
        sb.Append(this.wrapField('PAYMENT INSTRUCTION DESCRIPTION'));

        //8.EMAIL NOTES
        sb.Append(this.wrapField('EMAIL NOTES'));

        //9.SUPPLIER ID
        sb.Append(this.wrapField('SUPPLIER ID'));

        //10.SUPPLIER NAME
        sb.Append(this.wrapField('SUPPLIER NAME'));

        //11.SUPPLIER ADDRESS LINE 1
        sb.Append(this.wrapField('SUPPLIER ADDRESS LINE 1'));

        //12.SUPPLIER ADDRESS LINE 2
        sb.Append(this.wrapField('SUPPLIER ADDRESS LINE 2'));

        //13.SUPPLIER CITY
        sb.Append(this.wrapField('SUPPLIER CITY'));

        //14.SUPPLIER STATE
        sb.Append(this.wrapField('SUPPLIER STATE'));

        //15.SUPPLIER POSTAL CODE
        sb.Append(this.wrapField('SUPPLIER POSTAL CODE'));

        //16.SUPPLIER COUNTRY CODE
        sb.Append(this.wrapField('SUPPLIER COUNTRY CODE'));

        //17.SUPPLIER PRIMARY EMAIL ADDRESS
        sb.Append(this.wrapField('SUPPLIER PRIMARY EMAIL ADDRESS'));

        //18.SUPPLIER ALTERNATE EMAIL ADDRESS 1
        sb.Append(this.wrapField('SUPPLIER ALTERNATE EMAIL ADDRESS 1'));

        //19.SUPPLIER ALTERNATE EMAIL ADDRESS 2
        sb.Append(this.wrapField('SUPPLIER ALTERNATE EMAIL ADDRESS 2'));

        //20.SUPPLIER ALTERNATE EMAIL ADDRESS 3
        sb.Append(this.wrapField('SUPPLIER ALTERNATE EMAIL ADDRESS 3'));

        //21.SUPPLIER ALTERNATE EMAIL ADDRESS 4
        sb.Append(this.wrapField('SUPPLIER ALTERNATE EMAIL ADDRESS 4'));

        //22.SUPPLIER ALTERNATE EMAIL ADDRESS 5
        sb.Append(this.wrapField('SUPPLIER ALTERNATE EMAIL ADDRESS 5'));

        //23.PAYMENT TYPE
        sb.Append(this.wrapField('PAYMENT TYPE'));

        //24.STP SUPPLIER ID
        sb.Append(this.wrapField('STP SUPPLIER ID'));

        //25.INVOICE NUMBER
        sb.Append(this.wrapField('INVOICE NUMBER'));

        //26.INVOICE AMOUNT
        sb.Append(this.wrapField('INVOICE AMOUNT'));

        //27.INVOICE DATE
        sb.Append(this.wrapField('INVOICE DATE'));

        //28.PURCHASE ORDER NUMBER
        sb.Append(this.wrapField('PURCHASE ORDER NUMBER'));

        //29.PURCHASE ORDER DATE
        sb.Append(this.wrapField('PURCHASE ORDER DATE'));

        //30.INVOICE DESCRIPTION
        sb.Append(this.wrapField('INVOICE DESCRIPTION'));

        //31.REFERENCE FIELD 1
        sb.Append(this.wrapField('REFERENCE FIELD 1'));

        //32.REFERENCE FIELD 2
        sb.Append(this.wrapField('REFERENCE FIELD 2'));

        //33.REFERENCE FIELD 3
        sb.Append(this.wrapField('REFERENCE FIELD 3'));

        //34.REFERENCE FIELD 4
        sb.Append(this.wrapField('REFERENCE FIELD 4'));

        //35.REFERENCE FIELD 5
        sb.Append(this.wrapField('REFERENCE FIELD 5', false));
        
        this.fileWrite(sb.ToString());
        
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Detail</Name>
				<Source><![CDATA[
    private boolean rec_Detail(SKS_EFT_FileDetail tmpSKS_EFT_FileDetail)
    {
        //---------------------------------------------------------------------------------------------
        //1.BUYER ID
        //2.INSTRUCTION ID
        //3.INSTRUCTION EXPIRATION PERIOD
        //4.ACCOUNT NUMBER
        //5.PAYMENT CURRENCY CODE
        //6.GROSS AMOUNT
        //7.PAYMENT INSTRUCTION DESCRIPTION
        //8.EMAIL NOTES
        //9.SUPPLIER ID
        //10.SUPPLIER NAME
        //11.SUPPLIER ADDRESS LINE 1
        //12.SUPPLIER ADDRESS LINE 2
        //13.SUPPLIER CITY
        //14.SUPPLIER STATE
        //15.SUPPLIER POSTAL CODE
        //16.SUPPLIER COUNTRY CODE
        //17.SUPPLIER PRIMARY EMAIL ADDRESS
        //18.SUPPLIER ALTERNATE EMAIL ADDRESS 1
        //19.SUPPLIER ALTERNATE EMAIL ADDRESS 2
        //20.SUPPLIER ALTERNATE EMAIL ADDRESS 3
        //21.SUPPLIER ALTERNATE EMAIL ADDRESS 4
        //22.SUPPLIER ALTERNATE EMAIL ADDRESS 5
        //23.PAYMENT TYPE
        //24.STP SUPPLIER ID
        //25.INVOICE NUMBER
        //26.INVOICE AMOUNT
        //27.INVOICE DATE
        //28.PURCHASE ORDER NUMBER
        //29.PURCHASE ORDER DATE
        //30.INVOICE DESCRIPTION
        //31.REFERENCE FIELD 1
        //32.REFERENCE FIELD 2
        //33.REFERENCE FIELD 3
        //34.REFERENCE FIELD 4
        //35.REFERENCE FIELD 5
        //-------------------------------------------------------------------------------------------------
        str     address, buyerId;

        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        //1     BUYER ID
        buyerId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BuyerId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        sb.Append(this.wrapField(buyerId));

        //2     INSTRUCTION ID
        sb.Append(this.wrapField(SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 9)));
                
        //3.INSTRUCTION EXPIRATION PERIOD
        sb.Append(this.wrapField(''));

        //4.ACCOUNT NUMBER
        sb.Append(this.wrapField(''));

        //5.PAYMENT CURRENCY CODE
        sb.Append(this.wrapField(''));

        //6.GROSS AMOUNT
        sb.Append(this.wrapField(subStr(num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0), 1, 15)));

        //7.PAYMENT INSTRUCTION DESCRIPTION
        sb.Append(this.wrapField(''));

        //8.EMAIL NOTES
        sb.Append(this.wrapField(''));

        //9.SUPPLIER ID
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.AccountNum));

        //10.SUPPLIER NAME
        sb.Append(this.wrapField(this.CharacterReplacement(subStr(mSKS_EFT_FileDetail_VendAddress.BeneName, 1, 60))));

        //11.SUPPLIER ADDRESS LINE 1
        sb.Append(this.wrapField(this.CharacterReplacement(subStr(mSKS_EFT_FileDetail_VendAddress.BeneAddr, 1, 100))));

        //12.SUPPLIER ADDRESS LINE 2
        sb.Append(this.wrapField(this.CharacterReplacement(subStr(mSKS_EFT_FileDetail_VendAddress.BeneAddr2, 1, 100))));

        //13.SUPPLIER CITY
        sb.Append(this.wrapField(this.CharacterReplacement(subStr(mSKS_EFT_FileDetail_VendAddress.BeneCity, 1, 50))));

        //14.SUPPLIER STATE
        sb.Append(this.wrapField(this.CharacterReplacement(subStr(mSKS_EFT_FileDetail_VendAddress.BeneState, 1, 50))));

        //15.SUPPLIER POSTAL CODE
        sb.Append(this.wrapField(this.CharacterReplacement(subStr(mSKS_EFT_FileDetail_VendAddress.BeneZipPostal, 1, 20))));

        //16.SUPPLIER COUNTRY CODE
        sb.Append(this.wrapField(this.CharacterReplacement(LogisticsAddressCountryRegion::findByISOCode(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId).CountryRegionId)));

        //17.SUPPLIER PRIMARY EMAIL ADDRESS
        address = this.CharacterReplacement(this.getEmail());

        sb.Append(this.wrapField(subStr(address, 1, 100)));

        //18.SUPPLIER ALTERNATE EMAIL ADDRESS 1
        sb.Append(this.wrapField());

        //19.SUPPLIER ALTERNATE EMAIL ADDRESS 2
        sb.Append(this.wrapField());

        //20.SUPPLIER ALTERNATE EMAIL ADDRESS 3
        sb.Append(this.wrapField());

        //21.SUPPLIER ALTERNATE EMAIL ADDRESS 4
        sb.Append(this.wrapField());

        //22.SUPPLIER ALTERNATE EMAIL ADDRESS 5
        sb.Append(this.wrapField());

        //23.PAYMENT TYPE
        sb.Append(this.wrapField());

        //24.STP SUPPLIER ID
        sb.Append(this.wrapField());

        //25.INVOICE NUMBER
        sb.Append(this.wrapField(tmpSKS_EFT_FileDetail.InvoiceNumber));

        //26.INVOICE AMOUNT
        sb.Append(this.wrapField(num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0)));

        //27.INVOICE DATE
        sb.Append(this.wrapField(SKS_PP_StringFormats::strDateMMDDYYYY(tmpSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Slash)));

        //28.PURCHASE ORDER NUMBER
        sb.Append(this.wrapField());

        //29.PURCHASE ORDER DATE
        sb.Append(this.wrapField());

        //30.INVOICE DESCRIPTION
        sb.Append(this.wrapField());

        //31.REFERENCE FIELD 1
        sb.Append(this.wrapField());

        //32.REFERENCE FIELD 2
        sb.Append(this.wrapField());

        //33.REFERENCE FIELD 3
        sb.Append(this.wrapField());

        //34.REFERENCE FIELD 4
        sb.Append(this.wrapField());

        //35.REFERENCE FIELD 5
        sb.Append(this.wrapField('',false));
        
        this.fileWrite(sb.ToString());
        
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '',  boolean _addSeparator = true)
    {
        if(_addSeparator)
        {
            if(_field != '' && strContains(_field, ','))
            {
                return #DoubleQuote + _field + #DoubleQuote + #Separator;
            }
            else
            {
                return _field + #Separator;
            }
        }
        else
        {
            return _field;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
            join mSKS_EFT_FileDetail_BenBank
            join mSKS_EFT_FileDetail_Intermediary
              order by mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_BenBank.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_Intermediary.RefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEmail</Name>
				<Source><![CDATA[
    public str getEmail()
    {
        str address;

        if(mSKS_EFT_FileDetail_VendAddress.Locator)
        {
            address = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.Locator);
        }

        return address;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>