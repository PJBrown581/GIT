<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_VendTableForm_EventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// VendTable form event handler
/// </summary>
class SKS_VendTableForm_EventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>CustTable_OnWritten</Name>
				<Source><![CDATA[
    /// <summary>
    /// FDD 16716 - Updating Bank account on vendor form
    /// </summary>
    /// <param name="sender">sender</param>
    /// <param name="e">eventargs</param>
    [FormDataSourceEventHandler(formDataSourceStr(VendTable, VendTable), FormDataSourceEventType::Written),SuppressBPWarning('BPParameterNotUsed', 'Parameter e required in signature')]
    public static void CustTable_OnWritten(FormDataSource sender, FormDataSourceEventArgs e)
    {
        FormRun formRun =   sender.formRun();
        FormDataSource  vendTable_ds   =   formRun.dataSource(FormDataSourcestr(VendTable,VendTable)) as FormDataSource;
        VendTable locVendTable = vendTable_ds.cursor();

        try
        {
            boolean canProceed = SKS_EFT_APCreateBankAccount::CreateBankAccount(locVendTable);

            if(canProceed)
            {
                vendTable_ds.reread();
                vendTable_ds.refresh();

                //// Create vendor eBanking details
                SKS_EFT_VendorPaym eft_vendorPaym  = SKS_EFT_VendorPaym::find(locVendTable.company(),
                                                                                        locVendTable.AccountNum,
                                                                                        locVendTable.PaymMode,
                                                                                        locVendTable.PaymSpec,
                                                                                        locVendTable.BankAccount);

                if (!eft_vendorPaym)
                {
                    SKS_EFT_APCreateBankAccount::createVendorEBankingDetail(locVendTable, locVendTable.DataAreaId);
                    SKS_EFT_APCreateBankAccount::createVendorPaymSpec(locVendTable.AccountNum,
                                                                            locVendTable.DataAreaId,
                                                                            locVendTable.PaymMode,
                                                                            locVendTable.PaymSpec,
                                                                            locVendTable.BankAccount);
                }
            }
        }
        catch(Exception::Error)
        {
            info(infolog().text());
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>