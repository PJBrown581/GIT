<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_BOM_700</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_BOM_700 extends SKS_PP_Format_BankGroup
{
    int mItemCount;
    real mItemSum;
    str  customerID;
    str  VendName;

    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    // Bank of Montreal - Detail Record
    // Pos 01       13       Mandatory-DCS Account number
    // Pos 14       10       Mandatory - Serial Number
    // Pos 24       11       Mandatory - amount  ISSUE transactions only
    // Pos 35       6        Mandatory - Date yymmdd
    // Pos 41       15           additional data
    // Pos 56       1        Mandatory - I - Issue  V- Void  S - Stop  R - Remove Stop 
    // Pos 57      60        Mandatory    Image Zone 1 ->First line on Check Name...100% match on check
    // Pos 117     60            Image Zone 2 -> Address as on check OR rest of name if > 60 chars from zone 1
    // Pos 177     60            Image Zone 3 -> Third line on check 100% match
    // Pos 237     60            Image Zone 4 -> Fourth line on check  100% match
    // Pos 297     60            Image zone 5 -> Fifth line on check 100% match
    // Pos 357    344       Mandatory - Space filled.
    protected str txtDetail()
    {
        str ItemType;
        SKS_PP_Bank bSKS_PP_Bank_1;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        Container company;
        BankChequeTable bankChequeTable;
        CustTable custTable;
        int Mult;
        Mult = 1;
        ;
        if(customerID == '043df5')//DevOps20235
        {
            VendName =  this.getVenderNameFromSKS_PP_FileDetail(msks_PP_FileDetail);
        }
        else
        {
            VendName =  mSKS_PP_FileDetail.VendName;
        }
        mItemCount++;
    
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
            If (mSKS_PP_FileDetail.chkcuryamt < 0)
            {
                Mult = -1;
            }
        }
        else
        {
            ItemType = 'I';
        }
    
        company = [mSKS_PP_FileDetail.ChkCpnyId];
        select crossCompany:company PP01 from bSKS_PP_Bank_1 where bSKS_PP_Bank_1.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;
    
        sb.Append(SKS_PP_StringFormats::strFill(13,bSKS_PP_Bank_1.PP01,SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr,SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));

        sb.Append(SKS_PP_StringFormats::strMoney(mSKS_PP_FileDetail.ChkCuryAmt, 11));       //SKS#DevOps:15248
        mItemSum = mItemSum + mSKS_PP_FileDetail.ChkCuryAmt;
        
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(SKS_PP_StringFormats::strFill(15,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        sb.Append(Itemtype);
        //SKS_VSTS_13841--->
        changeCompany(mSKS_PP_FileDetail.ChkCpnyId)
        {
            select RecipientType from bankChequeTable where bankChequeTable.SKS_PP_FILENBR == mSKS_PP_FileDetail.FileNbr
                && bankChequeTable.ChequeNum == mSKS_PP_FileDetail.ChkRefNbr
                && bankChequeTable.AccountID == mSKS_PP_FileDetail.ChkBankAcct;
        }

        if(bankChequeTable.RecipientType == BankChequeRecipientType::Cust)
        {
            custTable = CustTable::find(mSKS_PP_FileDetail.VendorAccount);

            sb.Append(SKS_PP_StringFormats::strFill(60,strUpr(strLRTrim(custTable.name())),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(60,strUpr(strLRTrim(VendName)),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        }
        //SKS_VSTS_13841<---
        sb.Append(SKS_PP_StringFormats::strFill(60,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(60,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(60,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(60,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(344,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtFormatHeader</Name>
				<Source><![CDATA[
    // Ban of Montreal - Header Record
    
    // Pos 01    4        Mandatory - Record Identifier 'DCSH'
    // Pos 05    3        Mandatory - Constant 'ISS'
    // Pos 8     8        Manadtory - Customer short name
    // Pos 16    13       Mandatory - DCS number
    // Pos 29    6        Mandatory - issue date yymmdd
    // Pos 35    4        Mandatory - Currency
    // Pos 39    10       Mandatory - DCS Customer Id
    // Pos 49   652       Space filled
    protected str txtFormatHeader()
    {
        SKS_PP_Bank bSKS_PP_Bank_1;
        BankAccountTable  BankAccountTable_1;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        Container company;
        ;
    
        mItemCount = 0;
        mItemSum = 0;
    
    
        company = [mSKS_PP_FileDetail.ChkCpnyId];
        select crossCompany:company CurrencyCode from BankAccountTable_1 where BankAccountTable_1.AccountID == mSKS_PP_FileDetail.ChkBankAcct;
        select crossCompany:company PP01,PP02,PP03 from bSKS_PP_Bank_1 where bSKS_PP_Bank_1.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;
    
        sb.Append('DCSH');
        sb.Append('ISS');
        sb.Append(SKS_PP_StringFormats::strFill(8,strUpr(bSKS_PP_Bank_1.PP02),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(13,bSKS_PP_Bank_1.PP01,SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));
        sb.Append(SKS_PP_StringFormats::strFill(4,strUpr(BankAccountTable_1.CurrencyCode),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(10,bSKS_PP_Bank_1.PP03,SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(652, '',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtFormatTrailer</Name>
				<Source><![CDATA[
    // Ban of Montreal - Trailer Record
    
    // Pos 01    4        Mandatory - Record Identifier 'ARST'
    // Pos 05    9        Mandatory - Total number of detail records
    // Pos 14   13        Manadtory - Total Item Amount. Treat each record as though they are credits
    // Pos 27  674        Sapce filled
    protected str txtFormatTrailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();    
        sb.Append('DCST');
        sb.Append(SKS_PP_StringFormats::strFill(9,int2str(mItemCount),SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(mItemSum, 13));
        sb.Append(SKS_PP_StringFormats::strFill(674, '',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVenderNameFromSKS_PP_FileDetail</Name>
				<Source><![CDATA[
    public VendName getVenderNameFromSKS_PP_FileDetail(SKS_PP_FileDetail _sks_PP_FileDetail)
    {
        VendName vendNameReturnValue = "";
        BankChequeTable bankChequeTable;
        VendTable lVendTable;
        
        changeCompany(_sks_PP_FileDetail.ChkCpnyId)
        {
            select firstonly * from bankChequeTable
                where bankChequeTable.AccountID == _sks_PP_FileDetail.ChkBankAcct
                && bankChequeTable.ChequeNum == _sks_PP_FileDetail.ChkRefNbr;
        }

        changeCompany(bankChequeTable.RecipientCompany)
        {
            select Party from lVendTable where lVendTable.accountNum == _sks_PP_FileDetail.VendorAccount;
        }
        
        vendNameReturnValue = lVendTable.name();

        return vendNameReturnValue;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>