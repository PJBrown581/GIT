<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_IHB_ImportInterestRates</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_IHB_ImportInterestRates extends SKS_EB_Batch
{
    SKS_EB_FileHub locSKS_EB_FileHub;
    SKS_PP_Bank sKS_PP_Bank;    
    SKS_IHB_InterestRateFormat  sKS_IHB_InterestRateFormat;
    SKS_IHB_ImportInterestRatesDelimiter sKS_IHB_ImportIntrestRatesDelimiter = new SKS_IHB_ImportInterestRatesDelimiter();
    SKS_IHB_ImportInterestRatesFixedFile SKS_IHB_ImportIntrestRatesFixedFile = new SKS_IHB_ImportInterestRatesFixedFile();
    SKS_IHB_File sKS_IHB_File;
    list ListOfFilesToProcess;
    ListEnumerator locFilesToProcessEnum;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    [SuppressBPWarningAttribute("BPCheckNestedLoopinCode","Necessary to allow the processing of every Communications ID(inner loop) in every In-house bank(outer loop)")]
    public void run()
    {
        Batch bat;
        SKS_EB_CommProcess locSKS_EB_CommProcess;        
        RefRecId locRefRecID;
        bat = this.parmCurrentBatch();
        locRefRecID = bat.RecId;
        SKS_EB_FilePath filePath;
        SKS_EB_FileStorage locSKS_EB_FileStorage;
        SKS_BF_BankIntType locSKS_BF_BankIntType;
        select firstonly StorageOption_IHB from locSKS_EB_FileStorage;
        locSKS_BF_BankIntType = locSKS_EB_FileStorage.StorageOption_IHB == SKS_EB_BankIntegOptWithNoLicense::BankFabricEnumValue ? SKS_BF_BankIntType::BankFabric : SKS_BF_BankIntType::FileHubLocal;
        locSKS_EB_FileHub = SKS_EB_FileHub::construct(locSKS_BF_BankIntType);
        sKS_IHB_File =SKS_IHB_File::construct(locSKS_BF_BankIntType);

        while select crossCompany locSKS_EB_CommProcess where locSKS_EB_CommProcess.BatchJobId == locRefRecID
        {
            while select sKS_PP_Bank
                where sKS_PP_Bank.SKS_IHBInhouseBank == NoYes::Yes
                && ((sKS_PP_Bank.IHB_InterestFilePath != '' && locSKS_BF_BankIntType == SKS_BF_BankIntType::FileHubLocal)|| 
                (sKS_PP_Bank.IHBInterestBankFabricLocation != ''  && locSKS_BF_BankIntType == SKS_BF_BankIntType::BankFabric))
                   && sKS_PP_Bank.IHB_InterestRateFormat != ''
                   && sKS_PP_Bank.IHB_CommId == locSKS_EB_CommProcess.CommID
            {
                //filePath = SKS_EB_BankIntegOptWithNoLicense::BankFabricEnumValue ? sKS_PP_Bank.IHBInterestBankFabricLocation :  sKS_PP_Bank.IHB_InterestFilePath;

                if(locSKS_BF_BankIntType == SKS_BF_BankIntType::BankFabric)
                {
                    filepath = sKS_PP_Bank.IHBInterestBankFabricLocation;
                }
                else
                {
                    filepath = sKS_PP_Bank.IHB_InterestFilePath;
                }

                if(!locSKS_EB_FileHub.runDirectoryExists(filePath))
                {
                    throw error ("@SKS:SKGFilePathNotExists", sKS_PP_Bank.BankAccountId);
                }
                ListOfFilesToProcess = locSKS_EB_FileHub.runDirectoryGetFiles(filePath);
                select firstonly sKS_IHB_InterestRateFormat
                    where sKS_IHB_InterestRateFormat.FormatId == sKS_PP_Bank.IHB_InterestRateFormat;            

                if (sKS_IHB_InterestRateFormat.FileFormatType == SKS_IHB_FileFormatType::Delimited)
                {
                    sKS_IHB_ImportIntrestRatesDelimiter.setSKS_IHB_InterestRateFormat(sKS_IHB_InterestRateFormat);
                    sKS_IHB_ImportIntrestRatesDelimiter.setSKS_PP_Bank(sKS_PP_Bank);
                    sKS_IHB_ImportIntrestRatesDelimiter.setFieldPositions();
                    if(ListOfFilesToProcess)
                    {    
                        if(!locFilesToProcessEnum && ListOfFilesToProcess.elements() > 0)
                        {
                            locFilesToProcessEnum = ListOfFilesToProcess.getEnumerator();
                            while(locFilesToProcessEnum.moveNext())
                            {
                                try
                                {   
                                    ttsbegin;         
                                    sKS_IHB_File.setFilePathName(locFilesToProcessEnum.current(), filePath);
                                    sKS_IHB_ImportIntrestRatesDelimiter.importInterestRates(locFilesToProcessEnum.current(), filePath);  
                                    info(strFmt("@SYS340850", sKS_IHB_File.getFileName()));
                                    sKS_IHB_File.moveToArchive();
                                    ttscommit;
                                }
                                catch
                                {
                                    ttsabort;
                                    sKS_IHB_File.moveToError();
                                }
                            }
                            locFilesToProcessEnum = null;
                            ListOfFilesToProcess = null;
                        }
                    }
      
                }
                else
                {
                    SKS_IHB_ImportIntrestRatesFixedFile.setSKS_IHB_InterestRateFormat(sKS_IHB_InterestRateFormat);
                    SKS_IHB_ImportIntrestRatesFixedFile.setSKS_PP_Bank(sKS_PP_Bank);
                    SKS_IHB_ImportIntrestRatesFixedFile.setFieldPositions();
                    if(ListOfFilesToProcess)
                    {    
                        if(!locFilesToProcessEnum && ListOfFilesToProcess.elements() > 0)
                        {
                            locFilesToProcessEnum = ListOfFilesToProcess.getEnumerator();
                            while(locFilesToProcessEnum.moveNext())
                            {
                                try
                                {
                                    ttsbegin;
                                    sKS_IHB_File.setFilePathName(locFilesToProcessEnum.current(), filePath);
                                    SKS_IHB_ImportIntrestRatesFixedFile.importInterestRates(locFilesToProcessEnum.current(), filePath);
                                    info(strfmt("@SYS340850", sKS_IHB_File.getFileName()));
                                    sKS_IHB_File.moveToArchive();
                                    ttscommit;
                                }
                                catch
                                {
                                    ttsabort;
                                    sKS_IHB_File.moveToError();
                                }
                            }
                            locFilesToProcessEnum = null;
                            ListOfFilesToProcess = null;
                        }
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>