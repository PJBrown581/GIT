<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_ClassMetaDataFormatValidation</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_EFT_Format_ClassMetaDataFormatValidation
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the class with the specified arguments.
    /// </summary>
    /// <param name = "_args">The specified arguments.</param>
    public static void main(Args _args)
    {
        SysDictClass sysDictClass;

        List                lFormatClass;
        ListEnumerator      lClassEnum;
        Object              formatclassInstance;
        container           conFormatID;
        str                 metaFormatGroupVersion;
        str                 metaFileType;
        int                 i;
        SKS_EFT_FormatId    metaFormatId;
        SKS_EFT_FileFormat  fileFormat;
        SKS_EFT_InboundFileFormat inboundFileForamt;

        str ValidateMetaDataClass(str className)
        {
            TreeNode tnode2Enum;
            ;

            tnode2Enum = TreeNode::findNode('Classes');
            tnode2Enum = tnode2Enum.AOTfindChild(className);

            if (tnode2Enum == null)
            {
                return strFmt("@SKS1022", metaFormatGroupVersion + ':' + metaFormatId);
            }
            return '';
        }

        void checkFormatVersion(str _FormatClassName)
        {
            SysDictClass     formatObj;
            Object           classInstance;
            str              formatVersion;
            str              retMsg;           

            retMsg = ValidateMetaDataClass(_FormatClassName);
        
            if (retMsg)
            {
                Info(retMsg);
            }
            else
            {
                formatObj = new SysDictClass(className2Id(_FormatClassName));
                classInstance = formatObj.makeObject(); // Instantiate class
                try
                {
                    formatVersion = formatObj.callObject('getFormatVersion', classInstance);

                    if (formatVersion!= metaFormatGroupVersion)
                    {
                        info(strFmt('Metadata format group %1 version %2 is different than %3 fromat class version %4.',sysDictClass.name(),metaFormatGroupVersion, metaFormatId,formatVersion));
                    }
                }
                catch(Exception::Error)
                {
                    //continue 
                    retMsg = '';
                }
            }
        }
        ;

        //Validate all formats and metadata versions
        lFormatClass = new DictClass(classnum(SKS_EFT_Format_MetaData)).extendedBy();

        lClassEnum = lFormatClass.getEnumerator();

        while(lClassEnum.moveNext())
        {
            sysDictClass = new SysDictClass(lClassEnum.current());
            formatclassInstance = sysDictClass.makeObject();

            metaFormatGroupVersion = sysDictClass.callObject('GetFormatGroupVersion', formatclassInstance);
            conFormatID = sysDictClass.callObject('GetFormatsList', formatclassInstance);
            metaFileType = sysDictClass.callObject('getFormatFileType', formatclassInstance);

            for (i = 1 ; i <= conLen(conFormatID) ; i++)
            {
                metaFormatId = conPeek(conFormatID,i);

                if (metaFileType == 'EFT')
                {
                    select FormatGroupVersion,FormatGroup from fileFormat where fileFormat.formatid == metaFormatId;

                    if (fileFormat.FormatGroupVersion != metaFormatGroupVersion)
                    {
                        info(strFmt('Metadata format group %1 version %2 is different than %3 fromat database record version %4.',sysDictClass.name(),metaFormatGroupVersion, metaFormatId, fileFormat.FormatGroupVersion));
                    }
                    
                    checkFormatVersion(strReplace('SKS_EFT_Format_' + fileformat.FormatGroup, '-', '_'));                    
                }
                else
                {
                    select FormatGroupVersion from inboundFileForamt where inboundFileForamt.formatid == metaFormatId;

                    if (inboundFileForamt.FormatGroupVersion != metaFormatGroupVersion)
                    {
                        info(strFmt('Metadata format group %1 version %2 is different than %3 fromat database record version %4.',sysDictClass.name(),metaFormatGroupVersion, metaFormatId, inboundFileForamt.FormatGroupVersion));
                    }

                    //checkFormatVersion(strReplace('SKS_EFT_RF_Format_' + metaFormatId, '-', '_'));
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>