<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_TPM_PaymentJournal</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_TPM_PaymentJournal
{  
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>FindDeductionCategory</Name>
				<Source><![CDATA[
    public static SKS_LB_TPMDedCat FindDeductionCategory(CustVendAC _custaccount, amountCur _WOAmt, DataAreaId _PaymentCompany, SKS_LB_TPMDedCat _DedCat = '', TMPSKS_LB_Importing tmpRecord = null)
    {
        Dicttable           dictTable;
        Common              common;
        Common              common2;
        int                 FoxDedCatWOtableid;
        int                 FoxFndCattableid;
        FoxDedCatWOtableid = tableName2Id('FoxMpyDeductionCategoryWriteoff');
        FoxFndCattableid = tableName2Id('FoxFndCategory');
        CustTable                       custtable;
        amountCur           LimitAmount;
                  
        dictTable= new DictTable(FoxDedCatWOtableid);
        if (dictTable != null)
        {
            common = dictTable.makeRecord();
        }        

        dictTable= new DictTable(FoxFndCattableid);
        if (dictTable != null)
        {
            common2 = dictTable.makeRecord();
        }         
        
        changeCompany(_PaymentCompany)
        {
            select firstOnly SKS_LB_TPMDedCat from custtable where custtable.AccountNum == _custAccount && custtable.dataAreaId;
        }      

        if(_DedCat == '')
        {  
            select firstOnly common
                join common2
                where common.(fieldName2id(FoxDedCatWOtableid, 'categorykey')) == common2.(fieldName2id(FoxFndCattableid, 'recid'))
                            && common2.(fieldName2id(FoxFndCattableid, 'code')) == tmpRecord.TRMDeductionCategory; 
            // if a match is found
            if(common)
            {
                // find limit amount
                LimitAmount = abs(common.(fieldName2id(FoxDedCatWOtableid, 'WriteOffLimit')));                
                
                if(tmpRecord.TRMDeductionCategory)
                {
                    // if the limit amount is not exceeded by the payment amount
                    if(SKS_TPM_PaymentJournal::CheckLimitAmount(_WOAmt, LimitAmount))
                    {
                        // the value mapped in the file will be assigned as the flintfox deduction category
                        _DedCat = tmpRecord.TRMDeductionCategory;
                    }
                    else
                    {
                        if(custtable)
                        {
                            select firstOnly common
                            join common2
                            where common.(fieldName2id(FoxDedCatWOtableid, 'categorykey')) == common2.(fieldName2id(FoxFndCattableid, 'recid'))
                                        && common2.(fieldName2id(FoxFndCattableid, 'code')) == custtable.SKS_LB_TPMDedCat;
                        
                            LimitAmount = abs(common.(fieldName2id(FoxDedCatWOtableid, 'WriteOffLimit')));
                        
                            // the customer default deduction category will be assigned
                            //if(abs(_WOAmt) <= LimitAmount)
                            if(SKS_TPM_PaymentJournal::CheckLimitAmount(_WOAmt, LimitAmount))
                            {
                                _DedCat = custtable.SKS_LB_TPMDedCat;
                            }
                            else
                            {
                                // The limit amount of the customer default is exceeded, no deduction category will be assigned
                                _DedCat = '';
                            }
                        }
                    }
                }
            }
            else  // original
            {
                // If a match is not found, the customer default will be assigned
                //changeCompany(_PaymentCompany)
                //{
                //    select firstOnly SKS_LB_TPMDedCat from custtable where custtable.AccountNum == _custAccount && custtable.dataAreaId;
                //}

                if(custtable)
                {
                    select firstOnly common join common2 where common.(fieldName2id(FoxDedCatWOtableid, 'categorykey')) == common2.(fieldName2id(FoxFndCattableid, 'recid'))
                        && common2.(fieldName2id(FoxFndCattableid, 'code')) == custtable.SKS_LB_TPMDedCat;
                        
                    LimitAmount = abs(common.(fieldName2id(FoxDedCatWOtableid, 'WriteOffLimit')));
                    //if(abs(_WOAmt) < LimitAmount)
                    if(SKS_TPM_PaymentJournal::CheckLimitAmount(_WOAmt, LimitAmount))
                    {
                        _DedCat =  custtable.SKS_LB_TPMDedCat;
                    }
                    else
                    {
                        // The limit amount of the customer default is exceeded, no deduction category will be assigned
                        _DedCat = '';
                    }
                }
            }
            
        }

        return _DedCat;
    }

]]></Source>
			</Method>
			<Method>
				<Name>CheckLimitAmount</Name>
				<Source><![CDATA[
    public static boolean CheckLimitAmount(Amount _paymentAmount, Amount _limitAmount)
    {
        boolean ret = false;

        if(abs(_paymentAmount) <= _limitAmount)
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>AssignDedCatToLJT</Name>
				<Source><![CDATA[
    public static RefRecId AssignDedCatToLJT(CustVendAC _custaccount, amountCur _WOAmt, DataAreaId _PaymentCompany, SKS_LB_TPMDedCat _DedCat = '')
    {
        Dicttable           dictTable;
        Common              common;
        Common              common2;
        int                 FoxDedCatWOtableid;
        int                 FoxFndCattableid;
        FoxDedCatWOtableid = tableName2Id('FoxMpyDeductionCategoryWriteoff');
        FoxFndCattableid = tableName2Id('FoxFndCategory');
        CustTable                       custtable;
        amountCur           LimitAmount;
        RefRecId            DedCatid;

        dictTable= new DictTable(FoxDedCatWOtableid);
        if (dictTable != null)
        {
            common = dictTable.makeRecord();
        }

        dictTable= new DictTable(FoxFndCattableid);
        if (dictTable != null)
        {
            common2 = dictTable.makeRecord();
        }

        if(_DedCat == '')
        {
            changeCompany(_PaymentCompany)
            {
                select firstOnly SKS_LB_TPMDedCat from custtable where custtable.AccountNum == _custAccount && custtable.dataAreaId;
            }

            if(custtable)
            {
                select firstOnly common join common2 where common.(fieldName2id(FoxDedCatWOtableid, 'categorykey')) == common2.(fieldName2id(FoxFndCattableid, 'recid'))
                && common2.(fieldName2id(FoxFndCattableid, 'code')) == custtable.SKS_LB_TPMDedCat;
                LimitAmount = abs(common.(fieldName2id(FoxDedCatWOtableid, 'WriteOffLimit')));
                if(abs(_WOAmt) < LimitAmount)
                {
                    DedCatid =  common.(fieldName2id(FoxDedCatWOtableid, 'categorykey'));
                }
            }
        }
        else
        {
            select firstOnly common join common2 where common.(fieldName2id(FoxDedCatWOtableid, 'categorykey')) == common2.(fieldName2id(FoxFndCattableid, 'recid'))
                && common2.(fieldName2id(FoxFndCattableid, 'code')) == _DedCat;

            DedCatid =  common.(fieldName2id(FoxDedCatWOtableid, 'categorykey'));
        }

        return DedCatid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>