<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_CO_BANKOFBOGOTA_250</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_CO_BANKOFBOGOTA_250 Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_CO_BANKOFBOGOTA_250 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220329';
        dataContractVersion = '1.0';
        conFormatID = ['CO-BANKOFBOGOTA-250','MONEOUT-8600025761-4-20180817'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'XXXXXXXXXXX','Company Id','Company Name','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',1,'CO - Bank Of Bogota - 250',0,'','','CO-BANKOFBOGOTA-250',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','','',0,'','',0,'','',0,'','',0,0,0,0,0,0,'CO-BANKOFBOGOTA-250',1]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'Structuure Monetory File',0,'','','MONEOUT-8600025761-4-20180817',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','','',0,'','',0,'','',0,'','',0,0,0,0,0,0,'CO-BANKOFBOGOTA-250',1]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('CO-BANKOFBOGOTA-250'):
                paymSpecList = this.getPaymSpecsMetaData_CO_BANKOFBOGOTA_250();
                break;

            case ('MONEOUT-8600025761-4-20180817'):
                paymSpecList = this.getPaymSpecsMetaData_MONEOUT_8600025761_4_20180817();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_CO_BANKOFBOGOTA_250</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_CO_BANKOFBOGOTA_250()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH Payments','99','ACH','','ACH-NOMINA','TRADE PAY',0,'CO-BANKOFBOGOTA-250',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH Payments','99','ACH','','ACH-PROVE','TRADE PAY',0,'CO-BANKOFBOGOTA-250',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH Payments','99','ACH','','ACH-OTROS','TRADE PAY',0,'CO-BANKOFBOGOTA-250',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_MONEOUT_8600025761_4_20180817</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_MONEOUT_8600025761_4_20180817()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Fast Card Payments','99','FAST-CARD','','FAST-CARD','TRADE PAY',0,'MONEOUT-8600025761-4-20180817',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('CO-BANKOFBOGOTA-250'):
                notesList = this.getNotesMetaData_CO_BANKOFBOGOTA_250();
                break;

            case ('MONEOUT-8600025761-4-20180817'):
                notesList = this.getNotesMetaData_MONEOUT_8600025761_4_20180817();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_CO_BANKOFBOGOTA_250</Name>
				<Source><![CDATA[
    private container getNotesMetaData_CO_BANKOFBOGOTA_250()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['CO-BANKOFBOGOTA-250','ACH-NOMINA','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Company Id and Name stored in the Bank account > Company Info tab.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CO-BANKOFBOGOTA-250','ACH-PROVE','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Company Id and Name stored in the Bank account > Company Info tab.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['CO-BANKOFBOGOTA-250','ACH-OTROS','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Company Id and Name stored in the Bank account > Company Info tab.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_MONEOUT_8600025761_4_20180817</Name>
				<Source><![CDATA[
    private container getNotesMetaData_MONEOUT_8600025761_4_20180817()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['MONEOUT-8600025761-4-20180817','FAST-CARD','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('CO-BANKOFBOGOTA-250'):
                validationsList = this.getValidationsMetaData_CO_BANKOFBOGOTA_250();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_CO_BANKOFBOGOTA_250</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_CO_BANKOFBOGOTA_250()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CO-BANKOFBOGOTA-250','ACH-NOMINA','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number','Company identification record > Dispersion Account number','Account number related to bank',0,'AccountNum','','',1,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CO-BANKOFBOGOTA-250','ACH-PROVE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number','Company identification record > Dispersion Account number','Account number related to bank',0,'AccountNum','','',1,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['CO-BANKOFBOGOTA-250','ACH-OTROS','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number','Company identification record > Dispersion Account number','Account number related to bank',0,'AccountNum','','',1,0,1,'11',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CO-BANKOFBOGOTA-250','DispersionAcctType','Dispersion Account Type']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CO-BANKOFBOGOTA-250','TypeOfIdentification','Type of identification']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CO-BANKOFBOGOTA-250','BenAcctType','Beneficiary Account Type']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CO-BANKOFBOGOTA-250','CompensationCode','Bank\'s compensation code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CO-BANKOFBOGOTA-250','TypeOfIdDispersant','Type of identification dispersant ']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CO-BANKOFBOGOTA-250','BenIdType','Beneficiary Identification Type']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['CO-BANKOFBOGOTA-250','TypeOfOperation','Type of operation']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','DispersionAcctType','Current CTA',1]);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','DispersionAcctType','Savings CTA','2']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','DispersionAcctType','Revolving credit','5']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','TypeOfIdentification','CEDULA of citizenship','C']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','TypeOfIdentification','N.I.T.','N']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','TypeOfIdentification','IdCard/CEDULA Aliens','T']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','TypeOfIdentification','The natural person','L']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','TypeOfIdentification','Passport','P']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','BenAcctType','Current CTA',1]);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','BenAcctType','Savings CTA','2']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','BenAcctType','Revolving credit','5']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','CompensationCode','Banco de BOGOTA','001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','CompensationCode','BANCOLOMBIA','007']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','CompensationCode','Bank of Occident','023']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','CompensationCode','Banco AV VILLAS','052']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','TypeOfIdDispersant','Cedula&Cedula Aliens','C']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','TypeOfIdDispersant','Night','N']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','TypeOfIdDispersant','Passport','P']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','TypeOfIdDispersant','Identity card','I']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','BenIdType','Cedula&Cedula Aliens','C']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','BenIdType','Night','N']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','BenIdType','Passport','P']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','BenIdType','Identity card','I']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','TypeOfOperation',0,0]);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['CO-BANKOFBOGOTA-250','TypeOfOperation',1,1]);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('CO-BANKOFBOGOTA-250'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_CO_BANKOFBOGOTA_250();
                break;

            case ('MONEOUT-8600025761-4-20180817'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_MONEOUT_8600025761_4_20180817();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_CO_BANKOFBOGOTA_250</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_CO_BANKOFBOGOTA_250()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','ACH-NOMINA','DispersionAcctType','Dispersion Account Type',0,'DispersionAcctType','',0,'','','Company identification record > Dispersion Account Type']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','ACH-NOMINA','TypeOfIdentification','Type of identification',0,'TypeOfIdentification','',0,'','','Movement registration information of the beneficiary > Type of identification']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','ACH-NOMINA','BenAcctType','Beneficiary Account Type',0,'BenAcctType','',0,'','','Movement registration information of the beneficiary > Beneficiary Account Type']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','ACH-NOMINA','CompensationCode','Bank\'s compensation code',0,'CompensationCode','',0,'','','Movement registration information of the beneficiary > Bank\'s compensation code where the beneficiary has the account']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','ACH-NOMINA','IdentificationNum','Identification number of the beneficiary',1,'IdentificationNum','',0,'','XXXXXXXXXXX','Movement registration information of the beneficiary > Identification number of the beneficiary']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','ACH-PROVE','DispersionAcctType','Dispersion Account Type',0,'DispersionAcctType','',0,'','','Company identification record > Dispersion Account Type']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','ACH-PROVE','TypeOfIdentification','Type of identification',0,'TypeOfIdentification','',0,'','','Movement registration information of the beneficiary > Type of identification']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','ACH-PROVE','BenAcctType','Beneficiary Account Type',0,'BenAcctType','',0,'','','Movement registration information of the beneficiary > Beneficiary Account Type']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','ACH-PROVE','CompensationCode','Bank\'s compensation code',0,'CompensationCode','',0,'','','Movement registration information of the beneficiary > Bank\'s compensation code where the beneficiary has the account']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','ACH-PROVE','IdentificationNum','Identification number of the beneficiary',1,'IdentificationNum','',0,'','XXXXXXXXXXX','Movement registration information of the beneficiary > Identification number of the beneficiary']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','ACH-OTROS','DispersionAcctType','Dispersion Account Type',0,'DispersionAcctType','',0,'','','Company identification record > Dispersion Account Type']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','ACH-OTROS','TypeOfIdentification','Type of identification',0,'TypeOfIdentification','',0,'','','Movement registration information of the beneficiary > Type of identification']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','ACH-OTROS','BenAcctType','Beneficiary Account Type',0,'BenAcctType','',0,'','','Movement registration information of the beneficiary > Beneficiary Account Type']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','ACH-OTROS','CompensationCode','Bank\'s compensation code',0,'CompensationCode','',0,'','','Movement registration information of the beneficiary > Bank\'s compensation code where the beneficiary has the account']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','ACH-OTROS','IdentificationNum','Identification number of the beneficiary',1,'IdentificationNum','',0,'','XXXXXXXXXXX','Movement registration information of the beneficiary > Identification number of the beneficiary']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_MONEOUT_8600025761_4_20180817</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_MONEOUT_8600025761_4_20180817()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CO-BANKOFBOGOTA-250','MONEOUT-8600025761-4-20180817','FAST-CARD','ConventionCode','Convention code',1,'ConventionCode','',0,'','XXXX','Header logging > Convention code']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','','CodeLookup','DISPERSION','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','','CodeLookup','CustIdType','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','','CodeLookup','MailIndicator','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','','CodeLookup','MessageIndicator','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','','CodeLookupValues','DISPERSION','Payroll','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','','CodeLookupValues','DISPERSION','Suppliers','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','','CodeLookupValues','DISPERSION','Other','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','','CodeLookupValues','CustIdType','Citizenship Card','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','','CodeLookupValues','CustIdType','Tax identification number (NIT)','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','','CodeLookupValues','CustIdType','ID card','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','','CodeLookupValues','CustIdType','Foreign card','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','','CodeLookupValues','CustIdType','Night Natural person','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','','CodeLookupValues','CustIdType','Passport','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','','CodeLookupValues','MailIndicator','InfoVIAEMAIL','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','','CodeLookupValues','MailIndicator','NoInfo','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','','CodeLookupValues','MessageIndicator','MessageIsSent','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','','CodeLookupValues','MessageIndicator','NoMessageIsSent','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','PaymSpecFields','ACH','DispersionAcctType','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','PaymSpecFields','ACH','DISPERSION','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','PaymSpecFields','ACH','CustIdType','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','PaymSpecFields','ACH','TypeOfIdentification','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','PaymSpecFields','ACH','BenAcctType','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','PaymSpecFields','ACH','CompensationCode','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','PaymSpecFields','ACH','MailIndicator','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','PaymSpecFields','ACH','MessageIndicator','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','PaymSpecFields','ACH','IdentificationNum','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','MONEOUT-8600025761-4-20180817','PaymSpecFields','FAST-CARD','TypeOfIdDispersant','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','MONEOUT-8600025761-4-20180817','PaymSpecFields','FAST-CARD','BenIdType','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','MONEOUT-8600025761-4-20180817','PaymSpecFields','FAST-CARD','OperationValue','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','FormatNotes','ACH','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','FormatValidations','ACH','0','AccountNum']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','FormatValidations','ACH','15','WOrdPartyName']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','MONEOUT-8600025761-4-20180817','FormatValidations','FAST-CARD','15','WOrdPartyId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','MONEOUT-8600025761-4-20180817','FormatValidations','FAST-CARD','0','AccountNum']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['CO-BANKOFBOGOTA-250','*','FormatValidations','*','15','W01']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('CO-BANKOFBOGOTA-250'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_CO_BANKOFBOGOTA_250();
                break;

            case ('MONEOUT-8600025761-4-20180817'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_MONEOUT_8600025761_4_20180817();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_CO_BANKOFBOGOTA_250</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_CO_BANKOFBOGOTA_250()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CO-BANKOFBOGOTA-250','CO-BANKOFBOGOTA-250','CompanyIdentNum','Company identification Number',1,'CompanyIdentNum','',0,'','XXXXXXXXXXX','Company identification Number']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_MONEOUT_8600025761_4_20180817</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_MONEOUT_8600025761_4_20180817()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['CO-BANKOFBOGOTA-250','MONEOUT-8600025761-4-20180817','IdentNum','Identification Number',1,'IdentNum','',0,'','XXXXXXXXXXXXXXX','Identification Number']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('CO-BANKOFBOGOTA-250'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('CompanyIdentNum', gSKS_EFT_Bank.W01);
                }
                break;
            case ('MONEOUT-8600025761-4-20180817'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('IdentNum', gSKS_EFT_Bank.W01);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>