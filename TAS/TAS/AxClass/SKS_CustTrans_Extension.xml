<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_CustTrans_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(tableStr(CustTrans))]
public static class SKS_CustTrans_Extension
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>SKS_displayPaymentNumber</Name>
				<Source><![CDATA[
    [SysClientCacheDataMethodAttribute(true)]
    public static display BankChequeNum SKS_displayPaymentNumber(CustTrans _this)
    {
        CustInvoiceJour     CustInvoiceJour;
        CustInvoiceTable    CustInvoiceTable;
        LedgerJournalTrans  LedgerJournalTrans;
       
        select firstOnly InvoiceId, invoiceaccount, InvoiceDate, NumberSequenceGroup from CustInvoiceJour where CustInvoiceJour.InvoiceID == _this.Invoice
                && CustInvoiceJour.InvoiceAccount == _this.AccountNum
                && CustInvoiceJour.InvoiceDate == _this.TransDate
                join InvoiceId, InvoiceDate, NumberSequenceGroup, SKS_LB_paymentNumber from CustInvoiceTable where CustInvoiceTable.InvoiceId == CustInvoiceJour.InvoiceId
                && CustInvoiceTable.InvoiceDate == CustInvoiceJour.InvoiceDate
                && CustInvoiceTable.numberSequenceGroup == CustInvoiceJour.numberSequenceGroup;
        
        if(CustInvoiceTable.SKS_LB_PaymentNumber != '')
        {
            return CustInvoiceTable.SKS_LB_PaymentNumber;
        }
        else
        {
            select firstonly Invoice, SKS_LB_PaymentNumber from LedgerJournalTrans where LedgerJournalTrans.Invoice == _this.Invoice;
            return LedgerJournalTrans.SKS_LB_PaymentNumber;
        }
        
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>SKS_displayeSettlementInvoices</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    [SysClientCacheDataMethodAttribute(true)]
    public static display SKS_LB_eSettlementInvoices SKS_displayeSettlementInvoices(CustTrans _this)
    {
        CustInvoiceJour     CustInvoiceJour;
        CustInvoiceTable    CustInvoiceTable;
        LedgerJournalTrans  LedgerJournalTrans;
        
        select firstOnly InvoiceId, invoiceaccount, InvoiceDate, numbersequencegroup from CustInvoiceJour where CustInvoiceJour.InvoiceID == _this.Invoice
                && CustInvoiceJour.InvoiceAccount == _this.AccountNum
                && CustInvoiceJour.InvoiceDate == _this.TransDate
                join CustomerRef, InvoiceId, invoiceaccount, InvoiceDate, numbersequencegroup, SKS_LB_eSettlementInvoices from CustInvoiceTable where CustInvoiceTable.InvoiceId == CustInvoiceJour.InvoiceId
                && CustInvoiceTable.InvoiceDate == CustInvoiceJour.InvoiceDate
                && CustInvoiceTable.numberSequenceGroup == CustInvoiceJour.numberSequenceGroup;
        
        if(CustInvoiceTable.SKS_LB_eSettlementInvoices != '')
        {
            return CustInvoiceTable.SKS_LB_eSettlementInvoices;
        }
        else
        {
            select firstonly Invoice, SKS_LB_eSettlementInvoices from LedgerJournalTrans where LedgerJournalTrans.Invoice == _this.Invoice;
            if (LedgerJournalTrans.SKS_LB_eSettlementInvoices != '')
            {
                return LedgerJournalTrans.SKS_LB_eSettlementInvoices;
            }
            else
            {
                return CustInvoicetable.CustomerRef;
            }

        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>SKS_displayPaymentDate</Name>
				<Source><![CDATA[
    //BP Deviation Documented
    [SysClientCacheDataMethodAttribute(true)]
    public static display PaymDate SKS_displayPaymentDate(CustTrans _this)
    {
        CustInvoiceJour     CustInvoiceJour;
        CustInvoiceTable    CustInvoiceTable;
        LedgerJournalTrans  LedgerJournalTrans;
        ;

        select firstOnly InvoiceId, invoiceaccount, InvoiceDate, numbersequencegroup from CustInvoiceJour where CustInvoiceJour.InvoiceID == _this.Invoice
        && CustInvoiceJour.InvoiceAccount == _this.AccountNum
        && CustInvoiceJour.InvoiceDate == _this.TransDate
        join InvoiceId, invoiceaccount, InvoiceDate, numbersequencegroup, SKS_LB_eSettlementInvoices, SKS_LB_PaymentDate from CustInvoiceTable where CustInvoiceTable.InvoiceId == CustInvoiceJour.InvoiceId
        && CustInvoiceTable.InvoiceDate == CustInvoiceJour.InvoiceDate
        && CustInvoiceTable.numberSequenceGroup == CustInvoiceJour.numberSequenceGroup;

        if(CustInvoiceTable.SKS_LB_PaymentDate != dateNull())
        {
            return CustInvoiceTable.SKS_LB_PaymentDate;
        }
        else
        {
            select firstonly Invoice, SKS_LB_eSettlementInvoices, SKS_LB_PaymentDate from LedgerJournalTrans where LedgerJournalTrans.Invoice == _this.Invoice;
            return LedgerJournalTrans.SKS_LB_PaymentDate;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>