<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_MX_HSBC_PAYROLL_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_MX_HSBC_PAYROLL_CSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_MX_HSBC_PAYROLL_CSV extends SKS_EFT_Format
{
    #define.FormatVersion('20220511')
    #define.Separator(',')
    #define.DoubleQuote('"')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        // Get SKS_EFT_FileFormatPaymSpec
        this.getSKS_EFT_FileFormatPaymSpec();
    
        this.rec_Header();
    
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();
    
            this.rec_Details();
    
            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Details</Name>
				<Source><![CDATA[
    //  1       Beneficiary Account
    //  2       Amount
    //  3       Beneficiary Account Reference
    //  4       Beneficiary Name
    boolean rec_Details()
    {
        LedgerJournalTrans ledgerJournalTrans;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        //  1       Beneficiary Account
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.DepBankAcct, 1, 10)));
    
        //  2       Amount
        sb.Append(this.wrapField(num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0, 2, 1, 0)));
    
        select crossCompany Txt from ledgerJournalTrans where
                ledgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;
    
        //  3       Beneficiary Account Reference
        sb.Append(this.wrapField(subStr(this.CharacterReplacement(ledgerJournalTrans.Txt), 1, 34), true));
    
        //  4       Beneficiary Name
        sb.Append(this.wrapField(subStr(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneName), 1, 35), true, false));
    
        this.fileWrite(sb.ToString());
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Header</Name>
				<Source><![CDATA[
    //  1       File format indicator
    //  2       Authorization level
    //  3       Ordering Account
    //  4       Amount
    //  5       Total Operations
    //  6       Date Value
    //  7       Execution Time
    //  8       Batch Reference*
    boolean rec_Header()
    {
    
        SKS_EFT_FileDetail  tmpSKS_EFT_FileDetail;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        // Select count and sum for this file
        select COUNT(InvoiceOrigAmountCur), SUM(InvoiceSettleAmountPmtCur) from tmpSKS_EFT_FileDetail where
            tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
            tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
            tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary;
    
        //  1       File format indicator
        sb.Append(this.wrapField('MXPRLF', true));
    
        //  2       Authorization level
        sb.Append(this.wrapField('F', true));
    
        //  3       Ordering Account
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(10, mSKS_EFT_FileDetail.BankBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));
    
        //  4       Amount
        sb.Append(this.wrapField(num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 0, 2, 1, 0)));
    
        //  5       Total Operations
        sb.Append(this.wrapField(num2str(tmpSKS_EFT_FileDetail.InvoiceOrigAmountCur, 0, 0, 0, 0)));
    
        //  6       Date Value
        sb.Append(this.wrapField(date2str(mSKS_EFT_FileDetail.EffectiveDate + 1, 123, DateDay::Digits2, DateSeparator::None, DateMonth::Digits2, DateSeparator::None, DateYear::Digits4, DateFlags::None)));
    
        //  7       Execution Time
        sb.Append(this.wrapField(time2StrHM(DateTimeUtil::getTimeNow(DateTimeUtil::getUserPreferredTimeZone()))));
    
        //  8       Batch Reference
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileFormatPaymSpec.PaymSpecName, 1, 34), true, false));
    
        this.fileWrite(sb.ToString());
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '',  boolean _Quote = false, boolean _addSeparator = true)
    {
        if(_addSeparator)
        {
            if(_Quote && _field != '' || _Quote == true)
            {
                return #DoubleQuote + _field + #DoubleQuote + #Separator;
            }
            else
            {
                return _field + #Separator;
            }
        }
        else
        {
            if(_Quote && _field != '' || _Quote == true)
            {
                return #DoubleQuote + _field + #DoubleQuote;
            }
            else
            {
                return _field;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>