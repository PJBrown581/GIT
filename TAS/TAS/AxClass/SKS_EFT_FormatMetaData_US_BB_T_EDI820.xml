<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_BB_T_EDI820</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_BB_T_EDI820 Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_BB_T_EDI820 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20221011';
        dataContractVersion = '1.0';
        conFormatID = ['US-BB-T-EDI820'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'XXXXXXXXXX','Company Id','','',0,'US - BB&T - EDI820',0,'','','US-BB-T-EDI820',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,1,'80',0,1,'','','',0,0,'','',0,'','',0,'','','3',1,0,0,0,0,'US-BB-T-EDI820',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-BB-T-EDI820'):
                paymSpecList = this.getPaymSpecsMetaData_US_BB_T_EDI820();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_BB_T_EDI820</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_BB_T_EDI820()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'ACH - Corporate Trade Exchange',1,'ACH-CTX','','ACH-CTX','TRADE PAY',0,'US-BB-T-EDI820',0,1,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire - SWIFT (SWT)',1,'WIR-SWT','','WIR-SWT','DIRECT PAY',0,'US-BB-T-EDI820',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Consumer / Employee Check',1,'CHK-CBC','','CHK-CBC','TRADE PAY',0,'US-BB-T-EDI820',0,1,0,1,1,0,0,0,0,1,0,1,1,0,0,0,1,2,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire - Book transfer',1,'WIR-BKW','','WIR-BKW','DIRECT PAY',0,'US-BB-T-EDI820',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Federal Reserve Funds/Wire Transfer',1,'WIR-FWT','','WIR-FWT','DIRECT PAY',0,'US-BB-T-EDI820',0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,01,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-BB-T-EDI820'):
                notesList = this.getNotesMetaData_US_BB_T_EDI820();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_BB_T_EDI820</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_BB_T_EDI820()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-BB-T-EDI820','ACH-CTX','-This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.:-Vendor eBanking details > Payment specifications > Additional fields.::-ISA, IEA, GS and GE data needs setup using EDI820 subscreen on EFT+ file formats.Import the data with the supplied EDI820-US-BB-T-EDI820.csv.Review any fields with a Value type of Fixed value and verify data in the Fixed value field.::-BPR.07 ODFI Identification Number will use the Routing number field from Cash and bank management module > Bank Account.::-BPR.08 Originator  Account Number will use the Bank account number field from Cash and bank management module > Bank Account.::-BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.::-BPR.13 data stored on Vendor Bank account routing number.::-BPR.14 Account number qualifier code is determined by the Bank account type on the Vendor Bank account.::-BPR.15 data stored on Vendor bank account number field.::-N1*PR.02 Name is required and stored in the Wire/IAT ordering party tab of Bank account > AP EFT+ bank account.::-N3*PR and N4*PR Address fields are stored on Wire/IAT ordering party tab of Bank account > AP EFT+ bank account.::-N1*PE.02 name and N3 and N4*PE address data comes from Remittance tab of the payment journal.::-REF*PO Purchase order number stored in the Accounts payable > Purchase orders > All purchase order tab']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BB-T-EDI820','WIR-SWT','-ISA, IEA, GS and GE data needs setup using EDI820 subscreen on EFT+ file formats.Import the data with the supplied EDI820-US-BB-T-EDI820.csv.Review any fields with a Value type of Fixed value and verify data in the Fixed value field.::-BPR.07 ODFI Identification Number will use the Routing number field from Cash and bank management module > Bank Account.::-BPR.08 Originator  Account Number will use the Bank account number field from Cash and bank management module > Bank Account.::-BPR.13 data stored on Eiher Vendor Swift number or Vendor Bank account routing number. If both are set Vendor Swift number will take precedence.::-BPR.14 Account number qualifier code is determined by the Bank account type on the Vendor Bank account.::-BPR.15 data stores either Vendor bank IBAN or bank account number. If both are exists then IBAN will take the precedence.::-N1*PR.02 Name is required and stored in the Wire/IAT ordering party tab of Bank account > AP EFT+ bank account.::-N1*RB.02 Beneficiary bank Name is required and stored in the Beneficiary bank section of Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab.::-N4*RB Address information is stored on the Vendor bank accounts > Address(Tab).::-N1*PE.02 name and N3 and N4*PE address data comes from Remittance tab of the payment journal.::-BPR.17 Identification Number is stored on Either SWIFT code or Bank Id and N1*Z6.02 Name and N4*Z6.02 is stored on Address,N4*Z6.03 is stored on Address2 and N4*Z6.04 is stored on Country/Region fields on the Intermediary bank section of Vendor eBanking details > Payment specifications > Wire transfer/IAT-2 tab.::-Payment specifications > Wire transfer/IAT-3 tab:--NTE*OTH info is stored on Line 1,2,3,4 fields on Bank Instructions group.:--NTE*ADD info is stored on Line 1,2,3,4 fields on Payment Instructions group.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BB-T-EDI820','CHK-CBC','-This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.:-Vendor eBanking details > Payment specifications > Additional fields.::-ISA, IEA, GS and GE data needs setup using EDI820 subscreen on EFT+ file formats.Import the data with the supplied EDI820-US-BB-T-EDI820.csv.Review any fields with a Value type of Fixed value and verify data in the Fixed value field.::-BPR.07 ODFI Identification Number will use the Routing number field from Cash and bank management module > Bank Account.::-BPR.08 Originator  Account Number will use the Bank account number field from Cash and bank management module > Bank Account.::-BPR.10 Originating Company Identifier stored on EFT+ bank account > Account/company tab > Company Id field.::-BPR.11 Originating Company Supplemental Code will use the Company Supplemental Code field from TAS > Bank account.::-N1*PR.02 Name is required and stored in the Wire/IAT ordering party tab of Bank account > AP EFT+ bank account.::-N3*PR and N4*PR Address fields are stored on Wire/IAT ordering party tab of Bank account > AP EFT+ bank account.::-N1*PE.02 name and N3 and N4*PE address data comes from Remittance tab of the payment journal.::-PER.04 Communication Number is stored on the Beneficiary section of Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab > Mail handling field.::-REF*PO Purchase order number stored in the Accounts payable > Purchase orders > All purchase order tab::-Vendor eBanking details > Payment specifications > Wire transfer/IAT-3 tab:--NTE*ADD info is stored on Line 1,2 fields on Payment Instructions group.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BB-T-EDI820','WIR-BKW','-ISA, IEA, GS and GE data needs setup using EDI820 subscreen on EFT+ file formats.Import the data with the supplied EDI820-US-BB-T-EDI820.csv.Review any fields with a Value type of Fixed value and verify data in the Fixed value field.::-BPR.07 ODFI Identification Number will use the Routing number field from Cash and bank management module > Bank Account.::-BPR.08 Originator  Account Number will use the Bank account number field from Cash and bank management module > Bank Account.::-BPR.13 data stored on Either Vendor Swift number or Vendor Bank account routing number. If both are set Vendor Swift number will take precedence.::-BPR.14 Account number qualifier code is determined by the Bank account type on the Vendor Bank account.::-BPR.15 data stores either Vendor bank IBAN or bank account number. If both are exists then IBAN will take the precedence.::-N1*PR.02 Name is required and stored in the Wire/IAT ordering party tab of Bank account > AP EFT+ bank account.::-N1*RB.02 Beneficiary bank Name is required and stored in the Beneficiary bank section of Vendor eBanking details > Payment specifications > Wire transfer/IAT-1 tab.::-N4*RB Address information is stored on the Vendor bank accounts > Address(Tab).::-N1*PE.02 name and N3 and N4*PE address data comes from Remittance tab of the payment journal.::-BPR.17 Identification Number is stored on Either SWIFT code or Bank Id and N1*Z6.02 Name and N4*Z6.02 is stored on Address,N4*Z6.03 is stored on Address2 and N4*Z6.04 is stored on Country/Region fields on the Intermediary bank section of Vendor eBanking details > Payment specifications > Wire transfer/IAT-2 tab.::-Payment specifications > Wire transfer/IAT-3 tab:--NTE*OTH info is stored on Line 1,2,3,4 fields on Bank Instructions group.:--NTE*ADD info is stored on Line 1,2,3,4 fields on Payment Instructions group.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BB-T-EDI820','WIR-FWT','-ISA, IEA, GS and GE data needs setup using EDI820 subscreen on EFT+ file formats.Import the data with the supplied EDI820-US-BB-T-EDI820.csv.Review any fields with a Value type of Fixed value and verify data in the Fixed value field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-BB-T-EDI820'):
                validationsList = this.getValidationsMetaData_US_BB_T_EDI820();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_BB_T_EDI820</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_BB_T_EDI820()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','BPR.07 ODFI Identification Number','ODFI Identification Number',0,'RegistrationNum','','',0,0,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Bank Account Number','BPR.09 Originator  Account Number','Originator  Account Number',0,'AccountNum','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Vendor Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift code','BPR.13 RDFI Identification Number','RDFI Identification Number','9','SWIFTNo','','','3',0,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','BPR.13 RDFI Identification Number','RDFI Identification Number','9','RegistrationNum','','','3',0,1,'12',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Vendor IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','BPR.15 Receiver Account Number','Receiver Account Number','9','BankIBAN','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Vendor bank account number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','BPR.15 Receiver Account Number','Account Number related to vendor','9','AccountNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','N1*PR.02 Payer Name','Payer Name','15','WOrdPartyName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Intermediary Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Name','N1*Z6.02 Intermediary Bank Name','Intermediary bank name','16','WIntBankName','','',1,'2',1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Intermediary Bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > City','N4*Z6.01 Intermediary Bank City','City related to Intermediary bank','16','WIntBankCity','','',1,'2',1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Intermediary Bank State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > State/province','N4*Z6.03 Intermediary Bank State/province code','State/province code related to Intermediary bank','16','WIntBankAddr','','',1,'2','2','2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Intermediary Bank ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > ZIP/postal code','N4*Z6.03 Intermediary Bank ZIP/postal code','ZIP/postal code related to Intermediary bank','16','WIntBankAddr2','','',1,'2',1,'15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Intermediary Bank Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','N4*Z6.04 Intermediary Bank Country/Region','Country/Region related to Intermediary bank','16','WIntBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','N1*RB.02 Beneficiary bank Name','Beneficiary bank Name','16','WBenBankName','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) > Edit > City','N4*RB.01 City Name','City related to Vendor bank','14','City','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) > Edit > State/province','N4*RB.02 State/province','State/province related to Vendor bank','14','State','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','ZIP/postal code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) > Edit > ZIP/postal code','N4*RB.03 ZIP/postal code','ZIP/postal code related to Vendor bank','14','ZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > Address(Tab) > Edit > Country/region','N4*RB.04 Country code','Country related to Vendor bank','14','CountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Name or Description','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N1*PE.02 Payee Name','Payee Name','12','Name','','',0,0,1,'60',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Street','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N3*PE.01 Payee Address','Address Information related to Payee','10','Street','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Street Number','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Street number','N3*PE.02 Payee Street number','Street number related to Payee','10','StreetNumber','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Building complement','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N3*PE.01 Payee Building complement','Building complement related to Payee','10','BuildingCompliment','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','ZIP/Postal Code ','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.03 Postal Code','Postal Code related to Payee','10','ZipCode','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','City','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.01 City Name','City related to Payee','10','City','','',0,'2',1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','State','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.02 State or Province Code','State related to Payee','10','State','','',0,'2','2','2',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Country/Region','Account Payable > Journals > Payments > Payment Journal > Remittance(Tab Page) > Address','N4*PE.04 Country Code','Country Code related to Payee','10','CountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','BPR.17 Identification Number','Identification Number','16','WIntBankSwift','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Intermediary Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','BPR.17 Identification Number','Identification Number','16','WIntBankId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Bank Instructions Line 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > BANK INSTRUCTIONS(group) > Line 1','NTE.02 Description','Description','16','WBankInst1','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Bank Instructions Line 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > BANK INSTRUCTIONS(group) > Line 2','NTE.02 Description','Description','16','WBankInst2','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Bank Instructions Line 3','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > BANK INSTRUCTIONS(group) > Line 3','NTE.02 Description','Description','16','WBankInst3','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Bank Instructions Line 4','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > BANK INSTRUCTIONS(group) > Line 4','NTE.02 Description','Description','16','WBankInst4','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Payment Instructions Line 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > PAYMENT INSTRUCTIONS(group) > Line 1','NTE.02 Description','Description','16','WPmtInstText1','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Payment Instructions Line 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > PAYMENT INSTRUCTIONS(group) > Line 2','NTE.02 Description','Description','16','WPmtInstText2','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Payment Instructions Line 3','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > PAYMENT INSTRUCTIONS(group) > Line 3','NTE.02 Description','Description','16','WPmtInstText3','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BB-T-EDI820','WIR-FWT','','Payment Instructions Line 4','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 3(Fast tab) > PAYMENT INSTRUCTIONS(group) > Line 4','NTE.02 Description','Description','16','WPmtInstText4','','',1,1,'','',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-BB-T-EDI820','HandlCd','Transaction Handling Code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-BB-T-EDI820','CommunicationNumber','Communication Number']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BB-T-EDI820','HandlCd','C - Payment Only','C']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BB-T-EDI820','HandlCd','D - Payment Only','D']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BB-T-EDI820','HandlCd','Payment Only','P']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BB-T-EDI820','HandlCd','Payment & Remittance','X']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BB-T-EDI820','CommunicationNumber','US Mail Delivery','USFC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BB-T-EDI820','CommunicationNumber','Foreign Mail Delivery','FMFC']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BB-T-EDI820','CommunicationNumber','Overnight to Payee','ONRD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BB-T-EDI820','CommunicationNumber','Overnight to Payer','ONOD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BB-T-EDI820','CommunicationNumber','2nd Day Air to Payee','ONSD']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('US-BB-T-EDI820'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_BB_T_EDI820();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_BB_T_EDI820</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_BB_T_EDI820()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BB-T-EDI820','US-BB-T-EDI820','ACH-CTX','HandlCd','Transaction Handling Code',0,'HandlCd','C - Payment Only',0,'','','BPR.01(Transaction Handling Code)']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BB-T-EDI820','US-BB-T-EDI820','CHK-CBC','HandlCd','Transaction Handling Code',0,'HandlCd','C - Payment Only',0,'','','BPR.01(Transaction Handling Code)']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BB-T-EDI820','US-BB-T-EDI820','CHK-CBC','CommunicationNumber','Communication Number',0,'CommunicationNumber','',0,'','','PER > Communication Number']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
            case ('US-BB-T-EDI820'):
                ControlFormatList = this.getControlFormatMetaData_US_BB_T_EDI820();
                break;

        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData_US_BB_T_EDI820</Name>
				<Source><![CDATA[
    private container getControlFormatMetaData_US_BB_T_EDI820()
    {
        container   ControlFormatList;

        ControlFormatList = ConIns(ControlFormatList,conLen(ControlFormatList)+1,['US-BB-T-EDI820','US-BB-T-EDI831','US-BB-T-EDI820 file authentication record']);

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BB-T-EDI820','US-BB-T-EDI820','FormatLookup','BKW','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BB-T-EDI820','','CodeLookup','NoteRefCd','','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BB-T-EDI820','','CodeLookupValues','NoteRefCd','BBI INSTRUCTIONS','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BB-T-EDI820','','CodeLookupValues','NoteRefCd','OBI BNF Information','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BB-T-EDI820','US-BB-T-EDI820','PaymSpecFields','WIR-SWT','NoteRefCd','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BB-T-EDI820','US-BB-T-EDI820','PaymSpecFields','WIR-BKW','NoteRefCd','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BB-T-EDI820','US-BB-T-EDI820','PaymSpecFields','WIR-FWT','NoteRefCd','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BB-T-EDI820','US-BB-T-EDI820','FormatNotes','BKW','','']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BB-T-EDI820','US-BB-T-EDI820','FormatLookup','*','*','']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch(_formatID)
        {
            case ('US-BB-T-EDI820'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_BB_T_EDI820();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_BB_T_EDI820</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_BB_T_EDI820()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BB-T-EDI820','US-BB-T-EDI820','CompanySupplementalCd','Company Supplemental Code',1,'CompanySupplementalCd','',0,'','XXXXXXXXX','BPR.11 Originating Company Supplemental Code']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        if(gSKS_EFT_Bank.W01)
        {
            this.updateBankFields('CompanySupplementalCd', gSKS_EFT_Bank.W01);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vednor code lookpus from BE0X and Legacu code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        if(gSKS_EFT_VendorPaym.WBeneMailHandling)
        {
            this.updateVendorFields('CommunicationNumber', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>