<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_CHASE_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_CHASE_XML extends SKS_EFT_Format_ISO_20022_001001003
/// </summary>
class SKS_EFT_Format_US_CHASE_XML extends SKS_EFT_Format_ISO_20022_001001003
{
    //------------------------------------------------------------------------------------------------------
    /// <summary>
    /// This is extending the SEPA_Credit Format
    /// </summary>
    //------------------------------------------------------------------------------------------------------
    #define.FormatVersion('20230517')
    #define.CCD('CCD')
    #define.CCDP('ACH-CCP')
    #define.SEPA('SEPA')
    #define.PPD('PPD')
    #define.CTX('CTX')
    #define.WIR('WIR')
    #define.FXW('FXW')
    #define.US_WIR('US-WIR')
    #define.FED_WIR('FED-WIR')
    #define.CHP_WIR('CHP-WIR')
    #define.PPP('PPP')
    #define.BOOK_WIRE('BOOK-WIRE')
    #define.WIRE_BT('WIRE-BT')
    #define.ACH('ACH')
    #define.BACS('BACS')
    #define.UK_FP('UK-FP')
    #define.CCDP_TAX('ACH-CCP-TX')
    #define.WIRE('WIRE')
    #define.WIRE_FX('WIRE-FX')
    #define.GACH('GACH')
    #define.CHK('CHK')

    //VSTS_11573 -->
    #define.CZACH('CZ-ACH')
    #define.HUACH('HU-ACH')
    #define.PLACH('PL-ACH')
    #define.CHACH('CH-ACH')
    #define.DKFIK75('DK-FIK-75')
    #define.DKFIK73('DK-FIK-73')
    #define.DKFIK71('DK-FIK-71')
    #define.DK356('DK-356')
    #define.ZALVC('ZA-LVC')
    #define.SEPMTACT('SE-PMT-ACT')
    #define.PLACHTAX('PL-ACH-TAX')
    #define.PLACHSS('PL-ACH-SS')
    //VSTS_11573 <--
    #define.MYHVCBR('MY-HV-CBR')
    #define.SGHVCBR('SG-HV-CBR')
    #define.MYHVBKTR('MY-HV-BKTR')
    #define.SGHVBKTR('SG-HV-BKTR')
    #define.MYHVLWIRE('MY-HVLWIRE')
    #define.SGHVLWIRE('SG-HVLWIRE')
    #define.MYACHGIR('MY-ACH-GIR')
    #define.SGLVGIRO('SG-LVGIRO')

    //SKS_VSTS_13362 -->
    #define.USSUA('US-SUA')
    //SKS_VSTS_13362 <--

    //SKS_VSTS_13872 -->
    #define.CB_TLX('CB-TLX')
    //SKS_VSTS_13872 <--

    //SKS_VSTS_13917 -->
    #define.HKHVTLX('HK-HV-TLX')
    #define.HKLVGIR('HK-LV-GIR')
    //SKS_VSTS_13917<--

    //SKS_VSTS_13918 -->
    #define.NLHV('NL-HV')
    #define.NLLVSEPA('NL-LV-SEPA')
    //SKS_VSTS_13918<--

    #define.HVPS_GIR('HVPS-GIR')        //SKS#DevOps:17319

    str     pONum;
    str     description, purpCode;
    

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRemoveBOM</Name>
				<Source><![CDATA[
    protected boolean getRemoveBOM()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_GrpHdr
    /// </summary>
    protected void node_GrpHdr()
    {
        //------------------------------------------------------------------------------------------------------
        //  1.0: GrpHdr
        //      1.1: MsgId
        //      1.2: CreDtTm
        //      1.6: NbOfTxs
        //      1.7: CtrlSum
        //      1.8: InitgPty
        //          Nm
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeGrpHdr;
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;
    
        // Select count and sum for this file
        select COUNT(InvoiceOrigAmountCur), SUM(InvoiceSettleAmountPmtCur) from tmpSKS_EFT_FileDetail
            where
                tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary;
    
        //  1.0: GrpHdr
        nodeGrpHdr = nodeRoot.appendChild(xmlDoc.createElement('GrpHdr'));
    
        //      1.1: MsgId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'MsgId', SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr,35));
    
        //      1.2: CreDtTm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CreDtTm', DateTimeUtil::toStr(DateTimeUtil::utcNow()));
    
        //      1.3: Authstn
        this.node_GrpHdr_Authstn(nodeGrpHdr);
    
        //      1.6: NbOfTxs
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'NbOfTxs', num2str(tmpSKS_EFT_FileDetail.InvoiceOrigAmountCur,0,0,0,0));
    
        if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AP || mSKS_EFT_FileDetail.Module == SKS_EFT_Module::CNP || (mSKS_EFT_FileDetail.Module == SKS_EFT_Module::BTB && mSKS_EFT_File.TransferDirection == SKS_BTB_TransferType::Transfer_out))
        {
            if(mSKS_EFT_FileDetail.FormatId == 'US-CHASE-XML' && mSKS_EFT_FileDetail.TransactionCode == #FXW && mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId == 'JPN')
            {
                //      1.7: CtrlSum
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,0,0,0));
            }

            else
            {
            
                //      1.7: CtrlSum
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0));
            }
        }
        else
        {
            //      1.7: CtrlSum
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,0,2,1,0));
        }
    
        //      1.8: InitgPty
        this.node_GrpHdr_InitgPty(nodeGrpHdr);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf()
    {
        //------------------------------------------------------------------------------------------------------
        //  2.0: PmtInf
        //      2.1: PmtInfId
        //      2.2: PmtMtd
        //      2.4: NbOfTxs
        //      2.5: CtrlSum
        //      2.6: PmtTpInf
        //      2.17: ReqdExctnDt
        //      2.19: Dbtr
        //      2.20: DbtrAcct
        //      2.21: DbtrAgt
        //      2.24 ChrgBr
        //------------------------------------------------------------------------------------------------------
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;
    
        batchCount++;
    
        // Select count and sum for this bank account
        select COUNT(InvoiceOrigAmountCur), SUM(InvoiceSettleAmountPmtCur) from tmpSKS_EFT_FileDetail
            where
                tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                tmpSKS_EFT_FileDetail.BankAccountId == mSKS_EFT_FileDetail.BankAccountId &&
                tmpSKS_EFT_FileDetail.EffectiveDate == mSKS_EFT_FileDetail.EffectiveDate &&
                tmpSKS_EFT_FileDetail.PaymMode == mSKS_EFT_FileDetail.PaymMode &&
                tmpSKS_EFT_FileDetail.PaymSpec == mSKS_EFT_FileDetail.PaymSpec &&
                tmpSKS_EFT_FileDetail.PaymentCurrencyCode == mSKS_EFT_FileDetail.PaymentCurrencyCode;
    
    
        //  2.0: PmtInf
        nodePmtInf = nodeRoot.appendChild(xmlDoc.createElement('PmtInf'));
    
        //      2.1: PmtInfId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtInfId', SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr + '-' + int2str(batchCount),35));
    
        //      2.2: PmtMtd
        if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AR)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'DD');
        }
        else if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::Yes || subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) == 'CHK')
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'CHK');
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'TRF');
        }
    
        //      2.3: BtchBookg
        this.node_PmtInf_BtchBookg(nodePmtInf);

        //      2.4: NbOfTxs
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'NbOfTxs', num2str(tmpSKS_EFT_FileDetail.InvoiceOrigAmountCur,0,0,0,0));
    
        if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AP || mSKS_EFT_FileDetail.Module == SKS_EFT_Module::CNP || (mSKS_EFT_FileDetail.Module == SKS_EFT_Module::BTB && mSKS_EFT_File.TransferDirection == SKS_BTB_TransferType::Transfer_out))
        {
            if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'HUF' || (mSKS_EFT_FileDetail.FormatId == 'US-CHASE-XML' && mSKS_EFT_FileDetail.TransactionCode == #FXW && mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId == 'JPN'))        //SKS#DevOps:18164//DevOps21006
            {
                //      2.5: CtrlSum
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,0,0,0));
            }
            else
            {
                //      2.5: CtrlSum
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0));
            }
        }
        else
        {
            //      2.5: CtrlSum
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,0,2,1,0));
        }
    
        //      2.6: PmtTpInf
        this.node_PmtInf_PmtTpInf(nodePmtInf);
    
        if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AR)
        {
            //      2.18: ReqdColltnDt
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'ReqdColltnDt', SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate, DateSeparator::Hyphen));
        }
        else
        {
            //      2.17: ReqdExctnDt
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'ReqdExctnDt', SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate, DateSeparator::Hyphen));
        }
    
        if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AP || mSKS_EFT_FileDetail.Module == SKS_EFT_Module::CNP ||
            (mSKS_EFT_FileFormatPaymSpec.UseWithBanktoBank &&
            mSKS_EFT_FileFormatPaymSpec.SKS_BTB_PaymSpecFundTransferType == SKS_BTB_PaymSpecFundTransferType::Transfer_out))
        {
            this.node_PmtInf_DbtrNodes(nodePmtInf);
        }
        else
        {
            this.node_PmtInf_CdtrNodes(nodePmtInf);
        }
    
        //      2.24 ChrgBr
        this.node_PmtInf_ChrgBr(nodePmtInf);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf()
    {
        //------------------------------------------------------------------------------------------------------
        //      2.27: CdtTrfTxInf
        //          2.28: PmtId
        //              2.30: EndToEndId
        //          2.42: Amt
        //              2.43: InstdAmt
        //          2.77: CdtrAgt
        //              FinInstnId
        //                  BIC
        //          2.79: Cdtr
        //              Nm
        //          2.80: CdtrAcct
        //              Id
        //                  IBAN
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtTrfTxInf;
    
        //      2.27: CdtTrfTxInf
        nodeCdtTrfTxInf = nodePmtInf.appendChild(xmlDoc.createElement('CdtTrfTxInf'));
    
        //          2.28: PmtId
        this.node_CdtTrfTxInf_PmtId(nodeCdtTrfTxInf);
    
        //          2.42: Amt
        this.node_CdtTrfTxInf_Amt(nodeCdtTrfTxInf);
    
        //      2.47 XchgRateInf
        this.node_CdtTrfTxInf_XchgRateInf(nodeCdtTrfTxInf);
    
        if( mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CB_TLX)//SKS_VSTS_13872
        {
            //          2.51: ChrgBr
            this.node_CdtTrfTxInf_ChrgBr(nodeCdtTrfTxInf);
        }
    
        //          2.52: ChqInstr
        if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::Yes || subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) == 'CHK')
        {
            this.node_CdtTrfTxInf_ChqInstr(nodeCdtTrfTxInf);
        }
    
        //          2.71: IntrmyAgt1
        this.node_CdtTrfTxInf_IntrmyAgt1(nodeCdtTrfTxInf);
    
        //          2.77: CdtrAgt
        this.node_CdtTrfTxInf_CdtrAgt(nodeCdtTrfTxInf);
    
        //          2.79: Cdtr
        this.node_CdtTrfTxInf_Cdtr(nodeCdtTrfTxInf);
    

        //          2.80: CdtrAcct
        this.node_CdtTrfTxInf_CdtrAcct(nodeCdtTrfTxInf);
    
        if(mSKS_EFT_FileFormatPaymSpec.FormatId != 'US-CHASE-XML-SG')
        {
            if(mSKS_EFT_FileFormatPaymSpec.FormatId != 'US-CHASE-XML-MY')
            {
                if(mSKS_EFT_FileFormatPaymSpec.FormatId != 'US-CHASE-XML-CN') //SKS#DevOps:17319
                {
                    //          2.81: UltmtCdtr
                    this.node_CdtTrfTxInf_UltmtCdtr(nodeCdtTrfTxInf);
                }
            }

            //          2.85: InstrForDbtrAgt
            this.node_CdtTrfTxInf_InstrForDbtrAgt(nodeCdtTrfTxInf);
        }
    
        if (mSKS_EFT_FileFormatPaymSpec.AddendaSpec ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GACH ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CCDP_TAX ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYACHGIR ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HVPS_GIR || //SKS#DevOps:17319
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGLVGIRO ||            
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGLVGIRO ||//SKS_VSTS_13599 <--
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKLVGIR)//SKS_VSTS_13917 <--
        {
            //          2.86: Purp
            this.node_CdtTrfTxInf_Purp(nodeCdtTrfTxInf);
        }

    
        //          2.89: RgltryRptg
        this.node_CdtTrfTxInf_RgltryRptg(nodeCdtTrfTxInf);

        if (mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ACH         &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CCD         &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CCDP        &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CCDP_TAX    &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CTX         &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PPD         &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PPP         &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #US_WIR      &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CHP_WIR     &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #FED_WIR     &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #WIR         &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #FXW         &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #WIRE        &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BOOK_WIRE   &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #WIRE_BT)
        {
            //          2.91: RltdRmtInf
            this.node_CdtTrfTxInf_RltdRmtInf(nodeCdtTrfTxInf);
        }

        if((mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CCD ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PPD ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CTX ) && mSKS_EFT_FileDetail.RecordType != SKS_EFT_RecordType::PreNote)
        {
            //          2.98: RmtInf
            this.node_CdtTrfTxInf_RmtInf(nodeCdtTrfTxInf);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_PmtId</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_PmtId(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.28: PmtId
        //              2.30: EndToEndId
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodePmtId;
        boolean     printInstrId;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CHASE-XML-CN':
                printInstrId = true;
                break;
        }
    
        //          2.28: PmtId
        nodePmtId = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('PmtId'));

        if(printInstrId)
        {
            //              2.29: InstrId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'InstrId', SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 35));
        }
    
        //              2.30: EndToEndId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId', SKS_PP_StringFormats::strRight(mSKS_EFT_FileDetail.PaymentReference, 35));
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Cdtr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.79: Cdtr
        //              Nm
        //              PstlAdr
        //              Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtr;
    
        //          2.79: Cdtr
        nodeCdtr = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Cdtr'));
    
        //              Nm
        this.node_CdtTrfTxInf_Cdtr_Nm(nodeCdtr);
    
        //              PstlAdr
        this.node_PmtInf_Cdtr_PstlAdr(nodeCdtr);
    
        //              Id
        this.node_PmtInf_Cdtr_Id(nodeCdtr);

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USSUA || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HVPS_GIR)//SKS_VSTS_13567
        {
            //      CtctDtls
            this.node_PmtInf_Cdtr_CtctDtls(nodeCdtr);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_CtctDtls</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_PmtInf_Cdtr_CtctDtls
    /// </summary>
    /// <param name = "_nodeCdtr">_nodeCdtr</param>
    protected void node_PmtInf_Cdtr_CtctDtls(XmlElement _nodeCdtr)//SKS_VSTS_13567
    {
        //------------------------------------------------------------------------------------------------------
        //      4.1: CtclDtls
        //      4.10.1: Nm
        //      4.10.2: PhneNb
        //------------------------------------------------------------------------------------------------------
        XmlElement  nodeCtctDtls;
        SKS_EB_Vendor sks_eb_vendor;
        str         email, value, value1;

        nodeCtctDtls = _nodeCdtr.appendChild(xmlDoc.createElement('CtctDtls'));

        sks_eb_Vendor = SKS_EB_Vendor::findByCompany(mSKS_EFT_FileDetail.PaymentCompany, mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum);

        if(mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-CN' && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HVPS_GIR)
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('VendCode', mSKS_EFT_FileDetail.RecId));

            if(value)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtctDtls, 'Nm', SKS_PP_StringFormats::strFill(35, subStr(value, 1, 8), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
            }
            else
            {
                value1 = this.CharacterReplacement(SKS_PP_StringFormats::strRight(mSKS_EFT_FileDetail.AccountCompany,2) + SKS_PP_StringFormats::strRight(strAlpha(mSKS_EFT_FileDetail.AccountNum),6));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtctDtls, 'Nm', SKS_PP_StringFormats::strFill(35, value1, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
            }
        }

        if(sks_eb_Vendor.EM1Vendor)
        {
            email =  VendTable::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum).email();

            email = email ? email + ';' : email;
        }

        email = sks_eb_Vendor.EM2Addr ? email + sks_eb_Vendor.EM2Addr + ';' : email;

        email = sks_eb_Vendor.EM3Addr ? email + sks_eb_Vendor.EM3Addr + ';' : email;

        email = sks_eb_Vendor.EM4Addr ? email + sks_eb_Vendor.EM4Addr + ';' : email;

        if(email)
        {
            //          E mail Address
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtctDtls, 'EmailAdr', this.CharacterReplacement(email));
        }
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr_Nm</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Cdtr_Nm(XmlElement _nodeCdtr, boolean _CustomAddress = false)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.79: Cdtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
        str name = this.CharacterReplacement(mSKS_EFT_FileDetail.AccountName);
        int     length;
        if(!_CustomAddress)
        {
    
            if(mRemittanceName != '')
            {
                name = mRemittanceName;
            }
    
            switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
            {
                case #BOOK_WIRE:
                case #WIRE_BT:
                case #CHK:
                case #CB_TLX:   //SKS_VSTS_13872
                case #HKHVTLX:  //SKS_VSTS_13917
                case #NLHV:     //SKS_VSTS_13918
                case #NLLVSEPA: //SKS_VSTS_13918
                    length = 70;
                    break;
                case #ACH:
                case #BACS:
                case #UK_FP:
                case #WIRE:
                case #CZACH:
                case #HUACH:
                case #PLACH:
                case #CHACH:
                case #DKFIK75:
                case #DKFIK73:
                case #DKFIK71:
                case #DK356:
                case #SEPMTACT:
                case #PLACHTAX:
                case #PLACHSS:
                    length = 35;
                    break;
                case #GACH:
                case #ZALVC:
                    length = 30;
                    break;
                case #HVPS_GIR:   //SKS#DevOps:17319
                    length = 60;
                    break;
                case #SEPA:
                    length = ((mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-CA' || mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-UK') ? 70 : 140);
                    break;
                case #USSUA://SKS_VSTS_13362 -->
                    length = 140;
                    break;//SKS_VSTS_13362 <--
                default:
                    length = 140;
                    break;
            }
    
            //              Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', name, length);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  Othr
        //                  Id
        //              Tp
        //                  Cd/Ptry
        //------------------------------------------------------------------------------------------------------
        XmlElement  nodeCdtrAcct;
        XmlElement  nodeCdtrAcctId;
        XmlElement  nodeCdtrAcctIdOthr;
        XmlElement  nodeCdtrAcctTp;
        str         value;
        int         length;
    
        if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::No &&
           subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK'     &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #USSUA)                   //SKS_VSTS_13632
        {
            //          2.80: CdtrAcct
            nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
            //              Id
            nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
            if((mSKS_EFT_FileDetail.DepBankIBAN != ''                     &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #US_WIR    &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #FED_WIR   &&               
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #GACH      &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CCDP_TAX  &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CCDP      &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CCD       &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MYHVBKTR  &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SGHVBKTR  &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MYHVLWIRE &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SGHVLWIRE &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MYACHGIR  &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SGLVGIRO  &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #USSUA)    ||
               ((mSKS_EFT_FileDetail.DepBankIBAN != ''                     &&
                mSKS_EFT_FileDetail.DepBankAcct == '')                     &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGLVGIRO))//SKS_VSTS_13907//DevOps18675
            {
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #UK_FP:
                        length = 22;//SKS_VSTS_14122
                        break;
                    case #CZACH:
                        length = 34;
                        break;
                    case #PLACH:
                    case #HUACH:
                    case #PLACHTAX:
                    case #PLACHSS:
                        length = 28;
                        break;
                    case #DK356:
                        length = 18;
                        break;
                    case #SEPMTACT:
                        length = 24;
                        break;
                    case #MYHVCBR:
                    case #SGHVCBR:
                    case #SGLVGIRO://SKS_VSTS_13907
                        length = 34;
                        break;
                    case #SEPA://SKS_VSTS_13152
                    case #CB_TLX://SKS_VSTS_13872
                        if(mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-UK')
                        {
                            length = 30;
                        }
                        break;
                    case #HKHVTLX://SKS_VSTS_13917
                    case #HKLVGIR://SKS_VSTS_13917
                    case #NLHV:   //SKS_VSTS_13918
                    case #NLLVSEPA://SKS_VSTS_13918
                    case #HVPS_GIR:     //SKS#DevOps:17319
                        length = 30;
                        break;
                }
    
                //                  IBAN
                nodeCdtrAcctId = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN, length);
            }
            else
            {
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BACS:
                    case #UK_FP:
                        length = 8;
                        break;
                    case #CZACH:                    //VSTS_11573 -->
                        length = 17;
                        break;
                    case #HUACH:
                    case #CHACH:
                    case #WIRE:
                        length = 16;
                        break;
                    case #DKFIK71:
                    case #DKFIK73:
                    case #DKFIK75:
                        length =8;
                        break;
                    case #DK356:
                        length = 10;
                        break;
                    case #ZALVC:
                        length = 13;
                        break;
                    case #SEPMTACT:
                        length = 15;
                        break;                      //VSTS_11573 <--
                    case #MYHVBKTR:
                    case #SGHVBKTR:
                    case #MYHVLWIRE:
                    case #SGHVLWIRE:
                    case #CB_TLX://SKS_VSTS_13872
                    case #SGLVGIRO://SKS_VSTS_13907
                        length = 34;
                        break;
                    case #USSUA:
                        length = 34;
                        break;
                    case #HKHVTLX://SKS_VSTS_13917
                    case #HKLVGIR://SKS_VSTS_13917
                    case #NLHV:   //SKS_VSTS_13918
                    case #NLLVSEPA://SKS_VSTS_13918
                        length = 30;
                        break;
                }

                //                  Othr
                nodeCdtrAcctIdOthr = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
                //                      Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctIdOthr, 'Id', mSKS_EFT_FileDetail.DepBankAcct, length);
            }
    
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CCD  ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CCDP ||               
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PPD  ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CTX  ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CCDP_TAX ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GACH ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PPP  ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZALVC)
            {
                //              Tp
                //                  Cd/Ptry
                if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::SavingsAccount)
                {
                    value = 'SVGS';
                }
                else
                {
                    value = 'CASH';
                }
    
                nodeCdtrAcctTp = nodeCdtrAcct.appendChild(xmlDoc.createElement('Tp'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctTp, 'Cd', value);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                  Nm
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
        XmlElement nodePstlAdr;
        int  length = 0;
        str city, street,country;
        
        if (mSKS_EFT_FileFormatPaymSpec.TransactionCode != #USSUA &&
           (mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::No || subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK'))
        {
            //          2.77: CdtrAgt
            nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));
    
            //              FinInstnId
            nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
   
            if(mSKS_EFT_FileDetail.DepSwiftNo != ''                          &&
              (((mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML'      ||
                 mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-NO')  &&
                (mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ACH         &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CCD         &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CCDP        &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CCDP_TAX    &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CTX         &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PPD         &&
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PPP))       ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE        ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE        ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BOOK_WIRE   ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE_BT     ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BACS        ||
                 mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA)       ||
                 (mSKS_EFT_FileDetail.DepBankTransit == ''                   &&
                 (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UK_FP     ||
                  mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GACH))	||
                  ((mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-MY' &&
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MYACHGIR) ||
                    mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-SG' ||//SKS_VSTS_13599
                    (mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-UK' &&
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CB_TLX))  ||
                    ((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKLVGIR || //SKS_VSTS_13917
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLHV      || //SKS_VSTS_13918
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLLVSEPA) &&
                    mSKS_EFT_FileDetail.DepSwiftNo))                            //SKS_VSTS_13918)
            {
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #US_WIR  ||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FED_WIR ||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHP_WIR ||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE_BT ||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE    || 
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CB_TLX  ||//SKS_VSTS_13872
                   (mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-MY'||
                    mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-SG'||
                    mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-NL'))
                {
                    length = 11;
                }
    
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, length, false);
                
    
                if(((this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId)) == 'CA' && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIR) && mSKS_EFT_FileDetail.DepBankTransit)
                {
                    //                  ClrSysMmbId
                    nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', ('CC'+ mSKS_EFT_FileDetail.DepBankTransit), length, false);
                }
                else if((mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML' && mSKS_EFT_FileDetail.DepBankTransit != '') || 
                    ((mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-CA' && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE) && mSKS_EFT_FileDetail.DepBankTransit != '') ||
                    ((mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-UK' && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CB_TLX) && mSKS_EFT_FileDetail.DepBankTransit != ''))//SKS_VSTS_13150
                {
                    //                  ClrSysMmbId
                    nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 35);
                }
            }
            else if(mSKS_EFT_FileDetail.DepBankTransit != '')
            {
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #US_WIR:
                    case #FED_WIR:
                    case #CHP_WIR:
                    case #GACH:
                        length = 9;
                        break;
                    case #CZACH:            //VSTS_11573 -->
                    case #DK356:
                        length = 4;
                        break;
                    case #ZALVC:
                    case #BACS:
                    case #UK_FP:
                        length = 6;
                        break;
                    case #HUACH:
                        length = 8;
                        break;              //VSTS_11573 <--
                    case #MYACHGIR:
                    case #NLHV://SKS_VSTS_13918
                    case #NLLVSEPA://SKS_VSTS_13918
                        length = 35;
                        break;
                    case #HKLVGIR://SKS_VSTS_13917
                        length = 3;
                        break;
                }

                if((this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId)) == 'CN' && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKHVTLX && mSKS_EFT_FileDetail.DepBankTransit)//SKS_VSTS_13917
                {
                    //                  ClrSysMmbId
                    nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', ('/CN'+ mSKS_EFT_FileDetail.DepBankTransit), 35, false);
                }
                else if(mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-CN' && mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HVPS_GIR && mSKS_EFT_FileDetail.DepBankTransit) //SKS#Devops -17319
                {
                    //                  ClrSysMmbId
                    nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                    
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 12, false);

                }
                else
                {
                    //                  ClrSysMmbId
                    nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, length, false);
                }
            }
    
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKHVTLX &&
               mSKS_EFT_FileDetail.DepSwiftNo == ''                    &&
               mSKS_EFT_FileDetail_BenBank.BenBankName != '')                  //SKS_VSTS_13917
            {
                //                  Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankName), 35, false);
            }
            else if(mSKS_EFT_FileDetail_BenBank.BenBankName != '')
            {
                //                  Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankName));
            }
    
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BOOK_WIRE ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE_BT   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH       ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BACS      ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UK_FP     ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYHVCBR   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGHVCBR   ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYHVBKTR  ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGHVBKTR  ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYHVLWIRE ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGHVLWIRE ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYACHGIR  ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGLVGIRO  ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CB_TLX    ||     //SKS_VSTS_13872||//SKS_VSTS_13872
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKHVTLX   ||     //SKS_VSTS_13917
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKLVGIR   ||     //SKS_VSTS_13917
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLHV      ||     //SKS_VSTS_13918
              mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLLVSEPA)         //SKS_VSTS_13918
            {
                //              PstlAdr
                nodePstlAdr = nodeFinInstnId.appendChild(xmlDoc.createElement('PstlAdr'));

                //                  Ctry
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId));
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE    ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GACH)
            {
                if(mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-CA' &&
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE)
                {
                    select firstonly msks_EFT_FileDetail_BankAddress where
                        msks_EFT_FileDetail_BankAddress.RefRecId == mSKS_EFT_FileDetail.RecID
                        && msks_EFT_FileDetail_BankAddress.AddressType == SKS_EFT_AddressType::VendBankAddress;
    
                    if(msks_EFT_FileDetail_BankAddress.City || msks_EFT_FileDetail_BankAddress.Addr || msks_EFT_FileDetail_BankAddress.CountryRegionId)
                    {
                        city = msks_EFT_FileDetail_BankAddress.City;
                        street = msks_EFT_FileDetail_BankAddress.Addr;
                        country = this.getLogisticsAddressCountryISO(msks_EFT_FileDetail_BankAddress.CountryRegionId);//SKS_VSTS_13874
                    }
                    else if(mSKS_EFT_FileDetail_BenBank.BenBankCity || mSKS_EFT_FileDetail_BenBank.BenBankAddr || mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId)
                    {
                        city = mSKS_EFT_FileDetail_BenBank.BenBankCity;
                        street = mSKS_EFT_FileDetail_BenBank.BenBankAddr;
                        country = this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId);//SKS_VSTS_13874
                    }
                    if(city || street || country)
                    {
                        //      PstlAdr
                        nodePstlAdr = nodeFinInstnId.appendChild(xmlDoc.createElement('PstlAdr'));
    
                        //          TwnNm
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', this.CharacterReplacement(city), 35, false);
    
                        //          Ctry
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', this.CharacterReplacement(country), 2, false);//SKS_VSTS_13874

                        //          AdrLine
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(street), 35, false);
                    }
                }
                else
                {
                    //              PstlAdr
                    nodePstlAdr = nodeFinInstnId.appendChild(xmlDoc.createElement('PstlAdr'));

                    //                  Ctry
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId));
                }
            }
            else
            {
                //                  PstlAdr
                this.node_CdtTrfTxInf_CdtrAgt_PstlAdr(nodeFinInstnId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt_PstlAdr(XmlElement _nodeCdtrAgt)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.77: CdtrAgent
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePstlAdr;
    
        if(mSKS_EFT_FileDetail_BenBank.BenBankCity != '' || mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId != '' || mSKS_EFT_FileDetail_BenBank.BenBankAddr != '')
        {
            //      PstlAdr
            nodePstlAdr = _nodeCdtrAgt.appendChild(xmlDoc.createElement('PstlAdr'));
    
            //          TwnNm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankCity), 35, false);
    
            //          Ctry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId), 2, false);
    
            //          AdrLine
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankAddr), 35, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChrgBr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.51: ChrgBr
        //------------------------------------------------------------------------------------------------------
        str value;
    
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #HKHVTLX:
            case #HKLVGIR:      //SKS#VSTS:13917
            case #NLHV:         //SKS#VSTS:13918
                value = '';
                break;
            case #SEPA:
                value = 'SLEV';
                break;
            default:
                value = SKS_EFT_Format::getCodelookupvalue('ChrgBr', mSKS_EFT_FileDetail.RecId);
                break;
        }
    
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'ChrgBr', value, 0, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Purp</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Purp(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.86: Purp
        //              Cd
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodePurp;
        str value;
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GACH || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HVPS_GIR)
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurpPrtry', mSKS_EFT_FileDetail.RecId));

            if(value)
            {
                //          2.86: Purp
                nodePurp = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Purp'));

                //              Prtry
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePurp, 'Prtry', value);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYACHGIR)
        {
            //          2.86: Purp
            nodePurp = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Purp'));

            //              Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePurp, 'Cd', 'OTHR');
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGLVGIRO ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGHVLWIRE)//SKS_VSTS_13832
        {
            value = SKS_EFT_Format::getCodelookupvalue('SGPurpCd', mSKS_EFT_FileDetail.RecId);

            if(value)
            {
                //          2.86: Purp
                nodePurp = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Purp'));

                //              Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePurp, 'Cd', this.CharacterReplacement(value));
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKLVGIR)    //SKG#VSTS:13917
        {
            value = SKS_EFT_Format::getCodelookupvalue('HKPurpCd', mSKS_EFT_FileDetail.RecId);

            if(value)
            {
                //          2.86: Purp
                nodePurp = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Purp'));

                //              Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePurp, 'Cd', this.CharacterReplacement(value));
            }
        }
        else
        {
            //          2.86: Purp
            nodePurp = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Purp'));

            if(mSKS_EFT_AddendaFormats.AddendaType == SKS_EFT_AddendaFormatType::ChildSupPaym)
            {
                value = 'BECH';
            }
            else
            {
                value = 'TAXS';
            }
    
            //              Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePurp, 'Cd', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        LedgerJournalTrans ledgerJournalTrans;
        XmlElement nodeRmtInf;
        XmlElement nodeStrd;
        XmlElement nodeRfrdDocInf;
        XmlElement nodeRfrdDocAmt;
        XmlElement nodeTp;
        XmlElement nodeCdOrPrtry;
        XmlElement nodeCdtrRefInf;
    
        str invNumbers;
        str value, ustrdValue;
        Boolean firstRec = true;
        boolean firstUstrd = true;
        int     length, ustrdCount=1;

        str fik; //VSTS_11573.
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CCD && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PPD)
        {
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USSUA)//SKS_VSTS_13567
            {
                ustrdValue = this.CharacterReplacement(strLRTrim(msKS_EFT_FileDetail_Instructions.BankInst1 + ' ' + msKS_EFT_FileDetail_Instructions.BankInst2 + ' ' + msKS_EFT_FileDetail_Instructions.BankInst3 + ' ' +
                             msKS_EFT_FileDetail_Instructions.BankInst4 + ' ' + msKS_EFT_FileDetail_Instructions.BankInst5 + ' ' + msKS_EFT_FileDetail_Instructions.BankInst6 + ' ' +
                             msKS_EFT_FileDetail_Instructions.PmtInstText1 + ' ' + msKS_EFT_FileDetail_Instructions.PmtInstText2 + ' ' + msKS_EFT_FileDetail_Instructions.PmtInstText3 + ' ' +
                             msKS_EFT_FileDetail_Instructions.PmtInstText4));
                //          2.98: RmtInf
                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                if(firstUstrd)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'CFT|VENDOR ID|' + mSKS_EFT_FileDetail.AccountNum, 99, false);
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'CFT|Payment Number|' + mSKS_EFT_FileDetail.PaymentReference, 99, false);
                    
                    for(int i = 0; i < strLen(ustrdValue); i+= 99) //SKS#DevOps:17526
                    {
                        if(ustrdCount <= 29)
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(ustrdValue, i+1, 99), 0, false);
                            ustrdCount++;
                        }
                    }
                    firstUstrd = false;
                }
            }
            if (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CTX     ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK     ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DKFIK75 ||          //VSTS_11573
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DKFIK73 ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DKFIK71 ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKLVGIR ||          //SKS#VSTS:13918
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLLVSEPA||           //SKS#VSTS:13918
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USSUA)              //SKS#DevOps:17875
            {
                while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                {
                    if(invSKS_EFT_FileDetail.InvoiceNumber != '')
                    {
                        if(firstRec && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #USSUA)       //SKS#DevOps:17875
                        {
                            //          2.98: RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                            firstRec = false;
                        }
    
                        //              2.100: Strd
                        nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));
    
                        
                        if(invSKS_EFT_FileDetail.PaymId != '' && (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DKFIK75 ||
                                                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DKFIK73 ||
                                                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DKFIK71 ||
                                                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKLVGIR ||  //SKS#VSTS:13917
                                                        mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLLVSEPA))  //SKS#VSTS:13918
                        {
                            fik = invSKS_EFT_FileDetail.PaymId;
    
                            //            2.120: CdtrRefInf
                            nodeCdtrRefInf = nodeStrd.appendChild(xmlDoc.createElement('CdtrRefInf'));
    
                            //              2.121: Tp
                            nodeTp = nodeCdtrRefInf.appendChild(xmlDoc.createElement('Tp'));
    
                            //                  2.122: CdOrPrtry
                            nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));
    
                            //                      2.123: Cd
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'SCOR');
    
                            switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                            {
                                case #DKFIK75:
                                    fik = '75/' + invSKS_EFT_FileDetail.PaymId;
                                    break;
                                case #DKFIK73:
                                    fik = '73/' + invSKS_EFT_FileDetail.PaymId;
                                    break;
                                case #DKFIK71:
                                    fik = '71/' + invSKS_EFT_FileDetail.PaymId;
                                    break;
                            }

                            //               2.126: Ref
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', fik);
                        }                                                                                   //VSTS_11573 <--
                        else
                        {
                            //              2.101: RfrdDocInf
                            nodeRfrdDocInf = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocInf'));
    
                            //                  2.102: Tp
                            nodeTp = nodeRfrdDocInf.appendChild(xmlDoc.createElement('Tp'));
    
                            //                      2.103: CdOrPrtry
                            nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));
    
                            //                          2.104: Cd
                            if(invSKS_EFT_FileDetail.InvoiceSettleAmountCur > 0)
                            {
                                value = 'CREN';
                            }
                            else
                            {
                                value = 'CINV';
                            }
    
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', value);
    
                            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CTX && msKS_EFT_FileDetail_Instructions.PmtInstText1)
                            {
                                //              2.107: Number
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', this.CharacterReplacement(msKS_EFT_FileDetail_Instructions.PmtInstText1 + ' ' + invSKS_EFT_FileDetail.InvoiceNumber));
                            }
                            else                            
                            {
                                //              2.107: Number
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', this.CharacterReplacement(invSKS_EFT_FileDetail.InvoiceNumber));
                            }
    
                            //              2.108: RltdDt
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
    
                            //              2.109 RfrdDocAmt
                            nodeRfrdDocAmt = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocAmt'));
    
                            this.node_RmtInf_Amt(nodeRfrdDocAmt, invSKS_EFT_FileDetail);

                            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK)
                            {
                                this.get_POInfo(invSKS_EFT_FileDetail);
                                description = invSKS_EFT_FileDetail.InvoiceTransactionTxt; //SKS_VSTS_13281
                                if(pONum)
                                {
                                    //            2.120: CdtrRefInf
                                    nodeCdtrRefInf = nodeStrd.appendChild(xmlDoc.createElement('CdtrRefInf'));

                                    //               2.126: Ref
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', pONum);
                                }

                                //              2.129: AddtlRmtInf
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeStrd, 'AddtlRmtInf', description, 140, false);//DevOps20309
                            }    
                        }
                    }
                }
            }
            else if (mSKS_EFT_FileFormatPaymSpec.AddendaSpec)
            {
                //          2.98: RmtInf
                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
    
                //              2.99: Ustrd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', mSKS_EFT_Addenda.buildAddenda(), 140);
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CCDP    ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PPP || //SKS_VSTS_13280 -->
                    mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-MY')//SKS_VSTS_14040
            {
                invNumbers = this.getInvoiceNbrs();
                if(invNumbers)
                {
                    //          2.98: RmtInf
                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                
                    if( mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-MY')//SKS_VSTS_14040
                    {
                        //              2.99: Ustrd
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd',this.CharacterReplacement(invNumbers));
                    }
                    else
                    {
                        //              2.99: Ustrd
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd',this.CharacterReplacement(invNumbers), 71);
                    }
                }
            }//SKS_VSTS_13280 <--
            else if(mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-UK' &&        //SKS_VSTS_13997
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE_BT)
            {
                changecompany(mSKS_EFT_FileDetail.PaymentCompany)
                {
                    select firstonly PaymentNotes from ledgerJournalTrans where
                        ledgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;
                }

                if(ledgerJournalTrans.PaymentNotes)
                {
                    //          2.98: RmtInf
                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
    
                    //              2.99: Ustrd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(ledgerJournalTrans.PaymentNotes), 140);
                }
            }
            else
            {
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIR)
                {
                    select firstonly PaymentLineRecId from invSKS_EFT_FileDetail join PaymentNotes from ledgerJournalTrans
                        where mSKS_EFT_FileDetail.PaymentLineRecId == ledgerJournalTrans.RecId
                        && invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId;
                }
                else
                {
                    value = this.CharacterReplacement(msKS_EFT_FileDetail_Instructions.PmtInstText1 +
                                                      msKS_EFT_FileDetail_Instructions.PmtInstText2 +
                                                      msKS_EFT_FileDetail_Instructions.PmtInstText3 +
                                                      msKS_EFT_FileDetail_Instructions.PmtInstText4);
                }
    
                invNumbers = this.getInvoiceNbrs();

                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH:
                        length = 350;
                        break;
                    case #BACS:
                        length = 18;
                        break;
                    case #GACH:
                        length = 15;
                        break;
                    default:
                        length = 140;
                }
    
                if(invNumbers || value || ledgerJournalTrans.PaymentNotes)
                {
                    if(value != '' && invNumbers != '')
                    {
                        value += ' ';
                    }
    
                    if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIR)
                    {
                        value += ledgerJournalTrans.PaymentNotes + ' ' + invNumbers;
                    }
                    else
                    {
                        value += invNumbers;
                    }
    
                    //          2.98: RmtInf
                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
    
                    //              2.99: Ustrd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(strReplace(value, '\n', ' ')), 140);       //SKS#DevOps:18006
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>get_POInfo</Name>
				<Source><![CDATA[
    private void get_POInfo(SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        Container       companyInfo;
        VendInvoiceJour vendInvoiceJour;

        pONum       = '';
        companyInfo += _invSKS_EFT_FileDetail.InvoiceCompany;

        // See if PO exists
        if(conPeek(companyInfo, 1) != '')
        {
            select firstOnly crossCompany:companyInfo PurchId, InvoiceAccount, InvoiceDate, InvoiceId
            from  vendInvoiceJour
            where vendInvoiceJour.InvoiceAccount    ==  _invSKS_EFT_FileDetail.AccountNum &&
                  vendInvoiceJour.InvoiceDate       ==  _invSKS_EFT_FileDetail.InvoiceDate &&
                  vendInvoiceJour.InvoiceId         ==  _invSKS_EFT_FileDetail.InvoiceNumber &&
                  vendInvoiceJour.PurchId           !=  '';

            if(vendInvoiceJour)
            {
                pONum       = vendInvoiceJour.PurchId;
            }
        }

        return;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_UltmtCdtr</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_CdtTrfTxInf_UltmtCdtr
    /// </summary>
    /// <param name = "_nodeCdtTrfTxInf">_nodeCdtTrfTxInf</param>
    protected void node_CdtTrfTxInf_UltmtCdtr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.81: UltmtCdtr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeUltmtCdtr;
        XmlElement nodeUltmtCdtrId;
        XmlElement nodeOrgId;
        XmlElement nodeOthr;
        str value;
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CCD  &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CCDP &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PPD  &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CHP_WIR  &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #US_WIR)
        {
            value = msKS_EFT_FileDetail_CreditParty.CrePartySwift;
    
            if(value == '')
            {
                value = msKS_EFT_FileDetail_CreditParty.CrePartyBankId;
            }
    
            if(value != '' || msKS_EFT_FileDetail_CreditParty.CrePartyAcct != '')
            {
                //          2.81: UltmtCdtr
                nodeUltmtCdtr = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('UltmtCdtr'));
    
                //              Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeUltmtCdtr, 'Nm', this.CharacterReplacement(msKS_EFT_FileDetail_CreditParty.CrePartyName), 140, false);
    
                //              PstlAdr
                this.node_PstlAdr(nodeUltmtCdtr, msKS_EFT_FileDetail_CreditParty.CrePartyCountryRegionId, msKS_EFT_FileDetail_CreditParty.CrePartyAddr, '', msKS_EFT_FileDetail_CreditParty.CrePartyCity);
    
                //              Id
                nodeUltmtCdtrId = nodeUltmtCdtr.appendChild(xmlDoc.createElement('Id'));
    
                //                  OrgId
                nodeOrgId = nodeUltmtCdtrId.appendChild(xmlDoc.createElement('OrgId'));
    
                if(value != '')
                {
                    //                      BICOrBEI
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOrgId, 'BICOrBEI', value);
                }
    
    
                if(msKS_EFT_FileDetail_CreditParty.CrePartyAcct != '')
                {
                    //                      Othr
                    nodeOthr = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
                    //                          Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', msKS_EFT_FileDetail_CreditParty.CrePartyAcct);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_InstrForDbtrAgt</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_CdtTrfTxInf_InstrForDbtrAgt
    /// </summary>
    /// <param name = "_nodeCdtTrfTxInf">_nodeCdtTrfTxInf</param>
    protected void node_CdtTrfTxInf_InstrForDbtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.85: InstrForDbtrAgt
        //              InstrInf
        //------------------------------------------------------------------------------------------------------
        str value;
        str codes;
        
        msks_EFT_FileDetail_PaymentLine = sks_EFT_FileDetail_PaymentLine::find(mSKS_EFT_FileDetail.RecId);

        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InstrForDbtrAgt', mSKS_EFT_FileDetail.RecId));

        purpCode = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('INPurpCd', mSKS_EFT_FileDetail.RecId));

        if(purpCode &&
           mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-UK' &&
           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IN')
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'InstrForDbtrAgt', '/ACC/PURPOSE,IN,' + purpCode + ',' + this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId));
        }
        else if(value &&
           mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML' && (mSKS_EFT_FileFormatPaymSpec.PaymSpec == #WIRE     ||
            mSKS_EFT_FileFormatPaymSpec.PaymSpec == #WIRE_FX)  &&
           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IN')//DevOps21058
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'InstrForDbtrAgt', '/ACC/PURPOSE/IN,' + value + ',' + this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId));
        }
        else if(mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-MY')//SKS_VSTS_14040
        {
            codes = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ServiceLevelCode', mSKS_EFT_FileDetail.RecId));  //SKS_VSTS_14106
            
            if(codes || msks_EFT_FileDetail_PaymentLine.TransactionTxt)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'InstrForDbtrAgt', '/REG/' + codes + '/' + msks_EFT_FileDetail_PaymentLine.TransactionTxt);   //SKS_VSTS_14121
            }
        }
        else if(value    &&
            (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIR      ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FXW      ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FED_WIR  ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #US_WIR   ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHP_WIR  ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE     ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BOOK_WIRE||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE_BT  ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CB_TLX))//SKS_VSTS_13778
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'InstrForDbtrAgt', value);
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RgltryRptg</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RgltryRptg(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.89: RgltryRptg
        //              Dtls
        //                  Inf
        //------------------------------------------------------------------------------------------------------

        XmlElement nodeRgltryRptg;
        XmlElement nodeDtls;
        BankCentralBankPurposeName bankCodeName;
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BOOK_WIRE ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE_BT   ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE)
        {
            bankCodeName = this.getBankPurposeName();

            if(bankCodeName)
            {
                nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));
                nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', this.CharacterReplacement(bankCodeName), 35);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankPurposeName</Name>
				<Source><![CDATA[
    private BankCentralBankPurposeName getBankPurposeName()
    {
        msks_EFT_FileDetail_PaymentLine = sks_EFT_FileDetail_PaymentLine::find(mSKS_EFT_FileDetail.RecId);

        return this.CharacterReplacement(msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankPurposeCode</Name>
				<Source><![CDATA[
    private BankCentralBankPurposeCode getBankPurposeCode()
    {
        msks_EFT_FileDetail_PaymentLine = sks_EFT_FileDetail_PaymentLine::find(mSKS_EFT_FileDetail.RecId);

        return this.CharacterReplacement(msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChqInstr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChqInstr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.52 ChqInstr
        //              2.58 DlvryMtd
        //              2.65 ChqMtrtyDt
        //              2.69: PrtLctn
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeChqInstr;
        XmlElement nodeDlvryMtd;
        str value;


        //          2.52 ChqInstr
        nodeChqInstr = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('ChqInstr'));

        //              2.54 ChqNb
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'ChqNb', this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 0, false);

        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DlvryMtd', mSKS_EFT_FileDetail.RecId));

        //              2.58 DlvryMtd
        nodeDlvryMtd = nodeChqInstr.appendChild(xmlDoc.createElement('DlvryMtd'));

        if((value != 'EMAL' && value != 'FAXI') && value)
        {
            //                  2.60: Prtry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryMtd, 'Prtry', value, 0, false);
        }
        else
        {
            //                  2.60: Prtry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryMtd, 'Prtry', '00000', 0, false);
        }

        //                  FrmsCd
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'FrmsCd', this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('FrmsCd', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank)), 35, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_Id(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.79: Cdtr
        //          Id
        //              OrgId
        //                  Othr
        //                      Id
        //                      SchemeName
        //          or
        //              PrvtId
        //                  Othr
        //                      Id
        //                      SchemeName
        //------------------------------------------------------------------------------------------------------

        XmlElement nodeId;
        XmlElement nodeOrgPvtId;
        XmlElement nodeOthr;
        XmlElement nodeSchmeNm;
        str value;

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK        ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYHVLWIRE)
        {
            //          Id
            nodeId = _nodeCdtr.appendChild(xmlDoc.createElement('Id'));

            nodeOrgPvtId = nodeId.appendChild(xmlDoc.createElement('OrgId'));

            nodeOthr = nodeOrgPvtId.appendChild(xmlDoc.createElement('Othr'));

            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', this.CharacterReplacement(mSKS_EFT_FileDetail.AccountNum));
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYACHGIR)
        {
            value = SKS_EFT_Format::getCodelookupvalue('MYResident', mSKS_EFT_FileDetail.RecId);

            if(value)
            {
                //          Id
                nodeId = _nodeCdtr.appendChild(xmlDoc.createElement('Id'));

                nodeOrgPvtId = nodeId.appendChild(xmlDoc.createElement('OrgId'));

                nodeOthr = nodeOrgPvtId.appendChild(xmlDoc.createElement('Othr'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', this.CharacterReplacement(value));

                nodeSchmeNm = nodeOthr.appendChild(xmlDoc.createElement('SchmeNm'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Prtry', 'RESIDENT');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_XchgRateInf</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_CdtTrfTxInf_XchgRateInf
    /// </summary>
    /// <param name = "_nodeCdtTrfTxInf">_nodeCdtTrfTxInf</param>
    protected void node_CdtTrfTxInf_XchgRateInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.47: XchgRateInf
        //          2.49: RateTp
        //          2.50: CtrctId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeXchgRateInf;
        str value1, value2;
    
        value1 = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('XchgRateTp', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        value2 = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('XchgRateCtrctId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FXW &&
          (value1 != '' || value2 != ''))
        {
            //      2.47 XchgRateInf
            nodeXchgRateInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('XchgRateInf'));
    
            //          2.49: RateTp
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeXchgRateInf, 'RateTp', value1, 4,false);
    
            //          2.50: CtrctId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeXchgRateInf, 'CtrctId', value2, 35,false);
    
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_Id</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty_Id(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          9.1.12: Id
        //              9.1.13: OrgId
        //                  9.1.14: BICOrBEI
        //                  9.1.15: Othr
        //                      9.1.1.16: Id
        //                      9.1.1.17: SchmeNm
        //                          9.1.1.18: Code
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOther;
        XmlElement nodeSchmeNm;
        boolean    printInitgPtyId;
    
        str value;
    
        value = SKS_EFT_Format::getCodelookupvalue('CustomerId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);

        // Get SKS_EFT_FileFormatPaymSpec
        this.getSKS_EFT_FileFormatPaymSpec();

            
        SKS_EFT_FileDetail      locSKS_EFT_FileDetail;      //SKS_VSTS_13713--->

        select * from locSKS_EFT_FileDetail
            where locSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                  locSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                  locSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CHASE-XML-EMEA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SEPA:
                        printInitgPtyId = true;
                        break;
                }
                break;
            case 'US-CHASE-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #GACH:
                        printInitgPtyId = true;
                        break;
                }
                break;
            case 'US-CHASE-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #HVPS_GIR:
                        printInitgPtyId = true;
                        break;
                }
                break;
            case 'US-CHASE-XML':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CCD:
                    case #PPD:
                    case #CTX:
                    case #US_WIR:
                    case #CHP_WIR:
                    case #FED_WIR:
                    case #SEPA:
                        printInitgPtyId = true;
                        break;
                }
                break;
        }

        while(locSKS_EFT_FileDetail)
        {
            if(!strContains(locSKS_EFT_FileDetail.TransactionCode, #USSUA) && !printInitgPtyId)
            {
                next locSKS_EFT_FileDetail;
            }
            else
            {
                break;
            }
        }

        if(locSKS_EFT_FileDetail)
        {
            value = SKS_EFT_Format::getCodelookupvalue('CustomerId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);
        }
        //SKS_VSTS_13713<---

        if(!(CompanyInfo::find().Name()) || locSKS_EFT_FileDetail.TransactionCode == #USSUA || printInitgPtyId)
        {
            //          9.1.12: Id
            nodeId = _nodeInitgPty.appendChild(xmlDoc.createElement('Id'));
    
            //              9.1.13: OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            if(value == '')
            {
                //                  9.1.14: BICOrBEI
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOrgId, 'BICOrBEI', mSKS_EFT_FileDetail.BankBankSwiftNo, 35, false);
            }
            else
            {
                //                  9.1.15: Other
                nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
                //                      9.1.1.16: Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', this.CharacterReplacement(value), 35);
    
                //                      9.1.1.17: SchmeNm
                nodeSchmeNm = nodeOther.appendChild(xmlDoc.createElement('SchmeNm'));
    
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USSUA)
                {
                    //                          9.1.1.18: Code
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', 'CUST');
                }
                else
                {
                    //                          9.1.1.18: Code
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', 'BANK');
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr, boolean _CustomAddress = false)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodePstlAdr;
    
        if(!_customAddress)
        {
            if(mRemittanceZipCode != '' || mRemittanceCity != '' || mRemittanceState != '' || mRemittanceCountryRegionId != '' || mRemittanceAdrline1 != '' || mRemittanceAdrline2 != '')
            {
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIR    || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FXW     ||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #US_WIR ||mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHP_WIR ||
                   mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FED_WIR )
                {
                    //      PstlAdr
                    nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));
    
                    //          PstCd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'PstCd', mRemittanceZipCode, 16, false);
    
                    //          TwnNm
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', this.CharacterReplacement(mRemittanceCity), 35, false);
    
                    //          CtrySubDvsn
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'CtrySubDvsn', mRemittanceState, 35, false);
    
                    //          Ctry
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', mRemittanceCountryRegionId, 2, false);
    
                    //          AdrLine
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(mRemittanceAdrline1), 35, false);
    
                    //          AdrLine 2
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(mRemittanceAdrline2), 35, false);
    
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK)        //SKS_DevOps_19107
                {
                    //      PstlAdr
                    nodePstlAdr = _nodeCdtr.appendChild(xmlDoc.createElement('PstlAdr'));
    
                    //          PstCd
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'PstCd', mRemittanceZipCode, 16, false);
    
                    //          TwnNm
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', this.CharacterReplacement(mRemittanceCity), 35, false);
    
                    //          CtrySubDvsn
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'CtrySubDvsn', mRemittanceState, 35, false);
    
                    //          Ctry
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', mRemittanceCountryRegionId, 2, false);

                    //          AdrLine
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(mRemittanceAdrline1), 35, false);
    
                    if(strLen(mRemittanceAdrLine1) > 35)
                    {
                        //          AdrLine 2
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(subStr(mRemittanceAdrline1, 36, 35) + mRemittanceAdrline2), 35, false);
                    }
                    else
                    {
                        //          AdrLine 2
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(mRemittanceAdrline2), 35, false);
                    }

                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BOOK_WIRE ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE_BT   ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH       ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BACS      ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UK_FP     ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE      ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GACH      ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYHVCBR   ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGHVCBR   ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYHVBKTR  ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGHVBKTR  ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYHVLWIRE ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGHVLWIRE ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HVPS_GIR  ||   //SKS#DevOps:17319
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYACHGIR  ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKHVTLX   ||//SKS_VSTS_13917
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKLVGIR   ||//SKS_VSTS_13917
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLHV      ||//SKS_VSTS_13918
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLLVSEPA  ||//SKS_VSTS_13918
                    (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA && mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-EMEA') ||
                    (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CB_TLX && mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-UK'))//SKS_VSTS_13872
                {
                    this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrLine1, mRemittanceZipCode, mRemittanceCity, 35, mRemittanceAdrLine2, mRemittanceState, true);
                }
                else if( mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USSUA)//SKS_VSTS_13362 -->
                {
                    this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, '', '');
                }
                //SKS_VSTS_13362 <--
                else
                {
                    this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_ChrgBr(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.24 ChrgBr
        //------------------------------------------------------------------------------------------------------
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLLVSEPA)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'ChrgBr', 'SLEV');
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'ChrgBr', SKS_EFT_Format::getCodelookupvalue('ChrgBr', mSKS_EFT_FileDetail.RecId),0,false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Id(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOthr;
        XmlElement nodeSchmeNm;
    
        if(!(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIR      ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FXW      ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #US_WIR   ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHP_WIR  ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FED_WIR  ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK      ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE     ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE_BT  ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BOOK_WIRE || 
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYHVCBR ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGHVCBR ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYHVBKTR ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGHVBKTR ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYHVLWIRE ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGHVLWIRE ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYACHGIR ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USSUA    ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HVPS_GIR ||  //SKS#DevOps:17319
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGLVGIRO ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CB_TLX   ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKHVTLX  ||//SKS_VSTS_13917
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLHV )   &&//SKS_VSTS_13918
             mSKS_EFT_FileDetail.FileACHCompanyId != '')
        {
            //          Id
            nodeId = _nodeDbtr.appendChild(xmlDoc.createElement('Id'));
    
            //              OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            //                  Othr
            nodeOthr = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
            //                      Id
            if (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CZACH ||        //VSTS_11573 -->
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HUACH ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLACH ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHACH ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DKFIK75 ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DKFIK73 ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DKFIK71 ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DK356   ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPMTACT ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLACHTAX ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLACHSS  ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZALVC ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKLVGIR  || //SKS#VSTS:13917
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLLVSEPA || //SKS#VSTS:13918
                (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA && mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-UK'))//SKS_VSTS_13052              //VSTS_11573<---
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.FileACHCompanyId, 35);
            }
            else
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.FileACHCompanyId, 10);
            }
            if(mSKS_EFT_FileFormatPaymSpec.FormatId != 'US-CHASE-XML-HK') //SKS#VSTS:13917
            {
                //                      SchmeNm
                nodeSchmeNm = nodeOthr.appendChild(xmlDoc.createElement('SchmeNm'));
    
                if (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLACHTAX ||         //VSTS_11573
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLACHSS)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', 'TXID', 4);
                }
                else
                {
                    //                          Prtry
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Prtry', 'JPMCOID', 10);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_PstlAdr(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #US_WIR   ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHP_WIR  ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FED_WIR  ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK      ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH      ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE     ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GACH     ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BACS     ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UK_FP    ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HVPS_GIR  ||   //SKS#DevOps:17319
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE_BT  ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BOOK_WIRE  ||
          (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA && (mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-UK' ||
            mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-EMEA')))//SKS_VSTS_13152
        {
            this.node_PstlAdr(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity, 0, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2, mSKS_EFT_FileDetail_BankAccount.WOrdPartyState, true);
        }
        else if((mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-MY'  || 
                 mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-SG') ||
                (mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-UK' &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CB_TLX)    ||//SKS_VSTS_13872        
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKHVTLX    ||//SKS_VSTS_13917
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKLVGIR    ||//SKS_VSTS_13917
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLHV       ||//SKS_VSTS_13918
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLLVSEPA)    //SKS_VSTS_13918
        {
            this.node_PstlAdr(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, '', '', '', 0, '', '', true);
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USSUA)//SKS_VSTS_13362
        {
            this.node_PstlAdr(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId,'','','',false);
        }
        else
        {
            super(_nodeDbtr);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: DbtrAcct
        //          Id
        //              IBAN
        //              Othr
        //          Ccy
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;
        XmlElement nodeOthr;
        XmlElement nodeDdtrAcctTp;
        int        length = 0;
        str value;
    
        //      2.20: DbtrAcct
        nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
        //          Id
        nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
    
        if(mSKS_EFT_FileDetail.BankBankIBAN && (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA      ||
                                      mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE_BT   ||
                                      mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BOOK_WIRE ||
                                      mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH       ||
                                      mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BACS      ||
                                      mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UK_FP     ||
                                      mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CZACH     ||      //VSTS_11573 -->
                                      mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HUACH     ||
                                      mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHACH     ||
                                      mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DKFIK75   ||
                                      mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DKFIK73   ||
                                      mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DKFIK71   ||
                                      mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DK356     ||
                                      mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPMTACT  ||
                                      mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLACHTAX  ||
                                      mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLACHSS   ||//VSTS_11573 <--
                                      mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CB_TLX    || //SKS_VSTS_13872
                                      mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLLVSEPA  ||//SKS_VSTS_13918
                                      mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLLVSEPA))//SKS_VSTS_13918
        {
            //              IBAN
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN', mSKS_EFT_FileDetail.BankBankIBAN);
        }
        else
        {
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #US_WIR  ||
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHP_WIR)
            {
                length = 9;
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE_BT   ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BOOK_WIRE ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ACH       ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #WIRE      ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #GACH      ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK       ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA      ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CZACH     ||    //VSTS_11573 --->
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HUACH     ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLACH     ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHACH     ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DKFIK75   ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DKFIK73   ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DKFIK71   ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DK356     ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPMTACT  ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLACHTAX  ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLACHSS || 
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYHVCBR ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGHVCBR ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYHVBKTR ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGHVBKTR ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYHVLWIRE ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGHVLWIRE ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HVPS_GIR ||  //SKS#DevOps:17319
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MYACHGIR ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SGLVGIRO ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USSUA ||
                   ((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CB_TLX) && mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-UK')|| //VSTS_11573 & SKS_VSTS_13152<---
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKHVTLX   || //SKS_VSTS_13917
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKLVGIR   || //SKS_VSTS_13917
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLHV      || //SKS_VSTS_13918
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLLVSEPA  || //SKS_VSTS_13918
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #FED_WIR)     //SKSDevOps#21705
            {
                length = 34;
            }
    
            //              Othr
            nodeOthr = nodeDbtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
            //                  Id
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USSUA)                                               //SKS_VSTS_13632
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', this.node_PmtInf_DbtrAcct_Id_USSUA(), length);
            }
            else
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.BankBankAcct, length);
            }
        }

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USSUA)
        {
            value = SKS_EFT_Format::getCodelookupvalue('DbtrTp', mSKS_EFT_FileDetail.RecId);

            nodeDdtrAcctTp = nodeDbtrAcct.appendChild(xmlDoc.createElement('Tp'));
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDdtrAcctTp, 'Prtry', this.CharacterReplacement(value));
        }

        //          Ccy
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcct, 'Ccy', mSKS_EFT_FileDetail.CurrencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Nm</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Nm(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          Nm
        //------------------------------------------------------------------------------------------------------
        int length;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode )
        {
            case #USSUA :
            case #HVPS_GIR:   //SKS#DevOps:15428
                length = 140;
                break;
            default :
                length = 70;
                break;
        }
        //          Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeDbtr, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName), length, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.21: DbtrAgt
        //          FinInstnId
        //              BIC
        //              ClrSysMmbId
        //                  MmbId
        //              PstlAdr
        //                  Ctry
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmBId;
        XmlElement nodePstlAdr;
        XmlElement nodeOther;
        int        length = 0;
        LogisticsAddressCountryRegionISOCode countryRegion;
        
        //      2.21: DbtrAgt
        nodeDbtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAgt'));
    
        //          FinInstnId
        nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
        if(mSKS_EFT_FileDetail.BankBankSwiftNo != '')
        {
            //                  BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.BankBankSwiftNo, 0, false);
        }
    
        if(mSKS_EFT_FileDetail.BankBankTransit != ''                    &&
          ((mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML'  &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode != #USSUA)      ||      //SKS_DevOps_17729
          ((mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-CA'   ||
            mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-NO'   ||
            mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-EMEA' ||
           (mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML'  &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USSUA)      ||      //SKS_DevOps_17729
            (mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-UK'  &&
             mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA &&
             mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CB_TLX))   &&
            mSKS_EFT_FileDetail.BankBankSwiftNo == '')))
        {
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK || 
               mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USSUA)
            {
                length = 9;
            }
    
            //              ClrSysMmbId
            nodeClrSysMmBId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
            //              MmbId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmBId, 'MmbId', mSKS_EFT_FileDetail.BankBankTransit, length, false);
        }
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA ||
          (mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-UK' &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA))
        {
            //              PstlAdr
            nodePstlAdr = nodeFinInstnId.appendChild(xmlDoc.createElement('PstlAdr'));

            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UK_FP)//SKS_VSTS_13517 -->
            {
                select firstonly msks_EFT_FileDetail_BankAddress where
                msks_EFT_FileDetail_BankAddress.RefRecId == mSKS_EFT_FileDetail.RecID
                && msks_EFT_FileDetail_BankAddress.AddressType == SKS_EFT_AddressType::BankAddress;
                //                  Ctry
                countryRegion = this.getLogisticsAddressCountryISO(msks_EFT_FileDetail_BankAddress.CountryRegionId);
            }
            //SKS_VSTS_13517 <--
            else
            {
                //                  Ctry
                countryRegion = this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId);
            }
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', countryRegion);
        }

        if ((mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-CHASE-XML-UK' &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA) && mSKS_EFT_FileDetail.BankBankSwiftNo == '')
        {
            //              Other
            nodeOther = nodeFinInstnId.appendChild(xmlDoc.createElement('Othr'));
            
            //              Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', 'NOTPROVIDED');
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.6: PmtTpInf
        //          2.8: SvcLvl
        //              2.9: Cd
        //          2.11: LclInstrm
        //              2.12: Cd
        //          2.14: CtgyPurp
        //              2.15: Cd
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodePmftTpInf;
        XmlElement nodeSvcLvl;
        XmlElement nodeLclInstrm;
        XmlElement nodeCtgyPurp;
        str value;
    
        if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::No && subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK')
        {
            //      2.6: PmtTpInf
            nodePmftTpInf = _nodePmtInf.appendChild(xmlDoc.createElement('PmtTpInf'));
    
            //              2.9: Cd
            //          2.8: SvcLvl
            nodeSvcLvl = nodePmftTpInf.appendChild(xmlDoc.createElement('SvcLvl'));
            this.node_PmtInf_PmtTpInf_SvcLvl_Cd(nodeSvcLvl);
    
    
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #WIR       &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #FXW       &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA      &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #US_WIR    &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CHP_WIR   &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #FED_WIR   &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ACH       &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #WIRE_BT   &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BACS      &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #UK_FP     &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #WIRE      &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #GACH      &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BOOK_WIRE &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CZACH     &&      //VSTS_11573 -->
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #HUACH     &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PLACH     &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CHACH     &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #DKFIK75   &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #DKFIK73   &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #DKFIK71   &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #DK356     &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPMTACT  &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PLACHTAX  &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PLACHSS   && 
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MYHVCBR   &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SGHVCBR   &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MYHVBKTR  &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SGHVBKTR  &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #HVPS_GIR  &&  //SKS#DevOps:17319
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MYHVLWIRE && 
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SGHVLWIRE &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #MYACHGIR  &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SGLVGIRO  &&     //VSTS_11573 <--
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #UK_FP     &&//SKS_VSTS_13517
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #HKHVTLX   &&//SKS_VSTS_13917
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #HKLVGIR   &&//SKS_VSTS_13917
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #NLHV      &&//SKS_VSTS_13918
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CB_TLX    &&//SKS#DevOps:18164
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #NLLVSEPA)   //VSTS_13918
            {
                //          2.11: LclInstrm
                nodeLclInstrm = nodePmftTpInf.appendChild(xmlDoc.createElement('LclInstrm'));
    
                //              2.12: Cd
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CCDP:
                    case #CCD:
                    case #CCDP_TAX:
                    case #ZALVC:            //VSTS_11573
                        value = 'CCD';
                        break;
                    case #PPP:
                        value = 'PPD';
                        break;
                    case #USSUA:
                        value = '950';
                        break;
                    default:
                        value = mSKS_EFT_FileFormatPaymSpec.TransactionCode;
                }
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USSUA)           //SKS_VSTS_13713
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Prtry', value);
                }
                else
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Cd', value);
                }
            }
    
            if (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLACHTAX ||         //VSTS_11573
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PLACHSS)
            {
                value = 'TAXS';
            }
            else if (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKHVTLX)            //SKS#VSTS:13917
            {
                value = SKS_EFT_Format::getCodelookupvalue('HKCtgyPurp', mSKS_EFT_FileDetail.RecId);
            }
            else if (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLHV)            //SKS#VSTS:13917
            {
                value = SKS_EFT_Format::getCodelookupvalue('NLCtgyPurp', mSKS_EFT_FileDetail.RecId);
            }
            else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USSUA)//SKS_VSTS_13362 -->
            {
                value = 'CCRD';
            }//SKS_VSTS_13362 <--
            else
            {
                value = SKS_EFT_Format::getCodelookupvalue('CtgyPurp', mSKS_EFT_FileDetail.RecId);
            }
    
            if(value != '')
            {
                //          2.14: CtgyPurp
                nodeCtgyPurp = nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
                //              2.15: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', value);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl_Cd</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl_Cd(XmlElement _nodeSvcLvl)
    {
        //------------------------------------------------------------------------------------------------------
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
    
    
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #CCD:
            case #CCDP:
            case #PPD:
            case #CTX:
            case #PPP:
            case #ACH:
            case #BACS:
            case #CCDP_TAX:
            case #GACH:
            case #CZACH:    //VSTS_11573 -->
            case #HUACH:
            case #PLACH:
            case #CHACH:
            case #DKFIK75:
            case #DKFIK73:
            case #DKFIK71:
            case #DK356:
            case #SEPMTACT:
            case #PLACHTAX:
            case #PLACHSS:
            case #ZALVC:    //VSTS_11573 <---
            case #MYACHGIR :
            case #SGLVGIRO :
            case #USSUA://SKS_VSTS_13362
            case #HKLVGIR:  //SKS_VSTS_13917
                //              2.9: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Cd', 'NURG');
                break;
            case #WIR:
            case #FXW:
            case #US_WIR:
            case #CHP_WIR:
            case #FED_WIR:
            case #WIRE_BT:
            case #WIRE:
            case #MYHVCBR:
            case #SGHVCBR:
            case #MYHVLWIRE:
            case #SGHVLWIRE:
            case #HVPS_GIR:         //SKS#DevOps:17319
            case #CB_TLX ://SKS_VSTS_13872
            case #HKHVTLX://SKS_VSTS_13917
            case #NLHV://SKS_VSTS_13918
                //              2.9: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Cd', 'URGP');
                break;
            case #SEPA:
            case #NLLVSEPA://SKS_VSTS_13918
                //              2.9: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Cd', 'SEPA');
                break;
            case #BOOK_WIRE:
            case #MYHVBKTR:
            case #SGHVBKTR:
                //              2.9: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Cd', 'BKTR');
                break;
            case #UK_FP:
                //              2.9: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Cd', 'URNS');//SKS_VSTS_13728
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_CtgyPurp</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_CtgyPurp(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.14: CtgyPurp
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCtgyPurp;
        str value;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-CHASE-XML-CN':   //SKG#DevOps:17319
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #HVPS_GIR:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CtgyCd', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
        }
    
        if(value)
        {
            //          2.14: CtgyPurp
            nodeCtgyPurp = _nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
            //              2.15: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_RmtInf_Amt</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_RmtInf_Amt
    /// </summary>
    /// <param name = "_nodeRfrdDocAmt">_nodeRfrdDocAmt</param>
    /// <param name = "_invSKS_EFT_FileDetail">_invSKS_EFT_FileDetail</param>
    protected void node_RmtInf_Amt(XmlElement _nodeRfrdDocAmt, SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.42: Amt
        //              DuePyblAmt
        //              DscntApldAmt
        //              CdtNoteAmt
        //              TaxAmt
        //              RmtdAmt
        //------------------------------------------------------------------------------------------------------
        XmlElement  currentElement;
        AmountMST   gross = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        AmountMST   discount = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
        AmountMST   remitted;
        AmountMST   creditNote;

        if(_invSKS_EFT_FileDetail.InvoiceSettleAmountCur > 0)
        {
            gross = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            discount = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
            remitted = 0;
            creditNote = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        }
        else
        {
            gross = (_invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur) * -1;
            discount = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur * -1;
            remitted = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1;
            creditNote = 0;
        }

        //      DuePyblAmt
        currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DuePyblAmt', num2str(gross,0,2,1,0));
        SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);

        //      DscntApldAmt
        currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DscntApldAmt', num2str(discount,0,2,1,0));
        SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);

        if(_invSKS_EFT_FileDetail.InvoiceSettleAmountCur > 0)
        {
            //      CdtNoteAmt
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'CdtNoteAmt', num2str(creditNote,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
        else
        {
            //      RmtdAmt
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'RmtdAmt', num2str(remitted,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt1</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_IntrmyAgt1(XmlElement _nodeCdtTrfTxInf)
    {
        XmlElement nodeIntrmyAgt1;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
        XmlElement nodeBrnchId;

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #USSUA)
        {
            if(mSKS_EFT_FileDetail_Intermediary.IntBankSwift != '' || mSKS_EFT_FileDetail_Intermediary.IntBankId != '')
            {
                //          2.71: IntrmyAgt1
                nodeIntrmyAgt1 = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt1'));
    
                //              FinInstnId
                nodeFinInstnId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('FinInstnId'));
    
                if(mSKS_EFT_FileDetail_Intermediary.IntBankSwift != '')
                {
                    //                  BIC
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail_Intermediary.IntBankSwift, 0, false);
                }
    
                //                  ClrSysMmbId
                if(mSKS_EFT_FileDetail_Intermediary.IntBankId != '')
                {
                    nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                    //                      MmbId
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail_Intermediary.IntBankId, 0, false);
                }
    
                //                  PstlAdr
                this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId, '', '','');
            }
        }
        else if((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKHVTLX|| mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HVPS_GIR ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #NLHV)   &&   //SKS#VSTS:13918 //SKS#DevOps:17319
               (mSKS_EFT_FileDetail_Intermediary.IntBankSwift   ||
                mSKS_EFT_FileDetail_Intermediary.IntBankId      ||
                mSKS_EFT_FileDetail_Intermediary.IntBankName    ||
                mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId))
        {
            //          2.71: IntrmyAgt1
            nodeIntrmyAgt1 = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt1'));
    
            //              FinInstnId
            nodeFinInstnId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('FinInstnId'));
            
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #HKHVTLX)
            {
                if(mSKS_EFT_FileDetail_Intermediary.IntBankSwift)
                {
                    //                  BIC
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail_Intermediary.IntBankSwift, 0, false);
                }
                else
                {
                    //                  Nm
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankName), 35, false);

                    //                  PstlAdr
                    this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId, '', '', '');
                }
            }
            else
            {
                if(mSKS_EFT_FileDetail_Intermediary.IntBankSwift)
                {
                    //                  BIC
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail_Intermediary.IntBankSwift, 0, false);
                }
                else if(mSKS_EFT_FileDetail_Intermediary.IntBankId != '')
                {
                    nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                    //                      MmbId
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail_Intermediary.IntBankId, 0, false);
                }
                //                  PstlAdr
                this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId, '', '', '');
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CCD     &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #HKHVTLX &&
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #HKLVGIR && //SKS#VSTS:13917
                mSKS_EFT_FileFormatPaymSpec.TransactionCode != #NLLVSEPA) //SKS#VSTS:13918
        {
            if(mSKS_EFT_FileDetail_Intermediary.IntBankSwift != '' || mSKS_EFT_FileDetail_Intermediary.IntBankId != '')
            {
                //          2.71: IntrmyAgt1
                nodeIntrmyAgt1 = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt1'));
    
                //              FinInstnId
                nodeFinInstnId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('FinInstnId'));
    
                if(mSKS_EFT_FileDetail_Intermediary.IntBankSwift != '')
                {
                    //                  BIC
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail_Intermediary.IntBankSwift, 0, false);
                }
    
                //                  ClrSysMmbId
                if(mSKS_EFT_FileDetail_Intermediary.IntBankId != '')
                {
                    nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                    //                      MmbId
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail_Intermediary.IntBankId, 0, false);
                }
    
                //                  Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankName), 140, false);
    
                //                  PstlAdr
                this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId, mSKS_EFT_FileDetail_Intermediary.IntBankAddr + '' + mSKS_EFT_FileDetail_Intermediary.IntBankAddr2, '', mSKS_EFT_FileDetail_Intermediary.IntBankCity);
    
                //              BrnchId
                if(mSKS_EFT_FileDetail_Intermediary.IntBankBranch != '')
                {
                    nodeBrnchId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('BrnchId'));
                    //              Id
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBrnchId, 'Id', this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankBranch));
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Amt</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_CdtTrfTxInf_Amt
    /// </summary>
    /// <param name = "_nodeCdtTrfTxInf">_nodeCdtTrfTxInf</param>
    protected void node_CdtTrfTxInf_Amt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.42: Amt
        //              2.43: InstdAmt
        //------------------------------------------------------------------------------------------------------
        XmlElement currentElement;
        XmlElement nodeAmt;
    
        //          2.42: Amt
        nodeAmt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Amt'));
    
        //              2.43: InstdAmt
        if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'HUF')                //SKS#DevOps:18164
        {
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAmt, 'InstdAmt',
                num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,0,0,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', mSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
        else
        {
            if(mSKS_EFT_FileDetail.FormatId == 'US-CHASE-XML' && mSKS_EFT_FileDetail.TransactionCode == #FXW && mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId == 'JPN')
            {
                //              2.43: InstdAmt
                currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAmt, 'InstdAmt',
            num2str(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1), 0, 0, 0, 0));
            }
            else
            {
                currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAmt, 'InstdAmt',
            num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0));
            }

            if((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CCD ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PPD ||
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CTX ) && mSKS_EFT_FileDetail.RecordType == SKS_EFT_RecordType::PreNote)
            {
                SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', 'USD');
            }
            else
            {
                SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', mSKS_EFT_FileDetail.PaymentCurrencyCode);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        CompanyBankAccountId    prevBankAccountId;
        PaymMode                prevPaymMode;
        PaymSpec                prevPaymSpec;
        CurrencyCode            prevCurrency;
        SKS_EB_Date             prevEffectiveDate;
    
        xmlDoc = XmlDocument::newBlank(this.getEncoding());
    
        this.node_MessageRoot();
    
        this.node_GrpHdr();
    
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            // Get Bank account
            mSKS_EFT_FileDetail_BankAccount = SKS_EFT_FileDetail_BankAccount::find(mSKS_EFT_FileDetail.RecId);
    
            if(prevBankAccountId != mSKS_EFT_FileDetail.BankAccountId   ||
               prevPaymMode != mSKS_EFT_FileDetail.PaymMode             ||
               prevPaymSpec != mSKS_EFT_FileDetail.PaymSpec             ||
               prevCurrency != mSKS_EFT_FileDetail.PaymentCurrencyCode  ||
               prevEffectiveDate != mSKS_EFT_FileDetail.EffectiveDate
               )
            {
                this.node_PmtInf();
    
                prevBankAccountId = mSKS_EFT_FileDetail.BankAccountId;
                prevPaymMode = mSKS_EFT_FileDetail.PaymMode;
                prevPaymSpec = mSKS_EFT_FileDetail.PaymSpec;
                prevCurrency = mSKS_EFT_FileDetail.PaymentCurrencyCode;
                prevEffectiveDate = mSKS_EFT_FileDetail.EffectiveDate;
            }
    
            // Get RemittanceAddress
            this.getRemittanceAddress((mSKS_EFT_FileFormatPaymSpec.UseCheckNumber || subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) == 'CHK'));
    
            //Get Addenda information
            this.setAddenda();
    
            //For AP
            this.node_CdtTrfTxInf();
    
            next mSKS_EFT_FileDetail;
        }
        this.fileWrite(xmlDoc.toString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRemittanceAddress</Name>
				<Source><![CDATA[
    void getRemittanceAddress(boolean UseCheckNum)
    {
        //LedgerJournalTrans      lLedgerJournalTrans;
        //LogisticsLocation       lLogisticsLocation;
        //LogisticsPostalAddress  lRemittancePostalAddress;
        //Array vendAddrArray = new Array(Types::String);
    
        /*if(UseCheckNum && mSKS_EFT_FileDetail.PaymentLineRecId != 0)
        {
            select * from lRemittancePostalAddress join  RemittanceAddress from lLedgerJournalTrans
                    where lRemittancePostalAddress.Location == lLedgerJournalTrans.RemittanceLocation
                        && lLedgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;
    
            lLogisticsLocation = LogisticsLocation::find(lLedgerJournalTrans.RemittanceLocation);
    
            //Populate Remittance Information
            mRemittanceName = lLogisticsLocation.Description;
    
            vendAddrArray = SKS_PP_50000Bas::StreetToAddressLineArray(lRemittancePostalAddress.Street,2);
    
            mRemittanceAdrLine1 = '';
            mRemittanceAdrLine2 = '';
    
            if(vendAddrArray.exists(1))
            {
                mRemittanceAdrLine1 = vendAddrArray.value(1);
                if (vendAddrArray.exists(2))
                {
                    mRemittanceAdrLine2 = vendAddrArray.value(2);
                }
            }
            mRemittanceCity = this.CharacterReplacement(lRemittancePostalAddress.City);
            mRemittanceState = this.CharacterReplacement(lRemittancePostalAddress.State);
            mRemittanceZipCode = this.CharacterReplacement(lRemittancePostalAddress.ZipCode);
            mRemittanceCountryRegionId = this.getLogisticsAddressCountryISO(lRemittancePostalAddress.CountryRegionId);
        }
        else
        {*/
        mRemittanceName = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName);
        mRemittanceAdrLine1 = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr);
        mRemittanceAdrLine2 = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr2);
        mRemittanceCity = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneCity);
        mRemittanceState = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneState);
        mRemittanceZipCode = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneZipPostal);
        mRemittanceCountryRegionId = this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId);
        //}
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
            join mSKS_EFT_FileDetail_BenBank
            join mSKS_EFT_FileDetail_Intermediary
            join mSKS_EFT_FileDetail_CreditParty
            join msKS_EFT_FileDetail_Instructions
              order by mSKS_EFT_FileDetail.PaymentCompany, //SKS_VSTS_12798
        mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_BenBank.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_Intermediary.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_CreditParty.RefRecId &&
                mSKS_EFT_FileDetail.RecId == msKS_EFT_FileDetail_Instructions.RefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct_Id_USSUA</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_PmtInf_DbtrAcct_Id_USSUA
    /// </summary>
    /// <returns>str</returns>
    protected str node_PmtInf_DbtrAcct_Id_USSUA()
    {
        SKS_PP_Setup lSKS_PP_Setup;
        select firstonly RegCustomerID from lSKS_PP_Setup;        
        msks_EFT_FileDetail_Mandate = SKS_EFT_FileDetail_Mandate::find(mSKS_EFT_FileDetail.RecId);

        if(lSKS_PP_Setup.RegCustomerID == '66b3cd')           //Envista customer change //DevOps_18790
        {
            return msks_EFT_FileDetail_Mandate.DirectDebitId;
        }
        else
        {
            return mSKS_EFT_FileDetail_BankAccount.WOrdPartyId;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>