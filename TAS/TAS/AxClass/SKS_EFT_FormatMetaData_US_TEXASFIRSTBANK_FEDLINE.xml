<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_TEXASFIRSTBANK_FEDLINE</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_TEXASFIRSTBANK_FEDLINE
/// </summary>
public class SKS_EFT_FormatMetaData_US_TEXASFIRSTBANK_FEDLINE Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20221212';
        conFormatID = ['US-TEXASFIRSTBANK-FEDLINE'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - Texas First Bank - Fed Line',0,'','','US-TEXASFIRSTBANK-FEDLINE',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-TEXASFIRSTBANK-FEDLINE',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch(_formatID)
        {
        }
        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,ilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNaha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement

        switch (_formatID)
        {
            case ('US-TEXASFIRSTBANK-FEDLINE'):
                paymSpecList = this.getPaymSpecsMetaData_US_TEXASFIRSTBANK_FEDLINE();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_TEXASFIRSTBANK_FEDLINE</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_TEXASFIRSTBANK_FEDLINE()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Fund Transfer',1,'FT','','FT','TRADE PAY',0,'US-TEXASFIRSTBANK-FEDLINE',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-TEXASFIRSTBANK-FEDLINE'):
                notesList = this.getNotesMetaData_US_TEXASFIRSTBANK_FEDLINE();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_TEXASFIRSTBANK_FEDLINE</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_TEXASFIRSTBANK_FEDLINE()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-TEXASFIRSTBANK-FEDLINE','FT','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.::-Group header > Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-TEXASFIRSTBANK-FEDLINE'):
                validationsList = this.getValidationsMetaData_US_TEXASFIRSTBANK_FEDLINE();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_TEXASFIRSTBANK_FEDLINE</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_TEXASFIRSTBANK_FEDLINE()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-TEXASFIRSTBANK-FEDLINE','FT','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','{3100} > SENDER DI NUMBER','Bank Routing Number',0,'RegistrationNum','','','3',0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-TEXASFIRSTBANK-FEDLINE','FT','','Vendor Bank Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','{3400} > RECEIVER DI NUMBER','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-TEXASFIRSTBANK-FEDLINE','FT','','Beneficiary Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','{3400} > RECEIVER SHORT NAME','Name related to Vendor','16','WBeneName','','',0,0,1,'18',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-TEXASFIRSTBANK-FEDLINE','FT','','Beneficiary Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','{4200} > BENEFICIARY NAME','Account Number related to vendor','9','AccountNum','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-TEXASFIRSTBANK-FEDLINE','FT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','{4200} > BENEFICIARY ADDRESS LINE1','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-TEXASFIRSTBANK-FEDLINE','FT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','{4200} > BENEFICIARY ADDRESS LINE2','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-TEXASFIRSTBANK-FEDLINE','FT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','{4200} > BENEFICIARY ADDRESS LINE3','City related to vendor','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-TEXASFIRSTBANK-FEDLINE','FT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','{4200} > BENEFICIARY ADDRESS LINE3','Country Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-TEXASFIRSTBANK-FEDLINE','FT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','{4200} > BENEFICIARY ADDRESS LINE3','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-TEXASFIRSTBANK-FEDLINE','FT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','{5000} > ORIGINATOR IDENTIFIER','Bank account number ',0,'AccountNum','','','3',1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-TEXASFIRSTBANK-FEDLINE','FT','','Orogonator Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','{5000} > ORIGINATOR NAME','Name related to bank','15','WOrdPartyName','','','3',0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-TEXASFIRSTBANK-FEDLINE','FT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','{5000} > ORIGINATOR ADDRESS LINE1','Address related to bank','15','WOrdPartyAddr','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-TEXASFIRSTBANK-FEDLINE','FT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','{5000} > ORIGINATOR ADDRESS LINE2','Address related to bank','15','WOrdPartyAddr2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-TEXASFIRSTBANK-FEDLINE','FT','','City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','{5000} > ORIGINATOR ADDRESS LINE3','TownName related to bank','15','WOrdPartyCity','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-TEXASFIRSTBANK-FEDLINE','FT','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','{5000} > ORIGINATOR ADDRESS LINE3','Bank Country Sub Division','15','WOrdPartyState','','',1,'2',1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-TEXASFIRSTBANK-FEDLINE','FT','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','{5000} > ORIGINATOR ADDRESS LINE3','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-TEXASFIRSTBANK-FEDLINE','BusinessFunCode','Business Function Code']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-TEXASFIRSTBANK-FEDLINE','BusinessFunCode','Bank Transfer','BTR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-TEXASFIRSTBANK-FEDLINE','BusinessFunCode','Customer Transfer','CTR']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData</Name>
				<Source><![CDATA[
    protected container getFormatLookupsMetaData(str _formatID)
    {
        container   formatLookupsList;

        //Metadata column names of data elements

        switch (_formatID)
        {
        }

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('US-TEXASFIRSTBANK-FEDLINE'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_TEXASFIRSTBANK_FEDLINE();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_TEXASFIRSTBANK_FEDLINE</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_TEXASFIRSTBANK_FEDLINE()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-TEXASFIRSTBANK-FEDLINE','US-TEXASFIRSTBANK-FEDLINE','FT','BusinessFunCode','Business Function Code',0,'BusinessFunCode','Customer Transfer',0,'','','{3600} > BUSINESS FUNCTION CODE']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-TEXASFIRSTBANK-FEDLINE','US-TEXASFIRSTBANK-FEDLINE','FT','TransTypeCode','Transaction Type Code',1,'TransTypeCode','',0,'','XXX','{3600} > TRANSACTION TYPE CODE']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        //container   conDelete;
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>