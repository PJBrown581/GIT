<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>Test_eCommIntegrationOneTimeCustSync</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Used to test eCommerce integration wallet synchronize for one time customer method.
/// </summary>
class Test_eCommIntegrationOneTimeCustSync
{        
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Used to test eCommerce integration wallet synchronize for one time customer method.
    /// </summary>
    /// <param name = "_args">The specified arguments.</param>
    public static void main(Args _args)
    {
        Dialog dialog = new Dialog("@SKS:SKGCCTestEcommIntWalletSynchCaption");
        
        DialogField dialogCompany = dialog.addField(extendedTypeStr(SelectableDataArea));
        DialogField dialogSalesId = dialog.addField(extendedTypeStr(SalesId));        
        DialogField dialogPayFabricCardToken = dialog.addField(extendedTypeStr(CreditCardUniqueCardId),
                                                               "@SKS:SKGCCPayFabricCardTokenCtrlLabel");
        DialogField dialogPayFabricTxnKey = dialog.addField(extendedTypeStr(CreditCardAuthorization),
                                                               "@SKS6627");
        
        boolean synchResult;

        dialog.run();

        if (!dialog.closedOk())        
        {
            return;
        }

        DataAreaId company = dialogCompany.value();
        SalesId salesId = dialogSalesId.value();        
        CreditCardUniqueCardId payFabricCardToken = dialogPayFabricCardToken.value();
        CreditCardAuthorization payFabricTxnKey = dialogPayFabricTxnKey.value();
        
        SalesTable salesTable = SalesTable::find(salesId);
        if (!salesTable)
        {
            throw error(strFmt("@SKS:SKGCCSalesOrderNbrSpecifiedNotValid", salesId));
        }

        try
        {
            synchResult = SKS_CC_eCommIntegrationHandler::SKS_CC_eCommInteg_OneTimeCustCardSynch(
                company,
                salesId,
                payFabricCardToken,                
                payFabricTxnKey);
        }
        catch
        {
            error(strFmt("@SKS:SKGCCSyncWalletECommIntErrMsg",
                salesTable.InvoiceAccount,
                company));
        }

        info(strFmt("@SKS:SKGCCSyncResultECommIntMsg", synchResult));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>