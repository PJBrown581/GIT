<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_JP_MUFGBANK_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_JP_MUFGBANK_XML Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_JP_MUFGBANK_XML Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20221017';
        dataContractVersion = '1.0';
        conFormatID = ['JP-MUFGBANK-XML'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'XXXXXXXXXX','Company Id','','',1,'JP - MUFG Bank - XML',0,'','','JP-MUFGBANK-XML',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'JP-MUFGBANK-XML',1,1,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('JP-MUFGBANK-XML'):
                paymSpecList = this.getPaymSpecsMetaData_JP_MUFGBANK_XML();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_JP_MUFGBANK_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_JP_MUFGBANK_XML()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cash Concentration and Disbursement (CCD)',1,'ACH-CCD','','ACH-CCD','TRADE PAY',0,'JP-MUFGBANK-XML',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Prearranged Payment and Deposit (PPD)',1,'ACH-PPD','','ACH-PPD','TRADE PAY',0,'JP-MUFGBANK-XML',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Corporate Trade Exchange (CTX)',1,'ACH-CTX','','ACH-CTX','TRADE PAY',0,'JP-MUFGBANK-XML',0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Swift Wire Payment',1,'SWIFT-WIRE','','SWIFT-WIRE','TRADE PAY',0,'JP-MUFGBANK-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Fed Wire Payment',1,'FED-WIRE','','FED-WIRE','TRADE PAY',0,'JP-MUFGBANK-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Check Payment',1,'CHK','','CHK','TRADE PAY',0,'JP-MUFGBANK-XML',0,1,0,1,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,3,2,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Global Payment Hub',1,'GPH','','GPH','TRADE PAY',0,'JP-MUFGBANK-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Global Payment Hub Domestic',1,'GPH-DOM','','GPH-DOM','TRADE PAY',0,'JP-MUFGBANK-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Global Payment Hub Local Tax Payment',1,'GPH-LTP','','GPH-LTP','TRADE PAY',0,'JP-MUFGBANK-XML',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('JP-MUFGBANK-XML'):
                notesList = this.getNotesMetaData_JP_MUFGBANK_XML();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_JP_MUFGBANK_XML</Name>
				<Source><![CDATA[
    private container getNotesMetaData_JP_MUFGBANK_XML()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['JP-MUFGBANK-XML','SWIFT-WIRE','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.:-Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['JP-MUFGBANK-XML','FED-WIRE','This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.:-Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['JP-MUFGBANK-XML','ACH-CCD','-This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.:-Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['JP-MUFGBANK-XML','ACH-PPD','-This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.:-Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['JP-MUFGBANK-XML','ACH-CTX','-This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.:-Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['JP-MUFGBANK-XML','CHK','-This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.:-Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['JP-MUFGBANK-XML','GPH','-This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.:-Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['JP-MUFGBANK-XML','GPH-DOM','']);
        notesList = ConIns(notesList,conLen(notesList)+1,['JP-MUFGBANK-XML','GPH-LTP','-This format uses Code lookups. Review the following:-EFT+ file formats > Payment specifications > Code lookup fields tab.:-Vendor ebanking details > Payment specifications > Additional fields.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('JP-MUFGBANK-XML'):
                validationsList = this.getValidationsMetaData_JP_MUFGBANK_XML();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_JP_MUFGBANK_XML</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_JP_MUFGBANK_XML()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-CCD','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Id','PmtInf > Dbtr > Id > Othr > Id','Debtor Id','15','WOrdPartyId','','',1,0,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-CCD','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-CCD','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-CCD','','Bank routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank routing number',0,'RegistrationNum','','',0,1,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-CCD','','Vendor bank routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,1,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-CCD','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'22',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-CCD','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-PPD','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Id','PmtInf > Dbtr > Id > Othr > Id','Debtor Id','15','WOrdPartyId','','',1,0,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-PPD','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-PPD','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-PPD','','Bank routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank routing number',0,'RegistrationNum','','',0,1,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-PPD','','Vendor bank routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,1,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-PPD','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'22',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-PPD','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-CTX','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Id','PmtInf > Dbtr > Id > Othr > Id','Debtor Id','15','WOrdPartyId','','',1,0,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-CTX','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-CTX','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-CTX','','Bank routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank routing number',0,'RegistrationNum','','',0,1,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-CTX','','Vendor bank routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,1,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-CTX','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','ACH-CTX','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','SWIFT-WIRE','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Id','PmtInf > Dbtr > Id > Othr > Id','Debtor Id','15','WOrdPartyId','','',1,0,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','SWIFT-WIRE','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','SWIFT-WIRE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','SWIFT-WIRE','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','SWIFT-WIRE','','Bank routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank routing number',0,'RegistrationNum','','','3',0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','SWIFT-WIRE','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','SWIFT-WIRE','','Intermediary Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Id','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > FinInstnId > ClrSysMmbId > MmbId','Intermediary Id','16','WIntBankId','','','3',0,1,'14',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','SWIFT-WIRE','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','SWIFT-WIRE','','Vendor bank routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'14',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','SWIFT-WIRE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','SWIFT-WIRE','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','SWIFT-WIRE','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','SWIFT-WIRE','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','SWIFT-WIRE','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','SWIFT-WIRE','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','SWIFT-WIRE','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','SWIFT-WIRE','','Bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','SWIFT-WIRE','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','FED-WIRE','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Id','PmtInf > Dbtr > Id > Othr > Id','Debtor Id','15','WOrdPartyId','','',1,0,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','FED-WIRE','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','FED-WIRE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','FED-WIRE','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','FED-WIRE','','Bank routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank routing number',0,'RegistrationNum','','','3',0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','FED-WIRE','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','FED-WIRE','','Intermediary Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Id','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > FinInstnId > ClrSysMmbId > MmbId','Intermediary Id','16','WIntBankId','','','3',0,1,'14',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','FED-WIRE','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','FED-WIRE','','Vendor bank routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',0,1,'14',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','FED-WIRE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','FED-WIRE','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','FED-WIRE','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','FED-WIRE','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','FED-WIRE','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','FED-WIRE','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','FED-WIRE','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','FED-WIRE','','Bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','FED-WIRE','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','CHK','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Id','PmtInf > Dbtr > Id > Othr > Id','Debtor Id','15','WOrdPartyId','','',1,0,1,'10',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','CHK','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','CHK','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','CHK','','Bank routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PmtInf > DbtrAgt > FinInstnId > ClrSysMmbId > MmbId','Bank routing number',0,'RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','CHK','','Intermediary Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','CHK','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','CHK','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','CHK','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','CHK','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','CHK','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','CHK','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','CHK','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','CHK','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > CtrySubDvsn','Bank Country Sub Division','15','WOrdPartyState','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',0,1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/Region','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > Ctry','Country related to vendor bank','16','WBenBankCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > PstlAdr > TwnNm','City related vendor bank','16','WBenBankCity','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'66',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','Address related to vendor','16','WBeneAddr2','','',1,1,1,'16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Zip/postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','City related to vendor','16','WBeneCity','','',0,'2',1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf > Cdtr> PstlAdr> CtrySubDvsn','Country Sub Division related to vendor','16','WBeneState','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','Bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH-DOM','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',0,1,'15','15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH-DOM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH-DOM','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,1,'15','15',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH-LTP','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,1,1,'40',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH-LTP','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH-LTP','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH-LTP','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > CtrySubDvsn','Bank Country Sub Division','15','WOrdPartyState','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH-LTP','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH-LTP','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH-LTP','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['JP-MUFGBANK-XML','GPH-LTP','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number',0,'AccountNum','','',0,1,1,'15',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['JP-MUFGBANK-XML','CdtrAcctTp','Creditor Account type']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['JP-MUFGBANK-XML','DlvryMtd','Delivery Method']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['JP-MUFGBANK-XML','ChrgBr','Charge Bearer']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['JP-MUFGBANK-XML','Prtry','Proprietary']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['JP-MUFGBANK-XML','Purp','Purpose']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['JP-MUFGBANK-XML','CdOrPrtry','CodeOrProprietary']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','CdtrAcctTp','Deposit for a Checking Account','22']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','CdtrAcctTp','Pre-notification for a checking credit','23']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','CdtrAcctTp','Deposit for a Savings Account','32']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','CdtrAcctTp','Pre-notification for a savings credit','33']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','DlvryMtd','First Class mail to Vendors','001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','DlvryMtd','Courier mail to Vendors','002']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','DlvryMtd','Courier mail to Maxell Corporate office','003']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','ChrgBr','Shared','SHAR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','ChrgBr','Charges borne by Debtor','DEBT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','Prtry','Editable',1]);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','Prtry','Non editable',0]);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','Purp','Not changed',0]);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','Purp','Changed',1]);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','Purp','spaces',' ']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','CdOrPrtry','Number/Amount of payroll tax payments',1]);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','CdOrPrtry','Number/Amount of retirement income tax payments','2']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','CdOrPrtry','(Retirement benefit details) Number of retirees/Amount of retirement benefit payments','3']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','CdOrPrtry','(Retirement income tax details) Amount of municipal inhabitants tax','4']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','CdOrPrtry','(Retirement income tax details) Amount of prefectural inhabitants tax','5']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','ChrgBr','Charges borne by Creditor','CRED']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['JP-MUFGBANK-XML','ChrgBr','Will be shared','SLEV']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('JP-MUFGBANK-XML'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_JP_MUFGBANK_XML();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_JP_MUFGBANK_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_JP_MUFGBANK_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','ACH-CCD','CtgyPurp','Category Purpose',1,'CtgyPurp','',0,'','XXXX','PmtInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','ACH-PPD','CtgyPurp','Category Purpose',1,'CtgyPurp','',0,'','XXXX','PmtInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','ACH-CTX','CtgyPurp','Category Purpose',1,'CtgyPurp','',0,'','XXXX','PmtInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','SWIFT-WIRE','CtgyPurp','Category Purpose',1,'CtgyPurp','',0,'','XXXX','PmtInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','FED-WIRE','CtgyPurp','Category Purpose',1,'CtgyPurp','',0,'','XXXX','PmtInf > CtgyPurp > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','FED-WIRE','IntrmyClrsysId','Intermediary Agent ClrsysId',1,'IntrmyClrsysId','',0,'','XXXXX','CdtTrfTxInf > IntrmyAgt1 > ClrSysMmbId > ClrsysId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','SWIFT-WIRE','IntrmyClrsysId','Intermediary Agent ClrsysId',1,'IntrmyClrsysId','',0,'','XXXXX','CdtTrfTxInf > IntrmyAgt1 > ClrSysMmbId > ClrsysId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','ACH-CCD','CdtrAcctTp','Creditor Account Type',0,'CdtrAcctTp','',0,'','','PmtInf > CdtTrfTxInf > CtrAcct > Tp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','ACH-PPD','CdtrAcctTp','Creditor Account Type',0,'CdtrAcctTp','',0,'','','PmtInf > CdtTrfTxInf > CtrAcct > Tp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','ACH-CTX','CdtrAcctTp','Creditor Account Type',0,'CdtrAcctTp','',0,'','','PmtInf > CdtTrfTxInf > CtrAcct > Tp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','CHK','CdtrAcctTp','Creditor Account Type',0,'CdtrAcctTp','',0,'','','PmtInf > CdtTrfTxInf > CtrAcct > Tp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','GPH','CdtrAcctTp','Creditor Account Type',0,'CdtrAcctTp','',0,'','','PmtInf > CdtTrfTxInf > CtrAcct > Tp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','SWIFT-WIRE','CdtrAcctTp','Creditor Account Type',0,'CdtrAcctTp','',0,'','','PmtInf > CdtTrfTxInf > CtrAcct > Tp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','FED-WIRE','CdtrAcctTp','Creditor Account Type',0,'CdtrAcctTp','',0,'','','PmtInf > CdtTrfTxInf > CtrAcct > Tp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','SWIFT-WIRE','CdtrAgtClrsysId','CdtrAgt ClrsysId',1,'CdtrAgtClrsysId','',1,'USABA','XXXXX','PmtInf > CdtTrfTxInf > CdtrAgt > ClrSysMmbId > ClrsysId > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','FED-WIRE','CdtrAgtClrsysId','CdtrAgt ClrsysId',1,'CdtrAgtClrsysId','',1,'USABA','XXXXX','PmtInf > CdtTrfTxInf > CdtrAgt > ClrSysMmbId > ClrsysId > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','CHK','DlvryMtd','Delivery Method',0,'DlvryMtd','',0,'','','PmtInf > CdtTrfTxInf > ChqInstr > DlvryMtd > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','GPH','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','GPH','Prtry','Proprietary',0,'Prtry','',0,'','','PmtInf > PmtTpInf > LclInstrm > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','GPH','BenePhoneNum','Beneficiary Phone number',1,'BenePhoneNum','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','CdtTrfTxInf > RgltryRptg > Dtls > Inf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','GPH','RgltryReport','Regulatory Report',1,'RgltryReport','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','CdtTrfTxInf > RgltryRptg > Dtls > Inf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','GPH-LTP','Purp','Purpose',0,'Purp','',0,'','','CdtTrfTxInf > Purp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','GPH-LTP','CdOrPrtry','CodeOrProprietary',0,'CdOrPrtry','',0,'','','CdtTrfTxInf > RmtInf > Strd > RfrdDocInf > Tp > CdOrPrtry > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','GPH-LTP','MunicipalityCode','Municipality code',1,'MunicipalityCode','',0,'','XXXXXX','CdtTrfTxInf > RgltryRptg > RmtLctnPstlAdr > Adr > Dept']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','SWIFT-WIRE','ChrgBr','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','FED-WIRE','ChrgBr','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','CHK','ChrgBr','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['JP-MUFGBANK-XML','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['JP-MUFGBANK-XML','*','FormatValidations','*','16','WChargesIndic']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['JP-MUFGBANK-XML','*','FormatValidations','*','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['JP-MUFGBANK-XML','*','FormatValidations','*','15','W02']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('JP-MUFGBANK-XML'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_IT_CONSORZIOCBI_XML();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_IT_CONSORZIOCBI_XML</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_IT_CONSORZIOCBI_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','InitiatingPartyId','Initiating Party Id',1,'InitiatingPartyId','',0,'','XXXXXXXXXX','GrpHdr > InitgPty > Id > Orgid > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','InstructIdentification','Instruction Identification',1,'InstructIdentification','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > InstrId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','Authorisation','Authorisation',1,'Authorisation','',1,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','PmtInf > Authstn > Cd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['JP-MUFGBANK-XML','JP-MUFGBANK-XML','Authorisation','Authorisation',1,'Authorisation-Prtry','',1,'','XXXXXXXXXX','PmtInf > Authstn > Prtry']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('JP-MUFGBANK-XML'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('InitiatingPartyId', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('InstructIdentification', gSKS_EFT_Bank.W02);
                }
                if(gSKS_EFT_Bank.W03)
                {
                    this.updateBankFields('Authorisation', gSKS_EFT_Bank.W03);
                }
                break;

        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('JP-MUFGBANK-XML'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('ChrgBr', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>