<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_CA_SCOTIA_PIAP_v21</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_CA_SCOTIA_PIAP_v21 extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_CA_SCOTIA_PIAP_v21 extends SKS_EFT_Format
{
    #define.FormatVersion('20220813')
    #define.PAYMT('460')
    #define.PRIORITY('PRIORITY')
    #define.REGULAR('WIRE')
    #define.ACH('ACH')
    #define.CHK('CHK')
    int mPaymentCount;
    int mBatchCount;
    int mPaymentTotal;
    AmountMST mPaymentAmount;
    AmountMST mBatchAmount;
    SKS_EFT_SequenceNumber mSequenceNumber;
    BankAccountTable mBankAccountTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        BankAccountId           prevBankAccount;
        PaymSpec                prevPaymSpec;
        AddressCountryRegionId  prevCountryRegionId;
        SKS_EFT_FileDetail      invoice;
    
        //Get sequence number
        this.getSequence();
    
        // Format header
        this.rec_File_Header();
    
        // Get SKS_EFT_VendorPaym
        this.getSKS_EFT_VendorPaym();
    
        // Get SKS_EFT_FileFormatPaymSpec
        this.getSKS_EFT_FileFormatPaymSpec();
    
        // Get SKS_EFT_Bank
        this.getSKS_EFT_Bank();
    
        while(mSKS_EFT_FileDetail)
        {
            if(prevBankAccount != mSKS_EFT_FileDetail.BankAccountId ||
               prevPaymSpec != mSKS_EFT_FileDetail.PaymSpec ||
               prevCountryRegionId != mSKS_EFT_VendorPaym.WBenBankCountryRegionId)
            {
                if(!(((prevPaymSpec == 'Wire-R' &&  mSKS_EFT_FileDetail.PaymSpec == 'Wire-P') ||
                      (prevPaymSpec == 'Wire-P' &&  mSKS_EFT_FileDetail.PaymSpec == 'Wire-R')) ||
                      (prevPaymSpec == 'ACH' &&  mSKS_EFT_FileDetail.PaymSpec == 'PMT-460') ||
                      (prevPaymSpec == 'PMT-460' &&  mSKS_EFT_FileDetail.PaymSpec == 'ACH')))
                {
                    mBankAccountTable = BankAccountTable::find(mSKS_EFT_FileDetail.BankAccountId);
    
                    // Batch Header
                    this.rec_Batch_Header();
                }
            }
    
            // Detail Record
            this.rec_Payments();
    
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PAYMT)
            {
                // Remittance Record
                this.rec_Remittance();
            }
    
            if(mSKS_EFT_FileDetail.PaymSpec == #CHK)
            {
                while select invoice where invoice.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId && invoice.InvoiceNumber != ''
                {
        
                    //Invoice Details
                    this.rec_CHKInvoiceDetails(invoice);
                }
            }

            prevBankAccount = mSKS_EFT_FileDetail.BankAccountId;
            prevPaymSpec = mSKS_EFT_FileDetail.PaymSpec;
            prevCountryRegionId = mSKS_EFT_VendorPaym.WBenBankCountryRegionId;
    
            next mSKS_EFT_FileDetail;
    
            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();
    
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();
    
            // Get SKS_EFT_Bank
            this.getSKS_EFT_Bank();
    
            if(prevBankAccount != mSKS_EFT_FileDetail.BankAccountId ||
               prevPaymSpec != mSKS_EFT_FileDetail.PaymSpec ||
               prevCountryRegionId != mSKS_EFT_VendorPaym.WBenBankCountryRegionId)
            {
                if(!(((prevPaymSpec == 'Wire-R' &&  mSKS_EFT_FileDetail.PaymSpec == 'Wire-P') ||
                      (prevPaymSpec == 'Wire-P' &&  mSKS_EFT_FileDetail.PaymSpec == 'Wire-R')) ||
                      (prevPaymSpec == 'ACH' &&  mSKS_EFT_FileDetail.PaymSpec == 'PMT-460') ||
                      (prevPaymSpec == 'PMT-460' &&  mSKS_EFT_FileDetail.PaymSpec == 'ACH')))
                {
                    // Format trailer
                    this.rec_Batch_Totals();
                }
            }
        }
    
        // Format trailer
        this.rec_File_Trailer();
    
        //Set sequence number
        this.setSequence();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSequence</Name>
				<Source><![CDATA[
    private void getSequence()
    {
        if(mSKS_EFT_FileFormat)
        {
            //Get Next Sequence Number
            mSequenceNumber = mSKS_EFT_FileFormat.NextSequenceNumber;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>incrementSequenceNumber</Name>
				<Source><![CDATA[
    private void incrementSequenceNumber()
    {
        if(mSequenceNumber >= 9999 || mSequenceNumber == 0)
        {
            mSequenceNumber = 1;
        }
        else
        {
            mSequenceNumber++;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Batch_Header</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_Batch_Header
    /// </summary>
    /// <returns>boolean</returns>
    public boolean rec_Batch_Header()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                      Size      Position
        // 1    Record Type                                     1      (      1)
        // 2    Debit Account Qualifier                         2      (  2-  3)
        // 3    Debit Bank (DFI) Identification Number         11      (  4- 14)
        // 4    Debit Bank Account                             50      ( 15- 64)
        // 6    Filler                                          5      ( 65- 69)
        // 7    Return Bank Account Qualifier                   2      ( 70- 71)
        // 8    Return Bank (DFI) Identification Number        11      ( 72- 82)
        // 9    Return Bank Account                            50      ( 83-132)
        //10    Filler                                          5      (133-137)
        //11    In Currency                                     3      (138-140)
        //12    Out Currency                                    3      (141-143)
        //13    Country Code                                    2      (144-145)
        //14    Payment Type                                    4      (146-149)
        //15    Filler                                         51      (150-200)
        //------------------------------------------------------------------------------------------------------
    
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str idNumber;
        str institutionCode;
        mBatchCount++;
    
        // 1    Record Type                                     1      (      1)
        sb.Append('B');
    
        institutionCode = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InstitutionCode', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        if(institutionCode != '')
        {
            // 2    Debit Account Qualifier                         2      (  2-  3)
            sb.Append('04');
    
            // 3    Debit Bank (DFI) Identification Number         11      (  4- 14)
            idNumber = '0' + SKS_PP_StringFormats::strFill(3, this.CharacterReplacement(institutionCode), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left) +
                             SKS_PP_StringFormats::strFill(5, mSKS_EFT_FileDetail.BankBankTransit, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left);
    
            sb.Append(SKS_PP_StringFormats::strFill(11, idNumber, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        }
        else if(mBankAccountTable.SWIFTNo != '')
        {
            // 2    Debit Account Qualifier                         2      (  2-  3)
            sb.Append('02');
    
            // 3    Debit Bank (DFI) Identification Number         11      (  4- 14)
            sb.Append(SKS_PP_StringFormats::strFill(11, mBankAccountTable.SWIFTNo, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            // 2    Debit Account Qualifier                         2      (  2-  3)
            sb.Append('01');
    
            // 3    Debit Bank (DFI) Identification Number         11      (  4- 14)
            sb.Append(SKS_PP_StringFormats::strFill(11, mSKS_EFT_FileDetail.BankOrigDFI, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
    
        // 4    Debit Bank Account                             50      ( 15- 64)
        sb.Append(SKS_PP_StringFormats::strFill(50,mSKS_EFT_FileDetail.BankBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 6    Filler                                          5      ( 65- 69)
        sb.Append(SKS_PP_StringFormats::strFill(5,'', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == #CHK)
        {
            // 7    Return Bank Account Qualifier                   2      ( 70- 71)
            if(mSKS_EFT_VendorPaym.WBeneCountryRegionId == 'CAN')
            {
                sb.Append('04');
            }
            else if(mSKS_EFT_VendorPaym.WBeneCountryRegionId == 'USA')
            {
                sb.Append('01');
            }
            else
            {
                sb.Append('04');
            }
        
            // 8    Return Bank (DFI) Identification Number        11      ( 72- 82)
            sb.Append(SKS_PP_StringFormats::strFill(11,mSKS_EFT_FileDetail.BankBankTransit, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
            // 9    Return Bank Account                            50      ( 83-132)
            sb.Append(SKS_PP_StringFormats::strFill(50,mSKS_EFT_FileDetail.BankBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
    
        // 7    Return Bank Account Qualifier                   2      ( 70- 71)
        else if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'PMT-460' || mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'Wire-R' || mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'ACH')        
        {
            sb.Append('04');
            
            // 8    Return Bank (DFI) Identification Number        11      ( 72- 82)
            sb.Append(SKS_PP_StringFormats::strFill(11,mSKS_EFT_FileDetail.BankBankTransit, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            
            // 9    Return Bank Account                            50      ( 83-132)
            sb.Append(SKS_PP_StringFormats::strFill(50,mSKS_EFT_FileDetail.BankBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            
            
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(2,'', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 8    Return Bank (DFI) Identification Number        11      ( 72- 82)
            sb.Append(SKS_PP_StringFormats::strFill(11,'', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            // 9    Return Bank Account                            50      ( 83-132)
            sb.Append(SKS_PP_StringFormats::strFill(50,'', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
    
        //10    Filler                                          5      (133-137)
        sb.Append(SKS_PP_StringFormats::strFill(5, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //11    In Currency                                     3      (138-140)
        sb.Append(SKS_PP_StringFormats::strFill(3, mBankAccountTable.CurrencyCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //12    Out Currency                                    3      (141-143)
        sb.Append(SKS_PP_StringFormats::strFill(3, mSKS_EFT_FileDetail.PaymentCurrencyCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //13    Country Code                                    2      (144-145)
        if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'PMT-460' || mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'Wire-R' || mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'ACH')
        
        {
            sb.Append(SKS_PP_StringFormats::strFill(2, this.getLogisticsAddressCountryISO(mSKS_EFT_Bank.WOrdPartyCountryRegionId), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            
        }
        else if(mSKS_EFT_VendorPaym.WBeneCountryRegionId)
        {
            sb.Append(SKS_PP_StringFormats::strFill(2, this.getLogisticsAddressCountryISO(mSKS_EFT_VendorPaym.WBenBankCountryRegionId), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append('CA');
        }
        //14    Payment Type                                    4      (146-149)
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #PAYMT:
            case #ACH:
                sb.Append('04');
                break;
            case #PRIORITY:
            case #REGULAR:
                sb.Append('05');
                break;
            case #CHK:
                sb.Append('01');
                break;
        }
        if(mSKS_EFT_FileDetail.PaymSpec == #CHK)
        {
            //15    Filler                                         51      (150-332)
            sb.Append(SKS_PP_StringFormats::strFill(183, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));     //SKS#DevOps:18781
        }
        else
        {
            //15    Filler                                         51      (150-200)
            sb.Append(SKS_PP_StringFormats::strFill(51, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_CHKInvoiceDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_CHKInvoiceDetails
    /// </summary>
    /// <param name = "_invoice">_invoice</param>
    /// <returns></returns>
    public boolean rec_CHKInvoiceDetails(SKS_EFT_FileDetail _invoice)
    {
               
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str gross    = num2str((_invoice.InvoiceDiscAmountPmtCur + _invoice.InvoiceSettleAmountPmtCur)* -1,0,2,1,0);
        gross    = strRem(gross,'.');
               
        //1     Record Type
        sb.Append('S');
        
        
        //2     Invoice Number
        sb.Append(SKS_PP_StringFormats::strFill(30,this.CharacterReplacement(_invoice.InvoiceNumber),SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        
        //3     Invoice Date
        sb.Append(date2str(_invoice.InvoiceDate, 321, DateDay::Digits2, DateSeparator::None, DateMonth::Digits2, DateSeparator::None, DateYear::Digits4));
        
        //4     Invoice Amount
        sb.Append(SKS_PP_StringFormats::strFill(15,strRem(num2str(_invoice.InvoiceSettleAmountPmtCur * -1,0,2,1,0),'.'),SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        //5     Discount Amount
        sb.Append(SKS_PP_StringFormats::strFill(15,strRem(num2str((_invoice.InvoiceDiscAmountPmtCur) * -1,0,2,1,0),'.'), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        //6     Payment  Amount
        sb.Append(SKS_PP_StringFormats::strFill(15,gross, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        //7     Remarks 1
        sb.Append(SKS_PP_StringFormats::strFill(35,'', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        
        //8     Remarks 2
        sb.Append(SKS_PP_StringFormats::strFill(35,'', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //9     Remarks 3
        sb.Append(SKS_PP_StringFormats::strFill(35,'', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //9    Invoice processing date
        sb.Append(SKS_PP_StringFormats::strFill(8,'', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Right));
        
        //9     Filler
        sb.Append(SKS_PP_StringFormats::strFill(3,'', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Batch_Totals</Name>
				<Source><![CDATA[
    public boolean rec_Batch_Totals()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                      Size      Position
        // 1    Record Type                                     1      (      1)
        // 2    Filler                                          6      (  2-  7)
        // 3    Number of Payments in Batch                    10      (  8- 17)
        // 4    Dollar Total of Batch                          17      ( 18- 34)
        // 5    Filler                                         66      ( 35-100)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        // 1    Record Type                                     1      (      1)
        sb.Append('Y');
    
        // 2    Filler                                          6      (  2-  7)
        sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 3    Number of Payments in Batch                    10      (  8- 17)
        sb.Append(SKS_PP_StringFormats::strFill(10, int2str(mPaymentCount), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 4    Dollar Total of Batch                          17      ( 18- 34)
        sb.Append(SKS_PP_StringFormats::strMoney(mBatchAmount * -1, 17));
    
        // 5    Filler                                         66      ( 35-100)
        sb.Append(SKS_PP_StringFormats::strFill(66, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //Reset Batch values
        mBatchAmount = 0;
        mPaymentCount = 0;
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_File_Header</Name>
				<Source><![CDATA[
    public boolean rec_File_Header()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                      Size      Position
        // 1    Record Type                                     1      (      1)
        // 2    Customer Number                                20      (  2- 21)
        // 3    Customer Name                                  30      ( 22- 51)
        // 5    File Creation Number                            4      ( 52- 55)
        // 7    FCD                                             8      ( 56- 63)
        // 8    FCT                                             6      ( 64- 69)
        // 9    Version                                         7      ( 70- 76)
        //10    Filler                                         24      ( 77-100)
        //------------------------------------------------------------------------------------------------------
    
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str custNum;
        str testFile;
    
        //Nbr   Content
        // 1    Record Type                                     1      (      1)
        sb.Append('A');
    
        // 2    Customer Number                                20      (  2- 21)
        custNum = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CustNum', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        sb.Append(SKS_PP_StringFormats::strFill(20, this.CharacterReplacement(custNum), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 3    Customer Name                                  30      ( 22- 51)
        sb.Append(SKS_PP_StringFormats::strFill(30, this.CharacterReplacement(mSKS_EFT_Bank.ACHCompanyName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 5    File Creation Number                            4      ( 52- 55)
        sb.Append(SKS_PP_StringFormats::strFill(4,num2str(mSequenceNumber,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 7    FCD                                             8      ( 56- 63)
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
    
        // 8    FCT                                             6      ( 64- 69)
        sb.Append(SKS_PP_StringFormats::strTimeHHMMSS());
    
        // 9    Version                                         7      ( 70- 76)
        sb.Append('PIAP2.1');
    
        sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        testFile = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TestFile', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        if(strUpr(testFile) == 'Y')
        {
            sb.Append('T');
        }
        else
        {
            sb.Append('F');
        }
        
        sb.Append(SKS_PP_StringFormats::strFill(17, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.incrementSequenceNumber();
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_File_Trailer</Name>
				<Source><![CDATA[
    private boolean rec_File_Trailer()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                      Size      Position
        // 1    Record Type                                     1      (      1)
        // 2    Total Number of Batches                         6      (  2-  7)
        // 3    Total Number of Payments in file               10      (  8- 17)
        // 4    Total Value of all Batches in file             17      ( 18- 34)
        // 5    Filler                                         66      ( 35-100)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        // 1    Record Type                                     1      (      1)
        sb.Append('Z');
    
        // 2    Total Number of Batches                         6      (  2-  7)
        sb.Append(SKS_PP_StringFormats::strFill(6, int2str(mBatchCount), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 3    Total Number of Payments in file               10      (  8- 17)
        sb.Append(SKS_PP_StringFormats::strFill(10, int2str(mPaymentTotal), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        // 4    Total Value of all Batches in file             17      ( 18- 34)
        sb.Append(SKS_PP_StringFormats::strMoney(mPaymentAmount * -1, 17));
    
        // 5    Filler                                         66      ( 35-100)
        sb.Append(SKS_PP_StringFormats::strFill(66, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Payments</Name>
				<Source><![CDATA[
    public boolean rec_Payments()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                      Size      Position
        // 1    Record Type                                     1      (      1)
        // 2    Payee Debit/Credit                              1      (      2)
        // 3    Payable Date                                    8      (  3- 10)
        // 4    Payment Number                                 30      ( 11- 40)
        // 5    Transaction Reference Number                   19      ( 41- 59)
        // 6    Reference Number                               14      ( 60- 73)
        // 7    Payee Name                                     35      ( 74-108)
        // 8    Payee Amount                                   15      (109-123)
        // 9    Payee Account Qualifier                         2      (124-125)
        //10    Payee (DFI) Indentification Number             11      (126-136)
        //11    Payee Account                                  50      (137-186)
        //12    Payee IBAN                                     50      (187-236)
        //13    CPA/Payment Type                                3      (237-239)
        //14    Originator Short Name                          15      (240-254)
        //15    Originator Long Name                           30      (255-284)
        //16    Customer Sundry Information                    15      (285-299)
        //17    File Processing                                 1      (    300)
        //------US ACH Domestic-------------------------------------------------
        //18    Payee Saving/Chequing                           1      (    301)
        //19    Standard Entry Class Code                       3      (302-304)
        //20    Foreign Exhange Rate                           10      (305-314)
        //21    FX Contract Number                             10      (315-324)
        //      Filler                                         15      (325-339)
        //------Wire Payments---------------------------------------------------
        //22    Priority Wire                                   1      (    340)
        //23    Filler                                         15      (341-355)
        //------Consignment Cheque----------------------------------------------
        //24    Serial Number                                  10      (356-365)
        //25    City Code                                       2      (366-367)
        //26    ABA Code                                        4      (368-371)
        //27    Fed Code                                        4      (372-375)
        //28    Stamp Tax ID                                   10      (376-385)
        //29    Filler                                         15      (386-400)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str institutionCode;
        mPaymentCount++;
        mPaymentTotal++;
    
        // 1    Record Type                                     1      (      1)
        sb.Append('P');
    
        // 2    Payee Debit/Credit                              1      (      2)
        sb.Append('C');
    
        // 3    Payable Date                                    8      (  3- 10)
        sb.Append(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_File.EffectiveDate), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 4    Payment Number                                 30      ( 11- 40)
        sb.Append(SKS_PP_StringFormats::strFill(30, this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 5    Transaction Reference Number                   19      ( 41- 59)
        sb.Append(SKS_PP_StringFormats::strFill(19, this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 6    Reference Number                               14      ( 60- 73)
        sb.Append(SKS_PP_StringFormats::strFill(14, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 7    Payee Name                                     35      ( 74-108)
        sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 8    Payee Amount                                   15      (109-123)
        mPaymentAmount += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        mBatchAmount   += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
    
        sb.Append(SKS_PP_StringFormats::strMoney(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1, 15));
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK)
        {
            // 9    Payee Account Qualifier                         2      (124-125)
            if(mSKS_EFT_VendorPaym.WBeneCountryRegionId == 'CAN')               //DevOps19118
            {
                sb.Append('04');
            }
            else if(mSKS_EFT_VendorPaym.WBeneCountryRegionId == 'USA')
            {
                sb.Append('01');
            }
            else
            {
                sb.Append('04');
            }
            //10    Payee (DFI) Indentification Number             11      (126-136)
            sb.Append(SKS_PP_StringFormats::strFill(11, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else if(SKS_EFT_Format::getCodelookupvalue('InstitutionCode', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank) != '' && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ACH)
        {
            // 9    Payee Account Qualifier                         2      (124-125)
            if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'PMT-460' || mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'Wire-R')        //SKS#DevOps:19864
            {
                if(mSKS_EFT_VendorPaym.WBenBankCountryRegionId == 'CAN')
                {
                    sb.Append('04');
                }
                else if(mSKS_EFT_VendorPaym.WBenBankCountryRegionId == 'USA')
                {
                    sb.Append('01');
                }
                else if(mSKS_EFT_FileFormatPaymSpec.PaymSpec== 'Wire-R')
                {
                    sb.Append('02');
                }
                else
                {
                    sb.Append('04');
                }
            }
            else if(mSKS_EFT_FileFormatPaymSpec.PaymSpec =='Wire-P')
            {
                sb.Append('04');
            }
    
            //10    Payee (DFI) Indentification Number             11      (126-136)
            institutionCode = '0' + SKS_PP_StringFormats::strFill(3, this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InstitutionCode', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank)), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left) +
                                    SKS_PP_StringFormats::strFill(5, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left);
    
            sb.Append(SKS_PP_StringFormats::strFill(11, institutionCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else if(mSKS_EFT_FileDetail.DepSwiftNo != '' && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ACH)
        {
            if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'PMT-460' || mSKS_EFT_FileFormatPaymSpec.PaymSpec == 'Wire-R')        //SKS#DevOps:19864
            {
                if(mSKS_EFT_FileFormatPaymSpec.PaymSpec== 'Wire-R')
                {
                    sb.Append('02');
                }
                else if(mSKS_EFT_VendorPaym.WBenBankCountryRegionId == 'CAN')
                {
                    sb.Append('04');
                }
                else if(mSKS_EFT_VendorPaym.WBenBankCountryRegionId == 'USA')
                {
                    sb.Append('01');
                }
                else
                {
                    sb.Append('02');
                }
            }
            else if(mSKS_EFT_FileFormatPaymSpec.PaymSpec =='Wire-P')
            {
                sb.Append('02');
            }

            //10    Payee (DFI) Indentification Number             11      (126-136)
            sb.Append(SKS_PP_StringFormats::strFill(11, mSKS_EFT_FileDetail.DepSwiftNo, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            // 9    Payee Account Qualifier                         2      (124-125)
            if(mSKS_EFT_VendorPaym.WBenBankCountryRegionId == 'CAN')                            //SKS#DevOps:19864
            {
                sb.Append('04');
            }
            else if(mSKS_EFT_VendorPaym.WBenBankCountryRegionId == 'USA')
            {
                sb.Append('01');
            }
            else
            {
                sb.Append('01');
            }
    
            //10    Payee (DFI) Indentification Number             11      (126-136)
            sb.Append(SKS_PP_StringFormats::strFill(11, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
    
        //11    Payee Account                                  50      (137-186)
        sb.Append(SKS_PP_StringFormats::strFill(50, mSKS_EFT_FileDetail.DepBankAcct,SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //12    Payee IBAN                                     50      (187-236)
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PRIORITY || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #REGULAR)
        {
            sb.Append(SKS_PP_StringFormats::strFill(50, mSKS_EFT_FileDetail.DepBankIBAN,SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(50, '',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        }
    
        //13    CPA/Payment Type                                3      (237-239)
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #PAYMT:
                sb.Append('460');
                break;
            case #ACH:
                sb.Append('VEN');
                break;
            default:
                sb.Append(SKS_PP_StringFormats::strFill(3, '',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
                break;
        }
    
        //14    Originator Short Name                          15      (240-254)
        str shortName;

        shortName = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ShortName', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        sb.Append(SKS_PP_StringFormats::strFill(15, this.CharacterReplacement(shortName),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //15    Originator Long Name                           30      (255-284)
        sb.Append(SKS_PP_StringFormats::strFill(30, this.CharacterReplacement(mSKS_EFT_Bank.WOrdPartyName),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
    
        //16    Customer Sundry Information                    15      (285-299)
        sb.Append(SKS_PP_StringFormats::strFill(15, this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //17    File Processing                                 1      (    300)
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //------US ACH Domestic-------------------------------------------------
        //18    Payee Saving/Chequing                           1      (    301)
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //19    Standard Entry Class Code                       3      (302-304)
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK)
        {
            //20    Foreign Exhange Rate                           13     (305-317)
            sb.Append(SKS_PP_StringFormats::strFill(13, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
            //21    FX Contract Number                             10      (318-327)
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
            //      Filler                                         15      (325-339)
            sb.Append(SKS_PP_StringFormats::strFill(12, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        }
        else
        {
            //20    Foreign Exhange Rate                           10      (305-314)
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            //21    FX Contract Number                             10      (315-324)
            sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            //      Filler                                         15      (325-339)
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
    
        //------Wire Payments---------------------------------------------------
        //22    Priority Wire                                   1      (    340)
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #PRIORITY:
                sb.Append('Y');
                break;
            case #REGULAR:
                sb.Append('N');
                break;
            default:
                sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
                break;
        }
    
        //23    Filler                                         15      (341-355)
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //------Consignment Cheque----------------------------------------------
        //24    Serial Number                                  10      (356-365)
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_EFT_FileDetail.PaymentReference, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //25    City Code                                       2      (366-367)
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //26    ABA Code                                        4      (368-371)
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //27    Fed Code                                        4      (372-375)
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //28    Stamp Tax ID                                   10      (376-385)
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //29    Filler                                         15      (386-400)
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK)
        {
            //                                                          (401-460)
            sb.Append(SKS_PP_StringFormats::strFill(60, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Remittance</Name>
				<Source><![CDATA[
    public boolean rec_Remittance()
    {
        //------------------------------------------------------------------------------------------------------
        //Nbr   Content                                      Size      Position
        // 1    Record Type                                     1      (      1)
        // 2    Payee Name 1                                   35      (  2- 36)
        // 3    Payee Name 2                                   35      ( 37- 71)
        // 4    Payee Address 1                                50      ( 72-121)
        // 5    Payee Address 2                                50      (122-171)
        // 6    Payee Address 3                                50      (172-221)
        // 7    Payee Address 4                                50      (222-271)
        // 8    Payee Address 5                                50      (272-321)
        // 9    Payee Address 6                                50      (322-371)
        //10    Payee Address City                             30      (372-401)
        //11    Payee Address Province/State                    2      (402-403)
        //12    Payee Address Zip/Postal Code                   9      (404-412)
        //13    Payee Country Code                              2      (413-414)
        //14    Filler                                         15      (415-429)
        //15    Payee Display Account                          50      (430-479)
        //16    Display Currency                               10      (480-489)
        //17    Stock Selection                                 5      (490-494)
        //18    Special Handling 1                              8      (495-502)
        //19    Special Handling 2                              8      (503-510)
        //20    Filler                                         15      (511-525)
        //21    Special Handling 3                              8      (526-533)
        //22    Return Address 1                               50      (534-583)
        //23    Return Address 2                               50      (584-633)
        //24    Return Address 3                               50      (634-683)
        //25    Return Address 4                               50      (684-733)
        //26    Return Address 5                               50      (734-783)
        //27    Return Address City                            30      (784-813)
        //28    Return Address Province/State                   2      (814-815)
        //29    Return Address Zip/Postal Code                  9      (816-824)
        //30    Return Address Country                          2      (825-826)
        //31    Filler                                          4      (827-830)
        //------------------------------------------------------------------------------------------------------
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        // 1    Record Type                                     1      (      1)
        sb.Append('R');
    
        // 2    Payee Name 1                                   35      (  2- 36)
        // 3    Payee Name 2                                   35      ( 37- 71)
        sb.Append(SKS_PP_StringFormats::strFill(70, this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 4    Payee Address 1                                50      ( 72-121)
        sb.Append(SKS_PP_StringFormats::strFill(50, this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneAddr), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 5    Payee Address 2                                50      (122-171)
        sb.Append(SKS_PP_StringFormats::strFill(50, this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneAddr2), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 6    Payee Address 3                                50      (172-221)
        sb.Append(SKS_PP_StringFormats::strFill(50, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 7    Payee Address 4                                50      (222-271)
        sb.Append(SKS_PP_StringFormats::strFill(50, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 8    Payee Address 5                                50      (272-321)
        sb.Append(SKS_PP_StringFormats::strFill(50, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        // 9    Payee Address 6                                50      (322-371)
        sb.Append(SKS_PP_StringFormats::strFill(50, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //10    Payee Address City                             30      (372-401)
        sb.Append(SKS_PP_StringFormats::strFill(30, this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneCity), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //11    Payee Address Province/State                    2      (402-403)
        sb.Append(SKS_PP_StringFormats::strFill(2, this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneState), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //12    Payee Address Zip/Postal Code                   9      (404-412)
        sb.Append(SKS_PP_StringFormats::strFill(9, this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneZipPostal), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //13    Payee Country Code                              2      (413-414)
        sb.Append(SKS_PP_StringFormats::strFill(2, this.getLogisticsAddressCountryISO(mSKS_EFT_VendorPaym.WBeneCountryRegionId), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //14    Filler                                         15      (415-429)
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //15    Payee Display Account                          50      (430-479)
        sb.Append(SKS_PP_StringFormats::strFill(50, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //16    Display Currency                               10      (480-489)
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //17    Stock Selection                                 5      (490-494)
        sb.Append(SKS_PP_StringFormats::strFill(5, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //18    Special Handling 1                              8      (495-502)
        sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //19    Special Handling 2                              8      (503-510)
        sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //20    Filler                                         15      (511-525)
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //21    Special Handling 3                              8      (526-533)
        sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //22    Return Address 1                               50      (534-583)
        sb.Append(SKS_PP_StringFormats::strFill(50, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //23    Return Address 2                               50      (584-633)
        sb.Append(SKS_PP_StringFormats::strFill(50, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //24    Return Address 3                               50      (634-683)
        sb.Append(SKS_PP_StringFormats::strFill(50, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //25    Return Address 4                               50      (684-733)
        sb.Append(SKS_PP_StringFormats::strFill(50, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //26    Return Address 5                               50      (734-783)
        sb.Append(SKS_PP_StringFormats::strFill(50, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //27    Return Address City                            30      (784-813)
        sb.Append(SKS_PP_StringFormats::strFill(30, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //28    Return Address Province/State                   2      (814-815)
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //29    Return Address Zip/Postal Code                  9      (816-824)
        sb.Append(SKS_PP_StringFormats::strFill(9, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //30    Return Address Country                          2      (825-826)
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //31    Filler                                          4      (827-830)
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
        SKS_EFT_VendorPaym lSKS_EFT_VendorPaym;
    
        select * from mSKS_EFT_FileDetail
              join WBenBankCountryRegionId,
                   VendBankAccountId,
                   VendAccount,
                   PaymSpec,
                   PaymMode,
                   VendCompany
              from lSKS_EFT_VendorPaym
          order by mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   lSKS_EFT_VendorPaym.WBenBankCountryRegionId,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.AccountCompany == lSKS_EFT_VendorPaym.VendCompany &&
                mSKS_EFT_FileDetail.AccountNum == lSKS_EFT_VendorPaym.VendAccount &&
                mSKS_EFT_FileDetail.PaymMode == lSKS_EFT_VendorPaym.PaymMode &&
                mSKS_EFT_FileDetail.PaymSpec == lSKS_EFT_VendorPaym.PaymSpec &&
                mSKS_EFT_FileDetail.DepBankAccountId == lSKS_EFT_VendorPaym.VendBankAccountId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSequence</Name>
				<Source><![CDATA[
    private void setSequence()
    {
        SKS_EFT_FileFormat sks_eft_fileformat;
        ;
    
        select firstOnly forUpdate sks_eft_fileformat
            where sks_eft_fileformat.FormatId == mSKS_EFT_FileFormat.FormatId;
    
        if(sks_eft_fileformat)
        {
            sks_eft_fileformat.NextSequenceNumber = mSequenceNumber;
            sks_eft_fileformat.update();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>