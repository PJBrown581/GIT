<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_BANKOFAM_SAR_80</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_BANKOFAM_SAR_80 Extends SKS_PP_Format_BankGroup
{
    BankAccount gBnkBankAcct;
    int         gCheckCount;
    real        gCheckSum;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        // Bank of America 80 (format B)
        // detail line
        //  01      accountNumber                   01 - 10
        //  02      serialNumber                    11 - 20
        //  03      Amount                          21 - 30
        //  04      issueDate                       31 - 36
        //  05      recordType                      37 - 37
        //  06      filler                          88 - 40
        //  06      additionalData                  41 - 80
    
        int Mult;
        str ItemType;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        //Convert negative void numbers to positives
        Mult = 1;
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = '1';
            if(mSKS_PP_FileDetail.chkcuryamt < 0)
            {
                Mult = -1;
            }
        }
        else
        {
            ItemType = '0';
        }
    
        if(gBnkBankAcct != mSKS_PP_FileDetail.BnkBankAcct)
        {
            gBnkBankAcct = mSKS_PP_FileDetail.BnkBankAcct;
        }
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(Mult * mSKS_PP_FileDetail.Chkcuryamt, 10));
        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(Itemtype);
        sb.Append(SKS_PP_StringFormats::strFill(3,'', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(39, mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        gCheckSum += mSKS_PP_FileDetail.ChkCuryAmt;
        gCheckCount++;
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    protected str txtGroupTrailer()
    {
        // Bank of America 80 (format B)
        // group trailer line
        //Account Number    01 - 10
        //Filler            11 - 20
        //Total Amount      21 - 32
        //Date              33 - 38
        //Record Type       39 - 39
        //Number of Checks  40 - 45
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str result;
        ;
    
        sb.Append(SKS_PP_StringFormats::strFill(10, gBnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(gCheckSum,12));
        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
        sb.Append('T');
        sb.Append(SKS_PP_StringFormats::strFill(6, int2str(gCheckCount), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        result = sb.ToString();
        result = SKS_PP_StringFormats::strFill(mSKS_PP_FileFormat.RecordLen, result, SKS_PP_FIllCharacter::Space, SKS_PP_FillSide::Right);
        //Clear accumulators for next iteration
        gCheckSum = 0;
        gCheckCount = 0;
    
        return result;
    
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>