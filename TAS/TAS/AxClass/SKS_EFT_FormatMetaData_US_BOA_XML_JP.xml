<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_BOA_XML_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_BOA_XML_JP Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_BOA_XML_JP Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230310';
        dataContractVersion = '1.0';
        conFormatID = ['US-BOA-XML-JP'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US - Bank of America - ISO20022 CCT V03 - Japan',0,'','','US-BOA-XML-JP',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-BOA-XML-JP',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-BOA-XML-JP'):
                paymSpecList = this.getPaymSpecsMetaData_US_BOA_XML_JP();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_BOA_XML_JP</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_BOA_XML_JP()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border or Foreign Currency Transfer(Trade Payments)',1,'SWIFT','','SWIFT','TRADE PAY',0,'US-BOA-XML-JP',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Cross Border or Foreign Currency Transfer(NonTrade Payments)',1,'SWIFT','','SWT-NONTRA','TRADE PAY',0,'US-BOA-XML-JP',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Tokyo Low Value ACH Payment (Zengin)',1,'PAYACH','','PAYACH','TRADE PAY',0,'US-BOA-XML-JP',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Tokyo High Value Domestic Payment (GYK)',1,'PAYEFT','','PAYEFT','TRADE PAY',0,'US-BOA-XML-JP',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Fedwire USD Fedwire Transfer',1,'FED-WIRE','','FED-WIRE','TRADE PAY',0,'US-BOA-XML-JP',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-BOA-XML-JP'):
                notesList = this.getNotesMetaData_US_BOA_XML_JP();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_BOA_XML_JP</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_BOA_XML_JP()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-XML-JP','PAYEFT','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:--Initiating Party address will print, only if the Purpose of the address is mentioned as \'APEFT\'. Otherwise address will be ignored.::-Cash and bank management:--DbtrAgt Name is stored on the Name field from the General tab.:--DbtrAgt Address information is stored on the Address tab.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-XML-JP','PAYACH','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:--Initiating Party address will print, only if the Purpose of the address is mentioned as \'APEFT\'. Otherwise address will be ignored.::-Cash and bank management:--DbtrAgt Name is stored on the Name field from the General tab.:--DbtrAgt Address information is stored on the Address tab.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-XML-JP','SWIFT','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.:--Initiating Party address will print, only if the Purpose of the address is mentioned as \'APEFT\'. Otherwise address will be ignored.::-For cross currency SWIFT payment:--POP info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--PHON and CONT info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.:--BBB info stored in the Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab > Beneficiary bank group > Branch.::-Cash and bank management:--DbtrAgt Name is stored on the Name field from the General tab.:--DbtrAgt Address information is stored on the Address tab.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-XML-JP','FED-WIRE','-Group Header > Initiating Party > Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Debtor Name and Country/region are required.:--Initiating party Id stored in the Initiating party Id field::-Cash and bank management module > Bank Account:--Bank account number is required.:--Routing number is required.::-Vendor Bank Account fields:--Bank account number is required.:--Routing number is required.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:-Beneficiary:--Creditor Name is required and stored in Name field.:--Set Address1 field.:--Set Address2 field.:--City, State and Zip/postal are stored on their specific fields.:--Country code is required.:-Beneficiary bank:--Creditor agent country code is required.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-BOA-XML-JP','SWT-NONTRA','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Debtor Agent address comes from the Cash and Bank management > Bank account > Address tab.:--First address line and second address line are stored in the Street field separated by semicolon(\';\').::-For cross currency SWIFT payment:--POP info stored in the  is printing from Payment journal > Payment(tab) > Purpose name or text.:--PHON and CONT info stored in the AP > All vendors > Contact information(Fast tab) with the \'SKGPaymentContact\' purpose.:--BBB info stored in the Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab > Beneficiary bank group > Branch.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-BOA-XML-JP'):
                validationsList = this.getValidationsMetaData_US_BOA_XML_JP();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_BOA_XML_JP</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_BOA_XML_JP()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','ID','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab)>Id','PmtInf > DbtrAgt > BrnchId > Id','Debtor ID','15','WOrdPartyId','','',1,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,'3','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > CtrySubDvsn','Bank Country Sub Division','15','WOrdPartyState','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr2','','',1,'2','','70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',1,'2','8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','',1,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,'2','8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Name','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > Nm','Intermediary Bank Name','16','WIntBankName','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Country/Region ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > Ctry ','Intermediary Bank Country','16','WIntBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',0,0,'7','7',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Vendor Bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Ctry','Beneficiary Bank Name','16','WBenBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','vendor City','16','WBeneCity','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> CtrySubDvsn','Sub Division related to vendor','16','WBeneState','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr2','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',0,1,'8',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYACH','','Invoice number','Accounts payable > Payment journal > New > Select Name > Lines > New > Over view tab > Invoice','PmtInf > CdTrfTxInf > RmtInf > Ustrd','Invoice number related to payment','13','Invoice','','',1,1,'','24',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','ID','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab)>Id','PmtInf > DbtrAgt > BrnchId > Id','Debtor ID','15','WOrdPartyId','','',1,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,'3','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > CtrySubDvsn','Bank Country Sub Division','15','WOrdPartyState','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr2','','',1,'2','','70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',1,'2','8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','',1,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,'2','8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Name','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > Nm','Intermediary Bank Name','16','WIntBankName','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Country/Region ','TAS >x Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > Ctry ','Intermediary Bank Country','16','WIntBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Vendor Bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','PmtInf > CdTrfTxInf > CdtrAgt > Ctry','Beneficiary Bank Name','16','WBenBankCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,'3','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','vendor City','16','WBeneCity','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> CtrySubDvsn','Sub Division related to vendor','16','WBeneState','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',0,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr2','','',0,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','PAYEFT','','Invoice number','Accounts payable > Payment journal > New > Select Name > Lines > New > Over view tab > Invoice','PmtInf > CdTrfTxInf > RmtInf > Ustrd','Invoice number related to payment','13','Invoice','','',1,1,'','140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','ID','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab)>Id','PmtInf > DbtrAgt > BrnchId > Id','Debtor ID','15','WOrdPartyId','','',1,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,0,'3','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > CtrySubDvsn','Bank Country Sub Division','15','WOrdPartyState','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr2','','',1,'2','','70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',1,0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','',1,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,'2','8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Name','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > Nm','Intermediary Bank Name','16','WIntBankName','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','Country/Region ','TAS >x Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > Ctry ','Intermediary Bank Country','16','WIntBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,0,'3','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','vendor City','16','WBeneCity','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> CtrySubDvsn','Sub Division related to vendor','16','WBeneState','','',1,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',0,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr2','','',0,'2','','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWIFT','','Invoice number','Accounts payable > Payment journal > New > Select Name > Lines > New > Over view tab > Invoice','PmtInf > CdTrfTxInf > RmtInf > Ustrd','Invoice number related to payment','13','Invoice','','',1,1,'','140',0,0]);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Branch Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab)> Id ','PmtInf > DbtrAgt > BrnchId > Id','Branch ID','15','WOrdPartyId','','',1,'2',1,'4',0,0]);        
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,1,'3','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > PstCd','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','City ','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > TwnNm','TownName related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','State/province','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > State/province','PmtInf > Dbtr > PstlAdr > CtrySubDvsn','Bank Country Sub Division','15','WOrdPartyState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine','Address related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','IBAN','Cash and bank management > Select bank account > edit > Additional identification (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id >IBAN ','IBAN related to Bank',0,'IBAN','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PmtInf > DbtrAcct > Id > Othr > Id','Bank account number ',0,'AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','PmtInf > DbtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Bank Routing Number',0,'RegistrationNum','','',1,'2',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Swift number','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > BIC','Intermediary Swift number related to vendor','16','WIntBankSwift','','',1,1,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > ClrSysMmbId > MmbId','Intermediary Bank Id related to vendor','16','WIntBankId','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Name','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > Nm','Intermediary Bank Name','16','WIntBankName','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Country/Region ','TAS >x Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','PmtInf > CdTrfTxInf > IntrmyAgt1 > FinInstnId > PstlAdr > Ctry ','Intermediary Bank Country','16','WIntBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,0,'8','11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'3','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','ZIP/Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > PstCd','Vendor Zip/postal code','16','WBeneZipPostal','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > TwnNm','vendor City','16','WBeneCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PmtInf > CdTrfTxInf >Cdtr> PstlAdr> CtrySubDvsn','Sub Division related to vendor','16','WBeneState','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > AdrLine','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-BOA-XML-JP','SWT-NONTRA','','Invoice number','Accounts payable > Payment journal > New > Select Name > Lines > New > Over view tab > Invoice','PmtInf > CdTrfTxInf > RmtInf > Ustrd','Invoice number related to payment','3','Invoice','','',1,1,1,'140',0,0]);
        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-BOA-XML-JP','ChrgBr','Charge Bearer']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-BOA-XML-JP','PurpPaymentCode','Purpose of Payment Code']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-XML-JP','ChrgBr','Debtor','OUR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-XML-JP','ChrgBr','Creditor','BEN']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-XML','PurpPaymentCode','Payments','9999']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-XML','PurpPaymentCode','Personal Gift','0615']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-XML','PurpPaymentCode','Loans from a foreign parent company','0920']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-XML','PurpPaymentCode','Deposits to non residents','0875']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-XML','PurpPaymentCode','Reinsurance premium','0317']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-XML','PurpPaymentCode','Payment to/from overseas pertain to transaction','1003']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-XML','PurpPaymentCode','Loans to foreign affiliated companies','0823']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-XML','PurpPaymentCode','Trading value of other cargo other than brokerage transaction cargo','0062']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-XML','PurpPaymentCode','Exchange transactions','1001']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-XML','PurpPaymentCode','Debits and credits or offset balance of clearing','0491']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-XML','PurpPaymentCode','Expense related to other professional work','0468']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-XML','PurpPaymentCode','Trading value of loan claims to a resident','0973']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-BOA-XML','PurpPaymentCode','Branch earnings','0512']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('US-BOA-XML-JP'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_BOA_XML_JP();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_BOA_XML_JP</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_BOA_XML_JP()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-XML-JP','US-BOA-XML-JP','SWIFT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-XML-JP','US-BOA-XML-JP','PAYACH','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-XML-JP','US-BOA-XML-JP','PAYEFT','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-XML-JP','US-BOA-XML-JP','FED-WIRE','ChrgBr','Charge Bearer',0,'ChrgBr','',0,'','','PmtInf > CdtTrfTxInf > ChrgBr']);

        
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-XML','US-BOA-XML-JP','SWIFT','POPCode','Purpose Of Payment Code',1,'POPCode','',1,'','XXXX','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Inf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-XML','US-BOA-XML-JP','SWIFT','NameOfGoods','Name Of Goods',1,'NameOfGoods','',1,'','XXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Inf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-XML','US-BOA-XML-JP','SWIFT','CountryOfOrigin','Country Of Region',1,'CountryOfOrigin','',1,'','XX','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Inf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-XML','US-BOA-XML-JP','SWIFT','RegionOfShipment','Region Of Shipment',1,'RegionOfShipment','',1,'','XXXXXXXXXXXXXXXXXXXX','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Inf']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-XML','US-BOA-XML-JP','SWIFT','RiskRegion','Risk Region',1,'RiskRegion','',1,'','XXXXXXXXXXX','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Inf']);
        
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-XML','US-BOA-XML-JP','SWT-NONTRA','PurpPaymentCode','Purpose Of Payment Code',0,'PurpPaymentCode','',1,'','','PmtInf > CdtTrfTxInf > RgltryRptg > Dtls > Inf']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-XML','US-BOA-XML-JP','PAYEFT','Tp','Tp',1,'Tp','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','RgltryRptg > Dtls > Tp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-XML','US-BOA-XML-JP','PAYEFT','Inf','Inf',1,'Inf','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','RgltryRptg > Dtls > Inf']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML','US-BOA-XML-JP','PaymSpecFields','SWIFT','BenType','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML','US-BOA-XML-JP','PaymSpecFields','SWIFT','CUIT','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML','US-BOA-XML-JP','PaymSpecFields','SWIFT','CUIL','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML','US-BOA-XML-JP','PaymSpecFields','SWIFT','TAX','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML','US-BOA-XML-JP','PaymSpecFields','SWIFT','CPF','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML','US-BOA-XML-JP','PaymSpecFields','SWIFT','CNPJ','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML','US-BOA-XML-JP','PaymSpecFields','SWIFT','RUT','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML','US-BOA-XML-JP','PaymSpecFields','SWIFT','RUN','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML','US-BOA-XML-JP','PaymSpecFields','SWIFT','NIT','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML','US-BOA-XML-JP','PaymSpecFields','SWIFT','CED','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML','US-BOA-XML-JP','PaymSpecFields','SWIFT','RUC','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML','US-BOA-XML-JP','PaymSpecFields','SWIFT','DNI','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML','US-BOA-XML-JP','PaymSpecFields','SWIFT','RIF','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML','US-BOA-XML-JP','PaymSpecFields','SWIFT','BOCRPK','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML','US-BOA-XML-JP','PaymSpecFields','SWIFT','BCCI','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML-JP','US-BOA-XML-JP','FormatValidations','PAYACH','15','W02']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML-JP','US-BOA-XML-JP','FormatValidations','*','1','IBAN']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML-JP','US-BOA-XML-JP','FormatValidations','*','3','Invoice']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML-JP','US-BOA-XML-JP','FormatValidations','*','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML-JP','US-BOA-XML-JP','FormatLookup','*','*','']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-BOA-XML-JP','US-BOA-XML-JP','PaymSpecFields','PAYACH','PATID','']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch(_formatID)
        {
            case ('US-BOA-XML-JP'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_BOA_XML_JP();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_BOA_XML_JP</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_BOA_XML_JP()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-BOA-XML-JP','US-BOA-XML-JP','InitgPtyId','Sender Id',1,'InitgPtyId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > OrgId > Othr > Id']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('US-BOA-XML-JP'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('InitgPtyId', gSKS_EFT_Bank.W01);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('US-BOA-XML-JP'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('ChrgBr', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>