<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_CITI_CDFF_LATAM</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_CITI_CDFF_LATAM  extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_US_CITI_CDFF_LATAM  extends SKS_EFT_Format
{
    #define.FormatVersion('20220624')
    #define.HATCH('#')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_Bank
            this.getSKS_EFT_Bank();

            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();

            //Details
            this.rec_Main();

            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Main</Name>
				<Source><![CDATA[
    //1     Placeholder
//2     Country Code
//3     Payment Method
//4     Value Date
//5     Priority Flag
//6     PreFormat Group Code
//7     PreFormat Code
//8     Payment Type
//9     Payment Currency
//10    Payment Amount
//11    Debit Party Account or Other ID Type
//12    Debit Account / Debit Party Account
//13    Debit Party Name
//14    Debit Party Advice Type
//15    Debit Bank Routing Code
//16    Debit Bank Name
//17    Debit Bank Address Line 1
//18    Debit Bank Address Line 2
//19    Debit Bank Address Line 3
//20    Placeholder
//21    Number of Credit Parties
//22    Charges Indicator
//23    Processing Date
//24    Debit Account Currency
//25    Transaction Reference Number
//26    Beneficiary Reference
//27    Confidential
//28    Intra-Company
//29    Placeholder
//30    Transaction Type
//31    Entry Description
//32    Individual Company ID
//33    Pre-Note
//34    Funds Type
//35    Ordering Party ID Type
//36    Ordering Party ID
//37    Ordering Party Name
//38    Ordering Party Address – Line 1
//39    Ordering Party Address – Line 2
//40    Ordering Party Address – Line 3
//41    Credit Account
//42    Beneficiary Is
//43    Beneficiary Account or Other ID Type
//44    Beneficiary Account or Other ID
//45    Beneficiary Name
//46    Beneficiary Advice Type
//47    Beneficiary Address Line 1
//48    Beneficiary Address Line 2
//49    Beneficiary Address Line 3
//50    Beneficiary Bank Routing Method
//51    Beneficiary Bank Routing Code
//52    Beneficiary Bank Account or Other ID Type
//53    Beneficiary Bank Account or Other ID
//54    Beneficiary Bank Advice Type
//55    Beneficiary Bank Name
//56    Beneficiary Bank Address Line 1
//57    Beneficiary Bank Address Line 2
//58    Beneficiary Bank Address Line 3
//59    First Intermediary Bank Routing Method
//60    First Intermediary Bank Routing Code
//61    First Intermediary Bank Name
//62    First Intermediary Bank Address Line 1
//63    First Intermediary Bank Address Line 2
//64    First Intermediary Bank Address Line 3
//65    Second Intermediary Bank Account or Other ID Type
//66    Second Intermediary Bank Account or Other ID
//67    Second Intermediary Bank Advice Type
//68    Second Intermediary Bank Name
//69    Second Intermediary Bank Address – Line 1
//70    Second Intermediary Bank Address – Line 2
//71    Second Intermediary Bank Address – Line 3
//72    Payment Details Line 1
//73    Payment Details Line 2
//74    Payment Details Line 3
//75    Payment Details Line 4
//76    Bank Details Line 1
//77    Bank Details Line 2
//78    Bank Details Line 3
//79    Bank Details Line 4
//80    Bank Details Line 5
//81    Bank Details Line 6
//82    Pre-Advice Flag
//83    Pre-Advice Details
//84    Addenda Information
//85    Memo Details
    boolean rec_Main()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        SKS_EFT_FileDetail      sks_EFT_FileDetail;
        LedgerJournalTrans      ledgerJournalTrans;
        BankCentralBankPurpose  bankCentralBankPurpose;
        str benBankRoutingMethod,wordPartyAddress,benAddress;
        str invDetails = '';

        //1        Placeholder
        sb.Append(this.wrapField());

        //2        Country Code
        sb.Append(this.wrapField(this.getLogisticsAddressCountryISO(mSKS_EFT_Bank.WOrdPartyCountryRegionId)));

        //3        Payment Method
        sb.Append(this.wrapField('EFT'));

        //4        Value Date
        sb.Append(this.wrapField(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_File.EffectiveDate, DateSeparator::None)));

        //5        Priority Flag
        sb.Append(this.wrapField(''));

        //6        PreFormat Group Code
        sb.Append(this.wrapField(''));

        //7        PreFormat Code
        sb.Append(this.wrapField(''));

        //8        Payment Type
        sb.Append(this.wrapField(''));

        //9        Payment Currency
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.PaymentCurrencyCode));

        //10    Payment Amount
        sb.Append(this.wrapField(subStr(num2str(-1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,0,2,1,0), 1, 21)));

        //11    Debit Party Account or Other ID Type
        sb.Append(this.wrapField(''));

        //12    Debit Account / Debit Party Account
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.BankBankAcct, 1, 35)));

        //13    Debit Party Name
        sb.Append(this.wrapField(''));

        //14    Debit Party Advice Type
        sb.Append(this.wrapField(''));

        //15    Debit Bank Routing Code
        sb.Append(this.wrapField(''));

        //16    Debit Bank Name
        sb.Append(this.wrapField(''));

        //17    Debit Bank Address Line 1
        sb.Append(this.wrapField(''));

        //18    Debit Bank Address Line 2
        sb.Append(this.wrapField(''));

        //19    Debit Bank Address Line 3
        sb.Append(this.wrapField(''));

        //20    Placeholder
        sb.Append(this.wrapField(''));

        //21    Number of Credit Parties
        sb.Append(this.wrapField(''));

        //22    Charges Indicator
        sb.Append(this.wrapField(''));

        //23    Processing Date
        sb.Append(this.wrapField(''));

        //24    Debit Account Currency
        sb.Append(this.wrapField(''));

        //25    Transaction Reference Number
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.PaymentReference, 1, 16)));

        //26    Beneficiary Reference
        sb.Append(this.wrapField(''));

        //27    Confidential
        sb.Append(this.wrapField(''));

        //28    Intra-Company
        sb.Append(this.wrapField(''));

        //29    Beneficiary Country Code
        sb.Append(this.wrapField(this.getLogisticsAddressCountryISO(mSKS_EFT_VendorPaym.WBenBankCountryRegionId)));

        //30    Transaction Type
        sb.Append(this.wrapField(''));

        //31    Entry Description
        sb.Append(this.wrapField(''));

        //32    Individual Company ID
        sb.Append(this.wrapField(''));

        //33    Pre-Note
        sb.Append(this.wrapField(''));

        //34    Funds Type
        sb.Append(this.wrapField(''));

        //35    Ordering Party ID Type
        sb.Append(this.wrapField(''));

        //36    Ordering Party ID
        sb.Append(this.wrapField(substr(mSKS_EFT_Bank.WOrdPartyId, 1, 34)));

        //37    Ordering Party Name
        sb.Append(this.wrapField(subStr(mSKS_EFT_Bank.WOrdPartyName, 1, 35)));

        //38    Ordering Party Address – Line 1
        sb.Append(this.wrapField(subStr(mSKS_EFT_Bank.WOrdPartyAddr, 1, 35)));

        //39    Ordering Party Address – Line 2
        sb.Append(this.wrapField(subStr(mSKS_EFT_Bank.WOrdPartyAddr2, 1, 35)));

        //40    Ordering Party Address – Line 3
        if(mSKS_EFT_Bank.WOrdPartyCity || mSKS_EFT_Bank.WOrdPartyState || mSKS_EFT_Bank.WOrdPartyZipCode)
        {
            if(mSKS_EFT_Bank.WOrdPartyCity)
            {
                wordPartyAddress += mSKS_EFT_Bank.WOrdPartyCity;
            }

            if(mSKS_EFT_Bank.WOrdPartyState)
            {
                if(wordPartyAddress)
                {
                    wordPartyAddress += ',';
                }
                wordPartyAddress += mSKS_EFT_Bank.WOrdPartyState;
            }

            if(mSKS_EFT_Bank.WOrdPartyZipCode)
            {
                if(wordPartyAddress)
                {
                    wordPartyAddress += ',';
                }
                wordPartyAddress += mSKS_EFT_Bank.WOrdPartyZipCode;
            }
        }
        sb.Append(this.wrapField(subStr(wordPartyAddress, 1, 35)));

        //41    Credit Account
        sb.Append(this.wrapField(''));

        //42    Beneficiary Is
        sb.Append(this.wrapField(''));

        //43    Beneficiary Account or Other ID Type
        sb.Append(this.wrapField('/ACCT/'));

        //44    Beneficiary Account or Other ID
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.DepBankAcct, 1, 34)));

        //45    Beneficiary Name
        sb.Append(this.wrapField(subStr(mSKS_EFT_VendorPaym.WBeneName, 1, 35)));

        //46    Beneficiary Advice Type
        sb.Append(this.wrapField(''));

        //47    Beneficiary Address Line 1
        sb.Append(this.wrapField(subStr(mSKS_EFT_VendorPaym.WBeneAddr, 1, 35)));

        //48    Beneficiary Address Line 2
        sb.Append(this.wrapField(subStr(mSKS_EFT_VendorPaym.WBeneAddr2, 1, 35)));

        //49    Beneficiary Address Line 3
        if(mSKS_EFT_VendorPaym.WBeneCity || mSKS_EFT_VendorPaym.WBeneState || mSKS_EFT_VendorPaym.WBeneZipPostal)
        {
            if(mSKS_EFT_VendorPaym.WBeneCity)
            {
                benAddress += mSKS_EFT_VendorPaym.WBeneCity;
            }

            if(mSKS_EFT_VendorPaym.WBeneState)
            {
                if(benAddress)
                {
                    benAddress += ',';
                }
                benAddress += mSKS_EFT_VendorPaym.WBeneState;
            }

            if(mSKS_EFT_VendorPaym.WBeneZipPostal)
            {
                if(benAddress)
                {
                    benAddress += ',';
                }
                benAddress += mSKS_EFT_VendorPaym.WBeneZipPostal;
            }
        }
        sb.Append(this.wrapField(subStr(benAddress, 1, 35)));

        //50    Beneficiary Bank Routing Method
        switch(mSKS_EFT_FileDetail.DepBankCodeType)
        {
            case BankCodeType::Code_FW:
                benBankRoutingMethod = 'FW';
                break;
            case BankCodeType::Code_CP:
                benBankRoutingMethod = 'CP';
                break;
            default:
                benBankRoutingMethod = 'IS';
                break;
        }
        sb.Append(this.wrapField(benBankRoutingMethod));

        //51    Beneficiary Bank Routing Code
        if(benBankRoutingMethod != 'IS')
        {
            sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.DepBankTransit, 1, 11)));
        }
        else
        {
            sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.DepSwiftNo, 1, 11)));
        }
        //52    Beneficiary Bank Account or Other ID Type
        sb.Append(this.wrapField(''));

        //53    Beneficiary Bank Account or Other ID
        sb.Append(this.wrapField(''));

        //54    Beneficiary Bank Advice Type
        sb.Append(this.wrapField(''));

        //55    Beneficiary Bank Name
        sb.Append(this.wrapField(subStr(mSKS_EFT_VendorPaym.WBenBankName, 1, 35)));

        //56    Beneficiary Bank Address Line 1
        sb.Append(this.wrapField(subStr(mSKS_EFT_VendorPaym.WBenBankAddr, 1, 35)));

        //57    Beneficiary Bank Address Line 2
        sb.Append(this.wrapField(subStr(mSKS_EFT_VendorPaym.WBenBankCity, 1, 35)));

        //58    Beneficiary Bank Address Line 3
        sb.Append(this.wrapField(''));

        //59    First Intermediary Bank Routing Method
        sb.Append(this.wrapField(''));

        //60    First Intermediary Bank Routing Code
        if(benBankRoutingMethod != 'IS')
        {
            sb.Append(this.wrapField(subStr(mSKS_EFT_VendorPaym.WIntBankId, 1, 11)));
        }
        else
        {
            sb.Append(this.wrapField(subStr(mSKS_EFT_VendorPaym.WIntBankSwift, 1, 11)));
        }

        //61    First Intermediary Bank Name
        sb.Append(this.wrapField(subStr(mSKS_EFT_VendorPaym.WIntBankName, 1, 35)));

        //62    First Intermediary Bank Address Line 1
        sb.Append(this.wrapField(subStr(mSKS_EFT_VendorPaym.WIntBankAddr, 1, 35)));

        //63    First Intermediary Bank Address Line 2
        sb.Append(this.wrapField(subStr(mSKS_EFT_VendorPaym.WIntBankAddr2, 1, 35)));

        //64    First Intermediary Bank Address Line 3
        sb.Append(this.wrapField(subStr(mSKS_EFT_VendorPaym.WIntBankCity, 1, 35)));

        //65    Second Intermediary Bank Account or Other ID Type
        sb.Append(this.wrapField(''));

        //66    Second Intermediary Bank Account or Other ID
        sb.Append(this.wrapField(''));

        //67    Second Intermediary Bank Advice Type
        sb.Append(this.wrapField(''));

        //68    Second Intermediary Bank Name
        sb.Append(this.wrapField(''));

        //69    Second Intermediary Bank Address – Line 1
        sb.Append(this.wrapField(''));

        //70    Second Intermediary Bank Address – Line 2
        sb.Append(this.wrapField(''));

        //71    Second Intermediary Bank Address – Line 3
        sb.Append(this.wrapField(''));

        //72    Payment Details Line 1
        while select InvoiceNumber from SKS_EFT_FileDetail where sks_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
        {
            invDetails += sks_EFT_FileDetail.InvoiceNumber + ',';
        }

        if(invDetails)
        {
            invDetails = subStr(invDetails, 1, strLen(invDetails)-1);
        }

        sb.Append(this.wrapField(subStr(invDetails, 1, 35)));

        //73    Payment Details Line 2
        sb.Append(this.wrapField(''));

        //74    Payment Details Line 3
        sb.Append(this.wrapField(''));

        //75    Payment Details Line 4
        sb.Append(this.wrapField(''));

        //76    Bank Details Line 1
        select Code from bankCentralBankPurpose join BankCentralBankPurposeCode from ledgerJournalTrans
            where bankCentralBankPurpose.Code == ledgerJournalTrans.BankCentralBankPurposeCode
               && ledgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;

        if(bankCentralBankPurpose.Code)
        {
            sb.Append(this.wrapField('/'+ bankCentralBankPurpose.Code + '/'));
        }
        else
        {
            sb.Append(this.wrapField(''));
        }

        //77    Bank Details Line 2
        sb.Append(this.wrapField(''));

        //78    Bank Details Line 3

        sb.Append(this.wrapField(''));

        //79    Bank Details Line 4
        sb.Append(this.wrapField(''));

        //80    Bank Details Line 5
        sb.Append(this.wrapField(''));

        //81    Bank Details Line 6
        sb.Append(this.wrapField(''));

        //82    Pre-Advice Flag
        sb.Append(this.wrapField(''));

        //83    Pre-Advice Details
        sb.Append(this.wrapField(''));

        //84    Addenda Information
        sb.Append(this.wrapField(''));

        //85    Memo Details
        sb.Append(this.wrapField('', false));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '', boolean _addhatch = true)
    {
        str text;
        
        text = _field;
        if(_addHatch)
        {
            text += #HATCH;
        }
        return text;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>