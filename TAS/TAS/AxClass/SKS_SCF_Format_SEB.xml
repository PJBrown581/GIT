<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_SCF_Format_SEB</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_SCF_Format_SEB Extends SKS_SCF_Format
{

    //SEB
    //Record Type Code	    01-02
    //Agreement	            03-10
    //Invoice/CM	        11-30
    //Invoice/cm amount     31-41
    //Invoice date	        42-51
    //Due date	            52-61
    //Cuirrency	            62-64

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str clientId, buyerId;
        SKS_SCF_Provider lSKS_SCF_Provider;

        if(mSKS_SCF_FileDetail.Amount > 0)
        {
            sb.Append('FA');
        }
        else
        {
            sb.Append('CN');
        }

        lSKS_SCF_Provider = SKS_SCF_Provider::find(mSKS_SCF_File.ProviderID);

        clientId = SKS_SCF_Format::getVendorCodelookupvalue('ClientId', mSKS_SCF_InvoiceFileFormat, VendTable::find(mSKS_SCF_FileDetail.VendorAccount).RecId);
        buyerId = SKS_SCF_Format::getValueFromCode('BuyerId', mSKS_SCF_InvoiceFileFormat, lSKS_SCF_Provider.RecId);

        // + 20772
        int clientIdLen;

        if (strLen(clientId) > 7)
        {
            clientIdLen = 8;
        }
        else
        {
            clientIdLen = 7;
            sb.Append('0');
        }
        // - 20772

        sb.Append(SKS_PP_StringFormats::strFill(clientIdLen, clientId,SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));

        sb.Append(SKS_PP_StringFormats::strFill(10, buyerId,SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Right));

        sb.Append(SKS_PP_StringFormats::strFill(10, '',SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Right));

        
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(mSKS_SCF_FileDetail.Amount), 11));
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_SCF_FileDetail.InvoiceDate, DateSeparator::Hyphen));
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_SCF_FileDetail.DueDate, DateSeparator::Hyphen));

        sb.Append(SKS_PP_StringFormats::strFill(3, mSKS_SCF_FileDetail.CurrencyCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append(SKS_PP_StringFormats::strFill(30, '',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));

        sb.Append(SKS_PP_StringFormats::strFill(15, mSKS_SCF_FileDetail.Invoice, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        sb.Append(SKS_PP_StringFormats::strFill(20, '',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));

        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>