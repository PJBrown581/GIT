<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_RF_FormatMetaData_EDI997</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SKS_EFT_RF_FormatMetaData_EDI997 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
        productVersion = '';
        formatGroupVersion = '20210512';
        conFormatID = ['EDI997'];
        formatfiletype = 'EFTInbound';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundFormatMetaData</Name>
				<Source><![CDATA[
    protected container getInboundFormatMetaData()
    {
        container   inboundFormatList;

        //Metadata column names of data elements
        ////FormatId,Description,Selected,ProductVersion,FormatVersion

        inboundFormatList = ConIns(inboundFormatList,conLen(inboundFormatList)+1,[productVersion,formatGroupVersion,'EDI997','EDI 997 Functional Acknowledgement',0]);

        return inboundFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundStatusMetaData</Name>
				<Source><![CDATA[
    protected container getInboundStatusMetaData(str _formatID)
    {
        container   inboundStatusList;

        //Metadata column names of data elements
        //FormatId,StatusType,StatusId,StatusIdDisplay,Origin

        switch (_formatID)
        {
            case ('EDI997'):
                inboundStatusList = this.getInboundStatusMetaData_EDI997();
                break;

        }

        return inboundStatusList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundStatusMetaData_EDI997</Name>
				<Source><![CDATA[
    private container getInboundStatusMetaData_EDI997()
    {
        container   inboundStatusList;

        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['EDI997',0,'<Empty>','Empty status',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['EDI997',0,'A','Accepted',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['EDI997',0,'E','Accepted with errors',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['EDI997',0,'M','Rejected message authentication code (MAC) failed',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['EDI997',0,'P','Partially accepted',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['EDI997',0,'R','Rejected',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['EDI997',0,'W','Rejected assurance failed validity tests',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['EDI997',0,'X','Rejected content after decryption could not be analyzed',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['EDI997',1,'<Empty>','Empty status',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['EDI997',1,'A','Accepted',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['EDI997',1,'E','Accepted with errors',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['EDI997',1,'M','Rejected message authentication code (MAC) failed',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['EDI997',1,'P','Partially accepted at least one transaction was rejected',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['EDI997',1,'R','Rejected',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['EDI997',1,'W','Partially accepted at least one transaction set was rejected',1]);
        inboundStatusList = ConIns(inboundStatusList,conLen(inboundStatusList)+1,['EDI997',1,'X','Rejected content after decryption could not be analyzed',1]);

        return inboundStatusList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundRCodeMetaData</Name>
				<Source><![CDATA[
    protected container getInboundRCodeMetaData(str _formatID)
    {
        container   reasonCodeList;

        //Metadata column names of data elements
        //FormatId,ReasonCode,ReasonDesc,Origin

        switch (_formatID)
        {
            case ('EDI997'):
                reasonCodeList = this.getInboundRCodeMetaData_EDI997();
                break;

        }

        return reasonCodeList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getInboundRCodeMetaData_EDI997</Name>
				<Source><![CDATA[
    private container getInboundRCodeMetaData_EDI997()
    {
        container   reasonCodeList;

        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','<Empty>','Empty reason code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997',1,'Transaction not supported',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','2','Transaction set trailer missing',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','3','Transaction set control number in header and trailer do not match',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','4','Number of included segments does not match actual count',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','5','One or more segments in error',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','6','Missing or invalid transaction set identifier',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','7','Missing or invalid transaction set control number (a duplicate transaction number may have occurred)',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','8','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','9','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','10','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','11','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','12','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','13','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','14','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','15','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','16','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','17','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','18','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','19','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','20','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','21','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','22','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','23','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','24','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','25','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','26','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','27','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP1','Functional group not supported',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP2','Functional group version not supported',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP3','Functional group trailer missing',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP4','Group control number in the functional group header and trailer do not agree',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP5','Number of included transaction sets does not match actual count',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP6','Group control number violates syntax (a duplicate group control number may have occurred)',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP7','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP8','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP9','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP10','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP11','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP12','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP13','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP14','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP15','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP16','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP17','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP18','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP19','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP20','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP21','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP22','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP23','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP24','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP25','Custom error code',1]);
        reasonCodeList = ConIns(reasonCodeList,conLen(reasonCodeList)+1,['EDI997','GRP26','Custom error code',1]);

        return reasonCodeList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   conDelete;
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>