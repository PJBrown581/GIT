<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_SE_BANKGIROT_LB_80</Name>
	<SourceCode>
		<Declaration><![CDATA[
// Bankgirot - Leverantörsbetalningar in Swedish 
// November 2019
//
// Supports transaction types: Domestic payments
//
// Structure:

/// <summary>
/// SKS_EFT_Format_SE_BANKGIROT_LB_80 extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_SE_BANKGIROT_LB_80 extends SKS_EFT_Format
{
    #define.FormatVersion('20220125')
    int mPaymentCount;
    AmountMST mPaymentAmount;
    str mSenderBankGiro;
    //SKS_VSTS_14152 -->
    #define.DOM_PMT('DOM-PMT')
    #define.PLS_GIRO('PLS-GIRO')
    //SKS_VSTS_14152 <--

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        BankAccountId prevBankAccount;
        CurrencyCode prevCurrencyCode;
        ;
    
        while(mSKS_EFT_FileDetail)
        {
            if(prevBankAccount != mSKS_EFT_FileDetail.BankAccountId || prevCurrencyCode != mSKS_EFT_FileDetail.PaymentCurrencyCode)
            {
                // Header
                this.rec_TK11();
    
                // Reset counters
                mPaymentCount = 0;
                mPaymentAmount = 0;
            }
    
            // Detail lines 
            if(mSKS_EFT_FileDetail.RecordSummary == SKS_EFT_RecordSummary::Invoice)
            {
                if(mSKS_EFT_FileDetail.PaymSpec == #PLS_GIRO)//SKS_VSTS_14152
                {
                    this.rec_TK54(mSKS_EFT_FileDetail);

                    this.rec_TK65(mSKS_EFT_FileDetail);
                }
                else
                {
                    // Detail lines
                    this.rec_TK14(mSKS_EFT_FileDetail);

                    this.rec_TK25(mSKS_EFT_FileDetail);
                }
            }
            else
            {
                while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                {
                    if(mSKS_EFT_FileDetail.PaymSpec == #PLS_GIRO)//SKS_VSTS_14152
                    {
                        this.rec_TK54(invSKS_EFT_FileDetail);

                        this.rec_TK65(invSKS_EFT_FileDetail);
                    }
                    else
                    {
                        // Detail lines
                        this.rec_TK14(invSKS_EFT_FileDetail);

                        this.rec_TK25(invSKS_EFT_FileDetail);
                    }
                }
            }
    
            prevBankAccount = mSKS_EFT_FileDetail.BankAccountId;
            prevCurrencyCode = mSKS_EFT_FileDetail.PaymentCurrencyCode;
    
            next mSKS_EFT_FileDetail;
    
            if(prevBankAccount != mSKS_EFT_FileDetail.BankAccountId || prevCurrencyCode != mSKS_EFT_FileDetail.PaymentCurrencyCode)
            {
                // Format trailer
                this.rec_TK29();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_TK11</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Max     Start   Type    Comment
    //1     Transaction code                                    2       1       N
    //2     Sender's bankgiro number                            10      3       N       Zero fill
    //3     Sender's creation date                              6       13      N       YYMMDD
    //4     Product                                             22      19      A       Upper case
    //5     Payment date                                        6       41      N       YYMMDD (left blank so detail lines are used)
    //6     Reserved field                                      13      47      A       Blank
    //7     Currency code                                       3       60      A       SEK or EUR or blank
    //8     Reserved field                                      18      63      A       Blank
    boolean rec_TK11()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        ;
    
        //1     Transaction code
        sb.Append('11');
    
        //2     Sender's bankgiro number
        mSenderBankGiro = SKS_EFT_Format::getCodelookupvalue('SwedishBankGiroAccnt', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);//SKS_VSTS_13887
        sb.Append(SKS_PP_StringFormats::strFill(10, mSenderBankGiro, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        //3     Sender's date written
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
    
        //4     Product
        sb.Append('LEVERANTÖRSBETALNINGAR');
    
        // 5    Payment Date
        sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //6     Reserved field
        sb.Append(SKS_PP_StringFormats::strFill(13, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //7     Currency code
        sb.Append(SKS_PP_StringFormats::strFill(3, mSKS_EFT_FileDetail.PaymentCurrencyCode, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        //8     Reserved field
        sb.Append(SKS_PP_StringFormats::strFill(18, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_TK14</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Max     Start   Type    Comment
    //1     Transaction code                                    2       1       N
    //2     Payee's bankgiro or credit transfer number          10      3       N       Zero fill
    //3     OCR reference or invoice number                     25      13      A
    //4     Amount                                              12      38      N       Zero fill
    //5     Payment date                                        6       50      N       YYMMDD
    //6     Reserved field                                      5       56      A       Blank
    //7     Information to sender                               20      61      A
    boolean rec_TK14(SKS_EFT_FileDetail _mSKS_EFT_FileDetail)
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        AmountMST amt;
        str OCRReference;//SKS_VSTS_13887
        ;
    
        //1     Transaction code
        if(_mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1 > 0)        //SKS_VSTS_14340
        {
            sb.Append('14');
        }
        else
        {
            sb.Append('16');        //SKS_VSTS_14340
        }
    
        //2     Payee's bankgiro or credit transfer number
        sb.Append(SKS_PP_StringFormats::strFill(10, _mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        //3     OCR reference or invoice number
        if(_mSKS_EFT_FileDetail.PaymId)//SKS_VSTS_13887
        {
            OCRReference = _mSKS_EFT_FileDetail.PaymId;
        }
        else
        {
            OCRReference = _mSKS_EFT_FileDetail.InvoiceNumber;
        }
        sb.Append(SKS_PP_StringFormats::strFill(25, OCRReference, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));//SKS_VSTS_14798
    
        //4     Amount
        amt = this.getPositiveAmount(_mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur);
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(amt), 12));
    
        // 5    Payment Date or pay day
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(_mSKS_EFT_FileDetail.EffectiveDate));
    
        //6     Reserved field
        sb.Append(SKS_PP_StringFormats::strFill(5, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //7     Information to sender
        sb.Append(SKS_PP_StringFormats::strFill(20, this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        this.fileWrite(sb.ToString());
    
        mPaymentCount++;
        mPaymentAmount += _mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_TK25</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Max     Start   Type    Comment
    //1     Transaction code                                    2       1       N
    //2     Payee's bankgiro or credit transfer number          10      3       N       Zero fill
    //3     Information text                                    50      13      A
    //4     Reserved field                                      18      50      A       Blank
    boolean rec_TK25(SKS_EFT_FileDetail _SKS_EFT_FileDetail)
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        //1     Transaction code
        sb.Append('25');

        //2     Payee's bankgiro or credit transfer number
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        //3     Information text
        sb.Append(SKS_PP_StringFormats::strFill(50, _SKS_EFT_FileDetail.InvoiceNumber, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //4     Reserved field
        sb.Append(SKS_PP_StringFormats::strFill(18, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_TK65</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Max     Start   Type    Comment
    //1     Transaction code                                    2       1       N
    //2     Payee's Plus bankgiro number                        10      3       N       Zero fill
    //3     Information text                                    50      13      A
    //4     Reserved field                                      18      50      A       Blank
    boolean rec_TK65(SKS_EFT_FileDetail _SKS_EFT_FileDetail)
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        //1     Transaction code
        sb.Append('65');
    
        //2     Payee's plus giro or credit transfer number
        sb.Append(SKS_PP_StringFormats::strFill(10, _SKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        //3     Information text
        sb.Append(SKS_PP_StringFormats::strFill(50, _SKS_EFT_FileDetail.InvoiceNumber, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //4     Reserved field
        sb.Append(SKS_PP_StringFormats::strFill(18, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_TK29</Name>
				<Source><![CDATA[
    //Nbr   Description                                         Max     Start   Type    Comment
    //1     Transaction code                                    2       1       N
    //2     Sender's bankgiro number                            10      3       N       Zero fill
    //3     Number of payment records                           8       13      N       Zero fill
    //4     Total amount                                        12      21      N       Zero fill
    //6     Reserved field                                      48      33      A       Blank
    boolean rec_TK29()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        //1     Transaction code
        sb.Append('29');
    
        //2     Sender's bankgiro number
        sb.Append(SKS_PP_StringFormats::strFill(10, mSenderBankGiro, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        //3     Number of payment records
        sb.Append(SKS_PP_StringFormats::strFill(8, num2str(mPaymentCount,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        //4     Total amount
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(mPaymentAmount), 12));
   
        //5     Reserved field
        sb.Append(SKS_PP_StringFormats::strFill(48, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        this.fileWrite(sb.ToString());
    
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_TK54</Name>
				<Source><![CDATA[
    boolean rec_TK54(SKS_EFT_FileDetail _mSKS_EFT_FileDetail)//SKS_VSTS_14152
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        AmountMST amt;
        str OCRReference;//SKS_VSTS_13887
        ;
    
        //1     Transaction code
        sb.Append('54');
    
        //2     Payee's bankgiro or credit transfer number
        sb.Append(SKS_PP_StringFormats::strFill(10, _mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        //3     OCR reference or invoice number
        if(_mSKS_EFT_FileDetail.PaymId)//SKS_VSTS_13887
        {
            OCRReference = _mSKS_EFT_FileDetail.PaymId;
        }
        else
        {
            OCRReference = _mSKS_EFT_FileDetail.InvoiceNumber;
        }

        if(mSKS_EFT_FileDetail.PaymSpec == #PLS_GIRO)//SKS_VSTS_14848
        {
            sb.Append(SKS_PP_StringFormats::strFill(25, OCRReference, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));//SKS_VSTS_14848
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(25, OCRReference, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        }
    
        //4     Amount
        amt = this.getPositiveAmount(_mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur);
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(amt), 12));
    
        // 5    Payment Date or pay day
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(_mSKS_EFT_FileDetail.EffectiveDate));
    
        //6     Reserved field
        sb.Append(SKS_PP_StringFormats::strFill(5, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //7     Information to sender
        sb.Append(SKS_PP_StringFormats::strFill(20, this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        this.fileWrite(sb.ToString());
    
        mPaymentCount++;
        mPaymentAmount += _mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
    
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>