<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_PNCBANK_155</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_PP_Format_PNCBANK_155 for PNC Bank cheque payment.
/// </summary>
class SKS_PP_Format_PNCBANK_155 Extends SKS_PP_Format_BankGroup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    //PNC Bank
    
    // 1-10    10      Account Number
         // 11-20   10      Check Number
         // 21-31   11      Check Amount (0.00 format)
         // 32-39   8       Check Date (mmDDyyyy)
         // 40-54   15      Add'l Data (Blank)
         // 55-104  50      Payee Name 1
         // 105-154 50      Payee Name 2
         // 155-155 1       Action (I = Issue, V = Void)
    protected str txtDetail()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        int RecordLength;
        str ItemType;
        int Mult;
        ;
    
        Mult = 1;
        //Convert negative void numbers to positives
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
    
        }
        else
        {
            ItemType = 'I';
        }
    
    
        If (mSKS_PP_FileDetail.RecSection == 20)
        {
            RecordLength =  155;
            sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            sb.Append(num2Str(mSKS_PP_FileDetail.chkcuryamt, 11, 2, 1, 0));
            sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_PP_FileDetail.ChkDocDate));
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            sb.Append(SKS_PP_StringFormats::strFill(50, this.getVenderNameFromSKS_PP_FileDetail(mSKS_PP_FileDetail), SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
            sb.Append(SKS_PP_StringFormats::strFill(50, '', SKS_PP_FillCharacter::Space,  SKS_PP_FillSide::Right));
            sb.Append(ItemType); 
        }
        Else If (mSKS_PP_FileDetail.RecSection == 10)
        {
            sb.Append(SKS_PP_StringFormats::strFill(80, mSKS_PP_FileDetail.ValueString, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        }
        Else If (mSKS_PP_FileDetail.RecSection == 40)
        {
            sb.Append(SKS_PP_StringFormats::strFill(80, mSKS_PP_FileDetail.ValueString, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        }
        Else
        {
            sb.Append('');
        }
    
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVenderNameFromSKS_PP_FileDetail</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method will get the name from the Filedetail.
    /// </summary>
    /// <param name="_sks_PP_FileDetail">FiledetailObject</param>
    public VendName getVenderNameFromSKS_PP_FileDetail(SKS_PP_FileDetail _sks_PP_FileDetail)
    {
        return _sks_PP_FileDetail.VendName;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>