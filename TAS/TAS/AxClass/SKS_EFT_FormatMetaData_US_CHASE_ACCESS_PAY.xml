<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_CHASE_ACCESS_PAY</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_CHASE_ACCESS_PAY Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_CHASE_ACCESS_PAY Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220616';
        dataContractVersion = '1.0';
        conFormatID = ['US-CHASE-ACCESS-PAY'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',1,'US - J.P. Morgan Chase - ACCESS PAY v1.0',0,'','','US-CHASE-ACCESS-PAY',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',1,'1900-01-01 00:00:00.000',1,1,0,0,0,'','','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CHASE-ACCESS-PAY',0,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-CHASE-ACCESS-PAY'):
                paymSpecList = this.getPaymSpecsMetaData_US_CHASE_ACCESS_PAY();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CHASE_ACCESS_PAY</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CHASE_ACCESS_PAY()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,'',0,'Wire Freeform Payments',1,'WIRE','','WIRE','TRADE PAY',0,'US-CHASE-ACCESS-PAY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,'',0,'Book Transfers Freeform Payments',1,'BKT','','BOOKTX','TRADE PAY',0,'US-CHASE-ACCESS-PAY',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-CHASE-ACCESS-PAY'):
                notesList = this.getNotesMetaData_US_CHASE_ACCESS_PAY();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CHASE_ACCESS_PAY</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CHASE_ACCESS_PAY()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CHASE-ACCESS-PAY','WIRE','Debit::Beneficiary bank:-Swift code on the Vendor bank account will be used if the field is populated and the Routing number type field is set to SC or left blank. Otherwise, the Routing number field will be used.:-If the Routing number field is populated and the Routing number type field is left blank then it will default to USABA.::Intermediary bank:If the Intermediary bank is populated the Qualifier field is set to \'SWIFT\'.:-If the Qualifier field is set to another value, then the Bank ID on the Intermediary bank section of the Wire transfer/IAT - 2 tab of Vendor eBanking details > Payment specifications is required.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','Debit::Beneficiary bank:-Swift code on the Vendor bank account will be used if the field is populated and the Routing number type field is set to SC or left blank. Otherwise, the Routing number field will be used.:-If the Routing number field is populated and the Routing number type field is left blank then it will default to USABA.::Intermediary bank:If the Intermediary bank is populated the Qualifier field is set to \'SWIFT\'.:-If the Qualifier field is set to another value, then the Bank ID on the Intermediary bank section of the Wire transfer/IAT - 2 tab of Vendor eBanking details > Payment specifications is required.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('US-CHASE-ACCESS-PAY'):
                validationsList = this.getValidationsMetaData_US_CHASE_ACCESS_PAY();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_US_CHASE_ACCESS_PAY</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_US_CHASE_ACCESS_PAY()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PaymentFreeForm > Debit Bank ID','Routing number related to Bank',0,'RegistrationNum','','',1,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PaymentFreeForm > Account Number','Bank account number ',0,'AccountNum','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PaymentFreeForm > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PaymentFreeForm > Beneficiary Address 1','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PaymentFreeForm > Beneficiary Address 2','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PaymentFreeForm > Beneficiary Address 3','Vendor city','16','WBeneCity','','',1,1,1,'32',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PaymentFreeForm > Beneficiary Address 3','Vendor State/province','16','WBeneState','','',1,1,1,'32',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PaymentFreeForm > Beneficiary Address 3','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PaymentFreeForm > Country','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PaymentFreeForm > Beneficiary ID Value','Account Number related to vendor','9','AccountNum','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PaymentFreeForm > Beneficiary ID Value','IBAN related to vendor','9','BankIBAN','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PaymentFreeForm > Beneficiary Bank ID Value','Swift Code related to Vendor','9','SWIFTNo','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PaymentFreeForm > Beneficiary Bank ID Value','Routing number related to Vendor','9','RegistrationNum','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PaymentFreeForm > Beneficiary Bank Name','Vendor Bank Name','16','WBenBankName','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Address','PaymentFreeForm > Beneficiary Bank Address 1','Address related to vendor bank','16','WBenBankAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','PaymentFreeForm > Beneficiary Bank Address 3','City related to Vendor bank','16','WBenBankCity','','',1,1,1,'32',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PaymentFreeForm > Beneficiary Bank Country','Country related to vendor bank','16','WBenBankCountryRegionId','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PaymentFreeForm > Intermediary ID Value','Intermediary Swift number related to vendor','16','WIntBankSwift','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PaymentFreeForm > Intermediary ID Value','Intermediary Bank Id related to vendor','16','WIntBankId','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Name','PaymentFreeForm > Intermediary Name','Intermediary Bank Name','16','WIntBankName','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address','PaymentFreeForm > Intermediary Address 1','Intermediary Bank Address related to vendor','16','WIntBankAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address 2','PaymentFreeForm > Intermediary Address 2','Intermediary Bank Address related to vendor','16','WIntBankAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > City','PaymentFreeForm > Intermediary Address 3','City','16','WIntBankCity','','',1,1,'','32',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','Country/Region ','TAS >x Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','PaymentFreeForm > Intermediary Country','Intermediary Bank Country','16','WIntBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','WIRE','','Payment description','Accounts payable > Payments > Payment journal > Description','PaymentFreeForm > Payment Detail 4','Description related to payment','13','Txt','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','PaymentFreeForm > Debit Bank ID','Routing number related to Bank',0,'RegistrationNum','','',1,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','PaymentFreeForm > Account Number','Bank account number ',0,'AccountNum','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PaymentFreeForm > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PaymentFreeForm > Beneficiary Address 1','Address related to vendor','16','WBeneAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PaymentFreeForm > Beneficiary Address 2','Address related to vendor','16','WBeneAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','PaymentFreeForm > Beneficiary Address 3','Vendor city','16','WBeneCity','','',1,1,1,'32',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','State/province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','PaymentFreeForm > Beneficiary Address 3','Vendor State/province','16','WBeneState','','',1,1,1,'32',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','PaymentFreeForm > Beneficiary Address 3','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',1,1,'','','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PaymentFreeForm > Country','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PaymentFreeForm > Beneficiary ID Value','Account Number related to vendor','9','AccountNum','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PaymentFreeForm > Beneficiary ID Value','IBAN related to vendor','9','BankIBAN','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PaymentFreeForm > Beneficiary Bank ID Value','Swift Code related to Vendor','9','SWIFTNo','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PaymentFreeForm > Beneficiary Bank ID Value','Routing number related to Vendor','9','RegistrationNum','','','3','2',1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Vendor Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PaymentFreeForm > Beneficiary Bank Name','Vendor Bank Name','16','WBenBankName','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Vendor bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Address','PaymentFreeForm > Beneficiary Bank Address 1','Address related to vendor bank','16','WBenBankAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Vendor bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','PaymentFreeForm > Beneficiary Bank Address 3','City related to Vendor bank','16','WBenBankCity','','',1,1,1,'32',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Vendor bank Country','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Country/region','PaymentFreeForm > Beneficiary Bank Country','Country related to vendor bank','16','WBenBankCountryRegionId','','',1,1,0,0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','PaymentFreeForm > Intermediary ID Value','Intermediary Swift number related to vendor','16','WIntBankSwift','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Bank Id','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank ID','PaymentFreeForm > Intermediary ID Value','Intermediary Bank Id related to vendor','16','WIntBankId','','','3',1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Name','PaymentFreeForm > Intermediary Name','Intermediary Bank Name','16','WIntBankName','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address','PaymentFreeForm > Intermediary Address 1','Intermediary Bank Address related to vendor','16','WIntBankAddr','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Address 2','PaymentFreeForm > Intermediary Address 2','Intermediary Bank Address related to vendor','16','WIntBankAddr2','','',1,1,'','35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > City','PaymentFreeForm > Intermediary Address 3','City','16','WIntBankCity','','',1,1,'','32',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Country/Region ','TAS >x Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Country/Region','PaymentFreeForm > Intermediary Country','Intermediary Bank Country','16','WIntBankCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['US-CHASE-ACCESS-PAY','BOOKTX','','Payment description','Accounts payable > Payments > Payment journal > Description','PaymentFreeForm > Payment Detail 4','Description related to payment','13','Txt','','',1,1,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CHASE-ACCESS-PAY','IntermediaryType','Intermediary Type']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CHASE-ACCESS-PAY','IntermediaryType','ABA','USABA']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CHASE-ACCESS-PAY','IntermediaryType','CHIPS','USPID']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CHASE-ACCESS-PAY','IntermediaryType','SWIFT','SWIFT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CHASE-ACCESS-PAY','IntermediaryType','CHIPS UID','CHIPSID']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CHASE-ACCESS-PAY','IntermediaryType','JPM US ACCT','JPMACC']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('US-CHASE-ACCESS-PAY'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CHASE_ACCESS_PAY();
                break;
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CHASE_ACCESS_PAY</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CHASE_ACCESS_PAY()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CHASE-ACCESS-PAY','US-CHASE-ACCESS-PAY-2016','BOOKTX','IntermediaryType','Intermediary Type',0,'IntermediaryType','',0,'','','PaymentFreeForm > Intermediary ID Type']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CHASE-ACCESS-PAY','US-CHASE-ACCESS-PAY-2016','WIRE','IntermediaryType','Intermediary Type',0,'IntermediaryType','',0,'','','PaymentFreeForm > Intermediary ID Type']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CHASE-ACCESS-PAY','US-CHASE-ACCESS-PAY','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CHASE-ACCESS-PAY','US-CHASE-ACCESS-PAY','FormatValidations','*','3','Txt']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'US-CHASE-ACCESS-PAY':
                if(gSKS_EFT_VendorPaym.WIntBankQualifier)
                {
                    this.updateVendorFields('IntermediaryType', gSKS_EFT_VendorPaym.WIntBankQualifier, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>