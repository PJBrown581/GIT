<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_IE_AIB_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_IE_AIB_XML extends SKS_EFT_Format_ISO_20022_001001003
/// </summary>
class SKS_EFT_Format_IE_AIB_XML extends SKS_EFT_Format_ISO_20022_001001003
{
    #define.FormatVersion('20221215')
    #define.SCT('SCT')
    #define.NON_SCT('NON-SCT')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_Id</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty_Id(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          9.1.12: Id
        //              9.1.13: OrgId
        //                  9.1.14: BICOrBEI
        //                  9.1.15: Othr
        //                      9.1.1.16: Id
        //                      9.1.1.17: SchmeNm
        //                          9.1.1.18: Code
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOther;
        str InitiatingPartyId;

        //          9.1.12: Id
        nodeId = _nodeInitgPty.appendChild(xmlDoc.createElement('Id'));

        //              9.1.13: OrgId
        nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));

        InitiatingPartyId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InitiatingPartyId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));

        if(InitiatingPartyId == '')
        {
            //                  9.1.14: BICOrBEI
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOrgId, 'BICOrBEI', mSKS_EFT_Bank.WOrdPartySWIFTNo, 35);
        }
        else
        {
            //                  9.1.15: Other
            nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));

            //                      9.1.1.16: Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', this.CharacterReplacement(InitiatingPartyId), 35);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl_Cd</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl_Cd(XmlElement _nodeSvcLvl)
    {
        //------------------------------------------------------------------------------------------------------
        //              Cd
        //------------------------------------------------------------------------------------------------------
    
        //              Cd
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Cd', 'SEPA');
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: DbtrAcct
        //          Id
        //              IBAN
        //              Othr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;
    
        //      2.20: DbtrAcct
        nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
        //          Id
        nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
    
        if(mBankAccountTable.IBAN)
        {
            //              IBAN
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN', mBankAccountTable.IBAN, 34);
        }

        //          Ccy
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcct, 'Ccy', mBankAccountTable.CurrencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.21: DbtrAgt
        //          FinInstnId
        //              BIC
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeOthr;
    
        //      2.21: DbtrAgt
        nodeDbtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAgt'));
    
        //          FinInstnId
        nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
        if(mBankAccountTable.SWIFTNo)
        {
            //              BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mBankAccountTable.SWIFTNo, 11, false);
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #NON_SCT)
        {
            //              Othr
            nodeOthr = nodeFinInstnId.appendChild(xmlDoc.createElement('Othr'));
    
            //                  Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', 'NOTPROVIDED');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChrgBr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.51: ChrgBr
        //------------------------------------------------------------------------------------------------------
        
        str value;

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SCT)
        {
            value = 'SLEV';
        }
        else
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Charges', mSKS_EFT_FileDetail.RecId));
        }
    
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'ChrgBr', value, 0, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //                  BIC
        //                  PstlAdr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
        boolean     pritPstlAdr, printswiftrtg;
        str swift, rtg;

        swift   = mSKS_EFT_FileDetail.DepSwiftNo;
        rtg     = mSKS_EFT_FileDetail.DepBankTransit;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #SCT:
                rtg = '';
                break;
            case #NON_SCT:
                if(mSKS_EFT_FileDetail.DepBankIBAN)           //SKS#DevOps:20958
                {
                    rtg = '';
                }
                else if(mSKS_EFT_FileDetail.DepBankIBAN == '')
                {
                    if(rtg == '')
                    {
                        rtg = mSKS_EFT_FileDetail_BenBank.BenBankBranch;
                    }
                    printswiftrtg = true;
                }
                pritPstlAdr = true;
                break;
        }

        if(swift || rtg)
        {
            //          2.77: CdtrAgt
            nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));
    
            //              FinInstnId
            nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(swift)
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', swift, 11, false);

                if(rtg && printswiftrtg)
                {
                    //                  ClrSysMmbId
                    nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                    //                          MmbId
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', rtg, 35, false);
                }
            }
            else if(rtg)
            {
                //                  ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                //                          MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', rtg, 35, false);
            }

            if(pritPstlAdr)
            {
                //                  PstlAdr
                this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_VendorPaym.WBenBankCountryRegionId, '', '', '');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  IBAN
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
        XmlElement nodeCdtrAcctIdOthr;
    
        //          2.80: CdtrAcct
        nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
        //              Id
        nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
        if(mSKS_EFT_FileDetail.DepBankIBAN)
        {
            //                  IBAN
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN, 34);
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SCT)
        {
            //                  Othr
            nodeCdtrAcctIdOthr = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));

            //                      Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctIdOthr, 'Id', mSKS_EFT_FileDetail.DepBankAcct, 35);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //------------------------------------------------------------------------------------------------------
    
        this.node_CdtTrfTxInf_RmtInf_Ustrd(_nodeCdtTrfTxInf);
     
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty(XmlElement _nodeGrpHdr)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          Nm
        //          Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeInitgPty;    
    
        //      1.8: InitgPty
        nodeInitgPty = _nodeGrpHdr.appendChild(xmlDoc.createElement('InitgPty'));
    
        //          Id
        this.node_GrpHdr_InitgPty_Id(nodeInitgPty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEncoding</Name>
				<Source><![CDATA[
    protected str getEncoding()
    {
        return 'UTF-8';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>