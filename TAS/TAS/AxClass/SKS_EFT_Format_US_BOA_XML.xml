<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_BOA_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_BOA_XML  extends SKS_EFT_Format_ISO_20022_001001003
/// </summary>
class SKS_EFT_Format_US_BOA_XML  extends SKS_EFT_Format_ISO_20022_001001003
{
    #define.FormatVersion('20230511')
    #define.ACH_CTX('ACH-CTX')
    #define.FED_WIRE('FED-WIRE')
    #define.SWIFT_WIRE('SWIFT-WIRE')
    #define.WIRE_FXP('WIRE-FXP')
    #define.WIRE_FXS('WIRE-FXS')
    #define.CHK('CHK')
    #define.PAYFPS('PAYFPS')
    #define.PAYSCT('PAYSCT')
    #define.ACH_CCD('ACH-CCD')          //SKG#VSTS:7598
    #define.ACH_CCP('ACH-CCP')
    #define.ACH_PPD('ACH-PPD')          //SKG#VSTS:13334
    #define.PAYEFT('PAYEFT')
    #define.SWIFT('SWIFT')
    #define.CCHQ('CCHQ')
    #define.PAYACH('PAYACH')
    #define.ACHLOW('ACHLOW')
    #define.ACHHGH('ACHHGH')
    #define.EPAY('EPAY')                //SKG#VSTS:10457
    #define.BCHQ('BCHQ')
    //SKS_VSTS_13235 -->
    #define.PAYRGI('PAYRGI')
    #define.ACHPGIRO('ACH_P_GIRO')
    #define.ACHBGIRO('ACH_B_GIRO')
    //SKS_VSTS_13235 <--

    //SKS_VSTS_13935 -->
    #define.HVACH('HV-ACH')
    #define.LVACH('LV-ACH')
    //SKS_VSTS_13935 <--

    #define.ACH_FX('ACH-FX')    //SKS_VSTS_14411
    #define.DOMWIRE('DOMWIRE')//SKS_VSTS_14298

    //SKS_VSTS_15202 -->
    #define.CB_CAD('CB-CAD')
    //SKS_VSTS_15202 <--

    //SKS_DevOps_15305 -->
    #define.HK_CNY_CAP('HK-CNY-CAP')
    #define.HK_CNY_TR('HK-CNY-TR')
    #define.HK_CNY_CA('HK-CNY-CA')
    #define.HK_CNY_OTR('HK-CNY-OTR')
    #define.HK_CNY_SER('HK-CNY-SER')
    #define.HK_FEDWIRE('HK-FEDWIRE')
    //SKS_DevOps_15305 <--
    #define.ACH_IAT('ACH-IAT') //SKS_DevOps_16195
    #define.SWIFT_INR('SWIFT-INR')      //SKS#DevOps:16330
    #define.SWIFT_CNY('SWIFT-CNY')      //SKS#DevOps:16330
    #define.SWIFT_KES('SWIFT-KES')      //SKS#DevOps:17132
    #define.SWIFT_EGP('SWIFT-EGP')      //SKS#DevOps:17132
    #define.SWIFT_ERN('SWIFT-ERN')      //SKS#DevOps:17132
    #define.SWIFT_ETB('SWIFT-ETB')      //SKS#DevOps:17132
    #define.SWIFT_KMF('SWIFT-KMF')      //SKS#DevOps:17132
    #define.SWIFT_RWF('SWIFT-RWF')      //SKS#DevOps:17132
    #define.SWIFT_SLL('SWIFT-SLL')      //SKS#DevOps:17132
    #define.SWIFT_TZS('SWIFT-TZS')      //SKS#DevOps:17132
    #define.SWIFT_ZMW('SWIFT-ZMW')      //SKS#DevOps:17132
    #define.SWIFT_VND('SWIFT-VND')      //SKS#DevOps:17132
    #define.SWIFT_MMK('SWIFT-MMK')      //SKS#DevOps:17132
    #define.SWIFT_MVR('SWIFT-MVR')      //SKS#DevOps:17132, 18055
    #define.SWIFT_NPR('SWIFT-NPR')      //SKS#DevOps:17132
    #define.SWIFT_AZN('SWIFT-AZN')      //SKS#DevOps:17132
    #define.SWIFT_UZS('SWIFT-UZS')      //SKS#DevOps:17132
    #define.SWIFT_YER('SWIFT-YER')      //SKS#DevOps:17132
    #define.SWIFT_CRC('SWIFT-CRC')      //SKS#DevOps:17132
    #define.SWIFT_PEN('SWIFT-PEN')      //SKS#DevOps:17132
    #define.SWIFT_UYU('SWIFT-UYU')      //SKS#DevOps:17132
    #define.SWIFT_PYG('SWIFT-PYG')      //SKS#DevOps:17132
    #define.SWIFT_ARS('SWIFT-ARS')      //SKS#DevOps:17132
    #define.SWIFT_GTQ('SWIFT-GTQ')      //SKS#DevOps:17132
    #define.SWIFT_DOP('SWIFT-DOP')      //SKS#DevOps:17578
    #define.SWIFT_COP('SWIFT-COP')      //SKS#DevOps:17132
    #define.BANK_DRFT('BANK-DRFT')      //DevOps18915
    #define.CCHQ('CCHQ')                //DevOps18915
    #define.DOM_HV('DOM-HV')            //DevOps18915
    #define.ACH_LV_BI('ACH-LV-BI')      //DevOps18915
    #define.PAYROLL_BI('PAYROLL-BI')    //DevOps18915
    #define.TAX_BI('TAX-BI')            //DevOps18915
    #define.DOM_EPCS('DOM-EPCS')
    #define.DOM_RTGS('DOM-RTGS')
    #define.DOM_PDDTS('DOM-PDDTS')
    #define.UC('UC')
    #define.PBP('PBP')

    #define.TAXUTIL('TAXUTIL')            //SKS#DevOps:20395
    #define.ACHDOM('ACH-DOM')
    #define.WIREDOM('WIRE-DOM')
    #define.WIREINTL('WIRE-INTL')
    str bankCode;   //SKS_VSTS_15021
    str contactPhone, contName;


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceDescDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// getInvoiceDescDetails
    /// </summary>
    /// <returns>str</returns>
    private str getInvoiceDescDetails()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        str InvDesc;

        while select InvoiceTransactionTxt from invSKS_EFT_FileDetail
                            where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
                            && invSKS_EFT_FileDetail.InvoiceTransactionTxt != ''
        {
            InvDesc += strFmt('%1, ', invSKS_EFT_FileDetail.InvoiceTransactionTxt);
        }
        InvDesc = subStr(InvDesc, 1, strLen(InvDesc)-2);
    
        return this.CharacterReplacement(InvDesc);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceDetails</Name>
				<Source><![CDATA[
    private str getInvoiceDetails()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        str invDetailsString;
    
        while select InvoiceNumber, InvoiceSettleAmountPmtCur, PaymentCurrencyCode from invSKS_EFT_FileDetail
            where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
               && invSKS_EFT_FileDetail.InvoiceNumber != ''
        {
            invDetailsString += strFmt('%1, %2 %3, ', invSKS_EFT_FileDetail.InvoiceNumber, num2str(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0), invSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
    
        invDetailsString = subStr(invDetailsString, 1, strLen(invDetailsString)-2);
    
        return this.CharacterReplacement(invDetailsString);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankPurposeText</Name>
				<Source><![CDATA[
    private str getBankPurposeText()
    {
        msks_EFT_FileDetail_PaymentLine = sks_EFT_FileDetail_PaymentLine::find(mSKS_EFT_FileDetail.RecId);

        bankCode = this.CharacterReplacement(msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeCode);
    
        return this.CharacterReplacement(msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeText); 
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    /// <summary>
    /// format structures
    /// </summary>
    protected void formatStructure()
    {
        CompanyBankAccountId    prevBankAccountId;
        PaymMode                prevPaymMode;
        PaymSpec                prevPaymSpec;
        CurrencyCode            prevCurrency;
        SKS_EB_Date             prevEffectiveDate;
        DataAreaId              prevAcctCompany;        //SKS#DevOps:22011
    
        xmlDoc = XmlDocument::newBlank(this.getEncoding());
    
        this.node_MessageRoot();
    
        this.node_GrpHdr();
    
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            mSKS_EFT_FileDetail_BankAccount = SKS_EFT_FileDetail_BankAccount::find(mSKS_EFT_FileDetail.RecId);

            select msks_EFT_FileDetail_BankAddress where
                msks_EFT_FileDetail_BankAddress.RefRecId == mSKS_EFT_FileDetail.RecID
                && msks_EFT_FileDetail_BankAddress.AddressType == SKS_EFT_AddressType::BankAddress;
    
            mSKS_EFT_FileDetail_Extra = SKS_EFT_FileDetail_Extra::findRefRecId(mSKS_EFT_FileDetail.RecId);
    
            if(prevBankAccountId != mSKS_EFT_FileDetail.BankAccountId ||
               prevPaymMode != mSKS_EFT_FileDetail.PaymMode ||
               prevPaymSpec != mSKS_EFT_FileDetail.PaymSpec ||
               prevCurrency != mSKS_EFT_FileDetail.PaymentCurrencyCode ||
               prevEffectiveDate != mSKS_EFT_FileDetail.EffectiveDate  ||
               prevAcctCompany != mSKS_EFT_FileDetail.AccountCompany        //SKS#DevOps:22011
               )
            {
                this.node_PmtInf();
    
                prevBankAccountId = mSKS_EFT_FileDetail.BankAccountId;
                prevPaymMode = mSKS_EFT_FileDetail.PaymMode;
                prevPaymSpec = mSKS_EFT_FileDetail.PaymSpec;
                prevCurrency = mSKS_EFT_FileDetail.PaymentCurrencyCode;
                prevEffectiveDate = mSKS_EFT_FileDetail.EffectiveDate;
                prevAcctCompany   = mSKS_EFT_FileDetail.AccountCompany;        //SKS#DevOps:22011
            }
    
            // Get RemittanceAddress
            this.getRemittanceAddress((mSKS_EFT_FileFormatPaymSpec.UseCheckNumber || subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) == 'CHK'));
    
            //Get Addenda information
            this.setAddenda();
    
            //For AP
            this.node_CdtTrfTxInf();
    
            next mSKS_EFT_FileDetail;
        }

        this.fileWrite(xmlDoc.toString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf()
    {
        //------------------------------------------------------------------------------------------------------
        //      2.27: CdtTrfTxInf
        //          2.28: PmtId
        //          2.31: PmtTpInf
        //          2.42: Amt
        //          2.51: ChrgBr
        //          2.52: ChqInstr
        //          2.77: CdtrAgt
        //          2.79: Cdtr
        //          2.80: CdtrAcct
        //          2.98: RmtInf
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtTrfTxInf;
    
        //      2.27: CdtTrfTxInf
        nodeCdtTrfTxInf = nodePmtInf.appendChild(xmlDoc.createElement('CdtTrfTxInf'));
    
        //          2.28: PmtId
        this.node_CdtTrfTxInf_PmtId(nodeCdtTrfTxInf);
    
        //          2.31 PmtTpInf
        this.node_CdtTrfTxInf_PmtTpInf(nodeCdtTrfTxInf);
    
        //          2.42: Amt
        this.node_CdtTrfTxInf_Amt(nodeCdtTrfTxInf);
    
        //          2.51: ChrgBr
        this.node_CdtTrfTxInf_ChrgBr(nodeCdtTrfTxInf);
    
        //          2.52 ChqInstr
        if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::Yes || subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) == 'CHK')
        {
            this.node_CdtTrfTxInf_ChqInstr(nodeCdtTrfTxInf);
        }
    
        //          2.71: IntrmyAgt1
        this.node_CdtTrfTxInf_IntrmyAgt1(nodeCdtTrfTxInf);
    
        //          2.77: CdtrAgt
        this.node_CdtTrfTxInf_CdtrAgt(nodeCdtTrfTxInf);
    
        //          2.79: Cdtr
        this.node_CdtTrfTxInf_Cdtr(nodeCdtTrfTxInf);
    
        //          2.80: CdtrAcct
        this.node_CdtTrfTxInf_CdtrAcct(nodeCdtTrfTxInf);
    
        //          2.82: InstrForCdtrAgt
        this.node_CdtTrfTxInf_InstrForCdtrAgt(nodeCdtTrfTxInf);
    
        //          2.86: Purp
        this.node_CdtTrfTxInf_Purp(nodeCdtTrfTxInf);
    
        //          2.89: RgltryRptg
        this.node_CdtTrfTxInf_RgltryRptg(nodeCdtTrfTxInf);

        //          2.90: Tax
        this.node_CdtTrfTxInf_Tax(nodeCdtTrfTxInf);                     //SKS#DevOps:21276
    
        //          2.91: RltdRmtInf
        this.node_CdtTrfTxInf_RltdRmtInf(nodeCdtTrfTxInf);
    
        //          2.98: RmtInf
        this.node_CdtTrfTxInf_RmtInf(nodeCdtTrfTxInf);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Tax</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_CdtTrfTxInf_Tax
    /// </summary>
    /// <param name = "_nodeCdtTrfTxInf">_nodeCdtTrfTxInf</param>
    protected void node_CdtTrfTxInf_Tax(XmlElement _nodeCdtTrfTxInf)
    {
        XmlElement  nodeTax;
        XmlElement  nodeCdtr;
        XmlElement  nodeDbtr;
        XmlElement  nodeRcrd;
        XmlElement  nodeTaxAmt;
        XmlElement  nodeTtlAmt;
        str         taxType;
        boolean     printTaxDetails;

        taxType = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TaxType', mSKS_EFT_FileDetail.RecId));

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_CTX:
                        printTaxDetails = true;
                        break;
                }
                break;
        }
        if(printTaxDetails)
        {
            //          Tax
            nodeTax = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Tax'));

            if(taxType)
            {
                //          Cdtr
                nodeCdtr = nodeTax.appendChild(xmlDoc.createElement('Cdtr'));

                //                TaxTp
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtr, 'TaxTp', taxType, 35);
            }

            if(mSKS_EFT_FileDetail.CoRegNum)
            {
                //          Dbtr
                nodeDbtr = nodeTax.appendChild(xmlDoc.createElement('Dbtr'));

                //              TaxId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtr, 'TaxId', mSKS_EFT_FileDetail.CoRegNum, 35);
            }

            //              Dt
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTax, 'Dt', SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate, DateSeparator::Hyphen));

            //              Rcrd
            nodeRcrd = nodeTax.appendChild(xmlDoc.createElement('Rcrd'));

            //                    Ctgy
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'Ctgy', this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TaxCategory', mSKS_EFT_FileDetail.RecId)), 35, false);


            //                  CertId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRcrd, 'CertId', this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CertId', mSKS_EFT_FileDetail.RecId)), 35, false);

            //                  TaxAmt
            nodeTaxAmt = nodeRcrd.appendChild(xmlDoc.createElement('TaxAmt'));

            //                      TtlAmt
            nodeTtlAmt = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTaxAmt, 'TtlAmt', num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,0,0,0), 0, false);

            SKS_EFT_Format::xmlsetAttributeText(nodeTtlAmt, 'Ccy', mSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  Othr
        //                  Id
        //              Tp/Ptry
        //------------------------------------------------------------------------------------------------------
    
        XmlElement  nodeCdtrAcct;
        XmlElement  nodeCdtrAcctId;
        XmlElement  nodeCdtrAcctIdOthr;
        XmlElement  nodeCdtrAcctTp;
        int         ibanlen, acctNumlen;
        str         iban, acctNum, type;
        boolean     printIBAN;
        boolean     printName;
        boolean     printType;
        boolean     printCdtrAcct = true;
        boolean     printTypeLookup;
        str         value =  SKS_EFT_Format::getCodelookupvalue('CdtrAcctType', mSKS_EFT_FileDetail.RecId);

        boolean     printIBANAcct;

        iban    =   mSKS_EFT_FileDetail.DepBankIBAN;
        acctNum =   mSKS_EFT_FileDetail.DepBankAcct;

        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'IN' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'ID' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'ZA' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'TH' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'VN' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'CN' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'AF' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'AM' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'AR' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'AU' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'AW' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BB' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BD' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BM' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BN' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BO' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BS' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BT' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BW' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BY' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'BZ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'CA' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'CD' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'CL' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'CO' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'DJ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'DZ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'EG' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'ER' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'ET' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'FJ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'FK' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'GH' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'GM' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'GN' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'GY' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'HK' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'HN' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'HT' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'IQ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'JP' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'KE' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'KG' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'KH' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'KM' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'KY' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'LA' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'LK' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'LR' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'LS' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'LY' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'MM' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'MN' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'MO' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'MV' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'MX' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'MY' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'NA' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'NG' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'NI' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'NP' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'PA' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'PE' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'PG' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'PH' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'PY' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'RW' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'SB' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'SC' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'SG' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'SH' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'SL' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'SO' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'SP' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'SR' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'SZ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'TJ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'TO' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'TM' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'TT' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'TW' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'TZ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'UA' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'UG' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'US' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'UY' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'UZ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'VE' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'VU' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'WS' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'GQ' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'AG' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'AI' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'DM' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'GD' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'KN' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'LC' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'MS' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'VC' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'YE' &&
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'ZM')
        {
            printIBAN = true;
        }
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #EPAY:
                        iban = '';
                        printName = true;
                        printType  = true;
                        break;
                    case #ACH_PPD:                  //SKG#VSTS:13334
                        iban = '';
                        acctNumlen = 17;
                        printType  = true;
                        break;
                    case #ACH_CTX:
                    case #ACH_CCP:
                        printType = true;
                        type = 'CASH';
                        break;
                    case #ACH_CCD:              //SKS#DevOps:21815
                        printType = true;
                        break;
                    case #FED_WIRE:              //SKS#DevOps:22044
                        printType  = true;
                        break;
                    case #WIRE_FXS://DevOps22044
                        printType  = true;
                        printIBANAcct = true;
                        break;
                    case #SWIFT_WIRE://DevOps20310
                    case #WIRE_FXP:
                        if(iban)
                        {
                            acctNum = '';
                        }
                        else if(acctNum)
                        {
                            iban = '';
                        }
                        break;
                    case #ACH_FX:
                        acctNum = '';
                        break;
                    case #ACH_IAT:                  //SKG#VSTS:13334
                        iban = '';
                        acctNumlen = 34;
                        printType  = true;
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        acctNumlen = this.getCdtrAcctlength();
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }                        
                        break;
                    case #PAYACH:
                        iban = '';
                        acctNumlen = 9;
                        break;
                    case #PAYEFT:
                        iban = '';
                        acctNumlen = 34;
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-BY':       //SKS#DevOps:15428
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        ibanlen = 28;
                        break;
                }
                break;
            case 'US-BOA-XML-BZ':       //SKS#DevOps:15428
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        ibanlen = 29;
                        break;
                }
                break;
            case 'US-BOA-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        acctNumlen = this.getCdtrAcctlength();
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }                        
                        break;
                    case #PAYEFT:
                        iban = '';
                        break;
                    case #PAYACH:
                        iban = '';
                        acctNumlen = 16;
                        break;
                    case #CCHQ:                     //SKS#VSTS:14488
                        printCdtrAcct = false;
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        acctNumlen = this.getCdtrAcctlength();
                        if(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId == 'CN' &&
                           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNY')            //SKS#DevOps:15428
                        {
                            iban       = '';
                            acctNumlen = 31;
                        }
                        else if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }                        
                        break;
                    case #PAYEFT:
                    case #ACHHGH:
                    case #ACHLOW:
                        iban = '';
                        break;
                    case #PAYACH:
                        iban = '';
                        break;
                    case #SWIFT_CNY:        //SKS#DevOps:16330
                        iban = '';
                        acctNumlen = 31;
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-DE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        ibanlen     = 34;
                        acctNumlen  = this.getCdtrAcctlength();
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }                        
                        break;
                    case #PAYSCT:
                        ibanlen    = 31;
                        acctNumlen = 8;
                        break;
                    case #PAYEFT:
                        ibanlen    = 22;
                        acctNumlen = 8;
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-ES':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        ibanlen     = 34;
                        acctNumlen  = this.getCdtrAcctlength();
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }                        
                        break;
                    case #PAYSCT:
                        ibanlen    = 31;
                        acctNumlen = 8;
                        break;
                    case #PAYEFT:
                        ibanlen    = 24;
                        acctNumlen = 8;
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-FR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        ibanlen     = 34;
                        acctNumlen  = this.getCdtrAcctlength();
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }                        
                        break;
                    case #PAYSCT:
                        ibanlen    = 31;
                        acctNumlen = 8;
                        break;
                    case #PAYEFT:
                        ibanlen    = 27;
                        acctNumlen = 8;
                        break;
                    case #CB_CAD:
                        iban = '';
                        printType = true;
                        acctNumlen = 34;
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-BE':  //SKS#DevOps:20316
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        ibanlen     = 34;
                        acctNumlen  = this.getCdtrAcctlength();
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }
                        break;
                    case #PAYSCT:
                        ibanlen    = 31;
                        acctNumlen = 8;
                        break;
                    case #PAYEFT:
                        ibanlen    = 27;
                        acctNumlen = 8;
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-GR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        acctNumlen = this.getCdtrAcctlength();                        
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }
                        break;
                    case #FED_WIRE:
                        iban = '';
                        printType = true;
                        break;
                    case #PAYSCT:
                        ibanlen    = 31;
                        acctNumlen = 8;
                        break;
                    case #PAYEFT:
                        ibanlen    = 27;
                        acctNumlen = 8;
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-HK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        acctNumlen = this.getCdtrAcctlength();
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }                        
                        break;
                    case #PAYACH:
                        iban = '';
                        acctNumlen = 13;  //SKS#DevOps:15532
                        break;
                    case #PAYEFT:
                        iban = '';
                        acctNumlen = 13;
                        break;
                    case #HK_CNY_CAP:  //SKS_DevOps_15305 -->
                    case #HK_CNY_TR:
                    case #HK_CNY_CA:
                    case #HK_CNY_OTR:
                    case #HK_CNY_SER:
                    case #HK_FEDWIRE:
                        iban = '';
                        printType = true;
                        break;            //SKS_DevOps_15305 <--
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-HU'://SKS_VSTS_13935
                printType = true;
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #HVACH :
                    case #LVACH :
                        if(iban)
                        {
                            ibanlen = 28;
                        }

                        if(acctNum)
                        {
                            acctNumlen = 16;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-IL':       //SKS#DevOps:15428
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        ibanlen = 23;
                        break;
                }
                break;
            case 'US-BOA-XML-IN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        acctNumlen = this.getCdtrAcctlength();
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }                        
                        break;
                    case #PAYACH:
                    case #PAYEFT:
                        iban = '';
                        break;
                    case #SWIFT_INR:        //SKS#DevOps:16330
                        iban = '';
                        acctNumlen = 31;
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-ID':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BANK_DRFT:
                    case #CCHQ:
                        iban='';
                        acctNum='';
                        printCdtrAcct = false;
                        break;
                    case #SWIFT:
                        acctNumlen =34;
                        printType=true;
                        break;
                    case #FED_WIRE:
                        iban ='';
                        acctNumlen =9;
                        printType=true;
                        break;
                    default:
                        iban ='';
                        acctNumlen=16;
                        printType=true;
                        break;
                }
                break;
            case 'US-BOA-XML-IT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        acctNumlen = this.getCdtrAcctlength();
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }
                        break;
                    case #FED_WIRE:
                        iban = '';
                        printType = true;
                        break;
                    case #PAYSCT:
                        ibanlen    = 31;
                        acctNumlen = 8;
                        break;
                    case #PAYEFT:
                        ibanlen    = 27;
                        acctNumlen = 8;
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-JM':       //SKS#DevOps:15428
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        iban       = '';
                        acctNumlen = 31;
                        break;
                }
                break;
            case 'US-BOA-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        acctNumlen = this.getCdtrAcctlength();
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }                        
                        break;
                    case #PAYACH:
                        iban = '';
                        acctNumlen = 8;
                        printType  = true;
                        break;
                    case #PAYEFT:
                    case #FED_WIRE://SKS_VSTS_14298
                        iban = '';
                        acctNumlen = 34;
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-CR':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_CRC:
                        ibanlen = 22;
                        break;
                }
                break;
            case 'US-BOA-XML-KE':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_KES:
                        acctNumlen = 31;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-PE':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_PEN:
                        acctNumlen = 20;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-AZ':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_KES:
                        ibanlen = 28;
                        break;
                }
                break;
            case 'US-BOA-XML-EG':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_EGP:
                        acctNumlen = 31;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-ER':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_ERN:
                        acctNumlen = 31;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-ET':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_ETB:
                        acctNumlen = 31;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-MV':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_MVR:
                        acctNumlen = 31;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-TZ':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_TZS:
                        acctNumlen = 31;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-MM':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_MMK:
                        acctNumlen = 31;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-NP':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_NPR:
                        acctNumlen = 31;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-PY':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_PYG:
                        acctNumlen = 31;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-UY':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_UYU:
                        acctNumlen = 31;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-VN':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_VND:
                        acctNumlen = 31;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-RW':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_RWF:
                        acctNumlen = 31;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-DO':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_DOP:           //SKS#DevOps:17578
                        acctNumlen = 31;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-SL':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_SLL:
                        acctNumlen = 31;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-UZ':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_UZS:
                        acctNumlen = 31;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-ZM':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_ZMW:
                        acctNumlen = 31;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-KR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        acctNumlen = this.getCdtrAcctlength();
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }                        
                        break;
                    case #PAYACH:
                        iban = '';
                        acctNumlen = 14;
                        break;
                    case #PAYEFT:
                        iban = '';
                        acctNumlen = 14;
                        break;
                    case #FED_WIRE://SKS_VSTS_14298
                        iban = '';
                        acctNumlen = 34;
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-KZ':       //SKS#DevOps:15428
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        ibanlen = 31;
                        break;
                }
                break;
            case 'US-BOA-XML-LU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        ibanlen     = 34;
                        acctNumlen  = 34;
                        break;
                    case #PAYEFT:
                        ibanlen = 20;
                        break;
                    case #PAYSCT:
                        ibanlen = 31;
                        break;
                }
                break;
            case 'US-BOA-XML-MX':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }
                        break;
                    case #PAYACH:
                    case #PAYEFT:
                    case #TAXUTIL:      //SKS#DevOps:20395
                        iban = '';
                        acctNumlen = 18;
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-MY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYACH:
                        acctNumlen = 17;
                        break;
                    case #PAYEFT:
                        acctNumlen = 24;
                        break;
                    case #FED_WIRE:
                        iban = '';
                        acctNumlen = 34;
                        break;
                    case #CCHQ:
                        printType = true;
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-NL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        ibanlen     = 34;
                        acctNumlen  = this.getCdtrAcctlength();
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }                        
                        break;
                    case #PAYSCT:
                        ibanlen    = 31;
                        acctNumlen = 8;
                        break;
                    case #PAYEFT:
                        ibanlen    = 34;
                        acctNumlen = 8;
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-NZ'://SKS_VSTS_14298
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        ibanlen     = 34;
                        acctNumlen  = this.getCdtrAcctlength();
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }
                        break;
                    case #PAYACH:
                    case #PAYEFT:
                    case #DOMWIRE:
                        iban = '';
                        acctNumlen = 16;
                        break;
                }
                break;
            case 'US-BOA-XML-SE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        ibanlen     = 34;
                        acctNumlen  = this.getCdtrAcctlength();                        
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }
                        break;
                    case #PAYEFT:
                        ibanlen    = 34;//SKS_DevOps_14937
                        acctNumlen = 14;
                        break;
                    case #PAYACH:
                        ibanlen    = 14;
                        break;
                    case #PAYRGI:
                    case #ACHPGIRO:
                    case #ACHBGIRO:
                        printType = true;
                        acctNumlen = 14;//SKS_DevOps_15084
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-RU':       //SKS#DevOps:15428
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        iban       = '';
                        acctNumlen = 28;
                        break;
                }
                break;
            case 'US-BOA-XML-SG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        acctNumlen = this.getCdtrAcctlength();
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }                        
                        break;
                    case #PAYACH:
                        iban = '';
                        acctNumlen = 14;  //SKS#DevOps:15531
                        break;
                    case #PAYEFT:
                        iban = '';
                        acctNumlen = 24;
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-TW':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        acctNumlen = this.getCdtrAcctlength();
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }                        
                        break;
                    case #PAYACH:
                        iban = '';
                        acctNumlen = 14;
                        break;
                    case #PAYEFT:
                        iban = '';
                        acctNumlen = 14;
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-KM':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_KMF:
                        acctNumlen = 31;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-YE':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_YER:
                        acctNumlen = 31;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-ARG':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_ARS:
                        acctNumlen = 24;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-GT':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_GTQ:
                        ibanlen = 28;           //SKS#DevOps:17578
                        break;
                }
                break;
            case 'US-BOA-XML-CO':           //SKS#DevOsp:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_COP:
                        ibanlen = 28;
                        break;
                }
                break;
            case 'US-BOA-XML-UK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        ibanlen     = 34;
                        acctNumlen  = this.getCdtrAcctlength();
                        if(printIBAN)
                        {
                            break;
                        }
                        else
                        {
                            iban = '';
                        }                        
                        break;
                    case #PAYFPS:
                        iban = '';
                        acctNumlen = 8;
                        break;
                    case #PAYSCT:
                        acctNumlen = 8;
                        break;
                    case #FED_WIRE:
                        iban = '';
                        printType = true;
                        break;
                    default:
                        acctNumlen = 34;
                        break;
                }
                break;
            case 'US-BOA-XML-PH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BANK_DRFT:
                    case #CCHQ:
                    case #UC:
                        printCdtrAcct = false;
                        break;
                    case #SWIFT:
                        acctNumlen=34;
                        break;
                    case #DOM_RTGS:
                        iban ='';
                        acctNumlen=34;
                        break;
                    case #DOM_PDDTS:
                        iban ='';
                        acctNumlen=20;
                        break;
                    case #PBP:
                    case #DOM_EPCS:
                        iban ='';
                        acctNumlen=16;
                        printType=true;
                        break;
                }
                break;
            case 'US-BOA-XML-PL':
                iban='';
                acctNumlen=34;
                printTypeLookup = true;
                type = value;
                printType = true;
                break;
            default:
                acctNumlen = 34;
                break;
        }
        if((mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::No || 
            subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK')    &&
            printCdtrAcct)
        {
            nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
            //              Id
            nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
            if(printIBANAcct && iban && acctNum)        //SKS#DevOps:22044
            {
                
                //                  IBAN
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', iban, ibanlen);

                //                  Othr
                nodeCdtrAcctIdOthr = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));
                
                //                      Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctIdOthr, 'Id', acctNum, acctNumlen);
            }
            else if(iban)
            {
                //                  IBAN
                nodeCdtrAcctId = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', iban, ibanlen);
            }
            else if(acctNum)
            {
                //                  Othr
                nodeCdtrAcctIdOthr = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));    
                
                //                      Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctIdOthr, 'Id', acctNum, acctNumlen);
            }
            if(!type)
            {
                if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::SavingsAccount)
                {
                    type = 'SVGS';
                }
                else
                {
                    type = 'CACC';
                }
            }
            if(printType && type)
            {
                //              Tp
                nodeCdtrAcctTp = nodeCdtrAcct.appendChild(xmlDoc.createElement('Tp'));
                
                //                  Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctTp, 'Cd', type);
            }

            if(printName)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcct, 'Nm', this.CharacterReplacement(mRemittanceName));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCdtrAcctlength</Name>
				<Source><![CDATA[
    private int getCdtrAcctlength()
    {
        int length;

        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IN' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ID' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ZA' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TH' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VN' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AF' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AM' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AU' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AW' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BB' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BD' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BM' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BN' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BO' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BS' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BT' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BW' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BY' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BZ' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CD' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CL' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CO' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DJ' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'EG' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ER' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ET' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'FJ' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'FK' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GH' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GM' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GN' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GY' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HN' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HT' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IQ' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'JP' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KE' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KG' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KH' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KM' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KY' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LA' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LK' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LR' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LS' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LY' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MN' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MO' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MV' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MY' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NA' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NI' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NP' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PA' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PG' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PH' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PY' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'RW' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SB' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SC' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SG' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SH' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SL' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SO' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SP' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SR' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SZ' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TJ' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TM' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TO' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TT' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TW' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TZ' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UA' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UG' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UY' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UZ' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VU' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'WS' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AG' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AI' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DM' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GD' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KN' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LC' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MS' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VC' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'YE' ||
        this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ZM')
        {
            length = 31;
        }
        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HK')//SKS_VSTS_13935
        {
            length = 34;
        }
        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AR')
        {
            length = 24;
        }
        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DZ' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PE' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VE')
        {
            length = 20;
        }
        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MG' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CF' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CG' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CM' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GA' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TD')
        {
            length = 27;
        }
        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MM')
        {
            length = 30;
        }
        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MX')
        {
            length = 18;
        }
        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NG')
        {
            length = 10;
        }
        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GQ')
        {
            length = 23;
        }
        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BF' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BJ' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CI' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GW' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ML' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NE' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SN' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TG')
        {
            length = 28;
        }
        else
        {
            length = 34;
        }

        return length;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                  Nm
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement  nodeCdtrAgt;
        XmlElement  nodeFinInstnId;
        int         length = 0;
        str         swift, rtg;
        boolean     benCountry;
        boolean     printCdtrAgt = true;
        boolean     printClrsysMmId;
        boolean     pstlAddr;
        boolean     printPstlAddr;
        boolean     printSwtRtg;

        swift   =   mSKS_EFT_FileDetail.DepSwiftNo;
        rtg     =   mSKS_EFT_FileDetail.DepBankTransit;

        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ID'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ZA' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SA' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TH' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VN' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AF' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AL' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AM' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AO' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AR' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AW' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AZ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BA' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BB' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BD' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BH' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BI' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BM' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BN' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BO' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BR' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BS' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BT' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BW' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BY' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BZ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CD' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CH' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LI' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CL' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CO' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CR' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CV' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CZ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DJ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DK' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DZ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'EG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ER' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ET' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'FJ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'FK' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GB' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GH' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GI' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GM' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GN' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GT' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GY' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HK' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HN' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HR' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HT' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HU' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IL' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IQ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IS' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'JO' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'JP' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KH' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KM' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KW' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KY' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LA' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LB' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LK' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LR' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LS' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LY' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MD' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MK' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MM' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MN' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MO' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MR' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MU' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MV' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MX' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MY' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MZ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NA' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NI' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NP' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PA' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PH' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PK' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PL' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PY' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'QA' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'RS' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'RW' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SB' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SC' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SH' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SL' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SO' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SP' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SR' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ST' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SZ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TJ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TM' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TN' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TO' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TR' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TT' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TW' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TZ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UA' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UY' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UZ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VU' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'WS' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CF' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CM' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GA' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GQ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TD' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AI' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DM' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GD' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KN' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LC' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MS' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VC' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BF' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BJ' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CI' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GW' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ML' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SN' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TG' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NC' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PF' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'WF' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'YE' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ZM')
        {
            bencountry = true;
        }
        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IN'   ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ID'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ZA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TH'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AF'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AL'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AU'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AW'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BB'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BD'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BH'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BI'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BS'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BT'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BW'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CD'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CH'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LI'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CL'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CV'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DJ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DK'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'EG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ER'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ET'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'FJ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'FK'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GB'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GH'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GI'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GT'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HK'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HT'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HU'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IL'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IQ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IS'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'JO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'JP'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KH'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KW'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LB'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LK'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LS'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MD'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MK'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MU'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MV'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MX'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NI'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NP'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PH'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PK'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PL'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'QA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'RS'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'RW'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SB'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SC'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SH'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SL'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SP'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ST'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TJ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TT'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TW'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VU'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'WS'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CF'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GQ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TD'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AI'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GD'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LC'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MS'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VC'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BF'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BJ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CI'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GW'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ML'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NC'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PF'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'WF'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'YE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ZM')
        {
            pstlAddr = true;
        }
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_WIRE:
                        if(benCountry)
                        {
                            length = 11;
                        }
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        break;
                    case #FED_WIRE:
                        printClrsysMmId = true;
                        break;
                    case #ACH_CTX:
                    case #ACH_CCD:
                    case #ACH_CCP:
                        swift = '';
                        break;
                    case #ACH_PPD:                    
                    case #EPAY:
                        swift = '';
                        printPstlAddr = true;
                        break;
                    case #ACH_IAT:      //SKS#DevOps:16195
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MX'   ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA'   ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PA')      //SKS#DevOps:20255
                        {
                            swift = '';
                        }
                        printPstlAddr = true;
                        break;
                    case #ACH_FX:
                        printClrsysMmId = true;
                        printPstlAddr = true;
                        break;
                    case #WIRE_FXP:
                        printPstlAddr = true;
                        if(swift) //SKS#DevOps:15661
                        {
                            length = 11;
                        }
                        else
                        {
                            swift = '';
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #PAYACH:                        
                        swift = '';//DevOps19974
                        printPstlAddr = true;
                        break;
                    case #SWIFT:
                        length = 11;
                        printSwtRtg = true;         //SKS#DevOps:20929
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #PAYACH:
                        if(rtg)
                        {
                            swift = '';
                        }
                        printPstlAddr = true;
                        break;
                    case #SWIFT:
                        if(benCountry)
                        {
                            length = 11;
                        }
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        break;
                    case #CCHQ:
                        printCdtrAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-ID':
                
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BANK_DRFT:
                    case #CCHQ:
                        printCdtrAgt=false;
                        break;
                    case #SWIFT:
                        printCdtrAgt=true;
                        break;
                    default:
                        swift='';
                        printCdtrAgt=true;
                        break;
                }
                break;
            case 'US-BOA-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #PAYACH:
                        swift = '';
                        printPstlAddr = true;
                        break;                    
                    case #ACHLOW:
                    case #ACHHGH:
                        swift = '';
                        break;
                    case #SWIFT://DevOps20215
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        break;
                    case #SWIFT_CNY:
                        swift = '';
                        printPstlAddr = true;
                        break;
                }
                break;
            case 'US-BOA-XML-DE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        length = 11;
                        break;
                    case #PAYSCT:
                        printPstlAddr = true;
                        length = 11;
                        break;
                    case #PAYEFT:
                        printPstlAddr = true;
                        length = 8;
                        break;
                }
                break;
            case 'US-BOA-XML-ES':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        length = 11;
                        break;
                    case #PAYEFT:
                        length = 11;
                        printPstlAddr = true;
                        break;
                    case #PAYSCT:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-FR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        length = 11;
                        break;
                    case #PAYSCT:
                        printPstlAddr = true;
                        length = 11;
                        break;
                    case #PAYEFT:
                        printPstlAddr = true;
                        length = 8;
                        break;
                    case #CB_CAD:       //SKS#DevOps:15202
                        swift = '';
                        printPstlAddr = true;
                        break;
                }
                break;
            case 'US-BOA-XML-BE':  //SKS#DevOps:20316       //SKS#DevOps:20316
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        length = 11;
                        break;
                    case #PAYSCT:
                        printPstlAddr = true;
                        length = 11;
                        break;
                    case #PAYEFT:
                        printPstlAddr = true;
                        length = 8;
                        break;
                }
                break;
            case 'US-BOA-XML-GR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                        if(rtg)
                        {
                            swift = '';
                        }
                        printPstlAddr = true;
                        break;
                    case #SWIFT:
                        if(benCountry)
                        {
                            length = 11;
                        }
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        break;
                    case #FED_WIRE:
                        printClrsysMmId = true;
                        break;
                    case #PAYSCT:
                        printPstlAddr = true;
                        break;
                }
                break;
            case 'US-BOA-XML-HK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        length = 11;
                        break;
                    case #PAYEFT:
                        length = 11;
                        break;
                    case #HK_FEDWIRE:  //SKS_DevOps_15305 -->
                        if(rtg)
                        {
                            swift = '';
                        }
                        break;
                    case #HK_CNY_CAP:
                    case #HK_CNY_TR:
                    case #HK_CNY_CA:
                    case #HK_CNY_OTR:
                    case #HK_CNY_SER:
                        swift = '';
                        break;   //SKS_DevOps_15305 <--
                }
                break;
            case 'US-BOA-XML-HU'://SKS_VSTS_13935
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(swift)
                        {
                            length = 11;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-IN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #PAYACH:
                    case #SWIFT_INR:        //SKS#DevOps:16330
                        if(rtg)
                        {
                            swift = '';
                        }
                        printPstlAddr = true;
                        break;
                    case #SWIFT:
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-IE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                        printPstlAddr = true;
                        break;
                }
                break;
            case 'US-BOA-XML-IT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                        if(rtg)
                        {
                            swift = '';
                        }
                        printPstlAddr = true;
                        break;
                    case #SWIFT:
                        if(benCountry)
                        {
                            length = 11;
                        }
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        break;
                    case #FED_WIRE:
                        printClrsysMmId = true;
                        break;
                    case #PAYSCT:
                        printPstlAddr = true;
                        break;
                }
                break;
            case 'US-BOA-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYACH:
                        if(rtg)
                        {
                            swift = '';
                        }
                        printPstlAddr = true;
                        break;
                    case #SWIFT:
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        length = 11;
                        break;
                    case #PAYEFT:
                        length = 11;
                        printPstlAddr = true;
                        break;
                }
                break;
            case 'US-BOA-XML-AZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_AZN:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-CR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_CRC:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-PE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_PEN:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-PY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_PYG:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-KR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #FED_WIRE:         //SKS#DevOps:15082
                        if(rtg)
                        {
                            swift = '';
                        }
                        printPstlAddr = true;
                        break;
                    case #SWIFT:
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-KE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_KES:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-CO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_COP:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-EG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_EGP:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-ER':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_ERN:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-KM':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_KMF:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-ET':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_ETB:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-NP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_NPR:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-TZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_TZS:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-DO':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_DOP:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-MV':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_MVR:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-SL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_SLL:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-RW':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_RWF:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-VN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_VND:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-MM':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_MMK:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-UZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_UZS:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-YE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_YER:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-UY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_UYU:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-ZM':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_ZMW:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-ARG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_ARS:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-GT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_GTQ:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-LU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                        printClrsysMmId = true;
                        printPstlAddr = true;
                        length = 11;
                        break;
                    case #SWIFT:
                    case #PAYSCT:
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-MX':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #PAYACH:
                        if(rtg)
                        {
                            swift = '';
                        }
                        printPstlAddr = true;
                        break;
                    case #SWIFT:
                        if(rtg)
                        {
                            swift = '';
                        }
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-MY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #PAYACH:
                        if(rtg)
                        {
                            swift = '';
                        }
                        printPstlAddr = true;
                        break;
                    case #FED_WIRE:
                        rtg = '';
                        break;
                    case #CCHQ:
                        printCdtrAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-NL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        length = 11;
                        break;
                    case #PAYEFT:
                        printPstlAddr = true;
                        length = 11;
                        break;
                    case #PAYSCT:
                        length = 11;
                        printPstlAddr = true;
                        break;
                }
                break;
            case 'US-BOA-XML-NZ':       //SKS#DevOps:15082
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        if(swift)//DevOps21025
                        {
                            rtg = '';
                        }

                        length = 11;
                        break;
                    case #PAYACH:
                        if(rtg)
                        {
                            swift = '';
                        }

                        printPstlAddr = true;
                        break;
                    default:
                        if(rtg)
                        {
                            swift = '';
                        }

                        printPstlAddr = true;
                        break;
                }
                break;
            case 'US-BOA-XML-SE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                        if(rtg)
                        {
                            swift = '';
                        }
                        printPstlAddr = true;
                        length = 11;
                        break;
                    case #PAYACH:
                        printPstlAddr = true;
                        break;
                    case #SWIFT:
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-SG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYACH:
                        printPstlAddr = true;
                        break;
                    case #SWIFT:
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        length = 11;
                        break;
                    case #PAYEFT:
                        printPstlAddr = true;
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-TW':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                        if(rtg)
                        {
                            swift = '';
                        }
                        printPstlAddr = true;
                        break;
                    case #SWIFT:
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-UK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #PAYACH:
                    case #PAYSCT:
                        printSwtRtg     = true;     //SKS#DevOps:20784
                        printPstlAddr   = true;
                        length = 11;
                        break;
                    case #SWIFT:
                        if(benCountry)
                        {
                            length = 11;
                        }
                        if(pstlAddr)
                        {
                            printPstlAddr = true;
                        }
                        break;
                    case #PAYRGI:
                    case #ACHPGIRO:
                    case #ACHBGIRO:
                        length = 11;
                        break;
                    case #PAYFPS:
                        if(rtg)                  //SKS#DevOps:17173
                        {
                            swift = '';
                        }
                        printClrsysMmId = true;
                        printPstlAddr = true;
                        break;
                    case #FED_WIRE:
                        printClrsysMmId = true;
                        break;
                }
                break;
            case 'US-BOA-XML-PH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BANK_DRFT:
                    case #CCHQ:
                        printCdtrAgt=false;
                        break;
                    case #DOM_EPCS:
                    case #PBP:
                    case #UC:
                        printCdtrAgt=true;
                        swift ='';
                        break;
                    case #SWIFT:
                    case #DOM_RTGS:
                    case #DOM_PDDTS:
                        rtg = '';
                        printCdtrAgt=true;
                        break;
                }
                break;
            case 'US-BOA-XML-PL':
               
                swift = '';
                printCdtrAgt=true;
                printPstlAddr = true;
                break;
        }
        if(printCdtrAgt && 
          (mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::No || (subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK')))
        {
            //          2.77: CdtrAgt
            nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));
    
            //              FinInstnId
            nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));

            if(printSwtRtg && swift && rtg)        //SKS#DevOps:20734
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', swift, length, false);

                if(rtg)
                {
                    //                  ClrSysMmbId
                    this.node_CdtTrfTxInf_CdtrAgt_MmbId(nodeFinInstnId);
                }
            }
            else if(swift)
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', swift, length);

            }
            else if(rtg)
            {
                //                  ClrSysMmbId
                this.node_CdtTrfTxInf_CdtrAgt_MmbId(nodeFinInstnId);
            }
            
            if(mSKS_EFT_FileDetail.PaymSpec != #ACH_CTX)
            {
                //                  Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankName), 0, false);
            }
            if(printPstlAddr)
            {
                //                  PstlAdr
                this.node_PstlAdr_Structured(nodeFinInstnId, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, '', '', '', 0, '', '');
            }
            else
            {
                //                  PstlAdr
                this.node_PstlAdr_Structured(nodeFinInstnId, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '', mSKS_EFT_FileDetail_BenBank.BenBankCity, 0, '', '');
            }
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt_MmbId</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_CdtTrfTxInf_CdtrAgt_MmbId
    /// </summary>
    /// <param name = "_nodeFinInstnId">_nodeFinInstnId</param>
    protected void node_CdtTrfTxInf_CdtrAgt_MmbId(XmlElement _nodeFinInstnId)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.77: CdtrAgent
        //          MmbId
        //------------------------------------------------------------------------------------------------------
        XmlElement  nodeClrSysMmbId;
        XmlElement  nodeClrSysId;
        int         length;
        str         rtg, cd;
        boolean     printClrsysId = true;
        str clrSysIdCd;

        rtg = mSKS_EFT_FileDetail.DepBankTransit;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_CTX:
                    case #ACH_CCD:
                    case #ACH_CCP:
                    case #FED_WIRE:
                        length  =   9;
                        break;
                    case #WIRE_FXP://SKS_VSTS_14017
                        length  =   0;
                        printClrsysId = true;//DevOps20310
                        clrSysIdCd = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ClrSysIdCd', mSKS_EFT_FileDetail.RecId));//DevOps20310

                        if(clrSysIdCd)
                        {
                            cd =clrSysIdCd;
                        }
                        else
                        {
                            cd='XXXXX';
                        }
                        break;
                    case #ACH_PPD:
                        length          =   9;
                        printClrsysId   =   false;
                        break;
                    case #SWIFT_WIRE:
                        length          =   35;
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IN' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AU' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            printClrsysId   =   false;
                        }
                        else
                        {
                            printClrsysId   =   true;
                            clrSysIdCd = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ClrSysIdCd', mSKS_EFT_FileDetail.RecId));//DevOps20310

                            if(clrSysIdCd)
                            {
                                cd =clrSysIdCd;
                            }
                            else
                            {
                                cd='XXXXX';
                            }
                        }
                        break;
                    case #EPAY:
                        length  =   35;
                        break;
                    default:
                        length  =   6;
                        break;
                }
                break;
            case 'US-BOA-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AU')
                        {
                            length  =   6;
                        }
                        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }
                        printClrsysId = false;
                        break;
                    case #PAYEFT:
                    case #PAYACH:
                        printClrsysId   = false;
                        length          =   6;
                        break;
                    default:
                        length  =   6;
                        break;
                }
                break;
            case 'US-BOA-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #PAYACH:
                        length          =   9;
                        printClrsysId   = false;
                        break;
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }
                        printClrsysId   = false;
                        break;
                    default:
                        length  =   6;
                        break;
                }
                break;
            case 'US-BOA-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                            printClrsysId   = false;
                        }
                        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' &&
                                mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNY')
                        {
                            length  =   12;
                            cd      =   'CNAP';
                        }
                        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN')
                        {
                            length  =   12;
                            printClrsysId   = false;
                        }
                        else
                        {
                            length  =   6;
                            printClrsysId   = false;
                        }                        
                        break;
                    case #PAYEFT:
                    case #PAYACH:
                    case #ACHLOW:
                    case #ACHHGH:
                    case #SWIFT_CNY:        //SKS#DevOps:16330
                        length          = 12;
                        printClrsysId   = false;
                        break;
                    default:
                        length  =   12;
                        break;
                }
                break;
            case 'US-BOA-XML-ID':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        length  =   9;
                        break;
                   
                    default:
                        length  =   7;
                        printClrsysId   = false;
                        break;
                }
                break;
            case 'US-BOA-XML-DE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }
                        printClrsysId   = false;
                        break;
                    case #PAYEFT:
                        length          = 8;
                        printClrsysId   = false;
                        break;
                    case #PAYSCT:
                        length          = 6;
                        printClrsysId   = false;
                        break;
                    default:
                        length  =   6;
                        break;
                }
                break;
            case 'US-BOA-XML-ES':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }
                        printClrsysId   = false;
                        break;
                    case #PAYEFT:
                        length          = 8;
                        printClrsysId   = false;
                        break;
                    case #PAYSCT:
                        length          = 6;
                        printClrsysId   = false;
                        break;
                    default:
                        length  =   6;
                        break;
                }
                break;
            case 'US-BOA-XML-FR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }
                        printClrsysId   = false;
                        break;
                    case #PAYEFT:
                        length          = 10;
                        printClrsysId   = false;
                        break;
                    case #PAYSCT:
                        length          = 6;
                        printClrsysId   = false;
                        break;
                    case #CB_CAD:       //SKS#DevOps:15202
                        length          = 9;
                        printClrsysId   = false;
                        break;
                    default:
                        length  =   6;
                        break;
                }
                break;
            case 'US-BOA-XML-BE':  //SKS#DevOps:20316
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }
                        printClrsysId   = false;
                        break;
                    case #PAYEFT:
                        length          = 10;
                        printClrsysId   = false;
                        break;
                    case #PAYSCT:
                        length          = 6;
                        printClrsysId   = false;
                        break;
                    default:
                        length  =   6;
                        break;
                }
                break;
            case 'US-BOA-XML-GR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #PAYSCT:
                        printClrsysId   = false;
                        length          =   6;
                        break;
                    case #FED_WIRE:
                        length  =   9;
                        break;
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }
                        printClrsysId   = false;
                        break;
                    default:
                        length  =   6;
                        break;
                }
                break;
            case 'US-BOA-XML-HK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }
                        printClrsysId   = false;
                        break;
                    case #PAYEFT:
                    case #PAYACH:
                        printClrsysId   = false;
                        length          =   6;
                        break;
                    case #HK_CNY_CAP:      //SKS_DevOps_15305 -->
                    case #HK_CNY_TR:
                    case #HK_CNY_CA:
                    case #HK_CNY_OTR:
                    case #HK_CNY_SER:
                        cd = 'CNAPS';
                        length = 12;
                        break;
                    case #HK_FEDWIRE:
                        cd = 'USABA';
                        length = 9;
                        break;             //SKS_DevOps_15305 <--
                    default:
                        length  =   6;
                        break;
                }
                break;
            case 'US-BOA-XML-HU'://SKS_VSTS_13935
                length = 8;
                break;
            case 'US-BOA-XML-IE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                        length = 6;
                        printClrsysId = false;
                        break;
                }
                break;
            case 'US-BOA-XML-IN':
                cd = 'INFSC';               //SKS_DevOps_15174
                printClrsysId = true;       //SKS#DevOps:15156
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IN')
                        {
                            length  =   11;
                        }
                        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }
                        rtg = strUpr(mSKS_EFT_FileDetail.DepBankTransit);
                        break;
                    case #PAYACH:
                    case #PAYEFT:
                        rtg = strUpr(mSKS_EFT_FileDetail.DepBankTransit);
                        length          =   11;
                        break;
                    case #SWIFT_INR:
                        rtg = mSKS_EFT_FileDetail.DepBankTransit;
                        printClrsysId   = false;
                        length          =   11;
                        break;
                }
                break;
            case 'US-BOA-XML-IT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }
                        printClrsysId   = false;
                        break;
                    case #FED_WIRE:
                        length  =   9;
                        break;
                    case #PAYEFT:
                        length          = 10;
                        printClrsysId   = false;
                        break;
                    case #PAYSCT:
                        length          = 6;
                        printClrsysId   = false;
                        break;
                    default:
                        length  =   6;
                        break;
                }
                break;
            case 'US-BOA-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }
                        printClrsysId   = false;
                        break;
                    case #FED_WIRE://SKS_VSTS_14298
                        length  =   9;
                        break;
                    case #PAYEFT:
                    case #PAYACH:
                        length          = 7;
                        printClrsysId   = false;
                        break;
                    default:
                        length  =   7;
                        break;
                }
                break;
            case 'US-BOA-XML-KR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }                    
                        printClrsysId   = false;
                        break;
                    case #FED_WIRE://SKS_VSTS_14298
                        printClrsysId   = false;    //SKS#DevOps:15082
                        length  =   9;
                        break;
                    case #PAYEFT:
                        length          = 9;  // //SKS_VSTS_15021
                        printClrsysId   = false;
                        break;
                    default:
                        length  =   6;    // //SKS_VSTS_15021
                        break;
                }
                break;
            case 'US-BOA-XML-LU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                        length          = 3;
                        printClrsysId   = false;
                        break;
                }
                break;
            case 'US-BOA-XML-MX':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }
                        printClrsysId   = false;
                        break;
                    case #PAYEFT:
                    case #PAYACH:
                        length          = 3;
                        printClrsysId   = false;
                        break;
                    case #TAXUTIL:      //SKS#DevOps:20395
                        length          = 3;
                        printClrsysId = false; //DevOps21617
                        break;
                    default:
                        length  =   3;
                        break;
                }
                break;
            case 'US-BOA-XML-MY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #PAYACH:
                        printClrsysId   = false;
                        length          =   7;
                        break;
                    case #SWIFT:
                        switch(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId))
                        {
                            case 'US':
                                cd = 'USABA';
                                break;
                            case 'CA':
                                cd = 'CACPA';
                                break;
                            case 'GB':
                                cd = 'GBDSC';
                                break;
                            case 'AU':
                                cd = 'AUBSB';
                                break;
                            default:
                                cd = '';
                                break;                    
                        }
                    default:
                        length  =   6;
                        break;
                }
                break;
            case 'US-BOA-XML-NL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }
                        printClrsysId   = false;
                        break;
                    case #PAYEFT:
                    case #PAYSCT:
                        printClrsysId   = false;
                        length          =   6;
                        break;
                    default:
                        length  =   6;
                        break;
                }
                break;
            case 'US-BOA-XML-NZ':           //SKS#DevOps:15082
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }
                        printClrsysId   = false;
                        break;
                    case #PAYACH:
                        printClrsysId   = false;
                        length          =   6;
                        break;
                    default:
                        length  =   6;
                        break;
                }
                break;
            case 'US-BOA-XML-SE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }
                        printClrsysId   = false;
                        break;
                    case #PAYEFT:
                    case #PAYACH:
                        printClrsysId   = false;
                        length          =   6;
                        break;
                    default:
                        length  =   6;
                        break;
                }
                break;
            case 'US-BOA-XML-SG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }
                        printClrsysId   = false;
                        break;
                    case #PAYEFT:
                    case #PAYACH:
                        printClrsysId   = false;
                        length          =   7;
                        break;
                    default:
                        length  =   7;
                        break;
                }
                break;
            case 'US-BOA-XML-TW':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }
                        printClrsysId   = false;
                        break;
                    case #PAYEFT:
                        printClrsysId   = false;
                        length          = 7;
                        break;
                    default:
                        length  =   7;
                        break;
                }
                break;
            case 'US-BOA-XML-UK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA' ||
                           this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US')
                        {
                            length  =   9;
                        }
                        printClrsysId   = false;
                        break;
                    case #FED_WIRE:
                        length  =   9;
                        break;
                    case #PAYFPS:
                        printClrsysId   = true;         //SKS#DevOps:17173
                        cd = 'GBDSC';//DevOps19523
                        break;
                    case #PAYSCT:
                    case #PAYEFT:
                    case #PAYACH:
                        printClrsysId   = false;
                        length          = 6;
                        break;
                    default:
                        length  =   6;
                        break;
                }
                break;
            case 'US-BOA-XML-PH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOM_EPCS:
                    case #DOM_PDDTS:
                    Case #UC:
                        length  =   9;
                        printClrsysId   = false;
                        break;
                }
                break;
            case 'US-BOA-XML-PL':
                printClrsysId   = false;
                break;
            default:
                length  =   6;
                break;
        }

        if(mSKS_EFT_FileDetail.DepBankTransit != '')
        {
            nodeClrSysMmbId = _nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

            if(printClrsysId &&  mSKS_EFT_FileDetail.PaymSpec != #ACH_CTX )
            {
                nodeClrSysId = nodeClrSysMmbId.appendChild(xmlDoc.createElement('ClrSysId'));
                if(cd)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', cd);             //SKS_VSTS_13350
                }
                else
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', 'USABA');
                }
            }
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, length);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChqInstr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChqInstr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.52 ChqInstr
        //              2.58 DlvryMtd
        //              2.65 ChqMtrtyDt
        //              2.69: PrtLctn
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeChqInstr;
        XmlElement nodeDlvryMtd;
        str     value, chqTp;
        boolean printDlvryMthd = true,ChqFr = false;


    
        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BenType', mSKS_EFT_FileDetail.RecId));

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML-PH':
            case 'US-BOA-XML-ID':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BANK_DRFT :
                        chqTp   =   'BCHQ';
                        printDlvryMthd=false;
                        ChqFr=true;
                        break;
                    case #CCHQ:
                        chqTp   =   'CCHQ';
                        printDlvryMthd=false;
                        ChqFr=true;
                        break;
                }
                break;
            case 'US-BOA-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK:
                        chqTp   =   'BCHQ';
                        break;
                    case #CCHQ:
                        chqTp   =   'CCHQ';
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CAMailHandling', mSKS_EFT_FileDetail.RecId));//SKS_DevOps_14965
                        break;
                }                
                break;
            case 'US-BOA-XML-MY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CCHQ:
                        printDlvryMthd = false;
                        chqTp   =   'CCHQ';
                        break;
                }
                break;
            default:
                chqTp   =   'CCHQ';
                break;
        }

        //          2.52 ChqInstr
        nodeChqInstr = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('ChqInstr'));
    
        //              2.53 ChqTp
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'ChqTp', chqTp);

        //              2.54 ChqNb
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeChqInstr, 'ChqNb', this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 0, false);
    
        if(value && printDlvryMthd)
        {
            //              2.58 DlvryMtd
            nodeDlvryMtd = nodeChqInstr.appendChild(xmlDoc.createElement('DlvryMtd'));
            
            //                  2.60: Prtry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDlvryMtd, 'Prtry', value, 0, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChrgBr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.51: ChrgBr
        //------------------------------------------------------------------------------------------------------
    
        str value;        

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML-AU':
            case 'US-BOA-XML-CA':
            case 'US-BOA-XML-CH':
            case 'US-BOA-XML-CN':
            case 'US-BOA-XML-HK':
            case 'US-BOA-XML-KR':
            case 'US-BOA-XML-MX':
            case 'US-BOA-XML-SG':
            case 'US-BOA-XML-TW':
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Charges', mSKS_EFT_FileDetail.RecId));
                if(value =='')
                {
                    value = 'SHAR';
                }
                break;
            case  'US-BOA-XML-UK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Charges', mSKS_EFT_FileDetail.RecId));
                        if(value =='')
                        {
                            value = 'SHAR';
                        }
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Charges', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-BOA-XML-ID':
            case 'US-BOA-XML-PH':
            case 'US-BOA-XML-ARG':
            case 'US-BOA-XML-EG':
            case 'US-BOA-XML-ER':
            case 'US-BOA-XML-ET':
            case 'US-BOA-XML-IL':
            case 'US-BOA-XML-JM':
            case 'US-BOA-XML-KE':
            case 'US-BOA-XML-KM':
            case 'US-BOA-XML-MM':
            case 'US-BOA-XML-MV':
            case 'US-BOA-XML-NP':
            case 'US-BOA-XML-RW':
            case 'US-BOA-XML-SL':
            case 'US-BOA-XML-UZ':
            case 'US-BOA-XML-VN':
            case 'US-BOA-XML-YE':
            case 'US-BOA-XML-ZM':
            case 'US-BOA-XML-AZ':
            case 'US-BOA-XML-BR':
            case 'US-BOA-XML-BY':
            case 'US-BOA-XML-CO':
            case 'US-BOA-XML-CR':
            case 'US-BOA-XML-DO':
            case 'US-BOA-XML-GT':
            case 'US-BOA-XML-KZ':
            case 'US-BOA-XML-PE':
            case 'US-BOA-XML-PY':
            case 'US-BOA-XML-RU':
            case 'US-BOA-XML-UY':
            case 'US-BOA-XML-TZ':
            case 'US-BOA-XML':
            case 'US-BOA-XML-PL':
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ChrgBr', mSKS_EFT_FileDetail.RecId));
                break;

            default:
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Charges', mSKS_EFT_FileDetail.RecId));
                break;
        }
        if(value)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'ChrgBr', value, 0, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_InstrForCdtrAgt</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_CdtTrfTxInf_InstrForCdtrAgt
    /// </summary>
    /// <param name = "_nodeCdtTrfTxInf">_nodeCdtTrfTxInf</param>
    protected void node_CdtTrfTxInf_InstrForCdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.82: InstrForCdtrAgt
        //              InstrInf
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeInstrForCdtrAgt;
        str     bocrpk, bcci,InstrForCdtrAgtvalue;
        str     instrInfo, itemizeACH, value;
        boolean instrInformation,InstrText;
        boolean bocrpkflag;
        boolean bcciflag;
        boolean InstrForCdtrAgtflag;
        str     sendCustType, sendResidentType, vendbankZip, benCustType, benResidentType;
        str     InstrTextvalue;

        bocrpk      = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BOCRPK', mSKS_EFT_FileDetail.RecId));
        bcci        = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BCCI', mSKS_EFT_FileDetail.RecId));

        instrInfo = msKS_EFT_FileDetail_Instructions.BankInst1;
    
        if(instrInfo != '')
        {
            instrInfo += ' ';
        }
    
        instrInfo += msKS_EFT_FileDetail_Instructions.BankInst2;
    
        if(instrInfo != '')
        {
            instrInfo += ' ';
        }
    
        instrInfo += msKS_EFT_FileDetail_Instructions.BankInst3;
    
        if(instrInfo != '')
        {
            instrInfo += ' ';
        }
    
        instrInfo += msKS_EFT_FileDetail_Instructions.BankInst4;
    
        if(instrInfo != '')
        {
            instrInfo += ' ';
        }
    
        instrInfo += msKS_EFT_FileDetail_Instructions.BankInst5;
    
        if(instrInfo != '')
        {
            instrInfo += ' ';
        }
    
        instrInfo += msKS_EFT_FileDetail_Instructions.BankInst6;

        if(mSKS_EFT_FileDetail_Instructions.PmtInstText1  ||
               mSKS_EFT_FileDetail_Instructions.PmtInstText2  ||
               mSKS_EFT_FileDetail_Instructions.PmtInstText3   ||
               mSKS_EFT_FileDetail_Instructions.PmtInstText4 )
        {
            if(mSKS_EFT_FileDetail_Instructions.PmtInstText1)
            {
                InstrTextvalue = mSKS_EFT_FileDetail_Instructions.PmtInstText1;
            }

            if(mSKS_EFT_FileDetail_Instructions.PmtInstText2)
            {
                if(InstrTextvalue)
                {
                    InstrTextvalue = InstrTextvalue + ',' + mSKS_EFT_FileDetail_Instructions.PmtInstText2;
                }
                else
                {
                    InstrTextvalue = mSKS_EFT_FileDetail_Instructions.PmtInstText2;
                }
                   
            }

            if( mSKS_EFT_FileDetail_Instructions.PmtInstText3)
            {
                if(InstrTextvalue)
                {
                    InstrTextvalue = InstrTextvalue + ',' + mSKS_EFT_FileDetail_Instructions.PmtInstText3;
                }
                else
                {
                    InstrTextvalue = mSKS_EFT_FileDetail_Instructions.PmtInstText3;
                }
            }
                    

            if( mSKS_EFT_FileDetail_Instructions.PmtInstText4)
            {
                if(InstrTextvalue)
                {
                    InstrTextvalue = InstrTextvalue + ',' + mSKS_EFT_FileDetail_Instructions.PmtInstText4;
                }
                else
                {
                    InstrTextvalue = mSKS_EFT_FileDetail_Instructions.PmtInstText4;
                }
            }
                    
        }

        itemizeACH = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ItemizeACH', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #FED_WIRE:
                        instrInformation = true;
                        break;
                    case #ACH_CTX:
                    case #ACH_CCD:                           //SKG#VSTS:7598
                    case #ACH_CCP:
                        if(itemizeACH == 'Y')                                                              //SKG#VSTS:9507
                        {
                            instrInfo = SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 35);
                        }
                        else
                        {
                            instrInfo = 'CORP PYMNT';
                        }
                        instrInformation = true;
                        break;
                    case #SWIFT_WIRE:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' &&
                           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNH')
                        {
                            bocrpkflag  = true;
                            bcciflag    = true;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' &&
                           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNH')
                        {
                            bocrpkflag  = true;
                            bcciflag    = true;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' &&
                           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNH')
                        {
                            bocrpkflag  = true;
                            bcciflag    = true;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' &&
                           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNH')
                        {
                            bocrpkflag  = true;
                            bcciflag    = true;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-DE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' &&
                           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNH')
                        {
                            bocrpkflag  = true;
                            bcciflag    = true;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-ES':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' &&
                           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNH')
                        {
                            bocrpkflag  = true;
                            bcciflag    = true;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-GR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #FED_WIRE:
                        instrInformation = true;
                        break;
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' &&
                           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNH')
                        {
                            bocrpkflag  = true;
                            bcciflag    = true;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-HK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' &&
                           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNH')
                        {
                            bocrpkflag  = true;
                            bcciflag    = true;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-ID':       //SKS#DevOps:20916
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_LV_BI:
                        select msks_EFT_FileDetail_BankAddress where
                                msks_EFT_FileDetail_BankAddress.RefRecId == mSKS_EFT_FileDetail.RecID
                            && msks_EFT_FileDetail_BankAddress.AddressType == SKS_EFT_AddressType::VendBankAddress;
                        sendCustType    = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('SenderCustomerType', mSKS_EFT_FileDetail.RecId));
                        sendResidentType= this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('SenderResidentType ', mSKS_EFT_FileDetail.RecId));
                        vendbankZip     = this.CharacterReplacement(msks_EFT_FileDetail_BankAddress.ZipCode);
                        benCustType     = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BeneficiaryCustomerType', mSKS_EFT_FileDetail.RecId));
                        benResidentType = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BeneficiaryResidentType ', mSKS_EFT_FileDetail.RecId));
                        instrInformation = true;
                        instrInfo = strFmt('/SKNINFO/%1/%2/%3/%4/%5', sendCustType, sendResidentType, '', benCustType, benResidentType);
                        break;
                    case #SWIFT:
                        InstrForCdtrAgtvalue    =   this.getBankPurposeCode(); //DevOps21505
                        InstrForCdtrAgtflag     =   true;
                        break;
                }
                break;
            case 'US-BOA-XML-IN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' &&
                           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNH')
                        {
                            bocrpkflag  = true;
                            bcciflag    = true;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-IT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #FED_WIRE:
                        instrInformation = true;
                        break;
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' &&
                           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNH')
                        {
                            bocrpkflag  = true;
                            bcciflag    = true;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-JP':
                instrInformation = true;//SKS_VSTS_13835
                instrInfo = this.getBankPurposeText();//SKS_VSTS_13835
                
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' &&
                           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNH')
                        {
                            bocrpkflag  = true;
                            bcciflag    = true;
                        }
                        break;
                    case #FED_WIRE ://SKS_VSTS_14298
                        instrInfo = '/ACC/NNKNI';
                        break;
                }
                break;
            case 'US-BOA-XML-KR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' &&
                           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNH')
                        {
                            bocrpkflag  = true;
                            bcciflag    = true;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-MX':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' &&
                           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNH')
                        {
                            bocrpkflag  = true;
                            bcciflag    = true;
                        }
                        break;
                    case #TAXUTIL:
                        InstrText = true;
                        break;
                  
                }
                break;
            case 'US-BOA-XML-MY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                        value = this.characterReplacement(SKS_EFT_Format::getCodelookupvalue('ConvertToMYR', mSKS_EFT_FileDetail.RecId));    //SKS#DevOps:20641
                        if(value == 'Yes')
                        {
                            instrInfo = '/REC/R2R CONVERT FCY PMT INST TO PAY MYR SAME DAY';
                            instrInformation = true;
                        }
                        break;

                }
                break;
            case 'US-BOA-XML-NL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' &&
                           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNH')
                        {
                            bocrpkflag  = true;
                            bcciflag    = true;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-SE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' &&
                           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNH')
                        {
                            bocrpkflag  = true;
                            bcciflag    = true;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-SG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' &&
                           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNH')
                        {
                            bocrpkflag  = true;
                            bcciflag    = true;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-TW':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' &&
                           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNH')
                        {
                            bocrpkflag  = true;
                            bcciflag    = true;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-UK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #FED_WIRE:
                        instrInformation = true;
                        break;
                    case #SWIFT:
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' &&
                           mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNH')
                        {
                            bocrpkflag  = true;
                            bcciflag    = true;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-PH' :      //SKS#DevOps:20541
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        instrInfo           =   this.getBankPurposeCode();//DevOps20955
                        instrInformation    =   true;
                        break;
                    case   #DOM_PDDTS:
                        InstrForCdtrAgtvalue = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InstrForCdtrAgtvalue', mSKS_EFT_FileDetail.RecId));
                        InstrForCdtrAgtflag =true;
                        break;

                }
                break;
        }

        if(instrInfo || (bocrpk && bocrpkflag) || (bcci && bcciflag) || (InstrTextvalue && InstrText) || (InstrForCdtrAgtvalue && InstrForCdtrAgtflag))               //SKG#VSTS:8782
        {
            //          2.82: InstrForCdtrAgt
            nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));
            
            if(instrInfo && instrInformation)
            {
                //              InstrInf
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', this.CharacterReplacement(instrInfo), 140);
            }

            if(bocrpk && bocrpkflag)
            {
                //              InstrInf
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', bocrpk);
            }
            if(bcci && bcciflag)
            {
                //              InstrInf
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', bcci);
            }
            if(InstrTextvalue && InstrText)//DevOps21027
            {
                //              InstrInf
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', InstrTextvalue);
            }
            if(InstrForCdtrAgtvalue && InstrForCdtrAgtflag)
            {
                //              InstrInf
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', '/POP/' + InstrForCdtrAgtvalue);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankPurposeCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// getBankPurposeCode
    /// </summary>
    /// <returns>str</returns>
    private str getBankPurposeCode()
    {
        msks_EFT_FileDetail_PaymentLine = sks_EFT_FileDetail_PaymentLine::find(mSKS_EFT_FileDetail.RecId);
    
        bankCode     = this.CharacterReplacement(msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeCode);
    
        return bankCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt1</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_IntrmyAgt1(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.71: IntrmyAgt1
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement  nodeIntrmyAgt1;
        XmlElement  nodeFinInstnId;
        XmlElement  nodeClrSysMmbId;
        boolean     printIntrmyAgt = true;
        boolean     strdPstlAddr;
        str         intSwift;
        str         intBankId;
        
        intSwift   =    mSKS_EFT_FileDetail_Intermediary.IntBankSwift;
        intBankId  =    mSKS_EFT_FileDetail_Intermediary.IntBankId;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK:
                    case #ACH_CTX:
                    case #ACH_CCD:
                    case #ACH_PPD:                 //SKG#VSTS:13334
                    case #ACH_CCP:
                    case #FED_WIRE:
                    case #EPAY:
                        printIntrmyAgt = false;
                        break;
                    case #SWIFT_WIRE:
                        strdPstlAddr = true;    //SKG#DeVOps:16126
                        break;
                }
                break;
            case 'US-BOA-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK:
                    case #PAYEFT:
                        printIntrmyAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK:
                    case #PAYEFT:
                    case #CCHQ:     //SKS#VSTS:14488
                        printIntrmyAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                        printIntrmyAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-DE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                    case #PAYEFT:
                        printIntrmyAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-ES':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                    case #PAYEFT:
                        printIntrmyAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-FR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                    case #PAYEFT:
                        printIntrmyAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-BE':  //SKS#DevOps:20316
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                    case #PAYEFT:
                        printIntrmyAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-GR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                    case #FED_WIRE:
                        printIntrmyAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-HK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #HK_FEDWIRE:   //SKS_DevOps_15305
                        printIntrmyAgt = false;
                        break;
                    case #HK_CNY_CAP:   //SKS_DevOps_15305 -->
                    case #HK_CNY_TR:
                    case #HK_CNY_CA:
                    case #HK_CNY_OTR:
                    case #HK_CNY_SER:
                        intSwift = '';
                        break;    //SKS_DevOps_15305 <--
                }
                break;
            case 'US-BOA-XML-IE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                        printIntrmyAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-IN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                        printIntrmyAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-IT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                    case #FED_WIRE:
                    case #PAYEFT:
                        printIntrmyAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                        printIntrmyAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-KR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                        printIntrmyAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-KE' :          //SKS#DevOps:17132
            case 'US-BOA-XML-EG' :          //SKS#DevOps:17132
            case 'US-BOA-XML-ER' :          //SKS#DevOps:17132
            case 'US-BOA-XML-ET' :          //SKS#DevOps:17132
            case 'US-BOA-XML-RW' :          //SKS#DevOps:17132
            case 'US-BOA-XML-SL' :          //SKS#DevOps:17132
            case 'US-BOA-XML-KM' :          //SKS#DevOps:17132
            case 'US-BOA-XML-TZ' :          //SKS#DevOps:17132
                printIntrmyAgt = false;
                break;
            case 'US-BOA-XML-MX':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                        printIntrmyAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-MY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CCHQ:
                    case #PAYACH:
                    case #PAYEFT:
                    case #FED_WIRE:
                        printIntrmyAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-NL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                    case #PAYEFT:
                        printIntrmyAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-SE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                        printIntrmyAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-SG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                        printIntrmyAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-TW':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                        printIntrmyAgt = false;
                        break;
                }
                break;
            case 'US-BOA-XML-UK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYFPS:
                    case #PAYSCT:
                    case #FED_WIRE:
                    case #PAYEFT:
                        printIntrmyAgt = false;
                        break;
                }
                break;

        }
        if((intSwift || intBankId)  && printIntrmyAgt)
        {
            //          2.71: IntrmyAgt1
            nodeIntrmyAgt1 = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt1'));
    
            //              FinInstnId
            nodeFinInstnId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(intSwift)
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', intSwift, 0, false);
            }
            else if(intBankId)
            {
                //                  ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', intBankId, 35, false);
            }
            //                  Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankName), 140, false);
    
            if(strdPstlAddr)
            {
                this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId, '', '', '', 35, '', mSKS_EFT_FileDetail_Intermediary.IntBankAddr2, true);  //SKS#DevOps:16126
            }
            else
            {
                this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_FileDetail_Intermediary.IntBankCountryRegionId, '', '', '');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Purp</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Purp(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.86: Purp
        //              Prtry
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePurp;
        str        value;
        boolean    prtry;
        boolean    cd;
    
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_IAT:      //SKS#DevOps:20255
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Purp', mSKS_EFT_FileDetail.RecId));
                        cd=true;
                        break;
                }
                break;
            case 'US-BOA-XML-ID':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYROLL_BI:
                        value = 'PAYR';
                        cd=true;
                        break;
                    case #TAX_BI:
                        value = 'TAXS';
                        cd=true;
                        break;
                }
                break;
            case 'US-BOA-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACHLOW:
                        value = 'LOW';
                        prtry = true;
                        break;
                    case #ACHHGH:
                        value = 'HGH';
                        prtry = true;
                        break;
                }
                break;
            case 'US-BOA-XML-SE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYRGI:
                        value = 'RGI';
                        cd = true;
                }
                break;
            case 'US-BOA-XML-PH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PBP:
                        value ='PBP';
                        prtry=true;
                        break;
                    case #UC:
                        value = 'PMC';
                        prtry=true;
                        break;
                }
                break;
            case 'US-BOA-XML-MX':       //SKS#DevOps:20395
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #TAXUTIL:
                        value = 'TXU';
                        prtry = true;
                        break;
                }
                break;
            case 'US-BOA-XML-IN':
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurposeCode', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookup));
                prtry = true;
                break;

        }

        if(value)
        {
            //          2.86: Purp
            nodePurp = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Purp'));

            if(prtry)
            {
                //              2.88: Prtry
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePurp, 'Prtry', value, 20);
            }
            else if(cd)//SKS_VSTS_13235 -->
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePurp, 'Cd',value);
            }//SKS_VSTS_13235 <--
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
    
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_CCD://SKS_DevOps_15059
                    case #ACH_PPD:
                        break;
                    case #ACH_CTX:
                    case #ACH_CCP:
                    case #CHK:
                    case #EPAY:
                    case #ACH_IAT:      //SKS#DevOps:16195
                        this.node_CdtTrfTxInf_RmtInf_Strd(_nodeCdtTrfTxInf);
                        break;
                    default:
                        this.node_CdtTrfTxInf_RmtInf_Ustrd(_nodeCdtTrfTxInf);
                        break;
                }
                break;
            case 'US-BOA-XML-ID':
                this.node_CdtTrfTxInf_RmtInf_Strd(_nodeCdtTrfTxInf);
                break;
            case 'US-BOA-XML-PL':
                this.node_CdtTrfTxInf_RmtInf_Strd(_nodeCdtTrfTxInf);
                break;
            case 'US-BOA-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK:
                    case #CCHQ:
                        this.node_CdtTrfTxInf_RmtInf_Strd(_nodeCdtTrfTxInf);
                        break;
                    case #PAYACH:
                        break;
                    default:
                        this.node_CdtTrfTxInf_RmtInf_Ustrd(_nodeCdtTrfTxInf);
                        break;
                }
                break;
            case 'US-BOA-XML-JP'://SKS_VSTS_14298
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #FED_WIRE:
                        this.node_CdtTrfTxInf_RmtInf_Ustrd(_nodeCdtTrfTxInf);
                        break;
                }
                break;
            case 'US-BOA-XML-KR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                        break;
                    default:
                        this.node_CdtTrfTxInf_RmtInf_Ustrd(_nodeCdtTrfTxInf);
                        break;
                }
                break;
            case 'US-BOA-XML-MY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #PAYACH:
                    case #CCHQ:
                        this.node_CdtTrfTxInf_RmtInf_Strd(_nodeCdtTrfTxInf);
                        break;
                    default:
                        this.node_CdtTrfTxInf_RmtInf_Ustrd(_nodeCdtTrfTxInf);
                        break;
                }
                break;
            case 'US-BOA-XML-SE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYRGI:
                        this.node_CdtTrfTxInf_RmtInf_Strd(_nodeCdtTrfTxInf);
                        break;
                    default:
                        this.node_CdtTrfTxInf_RmtInf_Ustrd(_nodeCdtTrfTxInf);
                        break;
                }
                break;
            default:
                this.node_CdtTrfTxInf_RmtInf_Ustrd(_nodeCdtTrfTxInf);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_RfrdDocInf</Name>
				<Source><![CDATA[
    private void node_CdtTrfTxInf_RmtInf_RfrdDocInf(XmlElement _nodeStrd, SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //------------------------------------------------------------------------------------------------------
        //              2.101: RfrdDocInf
        //                  2.102: Tp
        //                      2.103: CdOrPrtry
        //                          2.104: Cd
        //                  2.107: Number
        //                  2.108: RltdDt
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeRfrdDocInf;
        XmlElement nodeTp;
        XmlElement nodeCdOrPrtry;
    
        //              2.101: RfrdDocInf
        nodeRfrdDocInf = _nodeStrd.appendChild(xmlDoc.createElement('RfrdDocInf'));
    
        //                  2.102: Tp
        nodeTp = nodeRfrdDocInf.appendChild(xmlDoc.createElement('Tp'));
    
        //                      2.103: CdOrPrtry
        nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));
    
        //                          2.104: Cd
        if(_invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur <= 0)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'CINV');
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'CREN');
        }
    
        //                  2.107: Number
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'Nb', _invSKS_EFT_FileDetail.InvoiceNumber);
    
        //                  2.108: RltdDt
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(_invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_Strd</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf_Strd(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //------------------------------------------------------------------------------------------------------
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        XmlElement      nodeRmtInf;
        XmlElement      nodeStrd;
        XmlElement      nodeRfrdDocAmt;
        XmlElement      nodeCdtrRefInf;
        XmlElement      nodeCdOrPrtry;
        XmlElement      nodeTp;
        boolean         firstRec = true;
        LedgerJournalTransTxt   description;
        boolean         printCdtrRef;
        boolean         printInvoiceNumbers;
        str             PONum;
    
        while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
            && invSKS_EFT_FileDetail.InvoiceNumber != ''
        {
            switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
            {
                case 'US-BOA-XML':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #PAYRGI:
                            printCdtrRef = true;
                            break;
                        case #CHK:
                            description = this.CharacterReplacement(invSKS_EFT_FileDetail.InvoiceTransactionTxt);
                            break;
                        case #EPAY:
                            PONum       = '';
                            description = '';
                            break;
                    }
                    break;
                case 'US-BOA-XML-CA':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CCHQ:         //SKS#VSTS:14488
                            printInvoiceNumbers = true;
                            break;
                    }
                    break;
                case 'US-BOA-XML-ID':
                    printInvoiceNumbers =true;
                    break;
                case 'US-BOA-XML-SE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #PAYRGI:
                            printCdtrRef = true;
                            break;
                    }
                    break;
            }            
            if(!printCdtrRef)
            {
                if(firstRec)
                {
                    //          2.98: RmtInf
                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                    firstRec = false;
                }
                //              2.100: Strd
                nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));
    
                //              2.101: RfrdDocInf
                this.node_CdtTrfTxInf_RmtInf_RfrdDocInf(nodeStrd, invSKS_EFT_FileDetail);
    
                //              2.109 RfrdDocAmt
                nodeRfrdDocAmt = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocAmt'));
                this.node_RmtInf_Amt(nodeRfrdDocAmt, invSKS_EFT_FileDetail);
                
                if(PONum || description || printInvoiceNumbers)
                {
                    nodeCdtrRefInf = nodeStrd.appendChild(xmlDoc.createElement('CdtrRefInf'));
    
                    nodeTp = nodeCdtrRefInf.appendChild(xmlDoc.createElement('Tp'));
    
                    nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));
    
                    if(PONum)
                    {
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Prtry', 'PUOR');

                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', PONum, 0, false);
                    }
                    else if(description)
                    {
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'PUOR');
    
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', description, 35, false);
                    }
                    else if(printInvoiceNumbers)
                    {
                        if(mSKS_EFT_FileDetail.FormatId == 'US-BOA-XML-ID')
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'SCOR');
                        }
                        else
                        {
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'PUOR');
                        }
    
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', invSKS_EFT_FileDetail.InvoiceNumber, 35, false);
                    }
                }
            }
            else if(printCdtrRef && invSKS_EFT_FileDetail.PaymId)
            {
                if(firstRec)
                {
                    //          2.98: RmtInf
                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                    firstRec = false;
                }
                //          2.120: CdtrRefInf
                nodeCdtrRefInf = nodeStrd.appendChild(xmlDoc.createElement('CdtrRefInf'));

                //               2.126: Ref
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', invSKS_EFT_FileDetail.PaymId, 0, false);
            }
            //SKS_VSTS_13235 <--
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>get_POInfo</Name>
				<Source><![CDATA[
    private str get_POInfo(SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        VendInvoiceJour vendInvoiceJour;
        Container companyInfo;
        str PONum = '';

        companyInfo += _invSKS_EFT_FileDetail.InvoiceCompany;

        // See if PO exists
        if(conPeek(companyInfo, 1) != '')
        {
            select firstOnly crossCompany:companyInfo PurchId, InvoiceAccount, InvoiceDate, InvoiceId from vendInvoiceJour where
            vendInvoiceJour.InvoiceAccount == _invSKS_EFT_FileDetail.AccountNum &&
            vendInvoiceJour.InvoiceDate == _invSKS_EFT_FileDetail.InvoiceDate &&
            vendInvoiceJour.InvoiceId == _invSKS_EFT_FileDetail.InvoiceNumber &&
            vendInvoiceJour.PurchId != '';

            if(vendInvoiceJour)
            {
                PONum = vendInvoiceJour.PurchId;

            }
        }
        return PONum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_Ustrd</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf_Ustrd(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
        XmlElement  nodeRmtInf;
        str invDetailsString;
        str ustrdInfo;
        str keyword, Keyword_InvDetails;
        int i;
        str voCode, patron, lclPurpCode, economicCode, phoneNum, contactName;
        str mfoCode, agencyCode, taxId, entitytaxId, purposeCode;
        str purpCode, vat, vatStatus, indivtaxId, corptaxId;           //SKS_VSTS_13708
        boolean firstRec=true;
        container conKeyword;
        str cbu,cuit;
        VendBankAccount                 locVendBankAccount;
        str CentralbankCode;
        boolean alreadyPrintedRmtInf;
        str DebtorLEI, CreditorLEI;
        CreditorLEI = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CreditorLEI', mSKS_EFT_FileDetail.RecId));
        DebtorLEI = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DebtorLEI', mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookupBank));
        str InvDesc = this.getInvoiceDescDetails();

        msks_EFT_FileDetail_PaymentLine = sks_EFT_FileDetail_PaymentLine::find(mSKS_EFT_FileDetail.RecId);
        CentralbankCode = this.CharacterReplacement(msks_EFT_FileDetail_PaymentLine.BankCentralBankPurposeCode);
        purposeCode = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PurposeCode', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookup));

        select firstonly locVendBankAccount where locVendBankAccount.AccountID == mSKS_EFT_FileDetail.DepBankAccountId
            && locVendBankAccount.AccountNum == mSKS_EFT_FileDetail.DepBankAcct;//DevOps18902

        str customerID = SKS_PP_Setup::find().RegCustomerID;

        
        invDetailsString = this.getInvoiceDetails();

        ustrdInfo = msKS_EFT_FileDetail_Instructions.PmtInstText1;
            
        if(ustrdInfo != '')
        {
            ustrdInfo += ' ';
        }
            
        ustrdInfo += msKS_EFT_FileDetail_Instructions.PmtInstText2;
            
        if(ustrdInfo != '')
        {
            ustrdInfo += ' ';
        }
            
        ustrdInfo +=  msKS_EFT_FileDetail_Instructions.PmtInstText3;
            
        if(ustrdInfo != '')
        {
            ustrdInfo += ' ';
        }
            
        ustrdInfo += msKS_EFT_FileDetail_Instructions.PmtInstText4;
            
        if(ustrdInfo != '' && invDetailsString != '')
        {
            ustrdInfo += ' ';
        }
            
        ustrdInfo = subStr(this.CharacterReplacement(ustrdInfo), 1, 100) + invDetailsString;
        
        [keyword, Keyword_InvDetails, alreadyPrintedRmtInf]   = this.getCountrySpecificKeyword(_nodeCdtTrfTxInf, invDetailsString);


        purpCode = this.getBankPurposeText();//SKS_VSTS_13708

        this.getContactNmPhonByPurpose();       //SKS#DevOps:17662

        if(!alreadyPrintedRmtInf)
        {
            switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
            {
                case 'US-BOA-XML-KR': //DevOps18677
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:                       
                            if(firstRec)
                            {
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                firstRec =  false;
                            }
                            //              2.99: Ustrd
                            if(purpCode)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + purpCode);
                            }
                            if(contactPhone)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PHON:' + contactPhone);
                            }
                            if(contName)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CONT:' + contName);
                            }
                            
                            break;
                        default:
                            if(invDetailsString)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140);
                            }
                            break;

                    }
                    break;
                case 'US-BOA-XML':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #FED_WIRE:
                            if(ustrdInfo) //SKS_DevOps_16358
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ustrdInfo, 140, false);

                                if(customerID == '23eb04')//DevOps21419
                                {
                                    if(InvDesc)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', InvDesc, 80, false);
                                    }
                                }
                            }
                            break;
                        case #SWIFT_WIRE:
                        case #WIRE_FXP:
                            voCode = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('VOCODE', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookup));
                            cbu = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CBU', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookup));
                            cuit = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CUIT', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookup));


                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'RU')          //DevOps18902
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                //              2.99: Ustrd
                                if(this.getBankPurposeText() || purposeCode)    //SKS#DevOps:20100
                                {
                                    if(purposeCode)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + subStr(purposeCode,1,30));
                                    }
                                    else if(this.getBankPurposeText())
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + subStr(this.getBankPurposeText(),1,30));
                                    }                                    
                                }
                                if(taxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/INN:' + subStr(mSKS_EFT_FileDetail.VATNum, 1,12));
                                }
                                if(voCode)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/VO:' + subStr(voCode, 1,5));
                                }
                                if(customerID == '23eb04')//DevOps21419
                                {
                                    if(InvDesc)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', InvDesc, 140, false);
                                    }
                                }
                            }
                            else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' || this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ZA')
                            {
                          
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + subStr(this.getBankPurposeText(),1,30));
                                }
                                if(locVendBankAccount.Phone)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PHON:' + subStr(locVendBankAccount.Phone, 1,30));
                                }
                                else if(contactPhone)//DevOps21407
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PHON:' + contactPhone);

                                }
                                if(locVendBankAccount.ContactPerson)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CONT:' + subStr(locVendBankAccount.ContactPerson, 1,30));
                                }
                                else if(contName)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CONT:' + contName);

                                }
                                if(customerID == '23eb04')//DevOps21419
                                {
                                    if(InvDesc)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', InvDesc, 140, false);
                                    }
                                }
                          
                            }
                            else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US' )
                            {
                          
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + subStr(this.getBankPurposeText(),1,30));
                                }
                                if(locVendBankAccount.Phone)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PHON:' + subStr(locVendBankAccount.Phone, 1,30));
                                }
                                if(locVendBankAccount.ContactPerson)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CONT:' + subStr(locVendBankAccount.ContactPerson, 1,30));
                                }
                                if(cbu)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CBU:' + subStr(cbu, 1,12));
                                }
                                if(cuit)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CUIT:' + subStr(cuit, 1,12));
                                }
                                if(customerID == '23eb04')//DevOps21419
                                {
                                    if(InvDesc)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', InvDesc, 140, false);
                                    }
                                }
                          
                            }
                            else if(invDetailsString || purposeCode)  //SKS_DevOps_16358
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }
                                if(purposeCode)
                                {
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + purposeCode, 140, false);
                                }
                                for(i =0; i <= strLen(invDetailsString); i+= 30)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(invDetailsString, i+1, 30), 0, false);
                                }
                                if(customerID == '23eb04')//DevOps21419
                                {
                                    if(InvDesc)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', InvDesc, 140, false);
                                    }
                                }
                            }
                            break;
                        case #WIRE_FXS:                 //SKS#DevOPs:20100
                            if((invDetailsString || purposeCode) && firstRec)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                firstRec = false;
                        
                                if(purposeCode)
                                {
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + purposeCode, 140, false);
                                }
                                if(invDetailsString)  //SKS_DevOps_16358
                                {
                                    
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                                }
                            }
                            break;
                        case #SWIFT:
                            if(invDetailsString || keyword)
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    conKeyword = str2con(keyword, '/');
                                    if (conLen(conKeyword) > 1)
                                    {
                                        for(i =2; i <= conLen(conKeyword); i+= 1)
                                        {
                                            if(strContains(conPeek(conKeyword,i), 'POP'))
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(('/' + conPeek(conKeyword,i)), 1, 30), 30, false);
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(conPeek(conKeyword,i), 31, 30), 30, false);
                                            }
                                            else
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ('/' + conPeek(conKeyword,i)), 30, false);
                                            }
                                        }
                                    }
                                    if(invDetailsString)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', (subStr(invDetailsString, 1, 28) + '//'), 140);
                                    }
                                }
                            }
                            break;
                        default:
                            if(invDetailsString)  //SKS_DevOps_16358
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-AU':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                            if(invDetailsString || keyword)
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                    conKeyword = str2con(keyword, '/');
                                    if (conLen(conKeyword) > 1)
                                    {
                                        for(i =2; i <= conLen(conKeyword); i+= 1)
                                        {
                                            if(strContains(conPeek(conKeyword,i), 'POP'))
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(('/' + conPeek(conKeyword,i)), 1, 30), 30, false);
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(conPeek(conKeyword,i), 31, 30), 30, false);
                                            }
                                            else
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ('/' + conPeek(conKeyword,i)), 30, false);
                                            }
                                        }
                                    }
                                    if(invDetailsString)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', (subStr(invDetailsString, 1, 28) + '//'));

                                        if(customerID == '23eb04')
                                        {

                                            if(InvDesc)
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', InvDesc, 140, false);
                                            }
                                        }
                                    }
                                }
                            }
                            break;
                        case #PAYEFT:
                            if(purpCode)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                // 2.99: Ustrd
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + purpCode, 140, true);

                                if(customerID == '23eb04')
                                {
                                    if(InvDesc)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', InvDesc, 140, false);
                                    }
                                }
                            }
                            else
                            {
                                if(invDetailsString)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);

                                    if(customerID == '23eb04')
                                    {
                                        if(InvDesc)
                                        {
                                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', InvDesc, 140, false);
                                        }
                                    }
                                }
                            }
                            break;
                        default:
                            if(purpCode)//SKS_VSTS_13708
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                // 2.99: Ustrd
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + purpCode, 140, true);
                            }
                            else
                            {
                                if(invDetailsString)  //SKS_DevOps_16358
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-BR':           //SKS#DevOps:15428
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                            agencyCode = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('AgencyCode', mSKS_EFT_FileDetail.RecId));
                            phoneNum = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PhoneNumber', mSKS_EFT_FileDetail.RecId));
                            contactName = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ContactName', mSKS_EFT_FileDetail.RecId));
                            indivtaxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('IndividualTaxId', mSKS_EFT_FileDetail.RecId));
                            corptaxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CorporateTaxId', mSKS_EFT_FileDetail.RecId));

                            if(phoneNum =='')       //SKS#DevOps:17662
                            {
                                phoneNum = contactPhone;
                            }
                            if(contactName =='')
                            {
                                contactName = contName;
                            }
                            if(firstRec)
                            {
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                firstRec =  false;
                            }
                            //              2.99: Ustrd
                            if(this.getBankPurposeText())
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + subStr(this.getBankPurposeText(),1,30));
                            }
                            if(agencyCode && mSKS_EFT_FileDetail.DepBankIBAN == '') //SKS#DevOps:15760
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/AGCY:' + subStr(agencyCode, 1, 30));
                            }
                            if(phoneNum)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PHON:' + subStr(phoneNum,1,30));
                            }
                            if(contactName)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CONT:' + subStr(contactName,1,30));
                            }
                            if(indivtaxId)      //SKS#DevOps:17578
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CPF:' + subStr(indivtaxId, 1, 11), 16, true);
                            }
                            if(corptaxId)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CNPJ:' + subStr(corptaxId, 1, 14), 20,  true);
                            }
                            if(this.getInvoiceDetails())
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140, false);
                            }
                            break;
                        default:
                            if(invDetailsString)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-BY':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                            mfoCode = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('MFOCODE', mSKS_EFT_FileDetail.RecId));
                            taxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TAXID', mSKS_EFT_FileDetail.RecId)); //SKS#DevOps:15760

                            if(firstRec)
                            {
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                firstRec =  false;
                            }
                            //              2.99: Ustrd
                            if(this.getBankPurposeText())
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + subStr(this.getBankPurposeText(),1,30));
                            }
                            if(mfoCode)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/MFO:' + mfoCode, 9);
                            }
                            if(taxId)
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/TAX:' + subStr(taxId,1,9));      //SKS#DevOps:15760
                            }
                            if(this.getInvoiceDetails())
                            {
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140, false);
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-CA':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                            if(invDetailsString || keyword || purposeCode)
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                    conKeyword = str2con(keyword, '/');
                                    if(purposeCode)
                                    {
                                        // 2.99: Ustrd
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + purposeCode, 140, false);
                                    }
                                    else if (conLen(conKeyword) > 1)
                                    {
                                        for(i =2; i <= conLen(conKeyword); i+= 1)
                                        {
                                            if(strContains(conPeek(conKeyword,i), 'POP'))
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(('/' + conPeek(conKeyword,i)), 1, 30), 30, false);
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(conPeek(conKeyword,i), 31, 30), 30, false);
                                            }
                                            else
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ('/' + conPeek(conKeyword,i)), 30, false);
                                            }
                                        }
                                    }
                                    if(invDetailsString)
                                    {
                                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DK' || this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId) == 'DK')   //SKS#DevOps:20932
                                        {
                                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140);
                                        }
                                        else
                                        {
                                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', (subStr(invDetailsString, 1, 28) + '//'));
                                        }
                                    }
                                }
                            }
                            break;
                        default:
                            if(invDetailsString)  //SKS_DevOps_16358
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-CN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                            phoneNum = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PhoneNumber', mSKS_EFT_FileDetail.RecId));
                            contactName = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ContactName', mSKS_EFT_FileDetail.RecId));

                            if(phoneNum =='')       //SKS#DevOps:17662
                            {
                                phoneNum = contactPhone;
                            }
                            if(contactName =='')
                            {
                                contactName = contName;
                            }

                            if(mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNY'       &&
                              this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN')          //SKS#DevOps:15428
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }
                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + subStr(this.getBankPurposeText(),1,30));
                                }
                                if(phoneNum)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PHON:' + subStr(phoneNum,1,30));
                                }
                                if(contactName)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CONT:' + subStr(contactName,1,30));
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            else
                            {
                                if(invDetailsString || keyword)
                                {
                                    if(firstRec)
                                    {
                                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                        conKeyword = str2con(keyword, '/');
                                        if (conLen(conKeyword) > 1)
                                        {
                                            for(i =2; i <= conLen(conKeyword); i+= 1)
                                            {
                                                if(strContains(conPeek(conKeyword,i), 'POP'))
                                                {
                                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(('/' + conPeek(conKeyword,i)), 1, 30), 30, false);
                                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(conPeek(conKeyword,i), 31, 30), 30, false);
                                                }
                                                else
                                                {
                                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ('/' + conPeek(conKeyword,i)), 30, false);
                                                }
                                            }
                                        }
                                        if(invDetailsString)
                                        {
                                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', (subStr(invDetailsString, 1, 28) + '//'));
                                        }
                                    }
                                }
                            }
                            break;
                        case #SWIFT_CNY:            //SKS#DevOps:16330
                            phoneNum = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PhoneNumber', mSKS_EFT_FileDetail.RecId));
                            contactName = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ContactName', mSKS_EFT_FileDetail.RecId));

                            if(phoneNum || phoneNum || contactName || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + subStr(this.getBankPurposeText(),1,30));
                                }
                                if(phoneNum)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PHON:' + subStr(phoneNum,1,30));
                                }
                                if(contactName)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CONT:' + subStr(contactName,1,30));
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                        default:
                            if(invDetailsString)  //SKS_DevOps_16358
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                            
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-DE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                                }

                            }
                            else if(invDetailsString || keyword)
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                    conKeyword = str2con(keyword, '/');
                                    if (conLen(conKeyword) > 1)
                                    {
                                        for(i =2; i <= conLen(conKeyword); i+= 1)
                                        {
                                            if(strContains(conPeek(conKeyword,i), 'POP'))
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(('/' + conPeek(conKeyword,i)), 1, 30), 30, false);
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(conPeek(conKeyword,i), 31, 30), 30, false);
                                            }
                                            else
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ('/' + conPeek(conKeyword,i)), 30, false);
                                            }
                                        }
                                    }
                                    if(invDetailsString)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', (subStr(invDetailsString, 1, 28) + '//'));
                                    }
                                }
                            }
                            break;
                        case #PAYSCT:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                                }

                            }
                            else if(invDetailsString)  //SKS_DevOps_16358
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', strRem(invDetailsString, ' '), 18, false);
                            }
                            break;
                        default:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                                }

                            }
                            else if(purpCode)//SKS_VSTS_13708
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                // 2.99: Ustrd
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + purpCode, 140, true);
                            }
                            else
                            {
                                if(invDetailsString)  //SKS_DevOps_16358
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-ES':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                                }

                            }
                            else if(invDetailsString || keyword)
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                    conKeyword = str2con(keyword, '/');
                                    if (conLen(conKeyword) > 1)
                                    {
                                        for(i =2; i <= conLen(conKeyword); i+= 1)
                                        {
                                            if(strContains(conPeek(conKeyword,i), 'POP'))
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(('/' + conPeek(conKeyword,i)), 1, 30), 30, false);
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(conPeek(conKeyword,i), 31, 30), 30, false);
                                            }
                                            else
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ('/' + conPeek(conKeyword,i)), 30, false);
                                            }
                                        }
                                    }
                                    if(invDetailsString)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', (subStr(invDetailsString, 1, 28) + '//'));
                                    }
                                }
                            }
                            break;
                        case #PAYSCT:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                                }

                            }
                            else if(invDetailsString)  //SKS_DevOps_16358
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', strRem(invDetailsString, ' '), 18, false);
                            }
                            break;
                        default:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                                }

                            }
                            else if(purpCode)//SKS_VSTS_13708
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                // 2.99: Ustrd
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + purpCode, 140, true);
                            }
                            else
                            {
                                if(invDetailsString)  //SKS_DevOps_16358
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-FR':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                                }

                            }
                            else if(invDetailsString || keyword)
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                    conKeyword = str2con(keyword, '/');
                                    if (conLen(conKeyword) > 1)
                                    {
                                        for(i =2; i <= conLen(conKeyword); i+= 1)
                                        {
                                            if(strContains(conPeek(conKeyword,i), 'POP'))
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(('/' + conPeek(conKeyword,i)), 1, 30), 30, false);
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(conPeek(conKeyword,i), 31, 30), 30, false);
                                            }
                                            else
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ('/' + conPeek(conKeyword,i)), 30, false);
                                            }
                                        }
                                    }
                                    if(invDetailsString)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', (subStr(invDetailsString, 1, 28) + '//'));
                                    }
                                }
                            }
                            break;
                        case #PAYSCT:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                                }

                            }
                            else if(invDetailsString)  //SKS_DevOps_16358
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', strRem(invDetailsString, ' '), 18, false);
                            }
                            break;
                        case #CB_CAD:
                            if(invDetailsString)  //SKS_DevOps_16358
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                            }
                            break;
                        default:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                                }

                            }
                            else if(purpCode)//SKS_VSTS_13708
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                // 2.99: Ustrd
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + purpCode, 140, true);
                            }
                            else
                            {
                                if(invDetailsString)  //SKS_DevOps_16358
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-BE':       //SKS#DevOps:20316
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                            if(invDetailsString || keyword)
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                    conKeyword = str2con(keyword, '/');
                                    if (conLen(conKeyword) > 1)
                                    {
                                        for(i =2; i <= conLen(conKeyword); i+= 1)
                                        {
                                            if(strContains(conPeek(conKeyword,i), 'POP'))
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(('/' + conPeek(conKeyword,i)), 1, 30), 30, false);
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(conPeek(conKeyword,i), 31, 30), 30, false);
                                            }
                                            else
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ('/' + conPeek(conKeyword,i)), 30, false);
                                            }
                                        }
                                    }
                                    if(invDetailsString)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', (subStr(invDetailsString, 1, 28) + '//'));
                                    }
                                }
                            }
                            break;
                        case #PAYSCT:
                            if(invDetailsString)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', strRem(invDetailsString, ' '), 140, false);
                            }
                            break;
                        default:
                            if(purpCode)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                // 2.99: Ustrd
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + purpCode, 140, true);
                            }
                            else
                            {
                                if(invDetailsString)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-GR':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #FED_WIRE:
                            if(ustrdInfo)  //SKS_DevOps_16358
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ustrdInfo, 140, false);
                            }
                            break;
                        case #SWIFT:
                            if(invDetailsString || keyword)
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                    conKeyword = str2con(keyword, '/');
                                    if (conLen(conKeyword) > 1)
                                    {
                                        for(i =2; i <= conLen(conKeyword); i+= 1)
                                        {
                                            if(strContains(conPeek(conKeyword,i), 'POP'))
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(('/' + conPeek(conKeyword,i)), 1, 30), 30, false);
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(conPeek(conKeyword,i), 31, 30), 30, false);
                                            }
                                            else
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ('/' + conPeek(conKeyword,i)), 30, false);
                                            }
                                        }
                                    }
                                    if(invDetailsString)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', (subStr(invDetailsString, 1, 28) + '//'));
                                    }
                                }
                            }
                            break;
                        case #PAYSCT:
                            if(invDetailsString)  //SKS_DevOps_16358
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', strRem(invDetailsString, ' '), 18, false);
                            }
                            break;
                        default:
                            if(purpCode)//SKS_VSTS_13708
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                // 2.99: Ustrd
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + purpCode, 140, true);
                            }
                            else
                            {
                                if(invDetailsString)  //SKS_DevOps_16358
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-HK':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                            if(invDetailsString || keyword)
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                    conKeyword = str2con(keyword, '/');
                                    if (conLen(conKeyword) > 1)
                                    {
                                        for(i =2; i <= conLen(conKeyword); i+= 1)
                                        {
                                            if(strContains(conPeek(conKeyword,i), 'POP'))
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(('/' + conPeek(conKeyword,i)), 1, 30), 30, false);
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(conPeek(conKeyword,i), 31, 30), 30, false);
                                            }
                                            else
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ('/' + conPeek(conKeyword,i)), 30, false);
                                            }
                                        }
                                    }
                                    if(invDetailsString)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', (subStr(invDetailsString, 1, 28) + '//'));

                                        if(customerID == '23eb04')
                                        {
                                            if(InvDesc)
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', InvDesc, 140, false);
                                            }
                                        }
                                    }
                                }
                            }
                            break;
                        case #HK_CNY_CAP:  //SKS_DevOps_15305 -->
                        case #HK_CNY_TR:
                        case #HK_CNY_CA:
                        case #HK_CNY_OTR:
                        case #HK_CNY_SER:
                        case #HK_FEDWIRE:
                            if(invDetailsString)  //SKS_DevOps_16358
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                            }
                            break;   //SKS_DevOps_15305 <--
                        case #PAYEFT:
                            if(purpCode)//SKS_VSTS_13935
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                // 2.99: Ustrd
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + purpCode, 140, true);

                                if(customerID == '23eb04')
                                {
                                    if(InvDesc)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', InvDesc, 140, false);
                                    }
                                }
                            }
                            else
                            {
                                if(invDetailsString)  //SKS_DevOps_16358
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                                }
                       
                                if(customerID == '23eb04')
                                {
                                    if(InvDesc)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', InvDesc, 140, false);
                                    }
                                }
                            }
                            break;
                        default:
                            if(purpCode)//SKS_VSTS_13935
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                // 2.99: Ustrd
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + purpCode, 140, true);
                            }
                            else
                            {
                                if(invDetailsString)  //SKS_DevOps_16358
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-HU':
                    if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                    {
                        if(CentralbankCode)
                        {
                            //          2.98: RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                            // 2.99: Ustrd
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                        }

                    }
                    else if(purpCode)//SKS_VSTS_13935
                    {
                        //          2.98: RmtInf
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                        // 2.99: Ustrd
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + purpCode, 140, true);
                    }
                    else
                    {
                        if(invDetailsString)  //SKS_DevOps_16358
                        {
                            //          2.98: RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                        }
                    }
                    break;
                case 'US-BOA-XML-IN':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                            boolean first =true;
                            if(DebtorLEI)//DevOps21027
                            {
                                if( first)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    first = false;
                                }

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd',DebtorLEI, 20, false);

                            }
                            if(CreditorLEI)
                            {
                                if( first)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    first = false;
                                }
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd',CreditorLEI, 20, false);

                            }

                            if(invDetailsString || keyword)
                            {
                                if(firstRec)
                                {
                                    if( first)
                                    {

                                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    }

                                    conKeyword = str2con(keyword, '/');
                                    if (conLen(conKeyword) > 1)
                                    {
                                        for(i =2; i <= conLen(conKeyword); i+= 1)
                                        {
                                            if(strContains(conPeek(conKeyword,i), 'POP'))
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(('/' + conPeek(conKeyword,i)), 1, 30), 30, false);
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(conPeek(conKeyword,i), 31, 30), 30, false);
                                            }
                                            else
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ('/' + conPeek(conKeyword,i)), 30, false);
                                            }
                                        }
                                    }
                                    if(invDetailsString)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', (subStr(invDetailsString, 1, 28) + '//'));
                                    }
                                }
                            }
                            break;
                        case #SWIFT_INR:        //SKS#DevOps:16330
                            if(invDetailsString || keyword)
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                    conKeyword = str2con(keyword, '/');
                                    if (conLen(conKeyword) > 1)
                                    {
                                        for(i =2; i <= conLen(conKeyword); i+= 1)
                                        {
                                            if(strContains(conPeek(conKeyword,i), 'POP'))
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(('/' + conPeek(conKeyword,i)), 1, 30), 30, false);
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(conPeek(conKeyword,i), 31, 30), 30, false);
                                            }
                                            else
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ('/' + conPeek(conKeyword,i)), 30, false);
                                            }
                                        }
                                    }
                                    if(invDetailsString)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', (subStr(invDetailsString, 1, 28) + '//'));
                                    }
                                }
                            }
                            break;
                        default:
                            if(DebtorLEI || CreditorLEI || invDetailsString)  //SKS_DevOps_16358
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                if(DebtorLEI)//DevOps21027
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd',DebtorLEI, 20, false);

                                }
                                if(CreditorLEI)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd',CreditorLEI, 20, false);

                                }
                                if(invDetailsString)  //SKS_DevOps_16358
                                {

                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-IL':           //SKS#DevOps:15428
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                            if(this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140, false);
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-IT':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #FED_WIRE:
                            if(ustrdInfo)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ustrdInfo, 140, false);
                            }
                            break;
                        case #SWIFT:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                                }

                            }
                            else if(invDetailsString || keyword)
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                    conKeyword = str2con(keyword, '/');
                                    if (conLen(conKeyword) > 1)
                                    {
                                        for(i =2; i <= conLen(conKeyword); i+= 1)
                                        {
                                            if(strContains(conPeek(conKeyword,i), 'POP'))
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(('/' + conPeek(conKeyword,i)), 1, 30), 30, false);
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(conPeek(conKeyword,i), 31, 30), 30, false);
                                            }
                                            else
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ('/' + conPeek(conKeyword,i)), 30, false);
                                            }
                                        }
                                    }
                                    if(invDetailsString)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', (subStr(invDetailsString, 1, 28) + '//'));
                                    }
                                }
                            }
                            break;
                        case #PAYSCT:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                                }

                            }
                            else if(invDetailsString)  //SKS_DevOps_16358
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', strRem(invDetailsString, ' '), 18, false);
                            }
                            break;
                        default:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                                }

                            }
                            else if(purpCode)//SKS_VSTS_13708
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                // 2.99: Ustrd
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + purpCode, 140, true);
                            }
                            else
                            {
                                if(invDetailsString)  //SKS_DevOps_16358
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-JM':           //SKS#DevOps:15428
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                            if(this.getBankPurposeText() || mSKS_EFT_FileDetail_BenBank.BenBankBranch || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }
                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/BBB:' + subStr(mSKS_EFT_FileDetail_BenBank.BenBankBranch, 1,5));
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140, false);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-JP':
                    if(Keyword_InvDetails)  //SKS_DevOps_16358
                    {
                        //          2.98: RmtInf
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', 'NNKNI' + Keyword_InvDetails, 140, false);//SKS_VSTS_13835, 17259
                    }
                    break;
                case 'US-BOA-XML-AZ':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_AZN:
                            taxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TAXID', mSKS_EFT_FileDetail.RecId));

                            if(taxId || this.getBankPurposeText() || mSKS_EFT_FileDetail_BenBank.BenBankBranch || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/BBB:' + mSKS_EFT_FileDetail_BenBank.BenBankBranch, 30);
                                }
                                if(taxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/VOEN:' + substr(taxId, 1, 10));
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-KE':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_KES:
                            if(this.getBankPurposeText() || mSKS_EFT_FileDetail_BenBank.BenBankBranch || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/BBB:' + mSKS_EFT_FileDetail_BenBank.BenBankBranch, 30);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-CR':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_CRC:
                            taxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TAXID', mSKS_EFT_FileDetail.RecId));

                            if(taxId || this.getBankPurposeText() || contactPhone || contName || taxId || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(contactPhone)          //SKS#DevOps:17662
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PHON:' + contactPhone, 0, true);
                                }
                                if(contName)              //SKS#DevOps:17662
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CONT:' + contName, 0, true);
                                }
                                if(taxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CED:' + taxId, 20);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-DO':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_DOP:                //SKS#DevOps:17578
                            entitytaxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('EntityTaxId', mSKS_EFT_FileDetail.RecId));
                            indivtaxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('IndividualTaxId', mSKS_EFT_FileDetail.RecId));        //SKS#DevOps:17578

                            if(entitytaxId || indivtaxId || this.getBankPurposeText() || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(entitytaxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/RNC:' + subStr(entitytaxId, 1, 9), 14, true);
                                }
                                if(indivtaxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CED:' + subStr(indivtaxId, 1, 11), 16, true);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-ARG':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_ARS:
                            indivtaxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('IndividualTaxId', mSKS_EFT_FileDetail.RecId));        //SKS#DevOps:17578
                            corptaxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CorporateTaxId', mSKS_EFT_FileDetail.RecId));

                            if(corptaxId || indivtaxId || this.getBankPurposeText() || contactPhone || contName || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(contactPhone)          //SKS#DevOps:17662
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PHON:' + contactPhone, 0, true);
                                }
                                if(contName)              //SKS#DevOps:17662
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CONT:' + contName, 0, true);
                                }
                                if(indivtaxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CUIL:' + subStr(indivtaxId, 1, 9), 15, true);        //SKS#DevOps:17578
                                }
                                if(corptaxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CUIT:' + subStr(corptaxId, 1, 12), 18, true);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-PE':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_PEN:
                            indivtaxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('IndividualTaxId', mSKS_EFT_FileDetail.RecId));
                            corptaxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CorporateTaxId', mSKS_EFT_FileDetail.RecId));

                            if(corptaxId || indivtaxId || this.getBankPurposeText() || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }
                            
                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(indivtaxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/DNI:' + subStr(indivtaxId, 1, 8), 0, true);
                                }
                                if(corptaxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/RUC:' + subStr(corptaxId, 1, 8), 0, true);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-GT':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_GTQ:
                            indivtaxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('IndividualTaxId', mSKS_EFT_FileDetail.RecId));
                            corptaxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CorporateTaxId', mSKS_EFT_FileDetail.RecId));

                            if(corptaxId || indivtaxId || this.getBankPurposeText() || contactPhone || contName || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(contactPhone)          //SKS#DevOps:17662
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PHON:' + contactPhone, 0, true);
                                }
                                if(contName)              //SKS#DevOps:17662
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CONT:' + contName, 0, true);
                                }
                                if(corptaxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/NIT:' + subStr(corptaxId, 1, 11), 0, true);
                                }
                                if(indivtaxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/DPI:' + subStr(indivtaxId, 1, 13), 0, true);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-CO':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_COP:
                            indivtaxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('IndividualTaxId', mSKS_EFT_FileDetail.RecId));
                            corptaxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CorporateTaxId', mSKS_EFT_FileDetail.RecId));

                            if(corptaxId || indivtaxId || this.getBankPurposeText() || contactPhone || contName || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(contactPhone)          //SKS#DevOps:17662
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PHON:' + contactPhone, 0, true);
                                }
                                if(contName)              //SKS#DevOps:17662
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CONT:' + contName, 0, true);
                                }
                                if(corptaxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/NIT:' + subStr(corptaxId, 1, 10), 0, true);
                                }
                                if(indivtaxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CED:' + subStr(indivtaxId, 1, 11), 0, true);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-UY':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_UYU:
                            indivtaxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('IndividualTaxId', mSKS_EFT_FileDetail.RecId));
                            corptaxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CorporateTaxId', mSKS_EFT_FileDetail.RecId));

                            if(corptaxId || indivtaxId || this.getBankPurposeText() || mSKS_EFT_FileDetail_BenBank.BenBankBranch || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/BBB:' + mSKS_EFT_FileDetail_BenBank.BenBankBranch, 30);
                                }
                                if(indivtaxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/RUC:' + subStr(indivtaxId, 1, 12), 0, true);
                                }
                                if(corptaxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CI:' + subStr(corptaxId, 1, 8), 0, true);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-PY':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_PYG:
                            indivtaxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('IndividualTaxId', mSKS_EFT_FileDetail.RecId));
                            corptaxId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CorporateTaxId', mSKS_EFT_FileDetail.RecId));

                            if(corptaxId || indivtaxId || this.getBankPurposeText() || mSKS_EFT_FileDetail_BenBank.BenBankBranch || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/BBB:' + mSKS_EFT_FileDetail_BenBank.BenBankBranch, 30);
                                }
                                if(indivtaxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/RUC:' + subStr(indivtaxId, 1, 12), 0, true);
                                }
                                if(corptaxId)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CI:' + subStr(corptaxId, 1, 8), 0, true);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-YE':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_YER:
                            if(this.getBankPurposeText() || mSKS_EFT_FileDetail_BenBank.BenBankBranch || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/BBB:' + mSKS_EFT_FileDetail_BenBank.BenBankBranch, 30);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-EG':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_EGP:
                            if(this.getBankPurposeText() || contactPhone || contName || mSKS_EFT_FileDetail_BenBank.BenBankBranch || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(contactPhone)          //SKS#DevOps:17662
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PHON:' + contactPhone, 0, true);
                                }
                                if(contName)              //SKS#DevOps:17662
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CONT:' + contName, 0, true);
                                }
                                if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/BBB:' + mSKS_EFT_FileDetail_BenBank.BenBankBranch, 30);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-ER':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_ERN:
                            if(this.getBankPurposeText() || mSKS_EFT_FileDetail_BenBank.BenBankBranch || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/BBB:' + mSKS_EFT_FileDetail_BenBank.BenBankBranch, 30);
                                }
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }

                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-ET':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_ETB:
                            if(this.getBankPurposeText() || contactPhone || contName || mSKS_EFT_FileDetail_BenBank.BenBankBranch || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(contactPhone)          //SKS#DevOps:17662
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PHON:' + contactPhone, 0, true);
                                }
                                if(contName)              //SKS#DevOps:17662
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CONT:' + contName, 0, true);
                                }
                                if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/BBB:' + mSKS_EFT_FileDetail_BenBank.BenBankBranch, 30);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-RW':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_RWF:
                            if(this.getBankPurposeText() || mSKS_EFT_FileDetail_BenBank.BenBankBranch || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/BBB:' + mSKS_EFT_FileDetail_BenBank.BenBankBranch, 30);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-MV':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_MVR:
                            if(this.getBankPurposeText() || mSKS_EFT_FileDetail_BenBank.BenBankBranch || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/BBB:' + mSKS_EFT_FileDetail_BenBank.BenBankBranch, 30);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-NP':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_NPR:
                            if(this.getBankPurposeText() || mSKS_EFT_FileDetail_BenBank.BenBankBranch || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/BBB:' + mSKS_EFT_FileDetail_BenBank.BenBankBranch, 30);
                                }
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-UZ':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_UZS:
                            if(this.getBankPurposeText() || mSKS_EFT_FileDetail_BenBank.BenBankBranch || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/BBB:' + mSKS_EFT_FileDetail_BenBank.BenBankBranch, 30);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-TZ':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_TZS:
                            if(this.getBankPurposeText() || mSKS_EFT_FileDetail_BenBank.BenBankBranch || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/BBB:' + mSKS_EFT_FileDetail_BenBank.BenBankBranch, 30);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-VN':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_VND:
                            if(this.getBankPurposeText() || mSKS_EFT_FileDetail_BenBank.BenBankBranch || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }
                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/BBB:' + mSKS_EFT_FileDetail_BenBank.BenBankBranch, 30);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-ZM':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_ZMW:
                            if(this.getBankPurposeText() || mSKS_EFT_FileDetail_BenBank.BenBankBranch || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/BBB:' + mSKS_EFT_FileDetail_BenBank.BenBankBranch, 30);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-MM':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_MMK:
                            if(this.getBankPurposeText() || mSKS_EFT_FileDetail_BenBank.BenBankBranch || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/BBB:' + mSKS_EFT_FileDetail_BenBank.BenBankBranch, 30);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-KM':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_KMF:
                            if(this.getBankPurposeText() || mSKS_EFT_FileDetail_BenBank.BenBankBranch || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/BBB:' + subStr(mSKS_EFT_FileDetail_BenBank.BenBankBranch, 1,5));
                                }
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }

                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-SL':           //SKS#DevOps:17132
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT_SLL:
                            if(this.getBankPurposeText() || mSKS_EFT_FileDetail_BenBank.BenBankBranch || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + this.getBankPurposeText(), 30, true);
                                }
                                if(mSKS_EFT_FileDetail_BenBank.BenBankBranch)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/BBB:' + mSKS_EFT_FileDetail_BenBank.BenBankBranch, 30);
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-KZ':       //SKS#DevOps:15428
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                            vat = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('VAT', mSKS_EFT_FileDetail.RecId));       //SKS#DevOps:15760
                            lclPurpCode = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('LocalPurpCode', mSKS_EFT_FileDetail.RecId));
                            economicCode = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('EconomicCode', mSKS_EFT_FileDetail.RecId));

                            if(this.getBankPurposeText() || vat || lclPurpCode || economicCode || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + subStr(this.getBankPurposeText(),1,30));
                                }
                                if(vat)     //SKS#DevOps:15760
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/TRN:' + subStr(vat,1,12));
                                }
                                if(lclPurpCode)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/KNP:' + subStr(lclPurpCode,1,3));
                                }
                                if(economicCode)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/KBE:' + subStr(economicCode,1, 2));
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-MX':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                            if(invDetailsString || keyword)
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                    conKeyword = str2con(keyword, '/');
                                    if (conLen(conKeyword) > 1)
                                    {
                                        for(i =2; i <= conLen(conKeyword); i+= 1)
                                        {
                                            if(strContains(conPeek(conKeyword,i), 'POP'))
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(('/' + conPeek(conKeyword,i)), 1, 30), 30, false);
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(conPeek(conKeyword,i), 31, 30), 30, false);
                                            }
                                            else
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ('/' + conPeek(conKeyword,i)), 30, false);
                                            }
                                        }
                                    }
                                    if(invDetailsString)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', (subStr(invDetailsString, 1, 28) + '//'));
                                    }
                                }
                            }
                            break;
                        default:
                            if(invDetailsString)  //SKS_DevOps_16358
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140);
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-MY':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #PAYACH:
                            if(invDetailsString)  //SKS_DevOps_16358
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 20);
                            }
                            break;
                        default:
                            if(invDetailsString)  //SKS_DevOps_16358
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140);
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-NL':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                                }

                            }
                            else if(invDetailsString || keyword)
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                    conKeyword = str2con(keyword, '/');
                                    if (conLen(conKeyword) > 1)
                                    {
                                        for(i =2; i <= conLen(conKeyword); i+= 1)
                                        {
                                            if(strContains(conPeek(conKeyword,i), 'POP'))
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(('/' + conPeek(conKeyword,i)), 1, 30), 30, false);
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(conPeek(conKeyword,i), 31, 30), 30, false);
                                            }
                                            else
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ('/' + conPeek(conKeyword,i)), 30, false);
                                            }
                                        }
                                    }
                                    if(invDetailsString)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', (subStr(invDetailsString, 1, 28) + '//'), 140);
                                    }
                                }
                            }
                            break;
                        case #PAYSCT:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                                }

                            }
                            else if(invDetailsString)  //SKS_DevOps_16358
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', strRem(invDetailsString, ' '), 18);
                            }
                            break;
                        default:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                                }

                            }
                            else if(purpCode)//SKS_VSTS_13708
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                // 2.99: Ustrd
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + purpCode, 140, true);
                            }
                            else
                            {
                                if(invDetailsString)  //SKS_DevOps_16358
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-RU':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                            vat = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('VAT', mSKS_EFT_FileDetail.RecId));       //SKS#DevOps:15760
                            vatStatus = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('VATStatus', mSKS_EFT_FileDetail.RecId)); //SKS#DevOps:15760
                            voCode = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('VOCODE', mSKS_EFT_FileDetail.RecId));
                            patron = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PATRON', mSKS_EFT_FileDetail.RecId));

                            if(this.getBankPurposeText() || vat || voCode || vatStatus || patron || this.getInvoiceDetails())
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                //              2.99: Ustrd
                                if(this.getBankPurposeText())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + subStr(this.getBankPurposeText(), 1, 30));
                                }
                                if(vat)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/INN:' + subStr(vat, 1,12));
                                }
                                if(voCode)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/VO:' + subStr(voCode, 1,30));
                                }
                                if(vatStatus)           //SKS#DevOps:15760
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/VAT:' + subStr(vatStatus, 1,3));
                                }
                                if(patron)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PATRON:' + subStr(patron,1,30));
                                }
                                if(this.getInvoiceDetails())
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.getInvoiceDetails(), 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-SE':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                                }

                            }
                            else if(invDetailsString || keyword)
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                    conKeyword = str2con(keyword, '/');
                                    if (conLen(conKeyword) > 1)
                                    {
                                        for(i =2; i <= conLen(conKeyword); i+= 1)
                                        {
                                            if(strContains(conPeek(conKeyword,i), 'POP'))
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(('/' + conPeek(conKeyword,i)), 1, 30), 30, false);
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(conPeek(conKeyword,i), 31, 30), 30, false);
                                            }
                                            else
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ('/' + conPeek(conKeyword,i)), 30, false);
                                            }
                                        }
                                    }
                                    if(invDetailsString)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', (subStr(invDetailsString, 1, 28) + '//'));
                                    }
                                }
                            }
                            break;
                        default:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                                }

                            }
                            else if(purpCode)//SKS_VSTS_13708
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                // 2.99: Ustrd
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + purpCode, 140, true);
                            }
                            else
                            {
                                if(invDetailsString)  //SKS_DevOps_16358
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140);
                                }
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-SG':
                    if(purpCode)//SKS_VSTS_13935
                    {
                        //          2.98: RmtInf
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                        // 2.99: Ustrd
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + purpCode, 140, true);
                    }
                    else
                    {
                        if(invDetailsString)  //SKS_DevOps_16358
                        {
                            //          2.98: RmtInf
                            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140);
                        }
                    }
                    break;
                case 'US-BOA-XML-TW':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                            if(invDetailsString || keyword)
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                    conKeyword = str2con(keyword, '/');
                                    if (conLen(conKeyword) > 1)
                                    {
                                        for(i =2; i <= conLen(conKeyword); i+= 1)
                                        {
                                            if(strContains(conPeek(conKeyword,i), 'POP'))
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(('/' + conPeek(conKeyword,i)), 1, 30), 30, false);
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', substr(conPeek(conKeyword,i), 31, 30), 30, false);
                                            }
                                            else
                                            {
                                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ('/' + conPeek(conKeyword,i)), 30, false);
                                            }
                                        }
                                    }
                                    if(invDetailsString)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', (subStr(invDetailsString, 1, 28) + '//'));
                                    }
                                }
                            }
                            break;
                        default:
                            if(invDetailsString)  //SKS_DevOps_16358
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140);
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-UK':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #FED_WIRE:
                            if(ustrdInfo)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', ustrdInfo, 140);
                            }
                            break;
                        case #PAYFPS:
                        case #PAYSCT:       //SKS#DevOps:16941
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                                }

                            }
                            else if(Keyword_InvDetails || msKS_EFT_FileDetail_Instructions.PmtInstText1 || msKS_EFT_FileDetail_Instructions.PmtInstText2 ||
                               msKS_EFT_FileDetail_Instructions.PmtInstText3 || msKS_EFT_FileDetail_Instructions.PmtInstText4)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));

                                invDetailsString = subStr(strRem(Keyword_InvDetails, ' '),1, 18);

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString + msKS_EFT_FileDetail_Instructions.PmtInstText1+' '+msKS_EFT_FileDetail_Instructions.PmtInstText2+' '+msKS_EFT_FileDetail_Instructions.PmtInstText3+' '+msKS_EFT_FileDetail_Instructions.PmtInstText4);

                            }
                            break;
                        case #PAYACH:
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);
                                }

                            }
                            else if(invDetailsString || msKS_EFT_FileDetail_Instructions.PmtInstText1 || msKS_EFT_FileDetail_Instructions.PmtInstText2 ||
                                msKS_EFT_FileDetail_Instructions.PmtInstText3 || msKS_EFT_FileDetail_Instructions.PmtInstText4)
                            {
                                invDetailsString = subStr(invDetailsString,1, 140);

                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString + msKS_EFT_FileDetail_Instructions.PmtInstText1+' '+msKS_EFT_FileDetail_Instructions.PmtInstText2+' '+msKS_EFT_FileDetail_Instructions.PmtInstText3+' '+msKS_EFT_FileDetail_Instructions.PmtInstText4, 140);

                            }
                            break;
                        case #SWIFT:
                        case #PAYEFT:       //SKS#DevOps:16941
                            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AE')//DevOps19429
                            {
                                if(CentralbankCode)
                                {
                                    //          2.98: RmtInf
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                           
                                    // 2.99: Ustrd
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + CentralbankCode, 140, false);

                                    if(customerID == '23eb04')
                                    {

                                        if(InvDesc)
                                        {
                                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', InvDesc, 140, false);
                                        }
                                    }
                                }

                            }
                            else if(invDetailsString || msKS_EFT_FileDetail_Instructions.PmtInstText1 || msKS_EFT_FileDetail_Instructions.PmtInstText2 ||
                                msKS_EFT_FileDetail_Instructions.PmtInstText3 || msKS_EFT_FileDetail_Instructions.PmtInstText4)
                            {
                                invDetailsString = subStr(invDetailsString,1, 140);

                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }

                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString + msKS_EFT_FileDetail_Instructions.PmtInstText1+' '+msKS_EFT_FileDetail_Instructions.PmtInstText2+' '+msKS_EFT_FileDetail_Instructions.PmtInstText3+' '+msKS_EFT_FileDetail_Instructions.PmtInstText4, 140);

                                if(customerID == '23eb04')
                                {

                                    if(InvDesc)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', InvDesc, 140, false);
                                    }
                                }
                            }
                            break;
                        default:
                            if(invDetailsString)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140);
                            }
                            break;
                    }
                    break;
                case 'US-BOA-XML-LU':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #SWIFT:
                        case #PAYEFT:
                            if(invDetailsString)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140);

                                if(customerID == '23eb04')
                                {
                                    if(InvDesc)
                                    {
                                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', InvDesc, 140, false);
                                    }
                                }
                            }
                            break;
                        default:
                            if(invDetailsString)
                            {
                                //          2.98: RmtInf
                                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140);
                            }
                            break;
                    }
                    break;
                default:
                    if(Keyword_InvDetails)
                    {
                        //          2.98: RmtInf
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', Keyword_InvDetails, 140);
                    }
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCountrySpecificKeyword</Name>
				<Source><![CDATA[
    [SuppressBPWarningAttribute("BPCheckNestedLoopinCode","Necessary to allow the processing of every invoice(inner loop) for every relevant parent file detail record(outer loop)")]
    private container getCountrySpecificKeyword(XmlElement _nodeCdtTrfTxInf, str _invDetailsString)
    {
        str keyword;
        str benType;
        str cuit, cuil, tax, cpf, cnpj, rut, run, nit, ced, ruc, dni, rif;
        VendTable   lVendTable;
        DirPartyLocation                dirPartyLocation;
        LogisticsElectronicAddress      lLogisticsElectronicAddress;
        LogisticsElectronicAddressRole  lLogisticsElectronicAddressRole;
        LogisticsLocationRole           lLogisticsLocationRole;
        XmlElement                      nodeRmtInf;
        str Keyword_InvDetails;
        boolean firstRec=true;
        str invDetailsString = _invDetailsString;
        boolean printedRmtInf;
        
        lVendTable = VendTable::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum);

        if((this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DK' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId) == 'DK') &&
            mSKS_EFT_FileFormatPaymSpec.FormatId == 'US-BOA-XML-CA' &&
            mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SWIFT)      //SKS#DevOps:20932
        {
            if(firstRec)
            {
                nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                firstRec =  false;
            }
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);

            printedRmtInf = true;
        }
        else if((this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IN' ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TW')&&
            (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SWIFT ||
             mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SWIFT_WIRE))
        {
            if((mSKS_EFT_FileDetail.PaymentCurrencyCode != 'CNH' &&
                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'CN') &&
                (mSKS_EFT_FileDetail.PaymentCurrencyCode != 'CAD' &&
                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'CA'))
            {
                if(this.getBankPurposeText())
                {
                    if(firstRec)
                    {
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                        firstRec =  false;
                    }
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + subStr(this.getBankPurposeText(), 1, 25));

                    if(strLen(this.getBankPurposeText()) > 30)
                    {
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(this.getBankPurposeText(), 31, 30), 30, false);
                    }
                }
                if(invDetailsString)
                {
                    if(firstRec)
                    {
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                        firstRec =  false;
                    }

                    invDetailsString = invDetailsString + '//';
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                }

                if(firstRec == false)
                {
                    printedRmtInf = true;
                }
            }
        }
        else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ID'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ZA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TH'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AF'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AL'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AW'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BB'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BD'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BI'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BS'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BT'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CD'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CL'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CV'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DJ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'EG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ER'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ET'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'FK'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GI'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GT'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'HT'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IL'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'IQ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'JO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KH'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LB'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MD'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MK'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MU'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MV'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NI'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NP'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'RS'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'RW'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SC'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SL'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SR'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ST'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TJ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TO'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TT'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'US'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UY'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UZ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CF'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GA'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GQ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TD'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AI'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DM'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GD'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LC'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MS'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VC'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BF'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BJ'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CI'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GW'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ML'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SN'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TG'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'YE'  ||
            this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA')
        {
            if((mSKS_EFT_FileDetail.PaymentCurrencyCode != 'CNH' &&
                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'CN') &&
               (mSKS_EFT_FileDetail.PaymentCurrencyCode != 'CAD' &&
                this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) != 'CA'))
            {
                if(this.getBankPurposeText())
                {
                    keyword = '/POP:' + this.getBankPurposeText();
                }
            }
            else if((mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNY' &&
                     this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN') ||
                    (mSKS_EFT_FileDetail.PaymentCurrencyCode == 'USD' &&
                     this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CA'))
            {
                if(this.getBankPurposeText())
                {
                    if(firstRec)
                    {
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                        firstRec =  false;
                    }
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/POP:' + subStr(this.getBankPurposeText(), 1, 25), 30, false);

                    if(strLen(this.getBankPurposeText()) > 30)
                    {
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', subStr(this.getBankPurposeText(), 31, 30), 30, false);
                    }
                }
                if(invDetailsString)
                {
                    if(firstRec)
                    {
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                        firstRec =  false;
                    }

                    invDetailsString = invDetailsString + '//';
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                }

                if(firstRec == false)
                {
                    printedRmtInf = true;
                }
            }
            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN')
            {
                lVendTable = VendTable::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum);

                while select DirPartyLocation where dirPartyLocation.party == lVendTable.Party
                {
                    while select lLogisticsElectronicAddress where lLogisticsElectronicAddress.Location == dirPartyLocation.Location
                    {
                        while select lLogisticsElectronicAddressRole where lLogisticsElectronicAddressRole.ElectronicAddress == lLogisticsElectronicAddress.RecId
                            join lLogisticsLocationRole
                                 where lLogisticsLocationRole.RecId == lLogisticsElectronicAddressRole.LocationRole && lLogisticsLocationRole.Name == 'SKGPaymentContact'
                        {
                            if(LogisticsElectronicAddressMethodType::Phone)
                            {
                                if(firstRec)
                                {
                                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                                    firstRec =  false;
                                }
                                if(lLogisticsElectronicAddress.Locator)
                                {
                                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/PHON:' + subStr(lLogisticsElectronicAddress.Locator, 1, 30), 30, false);
                                }
                            }
                            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/CONT:' + subStr(lLogisticsElectronicAddress.Description, 1, 30), 30, false);
                        }
                    }
                }
                if(invDetailsString)
                {
                    if(firstRec)
                    {
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                        firstRec =  false;
                    }

                    invDetailsString = invDetailsString + '//';
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                }

                if(firstRec == false)
                {
                    printedRmtInf = true;
                }
            }
            else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ZA' ||
                   this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AR' ||
                   this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BR' ||
                   this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CL' ||
                   this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CO' ||
                   this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CR' ||
                   this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'DZ' ||
                   this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'EG' ||
                   this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ET' ||
                   this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GT' ||
                   this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MK' ||
                   this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PY' ||
                   this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UY' ||
                   this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VE')
            {
                while select Location from DirPartyLocation where dirPartyLocation.party == lVendTable.Party
                    join lLogisticsElectronicAddress where lLogisticsElectronicAddress.Location == dirPartyLocation.Location
                        join LocationRole from lLogisticsElectronicAddressRole where lLogisticsElectronicAddressRole.ElectronicAddress == lLogisticsElectronicAddress.RecId
                            join Name from lLogisticsLocationRole
                                where lLogisticsLocationRole.RecId == lLogisticsElectronicAddressRole.LocationRole && lLogisticsLocationRole.Name == 'SKGPaymentContact'
                {
                    if(LogisticsElectronicAddressMethodType::Phone)
                    {
                        if(lLogisticsElectronicAddress.Locator)
                        {
                            keyword += '/PHON:' + subStr(lLogisticsElectronicAddress.Locator, 1, 30);
                        }
                    }

                    keyword += '/CONT:' + subStr(lLogisticsElectronicAddress.Description, 1, 30);
                }
            }

            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CN' && mSKS_EFT_FileDetail.PaymentCurrencyCode == 'CNY')
            {
                if(benType)
                {
                    if(firstRec)
                    {
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                        firstRec =  false;
                    }
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', '/IND:' + benType, 30, false);
                }
                if(invDetailsString)
                {
                    if(firstRec)
                    {
                        nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                        firstRec =  false;
                    }

                    invDetailsString = invDetailsString + '//';
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invDetailsString, 140, false);
                }

                if(firstRec == false)
                {
                    printedRmtInf = true;
                }
            }

            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AZ')
            {
                tax = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TAX', mSKS_EFT_FileDetail.RecId));

                if(tax)
                {
                    keyword += '/TAX:' + tax;
                }
            }

            if(mSKS_EFT_FileDetail_BenBank.BenBankBranch &&
              (this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VN' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AZ' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BD' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'EG' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ER' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'ET' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KE' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KG' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'KM' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LA' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'LY' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MM' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MN' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'MV' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'NP' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PY' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'RW' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SC' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'SL' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'TZ' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UA' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UY' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UZ' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'YE'))
            {
                keyword += '/BBB:' + subStr(mSKS_EFT_FileDetail_BenBank.BenBankBranch, 1, 30);
            }

            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'AR')
            {
                cuit = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CUIT', mSKS_EFT_FileDetail.RecId));
                if(cuit)
                {
                    keyword += '/CUIT:' + cuit;
                }

                cuil = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CUIL', mSKS_EFT_FileDetail.RecId));

                if(cuil)
                {
                    keyword += '/CUIL:' + cuil;
                }
            }

            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'BR')
            {
                cpf = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CPF', mSKS_EFT_FileDetail.RecId));

                if(cpf)
                {
                    keyword += '/CPF:' + cpf;
                }

                cnpj = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CNPJ', mSKS_EFT_FileDetail.RecId));

                if(cnpj)
                {
                    keyword += '/CNPJ:' + cnpj ;
                }
            }

            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CL')
            {
                rut = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RUT', mSKS_EFT_FileDetail.RecId));

                if(rut)
                {
                    keyword += '/RUT:' + rut;
                }

                run = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RUN', mSKS_EFT_FileDetail.RecId));

                if(run)
                {
                    keyword += '/RUN:' + run ;
                }
            }

            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CO' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CR' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GT')
            {
                nit = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('NIT', mSKS_EFT_FileDetail.RecId));

                if(nit)
                {
                    if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'GT')
                    {
                        keyword += '/NIT:' + subStr(nit, 1, 8);
                    }
                    else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CO')
                    {
                        keyword += '/NIT:' + nit;
                    }
                }

                if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CO' ||
                    this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CR')
                {
                    ced = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CED', mSKS_EFT_FileDetail.RecId));

                    if(ced)
                    {
                        if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'CR')
                        {
                            keyword += '/CED:' + subStr(ced, 1, 10);
                        }
                        else
                        {
                            keyword += '/CED:' + ced;
                        }
                    }
                }
            }

            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PE' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PY' ||
               this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'UY')
            {
                ruc = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RUC', mSKS_EFT_FileDetail.RecId));

                if(ruc)
                {
                    if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PE')
                    {
                        keyword += '/RUC:' + subStr(ruc, 1, 11);
                    }
                    else if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PY')
                    {
                        keyword += '/RUC:' + subStr(ruc, 1, 9);
                    }
                    else
                    {
                        keyword += '/RUC:' + ruc;
                    }
                }

                if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'PE')
                {
                    dni = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DNI', mSKS_EFT_FileDetail.RecId));

                    if(dni)
                    {
                        keyword += '/DNI:' + dni ;
                    }
                }
            }

            if(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId) == 'VE')
            {
                rif = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RIF', mSKS_EFT_FileDetail.RecId));

                if(rif)
                {
                    keyword += '/RIF:' + rif ;
                }
            }
        }
        if(keyword)
        {
            Keyword_InvDetails = keyword + ' ' + invDetailsString + '//';
        }
        else
        {
            Keyword_InvDetails = invDetailsString;
        }
        return [keyword, Keyword_InvDetails, printedRmtInf];
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_Id</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty_Id(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          9.1.12: Id
        //              9.1.13: OrgId
        //                  9.1.15: Othr
        //                      9.1.1.16: Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOther;
        XmlElement nodeSchmeNm;
        str         initgPtyId;
        
        this.getSKS_EFT_FileFormatPaymSpec();
        initgPtyId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InitgPtyId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));

        if(initgPtyId)     //SKS#DevOps:15760
        {
            //          9.1.12: Id
            nodeId = _nodeInitgPty.appendChild(xmlDoc.createElement('Id'));
    
            //              9.1.13: OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            //                  9.1.15: Other
            nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
            //                      9.1.1.16: Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', initgPtyId, 35);
            
    
            //                      9.1.17: SchmeNm
            nodeSchmeNm = nodeOther.appendChild(xmlDoc.createElement('SchmeNm'));
    
            //                          9.1.18: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', 'CUST');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_Id(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.79: Cdtr
        //          Id
        //              OrgId
        //                  Othr
        //                      Id
        //                      SchemeName
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeId;
        XmlElement nodeOrgPvtId;
        XmlElement nodeOthr;
        XmlElement nodeSchmeNm;
        str        id, schmeNm;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK:
                    case #EPAY:
                        id      =   msks_EFT_FileDetail.AccountNum;
                        schmeNm =   'CUST';
                        break;
                }
                break;
            case 'US-BOA-XML-ID':
                id = subStr(this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PATID', mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookup)), 1, 35);
                schmeNm =   this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CdtrSchmeNm', mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookup));

                break;
            case 'US-BOA-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK:
                        id      =   msks_EFT_FileDetail.AccountNum;
                        schmeNm =   'CUST';
                        break;
                }
                break;
            case 'US-BOA-XML-PL':
                id = subStr(this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CreditorId', mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookup)), 1, 35);
                schmeNm =   this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CdtrSchmeNm', mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookup));
                if(id =='')
                {
                    id= msks_EFT_FileDetail.AccountNum;
                }
                break;
            case 'US-BOA-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYACH:
                    case #PAYEFT:
                        id = subStr(this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PATID', mSKS_EFT_FileDetail.RecId)), 1, 16);
                        break;
                }
                break;
            case 'US-BOA-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYACH:
                        id = subStr(this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PATID', mSKS_EFT_FileDetail.RecId)), 1, 16);
                        break;
                }
                break;
            case 'US-BOA-XML-TW':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                        id = subStr(this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PATID', mSKS_EFT_FileDetail.RecId)), 1, 16);
                        break;
                }
                break;
            case 'US-BOA-XML-HK':    //SKS_DevOps_15305 -->
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #HK_CNY_CAP:
                    case #HK_CNY_TR:
                    case #HK_CNY_CA:
                    case #HK_CNY_OTR:
                    case #HK_CNY_SER:
                    case #HK_FEDWIRE:
                        id      =   msks_EFT_FileDetail.AccountNum;
                        schmeNm =   this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CdtrSchmeNm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;   //SKS_DevOps_15305 <--
        }
        if(id)
        {
            //          Id
            nodeId = _nodeCdtr.appendChild(xmlDoc.createElement('Id'));
    
            nodeOrgPvtId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            nodeOthr = nodeOrgPvtId.appendChild(xmlDoc.createElement('Othr'));
    
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', id);

            if(schmeNm)
            {
                nodeSchmeNm = nodeOthr.appendChild(xmlDoc.createElement('SchmeNm'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', schmeNm);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
    
        this.node_PstlAdr_Structured(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity, 0, mRemittanceAdrline2, mRemittanceState);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Id(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          9.1.12: Id
        //              9.1.13: OrgId
        //                  9.1.15: Othr
        //                      9.1.16: Id
        //                          9.1.17: SchmeNm
        //                              9.1.18: Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOther;
        XmlElement nodeSchmeNm;
        str id, schemeNm;
        int length;
        
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)//DevOps19398
                {
                    case #ACH_CTX:
                    case #ACH_CCD:                       
                    case #ACH_CCP:
                    case #ACH_IAT:      //SKS#DevOps:16195
                        if(mSKS_EFT_FileDetail.FileACHCompanyId)//SKS_VSTS_14527
                        {
                            id          =   this.CharacterReplacement(mSKS_EFT_FileDetail.FileACHCompanyId);
                        }
                        else
                        {
                            id          =   this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyId);
                        }
                        length      =   35;
                        schemeNm    =   'CHID';
                        break;
                    case #ACH_PPD://DevOps19398
                        if(mSKS_EFT_FileDetail.FileACHCompanyId)
                        {
                            id          =   this.CharacterReplacement(mSKS_EFT_FileDetail.FileACHCompanyId);
                        }
                        else
                        {
                            id          =   this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyId);
                        }
                        length      =   10;
                        schemeNm    =   'CHID';
                        break;
                    case #EPAY:
                        id          =   this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('VirtualPayablesWorkID', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));     //SKS#DevOps:19839
                        length      =   35;
                        break;
                }
                break;
            case 'US-BOA-XML-PL':
                id          =   this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyId);
                break;
            case 'US-BOA-XML-ID':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BANK_DRFT:
                    case #CCHQ:
                        id          =   this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyId);
                        length      =   35;
                        schemeNm='BANK';
                        break;
                    default:
                        id          =   this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyId);
                        length      =   35;
                        schemeNm    =   this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DbtrSchmeNm', mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookup));
                        break;
                }
                break;
            case 'US-BOA-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYACH:
                    case #PAYEFT:
                        id          =   this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('InitgPtyId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
                        length      =   16;
                        break;
                }
                break;
            case 'US-BOA-XML-MY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYACH:
                        id          =   this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyId);
                        length      =   20;
                        schemeNm    =   'COID';
                        break;
                }
                break;
            case 'US-BOA-XML-HK':   //SKS_DevOps_15305 -->
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #HK_CNY_CAP:
                    case #HK_CNY_TR:
                    case #HK_CNY_CA:
                    case #HK_CNY_OTR:
                    case #HK_CNY_SER:
                    case #HK_FEDWIRE:
                        id          =   this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyId);
                        length      =   35;
                        schemeNm    =   this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DbtrSchmeNm', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;  //SKS_DevOps_15305 <--
        }
        if(id)
        {
            //          9.1.12: Id
            nodeId = _nodeDbtr.appendChild(xmlDoc.createElement('Id'));
    
            //              9.1.13: OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            //                  9.1.15: Othr
            nodeOther = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));

            //                      9.1.16: Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOther, 'Id', id, length);

            if(schemeNm)
            {
                //                          9.1.17: SchmeNm
                nodeSchmeNm = nodeOther.appendChild(xmlDoc.createElement('SchmeNm'));

                //                              9.1.18: Cd
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', schemeNm);
            }
        }        
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_PstlAdr(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
    
        this.node_PstlAdr_Structured(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity, 0, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr2, mSKS_EFT_FileDetail_BankAccount.WOrdPartyState);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: DbtrAcct
        //          Id
        //              IBAN
        //              Othr
        //                  Id
        //          Tp
        //              Cd
        //          Ccy
        //------------------------------------------------------------------------------------------------------
        XmlElement  nodeDbtrAcct;
        XmlElement  nodeDbtrAcctId;
        XmlElement  nodeOthr;
        XmlElement  nodeDbtrAcctTp;
        str         value, iban, acctNum, prtryValue;
        boolean     type;
        int         lengthAcctNum = 34;
    
        iban    = mSKS_EFT_FileDetail.BankBankIBAN;
        acctNum = mSKS_EFT_FileDetail.BankBankAcct;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_CTX:
                    case #ACH_CCD:
                    case #ACH_PPD:
                    case #ACH_CCP:  
                    case #ACH_IAT:      //SKS#DevOps:16195
                    case #CHK:
                        iban    =   '';
                        break;
                    case #FED_WIRE:
                    case #SWIFT_WIRE:
                    case #WIRE_FXP:
                    case #WIRE_FXS:
                    case #ACH_FX:
                        iban    =   '';
                        type    = true;
                        break;
                    case #EPAY:
                        iban    =   '';
                        type    = true;
                        prtryValue = 'CARD';
                        break;
                }
                break;
            case 'US-BOA-XML-PL':
                iban    =   '';
                lengthAcctNum = 34;
                break;
            case 'US-BOA-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK:
                    case #CCHQ:         //SKS#VSTS:14488
                        iban    =   '';
                        break;
                }
                break;
            case 'US-BOA-XML-ID':
                iban    =   '';
                type =true;
                lengthAcctNum =8;
                break;
            case 'US-BOA-XML-GR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #FED_WIRE:
                        iban    =   '';
                        type    = true;
                        break;
                }
                break;
            case 'US-BOA-XML-HU'://SKS_VSTS_14909
                type = true;
                lengthAcctNum = 8;
                break;
            case 'US-BOA-XML-IT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #FED_WIRE:
                        iban    =   '';
                        type    =   true;
                        break;
                }
                break;
            case 'US-BOA-XML-KR':           //SKS#DevOps:15082
                lengthAcctNum = 34;
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #FED_WIRE:
                        iban    =   '';
                        break;
                }
                break;
            case 'US-BOA-XML-MY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CCHQ:
                        iban    =   '';
                        break;
                    case #FED_WIRE:
                        type = true;
                        iban = '';
                        break;
                }
                break;
            case 'US-BOA-XML-NZ':               //SKS#DevOps:15082
                lengthAcctNum = 34;
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYACH:
                    case #DOMWIRE:
                        iban    =   '';
                        break;
                }
                break;
            case 'US-BOA-XML-SE':
                lengthAcctNum = 8;//SKS_VSTS_14085
                acctNum = SKS_PP_StringFormats::strRight(mSKS_EFT_FileDetail.BankBankAcct, 8);//SKS_VSTS_14085
                
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYRGI:
                    case #ACHPGIRO:
                    case #ACHBGIRO:
                        iban    =   '';
                        break;
                }
                break;
            case 'US-BOA-XML-UK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #FED_WIRE:
                        iban    =   '';
                        type    =   true;
                        break;
                }
                break;
            case 'US-BOA-XML-HK':  //SKS_DevOps_15305 -->
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #HK_CNY_CAP:
                    case #HK_CNY_TR:
                    case #HK_CNY_CA:
                    case #HK_CNY_OTR:
                    case #HK_CNY_SER:
                    case #HK_FEDWIRE:
                        iban    =   '';
                        type    =   true;
                        break;
                }
                break;  //SKS_DevOps_15305 <--
            case 'US-BOA-XML-PH'://DevOps19481
                iban ='';
                type=true;
                break;
            case 'US-BOA-XML-MX'://DevOps21017
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYACH:
                    case #PAYEFT:
                    case #TAXUTIL:
                        int len = strLen(acctNum);
                        acctNum = subStr(acctNum,len,-8);
                        lengthAcctNum =8;
                        break;
                }
                break;
        }

        if(iban || acctNum)
        {
            //      2.20: DbtrAcct
            nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
            //          Id
            nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
    
            if(iban)
            {
                //              IBAN
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN', iban);
            }
            else if(acctNum)
            {
                //          Othr
                nodeOthr = nodeDbtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
                //              Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', acctNum, lengthAcctNum);//SKS_VSTS_13935
            }
    
            //          Tp
            if(type)
            {
                if(mSKS_EFT_FileDetail.BankAcctType == BankAccountType::CheckingAccount) // Checking
                {
                    value = 'CACC';
                }
                else  // Savings
                {
                    value = 'SVGS';
                }
    
                nodeDbtrAcctTp = nodeDbtrAcct.appendChild(xmlDoc.createElement('Tp'));

                if(prtryValue)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctTp, 'Prtry', prtryValue);
                }
                else
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctTp, 'Cd', value);
                }
            }
            //          Ccy
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcct, 'Ccy', mSKS_EFT_FileDetail.CurrencyCode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAgt</Name>
				<Source><![CDATA[
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    protected void node_PmtInf_DbtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.21: DbtrAgt
        //          FinInstnId
        //              BIC
        //              ClrSysMmbId
        //                  MmbId
        //              PstlAdr
        //                  Ctry
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeBrnchId;
        int     length;
        str     swift, rtg, branchId;//SKS_VSTS_14085
        boolean printName;
        boolean printCountry;
        boolean printBranchId;
        boolean printMmbId;//SKS_VSTS_14409
        boolean printswift;  //SKS#DevOps:15544
        boolean printswiftrtg;  //SKS#DevOps:15618
        swift   = mSKS_EFT_FileDetail.BankBankSwiftNo;
        rtg     = mSKS_EFT_FileDetail.BankBankTransit;
        str printRoutingnum,printBSBCode;

        if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyId)//SKS_VSTS_14085
        {
            branchId = mSKS_EFT_FileDetail_BankAccount.WOrdPartyId;
        }

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #FED_WIRE:
                    case #CHK:
                        swift   =   '';
                        break;
                    case #ACH_CTX:
                        printCountry = true;
                        swift   =   '';
                        break;
                    case #WIRE_FXP:
                        printName = true;
                        break;
                    case #SWIFT_WIRE:
                        printRoutingnum =SKS_EFT_Format::getCodelookupvalue('WireRoutingNum', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);
                        if(printRoutingnum == '' && swift)//devops20264
                        {
                            printswift = true;
                            printBranchId = true;
                        }
                        printCountry = true;
                        break;
                    case #WIRE_FXS:
                    case #ACH_CCD:
                    case #ACH_CCP:
                    case #ACH_PPD:
                        printCountry = true;
                        break;
                    case #EPAY:
                        printCountry = true;
                        swift        =   '';
                        break;
                    case #ACH_FX:
                        swift = '';
                        printCountry = true;
                        printName = true;
                        printBranchId = true;
                        break;
                    case #ACH_IAT:   //SKS_DevOps_16195
                        printCountry = true;
                        printName = true;
                        printBranchId   = true;
                        break;
                }
                break;
            case 'US-BOA-XML-ID':
                branchId = SKS_EFT_Format::getCodelookupvalue('DbtrAgtBranchId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);
                printBranchId = true;
                break;
            case 'US-BOA-XML-PL':
                swift ='';
                printName=true;
                printCountry=true;
                printBranchId=true;
                branchId = SKS_EFT_Format::getCodelookupvalue('DbtrAgtBranchId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);
                break;
            case 'US-BOA-XML-AU'://SKS_VSTS_13765
                printCountry = true;
                printMmbId = true;//SKS_VSTS_14409
                printName   = true;                 //SKS#DevOps:20929
                printswiftrtg = true;
                printBranchId = true;///DevOps19132 
                rtg = SKS_EFT_Format::getCodelookupvalue('BSBCode', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);//SKS#DevOps:20929
                branchId = SKS_EFT_Format::getCodelookupvalue('DbtrAgtBranchId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);//DevOps19974
                break;
            case 'US-BOA-XML-CA':
                branchId        = SKS_EFT_Format::getCodelookupvalue('DbtrAgtBranchId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank); //SKS#DevOps:20398
                printBranchId   = true;
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK:
                        swift   =   '';
                        break;
                    case #CCHQ:     //SKS#VSTS:14488
                        swift   =   '';
                        printName = true;
                        printCountry = true;
                        break;
                    case #SWIFT:
                        printswift = true;//DevOps20936
                        break;
                }
                break;
            case 'US-BOA-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_CNY:
                        printBranchId = true;
                        break;
                }
                break;
            case 'US-BOA-XML-DE':
                printCountry = true;//SKS_VSTS_13765
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                        printBranchId = true;
                        break;
                    case #PAYEFT:
                    case #SWIFT://DevOps21133
                        printswift = true;
                        break;
                }
                break;
            case 'US-BOA-XML-ES':
                printCountry = true;//SKS_VSTS_13765
                printswift = true;//SKS#DevOps:20865
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                        printBranchId = true;
                        break;
                }
                break;
            case 'US-BOA-XML-FR':
                printCountry = true;//SKS_VSTS_13765
                printBranchId = true;//SKS_VSTS_14566
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #PAYSCT:
                    case #SWIFT:
                        printswift = true;
                        break;
                }
                if(swift && mSKS_EFT_FileDetail.CurrencyCode == 'USD' && mSKS_EFT_FileDetail.PaymentCurrencyCode == 'EUR')//SKS_VSTS_14566
                {
                    rtg = '';
                }
                break;
            case 'US-BOA-XML-BE':       //SKS#DevOps:20316
                printCountry = true;
                printBranchId = true;
                printswift = true;//SKS#DevOps:20863
                if(swift && mSKS_EFT_FileDetail.CurrencyCode == 'USD' && mSKS_EFT_FileDetail.PaymentCurrencyCode == 'EUR')//SKS_VSTS_14566
                {
                    rtg = '';
                }
                break;
            case 'US-BOA-XML-GR':
                printCountry = true;//SKS_VSTS_13765
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #FED_WIRE:
                        printBranchId   = true;
                        swift           =   '';
                        break;
                    case #SWIFT:
                    case #PAYEFT:
                        length = 11;
                        break;
                    case #PAYSCT:
                        printBranchId = true;
                        break;
                }
                break;
            case 'US-BOA-XML-IE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:                        
                        printswift = true; //DevOps20055
                        printBranchId = true;
                        break;
                }
                break;
            case 'US-BOA-XML-IT':
                printCountry = true;//SKS_VSTS_13765
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #FED_WIRE:
                        swift           =   '';
                        printBranchId   = true;
                        break;
                    case #PAYSCT:
                        printBranchId = true;
                        break;
                }
                break;
            case 'US-BOA-XML-IN':       //SKS#DevOps:15115
                printBranchId   = true;
                printswift =true; //DevOps21027
                break;
            case 'US-BOA-XML-MY':                           //SKS#DevOps:20757
                switch (mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #FED_WIRE:
                        branchId = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DbtrAgtBranchId', mSKS_EFT_FileDetail.RecId));
                        printBranchId = true;
                        printswift = true;
                        break;
                }
                break;
            case 'US-BOA-XML-NL':
                printCountry = true;//SKS_VSTS_13765
                printswift = true; //SKS#DevOps: 20864
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                        printBranchId = true;
                        break;
                }
                break;
            case 'US-BOA-XML-KR':
                printCountry = true;//SKS_VSTS_13765
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                        printBranchId   = true;
                        if(mSKS_EFT_FileDetail.CurrencyCode == 'USD')
                        {
                            printswift = true;//DevOps20061
                        }
                        break;
                    case #SWIFT:            //SKS#DevOps:15082
                        printBranchId   = true;
                        if(mSKS_EFT_FileDetail.CurrencyCode == 'USD')
                        {
                            printswift = true;//DevOps20061
                        }
                        length = 11;
                        break;
                }
                break;
            case 'US-BOA-XML-UK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #FED_WIRE:
                        swift           =   '';
                        printBranchId   = true;
                        break;
                    case #PAYFPS:
                    case #PAYSCT:
                    case #PAYACH:
                    case #PAYEFT:                 //SKS#DevOps:17173
                        printBranchId   = true;
                        break;
                    case #SWIFT:               //SKS#DevOps:16231
                        printCountry    = true;
                        printBranchId   = true;
                        printMmbId      = true;
                        break;
                }
                break;
            case 'US-BOA-XML-SE'://SKS_VSTS_13765
                printCountry = true;
                printBranchId   = true;//SKS_VSTS_14085
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode) //SKS_DevOps_15305 -->
                {
                    case #SWIFT://DevOps19132                        
                    case #PAYEFT:
                    case #PAYACH:
                    case #ACHPGIRO:
                    case #ACHBGIRO:
                        printBranchId=true; //DevOps19429
                        break;
                    default:
                        if(mSKS_EFT_FileDetail.BankBankAcct)//SKS_VSTS_14085
                        {
                            branchId =mSKS_EFT_FileDetail.BankBankAcct;
                        }
                        break;
                }
                break;
            case 'US-BOA-XML-SG'://SKS_VSTS_13935
                printCountry = true;
                printBranchId = true;   //SKS#DevOPs:14824
                break;
            case 'US-BOA-XML-HU'://SKS_VSTS_13935
                printCountry = true;
                printBranchId   = true;
                
                break;
            case 'US-BOA-XML-HK'://SKS_VSTS_13935
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode) //SKS_DevOps_15305 -->
                {
                    case #HK_CNY_CAP:
                    case #HK_CNY_TR:
                    case #HK_CNY_CA:
                    case #HK_CNY_OTR:
                    case #HK_CNY_SER:
                    case #HK_FEDWIRE:
                        printCountry = true;
                        printBranchId   = true;
                        swift = '';
                        break;
                    case #PAYACH:     //SKS#DevOps:15544 && //SKS#DevOps:15618
                        printCountry = true;
                        printBranchId   = true;
                        printswiftrtg = true;
                        break;
                    case #PAYEFT:
                    case #SWIFT:
                        printswiftrtg = true;       //SKS#DevOps:20397
                        printBranchId   = true;
                        printName = true;
                        length = 11;
                        break;
                    default:
                        printCountry = true;    //SKS_DevOps_15305 <--
                }
            case 'US-BOA-XML-MX'://DevOps19361
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:                        
                    case #PAYACH://DevOps19673
                    case #TAXUTIL:
                        branchId = SKS_EFT_Format::getCodelookupvalue('DbtrAgtBranchId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);
                        printName = true;
                        printCountry = true;
                        printBranchId =true;
                        printswift = true;//DevOps21017
                        break;
                    case #SWIFT:
                        printswift = true;
                        printName = true;
                        break;
                }
                break;
            case 'US-BOA-XML-NZ':   //SKS#DevOps:15082
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYACH:                    
                    case #DOMWIRE:
                        printBranchId = true;
                        printswiftrtg = true;
                        printBSBCode =SKS_EFT_Format::getCodelookupvalue('BSBCode', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);//DevOps21025
                        if(printBSBCode)
                        {
                            rtg = printBSBCode;
                        }

                        break;
                    case #SWIFT:
                        length = 11;
                        printBranchId = true;
                        printswiftrtg = true;
                        printBSBCode =SKS_EFT_Format::getCodelookupvalue('BSBCode', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);
                        if(printBSBCode)
                        {
                            rtg = printBSBCode;
                        }

                        break;
                }
                break;            
            case 'US-BOA-XML-PH':
                swift ='';
                printName=true;
                printCountry=true;
                printBranchId=true;
                branchId = SKS_EFT_Format::getCodelookupvalue('DbtrAgtBranchId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);
                break;
            case 'US-BOA-XML-LU'://DevOps21592
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #SWIFT:
                        printBranchId =true;
                        break;
                }
                break;
           
        }

        //      2.21: DbtrAgt
        nodeDbtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAgt'));
    
        //          FinInstnId
        nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));

        if((swift || rtg) && printswiftrtg)  //SKS#DevOps:15618
        {
            //              BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC',swift, 11);

            this.node_PmtInf_DdtrAgt_MmbId(nodeFinInstnId);
        }
        else if(swift && printswift) //SKS#DevOps:15544
        {
            //              BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC',swift, length);
        }    
        else if(swift  &&
                rtg  && 
                mSKS_EFT_FileDetail.CurrencyCode != 'USD')
        {
            //              BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC',swift, length);

            if(printMmbId)//SKS_VSTS_14409
            {
                this.node_PmtInf_DdtrAgt_MmbId(nodeFinInstnId);
            }
        }
        else
        {
            this.node_PmtInf_DdtrAgt_MmbId(nodeFinInstnId);
        }
        
        select msks_EFT_FileDetail_BankAddress where
                msks_EFT_FileDetail_BankAddress.RefRecId == mSKS_EFT_FileDetail.RecID
                && msks_EFT_FileDetail_BankAddress.AddressType == SKS_EFT_AddressType::BankAddress;

        if(printName)
        {
            //                  Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(LogisticsLocation::find(msks_EFT_FileDetail_BankAddress.Location).Description), 140, false);//SKS_VSTS_14068
        }

        if(printCountry)
        {
            this.node_PstlAdr_Structured(nodeFinInstnId, msks_EFT_FileDetail_BankAddress.CountryRegionId, '', '', '', 0, '', '');       //SKS_VSTS_14068
        }
        else
        {
            this.node_PstlAdr_Structured(nodeFinInstnId, msks_EFT_FileDetail_BankAddress.CountryRegionId, msks_EFT_FileDetail_BankAddress.Addr, msks_EFT_FileDetail_BankAddress.ZipCode, msks_EFT_FileDetail_BankAddress.City, 0, msks_EFT_FileDetail_BankAddress.Addr2, msks_EFT_FileDetail_BankAddress.State);        //SKS_VSTS_14068
        }
        
        if(branchId && printBranchId)//SKS_VSTS_14085
        {
            //                  BrnchId
            nodeBrnchId = nodeDbtrAgt.appendChild(xmlDoc.createElement('BrnchId'));

            //                      Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeBrnchId, 'Id', branchId, 4);//SKS_VSTS_14085
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DdtrAgt_MmbId</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_PmtInf_DdtrAgt_MmbId
    /// </summary>
    /// <param name = "_nodeFinInstnId">_nodeFinInstnId</param>
    protected void node_PmtInf_DdtrAgt_MmbId(XmlElement _nodeFinInstnId)
    {
        XmlElement  nodeClrSysMmBId;
        XmlElement  nodeClrSysId;
        BankRegNum  routingNumber;
        int         length;
        str         clrSysId;

        routingNumber = mSKS_EFT_FileDetail.BankBankTransit;
        length        = 35;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_CCD:
                    case #ACH_CCP:
                        routingNumber = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ACHRoutingNum', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));//DevOps20103
                        clrSysId      = 'USABA';
                        length        =  9;
                        break;
                    case #ACH_CTX:
                        routingNumber = this.CharacterReplacement(mSKS_EFT_FileDetail.BankBankTransit);
                        break;
                    case #ACH_PPD:
                        routingNumber = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ACHRoutingNum', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));//DevOps20103
                        length        =  9;
                        break;
                    case #CHK:
                        routingNumber = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CheckRoutingNum', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
                        clrSysId    =   'USABA';
                        break;
                    case #WIRE_FXP:                    
                        routingNumber = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('WireRoutingNum', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
                        clrSysId    =   'USABA';
                        break;
                    case #SWIFT_WIRE:
                    case #WIRE_FXS:
                    case #FED_WIRE:
                        routingNumber = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('WireRoutingNum', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
                        break;
                }
                break;
            case 'US-BOA-XML-MX'://DevOps19390
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                    case #PAYEFT:
                    case #PAYACH:
                        routingNumber = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('WireRoutingNum', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
                        break;
                }
                break;
            case 'US-BOA-XML-MY':                       //SKS#DevOps:20757
                switch (mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #FED_WIRE:
                        length = 9;
                        break;
                }
                break;
            case 'US-BOA-XML-ID':
                routingNumber = this.CharacterReplacement(mSKS_EFT_FileDetail.BankBankTransit);
                length = 7;                
                break;
            case 'US-BOA-XML-HU'://SKS_VSTS_13935
                length = 8;
                break;
            case 'US-BOA-XML-JP'://SKS_VSTS_14298
            case 'US-BOA-XML-KR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #FED_WIRE:
                        length        = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-CA':   //SKS#DevOps:15271 -->
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CHK:
                        routingNumber = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CheckRoutingNum', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
                        length = 9;
                        break;
                    case #CCHQ:  //SKS#DevOps:15584 //DevOps19630
                        routingNumber = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CheckRoutingNum', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
                        length = 9;
                        clrSysId ='CACPA';
                        break;
                    case #PAYACH://DevOps 19630
                        clrSysId ='CACPA';
                        break;
                }
                break;  //SKS#DevOps:15271 <--
            case 'US-BOA-XML-HK':   //SKS_DevOps_15305 -->
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #HK_CNY_CAP:
                    case #HK_CNY_TR:
                    case #HK_CNY_CA:
                    case #HK_CNY_OTR:
                    case #HK_CNY_SER:
                    case #HK_FEDWIRE:
                        length = 6;
                        clrSysId = 'HKNCC';
                        break;
                    case #PAYACH:  //SKS#DevOps:15618
                        length = 11;
                        break;
                }
                break;   //SKS_DevOps_15305 <--
            case 'US-BOA-XML-PH':
                routingNumber = this.CharacterReplacement(mSKS_EFT_FileDetail.BankBankTransit);
                length =9;
                break;
        }

        if(routingNumber)
        {
            //              ClrSysMmbId
            nodeClrSysMmBId = _nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

            if(clrSysId)
            {
                nodeClrSysId = nodeClrSysMmbId.appendChild(xmlDoc.createElement('ClrSysId'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', clrSysId);
            }
            //                  MmbId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmBId, 'MmbId', routingNumber, length, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.6: PmtTpInf
        //          2.7: InstrPrty
        //          2.8: SvcLvl
        //          2.11: LclInstrm
        //          2.14: CtgyPurp
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePmftTpInf;
    
        if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::No && 
           subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK'     &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #BANK_DRFT &&//DevOps18915
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CCHQ  &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #CB_CAD)         //SKS#Devop:15202
        {
            //      2.6: PmtTpInf
            nodePmftTpInf = _nodePmtInf.appendChild(xmlDoc.createElement('PmtTpInf'));
    
            //          2.7: InstrPrty
            this.node_PmtInf_PmtTpInf_InstrPrty(nodePmftTpInf);
    
            //          2.8: SvcLvl
            this.node_PmtInf_PmtTpInf_SvcLvl(nodePmftTpInf);
    
            //          2.11: LclInstrm
            this.node_PmtInf_PmtTpInf_LclInstrm(nodePmftTpInf);

            //          2.14: CtgyPurp
            this.node_PmtInf_PmtTpInf_CtgyPurp(nodePmftTpInf);  //SKS_DevOps_15305
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_InstrPrty</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_InstrPrty(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.7: InstrPrty
        //------------------------------------------------------------------------------------------------------
        str value;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #WIRE_FXP:
                    case #ACH_FX:
                    case #SWIFT_WIRE:       //SKS#DevOps:20876
                        value = 'NORM';
                        break;
                }
                break;
            case 'US-BOA-XML-ID':
            case 'US-BOA-XML-PH'://DevOps19481
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BANK_DRFT:
                    case #CCHQ:
                        value='';
                        break;
                    default:
                        value = 'NORM';
                        break;
                }
                break;
            case 'US-BOA-XML-DE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                        value = 'NORM';
                        break;
                }
                break;
            case 'US-BOA-XML-ES':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                        value = 'NORM';
                        break;
                }
                break;
            case 'US-BOA-XML-FR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                        value = 'NORM';
                        break;
                }
                break;
            case 'US-BOA-XML-BE':       //SKS#DevOps:20316
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                        value = 'NORM';
                        break;
                }
                break;
            case 'US-BOA-XML-GR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                        value = 'NORM';
                        break;
                }
                break;
            case 'US-BOA-XML-IE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                        value = 'NORM';
                        break;
                }
                break;
            case 'US-BOA-XML-IT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                        value = 'NORM';
                        break;
                }
                break;
            case 'US-BOA-XML-NL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                        value = 'NORM';
                        break;
                }
                break;
            case 'US-BOA-XML-UK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYFPS:
                    case #PAYSCT:
                        value = 'NORM';
                        break;
                }
                break;
            case 'US-BOA-XML-PL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACHDOM:
                    case #WIREDOM:
                        value = 'NORM';
                        break;
                    case #WIREINTL:
                        value = 'HIGH';
                        break;
                }
                break;
        }
        if(value)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmftTpInf, 'InstrPrty', value, 0, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_LclInstrm</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_LclInstrm(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.11: LclInstrm
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeLclInstrm;
        str value;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_CTX:
                        value = 'CTX';
                        break;
                    case #ACH_CCD:
                    case #ACH_CCP:                      //SKG#VSTS:8782
                        value = 'CCD';                  //SKG#VSTS:7598
                        break;
                    case #EPAY:
                        value = 'CCC';
                        break;
                    case #ACH_PPD:
                        value = 'PPD';                  //SKG#VSTS:13334
                        break;
                    case #ACH_IAT:
                        value = 'IAT';                  //SKG#VSTS:16195
                        break;
                    default:
                        value = '';
                        break;
                }
                break;
        }
        if(value)
        {
            nodeLclInstrm = _nodePmftTpInf.appendChild(xmlDoc.createElement('LclInstrm'));
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Cd', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl_Cd</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl_Cd(XmlElement _nodeSvcLvl)
    {
        //------------------------------------------------------------------------------------------------------
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
        str value;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML-BR':
            case 'US-BOA-XML-BY':
            case 'US-BOA-XML-JM':
            case 'US-BOA-XML-KZ':
            case 'US-BOA-XML-IL':
            case 'US-BOA-XML-RU':               //SKS#DevOps:15428
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-ID':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_LV_BI:
                    case #PAYROLL_BI:
                        value = 'NURG';
                        break;
                    case #BANK_DRFT:
                    case #CCHQ:
                        value = '';
                        break;
                    default:
                        value ='URGP';
                        break;
                }
                break;
            case 'US-BOA-XML':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_CTX:
                    case #ACH_CCD:
                    case #ACH_PPD:
                    case #ACH_CCP:
                    case #EPAY:
                    case #ACH_FX:
                    case #ACH_IAT: //SKS_DevOps_16195
                        value = 'NURG';
                        break;
                    case #FED_WIRE:                        
                    case #SWIFT_WIRE:                    
                    case #WIRE_FXP:
                    case #WIRE_FXS:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-EG':       //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_EGP:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-DO':       //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_DOP:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-AU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYACH:
                        value = 'NURG';
                        break;
                    case #SWIFT:
                    case #PAYEFT:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-CA':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYACH:
                        value = 'NURG';
                        break;
                    case #SWIFT:
                    case #PAYEFT:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYACH:
                    case #ACHHGH:
                    case #ACHLOW:
                        value = 'NURG';
                        break;
                    case #SWIFT:
                    case #PAYEFT:
                    case #SWIFT_CNY:            //SKS#DevOps:16330
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-DE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                    case #PAYEFT:
                        value = 'URGP';
                        break;
                    case #PAYSCT:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-BOA-XML-ES':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                    case #PAYEFT:
                        value = 'URGP';
                        break;
                    case #PAYSCT:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-BOA-XML-FR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                    case #PAYEFT:
                        value = 'URGP';
                        break;
                    case #PAYSCT:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-BOA-XML-BE':   //SKS#DevOps:20316
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                    case #PAYEFT:
                        value = 'URGP';
                        break;
                    case #PAYSCT:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-BOA-XML-GR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                    case #PAYEFT:
                    case #FED_WIRE:
                        value = 'URGP';
                        break;
                    case #PAYSCT:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-BOA-XML-HK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                    case #PAYEFT:
                        value = 'URGP';
                        break;
                    case #PAYACH:
                        value = 'NURG';
                        break;
                    case #HK_CNY_CAP:   //SKS_DevOps_15305 -->
                    case #HK_CNY_TR:
                    case #HK_CNY_CA:
                    case #HK_CNY_OTR:
                    case #HK_CNY_SER:
                    case #HK_FEDWIRE:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ScvCd', mSKS_EFT_FileDetail.RecId));
                        break;  //SKS_DevOps_15305 <--
                }
                break;
            case 'US-BOA-XML-HU'://SKS_VSTS_13935
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                    case #HVACH:
                        value = 'URGP';
                        break;
                    case #LVACH:
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-BOA-XML-IE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-BOA-XML-IN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                    case #PAYEFT:
                    case #SWIFT_INR:        //SKS#DevOps:20547
                        value = 'URGP';
                        break;
                    case #PAYACH:
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-BOA-XML-IT':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                    case #PAYEFT:
                    case #FED_WIRE:
                    case #SWIFT_INR:            //SKS#DevOps:16330
                        value = 'URGP';
                        break;
                    case #PAYSCT:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-BOA-XML-JP':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                    case #PAYEFT:
                        value = 'URGP';
                        break;
                    case #PAYACH:
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-BOA-XML-CR':          //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_CRC:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-PE':          //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_PEN:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-PY':          //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_PYG:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-UY':          //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_UYU:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-KR':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                    case #PAYEFT:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-AZ':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_AZN:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-KE':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_KES:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-ER':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_ERN:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-NP':           //SKS#DevOps:18055
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_NPR:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-RW':          //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_RWF:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-ARG':          //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_ARS:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-SL':          //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_SLL:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-VN':          //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_VND:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-TZ':          //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_TZS:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-ET':          //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_ETB:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-MV':          //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_MVR:
                        value = 'URGP';
                        break;
                }
                break;            
            case 'US-BOA-XML-KM':          //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_KMF:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-CO':          //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_COP:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-YE':          //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_YER:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-UZ':          //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_UZS:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-ZM':          //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_ZMW:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-MM':          //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_MMK:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-GT':          //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_GTQ:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-LU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                    case #PAYEFT:
                        value = 'URGP';
                        break;
                    case #PAYSCT:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-BOA-XML-MX':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                    case #PAYEFT:
                    case #TAXUTIL:      //SKS#DevOps:20395
                        value = 'URGP';
                        break;
                    case #PAYACH:
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-BOA-XML-MY':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #FED_WIRE:
                        value = 'URGP';
                        break;
                    case #PAYACH:
                        value = 'NURG';
                        break;
                    case #CCHQ:
                        value = 'CCHQ';
                        break;
                }
                break;
            case 'US-BOA-XML-NL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #SWIFT:
                        value = 'URGP';
                        break;
                    case #PAYSCT:
                        value = 'SEPA';
                        break;
                    case #SWIFT_NPR:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-NZ':       //SKS#DevOps:15082
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                    case #DOMWIRE:
                        value = 'URGP';
                        break;
                    case #PAYACH:
                        value = 'NURG';
                        break;
                }
            case 'US-BOA-XML-SE':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #SWIFT:
                        value = 'URGP';
                        break;
                    case #PAYACH:
                    case #PAYRGI://SKS_VSTS_13235 -->
                    case #ACHPGIRO:
                    case #ACHBGIRO://SKS_VSTS_13235 <--
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-BOA-XML-SG':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #SWIFT:
                        value = 'URGP';
                        break;
                    case #PAYACH:
                        value = 'NURG';
                        break;
                }
                break;
            case 'US-BOA-XML-TW':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #SWIFT:
                        value = 'URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-UK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYEFT:
                    case #SWIFT:
                    case #FED_WIRE:
                        value = 'URGP';
                        break;
                    case #PAYACH:           //SKS#DevOps:12411 SKS#DevOps:17173
                        value = 'NURG';
                        break;
                    case #PAYFPS:
                        value = 'URNS';
                        break;
                    case #PAYSCT:
                        value = 'SEPA';
                        break;
                }
                break;
            case 'US-BOA-XML-PH':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BANK_DRFT:
                    case #CCHQ:
                        value='';
                        break;
                    case #DOM_EPCS:
                        value ='NURG';
                        break;
                    default:
                        value ='URGP';
                        break;
                }
                break;
            case 'US-BOA-XML-PL':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACHDOM:
                        value = 'NURG';
                        break;
                    case #WIREDOM:
                    case #WIREINTL:
                        value = 'URGP';
                        break;
                }
                break;
        }
    
        if(value)
        {
            //              2.9: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeSvcLvl, 'Cd', value, 0, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_Nm</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_GrpHdr_InitgPty_Nm
    /// </summary>
    /// <param name = "_nodeInitgPty">_nodeInitgPty</param>
    protected void node_GrpHdr_InitgPty_Nm(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          Nm
        //------------------------------------------------------------------------------------------------------
        Name companyName;
    
        //          Nm
        companyName = CompanyInfo::find().Name();

        if(mSKS_EFT_FileDetail.FormatId =='US-BOA-XML-PH')
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeInitgPty, 'Nm', this.CharacterReplacement(companyName), 140, false);
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeInitgPty, 'Nm', this.CharacterReplacement(companyName), 70, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_RmtInf_Amt</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_RmtInf_Amt
    /// </summary>
    /// <param name = "_nodeRfrdDocAmt">_nodeRfrdDocAmt</param>
    /// <param name = "_invSKS_EFT_FileDetail">_invSKS_EFT_FileDetail</param>
    protected void node_RmtInf_Amt(XmlElement _nodeRfrdDocAmt, SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.42: Amt
        //              2.43: InstdAmt
        //------------------------------------------------------------------------------------------------------
        XmlElement  currentElement;
        AmountMST   gross = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        AmountMST   Remitted;
        AmountMST   CreditNote;
    
        if(_invSKS_EFT_FileDetail.InvoiceSettleAmountCur > 0)
        {
            Remitted = 0;
            CreditNote = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            //      2.110
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DuePyblAmt', num2str(gross * 1,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
    
            //      2.111
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DscntApldAmt', num2str(_invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur * 1,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
        else
        {
            Remitted = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1;
            CreditNote = 0;
            //      2.110
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DuePyblAmt', num2str(gross * -1,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
    
            //      2.111
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'DscntApldAmt', num2str(_invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur * -1,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
    
        if(Remitted != 0)
        {
            //      RmtdAmt
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'RmtdAmt', num2str(Remitted,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
        else
        {
            //      CdtNoteAmt
            switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
            {
                case 'US-BOA-XML':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CHK:
                            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'RmtdAmt', num2str(CreditNote,0,2,1,0));
                            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
                            break;
                        default:
                            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'CdtNoteAmt', num2str(CreditNote,0,2,1,0));
                            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
                            break;
                    }
                    break;
                case 'US-BOA-XML-CA':
                    switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                    {
                        case #CCHQ:
                            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'RmtdAmt', num2str(CreditNote,0,2,1,0));
                            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
                            break;
                        default:
                            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'CdtNoteAmt', num2str(CreditNote,0,2,1,0));
                            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
                            break;
                    }
                    break;

                default:
                    currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'CdtNoteAmt', num2str(CreditNote,0,2,1,0));
                    SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RltdRmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RltdRmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.91: RltdRmtInf
        //------------------------------------------------------------------------------------------------------
    
        XmlElement      nodeRltdRmtInf;
        SKS_EB_Vendor   lSKS_EB_Vendor;
        str             value, email;
        boolean         printRltdRmtInf;
        
        //              2.93: RmtLctnMtd
        value      = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RmtLctnMtd', mSKS_EFT_FileDetail.RecId));

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML-MY':
                printRltdRmtInf = true;
                break;
        }
        
        if(value && printRltdRmtInf)
        {
            //          2.91: RltdRmtInf
            nodeRltdRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RltdRmtInf'));
                
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRltdRmtInf, 'RmtLctnMtd', value, 0, false);
            
            lSKS_EB_Vendor = SKS_EB_Vendor::find(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum);

            if(mSKS_EFT_FileDetail_VendAddress.Locator)
            {
                email += mSKS_EFT_FileDetail_VendAddress.Locator;
            }
            if(lSKS_EB_Vendor.EM2Addr)
            {
                if(email)
                {
                    email += ';';
                }
                email += lSKS_EB_Vendor.EM2Addr;
            }
            if(lSKS_EB_Vendor.EM3Addr)
            {
                if(email)
                {
                    email += ';';
                }
                email += lSKS_EB_Vendor.EM3Addr;
            }
            if(lSKS_EB_Vendor.EM4Addr)
            {
                if(email)
                {
                    email += ';';
                }
                email += lSKS_EB_Vendor.EM4Addr;
            }
            
            if(value == 'EMAL' && email)         // VSTS#11160
            {
                //              2.94: RmtLctnElctrncAdr
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRltdRmtInf, 'RmtLctnElctrncAdr', email, 0, false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty(XmlElement _nodeGrpHdr)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          Nm
        //          Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeInitgPty;
    
    
        //      1.8: InitgPty
        nodeInitgPty = _nodeGrpHdr.appendChild(xmlDoc.createElement('InitgPty'));
    
        //          Nm
        this.node_GrpHdr_InitgPty_Nm(nodeInitgPty);
        
        //          PstlAdr
        this.node_GrpHdr_InitgPty_PstlAdr(nodeInitgPty);
    
        //          Id
        this.node_GrpHdr_InitgPty_Id(nodeInitgPty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_PstlAdr</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_GrpHdr_InitgPty_PstlAdr
    /// </summary>
    /// <param name = "_nodeInitgPty">_nodeInitgPty</param>
    protected void node_GrpHdr_InitgPty_PstlAdr(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          Nm
        //------------------------------------------------------------------------------------------------------
        LogisticsPostalAddress  postalAddress;
        XmlElement              nodePstlAdr;
    
        postalAddress = this.findPostalAddressLineByPartyLocationRole(CompanyInfo::current(), 'APEFT');
    
        if(postalAddress)
        {
            //      PstlAdr
            nodePstlAdr = _nodeInitgPty.appendChild(xmlDoc.createElement('PstlAdr'));

            //          PstCd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrTp', 'ADDR');
    
            //          PstCd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'PstCd', this.CharacterReplacement(postalAddress.ZipCode), 16, false);
    
            //          TwnNm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'TwnNm', this.CharacterReplacement(postalAddress.City), 35, false);
    
            //          Ctry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'Ctry', this.getLogisticsAddressCountryISO(postalAddress.CountryRegionId), 2, false);
    
            //          AdrLine
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePstlAdr, 'AdrLine', this.CharacterReplacement(postalAddress.Street), 35, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf()
    {
        //------------------------------------------------------------------------------------------------------
        //  2.0: PmtInf
        //      2.1: PmtInfId
        //      2.2: PmtMtd
        //      2.4: NbOfTxs
        //      2.5: CtrlSum
        //      2.6: PmtTpInf
        //      2.17: ReqdExctnDt
        //      2.19: Dbtr
        //      2.20: DbtrAcct
        //      2.21: DbtrAgt
        //      2.24 ChrgBr
        //------------------------------------------------------------------------------------------------------
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;

        batchCount++;

        // Select count and sum for this bank account
        select COUNT(InvoiceOrigAmountCur), SUM(InvoiceSettleAmountPmtCur) from tmpSKS_EFT_FileDetail
        where
            tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
            tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
            tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
            tmpSKS_EFT_FileDetail.BankAccountId == mSKS_EFT_FileDetail.BankAccountId &&
            tmpSKS_EFT_FileDetail.EffectiveDate == mSKS_EFT_FileDetail.EffectiveDate &&
            tmpSKS_EFT_FileDetail.PaymMode == mSKS_EFT_FileDetail.PaymMode &&
            tmpSKS_EFT_FileDetail.PaymSpec == mSKS_EFT_FileDetail.PaymSpec &&
            tmpSKS_EFT_FileDetail.PaymentCurrencyCode == mSKS_EFT_FileDetail.PaymentCurrencyCode&&
            tmpSKS_EFT_FileDetail.AccountCompany == mSKS_EFT_FileDetail.AccountCompany;         //SKS#DevOps:22011


        //  2.0: PmtInf
        nodePmtInf = nodeRoot.appendChild(xmlDoc.createElement('PmtInf'));

        //      2.1: PmtInfId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtInfId', SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr + '-' + int2str(batchCount),35));

        //      2.2: PmtMtd
        if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AR)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'DD');
        }
        else if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::Yes ||
                subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) == 'CHK'      ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CCHQ)       //SKS#DevOps:21713
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'CHK');
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'TRF');
        }

        //      2.3: BtchBookg
        this.node_PmtInf_BtchBookg(nodePmtInf);

        //      2.4: NbOfTxs
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'NbOfTxs', num2str(tmpSKS_EFT_FileDetail.InvoiceOrigAmountCur,0,0,0,0));

        if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AP)
        {
            //      2.5: CtrlSum
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0));
        }
        else
        {
            //      2.5: CtrlSum
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,0,2,1,0));
        }

        //      2.6: PmtTpInf
        this.node_PmtInf_PmtTpInf(nodePmtInf);

        if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AR)
        {
            //      2.18: ReqdColltnDt
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'ReqdColltnDt', SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate, DateSeparator::Hyphen));
        }
        else
        {
            //      2.17: ReqdExctnDt
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'ReqdExctnDt', SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate, DateSeparator::Hyphen));
        }

        if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AP)
        {
            this.node_PmtInf_DbtrNodes(nodePmtInf);
        }
        else
        {
            this.node_PmtInf_CdtrNodes(nodePmtInf);
        }

        //      2.24 ChrgBr
        this.node_PmtInf_ChrgBr(nodePmtInf);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_Nm</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_Nm(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          Nm
        //------------------------------------------------------------------------------------------------------
        int length;
    
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {   
            case 'US-BOA-XML-BR' :
            case 'US-BOA-XML-BY' :
            case 'US-BOA-XML-IL' :
            case 'US-BOA-XML-JM' :
            case 'US-BOA-XML-KZ' :
            case 'US-BOA-XML-RU' :          //SKS#DevOps:15428
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-CN' :          //SKS#DevOps:15428
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        length = 35;
                        break;
                    case #SWIFT_CNY:
                        length = 34;
                        break;
                    default:
                        length = 70;
                        break;                
                }
                break;
            case 'US-BOA-XML-PL' :
                length = 140;
                break;
            case 'US-BOA-XML-LU':
            case 'US-BOA-XML-ID': //DevOps18915
            case 'US-BOA-XML=PH'://DevOps19481
                length = 35;
                break;
            case 'US-BOA-XML-FR' ://SKS#DevOps:15202
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_CAD:
                        length = 35;
                        break;
                    default :
                        length = 70;
                        break;
                }
                break;
            case 'US-BOA-XML-BE':  //SKS#DevOps:20316
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                        length = 35;
                        break;
                    default:
                        length = 70;
                        break;
                }
                break;  //SKS_DevOps_15305 <--
            case 'US-BOA-XML-MX':  //SKS#DevOps:20395
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #TAXUTIL:
                        length = 34;
                        break;
                    default:
                        length = 70;
                        break;
                }
                break;  //SKS_DevOps_15305 <--
            case 'US-BOA-XML-KE' :          //SKS#DevOps:17132
            case 'US-BOA-XML-EG' :          //SKS#DevOps:17132
            case 'US-BOA-XML-ER' :          //SKS#DevOps:17132
            case 'US-BOA-XML-ET' :          //SKS#DevOps:17132
            case 'US-BOA-XML-RW' :          //SKS#DevOps:17132
            case 'US-BOA-XML-SL' :          //SKS#DevOps:17132
            case 'US-BOA-XML-KM' :          //SKS#DevOps:17132
            case 'US-BOA-XML-TZ' :          //SKS#DevOps:17132
            case 'US-BOA-XML-ZM' :          //SKS#DevOps:17132
            case 'US-BOA-XML-VN' :          //SKS#DevOps:17132
            case 'US-BOA-XML-MM' :          //SKS#DevOps:17132
            case 'US-BOA-XML-MV' :          //SKS#DevOps:17132
            case 'US-BOA-XML-NP' :          //SKS#DevOps:17132
            case 'US-BOA-XML-AZ' :          //SKS#DevOps:17132
            case 'US-BOA-XML-UZ' :          //SKS#DevOps:17132
            case 'US-BOA-XML-YE' :          //SKS#DevOps:17132
            case 'US-BOA-XML-CR' :          //SKS#DevOps:17132
            case 'US-BOA-XML-PE' :          //SKS#DevOps:17132
            case 'US-BOA-XML-UY' :          //SKS#DevOps:17132
            case 'US-BOA-XML-PY' :          //SKS#DevOps:17132
            case 'US-BOA-XML-ARG' :          //SKS#DevOps:17132
            case 'US-BOA-XML-GT' :          //SKS#DevOps:17132
            case 'US-BOA-XML-DO' :          //SKS#DevOps:17132
            case 'US-BOA-XML-CO' :          //SKS#DevOps:17132
                length = 34;
                break;
            case 'US-BOA-XML-HU' ://SKS_VSTS_13935
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #HVACH:
                    case #LVACH:
                        length = 34;
                        break;
                    case #SWIFT:
                        length = 35;
                        break;
                    default :
                        length = 70;
                        break;
                }
                break;
            //SKS_VSTS_14298 -->
            case 'US-BOA-XML-IN':  //SKS#DevOps:16330
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_INR:
                        length = 34;
                        break;
                    default:
                        length = 70;
                        break;
                }
                break;
            case 'US-BOA-XML-KR' :
                length = 35;
                break;
            case 'US-BOA-XML-NZ' :
                length = 35;
                break;
            //SKS_VSTS_14298 <--
            case 'US-BOA-XML-HK':  //SKS_DevOps_15305 -->
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #HK_CNY_CAP:
                    case #HK_CNY_TR:
                    case #HK_CNY_CA:
                    case #HK_CNY_OTR:
                    case #HK_CNY_SER:
                    case #HK_FEDWIRE:
                        length = 35;
                        break;
                    default:
                        length = 70;
                        break;
                }
                break;  //SKS_DevOps_15305 <--
            default:
                length = 70;
                break;
        }

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CHK)
        {
            if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeDbtr, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName), length, false);

            }
            else//DevOps19434
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeDbtr, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail.FileACHCompanyName), length, false);
            }
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeDbtr, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName), length, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_PmtTpInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.31 PmtTpInf
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePmtTpInf;
        XmlElement nodeSvcLvl;

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #CB_CAD)
        {
            //      2.6: PmtTpInf
            nodePmtTpInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('PmtTpInf'));

            //          2.14: SvcLvl
            nodeSvcLvl = nodePmtTpInf.appendChild(xmlDoc.createElement('SvcLvl'));
    
            //              2.15: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSvcLvl, 'Cd', 'URGP');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_PmtId</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_PmtId(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.28: PmtId
        //              2.30: EndToEndId
        //------------------------------------------------------------------------------------------------------
        
        XmlElement  nodePmtId;
        boolean     printInstrId;
        int length;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML-MY':
                printInstrId = true;
                length = 35;
                break;
            case 'US-BOA-XML-ID':
                printInstrId = true;
                length = 35;
                break;
            case 'US-BOA-XML-HU'://SKS_VSTS_13935
            case 'US-BOA-XML-PH'://DevOps19481
                length = 30;
                break;
            default :
                length = 35;
                break;
        }
                
        //          2.28: PmtId
        nodePmtId = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('PmtId'));
        
        if(printInstrId)
        {
            //              2.29: InstrId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'InstrId', SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 35));
        }
        
        //              2.30: EndToEndId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId', SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), length));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRemoveBOM</Name>
				<Source><![CDATA[
    protected boolean getRemoveBOM()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_BtchBookg</Name>
				<Source><![CDATA[
    protected void node_PmtInf_BtchBookg(XmlElement _BtchBookg)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.3: BtchBookg
        //------------------------------------------------------------------------------------------------------
        boolean printBtchBookg;
        str btchBookg;
        str valueBtchBookg;


        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML-CA':       //SKS_VSTS_13219
            case 'US-BOA-XML-CN':
            case 'US-BOA-XML-JP':
                printBtchBookg = true;
                valueBtchBookg = 'false';
                break;
            case 'US-BOA-XML-ID':
            case 'US-BOA-XML-IN'://DevOps20766
                printBtchBookg = true;
                btchBookg = SKS_EFT_Format::getCodelookupvalue('BtchBookg', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);
                if(strUpr(btchBookg) == 'Y')
                {
                    valueBtchBookg = 'true';
                }
                else if(strUpr(btchBookg) == 'N')
                {
                    valueBtchBookg = 'false';
                }
                break;
            case 'US-BOA-XML-HK'://SKS_VSTS_14910
            case 'US-BOA-XML-PH'://DevOps19481
                printBtchBookg = true;
                btchBookg = SKS_EFT_Format::getCodelookupvalue('BtchBookg', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);
                if(strUpr(btchBookg) == 'Y')
                {
                    valueBtchBookg = 'true';
                }
                else if(strUpr(btchBookg) == 'N')
                {
                    valueBtchBookg = 'false';
                }
                break;
        }
        if(printBtchBookg && valueBtchBookg)        //SKS#DevOps:20397
        {
            //              2.3: BtchBookg
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _BtchBookg, 'BtchBookg', valueBtchBookg);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRemittanceAddress</Name>
				<Source><![CDATA[
    //SKS_VSTS_12574--->
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    void getRemittanceAddress(boolean UseCheckNum)
    {
        LedgerJournalTrans      lLedgerJournalTrans;
        LogisticsLocation       lLogisticsLocation;
        LogisticsPostalAddress  lRemittancePostalAddress;
        Array vendAddrArray = new Array(Types::String);
        EventHandlerResult result = new EventHandlerResult();
    
        if(UseCheckNum && mSKS_EFT_FileDetail.PaymentLineRecId != 0)
        {
            select * from lRemittancePostalAddress join  RemittanceAddress from lLedgerJournalTrans
                    where lRemittancePostalAddress.Location == lLedgerJournalTrans.RemittanceLocation
                        && lLedgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;
    
            lLogisticsLocation = LogisticsLocation::find(lLedgerJournalTrans.RemittanceLocation);
    
            //Populate Remittance Information
            mRemittanceName = lLogisticsLocation.Description;
    
            vendAddrArray = SKS_PP_50000Bas::StreetToAddressLineArray(lRemittancePostalAddress.Street,2);
    
            mRemittanceAdrLine1 = '';
            mRemittanceAdrLine2 = '';
            mRemittanceAdrLine3 = '';
    
            if(vendAddrArray.exists(1))
            {
                mRemittanceAdrLine1 = vendAddrArray.value(1);
                if (vendAddrArray.exists(2))
                {
                    mRemittanceAdrLine2 = vendAddrArray.value(2);
                }
                if (vendAddrArray.exists(3))
                {
                    mRemittanceAdrLine3 = vendAddrArray.value(3);
                }
            }
            mRemittanceCity = this.CharacterReplacement(lRemittancePostalAddress.City);
            mRemittanceState = this.CharacterReplacement(lRemittancePostalAddress.State);
            mRemittanceZipCode = this.CharacterReplacement(lRemittancePostalAddress.ZipCode);
            mRemittanceCountryRegionId = this.getLogisticsAddressCountryISO(lRemittancePostalAddress.CountryRegionId);
        }
        else
        {
            //Populate Remittance Information from Vendor eBanking details
            mRemittanceName = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName);
            mRemittanceAdrLine1 = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr);
            mRemittanceAdrLine2 = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr2);
            mRemittanceCity = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneCity);
            mRemittanceState = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneState);
            mRemittanceZipCode = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneZipPostal);
            mRemittanceCountryRegionId = this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId);
        }

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML':
            case 'US-BOA-XML-CA':
                this.getRemittanceAddress_delegate(mSKS_EFT_FileDetail, result);
                if(result.result())
                {
                    mRemittanceName = result.result();
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr_Nm</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Cdtr_Nm(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.79: Cdtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
        str name = mSKS_EFT_FileDetail.AccountName;
        int length;//SKS_VSTS_13935

        this.getmRemittanceName(); //SKS_DevOps_17523

        if(mRemittanceName != '')
        {
            name = mRemittanceName;
        }
        
        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML-CN':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_CNY:            //SKS#DevOps:16330                    
                        length = 35;
                        break;
                    case #SWIFT:                //DevOps18414
                        length =100;
                        break;
                    default :
                        length = 140;
                        break;
                }
                break;
            case 'US-BOA-XML-DO':           //SKS#DevOps:17578
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_DOP:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-MX':           //SKS#DevOps:20395
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #TAXUTIL:
                        length = 34;
                        break;
                    default :
                        length = 140;
                        break;
                }
                break;
            case 'US-BOA-XML-BE':           //SKS#DevOps:20316
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #PAYSCT:
                        length = 35;
                        break;
                    default :
                        length = 140;
                        break;
                }
                break;
            case 'US-BOA-XML-BR':           //SKS#DevOps:15428
            case 'US-BOA-XML-BY':
            case 'US-BOA-XML-IL':
            case 'US-BOA-XML-KZ':
            case 'US-BOA-XML-JM':
            case 'US-BOA-XML-RU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                        length = 35;
                        break;
                    default :
                        length = 140;
                        break;
                }
                break;
            case 'US-BOA-XML-FR':           //SKS#DevOps:15202
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #CB_CAD:
                        length = 35;
                        break;
                    default :
                        length = 140;
                        break;
                }
                break;
            case 'US-BOA-XML-HU':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #HVACH:
                    case #LVACH:
                        length = 34;
                        break;
                    case #SWIFT:
                        length = 35;
                        break;
                    default :
                        length = 140;
                        break;
                }
                break;
            case 'US-BOA-XML-AZ':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_AZN:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-CR':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_CRC:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-PE':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_PEN:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-KE':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_KES:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-EG':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_EGP:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-ER':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_ERN:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-ET':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_ETB:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-MV':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_MVR:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-TZ':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_TZS:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-RW':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_RWF:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-SL':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_SLL:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-UZ':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_UZS:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-YE':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_YER:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-UY':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_UYU:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-VN':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_VND:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-ZM':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_ZMW:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-KM':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_KMF:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-ARG':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_ARS:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-MM':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_MMK:
                        length = 35;
                        break;
                }
                break;
            case 'US-BOA-XML-GT':           //SKS#DevOps:17132
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT_GTQ:
                        length = 35;
                        break;
                }
                break;
            //SKS_VSTS_14298 -->
            case 'US-BOA-XML-NZ':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #DOMWIRE:
                    case #SWIFT:
                    case #FED_WIRE:
                        length = 35;
                        break;
                    default :           //SKS#DevOps:15082
                        length = 140;
                        break;
                }
                break;
            case 'US-BOA-XML-KR':
            case 'US-BOA-XML-ID'://DevOps18915
            case 'US-BOA-XML-PH':
                length = 35;                
                break;
            //SKS_VSTS_14298 <--
            case 'US-BOA-XML-HK':  //SKS_DevOps_15305 -->
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #HK_CNY_CAP:
                    case #HK_CNY_TR:
                    case #HK_CNY_CA:
                    case #HK_CNY_OTR:
                    case #HK_CNY_SER:
                    case #HK_FEDWIRE:
                        length = 35;
                        break;
                }
                break;  //SKS_DevOps_15305 <--
            default :
                length = 140;
                break;
        }
        //              Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', this.CharacterReplacement(name), length);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RgltryRptg</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RgltryRptg(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.89: RgltryRptg
        //              Dtls
        //                  Inf
        //------------------------------------------------------------------------------------------------------
    
        XmlElement      nodeRgltryRptg;
        XmlElement      nodeDtls;
        boolean     printRgltryRptg;
        str bankCodeText;

        bankCodeText = this.getBankPurposeText();

        Switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML-JP' :
                if((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PAYEFT))
                {
                    printRgltryRptg = true;
                }
                break;
            case 'US-BOA-XML-PH' :
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DOM_RTGS || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DOM_PDDTS)            //SKS#DevOps:20541
                {
                    printRgltryRptg = true;
                    bankCodeText =   this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PaymentTypeCode', mSKS_EFT_FileDetail.RecId));
                    bankCode =   this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('POPCode', mSKS_EFT_FileDetail.RecId));
                }
                break;
        }

        if(printRgltryRptg && (bankCode || bankCodeText))
        {
            nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRgltryRptg, 'DbtCdtRptgInd', 'DEBT');
            nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));

            if(bankCodeText)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Tp', bankCodeText, 35);
            }
            if(bankCode)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Inf', bankCode, 35);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_CtgyPurp</Name>
				<Source><![CDATA[
    //SKS_DevOps_15305 -->
    protected void node_PmtInf_PmtTpInf_CtgyPurp(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.14: CtgyPurp
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCtgyPurp;
        str value;

        switch(mSKS_EFT_FileFormatPaymSpec.FormatId)
        {
            case 'US-BOA-XML-HK':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #HK_CNY_CAP:
                    case #HK_CNY_TR:
                    case #HK_CNY_CA:
                    case #HK_CNY_OTR:
                    case #HK_CNY_SER:
                    case #HK_FEDWIRE:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CtgyCd', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-BOA-XML-PL':
                value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CtgyCd', mSKS_EFT_FileDetail.RecId));
                break;
            case 'US-BOA-XML-ID':
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #SWIFT:
                    case #FED_WIRE:
                    case #DOM_HV:
                    case #ACH_LV_BI:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CtgyCd', mSKS_EFT_FileDetail.RecId,SKS_EFT_CodeLookupType::CodeLookup));
                        break;
                }
                break;
            case 'US-BOA-XML':   //SKG#VSTS:16195
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #ACH_IAT:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CtgyCd', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
            case 'US-BOA-XML-PH':   //SKG#VSTS:19481
                switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
                {
                    case #BANK_DRFT:
                    case #CCHQ:
                        value ='';
                        break;
                    default:
                        value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('CtgyCd', mSKS_EFT_FileDetail.RecId));
                        break;
                }
                break;
        }
    
        if(value)
        {
            //          2.14: CtgyPurp
            nodeCtgyPurp = _nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
            //              2.15: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    //SKS_DevOps_15305 <--
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
            join mSKS_EFT_FileDetail_BenBank
            join mSKS_EFT_FileDetail_Intermediary
            join mSKS_EFT_FileDetail_CreditParty
            join msKS_EFT_FileDetail_Instructions
              order by mSKS_EFT_FileDetail.AccountCompany,      //SKS#DevOps:22011
                   mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_BenBank.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_Intermediary.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_CreditParty.RefRecId &&
                mSKS_EFT_FileDetail.RecId == msKS_EFT_FileDetail_Instructions.RefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getContactNmPhonByPurpose</Name>
				<Source><![CDATA[
    private void getContactNmPhonByPurpose()
    {
        DirPartyLocation                dirPartyLocation;
        LogisticsElectronicAddress      lLogisticsElectronicAddress;
        LogisticsElectronicAddressRole  lLogisticsElectronicAddressRole;
        LogisticsLocationRole           lLogisticsLocationRole;
        VendTable                       lVendTable;

        lVendTable = VendTable::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum);  //SKS#DevOps:17662

        while select Location from DirPartyLocation where dirPartyLocation.party == lVendTable.Party
                    join lLogisticsElectronicAddress where lLogisticsElectronicAddress.Location == dirPartyLocation.Location
                        join LocationRole from lLogisticsElectronicAddressRole where lLogisticsElectronicAddressRole.ElectronicAddress == lLogisticsElectronicAddress.RecId
                            join Name from lLogisticsLocationRole
                                where lLogisticsLocationRole.RecId == lLogisticsElectronicAddressRole.LocationRole && lLogisticsLocationRole.Name == 'SKGPaymentContact'
        {
            if(LogisticsElectronicAddressMethodType::Phone)
            {
                if(lLogisticsElectronicAddress.Locator)
                {
                    contactPhone = lLogisticsElectronicAddress.Locator;
                }
            }

            contName = this.CharacterReplacement(lLogisticsElectronicAddress.Description);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getmRemittanceName</Name>
				<Source><![CDATA[
    public void getmRemittanceName()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_UltmtDbtr</Name>
				<Source><![CDATA[
    /// <summary>
    /// node_PmtInf_UltmtDbtr
    /// </summary>
    /// <param name = "_nodePmtInf">_nodePmtInf</param>
    protected void node_PmtInf_UltmtDbtr(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.23: UltmtDbtr
        //              Nm
        //              BIC
        //              ClrSysMmbId
        //                  MmbId
        //              PstlAdr
        //                  Ctry
        //------------------------------------------------------------------------------------------------------
    
        XmlElement  nodeUltmtDbtr;
        boolean     printUltmtDbtr;
        LogisticsPostalAddress postalAddress;
        SKS_EB_Address                          addressBldgNb, addressStrtNm;
        container                               address;

        postalAddress = CompanyInfo::findDataArea(mSKS_EFT_FileDetail.AccountCompany).postalAddress();

        if(strScan(postalAddress.Street, ';', 1, strLen(postalAddress.Street)))
        {
            address = this.addressSplit(postalAddress.Street);
            addressStrtNm = SKS_PP_StringFormats::strRemoveCRLF(conpeek(address,1));
            addressBldgNb = SKS_PP_StringFormats::strRemoveCRLF(conpeek(address,2));
        }
        else
        {
            addressStrtNm = SKS_PP_StringFormats::strRemoveCRLF(postalAddress.Street);
        }

        switch(mSKS_EFT_FileDetail.FormatId)
        {
            case 'US-BOA-XML':
            case 'US-BOA-XML-AU':
            case 'US-BOA-XML-CA':
            case 'US-BOA-XML-PH':
            case 'US-BOA-XML-SG':
            case 'US-BOA-XML-UK':
                printUltmtDbtr = true;
                break;
        }

        if(mSKS_EFT_FileDetail.PaymentCompany !=  mSKS_EFT_FileDetail.AccountCompany &&
           SKS_PP_Setup::find().IHB_Active &&
           printUltmtDbtr)
        {
            //      2.23: UltmtDbtr
            nodeUltmtDbtr = nodePmtInf.appendChild(xmlDoc.createElement('UltmtDbtr'));
    
            //          Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeUltmtDbtr, 'Nm', CompanyInfo::findDataArea(mSKS_EFT_FileDetail.AccountCompany).name(), 140, false);
            
            //              PstlAdr
            this.node_PstlAdr(nodeUltmtDbtr, postalAddress.CountryRegionId, addressStrtNm, postalAddress.ZipCode, postalAddress.City, 70,addressBldgNb, postalAddress.State,true);//DevOps20934
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrNodes</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrNodes(XmlElement _nodePmtInf)
    {
        //      2.19: Dbtr
        this.node_PmtInf_Dbtr(_nodePmtInf);
    
        //      2.20: DbtrAcct
        this.node_PmtInf_DbtrAcct(_nodePmtInf);
    
        //      2.21: DbtrAgt
        this.node_PmtInf_DbtrAgt(_nodePmtInf);

        //      2.23: UltmtDbtr
        this.node_PmtInf_UltmtDbtr(_nodePmtInf); //SKS#DevOps:20223, 20224, 20226, 20227, 20228 and 20229
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>