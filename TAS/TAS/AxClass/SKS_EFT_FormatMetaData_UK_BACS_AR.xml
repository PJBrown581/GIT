<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_UK_BACS_AR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_UK_BACS_AR_AR
/// </summary>
class SKS_EFT_FormatMetaData_UK_BACS_AR extends SKS_EFT_Format_MetaData
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20221017';
        dataContractVersion = '1.0';
        conFormatID = ['UK-BACS-AR'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,0,0,0,'','','','',0,'','','Company Name','XXXXXXXXXXXXXXXXXX',0,'UK - BACS - AR',0,'','','UK-BACS-AR',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-BACS-AR',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,ilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNaha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement

        switch (_formatID)
        {
            case ('UK-BACS-AR'):
                paymSpecList = this.getPaymSpecsMetaData_UK_BACS_AR();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_BACS_AR</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_BACS_AR()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'DIRECT PAY',0,0,0,0,0,'BACS Payment',1,'BACS','','BACS','',0,'UK-BACS-AR',0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0 ]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('UK-BACS-AR'):
                notesList = this.getNotesMetaData_UK_BACS_AR();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_BACS_AR</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_BACS_AR()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-BACS-AR','BACS','-The Company Name is required set in EFT+ Bank Account > DD EFT+ > Company Info tab.::-ServiceUserNumber is stored in File info tab']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('UK-BACS-AR'):
                validationsList = this.getValidationsMetaData_UK_BACS_AR();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_BACS_AR</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_BACS_AR()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-BACS-AR','BACS','','Bank Routing number','Cash and bank management > Select bank account > edit > General (fast tab) > Routing number','Detail Record > Field No.1 > Destination sorting code','Routing number related to Bank',0,'RegistrationNum','','',0,0,1,'6',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-BACS-AR','BACS','','Bank account number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','Detail Record > Field No.2 > Destination account number','Account number related to Bank',0,'AccountNum','','',0,0,1,'8',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-BACS-AR','BACS','','Customer Bank Routing number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Routing number','Detail Record > Field No.5 > Originating sorting code','Routing number related to Customer',1,'RegistrationNum','','',0,0,1,'6',0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-BACS-AR','BACS','','Customer Bank Account number','TAS > Common > Customer eBanking details > Customer bank accounts > General tab > Identification(group) > Bank account number','Detail Record > Field No.6 > Originating account number','Bank account number related to customer',1,'AccountNum','','',0,0,'1','8',0,1]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UK-BACS-AR','TransactionCode','Transaction Code']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('UK-BACS-AR'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_BACS_AR();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-BACS-AR','TransactionCode','New DDI','0N']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-BACS-AR','TransactionCode','Cancel DDI','0C']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-BACS-AR','TransactionCode','Convert DDI','0S']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_BACS_AR</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_BACS_AR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-BACS-AR','UK-BACS-AR','BACS','TransactionCode','Transaction Code',0,'TransactionCode','',1,'','','Detail Record > Field No.04 > Transaction Code']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-BACS-AR','UK-BACS-AR','BACS','AuditPrintIdentifier','Audit Print Identifier',1,'AuditPrintIdentifier','',0,'','XXXX','UHL1 Record > Field No.10 > Audit Print Identifier']);
        
        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('UK-BACS-AR'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_UK_BACS_AR();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_UK_BACS_AR</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_UK_BACS_AR()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-BACS-AR','UK-BACS-AR','ServiceUserNumber','Service User Number',1,'ServiceUserNumber','',1,'','XXXXXX','VOL1 Record > Field No.06 > Service user number']);
        
        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        //container   conDelete;
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    public void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('UK-BACS-AR'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('ServiceUserNumber', gSKS_EFT_Bank.W01);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>