<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_EU_BNP_SWIFT_MT100</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_EU_BNP_SWIFT_MT100 Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_EU_BNP_SWIFT_MT100 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220726';
        dataContractVersion = '1.0';
        conFormatID = ['EU-BNP-SWIFT-MT100'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'EU - BNP - SWIFT - MT100',0,'','','EU-BNP-SWIFT-MT100',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'EU-BNP-SWIFT-MT100',1,1,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('EU-BNP-SWIFT-MT100'):
                paymSpecList = this.getPaymSpecsMetaData_EU_BNP_SWIFT_MT100();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_EU_BNP_SWIFT_MT100</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_EU_BNP_SWIFT_MT100()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Foreign payments',1,'FRGN-PMT','','FRGN-PMT','TRADE PAY',0,'EU-BNP-SWIFT-MT100',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('EU-BNP-SWIFT-MT100'):
                notesList = this.getNotesMetaData_EU_BNP_SWIFT_MT100();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_EU_BNP_SWIFT_MT100</Name>
				<Source><![CDATA[
    private container getNotesMetaData_EU_BNP_SWIFT_MT100()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['EU-BNP-SWIFT-MT100','FRGN-PMT','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('EU-BNP-SWIFT-MT100'):
                validationsList = this.getValidationsMetaData_EU_BNP_SWIFT_MT100();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_EU_BNP_SWIFT_MT100</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_EU_BNP_SWIFT_MT100()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-SWIFT-MT100','FRGN-PMT','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','File header Block > :5/50: > Bank Name','Name related to bank','15','WOrdPartyName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-SWIFT-MT100','FRGN-PMT','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','File header Block > :5/50: > Bank Country','Country related to bank','15','WOrdPartyCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-SWIFT-MT100','FRGN-PMT','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','File header Block > :5/50: > Bank Address','Address related to bank','15','WOrdPartyAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-SWIFT-MT100','FRGN-PMT','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','File header Block > :5/50: > Bank Address','Address related to bank','15','WOrdPartyAddr2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-SWIFT-MT100','FRGN-PMT','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','File header Block > :5/50: > Bank City','City related to bank','15','WOrdPartyCity','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-SWIFT-MT100','FRGN-PMT','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','File header Block > :5/50: > Bank postal code','ZipCode related to bank','15','WOrdPartyZipCode','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-SWIFT-MT100','FRGN-PMT','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Text Block > :52D: > Bank Account Number','Bank account number',0,'AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-SWIFT-MT100','FRGN-PMT','','Bank IBAN','Cash and bank management > Select bank account > edit > General tab > Identification(group) > IBAN','Text Block > :52D: > Bank IBAN','Bank IBAN',0,'BankIBAN','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-SWIFT-MT100','FRGN-PMT','','Vendor Bank name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Name','Text Block > :57D: > Beneficiary bank name','Beneficiary Bank Name','16','WBenBankName','','',1,'2',1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-SWIFT-MT100','FRGN-PMT','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > Address','Text Block > :57D: > Beneficiary Bank Address Line 1 Beneficiary Bank Address Line 2','Beneficiary Bank Address','16','WBenBankAddr','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-SWIFT-MT100','FRGN-PMT','','Vendor Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank (group) > City','Text Block > :57D: > Beneficiary Bank City','Beneficiary Bank City','16','WBenBankCity','','',1,'2',1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-SWIFT-MT100','FRGN-PMT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Text Block > :59: > Beneficiary Name','Name related to Vendor','16','WBeneName','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-SWIFT-MT100','FRGN-PMT','','Vendor Country Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Text Block > :59: > Beneficiary Country','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-SWIFT-MT100','FRGN-PMT','','Vendor Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Text Block > :59: > Beneficiary Address','Address related to vendor','16','WBeneAddr','','',0,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-SWIFT-MT100','FRGN-PMT','','Vendor Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Text Block > :59: > Beneficiary Address','Address related to vendor','16','WBeneAddr2','','',1,0,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-SWIFT-MT100','FRGN-PMT','','ZIP/Postal Code ','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Text Block > :59: > Beneficiary postal code','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['EU-BNP-SWIFT-MT100','FRGN-PMT','','City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Text Block > :59: > Beneficiary City','Vendor city','16','WBeneCity','','',0,0,1,'35',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['EU-BNP-SWIFT-MT100','PaymentType','Payment Type']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['EU-BNP-SWIFT-MT100','Charges','Charges']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-SWIFT-MT100','PaymentType','Standard order','N']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-SWIFT-MT100','PaymentType','Payments by telex or SWIFT','U']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-SWIFT-MT100','PaymentType','Promissory note ordinary shipment','A']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-SWIFT-MT100','PaymentType','Promissory note registered mail','B']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-SWIFT-MT100','PaymentType','Promissory note express delivery','C']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-SWIFT-MT100','PaymentType','Promissory note registered express','D']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-SWIFT-MT100','PaymentType','Promissory note issued to the payer','E']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-SWIFT-MT100','PaymentType','Promissory note issued to the payer registered','F']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-SWIFT-MT100','PaymentType','Promissory note issued to the payer registered express','G']);

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-SWIFT-MT100','Charges','Beneficiary','BN2']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-SWIFT-MT100','Charges','Payor','OUR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['EU-BNP-SWIFT-MT100','Charges','Shared','SHA']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('EU-BNP-SWIFT-MT100'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_EU_BNP_SWIFT_MT100();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_EU_BNP_SWIFT_MT100</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_EU_BNP_SWIFT_MT100()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-BNP-SWIFT-MT100','EU-BNP-SWIFT-MT100','FRGN-PMT','PaymentType','Payment Type',0,'PaymentType','',1,'','','Application Header > PaymentType']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-SWIFT-MT100','EU-BNP-SWIFT-MT100','FormatValidations','FRGN-PMT','16','WBenBankCountryRegionId']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-SWIFT-MT100','EU-BNP-SWIFT-MT100','FormatValidations','FRGN-PMT','16','WChargesIndic']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-SWIFT-MT100','EU-BNP-SWIFT-MT100','FormatValidations','FRGN-PMT','15','W01']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-SWIFT-MT100','EU-BNP-SWIFT-MT100','FormatValidations','FRGN-PMT','15','W02']);

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['EU-BNP-SWIFT-MT100','*','FormatLookup','*','*','']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('EU-BNP-SWIFT-MT100'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_EU_BNP_SWIFT_MT100();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_EU_BNP_SWIFT_MT100</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_EU_BNP_SWIFT_MT100()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-BNP-SWIFT-MT100','EU-BNP-SWIFT-MT100','References','References',1,'References','',0,'','XXXXXXXXXXXXXXXX','References']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['EU-BNP-SWIFT-MT100','EU-BNP-SWIFT-MT100','PayersReferences','Payers references',1,'PayersReferences','',0,'','XXXXXXXXXXXXXXXX','Payers references']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('EU-BNP-SWIFT-MT100'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('References', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('PayersReferences', gSKS_EFT_Bank.W02);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('EU-BNP-SWIFT-MT100'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>