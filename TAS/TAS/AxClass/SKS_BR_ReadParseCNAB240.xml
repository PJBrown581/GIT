<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_BR_ReadParseCNAB240</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// BR CNAB240 parse class
/// </summary>
class SKS_BR_ReadParseCNAB240 extends SKS_BR_ReadParseBase
{
    System.Text.StringBuilder gStringBuilder;
    real gCurrencyPrecision;
    



}
]]></Declaration>
		<Methods>
			<Method>
				<Name>GetInboundFile</Name>
				<Source><![CDATA[
    public SKS_BR_InboundFile GetInboundFile(SKS_EB_FilePathName _FilePathAndName, SKS_BF_BankIntType _SKS_BF_BankIntType = SKS_BF_BankIntType::FileHubLocal)
    {   
        this.InitializeFileInfo(_FilePathAndName);
        
        str locRecordDelimiter = '\n';
        str locFileName;
        str locCurrentRecord;
        str locRecordType;
        str locStmtNbr;
        
        
        if(gSKS_BF_BankIntType == SKS_BF_BankIntType::BankFabric)
        {
            locFileName = gSKS_EB_FilePathName;
        }
        else
        {
            locFileName = gSKS_EB_FileHub.fileName();
        }
        

        gSKS_EB_FileHub.runFileLoad(locFileName,gBRPreReadScript,gBRPreReadScriptParams,gBRPostReadScript,gBRPostReadScriptParams);
        gStringBuilder = new System.Text.StringBuilder(gSKS_EB_FileHub.fileBody());

        gStringBuilder = gStringBuilder.Replace('\r\n',locRecordDelimiter);
        gStringBuilder = gStringBuilder.replace('\n\r', locRecordDelimiter);
        gStringBuilder = gStringBuilder.replace('\r', locRecordDelimiter);
        System.String[] locSeparator = new System.String[1]();
        locSeparator.SetValue('\n',0);
        System.String[] locFileLines = gStringBuilder.ToString().Split(locSeparator,System.StringSplitOptions::None);
        gStringBuilder = new System.Text.StringBuilder();//blank this as it is no longer needed and it is sucking up memory

        for(int64 locLineCounter = gSKS_BR_FileFormat.OmitHeaderRecs; locLineCounter < locFileLines.Length - gSKS_BR_FileFormat.OmitTrailerRecs; locLineCounter++)
        {
            locCurrentRecord = locFileLines.GetValue(locLineCounter);
            if(strLen(locCurrentRecord) >= 8)
            {
                locRecordType = SKS_PP_StringFormats::strSub(locCurrentRecord,8,1);
                switch(locRecordType)
                {
                    case '0':
                        locStmtNbr = SKS_PP_StringFormats::strSub(locCurrentRecord, 158, 6); //expected 001333
                        gSKS_BR_InboundFile = new SKS_BR_InboundFile();
                        break;
                    case '1':
                        //LOT/BATCH(ACCOUNT) HEADED ACTIONS
                        this.processBatchHeader(locCurrentRecord, locStmtNbr);
                        break;
                    case '3':
                        //DETAIL ACTIONS
                        this.processDetailRecord(locCurrentRecord);
                        break;
                    case '5':
                        //LOT/BATCH(ACCOUNT) TRAILER ACTIONS
                        this.processBatchTrailer(locCurrentRecord);
                        break;
                    case '9':
                        //BATCH TRAILER ACTIONS
                        break;
                }
            }
        }

        return  gSKS_BR_InboundFile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processBatchHeader</Name>
				<Source><![CDATA[
    private void processBatchHeader(str _CurrentRecord, str _StmtNbr)
    {
        str locAccount = SKS_PP_StringFormats::strSub(_CurrentRecord,59,12); // EXPECTED: 
        str locCurrencyCode = SKS_PP_StringFormats::strSub(_CurrentRecord,171,3);
        
        gCurrencyPrecision = SKS_EB_Currency::getCurrencyPrecision(locCurrencyCode);
        gSKS_BR_InboundStmt = new SKS_BR_InboundStmt();
        gSKS_BR_InboundStmt.SetAccount(locAccount);
        gSKS_BR_InboundStmt.SetNbr(_StmtNbr);
        gSKS_BR_InboundStmt.SetCurrency(locCurrencyCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>processBatchTrailer</Name>
				<Source><![CDATA[
    private void processBatchTrailer(str _CurrentRecord)
    {
        str locStrDate = SKS_PP_StringFormats::strSub(_CurrentRecord,143,8);
        str locStrEndingBalance = SKS_PP_StringFormats::strSub(_CurrentRecord,151,18);
        str locStrCreditDebitChar = SKS_PP_StringFormats::strSub(_CurrentRecord,169,1);
        real locEndingBal;

        gSKS_BR_InboundStmt.SetDate(locStrDate, 123);
        locEndingBal = str2Num(locStrEndingBalance) / power(10,gCurrencyPrecision); 
        gSKS_BR_InboundStmt.SetEndingBalance(locEndingBal);
        gSKS_BR_InboundStmt.SetCrDtFlag(locStrCreditDebitChar);
        gSKS_BR_InboundStmt.SetIsCredit(strUpr(locStrCreditDebitChar) == 'C' ? true : false);
        gSKS_BR_InboundFile.PushStmt(gSKS_BR_InboundStmt);
    }

]]></Source>
			</Method>
			<Method>
				<Name>processDetailRecord</Name>
				<Source><![CDATA[
    private void processDetailRecord(str _CurrentRecord)
    {
        str locBankRefNbr = SKS_PP_StringFormats::strSub(_CurrentRecord,235,6);
        str locCustRefNbr = SKS_PP_StringFormats::strSub(_CurrentRecord,202,39);
        str locImportTransType = SKS_PP_StringFormats::strSub(_CurrentRecord,170,3);
        str locTransAmount = SKS_PP_StringFormats::strSub(_CurrentRecord,151,18);
        real locAmount;
        str locCreditDebitIdentifier = SKS_PP_StringFormats::strSub(_CurrentRecord,169,1);
        str locTransDate = SKS_PP_StringFormats::strSub(_CurrentRecord,143,8);
        str locValueDate = SKS_PP_StringFormats::strSub(_CurrentRecord,135,8);
        str locDesc = SKS_PP_StringFormats::strSub(_CurrentRecord,177,25);

        SKS_BR_InboundTran locSKS_BR_InboundTran = new SKS_BR_InboundTran();
        locSKS_BR_InboundTran.SetBankRefNbr(locBankRefNbr);
        locSKS_BR_InboundTran.SetCustRefNbr(locCustRefNbr);
        locSKS_BR_InboundTran.SetTranType(locImportTransType);
        locAmount = str2Num(locTransAmount) / power(10,gCurrencyPrecision);
        locSKS_BR_InboundTran.SetAmt(locAmount);
        locSKS_BR_InboundTran.SetCrDtFlag(locCreditDebitIdentifier);
        locSKS_BR_InboundTran.SetIsCredit(locCreditDebitIdentifier == 'C' ? true : false);
        locSKS_BR_InboundTran.SetDate(locTransDate, 123);
        locSKS_BR_InboundTran.SetValueDate(locValueDate, 123);
        locSKS_BR_InboundTran.SetDesc(locDesc);
        gSKS_BR_InboundStmt.PushTrans(locSKS_BR_InboundTran);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>