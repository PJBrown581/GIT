<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_SE_SWEDBANK_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_SE_SWEDBANK_XML Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_SE_SWEDBANK_XML Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220923';
        dataContractVersion = '1.0';
        conFormatID = ['SE-SWEDBANK-XML-LT', 'SE-SWEDBANK-XML-BALTIC'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,1,1,'','','','',0,'','','','',0,'SE - Swedbank - SEPA Credit Transfer - ISO20022 - Lithuania',0,'','','SE-SWEDBANK-XML-LT',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'SE-SWEDBANK-XML',1,0,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,1,1,'','','','',0,'','','','',0,'SE - Swedbank - ISO20022 - Baltic Countries',0,'','','SE-SWEDBANK-XML-BALTIC',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'SE-SWEDBANK-XML',1,0,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('SE-SWEDBANK-XML-LT'):
                paymSpecList = this.getPaymSpecsMetaData_SE_SWEDBANK_XML_LT();
                break;
            case ('SE-SWEDBANK-XML-BALTIC'):
                paymSpecList = this.getPaymSpecsMetaData_SE_SWEDBANK_XML_BALTIC();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_SE_SWEDBANK_XML_LT</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_SE_SWEDBANK_XML_LT()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Intrabank-Normal',1,'INTR-NORM','','INTR-NORM','TRADE PAY',0,'SE-SWEDBANK-XML-LT',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Swedbank-Normal',1,'SWED-NORM','','SWED-NORM','TRADE PAY',0,'SE-SWEDBANK-XML-LT',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Consolidated-Normal',1,'CONS-NORM','','CONS-NORM','TRADE PAY',0,'SE-SWEDBANK-XML-LT',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic-Normal',1,'DOM-NORM','','DOM-NORM','TRADE PAY',0,'SE-SWEDBANK-XML-LT',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic-Urgent',1,'DOM-URGP','','DOM-URGP','TRADE PAY',0,'SE-SWEDBANK-XML-LT',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'European-SEPA',1,'EUR-SEPA','','EUR-SEPA','TRADE PAY',0,'SE-SWEDBANK-XML-LT',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International-Normal',1,'INT-NORM','','INT-NORM','TRADE PAY',0,'SE-SWEDBANK-XML-LT',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International-Urgent',1,'INT-URGP','','INT-URGP','TRADE PAY',0,'SE-SWEDBANK-XML-LT',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International-Express',1,'INT-EXPR','','INT-EXPR','TRADE PAY',0,'SE-SWEDBANK-XML-LT',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_SE_SWEDBANK_XML_BALTIC</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_SE_SWEDBANK_XML_BALTIC()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Intrabank-Normal',1,'INTR-NORM','','INTR-NORM','TRADE PAY',0,'SE-SWEDBANK-XML-BALTIC',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Swedbank-Normal',1,'SWED-NORM','','SWED-NORM','TRADE PAY',0,'SE-SWEDBANK-XML-BALTIC',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Consolidated-Normal',1,'CONS-NORM','','CONS-NORM','TRADE PAY',0,'SE-SWEDBANK-XML-BALTIC',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic-Normal',1,'DOM-NORM','','DOM-NORM','TRADE PAY',0,'SE-SWEDBANK-XML-BALTIC',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic-Urgent',1,'DOM-URGP','','DOM-URGP','TRADE PAY',0,'SE-SWEDBANK-XML-BALTIC',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'European-SEPA',1,'EUR-SEPA','','EUR-SEPA','TRADE PAY',0,'SE-SWEDBANK-XML-BALTIC',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International-Normal',1,'INT-NORM','','INT-NORM','TRADE PAY',0,'SE-SWEDBANK-XML-BALTIC',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International-Urgent',1,'INT-URGP','','INT-URGP','TRADE PAY',0,'SE-SWEDBANK-XML-BALTIC',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'International-Express',1,'INT-EXPR','','INT-EXPR','TRADE PAY',0,'SE-SWEDBANK-XML-BALTIC',0,0,0,1,1,0,0,0,0,0,0,1,0,1,0,1,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('SE-SWEDBANK-XML-LT'):
                validationsList = this.getValidationsMetaData_SE_SWEDBANK_XML_LT();
                break;
            case ('SE-SWEDBANK-XML-BALTIC'):
                validationsList = this.getValidationsMetaData_SE_SWEDBANK_XML_BALTIC();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_SE_SWEDBANK_XML_LT</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_SE_SWEDBANK_XML_LT()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','15','WOrdPartySWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','15','WOrdPartySWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','15','WOrdPartySWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','15','WOrdPartySWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','15','WOrdPartySWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','15','WOrdPartySWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','15','WOrdPartySWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','15','WOrdPartySWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','15','WOrdPartySWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','SWIFT code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','23','WOrdPartySWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Debtor Id','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','23','WOrdPartyId','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank(account)','26','RegistrationNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','SWIFT code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','23','WOrdPartySWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Debtor Id','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','23','WOrdPartyId','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank(account)','26','RegistrationNum','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','SWIFT code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','23','WOrdPartySWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Debtor Id','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','23','WOrdPartyId','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank(account)','26','RegistrationNum','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','SWIFT code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','23','WOrdPartySWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Debtor Id','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','23','WOrdPartyId','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank(account)','26','RegistrationNum','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','SWIFT code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','23','WOrdPartySWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Debtor Id','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','23','WOrdPartyId','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank(account)','26','RegistrationNum','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','SWIFT code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','23','WOrdPartySWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Debtor Id','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','23','WOrdPartyId','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank(account)','26','RegistrationNum','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','SWIFT code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','23','WOrdPartySWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Debtor Id','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','23','WOrdPartyId','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank(account)','26','RegistrationNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','SWIFT code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','23','WOrdPartySWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Debtor Id','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','23','WOrdPartyId','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank(account)','26','RegistrationNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','SWIFT code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','23','WOrdPartySWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Debtor Id','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','23','WOrdPartyId','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank(account)','26','RegistrationNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','SWIFT code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','37','WOrdPartySWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Debtor Id','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','37','WOrdPartyId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Customer bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INTR-NORM','','Customer bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','SWIFT code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','37','WOrdPartySWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Debtor Id','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','37','WOrdPartyId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Customer bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','SWED-NORM','','Customer bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','SWIFT code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','37','WOrdPartySWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Debtor Id','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','37','WOrdPartyId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Customer bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','CONS-NORM','','Customer bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','SWIFT code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','37','WOrdPartySWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Debtor Id','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','37','WOrdPartyId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Customer bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-NORM','','Customer bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','SWIFT code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','37','WOrdPartySWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Debtor Id','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','37','WOrdPartyId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Customer bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','DOM-URGP','','Customer bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','SWIFT code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','37','WOrdPartySWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Debtor Id','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','37','WOrdPartyId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Customer bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','EUR-SEPA','','Customer bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','SWIFT code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','37','WOrdPartySWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Debtor Id','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','37','WOrdPartyId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Customer bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-NORM','','Customer bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','SWIFT code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','37','WOrdPartySWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Debtor Id','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','37','WOrdPartyId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Customer bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-URGP','','Customer bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','SWIFT code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','37','WOrdPartySWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Debtor Id','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','37','WOrdPartyId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Customer bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-LT','INT-EXPR','','Customer bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',1,1,'','',0,'6']);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_SE_SWEDBANK_XML_BALTIC</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_SE_SWEDBANK_XML_BALTIC()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','15','WOrdPartySWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','15','WOrdPartySWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','15','WOrdPartySWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','15','WOrdPartySWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','15','WOrdPartySWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','15','WOrdPartySWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','','3',1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','15','WOrdPartySWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','15','WOrdPartySWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','SWIFT code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','15','WOrdPartySWIFTNo','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Debtor Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Vendor','9','RegistrationNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to vendor','9','AccountNum','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','SWIFT code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','23','WOrdPartySWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Debtor Id','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','23','WOrdPartyId','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank(account)','26','RegistrationNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','SWIFT code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','23','WOrdPartySWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Debtor Id','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','23','WOrdPartyId','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank(account)','26','RegistrationNum','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','SWIFT code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','23','WOrdPartySWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Debtor Id','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','23','WOrdPartyId','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank(account)','26','RegistrationNum','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','SWIFT code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','23','WOrdPartySWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Debtor Id','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','23','WOrdPartyId','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank(account)','26','RegistrationNum','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','SWIFT code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','23','WOrdPartySWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Debtor Id','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','23','WOrdPartyId','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank(account)','26','RegistrationNum','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','SWIFT code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','23','WOrdPartySWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Debtor Id','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','23','WOrdPartyId','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank(account)','26','RegistrationNum','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','','3',1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','SWIFT code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','23','WOrdPartySWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Debtor Id','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','23','WOrdPartyId','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank(account)','26','RegistrationNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','SWIFT code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','23','WOrdPartySWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Debtor Id','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','23','WOrdPartyId','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank(account)','26','RegistrationNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','SWIFT code','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','23','WOrdPartySWIFTNo','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Debtor Id','TAS > Set up > Bank account > Select Bank to bank transfer > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','23','WOrdPartyId','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Bank(offset account) IBAN','Cash and bank management > Select bank account > edit > General (fast tab) IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related Bank(offset account)','24','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Bank(offset account) Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank(offset account)','24','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Bank(account) Swift number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > SWIFTNo','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId >BIC','Swift Code related Bank(account)','26','SWIFTNo','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Bank(account) Routing number','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Bank(account)','26','RegistrationNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Company(account LE) Name','Organization administration > Organization > Legal entities > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Company(account LE)','27','Name','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Bank(account) IBAN','Cash and bank management > Common > Bank accounts > Select the Bank > Edit the Bank Account > Select Additional identification (Fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Bank(account)','26','IBAN','','',0,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Bank(account) Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) > Account number','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Bank(account)','26','AccountNum','','',1,1,'','',0,'4','',0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','SWIFT code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','37','WOrdPartySWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Debtor Id','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','37','WOrdPartyId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Customer bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INTR-NORM','','Customer bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','SWIFT code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','37','WOrdPartySWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Debtor Id','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','37','WOrdPartyId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Customer bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','SWED-NORM','','Customer bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','SWIFT code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','37','WOrdPartySWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Debtor Id','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','37','WOrdPartyId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Customer bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','CONS-NORM','','Customer bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','SWIFT code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','37','WOrdPartySWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Debtor Id','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','37','WOrdPartyId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Customer bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-NORM','','Customer bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','SWIFT code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','37','WOrdPartySWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Debtor Id','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','37','WOrdPartyId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Customer bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','DOM-URGP','','Customer bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','SWIFT code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','37','WOrdPartySWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Debtor Id','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','37','WOrdPartyId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Customer bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','EUR-SEPA','','Customer bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','','3',1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','SWIFT code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','37','WOrdPartySWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Debtor Id','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','37','WOrdPartyId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Customer bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-NORM','','Customer bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','SWIFT code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','37','WOrdPartySWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Debtor Id','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','37','WOrdPartyId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Customer bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-URGP','','Customer bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','SWIFT code','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Initiating party ','Dbtr > Id > Orgid > BICOrBEI','WordParty SWIFT code','37','WOrdPartySWIFTNo','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Debtor Id','TAS > Set up > Bank account > Select Customer reimbursement > Wire/IAT ordering party(Fast tab) > Bank Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','37','WOrdPartyId','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Bank Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift Code','PmtInf > DbtrAgt >  FinInstnId > BIC','Bank Swift Code',0,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Swift Code','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt > FinInstnId > BIC','Swift Code related to Customer',1,'SWIFTNo','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Routing number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Routing number','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > MmbId','Routing number related to Customer',1,'RegistrationNum','','',1,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Name','TAS > Common > Customer eBanking details > Customer reimbursement > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Customer','35','WBeneName','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Customer bank IBAN','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > edit > Additional Identification (fast tab) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to Customer',1,'BankIBAN','','',0,1,'','',0,'6']);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['SE-SWEDBANK-XML-BALTIC','INT-EXPR','','Customer bank Account Number','TAS > Common > Customer eBanking details > Customer reimbursement > Customer bank accounts > General tab > Identification(group) > Bank Account Number ','PmtInf > CdtTrfTxInf > CdtrAcct > Id > Othr > Id','Account Number related to Customer',1,'AccountNum','','',1,1,'','',0,'6']);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['SE-SWEDBANK-XML','Charges','Charges']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['SE-SWEDBANK-XML','Charges','BornebyDebtor','DEBT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['SE-SWEDBANK-XML','Charges','BornebyCreditor','CRED']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['SE-SWEDBANK-XML','Charges','Shared','SHAR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['SE-SWEDBANK-XML','Charges','Service Level','SLEV']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('SE-SWEDBANK-XML-LT'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_SE_SWEDBANK_XML_LT();
                break;
            case ('SE-SWEDBANK-XML-BALTIC'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_SE_SWEDBANK_XML_BALTIC();
                break;
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_SE_SWEDBANK_XML_LT</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_SE_SWEDBANK_XML_LT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-LT','INTR-NORM','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-LT','SWED-NORM','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-LT','CONS-NORM','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-LT','DOM-NORM','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-LT','DOM-URGP','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-LT','INT-NORM','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-LT','INT-URGP','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-LT','INT-EXPR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_SE_SWEDBANK_XML_BALTIC</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_SE_SWEDBANK_XML_BALTIC()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-BALTIC','INTR-NORM','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-BALTIC','SWED-NORM','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-BALTIC','CONS-NORM','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-BALTIC','DOM-NORM','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-BALTIC','DOM-URGP','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-BALTIC','INT-NORM','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-BALTIC','INT-URGP','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-BALTIC','INT-EXPR','Charges','Charges',0,'Charges','',0,'','','CdtTrfTxInf > ChrgBr']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['SE-SWEDBANK-XML','*','FormatLookup','*','*','']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['SE-SWEDBANK-XML','*','FormatValidations','*','15','W02']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['SE-SWEDBANK-XML','*','FormatValidations','*','23','W02']);
        deleteList = ConIns(deleteList,conLen(deleteList)+1,['SE-SWEDBANK-XML','*','FormatValidations','*','37','W02']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['SE-SWEDBANK-XML','Btchbkg','Batch booking(Y/N)']);

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['SE-SWEDBANK-XML','Btchbkg','Y','Y']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['SE-SWEDBANK-XML','Btchbkg','N','N']);

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('SE-SWEDBANK-XML-LT'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_SE_SWEDBANK_XML_LT();
                break;
            case ('SE-SWEDBANK-XML-BALTIC'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_SE_SWEDBANK_XML_BALTIC();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_SE_SWEDBANK_XML_LT</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_SE_SWEDBANK_XML_LT()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-LT','InitiatingPartyId','Initiating Party',1,'InitiatingPartyId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > Orgid > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-LT','Btchbkg','Batch booking(Y/N)',0,'Btchbkg','',0,'','','PmtInf > BtchBookg']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_SE_SWEDBANK_XML_BALTIC</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_SE_SWEDBANK_XML_BALTIC()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-BALTIC','InitiatingPartyId','Initiating Party',1,'InitiatingPartyId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','GrpHdr > InitgPty > Id > Orgid > Othr > Id']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-BALTIC','Btchbkg','Batch booking(Y/N)',0,'Btchbkg','',0,'','','PmtInf > BtchBookg']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['SE-SWEDBANK-XML','SE-SWEDBANK-XML-BALTIC','DbtragtId','DbtrAgt ID',1,'DbtragtId','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','Dbtragt > FinInstnId > Othr > Id']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('SE-SWEDBANK-XML-LT'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('InitiatingPartyId', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('Btchbkg', gSKS_EFT_Bank.W02, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBTBBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the BTB bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBTBBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('SE-SWEDBANK-XML-LT'):
                if(gSKS_EFTBTB_Bank.W01)
                {
                    this.updateBTBBankFields('InitiatingPartyId', gSKS_EFTBTB_Bank.W01);
                }
                if(gSKS_EFTBTB_Bank.W02)
                {
                    this.updateBTBBankFields('Btchbkg', gSKS_EFTBTB_Bank.W02, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCNPBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the CNP bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateCNPBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('SE-SWEDBANK-XML-LT'):
                if(gSKS_EFTCNP_Bank.W01)
                {
                    this.updateCNPBankFields('InitiatingPartyId', gSKS_EFTCNP_Bank.W01);
                }
                if(gSKS_EFTCNP_Bank.W02)
                {
                    this.updateCNPBankFields('Btchbkg', gSKS_EFTCNP_Bank.W02, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('SE-SWEDBANK-XML-LT'):
                if(gSKS_EFT_VendorPaym.WChargesIndic)
                {
                    this.updateVendorFields('Charges', gSKS_EFT_VendorPaym.WChargesIndic, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCustReimbursementCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating Customer reimbursement code lookpus from Legacy code loookups
    /// </summary>
    protected void updateCustReimbursementCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('SE-SWEDBANK-XML-LT'):
                if(gSKS_EFT_CustReimbursementPaym.WChargesIndic)
                {
                    this.updateCustReimbursementFields('Charges', gSKS_EFT_CustReimbursementPaym.WChargesIndic);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>