<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_AT_RAIFFEISENBANK_CFD</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_AT_RAIFFEISENBANK_CFD extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_AT_RAIFFEISENBANK_CFD extends SKS_EFT_Format
{
    #define.FormatVersion('20220727')
    #define.DOM('DOM')
    #define.UDOM('UDOM')

    BankAccountTable mBankAccountTable;
    int countOrders;
    VendBankAccount    mVendBankAccount;    //SKS#VSTS:14591
    int numOfPayments;  
  
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;   //SKS#DevOps:15591 -->

        select COUNT(InvoiceOrigAmountCur), SUM(InvoiceSettleAmountPmtCur) from tmpSKS_EFT_FileDetail
            where
                tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary;

        numOfPayments = any2Int(tmpSKS_EFT_FileDetail.InvoiceOrigAmountCur);  //SKS#DevOps:15591 <--
        
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();

            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            // Get Bank account
            if(mBankAccountTable.AccountID != mSKS_EFT_FileDetail.BankAccountId)
            {
                // Get SKS_EFT_Bank
                this.getSKS_EFT_Bank();
    
                // Get Bank account
                mBankAccountTable = BankAccountTable::find(mSKS_EFT_FileDetail.BankAccountId);               
            }
            
            this.rec_HD();
            this.rec_KC();
            this.rec_UD();
            this.rec_DI();
            this.rec_UK();
            this.rec_AK();
            this.rec_KI();
            this.rec_EC();
            this.rec_ZK();
            this.rec_AV();
           
            if(numOfPayments == 1)  //SKS#DevOps:15591
            {                       
                if (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #UDOM)
                {
                    this.rec_S0();
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DOM)
                {
                    this.rec_S1();
                }
            
                this.rec_S3();  //SKS_VSTS_14868
            }

            numOfPayments--;

            next mSKS_EFT_FileDetail;
        }        
              
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVendBankAccount</Name>
				<Source><![CDATA[
    private void getVendBankAccount()               //SKS#VSTS:14591
    {
        if(mVendBankAccount.AccountID != mSKS_EFT_FileDetail.DepBankAccountId || mVendBankAccount.VendAccount != mSKS_EFT_FileDetail.AccountNum)
        {
            mVendBankAccount = VendBankAccount::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum, mSKS_EFT_FileDetail.DepBankAccountId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_HD</Name>
				<Source><![CDATA[
    boolean rec_HD()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        countOrders++;
        
        //1     Tag
        sb.Append('HD:');

        // 2    Payment type
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #DOM)
        {
            sb.Append('11');
        }
        else
        {
            sb.Append('01');
        }

        sb.Append(' ');

        // 3    Date of order
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(mSKS_EFT_FileDetail.PaymentTransDate));       //SKS#DevOps:15375
        sb.Append(' ');

        // 4    Ordering party bank code
        sb.Append(subStr(mBankAccountTable.RegistrationNum,1,7));
        sb.Append(' ');

        // 5    Payment order serial number
        sb.Append(num2str(countOrders,0,0,0,0));
        sb.Append(' ');

        // 6    PartnerÂ´s bank code
        sb.Append(subStr(mSKS_EFT_FileDetail.DepBankTransit,1,7));
        
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_KC</Name>
				<Source><![CDATA[
    boolean rec_KC()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        // 1    Tag
        sb.Append('KC:');

        // 2    Amount
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur), 15));
        sb.Append(' ');

        // 3    Fixed field
        sb.Append('000000');
        sb.Append(' ');

        // 4    Currency ISO code
        sb.Append('CZK');
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_UD</Name>
				<Source><![CDATA[
    boolean rec_UD()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        // 1    Tag
        sb.Append('UD:');

        // 2    Ordering Party Pre-account number
        sb.Append(SKS_EFT_Format::getCodelookupvalue('OrderingPrtyAccNum', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        sb.Append(' ');

        // 3    Ordering party Account number
        sb.Append(subStr(mSKS_EFT_FileDetail.BankBankAcct,1, 10));
        sb.Append(' ');

        // 4    Short description of ordering party account
        sb.Append('');

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_DI</Name>
				<Source><![CDATA[
    boolean rec_DI()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        // 1    Tag
        sb.Append('DI:');
        
        // 2     Ordering party details 1
        sb.Append(this.CharacterReplacement(subStr(CompanyInfo::findRecId(CompanyInfo::current()).Name, 1, 35)));
        
        // 3     Ordering party details 2
       
        // 3     Ordering party details 3
        
        // 4     Ordering party details 4
       
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_UK</Name>
				<Source><![CDATA[
    boolean rec_UK()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        // 1    Tag
        sb.Append('UK:');

        // 2     Partner Pre-account
        sb.Append(SKS_EFT_Format::getCodelookupvalue('PartnerPreAccnt', mSKS_EFT_FileDetail.RecId));
        sb.Append(' ');

        // 3    Partner Account number
        sb.Append(subStr(mSKS_EFT_FileDetail.DepBankAcct,1,10));//SKS_VSTS_14868
        sb.Append(' ');

        // 4    Partner account short description
        sb.Append('');

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_AK</Name>
				<Source><![CDATA[
    boolean rec_AK()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        // 1    Tag
        sb.Append('AK:');

        // 2     Specific symbol
        sb.Append('0');

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_KI</Name>
				<Source><![CDATA[
    boolean rec_KI()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        // 1    Tag
        sb.Append('KI:');

        // 2    Partner details 1
        sb.Append(this.CharacterReplacement(subStr(strUpr(mSKS_EFT_VendorPaym.WBeneName), 1, 35)));
        
        // 3     Partner details 2
        sb.Append('   ');
        
        // 4    Partner details 3
        sb.Append('   ');
        
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_EC</Name>
				<Source><![CDATA[
    boolean rec_EC()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        // 1    Tag
        sb.Append('EC:');

        this.getVendBankAccount();          //SKS#VSTS:14591

        if(mVendBankAccount.BankConstantSymbol) //SKS#VSTS:15106
        {
            // 2     Constant symbol
            sb.Append(SKS_PP_StringFormats::strFill(4, int642Str(mVendBankAccount.BankConstantSymbol), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));         //SKS#VSTS:14591
        }
        else
        {
            sb.Append('0');
        }

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_ZK</Name>
				<Source><![CDATA[
    boolean rec_ZK()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        select firstonly invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId;

        // 1    Tag
        sb.Append('ZK:');

        // 2    Payment details 1
        if(invSKS_EFT_FileDetail.PaymId)        //SKS#DevOps:15703
        {
            sb.Append(this.CharacterReplacement(subStr(invSKS_EFT_FileDetail.PaymId, 1, 10)));
        }
        else
        {
            sb.Append('0');
        }

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_AV</Name>
				<Source><![CDATA[
    boolean rec_AV()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str invoiceDetails;

        invoiceDetails = strUpr(this.getInvoiceNbrs());

        // 1    Tag
        sb.Append('AV:');
        sb.Append(this.CharacterReplacement(subStr(strUpr(invoiceDetails), 1, 35)));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_S0</Name>
				<Source><![CDATA[
    boolean rec_S0()
    {
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        // 1    Tag
        sb.Append('S0:');

        // Select count and sum for this file
        select COUNT(InvoiceOrigAmountCur), SUM(InvoiceSettleAmountPmtCur) from tmpSKS_EFT_FileDetail
            where
                tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary&&
                tmpSKS_EFT_FileDetail.BankAccountId == mSKS_EFT_FileDetail.BankAccountId;
        // 2    Number of urgent credit transfers within payment file
        sb.Append(SKS_PP_StringFormats::strFill(9,num2Str(tmpSKS_EFT_FileDetail.InvoiceOrigAmountCur,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(' ');

        // 3    Total amount of urgent credit transfers within payment file
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur), 15));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_S1</Name>
				<Source><![CDATA[
    boolean rec_S1()
    {
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        // 1    Tag
        sb.Append('S1:');

        // Select count and sum for this file
        select COUNT(InvoiceOrigAmountCur), SUM(InvoiceSettleAmountPmtCur) from tmpSKS_EFT_FileDetail
            where
                tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary&&
                tmpSKS_EFT_FileDetail.BankAccountId == mSKS_EFT_FileDetail.BankAccountId;
        // 2    Number of credit transfers within payment file
        sb.Append(SKS_PP_StringFormats::strFill(9,num2Str(tmpSKS_EFT_FileDetail.InvoiceOrigAmountCur,0,0,0,0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(' ');

        // 3    Total amount of credit transfers within payment file
        sb.Append(SKS_PP_StringFormats::strMoney(this.getPositiveAmount(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur), 15));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_S3</Name>
				<Source><![CDATA[
    boolean rec_S3()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        // 1    Tag
        sb.Append('S3:');

        // Select count and sum for this file
        
        // 2    Number of credit transfers within payment file
        sb.Append(SKS_PP_StringFormats::strFill(9, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 3    Total amount of credit transfers within payment file
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceNbrs</Name>
				<Source><![CDATA[
    protected str getInvoiceNbrs()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str invString;
    
        select InvoiceNumber from invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId;
    
        while(invSKS_EFT_FileDetail)
        {
            if(invSKS_EFT_FileDetail.InvoiceNumber == '')
            {
                // If no invoice number, go to next record
                next invSKS_EFT_FileDetail;
                continue;
            }
            sb.Append(invSKS_EFT_FileDetail.InvoiceNumber);
    
            next invSKS_EFT_FileDetail;
    
            if(invSKS_EFT_FileDetail)
            {
                sb.Append(', ');
            }
        }
    
        invString = this.CharacterReplacement(sb.ToString());
        return invString;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>