<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_SCF_RF_Format_BOA_ACK</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_SCF_RF_Format_BOA_ACK extends SKS_SCF_RF_Format
/// </summary>
class SKS_SCF_RF_Format_BOA_ACK extends SKS_SCF_RF_Format
{
    //Class Variables
    //primities
    boolean gErrorsExist;
    str mFileName;
    str mFileID;
    str mFieldDelimiter;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFile</Name>
				<Source><![CDATA[
    public SKS_SCF_RF_File getFile(str _filename, boolean _serverPath)
    {
        CommaStreamIo locCommaStreamIo;
        container locRecord;
        System.String locString1;
        SKS_EB_FileHub fileHub = SKS_EB_FileHub::construct();
        //Setup filestream
        fileHub.setFileName(_filename);
        fileHub.runFileLoad(_filename);
        fileHub.streamInit();
        locCommaStreamIo = CommaStreamIo::ConstructForRead(fileHub.StreamGet());
        
        locCommaStreamIo.inFieldDelimiter(',');
        locCommaStreamIo.inRecordDelimiter('\r\n');

        if(!mSKS_SCF_RF_File)
        {
            mSKS_SCF_RF_File = new SKS_SCF_RF_File();
        }

        mSKS_SCF_RF_SentFile = new SKS_SCF_RF_SentFile();

        mSKS_SCF_RF_SentFile = new SKS_SCF_RF_SentFile();

        while(locCommaStreamIo.status() == IO_Status::Ok)
        {
            locRecord = locCommaStreamIo.read();

            locString1 = strLRTrim(conPeek(locRecord, 3));

            if(!System.String::IsNullOrEmpty(locString1))
            {
                this.processNode(locRecord);
            }

        }

        if(locCommaStreamIo)
        {
            locCommaStreamIo.finalize();
            locCommaStreamIo = null;
        }
    
        if(gErrorsExist)
        {
            mSKS_SCF_RF_File = null;
        }

        return this.getSKS_SCF_RF_File();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processNode</Name>
				<Source><![CDATA[
    private void processNode(container locRecord)
    {
        mSKS_SCF_RF_Transaction = new SKS_SCF_RF_Transaction();
        if(mSKS_SCF_RF_Transaction != null)
        {
            mSKS_SCF_RF_SentFile.addTransaction(mSKS_SCF_RF_Transaction);
        }

        mSKS_SCF_RF_Transaction.GetVendAccount(conPeek(locRecord, 6));
        mSKS_SCF_RF_Transaction.GetInvoiceNum(conPeek(locRecord, 4));
        mSKS_SCF_RF_Transaction.GetFundedCurr(conPeek(locRecord, 2));
        mSKS_SCF_RF_Transaction.GetInvoiceAmount(conPeek(locRecord, 3));
        mSKS_SCF_RF_Transaction.GetDueDate(str2Date(conPeek(locRecord, 5), 321));
        mSKS_SCF_RF_Transaction.GetClientNum(conPeek(locRecord, 1));

        if(conPeek(locRecord, 8) == 'R')
        {
            mSKS_SCF_RF_Transaction.GetInvoiceStatus('0');
        }
        else
        {
            mSKS_SCF_RF_Transaction.GetInvoiceStatus('1');
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatId</Name>
				<Source><![CDATA[
    public str getFormatId(str _filename, boolean _serverPath)
    {
        str rtnval = '';
        int classId;
        CommaStreamIo locCommaIo;
        int i;  //index of the current location in the container
        container locRecord;
        System.String locString1, locString2, locString3, locString4;
        SKS_EB_FileHub fileHub = SKS_EB_FileHub::construct();
        
        //Setup filestream
        fileHub.setFileName(_filename);
        fileHub.runFileLoad(_filename);
        fileHub.streamInit();
        locCommaIo = CommaStreamIo::ConstructForRead(fileHub.StreamGet());
        mFieldDelimiter = ',';
        locCommaIo.inFieldDelimiter(mFieldDelimiter);
        locCommaIo.inRecordDelimiter('\n');

        while(locCommaIo.status() == IO_Status::Ok)
        {
            locRecord = locCommaIo.read();

            if(conLen(locRecord) > 0)
            {
                for(i = 1; i <= conLen(locRecord); i++)
                {
                    locRecord = conPoke(locRecord, i, strRem(conPeek(locRecord,i), '\r\n'));
                }

                
                locString1 = strLRTrim(conPeek(locRecord, 3));
                locString2 = strLRTrim(conPeek(locRecord, 4));
                locString3 = strLRTrim(conPeek(locRecord, 5));
                locString4 = strLRTrim(conPeek(locRecord, 6));
                
                if(locString1   &&
                   locString2   &&
                   locString3   &&
                   locString4)
                {
                    break;
                }
            }
        }

        if (locString1   &&
            locString2   &&
            locString3   &&
            locString4)
        {
            //ALl Qualifers show this a
            classId = classIdGet(this);
            rtnval = classId2Name(ClassId);
        }
        if(locCommaIo)
        {
            locCommaIo.finalize();
            locCommaIo = null;
        }

        return rtnval;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSKS_SCF_RF_File</Name>
				<Source><![CDATA[
    public SKS_SCF_RF_File getSKS_SCF_RF_File()
    {

        if(mSKS_SCF_RF_SentFile != null)
        {
            mSKS_SCF_RF_File.addSentFile(mSKS_SCF_RF_SentFile);
            mSKS_SCF_RF_SentFile = null;
        }

        return mSKS_SCF_RF_File;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>