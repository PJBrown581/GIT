<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_FIFTHTHIRD</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_FIFTHTHIRD Extends SKS_PP_Format_BankGroup
{
    int mIssueCnt;
    str mCurrAcct;
    str mBankNumber;
    real mVoidAmt;
    int mVoidCnt;
    real mTrailVoidAmt;
    real mTrailIssueAmt;
    int mTrailerCnt;
    int mTotalCnt;
    real mTotalVoidAmt;
    real mTotalIssueAmt;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    //Fifth Third Bank Detail Spec
    //
    //01-02  Detail Indicator
    //03-05  Bank Number
    //06-15  Account Number
    //16-25  Serial/Check Number
    //26-33  Issue Date of Check  YYYYMMDD
    //34-44  Amount
    //45-59  Addiiontal Data
    //60-60  Void Indicator
    //61-140 Payee
    protected str txtDetail()
    {
        str ItemType;
        int Mult;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        SKS_PP_Bank bSKS_PP_Bank;
        container company;
        ;
    
        company = [mSKS_PP_FileDetail.ChkCpnyId];
        select crossCompany:company  PP01 from bSKS_PP_Bank where bSKS_PP_Bank.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;
        mBankNumber = bSKS_PP_Bank.PP01;
    
        Mult = 1;
        if (mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
        }
        else
        {
            ItemType = ' ';
        }
    
        mIssueCnt++;
    
        mCurrAcct = mSKS_PP_FileDetail.BnkBankAcct;
    
        sb.Append('10');
        sb.Append(SKS_PP_StringFormats::strFill(3, bSKS_PP_Bank.PP01, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_PP_FileDetail.ChkDocDate));
    
        if (mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            sb.Append(SKS_PP_StringFormats::strMoney(mSKS_PP_FileDetail.ChkCuryAmt, 11));
    
            mVoidAmt = mVoidAmt + mSKS_PP_FileDetail.ChkCuryAmt;
            mVoidCnt++;
            mTrailVoidAmt = mTrailVoidAmt + mSKS_PP_FileDetail.ChkCuryAmt;
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strMoney(Mult * mSKS_PP_FileDetail.ChkCuryAmt, 11));
    
            mTrailIssueAmt = mTrailIssueAmt + mSKS_PP_FileDetail.ChkCuryAmt;
        }
    
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(ItemType);
        sb.Append(SKS_PP_StringFormats::strFill(80, mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        mTrailerCnt++;
        mTotalCnt++;
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtFormatTrailer</Name>
				<Source><![CDATA[
    // Fifth Thrid Format
    // 01-02  File Record Indicator
    // 03-05  Bank Number
    // 06-15  Filler (All 9's)
    // 16-25  Number of Checks in File
    // 26-33  File Date YYYYMMDD
    // 45-140 Filler of spaces
    protected str txtFormatTrailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        sb.Append('30');
        sb.Append(SKS_PP_StringFormats::strFill(3, mBankNumber, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append('9999999999');
        sb.Append(SKS_PP_StringFormats::strFill(10, int2str(mTotalCnt), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));
        sb.Append(SKS_PP_StringFormats::strMoney(mTotalIssueAmt + mTotalVoidAmt, 11));
        sb.Append(SKS_PP_StringFormats::strFill(96, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    // Fifth Third Format
    // 01-02  Account Total Indicator
    // 03-05  Bank Number
    // 06-15  Account Number
    // 16-25  Number of Checks for the Account
    // 26-33  File Date YYYYMMDD
    // 34-44  Amount of Checks for the Account
    // 45-140 Filler of spaces
    protected str txtGroupTrailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        sb.Append('20');
        sb.Append(SKS_PP_StringFormats::strFill(3, mBankNumber, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, mCurrAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, int2str(mTrailerCnt), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strDateYYYYMMDD(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));
        sb.Append(SKS_PP_StringFormats::strMoney(mTrailIssueAmt + mTrailVoidAmt, 11));
        sb.Append(SKS_PP_StringFormats::strFill(96, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        mTotalIssueAmt = mTotalIssueAmt + mTrailIssueAmt;
        mTotalVoidAmt = mTotalVoidAmt + mTrailVoidAmt;
    
        mTrailerCnt = 0;
        mTrailIssueAmt = 0;
        mTrailVoidAmt = 0;
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>