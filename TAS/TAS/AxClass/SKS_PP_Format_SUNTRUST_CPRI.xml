<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_SUNTRUST_CPRI</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_SUNTRUST_CPRI Extends SKS_PP_Format_BankGroup
{
    int NbrBatchesTot;
    real Nbr99Recs;

    real AmtItemsBatch;
    real AmtItemsTot;

    str holdBnkBankAcct;

    int printFooter;



    int TotalCnt;
    real TotalVoidAmt;
    real TotalIssueAmt;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setOrderBy</Name>
				<Source><![CDATA[
    protected SKS_PP_OrderBy setOrderBy()
    {
        return SKS_PP_OrderBy::BankAcct_ChkType_RefNbr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    /*
    ' SunTrust
    ' Courtesy of Universal Health
    
    ' Account Detail Record (Issue Item) - *10
    ' Pos 01-03     3       Literal - *10
    ' Pos 04-13     10      Account Number - LJ
    ' Pos 14-23     10      Check Serial Number - RJ-LZF
    ' Pos 24-34     11      Check Amount
    ' Pos 35-49     15      Additional Data
    ' Pos 50-58     9       Funding Source - Literal 111111111
    ' Pos 59-80     22      Filler
    
    ' Account Detail Record (First Payee Name Transaction) - *61
    ' Pos 81-83     3       Literal - *61
    ' Pos 84-93     10      Account Number - LJ
    ' Pos 94-103    10      Check Serial Number - RJ-LZF
    ' Pos 104-114   11      Check Amount
    ' Pos 115-154   40      Payee Name
    ' Pos 155-160   6       Filler
    ' Pos 161-240   80      Not USED so Space fill
    
    ' Account Detail Record (Cancel/Void) - *26
    ' Pos 01-03     3       Literal - *26
    ' Pos 04-13     10      Account Number - LJ
    ' Pos 14-23     10      Check Serial Number - RJ-LZF
    ' Pos 24-29     6       Transaction Date (should be spaces)
    ' Pos 30-80     211     Filler
    
    */
    protected str txtDetail()
    {
        str ItemType;
        int Mult;
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
             // Convert negative void numbers to positives
        Mult = 1;
        if (mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
            if (mSKS_PP_FileDetail.ChkCuryAmt < 0)
            {
                Mult = -1;
            }
        }
        else
        {
            ItemType = ' ';
        }
    
        if(ItemType == ' ')
        {
            sb.Append('*10');
            sb.Append(SKS_PP_StringFormats::strFill(10,strLTrim(StrRTrim(mSKS_PP_FileDetail.BnkBankAcct)),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Left));
            sb.Append(SKS_PP_StringFormats::strFill(10,strLtrim(strRTrim(mSKS_PP_FileDetail.ChkRefNbr)),SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            sb.Append(SKS_PP_StringFormats::strMoney(Mult * mSKS_PP_FileDetail.ChkCuryAmt, 11));
            sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
            sb.Append('111111111');
            sb.Append(SKS_PP_StringFormats::strFill(22, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            sb.Append('*61');
            sb.Append(SKS_PP_StringFormats::strFill(10,strLTrim(StrRTrim(mSKS_PP_FileDetail.BnkBankAcct)),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Left));
            sb.Append(SKS_PP_StringFormats::strFill(10,strLtrim(strRTrim(mSKS_PP_FileDetail.ChkRefNbr)),SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            sb.Append(SKS_PP_StringFormats::strMoney(Mult * mSKS_PP_FileDetail.ChkCuryAmt, 11));
            sb.Append(SKS_PP_StringFormats::strFill(40,mSKS_PP_FileDetail.VendName,SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            sb.Append(SKS_PP_StringFormats::strFill(6,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            sb.Append(SKS_PP_StringFormats::strFill(80,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
    
            AmtItemsBatch = AmtItemsBatch + mSKS_PP_FileDetail.ChkCuryAmt;
            AmtItemsTot = AmtItemsTot + mSKS_PP_FileDetail.ChkCuryAmt;
            holdBnkBankAcct = mSKS_PP_FileDetail.BnkBankAcct;
        }
        else
        {
            sb.Append('*26');
            sb.Append(SKS_PP_StringFormats::strFill(10,strLTrim(StrRTrim(mSKS_PP_FileDetail.BnkBankAcct)),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Left));
            sb.Append(SKS_PP_StringFormats::strFill(10,strLtrim(strRTrim(mSKS_PP_FileDetail.ChkRefNbr)),SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
            sb.Append(SKS_PP_StringFormats::strFill(217, '', SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Right));
        }
    
        Nbr99Recs++;
        TotalCnt++;
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtFormatTrailer</Name>
				<Source><![CDATA[
    /*
    ' SunTrust-CPR
    ' Courtesy of Universal Healthcare
    
    ' File Trailer Record
    
    ' Pos 01-03     3       Literal - *99
    ' Pos 04-13     10      Account Number - LJ
    ' Pos 14-23     10      Serial Number - Literal 9999999999
    ' Pos 24-25     2       Number batches - Number of '00' records
    ' Pos 26-34     9       Number Items - Number of all records (*00, *10, *26, *98. *99, NOT *61)
    ' Pos 35-45     11      Amount Items - Amount of Issue Items
    ' Pos 46-80     195     Filler
    */
    protected str txtFormatTrailer()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        sb.Append('*99');
        sb.Append(SKS_PP_StringFormats::strFill(10,holdBnkBankAcct,SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Left));
        sb.Append('9999999999');
        sb.Append(SKS_PP_StringFormats::strFill(2,int2str(NbrBatchesTot),SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(9,num2str(Nbr99Recs + (2 * NbrBatchesTot) + 1,0,0,1,0),SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(AmtItemsTot,11));
        sb.Append(SKS_PP_StringFormats::strFill(195,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Left));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupHeader</Name>
				<Source><![CDATA[
    /*
    ' SunTrust-CPR
    ' Courtesy of Universal Healthcare
    
    ' Account Batch Header
    
    ' Pos 01-03     3       Literal - *00
    ' Pos 04-13     10      Account Number - LJ
    ' Pos 14-23     10      Serial Number - Literal 0000000000
    ' Pos 24-26     3       Bank Number
    ' Pos 27-32     6       Issue Date MMDDYY (use Effective Date)
    ' Pos 33-80     208     Filler
    
    */
    protected str txtGroupHeader()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        SKS_PP_Bank bSKS_PP_Bank;
        Container company;
    
        ;
    
       // select bFileFormat where bFileFormat.FormatId == mSKS_PP_FileDetail.FormatId;
        company = [mSKS_PP_FileDetail.ChkCpnyId];
        select crossCompany:company PP01 from bSKS_PP_Bank where bSKS_PP_Bank.BankAccountId == mSKS_PP_FileDetail.chkBankAcct;
    
        sb.Append('*00');
        sb.Append(SKS_PP_StringFormats::strFill(10,mSKS_PP_FileDetail.BnkBankAcct,SKS_PP_FillCharacter::Space,SKS_PP_FillSide::left));
        sb.Append('0000000000');
        sb.Append(SKS_PP_StringFormats::strFill(3,bSKS_PP_Bank.PP01,SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())));
        sb.Append(SKS_PP_StringFormats::strFill(208,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Left));
    
        NbrBatchesTot++;
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    /*
    ' Pos 01-03     3       Literal - *98
    ' Pos 04-13     10      Account Number - LJ
    ' Pos 14-23     10      Serial Number - Literal 9999999998
    ' Pos 24-25     2       Number batches  - Literal 01
    ' Pos 26-34     9       Number of Items - total records 00 - 98 (including 10/26)
    ' Pos 35-45     11      Amount Items
    ' Pos 46-80     195     Filler
    */
    protected str txtGroupTrailer()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        TotalCnt = TotalCnt +2;
    
        sb.Append('*98');
        sb.Append(SKS_PP_StringFormats::strFill(10,strLTrim(StrRTrim(holdBnkBankAcct)),SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Left));
        sb.Append('9999999998');
        sb.Append('01');
        sb.Append(SKS_PP_StringFormats::strFill(9,int2str(TotalCnt),SKS_PP_FillCharacter::Zero,SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(AmtItemsBatch, 11));
        sb.Append(SKS_PP_StringFormats::strFill(195,'',SKS_PP_FillCharacter::Space,SKS_PP_FillSide::Left));
    
        TotalCnt = 0;
        AmtItemsBatch = 0;
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>