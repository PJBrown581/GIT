<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_COMMERCE_CTRLPAY_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_COMMERCE_CTRLPAY_CSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_US_COMMERCE_CTRLPAY_CSV extends SKS_EFT_Format
{
    #define.FormatVersion('20220627')
    #define.Separator(',')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    [SuppressBPWarningAttribute("BPCheckNestedLoopinCode","Necessary to allow the processing of every invoice(inner loop) for every relevant parent file detail record(outer loop)")]
    protected void formatStructure()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;

        while(mSKS_EFT_FileDetail)
        {
            while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
            {
                this.rec_Payment(invSKS_EFT_FileDetail);
            }
            next mSKS_EFT_FileDetail;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Payment</Name>
				<Source><![CDATA[
    /// <summary>
    /// rec_Payment
    /// </summary>
    /// <param name = "invSKS_EFT_FileDetail">invSKS_EFT_FileDetail</param>
    /// <returns>true</returns>
    boolean rec_Payment(SKS_EFT_FileDetail invSKS_EFT_FileDetail)
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        AmountMST amount;
        amount=( invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1) + (invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur * -1);//DevOps18408

        //         1. Merchant Code
        sb.Append(this.wrapField(subStr(this.CharacterReplacement(mSKS_EFT_FileDetail.AccountNum), 1, 50)));

        //         2.Invoice Number
        sb.Append(this.wrapField(subStr(this.CharacterReplacement(invSKS_EFT_FileDetail.InvoiceNumber), 1, 50)));

        //          3.Invoice Date
        sb.Append(this.wrapField(subStr(SKS_PP_StringFormats::strDateMMDDYYYY(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Slash),1,10)));

        //          4.Invoice Amount
        sb.Append(this.wrapField(subStr(num2str(invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0), 1, 14)));//DevOps18408

        //         5. Tax Amount
        sb.Append(this.wrapField(''));

        //         6.Discount Amount               //SKS#DevOps:17796
        sb.Append(this.wrapField(subStr(num2str(invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur * -1,0,2,1,0), 1, 14)));         //SKS#DevOps:17796

        //         7.Freight Amount
        sb.Append(this.wrapField(''));

        //         8.Client Payment Code
        sb.Append(this.wrapField(''));

        //         9.Client Reference Number
        sb.Append(this.wrapField(''));

        //         10.Description
        sb.Append(this.wrapField(''));

        //          11.Invoice UDF 1 Label
        sb.Append(this.wrapField('Original Invoice Amount'));

        //          12.Invoice UDF 1 Value
        sb.Append(this.wrapField(subStr(num2str(amount,0,2,1,0), 1, 50)));

        //          13.Invoice UDF 2 Label
        sb.Append(this.wrapField('Vendor Name'));       //SKS#DevOps:17796

        //          14.Invoice UDF 2 Value
        sb.Append(this.wrapField(subStr(this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName), 1, 50)));        //SKS#DevOps:17796

        //          15.Invoice UDF 3 Label
        sb.Append(this.wrapField(''));

        //          16.Invoice UDF 3 Value
        sb.Append(this.wrapField(''));

        //          17.Invoice UDF 4 Label
        sb.Append(this.wrapField(''));

        //          18.Invoice UDF 4 Value
        sb.Append(this.wrapField(''));

        //          19.
        sb.Append(this.wrapField(''));

        //          20.
        sb.Append(this.wrapField(''));

        //          21.Currency Code
        sb.Append(this.wrapField(''));

        //          22.
        sb.Append(this.wrapField(''));

        //          23.
        sb.Append(this.wrapField(''));

        //          24.
        sb.Append(this.wrapField(''));
        
        //          25.
        sb.Append(this.wrapField(''));

        //          26.
        sb.Append(this.wrapField(''));

        //          27.
        sb.Append(this.wrapField(''));

        //          28.
        sb.Append(this.wrapField(''));

        //          29.
        sb.Append(this.wrapField(''));

        //          30.Merchantlog UDF 1 Label
        sb.Append(this.wrapField('Voucher Number'));               //SKS#DevOps:17796

        //          31.Merchantlog UDF 1 Value
        sb.Append(this.wrapField(subStr(mSKS_EFT_FileDetail.PaymentVoucher, 1, 50)));       //SKS#DevOps:17796

        //          32.Merchantlog UDF 2 Label
        sb.Append(this.wrapField(''));

        //          33.Merchantlog UDF 2 Label
        sb.Append(this.wrapField(''));

        //          34.Merchantlog UDF 3 Label
        sb.Append(this.wrapField(''));
        
        //          35.Merchantlog UDF 3 Label
        sb.Append(this.wrapField(''));

        //          36.Merchantlog UDF 4 Label
        sb.Append(this.wrapField(''));

        //          37.Merchantlog UDF 4 Label
        sb.Append(this.wrapField(''));

        //          38.Merchantlog UDF 5 Label
        sb.Append(this.wrapField(''));

        //          39.Merchantlog UDF 5 Label
        sb.Append(this.wrapField(''));

        //          40.Merchantlog UDF 6 Label
        sb.Append(this.wrapField(''));

        //          41.Merchantlog UDF 6 Label
        sb.Append(this.wrapField(''));

        //          42.Merchantlog UDF 7 Label
        sb.Append(this.wrapField(''));
        
        //          43.Merchantlog UDF 7 Label
        sb.Append(this.wrapField(''));

        //          44.Merchantlog UDF 8 Label
        sb.Append(this.wrapField(''));

        //          45.Merchantlog UDF 8 Label
        sb.Append(this.wrapField(''));

        //          46.Merchantlog UDF 9 Label
        sb.Append(this.wrapField(''));

        //          47.Merchantlog UDF 9 Label
        sb.Append(this.wrapField(''));

        //          48.Merchantlog UDF 10 Label
        sb.Append(this.wrapField(''));

        //          49.Merchantlog UDF 10 Label
        sb.Append(this.wrapField(''));

        //          50.Merchantlog UDF 11 Label
        sb.Append(this.wrapField(''));
        
        //          51.Merchantlog UDF 11 Label
        sb.Append(this.wrapField(''));

        //          52.Merchantlog UDF 12 Label
        sb.Append(this.wrapField(''));

        //          53.Merchantlog UDF 12 Label
        sb.Append(this.wrapField(''));

        //          54.Merchantlog UDF 13 Label
        sb.Append(this.wrapField(''));

        //          55.Merchantlog UDF 13 Label
        sb.Append(this.wrapField(''));

        //          56.Merchantlog UDF 14 Label
        sb.Append(this.wrapField(''));

        //          57.Merchantlog UDF 14 Label
        sb.Append(this.wrapField(''));

        //          58.Merchantlog UDF 15 Label
        sb.Append(this.wrapField(''));
        
        //          59.Merchantlog UDF 15 Label
        sb.Append(this.wrapField(''));

        //          60.
        sb.Append(this.wrapField(''));

        //          61.
        sb.Append(this.wrapField(''));

        //          62.
        sb.Append(this.wrapField(''));

        //          63.
        sb.Append(this.wrapField(''));

        //          64.
        sb.Append(this.wrapField(''));

        //          65.
        sb.Append(this.wrapField(''));

        //          66.
        sb.Append(this.wrapField(''));

        //          67.
        sb.Append(this.wrapField(''));

        //          68.
        sb.Append(this.wrapField(''));

        //          69.
        sb.Append(this.wrapField(''));

        //          70.
        sb.Append(this.wrapField(''));

        //          71.
        sb.Append(this.wrapField(''));

        //          72.
        sb.Append(this.wrapField(''));

        //          73.
        sb.Append(this.wrapField(''));

        //          74.
        sb.Append(this.wrapField(''));

        //          75.
        sb.Append(this.wrapField(''));

        //          76.
        sb.Append(this.wrapField('', false));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
              order by mSKS_EFT_FileDetail.PaymentCompany, //SKS_VSTS_12798
                   mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '',  boolean _addSeparator = true)
    {
        str text;

        text = _field;

        if(_addSeparator)
        {
            text += #Separator;
        }
        return text;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>