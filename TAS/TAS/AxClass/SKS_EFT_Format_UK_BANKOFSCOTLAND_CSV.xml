<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_UK_BANKOFSCOTLAND_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_UK_BANKOFSCOTLAND_CSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_UK_BANKOFSCOTLAND_CSV extends SKS_EFT_Format
{
    #define.FormatVersion('20220606')
    #define.INT_TRF('INT-TRF')
    #define.CUR_TRF('CUR-TRF')
    #define.NDP('NDP')
    #define.FPS('FPS')
    #define.CHAPS('CHAPS')
    #define.INTL_MVR('INTL-MVR')
    #define.Separator(',')
    #define.DoubleQuote('"')

    BankAccountTable mBankAccountTable;
    int mPayCount;
    Amount amt;
    date paymDate;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '', int _fieldLength = 0, boolean _addSeparator = true, boolean quotes = true)
    {
        str text;

        if(_fieldLength > 0)
        {
            text = subStr(_field, 1, _fieldLength);
        }
        else
        {
            text = _field;
        }
        if(quotes && text != '')
        {
            text = #DoubleQuote + text + #DoubleQuote;
        }
        if(_addSeparator)
        {
            text += #Separator;
        }
        return text;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        // Header Record
        this.rec_Header();

        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();
            
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            if(mBankAccountTable.AccountID != mSKS_EFT_FileDetail.BankAccountId)
            {
                // Get SKS_EFT_Bank
                this.getSKS_EFT_Bank();

                // Get Bank account
                mBankAccountTable = BankAccountTable::find(mSKS_EFT_FileDetail.BankAccountId);
            }

            //  Payment Record
            switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
            {
                case #INT_TRF:
                    this.rec_STE();
                    break;
                case #CUR_TRF:
                    this.rec_CUR();
                    break;
                case #NDP:
                    this.rec_NDP();
                    break;
                case #FPS:
                    this.rec_FPS();
                    break;
                case #CHAPS:
                    this.rec_EDP();
                    break;
                case #INTL_MVR:
                    this.rec_INP();
                    break;
            }          
            next mSKS_EFT_FileDetail;
        }
        // Trailer Record
        this.rec_Trailer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Trailer</Name>
				<Source><![CDATA[
    public boolean rec_Trailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;        

        // 1    Record Code
        sb.Append(this.wrapField('TRA'));

        // 2    Number of Payments
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(4, num2str(mPayCount, 0, 0, 0, 0), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left), 4, false));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Header</Name>
				<Source><![CDATA[
    public boolean rec_Header()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;        

        // 1    Record Code
        sb.Append(this.wrapField('HEA'));

        // 2    Batch name
        sb.Append(this.wrapField(SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr,24), 0, false));

        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_STE</Name>
				<Source><![CDATA[
    public boolean rec_STE()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();             


        // 1    Record Identifier
        sb.Append(this.wrapField('STE'));

        // 2    Debit Sort Code
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(6, mBankAccountTable.BankSortCode, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));

        // 3    Debit Account Number
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(8, mSKS_EFT_FileDetail.BankBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));

        // 4    Credit Sort Code
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(6, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));

        // 5    Credit Account Number
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(8, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));

        // 6    Transfer Amount
        amt = -1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        sb.Append(this.wrapField(num2str(amt, 0, 2, 1, 0), 9));

        // 7    Intended Payment Date
        paymDate =  mSKS_EFT_FileDetail.EffectiveDate;
        sb.Append(this.wrapField(int2str(dayOfMth(paymDate)) + strUpr(subStr(mthName(mthOfYr(paymDate)), 1, 3)) + subStr(int2str(year(paymDate)), 3, 2)));

        // 8   Reference
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 18, false));

        mPayCount++;
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_CUR</Name>
				<Source><![CDATA[
    public boolean rec_CUR()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();


        // 1    Record Identifier
        sb.Append(this.wrapField('CUR'));

        // 2    Currency Debit
        sb.Append(this.wrapField(strFmt('%1%2', mBankAccountTable.BankSortCode, mSKS_EFT_FileDetail.BankBankAcct), 14));           

        // 3    Currency Credit
        sb.Append(this.wrapField(strFmt('%1%2', mSKS_EFT_FileDetail.DepBankTransit, mSKS_EFT_FileDetail.DepBankAcct), 14));

        // 4    Currency Amount
        amt = -1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        sb.Append(this.wrapField(num2str(amt, 0, 2, 1, 0), 14));

        // 7    Payment Date
        paymDate =  mSKS_EFT_FileDetail.EffectiveDate;
        sb.Append(this.wrapField(int2str(dayOfMth(paymDate)) + strUpr(subStr(mthName(mthOfYr(paymDate)), 1, 3)) + subStr(int2str(year(paymDate)), 3, 2)));

        // 8   Reference
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 18, false));

        mPayCount++;
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_NDP</Name>
				<Source><![CDATA[
    public boolean rec_NDP()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();


        // 1    Record Identifier
        sb.Append(this.wrapField('NDP'));

        // 2    Debit Sort Code
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(6, mBankAccountTable.BankSortCode, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));

        // 3    Debit Account Number
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(8, mSKS_EFT_FileDetail.BankBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));

        // 4    Credit Sort Code
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(6, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));

        // 5    Credit Account Number
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(8, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));

        // 6    Amount
        amt = -1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        sb.Append(this.wrapField(num2str(amt, 0, 2, 1, 0), 9));

        //  7   Beneficiary Name
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneName), 18));

        // 8   Remitter Reference
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 18));

        // 9    value Date
        paymDate =  mSKS_EFT_FileDetail.EffectiveDate;
        sb.Append(this.wrapField(int2str(dayOfMth(paymDate)) + strUpr(subStr(mthName(mthOfYr(paymDate)), 1, 3)) + subStr(int2str(year(paymDate)), 3, 2), 0, false));

        mPayCount++;
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_FPS</Name>
				<Source><![CDATA[
    public boolean rec_FPS()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();


        // 1    Record Identifier
        sb.Append(this.wrapField('FPS'));

        // 2    Debit Sort Code
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(6, mBankAccountTable.BankSortCode, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));

        // 3    Debit Account Number
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(8, mSKS_EFT_FileDetail.BankBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));

        // 4    Credit Sort Code
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(6, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));

        // 5    Credit Account Number
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(8, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));

        // 6    Amount
        amt = -1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        sb.Append(this.wrapField(num2str(amt, 0, 2, 1, 0), 9));

        //  7   Beneficiary Name
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneName), 18));

        // 8   Remitter Reference
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 18));

        // 9    Payment Date
        paymDate =  mSKS_EFT_FileDetail.EffectiveDate;
        sb.Append(this.wrapField(int2str(dayOfMth(paymDate)) + strUpr(subStr(mthName(mthOfYr(paymDate)), 1, 3)) + subStr(int2str(year(paymDate)), 3, 2), 0, false));

        mPayCount++;
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_EDP</Name>
				<Source><![CDATA[
    public boolean rec_EDP()
    {
        VendTable               vendorTable;
        DirPartyContactInfoview DirPartyContactInfoview;
        str value;

        System.Text.StringBuilder sb = new System.Text.StringBuilder();


        // 1    Record Identifier
        sb.Append(this.wrapField('EDP'));

        // 2    Debit Sort Code
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(6, mBankAccountTable.BankSortCode, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));

        // 3    Debit Account Number
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(8, mSKS_EFT_FileDetail.BankBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));

        // 4    Credit Sort Code
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(6, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));

        // 5    Credit Account Number
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankAcct, 20));

        // 6    Amount
        amt = -1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        sb.Append(this.wrapField(num2str(amt, 0, 2, 1, 0), 9));

        //  7   Beneficiary Name
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneName), 35));

        //  8   Beneficiary Address 1
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneAddr), 35));

        //  9   Beneficiary Address 2
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneCity), 35));

        //  10 Beneficiary Address 3
        sb.Append(this.wrapField(this.getLogisticsAddressCountryISO(mSKS_EFT_VendorPaym.WBeneCountryRegionId), 35));

        //  11   Bank Name
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBenBankName), 35));

        //  12   Bank Address 1
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBenBankAddr), 35));

        //  13   Bank Address 2
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBenBankCity), 35));

        //  14 Bank Address 3
        sb.Append(this.wrapField(this.getLogisticsAddressCountryISO(mSKS_EFT_VendorPaym.WBenBankCountryRegionId), 35));

        // 15   Payment Reference
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 18));

        //  16  Advise Beneficiary
        sb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('AdviseBeneficiary', mSKS_EFT_FileDetail.RecId), 1));

        //  17  Payment Details 1
        sb.Append(this.wrapField());

        //  18  Payment Details 2
        sb.Append(this.wrapField());

        //  19  Payment Details 3
        sb.Append(this.wrapField());

        //  20  Payment Details 4
        sb.Append(this.wrapField());

        //  21  Inf. to Payee Bank 1
        sb.Append(this.wrapField());

        //  22  Inf. to Payee Bank 2
        sb.Append(this.wrapField());

        //  23  Inf. to Payee Bank 3
        sb.Append(this.wrapField());

        //  24  Inf. to Payee Bank 4
        sb.Append(this.wrapField());

        //  25  Inf. to Payee Bank 5
        sb.Append(this.wrapField());

        //  26  Inf. to Payee Bank 6
        sb.Append(this.wrapField());

        //  27  IBAN Flag
        value = (mSKS_EFT_FileDetail.DepBankIBAN != '' ? 'T' : 'F');
        sb.Append(this.wrapField(value));

        //  28  Beneficiary IBAN
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankIBAN, 34));

        //  29  Swift BIC Flag        
        value = (mSKS_EFT_FileDetail.DepSwiftNo != '' ? 'T' : 'F');
        sb.Append(this.wrapField(value));

        //  30  Swift BIC
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepSwiftNo, 34));

        //  31  Email Confirmation Flag
        vendorTable = VendTable::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum);
        select firstonly Locator from DirPartyContactInfoview where DirPartyContactInfoview.Party == vendorTable.Party && DirPartyContactInfoview.IsPrimary == true
            &&  DirPartyContactInfoview.Type == LogisticsElectronicAddressMethodType::Email;
        
        value = (DirPartyContactInfoView.Locator != '' ? 'T' : 'F');
        sb.Append(this.wrapField(value));

        //  32  Email Address
        sb.Append(this.wrapField(DirPartyContactInfoView.Locator, 100, false));

        mPayCount++;
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_INP</Name>
				<Source><![CDATA[
    public boolean rec_INP()
    {
        VendTable               vendorTable;
        DirPartyContactInfoview DirPartyContactInfoview;
        str value;

        System.Text.StringBuilder sb = new System.Text.StringBuilder();


        // 1    Record Identifier
        sb.Append(this.wrapField('INP'));

        //  2   Sterling Debit Account Flag
        sb.Append(this.wrapField(this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('DebitAccountFlag', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank)), 1));

        // 3    Debit Sort Code
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(6, mBankAccountTable.BankSortCode, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));

        // 4    Debit Account Number
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(8, mSKS_EFT_FileDetail.BankBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));

        // 5    Currency Debit Account Number
        sb.Append(this.wrapField(SKS_PP_StringFormats::strFill(14, strFmt('%1%2', mBankAccountTable.BankSortCode, mSKS_EFT_FileDetail.BankBankAcct), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left)));

        //  6   Beneficiary Account Number
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankIBAN, 34));

        // 7    Amount
        amt = -1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        sb.Append(this.wrapField(num2str(amt, 0, 2, 1, 0), 12));

        //  8   Beneficiary Name
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneName), 35));

        //  9   Beneficiary Address 1
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneAddr), 35));

        //  10   Beneficiary Address 2
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBeneCity), 35));

        //  11 Beneficiary Address 3
        sb.Append(this.wrapField(this.getLogisticsAddressCountryISO(mSKS_EFT_VendorPaym.WBeneCountryRegionId), 35));

        //  12   Bank Name
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBenBankName), 35));

        //  13   Bank Address 1
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBenBankAddr), 35));

        //  14   Bank Address 2
        sb.Append(this.wrapField(this.getLogisticsAddressCountryISO(mSKS_EFT_VendorPaym.WBenBankCountryRegionId), 35));

        //  15  Currency Sent
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.PaymentCurrencyCode, 3));

        //  16  Currency of Amount
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.PaymentCurrencyCode, 3));

        //  17  Priority Processing
        sb.Append(this.wrapField('Y'));

        //  18  Charging Instructions
        sb.Append(this.wrapField(SKS_EFT_Format::getCodelookupvalue('Charges', mSKS_EFT_FileDetail.RecId), 1));

        //  19  Remitter Reference
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.PaymentReference, 18));

        //  20  Country Code
        sb.Append(this.wrapField(this.getLogisticsAddressCountryISO(mSKS_EFT_VendorPaym.WBeneCountryRegionId), 2));

        //  21  Beneficiary Account Name
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WBenBankName), 35));

        //  22  Payment Date
        paymDate =  mSKS_EFT_FileDetail.EffectiveDate;
        sb.Append(this.wrapField(int2str(dayOfMth(paymDate)) + subStr(mthName(mthOfYr(paymDate)), 1, 3) + subStr(int2str(year(paymDate)), 3, 2)));

        //  23  Use Swift Flag
        value = (mSKS_EFT_FileDetail.DepSwiftNo != '' ? 'T' : 'F');
        sb.Append(this.wrapField(value));

        //  24  Swift BIC
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepSwiftNo, 34));

        //  25  Use Specialist Instructions
        sb.Append(this.wrapField());

        //  26  Use Intermediary Bank Swift
        value = (mSKS_EFT_VendorPaym.WIntBankSwift != '' ? 'T' : 'F');
        sb.Append(this.wrapField(value));

        //  27  Intermediary Bank Swift
        sb.Append(this.wrapField(mSKS_EFT_VendorPaym.WIntBankSwift, 34));
        
        if(value == 'F')
        {
            //  28  Intermediary Bank Name
            sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WIntBankName), 35));
            
            //  29  Intermediary Bank Address 1
            sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_VendorPaym.WIntBankAddr), 35));
        }
        else
        {
            sb.Append(this.wrapField());
            sb.Append(this.wrapField());
        }
        //  30  Intermediary Bank Address 2
        sb.Append(this.wrapField());

        //  31  Intermediary Bank Address 3
        sb.Append(this.wrapField());

        //  32  Intermediary Bank Account Number
        sb.Append(this.wrapField(mSKS_EFT_VendorPaym.WIntBankAcct, 34));

        //  33  Special Instructions 1
        sb.Append(this.wrapField());

        //  34  Special Instructions 2
        sb.Append(this.wrapField());

        //  35  Special Instructions 3
        sb.Append(this.wrapField());

        //  36  Special Instructions 4
        sb.Append(this.wrapField());

        //  37  Advise Beneficiary
        sb.Append(this.wrapField());

        //  38  Email Confirmation
        vendorTable = VendTable::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum);
        select firstonly Locator from DirPartyContactInfoview where DirPartyContactInfoview.Party == vendorTable.Party && DirPartyContactInfoview.IsPrimary == true
            &&  DirPartyContactInfoview.Type == LogisticsElectronicAddressMethodType::Email;
        
        value = (DirPartyContactInfoView.Locator != '' ? 'T' : 'F');
        sb.Append(this.wrapField(value));

        //  39  Email Address
        sb.Append(this.wrapField(DirPartyContactInfoView.Locator, 100, false));

        mPayCount++;
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>