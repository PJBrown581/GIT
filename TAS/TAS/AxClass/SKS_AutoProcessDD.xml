<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_AutoProcessDD</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_AutoProcessDD
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>sendAdvEmail</Name>
				<Source><![CDATA[
    public void sendAdvEmail(SKS_EFTAP_File _file)
    {
        SKS_EFT_Processing sks_eft_Processing;
        SKS_EB_CommProcess commProcess;

        select commProcess where commProcess.CommID == _file.CommID;

        sks_eft_Processing = new SKS_EFT_Processing();

        sks_eft_Processing.APARrocess_EFT(_file.FileNbr,
            SKS_PP_NextActionDisplay::SendAdvEmail,
            false,
            SKS_EFT_Module::AR,
            commProcess,
            false,
            false);

    }

]]></Source>
			</Method>
			<Method>
				<Name>createAndSendDDFile</Name>
				<Source><![CDATA[
    public static recid createAndSendDDFile(Object _element = null )
    {
        Dialog              dialog;
        DialogField         dialogField;
        Batch               Batch;
        BatchHeader         batHeader;
        RunBaseBatch        rbbTask;
        BatchInfo           batInfo;
        SysRecurrenceData   recurData;
        Args args = new Args();
        FormRun formrun;
        
        dialog = new Dialog("@SYS114518");
        dialogField = dialog.addField(extendedTypeStr(BatchCaption), "@SYS114518");

        if (dialog.run())
        {
            select firstOnly Batch where Batch.Caption == dialogField.value();
            if(!Batch)
            {
    
                ttsBegin;
    
                rbbTask = new SKS_AutoCreateAndSendDDFile();
                
                batInfo = rbbTask.batchInfo();
                batInfo.parmCaption(dialogField.value());
                batInfo.parmGroupId(''); 
                recurData = SysRecurrence::defaultRecurrence();
                recurData = SKS_EB_Batch::setRecurrenceStartDateTimeAdjusted(recurData, DateTimeUtil::newDateTime(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()), 64800));

                recurData = SysRecurrence::setRecurrenceUnit(recurData, SysRecurrenceUnit::Day, 1);
    
                batHeader = BatchHeader::construct();
                batHeader.addTask(rbbTask);
                batHeader.parmRecurrenceData(recurData);
                batHeader.save();
                Batch = batInfo.parmBatch();
    
                info(strFmt("@SKS2466", dialogField.value()));
    
                ttsCommit;
    
                info("@SKS2464");
    
                args.caller(_element);
                args.parm(Batch.caption);
                args.name(formStr(BatchJob));
                formRun = classFactory.formRunClass(args);
                formRun.init();
                formRun.run();
                formRun.wait();

                return Batch.BatchJobId;
            }
            else
            {
    
                error(strFmt("@SKS2463", dialogfield.value()));
                return 0;
            }
    
        }
        else
        {
            return 0;
        }
    
    
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>