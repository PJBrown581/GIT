<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_AU_COMMONWEALTHBANK_120</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// public class SKS_EFT_FormatMetaData_AU_COMMONWEALTHBANK_120 Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_AU_COMMONWEALTHBANK_120 Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20220425';
        dataContractVersion = '1.0';
        conFormatID = ['AU-COMMONWEALTHBANK-120'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','Company Name','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',1,'AU - Comman Wealth Bank-120',0,'','','AU-COMMONWEALTHBANK-120',1,'','','Name Of User Bank','XXX','User Number','XXXXXX','User Name(Preferred Name)','XXXXXXXXXXXXXXXXXXXXXXXXXX',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',0,0,'',0,0,1,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'AU-COMMONWEALTHBANK-120',1,1,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('AU-COMMONWEALTHBANK-120'):
                paymSpecList = this.getPaymSpecsMetaData_AU_COMMONWEALTHBANK_120();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_AU_COMMONWEALTHBANK_120</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_AU_COMMONWEALTHBANK_120()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Direct Entry - File Specification',1,'DE','','DE','TRADE PAY',0,'AU-COMMONWEALTHBANK-120',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('AU-COMMONWEALTHBANK-120'):
                notesList = this.getNotesMetaData_AU_COMMONWEALTHBANK_120();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_AU_COMMONWEALTHBANK_120</Name>
				<Source><![CDATA[
    private container getNotesMetaData_AU_COMMONWEALTHBANK_120()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['AU-COMMONWEALTHBANK-120','DE','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Descriptive Record format > Description of entries is stored in Payment journal > Description field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('AU-COMMONWEALTHBANK-120'):
                validationsList = this.getValidationsMetaData_AU_COMMONWEALTHBANK_120();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_AU_COMMONWEALTHBANK_120</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_AU_COMMONWEALTHBANK_120()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-COMMONWEALTHBANK-120','DE','','Bank Account Number','Cash and bank management > Select bank account > edit > General (fast tab) Bank Account Number','Detail Record Format > Trace Account Number','Bank account number',0,'AccountNum','','',1,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-COMMONWEALTHBANK-120','DE','','Bank Routing number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Routing Number','Detail Record Format > Trace Bank/State/Branch number','Bank Routing Number',0,'RegistrationNum','','',1,0,1,'7',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-COMMONWEALTHBANK-120','DE','','Vendor Routing number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Detail record > BSB of account to be CREDITED or DEBITED','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'7',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-COMMONWEALTHBANK-120','DE','','Vendor bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Detail record > Account numberto be CREDITED or DEBITED','Account Number related to vendor','9','AccountNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AU-COMMONWEALTHBANK-120','DE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','Detail record > Title of account to be CREDITED or DEBITED','Name related to Vendor','16','WBeneName','','',1,'2',1,'32',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['AU-COMMONWEALTHBANK-120','TransactionCode','Transaction Code']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-COMMONWEALTHBANK-120','TransactionCode','Externally initiated debit item','13']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-COMMONWEALTHBANK-120','TransactionCode','Externally initiated credit','50']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-COMMONWEALTHBANK-120','TransactionCode','Australian Government Security Interest','51']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-COMMONWEALTHBANK-120','TransactionCode','Pay','53']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-COMMONWEALTHBANK-120','TransactionCode','Pension','54']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-COMMONWEALTHBANK-120','TransactionCode','Allotment','55']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-COMMONWEALTHBANK-120','TransactionCode','Dividend','56']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AU-COMMONWEALTHBANK-120','TransactionCode','Debenture/Note Interest','57']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData</Name>
				<Source><![CDATA[
    protected container getFormatLookupsMetaData(str _formatID)
    {
        container   formatLookupsList;

        //Metadata column names of data elements

        switch (_formatID)
        {
        }

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('AU-COMMONWEALTHBANK-120'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_AU_COMMONWEALTHBANK_120();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_AU_COMMONWEALTHBANK_120</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_AU_COMMONWEALTHBANK_120()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AU-COMMONWEALTHBANK-120','AU-COMMONWEALTHBANK-120','DE','TransactionCode','Transaction Code',0,'TransactionCode','',1,'','','Detail Record > Transaction Code']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>