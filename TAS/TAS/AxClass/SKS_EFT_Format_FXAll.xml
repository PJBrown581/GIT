<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_FXAll</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_FXAll extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_FXAll extends SKS_EFT_Format
{
    #define.FormatVersion('20210712')
    SKS_FXA_Details mSKS_FXA_Details;
    BankAccountTable mBankAccountTable;
    str mfileName;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fileCreate</Name>
				<Source><![CDATA[
    protected void fileCreate(boolean controlFilecreate)
    {
        str mfilePath; //Issue21103: BankFabric storage process
        SKS_BF_BankIntType bankIntType;
        
        if(!mfileName)
        {
            mErrorText = 'File name not set';
            return;
        }

        //<Issue21103: BankFabric storage process>
        bankIntType = mSKS_EFT_File.RecId ? mSKS_EFT_File.BFBankIntegration : SKS_EB_FileStorage::getBankIntType(SKS_EB_Module::FXAll);

        mFileHub = SKS_EB_FileHub::construct(bankIntType);

        if(bankIntType == SKS_BF_BankIntType::BankFabric)
        {
            System.String[] locBFLocationAndName;

            if(strContains(mfileName,@'/'))
            {
                locBFLocationAndName = System.Text.RegularExpressions.Regex::Split(mfileName,@'//');
            }
            else if(strContains(mfileName,@'\'))
            {
                locBFLocationAndName = System.Text.RegularExpressions.Regex::Split(mfileName,@'\\');
            }
            else
            {
                throw Global::error("@SKS:SKGBRFileErrorBFNameStructure");
            }

            mfilePath = locBFLocationAndName.GetValue(0);

            mFileHub.setFileName(mfileName,'','','','',mfilePath,mFileNumber);
        }
        else 
        {
            mFileHub.setFileName(mfileName);
        }
        //</Issue21103>

        mFileHub.parmThrowErrorIfException(false);
        mFileHub.parmEncoding(0);

        if(mSKS_EFT_File.BFBankIntegration == SKS_BF_BankIntType::FileHubLocal)
        {
            mFileHub.runFileDelete();
            if(mFileHub.errorHasException())
            {
                mErrorText = mFileHub.errorException();
            }
        }
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getcounterParty_BIC</Name>
				<Source><![CDATA[
    public str getcounterParty_BIC()
    {
        SKS_FXA_CounterPartyTable   lSKS_FXA_CounterPartyTable;
        VendBankAccount             lVendBankAccount;
    
        select lSKS_FXA_CounterPartyTable where
            lSKS_FXA_CounterPartyTable.CounterPartyID == mSKS_FXA_Details.SKS_FXA_CounterPartyAccount &&
            lSKS_FXA_CounterPartyTable.CurrencyCode == mSKS_FXA_Details.DealtCurrency;
    
        if(lSKS_FXA_CounterPartyTable)
        {
            lVendBankAccount = VendBankAccount::findByCompany(lSKS_FXA_CounterPartyTable.VendorCompany, lSKS_FXA_CounterPartyTable.VendAccount, lSKS_FXA_CounterPartyTable.VendBankAccountId);
    
            if(lVendBankAccount.SWIFTNo != '')
            {
                return lVendBankAccount.SWIFTNo;
            }
            else
            {
                return lVendBankAccount.RegistrationNum;
            }
        }
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymentCurrency</Name>
				<Source><![CDATA[
    public CurrencyCode getPaymentCurrency()
    {
        SKS_FXA_CurrencyPairsTable lSKS_FXA_CurrencyPairsTable;
    
        select firstonly CurrencyPairISO, ToCurrencyCodeISO, FromCurrencyCodeISO from lSKS_FXA_CurrencyPairsTable where lSKS_FXA_CurrencyPairsTable.CurrencyPairISO == mSKS_FXA_Details.CurrencyPairISO;
        if(mSKS_FXA_Details.DealtCurrency == lSKS_FXA_CurrencyPairsTable.ToCurrencyCodeISO)
        {
            return lSKS_FXA_CurrencyPairsTable.FromCurrencyCodeISO;
        }
        else
        {
            return lSKS_FXA_CurrencyPairsTable.ToCurrencyCodeISO;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSKS_FXA_Details</Name>
				<Source><![CDATA[
    void getSKS_FXA_Details()
    {
        //------------------------------------------------------------------------------------------------------
        // Load or refresh global mSKS_FXA_Details
        //------------------------------------------------------------------------------------------------------
        if(mSKS_FXA_Details.LedgerJournalTransRecid != mSKS_EFT_FileDetail.PaymentLineRecId)
        {
            mSKS_FXA_Details = SKS_FXA_Details::findByLedgerJournalTransRecid(mSKS_EFT_FileDetail.PaymentLineRecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
          order by mSKS_EFT_FileDetail.RecordSection,
                    mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::FXAllVendor &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFileName</Name>
				<Source><![CDATA[
    public void setFileName(str _fileName)
    {
        mfileName = _fileName;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>