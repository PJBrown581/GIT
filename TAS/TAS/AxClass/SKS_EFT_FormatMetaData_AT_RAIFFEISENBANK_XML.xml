<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_AT_RAIFFEISENBANK_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_AT_RAIFFEISENBANK_XML Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_AT_RAIFFEISENBANK_XML Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230214';
        dataContractVersion = '1.0';
        conFormatID = ['AT-RAIFFEISENBANK-XML-CZ','AT-RAIFFEISENBANK-XML'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
        //ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
        //BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
        //FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
        //IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
        //WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
        //WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'AT - RAIFFEISENBANK - pain.001.002.03 - Czech Republic',0,'','','AT-RAIFFEISENBANK-XML-CZ',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'AT-RAIFFEISENBANK-XML',1,0,0]);
        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,1,0,'','','','',0,'','','','',0,'AT - RAIFFEISENBANK - pain.001.002.03 - Austria',0,'','','AT-RAIFFEISENBANK-XML',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'AT-RAIFFEISENBANK-XML',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
        //BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('AT-RAIFFEISENBANK-XML-CZ'):
                paymSpecList = this.getPaymSpecsMetaData_AT_RAIFFEISENBANK_XML_CZ();
                break;

            case ('AT-RAIFFEISENBANK-XML'):
                paymSpecList = this.getPaymSpecsMetaData_AT_RAIFFEISENBANK_XML();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_AT_RAIFFEISENBANK_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_AT_RAIFFEISENBANK_XML()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA Payments',1,'SEPA','','SEPA','TRADE PAY',0,'AT-RAIFFEISENBANK-XML',0,0,0,1,1,0,0,0,1,0,0,1,0,1,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'NON-SEPA  Payments',1,'NON-SEPA','','NON-SEPA','TRADE PAY',0,'AT-RAIFFEISENBANK-XML',0,0,0,1,1,0,0,0,1,0,0,1,0,1,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_AT_RAIFFEISENBANK_XML_CZ</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_AT_RAIFFEISENBANK_XML_CZ()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPA Multicash Payments',1,'SEPA-MCASH','','SEPA-MCASH','TRADE PAY',0,'AT-RAIFFEISENBANK-XML-CZ',0,0,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'SEPa X-Business  Payments',1,'SEPA-XBUSS','','SEPA-XBUSS','TRADE PAY',0,'AT-RAIFFEISENBANK-XML-CZ',0,0,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('AT-RAIFFEISENBANK-XML-CZ'):
                notesList = this.getNotesMetaData_AT_RAIFFEISENBANK_XML_CZ();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_AT_RAIFFEISENBANK_XML_CZ</Name>
				<Source><![CDATA[
    private container getNotesMetaData_AT_RAIFFEISENBANK_XML_CZ()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-MCASH','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Accounts Payable > All Vendors > Vendor:--Tax identification number is required and stored in the Tax exempt number field on Invoice and delivery tab.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-XBUSS','-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Accounts Payable > All Vendors > Vendor:--Tax identification number is required and stored in the Tax exempt number field on Invoice and delivery tab.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
        //FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('AT-RAIFFEISENBANK-XML-CZ'):
                validationsList = this.getValidationsMetaData_AT_RAIFFEISENBANK_XML_CZ();
                break;

            case ('AT-RAIFFEISENBANK-XML'):
                validationsList = this.getValidationsMetaData_AT_RAIFFEISENBANK_XML();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_AT_RAIFFEISENBANK_XML</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_AT_RAIFFEISENBANK_XML()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,0,'1','34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > CdtrAgt >  FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,0,11,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,'0',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','StrtNm related to vendor','16','WBeneAddr','','',1,'1',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','BldgNb related to vendor','16','WBeneAddr2','','',1,'1',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',1,1,1,'70',0,0]);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,0,'1','34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > CdtrAgt >  FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,0,11,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',1,0,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',1,'0',1,'11',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','StrtNm related to vendor','16','WBeneAddr','','',1,'1',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','BldgNb related to vendor','16','WBeneAddr2','','',1,'1',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Name','PmtInf > CdTrfTxInf > Cdtr > Nm','Name related to Vendor','16','WBeneName','','',1,1,1,'70',0,0]);

        //B2B
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',0,0,1,'70',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','23','WOrdPartyCountryRegionId','','',1,1,'',0,0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','23','WOrdPartyAddr','','',1,1,'1','70',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','23','WOrdPartyAddr2','','',1,1,'1','70',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',24,'IBAN','','','0',0,1,'34',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',24,'SWIFTNo','','','0',0,1,'11',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','IBAN','TAS > Cash and bank management > Select bank account > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN','26','IBAN','','','0',0,1,'34',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','SEPA','','Swift Code','Cash and bank management > Select bank account > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code','26','SWIFTNo','','',0,0,1,'11',0,4]);

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','23','WOrdPartyName','','',0,0,1,'70',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','23','WOrdPartyCountryRegionId','','',1,1,'',0,0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','23','WOrdPartyAddr','','',1,1,'1','70',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > Address','Address related to bank','23','WOrdPartyAddr2','','',1,1,'1','70',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',24,'IBAN','','','0',0,1,'34',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','Swift Code','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > DbtrAgt > FinInstnId > BIC','Swift code related to Bank',24,'SWIFTNo','','','0',0,1,'11',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','IBAN','TAS > Cash and bank management > Select bank account > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN','26','IBAN','','','1',0,1,'34',0,4]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML','NON-SEPA','','Swift Code','Cash and bank management > Select bank account > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > BIC','Swift Code','26','SWIFTNo','','',1,0,1,'11',0,4]);


     

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_AT_RAIFFEISENBANK_XML_CZ</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_AT_RAIFFEISENBANK_XML_CZ()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-MCASH','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-MCASH','','Bank Country code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-MCASH','','Bank Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-MCASH','','Bank Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > AdrLine > Address','Address related to bank','15','WOrdPartyAddr2','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-MCASH','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-MCASH','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-MCASH','','Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) >Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-MCASH','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-MCASH','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > CdtrAgt >  FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-MCASH','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > Nm','Name related to Vendor Bank','16','WBenBankName','','',0,1,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-MCASH','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-MCASH','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,'2',1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-MCASH','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','StrtNm related to vendor','16','WBeneAddr','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-MCASH','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','BldgNb related to vendor','16','WBeneAddr2','','',1,'2',1,'16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-MCASH','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-XBUSS','','Name','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Name','PmtInf > Dbtr > Nm','Name related to bank','15','WOrdPartyName','','',0,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-XBUSS','','Bank City','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > City','PmtInf > Dbtr > PstlAdr > AdrLine','City related to bank','15','WOrdPartyCity','','',1,1,1,'35',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-XBUSS','','Bank Zip/postal code','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Zip/postal code','PmtInf > Dbtr > PstlAdr > AdrLine','ZipCode related to bank','15','WOrdPartyZipCode','','',1,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-XBUSS','','Id','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) >Id','PmtInf > Dbtr > Id > Orgid > Othr > Id','Debtor ID related to bank','15','WOrdPartyId','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-XBUSS','','IBAN','Cash and bank management > Select bank account > edit > Additional Identification (fast tab) > IBAN','PmtInf > DbtrAcct > Id > IBAN','IBAN related to Bank',0,'IBAN','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-XBUSS','','Bank Swift number','Cash and bank management > Select bank account > edit > Additional identification (fast tab) > Swift No','PmtInf > CdtrAgt >  FinInstnId > BIC','Swift code related to Bank',0,'SWIFTNo','','',0,1,0,0,0,1]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-XBUSS','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > Nm','Name related to Vendor Bank','16','WBenBankName','','',0,1,1,'140',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-XBUSS','','Beneficiary\'s TAX ID','Accounts payable > Vendors > All vendors > Select vendor account > Invoice and delivery(Fast tab) > TAX REGISTRATION(group) > RFC number','PmtInf > CdtTrfTxInf > Tax > Cdtr > TaxId','Beneficiary\'s TAX ID','11','Rfc_MX','','',0,1,1,'18',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-XBUSS','','Vendor bank IBAN','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > IBAN','PmtInf > CdtTrfTxInf > CdtrAcct > Id > IBAN','IBAN related to vendor','9','BankIBAN','','',0,1,1,'34',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-XBUSS','','Vendor Swift Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','PmtInf > CdTrfTxInf > CdtrAgt >  FinInstnId > ClrSysMmbId > FinInstnId > BIC','Swift Code related to Vendor','9','SWIFTNo','','',0,'2',1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-XBUSS','','Address 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > StrtNm','StrtNm related to vendor','16','WBeneAddr','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-XBUSS','','Address 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > BldgNb','BldgNb related to vendor','16','WBeneAddr2','','',1,'2',1,'16',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-XBUSS','','Country/Region','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','PmtInf > CdTrfTxInf > Cdtr > PstlAdr > Ctry','Country related to vendor','16','WBeneCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-XBUSS','','Country/Region','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Country/region','PmtInf > Dbtr > PstlAdr > Ctry','Country related to bank','15','WOrdPartyCountryRegionId','','',1,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-XBUSS','','Address 1','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 1','PmtInf > Dbtr > PstlAdr > StrtNm','StrtNm related to bank','15','WOrdPartyAddr','','',1,'2',1,'70',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['AT-RAIFFEISENBANK-XML-CZ','SEPA-XBUSS','','Address 2','TAS > Set up > Bank account > Select AP EFT+ > Wire/IAT ordering party(Fast tab) > Address 2','PmtInf > Dbtr > PstlAdr > BldgNb','BldgNb related to bank','15','WOrdPartyAddr2','','',1,'2',1,'16',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Description
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['AT-RAIFFEISENBANK-XML','SvcLvlCd','Service level code']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['AT-RAIFFEISENBANK-XML','ChrgBr','Charge bearer']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['AT-RAIFFEISENBANK-XML','InstrForCdtrAgt','InstructionForCreditorAgent']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['AT-RAIFFEISENBANK-XML','Purp','Purppose']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
        //FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('AT-RAIFFEISENBANK-XML'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_AT_RAIFFEISENBANK_XML();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_AT_RAIFFEISENBANK_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_AT_RAIFFEISENBANK_XML()
    {
        container   paymSpecFieldsList;       

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AT-RAIFFEISENBANK-XML','AT-RAIFFEISENBANK-XML','NON-SEPA','ChrgBr','Charge bearer',0,'ChrgBr','',0,'','','PmtInf > ChrgBr']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AT-RAIFFEISENBANK-XML','AT-RAIFFEISENBANK-XML','NON-SEPA','SvcLvlCd','Service Level Code',0,'SvcLvlCd','',0,'','','SvcLvlCd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AT-RAIFFEISENBANK-XML','AT-RAIFFEISENBANK-XML','NON-SEPA','InstrForCdtrAgt','InstructionForCreditorAgent',0,'InstrForCdtrAgt','',0,'','','InstrForCdtrAgt']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AT-RAIFFEISENBANK-XML','AT-RAIFFEISENBANK-XML','NON-SEPA','Purp','Purpose',0,'Purp','',0,'','','Purp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AT-RAIFFEISENBANK-XML','AT-RAIFFEISENBANK-XML','SEPA','Purp','Purpose',0,'Purp','',0,'','','Purp']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AT-RAIFFEISENBANK-XML','AT-RAIFFEISENBANK-XML','NON-SEPA','CdtrAgtID','CdtrAgt ID',1,'CdtrAgtID','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','Cdtragt']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AT-RAIFFEISENBANK-XML','AT-RAIFFEISENBANK-XML','NON-SEPA','PrtryCountry','Prtry Country',1,'PrtryCountry','',0,'','XX','Cdtragt']);


        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
        //FormatGroup,CodeID,Display Value,CodeValue
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AT-RAIFFEISENBANK-XML','SvcLvlCd','Urgent Payment','URGP']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AT-RAIFFEISENBANK-XML','SvcLvlCd','Standard Priority','NURG']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AT-RAIFFEISENBANK-XML','ChrgBr','Borne by Debtor','DEBT']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AT-RAIFFEISENBANK-XML','ChrgBr','Borne by Creditor','CRED']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AT-RAIFFEISENBANK-XML','ChrgBr','Shared','SHAR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AT-RAIFFEISENBANK-XML','ChrgBr','Following Service Level','SLEV']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AT-RAIFFEISENBANK-XML','InstrForCdtrAgt','Hold Cash For Creditor','HOLD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AT-RAIFFEISENBANK-XML','InstrForCdtrAgt','Telecom','TELB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AT-RAIFFEISENBANK-XML','InstrForCdtrAgt','PhoneBeneficiary','PHOB']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AT-RAIFFEISENBANK-XML','Purp','Tax Payments','TAXS']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AT-RAIFFEISENBANK-XML','Purp','Trusted Fund Payments','TRFD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AT-RAIFFEISENBANK-XML','Purp','Annuity Grand','ANNI']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatLookupsMetaData</Name>
				<Source><![CDATA[
    protected container getFormatLookupsMetaData(str _formatID)
    {
        container   formatLookupsList;

        //Metadata column names of data elements

        switch (_formatID)
        {
        }

        return formatLookupsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
        //FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3
       

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['AT-RAIFFEISENBANK-XML','BankCurrencyCd','Bank account currency code']);

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AT-RAIFFEISENBANK-XML','BankCurrencyCd','EUR','EUR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AT-RAIFFEISENBANK-XML','BankCurrencyCd','USD','USD']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AT-RAIFFEISENBANK-XML','BankCurrencyCd','INR','INR']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AT-RAIFFEISENBANK-XML','BankCurrencyCd','CZK','CZK']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['AT-RAIFFEISENBANK-XML','BankCurrencyCd','CAD','CAD']);

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch (_formatID)
        {
            case ('AT-RAIFFEISENBANK-XML-CZ'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_AT_RAIFFEISENBANK_XML_CZ();
                break;

            case ('AT-RAIFFEISENBANK-XML'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_AT_RAIFFEISENBANK_XML();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_AT_RAIFFEISENBANK_XML_CZ</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_AT_RAIFFEISENBANK_XML_CZ()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AT-RAIFFEISENBANK-XML','AT-RAIFFEISENBANK-XML-CZ','BankCurrencyCd','Bank account currency code',0,'BankCurrencyCd','',1,'','','PmtInf > DbtrAcct > Ccy']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_AT_RAIFFEISENBANK_XML</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_AT_RAIFFEISENBANK_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['AT-RAIFFEISENBANK-XML','AT-RAIFFEISENBANK-XML','Email','Debitor EmailAddress',1,'Email','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','CtctDlts']);

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>