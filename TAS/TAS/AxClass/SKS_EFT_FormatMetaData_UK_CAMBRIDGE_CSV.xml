<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_UK_CAMBRIDGE_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_UK_CAMBRIDGE_CSV Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_UK_CAMBRIDGE_CSV Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230207';
        dataContractVersion = '1.0';
        conFormatID = ['UK-CAMBRIDGE-CSV'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'UK - Cambridge - CSV',0,'','','UK-CAMBRIDGE-CSV',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'UK-CAMBRIDGE-CSV',1,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('UK-CAMBRIDGE-CSV'):
                paymSpecList = this.getPaymSpecsMetaData_UK_CAMBRIDGE_CSV();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_UK_CAMBRIDGE_CSV</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_UK_CAMBRIDGE_CSV()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Wire Payments',1,'WIRE','','WIRE','TRADE PAY',0,'UK-CAMBRIDGE-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'EFT Payments',1,'EFT','','EFT','TRADE PAY',0,'UK-CAMBRIDGE-CSV',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('UK-CAMBRIDGE-CSV'):
                notesList = this.getNotesMetaData_UK_CAMBRIDGE_CSV();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_UK_CAMBRIDGE_CSV</Name>
				<Source><![CDATA[
    private container getNotesMetaData_UK_CAMBRIDGE_CSV()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['UK-CAMBRIDGE-CSV','WIRE','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Wire transfer / IAT - 1 > Beneficiary bank (fast tab):--Beneficiary Bank Address Line 1,Beneficiary Bank Address Line 2,Beneficiary Bank Postal Code,Beneficiary Bank Province are stored in the Address tab. These fields are separated by Semi colon(;)::-Central Bank puropose code is stored in the Payment Journal > Payment tab.::-Vendor email and phone numbers are stored in the Accccounts payable > Vendors > Contact information tab']);
        notesList = ConIns(notesList,conLen(notesList)+1,['UK-CAMBRIDGE-CSV','EFT','-This format uses Code lookups. Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor ebanking details > Payment specifications > Additional fields.::-Initiating Party Name is stored in Organization administration > Setup > Organization > Legal entities > Name field.::-Vendor eBanking details > Wire transfer / IAT - 1 > Beneficiary bank (fast tab):--Beneficiary Bank Address Line 1,Beneficiary Bank Address Line 2,Beneficiary Bank Postal Code,Beneficiary Bank Province are stored in the Address tab. These fields are separated by Semi colon(;).']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
            case ('UK-CAMBRIDGE-CSV'):
                validationsList = this.getValidationsMetaData_UK_CAMBRIDGE_CSV();
                break;

        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData_UK_CAMBRIDGE_CSV</Name>
				<Source><![CDATA[
    private container getValidationsMetaData_UK_CAMBRIDGE_CSV()
    {
        container   validationsList;

        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','WIRE','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field No.2 > Name of Beneficiary','Name related to Vendor','16','WBeneName','','',0,0,1,'100',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','WIRE','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Field No.3 > Beneficiary\'s Account Number','Account Number related to vendor','9','AccountNum','','',0,0,1,'50',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','WIRE','','Intermediary Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank Name','Field No.6 > Beneficiary\'s Bank Country','Intermediary Bank Name','16','WIntBankName','','',1,0,1,'250',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','WIRE','','Intermediary BIC Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','Field No.7 > Intermediary BIC Code','Intermediary Bank Swift Code','16','WIntBankSwift','','',1,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','WIRE','','Beneficiary Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','Field No.8 > Beneficiary\'s Bank Name','Vendor Bank Name','16','WBenBankName','','',0,0,'','250',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','WIRE','','Beneficiary Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Address','Field No.9 > Beneficiary Bank Address Line 1','Address related to vendor bank','16','WBenBankAddr','','',0,0,1,'100',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','WIRE','','Beneficiary Bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','Field No.11 > Beneficiary Bank City','Receiving Bank City','16','WBenBankCity','','',0,0,1,'100',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','WIRE','','Beneficiary\'s Bank SWIFT Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','Field No.14 > Beneficiary\'s Bank SWIFT Code','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','WIRE','','Beneficiary\'s Address Line 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field No.16 > Beneficiary\'s Address Line 1','Address related to vendor','16','WBeneAddr','','',0,0,1,'100',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','WIRE','','Beneficiary\'s Address Line 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field No.17 > Beneficiary\'s Address Line 2','Address related to vendor','16','WBeneAddr2','','',0,0,1,'100',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','WIRE','','Beneficiary\'s City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Field No.18 > Beneficiary\'s City','Vendor city','16','WBeneCity','','',0,0,1,'100',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','WIRE','','Beneficiary\'s Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Field No.19 > Beneficiary\'s Postal Code','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','WIRE','','Beneficiary ISO Country Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field No.23 > Beneficiary ISO Country Code','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','WIRE','','Beneficiary\'s Province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','Field No.24 > Beneficiary\'s Province','State related to vendor','16','WBeneState','','',1,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','WIRE','','Routing Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Field No.25 > Beneficiary\'s Province','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'9',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','EFT','','Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary (group) > Name','Field No.2 > Name of Beneficiary','Name related to Vendor','16','WBeneName','','',0,0,1,'100',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','EFT','','Bank Account Number','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Bank Account Number','Field No.3 > Beneficiary\'s Account Number','Account Number related to vendor','9','AccountNum','','',0,0,1,'50',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','EFT','','Intermediary Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Bank Name','Field No.6 > Beneficiary\'s Bank Country','Intermediary Bank Name','16','WIntBankName','','',1,0,1,'250',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','EFT','','Intermediary BIC Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 2(Fast tab) > Intermediary bank(group) > Swift code','Field No.7 > Intermediary BIC Code','Intermediary Bank Swift Code','16','WIntBankSwift','','',1,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','EFT','','Beneficiary Bank Name','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Name','Field No.8 > Beneficiary\'s Bank Name','Vendor Bank Name','16','WBenBankName','','',0,0,'','250',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','EFT','','Beneficiary Bank Address','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > Address','Field No.9 > Beneficiary Bank Address Line 1','Address related to vendor bank','16','WBenBankAddr','','',0,0,1,'100',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','EFT','','Beneficiary Bank City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary bank(group) > City','Field No.11 > Beneficiary Bank City','Receiving Bank City','16','WBenBankCity','','',0,0,1,'100',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','EFT','','Beneficiary\'s Bank SWIFT Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Swift Code','Field No.14 > Beneficiary\'s Bank SWIFT Code','Swift Code related to Vendor','9','SWIFTNo','','',0,0,1,'20',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','EFT','','Beneficiary\'s Address Line 1','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 1','Field No.16 > Beneficiary\'s Address Line 1','Address related to vendor','16','WBeneAddr','','',0,0,1,'100',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','EFT','','Beneficiary\'s Address Line 2','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Address 2','Field No.17 > Beneficiary\'s Address Line 2','Address related to vendor','16','WBeneAddr2','','',0,0,1,'100',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','EFT','','Beneficiary\'s City','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > City','Field No.18 > Beneficiary\'s City','Vendor city','16','WBeneCity','','',0,0,1,'100',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','EFT','','Beneficiary\'s Postal Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > ZIP/Postal Code','Field No.19 > Beneficiary\'s Postal Code','ZIP/Postal code  related to vendor','16','WBeneZipPostal','','',0,1,'','',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','EFT','','Beneficiary ISO Country Code','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > Country','Field No.23 > Beneficiary ISO Country Code','Country related to vendor','16','WBeneCountryRegionId','','',0,1,'',0,0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','EFT','','Beneficiary\'s Province','TAS > Common > Vendor eBanking details > Payment specifications > Wire transfer/IAT - 1(Fast tab) > Beneficiary(group) > State/province','Field No.24 > Beneficiary\'s Province','State related to vendor','16','WBeneState','','',1,0,1,'30',0,0]);
        validationsList = ConIns(validationsList,conLen(validationsList)+1,['UK-CAMBRIDGE-CSV','EFT','','Routing Code','TAS > Common > Vendor eBanking details > Payment specifications > Vendor bank accounts > General tab > Identification(group) > Routing number','Field No.25 > Beneficiary\'s Province','Routing number related to Vendor','9','RegistrationNum','','',0,0,1,'9',0,0]);

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['UK-CAMBRIDGE-CSV','PayeeClassification','Payee Classification']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-CAMBRIDGE-CSV','PayeeClassification','Individual','Individual']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['UK-CAMBRIDGE-CSV','PayeeClassification','Business','Business']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('UK-CAMBRIDGE-CSV'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_UK_CAMBRIDGE_CSV();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_UK_CAMBRIDGE_CSV</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_UK_CAMBRIDGE_CSV()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-CAMBRIDGE-CSV','UK-CAMBRIDGE-CSV','WIRE','PayeeClassification','Payee Classification',0,'PayeeClassification','',1,'','XXXXXXXXXX','Field 27. Payee Classification']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['UK-CAMBRIDGE-CSV','UK-CAMBRIDGE-CSV','EFT','PayeeClassification','Payee Classification',0,'PayeeClassification','',1,'','XXXXXXXXXX','Field 27. Payee Classification']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>