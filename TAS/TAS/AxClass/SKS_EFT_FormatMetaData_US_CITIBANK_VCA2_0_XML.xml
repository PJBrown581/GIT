<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_CITIBANK_VCA2_0_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_CITIBANK_VCA2_0_XML Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_CITIBANK_VCA2_0_XML Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20230412';
        dataContractVersion = '1.0';
        conFormatID = ['US-CITIBANK-VCA2-0-XML'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,1,1,0,0,'','','','',0,'','','','',1,'US - Citi Bank - VCA2.0 - XML',0,'','','US-CITIBANK-VCA2-0-XML',1,'','','','','','','','',0,0,'00:00.0',0,'00:00.0',1,1,0,0,0,'','','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITIBANK-VCA2-0-XML',1]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-CITIBANK-VCA2-0-XML'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITIBANK_VCA2_0_XML();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITIBANK_VCA2_0_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITIBANK_VCA2_0_XML()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Virtual Card Accounts',1,'VCARD','','VCARD','TRADE PAY',0,'US-CITIBANK-VCA2-0-XML',0,0,0,1,1,0,0,0,1,0,1,1,0,0,0,0,1,2,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-CITIBANK-VCA2-0-XML'):
                notesList = this.getNotesMetaData_US_CITIBANK_VCA2_0_XML();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITIBANK_VCA2_0_XML</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITIBANK_VCA2_0_XML()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITIBANK-VCA2-0-XML','VCARD','-This format uses Code lookups.Please review the fields on these forms.:--Code lookup fields tab on EFT+ file formats > Payment specifications.:--Vendor eBanking details > Payment specifications > Additional fields.::-Vendor eBanking details > Select Vendor > Email (Fast tab) > Select Use vendor eMail check box.:--EMailAddress is required and will be populated if a primary eMail address exists on the Vendor.::-EFT+ bank account > AP EFT+ field> Wire/IAT ordering party tab:--Issuer Id is set in Issuer Id field.:--Common Name is required and stored in the Common Name field.:--Bank number is stored in the Bank number field.:--IcaNumber stored in the IcaNumber field.::-Vendor eBanking details > Payment specifications fields > Wire transfer/IAT-1 tab:--Supplier Name is required and stored in the Beneficiary Name field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITIBANK-VCA2-0-XML','ValidFor','Valid For']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITIBANK-VCA2-0-XML','ValidFor','6 months','6M']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITIBANK-VCA2-0-XML','ValidFor','Month in 45 days','45D']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('US-CITIBANK-VCA2-0-XML'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITIBANK_VCA2_0_XML();
                break;

        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITIBANK_VCA2_0_XML</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITIBANK_VCA2_0_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITIBANK-VCA2-0-XML','US-CITIBANK-VCA2-0-XML','VCARD','ValidFor','Valid For',0,'ValidFor','',0,'','','OrbiscomRequest > OrbiscomTransactionRequest > CreateApprovedPurchaseRequest > ValidFor']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITIBANK-VCA2-0-XML','US-CITIBANK-VCA2-0-XML','VCARD','PurchaseType','Purchase Type',1,'PurchaseType','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','OrbiscomRequest > OrbiscomTransactionRequest > CreateApprovedPurchaseRequest > PurchaseType']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITIBANK-VCA2-0-XML','US-CITIBANK-VCA2-0-XML','VCARD','CurrencyCode','Currency Code',1,'CurrencyCode','',0,'','XXX','OrbiscomRequest > OrbiscomTransactionRequest > CreateApprovedPurchaseRequest > CurrencyCode (Or) OrbiscomRequest > OrbiscomTransactionRequest > CreateApprovedPurchaseRequest > ALSRules > Rule > Controls > VelocityControl > CurrencyCode']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITIBANK-VCA2-0-XML','US-CITIBANK-VCA2-0-XML','VCARD','SupplierName','Supplier Name',1,'SupplierName','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXX','OrbiscomRequest > OrbiscomTransactionRequest > CreateApprovedPurchaseRequest > SupplierName']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITIBANK-VCA2-0-XML','','CodeLookupValues','ValidFor','6 months','']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        switch(_formatID)
        {
            case ('US-CITIBANK-VCA2-0-XML'):
                paymSpecFieldsList = this.getFileFormatFieldsMetaData_US_CITIBANK_VCA2_0_XML();
                break;
        }

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData_US_CITIBANK_VCA2_0_XML</Name>
				<Source><![CDATA[
    private container getFileFormatFieldsMetaData_US_CITIBANK_VCA2_0_XML()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITIBANK-VCA2-0-XML','US-CITIBANK-VCA2-0-XML','IssuerId','Issuer Id',1,'IssuerId','',0,'','X','OrbiscomRequest > IssuerId']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITIBANK-VCA2-0-XML','US-CITIBANK-VCA2-0-XML','CommonName','Common Name',1,'CommonName','',0,'','XXXXXXXXXXXXXXXXXXX','OrbiscomTransactionRequest > CommonName']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITIBANK-VCA2-0-XML','US-CITIBANK-VCA2-0-XML','BankNumber','Bank Number',1,'BankNumber','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','OrbiscomTransactionRequest > BankNumber']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITIBANK-VCA2-0-XML','US-CITIBANK-VCA2-0-XML','IcaNumber','IcaNumber',1,'IcaNumber','',0,'','XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX','OrbiscomTransactionRequest > IcaNumber']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('US-CITIBANK-VCA2-0-XML'):
                if(gSKS_EFT_Bank.W01)
                {
                    this.updateBankFields('IssuerId', gSKS_EFT_Bank.W01);
                }
                if(gSKS_EFT_Bank.W02)
                {
                    this.updateBankFields('CommonName', gSKS_EFT_Bank.W02);
                }
                if(gSKS_EFT_Bank.W03)
                {
                    this.updateBankFields('BankNumber', gSKS_EFT_Bank.W03);
                }
                if(gSKS_EFT_Bank.W04)
                {
                    this.updateBankFields('IcaNumber', gSKS_EFT_Bank.W04);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateARBankCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating the direct debit bank code lookpups from the W0X fields.
    /// </summary>
    protected void updateARBankCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case ('US-CITIBANK-VCA2-0-XML'):
                if(gSKS_EFTAR_Bank.W01)
                {
                    this.updateARBankFields('IssuerId', gSKS_EFTAR_Bank.W01);
                }
                if(gSKS_EFTAR_Bank.W02)
                {
                    this.updateARBankFields('CommonName', gSKS_EFTAR_Bank.W02);
                }
                if(gSKS_EFTAR_Bank.W03)
                {
                    this.updateARBankFields('BankNumber', gSKS_EFTAR_Bank.W03);
                }
                if(gSKS_EFTAR_Bank.W04)
                {
                    this.updateARBankFields('IcaNumber', gSKS_EFTAR_Bank.W04);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>