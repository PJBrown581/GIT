<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_AE_BOD_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_AE_BOD_XML extends SKS_EFT_Format_ISO_20022_001001003
/// </summary>
class SKS_EFT_Format_AE_BOD_XML extends SKS_EFT_Format_ISO_20022_001001003
{
    #define.FormatVersion('20211217')
    #define.SUP('SUP')
    #define.MUP('MUP')
    #define.MMP('MMP')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  IBAN
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
        XmlElement nodeOthr;
        XmlElement nodeSchmeNm;
    
        //          2.80: CdtrAcct
        nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
        //              Id
        nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
        if(mSKS_EFT_FileDetail.DepBankIBAN)
        {
            //                  IBAN
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN);
        }
        else
        {
            //              Othr
            nodeOthr = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
            //                  Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', mSKS_EFT_FileDetail.DepBankAcct);
    
            //                  SchmeNm
            nodeSchmeNm = nodeOthr.appendChild(xmlDoc.createElement('SchmeNm'));
    
            //                      Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSchmeNm, 'Cd', 'BBAN');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //                  BIC
        //                  PstlAdr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmBId;
        XmlElement nodeClrSysId;
        str cd;
    
        //          2.77: CdtrAgt
        nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));
    
        //              FinInstnId
        nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
        if(mSKS_EFT_FileDetail.DepSwiftNo)
        {
            //                  BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 0, false);
        }
        else
        {
            //              ClrSysMmbId
            nodeClrSysMmBId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
            //              ClrSysId
            nodeClrSysId = nodeClrSysMmBId.appendChild(xmlDoc.createElement('ClrSysId'));
    
            //                  2.59: Cd
            cd = SKS_EFT_Format::getValueFromCode('Cd', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId);
    
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', cd);
    
            //                  MmbId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmBId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 0, false);
        }
    
        //                  Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_VendorPaym.WBenBankName), 0, false);
    
        //                  PstlAdr
        this.node_CdtTrfTxInf_CdtrAgt_PstlAdr(nodeFinInstnId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt1</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_IntrmyAgt1(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.71: IntrmyAgt1
        //------------------------------------------------------------------------------------------------------
    
        // Override in format if element is needed
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RgltryRptg</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RgltryRptg(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.89: RgltryRptg
        //              Dtls
        //                  Inf
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeRgltryRptg;
        XmlElement nodeDtls;
        LedgerJournalTrans      ledgerJournalTrans;
        BankCentralBankPurpose  bankCentralBankPurpose;
    
        select firstonly bankCentralBankPurpose join BankCentralBankPurposeCode from ledgerJournalTrans
            where bankCentralBankPurpose.Code == ledgerJournalTrans.BankCentralBankPurposeCode
               && ledgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;
    
        if(bankCentralBankPurpose.Code !='')
        {
            nodeRgltryRptg = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RgltryRptg'));
            nodeDtls = nodeRgltryRptg.appendChild(xmlDoc.createElement('Dtls'));
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Ctry', mRemittanceCountryRegionId);
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDtls, 'Cd', this.CharacterReplacement(bankCentralBankPurpose.Code));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeRmtInf;
        str        invNumbers;
    
        invNumbers = this.getInvoiceNbrs();
        if(invNumbers)
        {
            //          2.98: RmtInf
            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
    
            //              2.99: Ustrd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', invNumbers, 140);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_ChrgBr(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.24 ChrgBr
        //------------------------------------------------------------------------------------------------------
        // Override in format if element is needed
    
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'ChrgBr', this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ChrgBr', mSKS_EFT_FileDetail.RecId)), 0, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_PstlAdr(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
    
        this.node_PstlAdr(_nodeDbtr, this.getLogisticsAddressCountryISO(mSKS_EFT_Bank.WOrdPartyCountryRegionId), '', '', '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_CtgyPurp</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_CtgyPurp(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.14: CtgyPurp
        //------------------------------------------------------------------------------------------------------
        XmlElement  nodeCtgyPurp;
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MMP)
        {
            //              2.15: CtgyPurp
            nodeCtgyPurp = _nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));
    
            //                  2.16: Prtry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', 'SALA');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_InstrPrty</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_InstrPrty(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.7: InstrPrty
        //------------------------------------------------------------------------------------------------------
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SUP ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #MUP)
        {
            //          2.7: InstrPrty
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmftTpInf, 'InstrPrty', 'NORM');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.8: SvcLvl
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
    
        // Override in format if element is needed
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>