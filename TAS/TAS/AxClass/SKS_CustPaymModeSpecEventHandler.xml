<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_CustPaymModeSpecEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_CustPaymModeSpecEventHandler
{
    

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>CustPaymentModeSpec_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataSourceEventHandler(formDataSourceStr(CustPaymModeSpec, CustPaymentModeSpec), FormDataSourceEventType::Initialized)]
    public static void CustPaymentModeSpec_OnInitialized(FormDataSource sender, FormDataSourceEventArgs e)
    {
    ///// <summary>
    /////
    ///// </summary>
    ///// <param name="sender"></param>
    ///// <param name="e"></param>
    //[FormDataSourceEventHandler(formDataSourceStr(CustPaymModeSpec, CustPaymentModeSpec), FormDataSourceEventType::PostLinkActive)]
    //public static void CustPaymentModeSpec_OnPostLinkActive(FormDataSource sender, FormDataSourceEventArgs e)
//    {
        FormRun             formRun = sender.formRun();
        FormDataSource      CustPaymentModeSpec_DS = formRun.dataSource(formDataSourceStr(CustPaymModeSpec, CustPaymentModeSpec)) as FormDataSource;
        CustPaymModeTable   custPaymModeTable      = formRun.parmCustPaymModeTable();

        if (custPaymModeTable.SKS_EFT_PaymMode || custPaymModeTable.SKS_CNP_PaymMode)
        {
            info("@SKS1581");
            CustPaymentModeSpec_DS.insertIfEmpty(false);
            CustPaymentModeSpec_DS.insertAtEnd(false);
            CustPaymentModeSpec_DS.allowCreate(false);
            //CustPaymentModeSpec_DS.allowDelete(false);
            CustPaymentModeSpec_DS.allowEdit(false);
        }
        else
        {
            CustPaymentModeSpec_DS.allowCreate(true);
            CustPaymentModeSpec_DS.allowDelete(true);
            CustPaymentModeSpec_DS.allowEdit(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>VendPaymentModeSpec_OnQueryExecuting</Name>
				<Source><![CDATA[
    //SKS_FDD_10590 -->
    /// <summary>
    ///Setting the range for specification
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormDataSourceEventHandler(formDataSourceStr(CustPaymModeSpec, CustPaymentModeSpec), FormDataSourceEventType::QueryExecuting)]
    public static void VendPaymentModeSpec_OnQueryExecuting(FormDataSource sender, FormDataSourceEventArgs e)
    {     

        if(sender.formRun().args().dataset() == tablenum(CustPaymModeTable) && sender.formRun().args().parm())
        {
            // if sender.formRun().args().parm() retruns specification value, set the range.
            sender.query().dataSourceName(sender.name()).addRange(fieldnum(CustPaymModeSpec, Specification)).value(queryValue(sender.formRun().args().parm()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>RefreshBtn_OnClicked</Name>
				<Source><![CDATA[
    //SKS_FDD_10590 <--

    /// <summary>
    ///
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    [FormControlEventHandler(formControlStr(CustPaymModeSpec, RefreshBtn), FormControlEventType::Clicked)]
    public static void RefreshBtn_OnClicked(FormControl sender, FormControlEventArgs e)
    {
        FormRun form = sender.formRun();

        FormDataSource custPaymentModeSpec_ds = form.dataSource(formDataSourceStr(CustPaymModeSpec, CustPaymentModeSpec)) as FormDataSource;
                
        CustPaymModeTable  custPaymModeTable = form.parmCustPaymModeTable();
        SKS_EFT_FormatId    formatId;
        
        // is CNP
        if (custPaymModeTable.SKS_CNP_PaymMode)
        {
            formatId = custPaymModeTable.SKS_CNP_FormatId;
        }
        else
        {
            formatId = custPaymModeTable.SKS_EFT_FormatId;
        }

        SKS_EFT_FileFormat sks_eft_fileformat = SKS_EFT_FileFormat::find(formatId);

        SKS_EFT_FileFormatPaymSpec sks_eft_fileformatpaymspec;
 
        // go over file format paym spec
        // and if that is not in vendor paym spec,
        // insert it
        while select sks_eft_fileformatpaymspec
            where sks_eft_fileformatpaymspec.FormatId == sks_eft_fileformat.FormatId
            && sks_eft_fileformatpaymspec.Selected == NoYes::Yes
        {
            // check if it exists for vendor paymspec
            CustpaymModeSpec custpaymModeSpecLoc;
            select custpaymModeSpecLoc
                where custpaymModeSpecLoc.PaymMode ==  custPaymModeTable.PaymMode
                && custpaymModeSpecLoc.Specification == sks_eft_fileformatpaymspec.PaymSpec;
            if(!custpaymModeSpecLoc)
            {
                // insert into VendpaymModeSpec
                custpaymModeSpecLoc.PaymMode = custPaymModeTable.PaymMode;
                custpaymModeSpecLoc.Specification = sks_eft_fileformatpaymspec.PaymSpec;
                custpaymModeSpecLoc.Name = sks_eft_fileformatpaymspec.PaymSpecFileDescr;
                custpaymModeSpecLoc.ClassId = classNum(SKS_EFT_CustOutPaymRecord);
                custpaymModeSpecLoc.SKS_EFT_FFPaymSpecRecId = sks_eft_fileformatpaymspec.RecId;

                custpaymModeSpecLoc.insert();
            }
        }

        custPaymentModeSpec_ds.research();
        custPaymentModeSpec_ds.refresh();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>