<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_UG_BARCLAYS_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_UG_BARCLAYS_CSV extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_UG_BARCLAYS_CSV extends SKS_EFT_Format
{
    #define.FormatVersion('20220603')
    #define.EFT_SDSC('EFT-SDSC')
    #define.BKT_SDSC('BKT-SDSC')
    #define.IAT_SDSC('IAT-SDSC')
    #define.EFT_MSDSC('EFT-MSDSC')
    #define.BKT_MSDSC('BKT-MSDSC')
    #define.IAT_MSDSC('IAT-MSDSC')
    #define.Separator(',')
    
    int mPayCount;
    Amount totalAmount;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        this.getSKS_EFT_FileFormatPaymSpec();

        // Pre-Header Record
        this.rec_Pre_Header();

        // Header Record
        this.rec_Header();

        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_Bank
            this.getSKS_EFT_Bank();

            // Get SKS_EFT_VendorPaym
            this.getSKS_EFT_VendorPaym();

            // Ger Remittance address
            this.getRemittanceAddress(false);

            //  Detail Record
            this.rec_Debit_Detail();

            // Payment Record
            this.rec_Payment();
            
            next mSKS_EFT_FileDetail;
        }

        // Trailer Record
        this.rec_Trailer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Pre_Header</Name>
				<Source><![CDATA[
    public boolean rec_Pre_Header()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str value, dateValueStr, timeValueStr;
                
        // BTID  X(10)
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #EFT_SDSC || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #BKT_SDSC ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #IAT_SDSC)
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BTID', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank)) + 'DS';
        }
        else
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BTID', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank)) + 'DB';
        }

        sb.Append(this.wrapField(value));

        // Customer id or Group id X(50)
        sb.Append(this.wrapField(mSKS_EFT_Bank.ACHCompanyID));

        // User id
        sb.Append(this.wrapField(''));

        // File Creation Date DDMMYYYY        
        dateValueStr = date2str(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()), 123,DateDay::Digits2 ,DateSeparator::None,DateMonth::Digits2,DateSeparator::None,DateYear::Digits4);
        sb.Append(this.wrapField(dateValueStr));

        // File Creation time HHMMSS
        timeValueStr = SKS_PP_StringFormats::strTimeHHMMSS();
        sb.Append(this.wrapField(timeValueStr, 0, false));
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Header</Name>
				<Source><![CDATA[
    public boolean rec_Header()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str value, dateValueStr;

        // Record Type
        sb.Append(this.wrapField('1'));

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #EFT_SDSC || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #EFT_MSDSC)
        {
            value = 'LOCAL';
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #IAT_SDSC || mSKS_EFT_FileFormatPaymSpec.TransactionCode ==  #IAT_MSDSC)
        {
            value = 'OWN';
        }
        else
        {
            value = 'INT';
        }
        // File Type
        sb.Append(this.wrapField(value));

        // File Creation Date DDMMYYYY
        dateValueStr = date2str(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()), 123,DateDay::Digits2 ,DateSeparator::None,DateMonth::Digits2,DateSeparator::None,DateYear::Digits4);
        sb.Append(this.wrapField(dateValueStr, 0, false));
        this.fileWrite(sb.ToString());
        mPayCount++;
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Debit_Detail</Name>
				<Source><![CDATA[
    public boolean rec_Debit_Detail()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str value;
        Amount amt;

        // Record Type
        sb.Append(this.wrapField('2'));

        // Debit A/C No X(10)
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.BankBankAcct, 10));

        // Internal Reference X (15)
        sb.Append(this.wrapField(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 15));
        
        // Payment Description  X(40)
        value = SKS_EFT_Format::getValueFromCode('PaymentDesc', mSKS_EFT_FileFormatPaymSpec, mSKS_EFT_VendorPaym.RecId);
        sb.Append(this.wrapField(value));

        // Debit Amount
        amt = -1 * round(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 0.05);
        sb.Append(this.wrapField(num2str(amt, 0, 1, 1, 0), 0, false));
        this.fileWrite(sb.ToString());
        mPayCount++;
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Payment</Name>
				<Source><![CDATA[
    public boolean rec_Payment()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str paymentDateStr, address;
        Amount amt;

        // Record Type
        sb.Append(this.wrapField('3'));
        
        // Beneficiary A/C No X (34)
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankAcct, 34));

        // Display code X(8)
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.DepBankTransit, 8));

        // Payment  Date DDMMYYYY
        paymentDateStr = date2str(mSKS_EFT_FileDetail.EffectiveDate, 123,DateDay::Digits2 ,DateSeparator::None,DateMonth::Digits2,DateSeparator::None,DateYear::Digits4);
        sb.Append(this.wrapField(paymentDateStr));

        // Payment Currency X(3)
        sb.Append(this.wrapField(mSKS_EFT_FileDetail.PaymentCurrencyCode));

        // Payment amount
        amt = -1 * round(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 0.05);
        sb.Append(this.wrapField(num2str(amt, 0, 1, 1, 0), 14));
        totalAmount += amt;

        // Beneficiary Name
        sb.Append(this.wrapField(strRem(this.CharacterReplacement(mRemittanceName), #Separator), 35));

        if(mRemittanceAdrLine2)
        {
            address = mRemittanceAdrLine1 + ' ' +  mRemittanceAdrLine2;
        }
        else
        {
            address = mRemittanceAdrLine1;
        }
        // Beneficiary address
        sb.Append(this.wrapField(strRem(this.CharacterReplacement(address), #Separator)));

        // Beneficiary city
        sb.Append(this.wrapField(strRem(this.CharacterReplacement(mRemittanceCity), #Separator)));

        //Payment Description
        sb.Append(this.wrapField(strRem(this.getJournaltxt(), #Separator), 40, false));
        mPayCount++;
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Trailer</Name>
				<Source><![CDATA[
    public boolean rec_Trailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        // Record Type
        sb.Append(this.wrapField('9'));
        mPayCount++;
        // Total number of records N(5)
        sb.Append(this.wrapField(num2Str(mPayCount, 0, 0, 0, 0), 5));

        // Total payment amount N(18)
        sb.Append(this.wrapField(num2str(totalAmount, 0, 1, 1, 0), 0, false));
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJournaltxt</Name>
				<Source><![CDATA[
    private str getJournaltxt()
    {
        LedgerJournalTrans ledgerJournalTrans;
    
        select crossCompany Txt from ledgerJournalTrans where
            ledgerJournalTrans.RecId == mSKS_EFT_FileDetail.PaymentLineRecId;
    
        return ledgerJournalTrans.Txt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '', int _fieldLength = 0, boolean _addSeparator = true)
    {
        str text;
        ;

        if(_fieldLength > 0)
        {
            text = subStr(_field, 1, _fieldLength);
        }
        else
        {
            text = _field;
        }
        if(_addSeparator)
        {
            text += #Separator;
        }
        return text;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>