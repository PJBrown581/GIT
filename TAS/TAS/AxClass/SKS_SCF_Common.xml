<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_SCF_Common</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_SCF_Common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildFileName</Name>
				<Source><![CDATA[
    public server static SKS_EB_FileName buildFileName(SKS_SCF_FileNbr _SKS_EFT_FileNbr, SKS_EB_FileName _ebFileName, str _connector, boolean _addFileNbr, boolean _addFileDate)
    {
        SKS_EB_FileName locFileName;
        str locExtension;
        int Pos;
        ;
        if (_addFileNbr == NoYes::Yes || _addFileDate == NoYes::Yes)
        {
            Pos = strFind(_ebFileName, '.', 80, -80);
            if (Pos != 0)
            {
                locFileName = substr(_ebFileName,0,Pos-1);
                locExtension = substr(_ebFileName, Pos, strlen(_ebFileName));
            }
            else
            {
                locFileName = _ebFileName;
                locExtension ='';
            }
    
            if (_addFileDate == NoYes::Yes)
            {
                locFileName = locFileName + _connector + Date2Str(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()),321,2,0,2,0,4,DateFlags::None);
            }
    
            if (_addFileNbr == NoYes::Yes)
            {
                locFileName = locFileName + _connector + _SKS_EFT_FileNbr;
            }
    
            locFileName =  locFileName + locExtension;
        }
        else
        {
            locFileName = _ebFileName;
        }
        return locFileName;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileName</Name>
				<Source><![CDATA[
    public server static SKS_EB_FileName getFileName(SKS_SCF_FileNbr _SKS_SCF_FileNbr, VendAccount _ProviderId)
    {
        SKS_EB_FileName locFileName;
        SKS_SCF_Provider locSKS_SCF_Provider;
        NoYes addFileNbr;
        NoYes addFileDate;
        str connector;
        ;
    
        select FileNameAddFileNbr, FileNameAddDate, FileNameConnector, FileName from  locSKS_SCF_Provider 
            where locSKS_SCF_Provider.ProviderID == _ProviderId;
        addFileNbr = locSKS_SCF_Provider.FileNameAddFileNbr;
        addFileDate = locSKS_SCF_Provider.FileNameAddDate;
        connector = locSKS_SCF_Provider.FileNameConnector;
    
        locFileName = SKS_SCF_Common::buildFileName(_SKS_SCF_FileNbr, locSKS_SCF_Provider.FileName, connector, addFileNbr, addFileDate);
    
        return locFileName;
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>getListOfRegisteredModules</Name>
				<Source><![CDATA[
    public static List getListOfRegisteredModules()
    {
        str locFormatFieldPrefix;
        str locName;
        List locListOfModules = new List(Types::String);
        TreeNode locTreeNode;
        TreeNode locChildNode;
    
    
        //This block of code determines how many key fields exist in a single record
        locFormatFieldPrefix = 'REG';
        locTreeNode = TreeNode::findNode(@"\Data Dictionary\Tables\SKS_PP_Setup\Fields");
        if(locTreeNode.AOTchildNodeCount() > 0)
        {
            locChildNode = locTreeNode.AOTfirstChild();
            while(locChildNode != null)
            {
                locName = locChildNode.treeNodeName();
                if  (strStartsWith(strUpr(locName), strUpr(locFormatFieldPrefix)) && 
                        (
                            strUpr(locName) != 'REGAUTHORIZEDUSERS'
                            && strUpr(locName) != 'REGCUSTOMERID'
                            && strUpr(locName) != 'REGUNLOCKKEY'
                            && strUpr(locName) != 'REGVERSION'
                        )
                    )
                {
                    locListOfModules.addEnd(locName);
                }
                locChildNode = locChildNode.AOTnextSibling();
            }
        }
        return locListOfModules;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNumberOfFormats</Name>
				<Source><![CDATA[
    public static int getNumberOfFormats()
    {
        str locFormatFieldPrefix;
        str locName;
        int locNumberOfFormats;
        TreeNode locTreeNode;
        TreeNode locChildNode;
    
    
        //This block of code determines how many key fields exist in a single record
        locFormatFieldPrefix = 'FORMATID';
        locNumberOfFormats = 0;
        locTreeNode = TreeNode::findNode(@"\Data Dictionary\Tables\SKS_SCF_SettlementFileFormat\Fields");
        if(locTreeNode.AOTchildNodeCount() > 0)
        {
            locChildNode = locTreeNode.AOTfirstChild();
            while(locChildNode != null)
            {
                locName = locChildNode.treeNodeName();
                if(strStartsWith(str2Capital(locName), str2Capital(locFormatFieldPrefix)))
                {
                    locNumberOfFormats++;
                }
                locChildNode = locChildNode.AOTnextSibling();
            }
        }
        return locNumberOfFormats;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>