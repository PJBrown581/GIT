<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_DD_DocuViewEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// DocuView event handler
/// </summary>
class SKS_DD_DocuViewEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>DocuEmail_OnClicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// DocuEmail click event handler
    /// </summary>
    /// <param name="sender">Sender</param>
    /// <param name="e">Event type</param>
    [FormControlEventHandler(formControlStr(DocuView, DocuEmail), FormControlEventType::Clicked)]
    public static void DocuEmail_OnClicked(FormControl sender, FormControlEventArgs e)
    {
        CustDirectDebitMandate custDirectDebitMandatetable;
        Filename filename;

        SKS_PP_setup sks_PP_setup = SKS_PP_setup::find();       
        DocuRef docuref = sender.formRun().dataSource('DocuRef').cursor();
        
        filename =  docuRef.docuValue().fileName();
        sks_PP_setup = SKS_PP_setup::find();

        if (sks_PP_setup.RegAREFT)
        {
            select firstonly custDirectDebitMandatetable
                where custDirectDebitMandatetable.DataAreaId == docuref.RefCompanyId &&
                    custDirectDebitMandatetable.RecId == docuref.RefRecId &&
                    custDirectDebitMandatetable.TableId == docuref.RefTableId;

            if(custDirectDebitMandatetable)
            {
                SKS_DD_MandateAutomationProcess::beginProcess(custDirectDebitMandatetable, true, SKS_EFT_Setup::find().SKS_DD_MandatesTemplate, DocuRef.SKS_DD_CustInfo, false /*document is already attached. So don't attach again.*/);
            }
        }
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>DocuView_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    /// DocuView initialized event
    /// </summary>
    /// <param name="sender">Sender</param>
    /// <param name="e">Event type</param>
    [FormEventHandler(formStr(DocuView), FormEventType::Initialized)]
    public static void DocuView_OnInitialized(xFormRun sender, FormEventArgs e)
    {
        FormControl  sendMail   =   sender.design(0).controlName(formControlStr(DocuView, SendMail));
        if(SKS_EFT_Setup::find().ModAREFT   ==  NoYes::Yes)
        {
            sendMail.visible(true);
        }
        else
        {
            sendMail.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DocuRef_onInserted</Name>
				<Source><![CDATA[
    /// <summary>
    /// DocuRef inserted event handler
    /// </summary>
    /// <param name="sender">Sender record</param>
    /// <param name="e">Event type</param>
    [DataEventHandler(tableStr(DocuRef), DataEventType::Inserted)]
    public static void DocuRef_onInserted(Common sender, DataEventArgs e)
    {   
        DocuType docuType;
        SKS_DD_DocuViewEventHandler thisObj = new SKS_DD_DocuViewEventHandler();
        DocuRef docuref = sender as DocuRef;
     
        if (docuref.RefTableId == tableNum(CustDirectDebitMandate) && SKS_PP_setup::find().RegAREFT)// 7498
        {
            docuType            = DocuType::find('Direct debit');
            if(docuRef.TypeId  == docuType.TypeId || docuref.TypeId == SKS_EFT_Setup::find().UnsignedDocumentType || docuref.TypeId == SKS_EFT_Setup::find().SignedDocumentType) // 7498
            {
                //docuRef.TypeId      = docuType.TypeId;
                docuRef.Restriction = DocuRestriction::External;
                thisObj.SKS_DD_primaryEmail(docuref);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>SKS_DD_primaryEmail</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method defaluts the customer's primary e-mailId.
    /// </summary>
    /// <param name = "_docuref">DocuRef table buffer</param>
    /// <remarks>
    /// Defaulting primary e-mailId to send mail.
    /// </remarks>
    private void SKS_DD_primaryEmail(DocuRef _docuref)
    {
        CustTable custTable;
        DirPartyLocation dirPartyLocation;
        LogisticsLocation logisticsLocation;
        CustDirectDebitMandate custDirectDebitMandatetable;
        LogisticsElectronicAddress logisticsElectronicAddress;

        select firstonly CustAccount from custDirectDebitMandatetable
            where custDirectDebitMandatetable.DataAreaId == _docuref.RefCompanyId && 
                custDirectDebitMandatetable.RecId == _docuref.RefRecId && 
                custDirectDebitMandatetable.TableId == _docuref.RefTableId
            join custTable
            where custTable.AccountNum == custDirectDebitMandatetable.CustAccount
            join location from dirPartyLocation
            where dirPartyLocation.Party == custTable.Party
            join RecId from logisticsLocation
            where logisticsLocation.RecId == dirPartyLocation.Location
            join logisticsElectronicAddress
            where logisticsElectronicAddress.Type == LogisticsElectronicAddressMethodType::Email && 
                logisticsElectronicAddress.Location == logisticsLocation.RecId && 
                logisticsElectronicAddress.IsPrimary == NoYes::Yes;

        _docuref.SKS_DD_CustInfo    =   logisticsElectronicAddress.Locator;
        _docuref.SKS_DD_Name        =   custTable.name();       
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>