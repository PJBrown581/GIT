<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_IHB_ImportInterestRatesDelimiter</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_IHB_ImportInterestRatesDelimiter 
{
    SKS_IHB_InterestRates sKS_IHB_InterestRates;
    SKS_IHB_InterestRatesDetail sKS_IHB_InterestRatesDetail;
    SKS_IHB_InterestRateFormat  sKS_IHB_InterestRateFormat;
    SKS_IHB_InterestRateFormatDetail sKS_IHB_InterestRateFormatDetail;
    SKS_IHB_FieldType sKS_IHB_FieldType;
    counter     interestRateIdPosition;
    counter     interestRatePosition;
    counter     descriptionPosition;
    counter     validDatePosition;
    SKS_EB_FileHub locSKS_EB_FileHub;
    SKS_PP_Bank sKS_PP_Bank;    
    CommaStreamIo commaStreamIo;
    container   record;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setFieldPositions</Name>
				<Source><![CDATA[
    public void setFieldPositions()
    {
        while select sKS_IHB_InterestRateFormatDetail
                where sKS_IHB_InterestRateFormatDetail.FormatIdRec == sKS_IHB_InterestRateFormat.RecId
        {
            if (sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::Description)
            { 
                descriptionPosition = sKS_IHB_InterestRateFormatDetail.FieldNbr;                
            }
            else if (sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::InterestId)
            {
                interestRateIdPosition = sKS_IHB_InterestRateFormatDetail.FieldNbr;
            }
            else if (sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::InterestRate)
            {
                interestRatePosition = sKS_IHB_InterestRateFormatDetail.FieldNbr;                
            }
            else if (sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::ValidFromDateDD_MM_YY
                        || sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::ValidFromDateDD_MM_YY_Dashes
                        || sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::ValidFromDateDD_MM_YYYY
                        || sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::ValidFromDateDD_MM_YYYY_Dashes
                        || sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::ValidFromDateDDMMYY
                        || sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::ValidFromDateDDMMYYYY
                        || sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::ValidFromDateMM_DD_YY
                        || sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::ValidFromDateMM_DD_YY_Dashes
                        || sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::ValidFromDateMM_DD_YYYY
                        || sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::ValidFromDateMM_DD_YYYY_Dashes
                        || sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::ValidFromDateMMDDYY
                        || sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::ValidFromDateDDMMYYYY
                        || sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::ValidFromDateYY_MM_DD
                        || sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::ValidFromDateYYYY_MM_DD
                        || sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::ValidFromDateYY_MM_DD_Dashes
                        || sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::ValidFromDateYYYY_MM_DD_Dashes
                        || sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::ValidFromDateYYMMDD
                        || sKS_IHB_InterestRateFormatDetail.MapTo == SKS_IHB_FieldType::ValidFromDateYYYYMMDD)
            { 
                validDatePosition = sKS_IHB_InterestRateFormatDetail.FieldNbr;                
                sKS_IHB_FieldType = sKS_IHB_InterestRateFormatDetail.MapTo;
            }

        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSKS_PP_Bank</Name>
				<Source><![CDATA[
    public void setSKS_PP_Bank(SKS_PP_Bank _sKS_PP_Bank)
    {
        sKS_PP_Bank = _sKS_PP_Bank;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSKS_IHB_InterestRateFormat</Name>
				<Source><![CDATA[
    public void setSKS_IHB_InterestRateFormat(SKS_IHB_InterestRateFormat _sKS_IHB_InterestRateFormat)
    {
        sKS_IHB_InterestRateFormat = _sKS_IHB_InterestRateFormat;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeFile</Name>
				<Source><![CDATA[
    public void closeFile()
    {
        commaStreamIo.finalize();
        locSKS_EB_FileHub.StreamClose();
    }

]]></Source>
			</Method>
			<Method>
				<Name>importInterestRates</Name>
				<Source><![CDATA[
    public void importInterestRates(str _fileName, SKS_EB_FilePath _filePath)
    {  
        SKS_IHB_InterestRateId  sKS_IHB_InterestRateId;
        str   validFromDate;
        TransDate   validDateInDateformate;        
        Description description;
        Percent percent;        
       
        SKS_EB_FileStorage locSKS_EB_FileStorage;
        SKS_BF_BankIntType locSKS_BF_BankIntType;
        select firstonly StorageOption_IHB from locSKS_EB_FileStorage;
        locSKS_BF_BankIntType = locSKS_EB_FileStorage.StorageOption_IHB == SKS_EB_BankIntegOptWithNoLicense::BankFabricEnumValue ? SKS_BF_BankIntType::BankFabric : SKS_BF_BankIntType::FileHubLocal;
        

        locSKS_EB_FileHub = SKS_EB_FileHub::construct(locSKS_BF_BankIntType);

        if(locSKS_BF_BankIntType == SKS_BF_BankIntType::BankFabric)
        {
            locSKS_EB_FileHub.runFileInquire(System.IO.Path::Combine(_filePath, _fileName));
        }
        else
        {
            locSKS_EB_FileHub.runFileInquire(_fileName);
        }
        if(!locSKS_EB_FileHub.attrFileExists())
        {
            // The file %1 does not exist.
            error(strfmt("@SYS62207", _fileName));
            return;
        }
        if(locSKS_BF_BankIntType == SKS_BF_BankIntType::BankFabric)
        {
            locSKS_EB_FileHub.runFileLoad(System.IO.Path::Combine(_filePath, _fileName));
        }
        else
        {
            locSKS_EB_FileHub.runFileLoad();
        }
        locSKS_EB_FileHub.StreamInit();

        commaStreamIo = CommaStreamIo::constructForRead(locSKS_EB_FileHub.streamget());        
             
        if((!commaStreamIo) || (commaStreamIo.status() != IO_Status::Ok))
        {          
            error(strfmt("@SYS19312", _fileName));
            throw(Exception::Error);
        }
        commaStreamIo.inFieldDelimiter(sKS_IHB_InterestRateFormat.FileFieldDelimiter);

        ttsBegin;
        while(commaStreamIo.status() ==Â  IO_Status::Ok)
        {
            record = commaStreamIo.read();
            if(!record)
                break;
           
            sKS_IHB_InterestRateId = conPeek(record,interestRateIdPosition);
            validFromDate = conPeek(record,validDatePosition);
            
            percent = conPeek(record, interestRatePosition);
            if (sKS_IHB_InterestRateFormat.DecimalSeparator)
            {
                percent = str2Num(this.removeSeparator(conPeek(record, interestRatePosition)));
            }            
            description = conPeek(record, descriptionPosition);
            
            select firstonly sKS_IHB_InterestRates
                where sKS_IHB_InterestRates.InterestRateId == sKS_IHB_InterestRateId;
            
            if (sKS_IHB_InterestRates.RecId == 0)
            {
                sKS_IHB_InterestRates.InterestRateId = sKS_IHB_InterestRateId;
                sKS_IHB_InterestRates.Description    = description;
                sKS_IHB_InterestRates.insert();
            }
            switch(sKS_IHB_FieldType)
            {
                case SKS_IHB_FieldType::ValidFromDateMM_DD_YY,
                    SKS_IHB_FieldType::ValidFromDateMM_DD_YY_Dashes,
                    SKS_IHB_FieldType::ValidFromDateMM_DD_YYYY,
                    SKS_IHB_FieldType::ValidFromDateMM_DD_YYYY_Dashes:
                    validDateInDateformate = str2date(validFromDate,213);
                    break;
                case  SKS_IHB_FieldType::ValidFromDateMMDDYYYY:
                    ValidFromDate = subStr(ValidFromDate, 0, 2) + '/' + subStr(ValidFromDate, 3, 2) + '/' + subStr(ValidFromDate, 5, 4) ;
                    validDateInDateformate = str2date(ValidFromDate,213);
                    break;
                case SKS_IHB_FieldType::ValidFromDateMMDDYY:
                    ValidFromDate = subStr(ValidFromDate, 0, 2) + '/' + subStr(ValidFromDate, 3, 2) + '/' + subStr(ValidFromDate, 5, 2) ;
                    validDateInDateformate = str2date(ValidFromDate,213);
                    break;
                case SKS_IHB_FieldType::ValidFromDateYY_MM_DD,
                    SKS_IHB_FieldType::ValidFromDateYY_MM_DD_Dashes,
                    SKS_IHB_FieldType::ValidFromDateYYYY_MM_DD_Dashes,
                    SKS_IHB_FieldType::ValidFromDateYYYY_MM_DD:
                    validDateInDateformate = str2date(validFromDate,321);
                    break;
                case SKS_IHB_FieldType::ValidFromDateYYYYMMDD:
                    ValidFromDate = subStr(ValidFromDate, 0, 4) + '/' + subStr(ValidFromDate, 5, 2) + '/' + subStr(ValidFromDate, 7, 2) ;
                    validDateInDateformate = str2date(validFromDate,321);
                    break;
                case   SKS_IHB_FieldType::ValidFromDateYYMMDD:
                    ValidFromDate = subStr(ValidFromDate, 0, 2) + '/' + subStr(ValidFromDate, 3, 2) + '/' + subStr(ValidFromDate, 5, 2) ;
                    validDateInDateformate = str2date(validFromDate,321);
                    break;
                case SKS_IHB_FieldType::ValidFromDateDD_MM_YY,
                    SKS_IHB_FieldType::ValidFromDateDD_MM_YYYY,
                    SKS_IHB_FieldType::ValidFromDateDD_MM_YY_Dashes,
                    SKS_IHB_FieldType::ValidFromDateDD_MM_YYYY_Dashes:
                    validDateInDateformate = str2date(validFromDate,123);
                    break;
                case SKS_IHB_FieldType::ValidFromDateDDMMYY:
                    ValidFromDate = subStr(ValidFromDate, 0, 2) + '/' + subStr(ValidFromDate, 3, 2) + '/' + subStr(ValidFromDate, 5, 2) ;
                    validDateInDateformate = str2date(validFromDate,123);
                    break;
                case SKS_IHB_FieldType::ValidFromDateDDMMYYYY:
                    ValidFromDate = subStr(ValidFromDate, 0, 2) + '/' + subStr(ValidFromDate, 3, 2) + '/' + subStr(ValidFromDate, 5, 4) ;
                    validDateInDateformate = str2date(validFromDate,123);
                    break;
            }

            select firstonly sKS_IHB_InterestRatesDetail
                where sKS_IHB_InterestRatesDetail.InterestId == sKS_IHB_InterestRates.RecId
                    && sKS_IHB_InterestRatesDetail.ValidFrom  == validDateInDateformate;

            if (sKS_IHB_InterestRatesDetail.RecId == 0)
            {
                sKS_IHB_InterestRatesDetail.InterestId = sKS_IHB_InterestRates.RecId;
                sKS_IHB_InterestRatesDetail.ValidFrom  = validDateInDateformate;
                sKS_IHB_InterestRatesDetail.InterestRate = percent;
                sKS_IHB_InterestRatesDetail.insert();
            }
            else
            {
                sKS_IHB_InterestRatesDetail.selectForUpdate(true);
                sKS_IHB_InterestRatesDetail.InterestRate = percent;
                sKS_IHB_InterestRatesDetail.update();
            }

        }
        ttscommit;     
        this.closeFile();          
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeSeparator</Name>
				<Source><![CDATA[
    str removeSeparator(str amountstr)
    {
        str sepRemoved;
        str sepReplaced;
        ;
    
        if(sKS_IHB_InterestRateFormat.DecimalSeparator == '.')
        {
            sepRemoved = strRem(amountstr, ',');
            return sepRemoved;
        }
        else
        {
            sepRemoved = strRem(amountstr, '.');
            sepReplaced = strReplace(sepRemoved, ',', '.');
            return sepreplaced;
        }   
    
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>