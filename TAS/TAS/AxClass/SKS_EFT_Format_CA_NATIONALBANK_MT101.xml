<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_CA_NATIONALBANK_MT101</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_CA_NATIONALBANK_MT101
/// </summary>
class SKS_EFT_Format_CA_NATIONALBANK_MT101 extends  SKS_EFT_Format
{
    #define.FormatVersion('20221018')
    AmountMST totalAmount;
    int batchCount;
    str transactionDate, debitCurrency;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    protected void formatStructure()
    {
        this.rec_20();
        this.rec_23();
        this.rec_51A();
        this.rec_50K();
        this.rec_71A();

        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();  

            // Get SKS_EFT_FileDetail_BankAccount
            mSKS_EFT_FileDetail_BankAccount = SKS_EFT_FileDetail_BankAccount::find(mSKS_EFT_FileDetail.RecId);
          
            this.rec_21();
            this.rec_32B();
            this.rec_57A();
            this.rec_59A();
            this.rec_70();
            this.rec_26T();
            this.rec_99A();
            this.rec_99B();
            this.rec_99COrD();
            debitCurrency = mSKS_EFT_FileDetail.CurrencyCode;
            batchCount++;

            next mSKS_EFT_FileDetail;
        }
        this.rec_32A();
        this.rec_99N();
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_20</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 20
    /// </summary>
    /// <returns>true</returns>
    boolean rec_20()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str batchRefNum;

        batchRefNum =   mSKS_EFT_FileDetail.AccountCompany + 
            SKS_PP_StringFormats::strDateYYMMDD(mSKS_EFT_FileDetail.EffectiveDate) +
                        SKS_PP_StringFormats::strFill(4, this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('NextSequenceNumber', mSKS_EFT_FileDetail.RecId)), 
                                    SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left);
        transactionDate = SKS_PP_StringFormats::strDateYYMMDD(mSKS_EFT_FileDetail.EffectiveDate);

        if(batchRefNum)
        {
            sb.Append(':20:');
    
            //2     Batch reference number
            sb.Append(batchRefNum);
    
            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_23</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 23
    /// </summary>
    /// <returns>true</returns>
    boolean rec_23()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        sb.Append(':23:');
    
        //2     Transaction Type
        sb.Append('CREDIT');
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_71A</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 71A
    /// </summary>
    /// <returns>true</returns>
    boolean rec_71A()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        sb.Append(':71A:');
    
        //2     Transaction Type
        sb.Append('SHA');
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_51A</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 51A
    /// </summary>
    /// <returns>true</returns>
    boolean rec_51A()
    {
        str paymentCentre;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();        

        paymentCentre = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('PaymentCentre', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));

        if(paymentCentre)
        {
            sb.Append(':51A:');
    
            //2     Payment Centre
            sb.Append(strUpr(subStr(paymentCentre, 1, 8)));
    
            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_50K</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 50K
    /// </summary>
    /// <returns>true</returns>
    boolean rec_50K()
    {
        str address, address1;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        sb.Append(':50K:/');
    
        //    Routing number + Complete account number
        sb.Append(subStr(mSKS_EFT_FileDetail.BankBankTransit, 1,9) + subStr(mSKS_EFT_FileDetail.BankBankAcct, 1, 7));   //SKS#DevOps:18141
        

        //      Ordering party's name
        if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName)
        {
            sb.AppendLine();
            sb.Append(this.CharacterReplacement(strUpr(subStr(mSKS_EFT_FileDetail_BankAccount.WOrdPartyName, 1, 35))));
        }

        //      Address
        if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr)
        {
            sb.AppendLine();
            sb.Append(this.CharacterReplacement(strUpr(subStr(mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr, 1, 35))));
        }

        //      City, Province
        address = mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity;

        if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyState)
        {
            address = address + ',' + mSKS_EFT_FileDetail_BankAccount.WOrdPartyState;
        }
        if(address)
        {
            sb.AppendLine();
            sb.Append(this.CharacterReplacement(strUpr(subStr(address, 1, 35))));
        }

        //      Country, post code
        address1 = this.getLogisticsAddressCountryRegionName(mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId);

        if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode && address1)
        {
            address1 = address1 + ',' + mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode;
        }
        else if(mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode)
        {
            address1 = mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode;
        }
        if(address1)
        {
            sb.AppendLine();
            sb.Append(this.CharacterReplacement(strUpr(subStr(address1, 1, 35))));
        }
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_26T</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 26T
    /// </summary>
    /// <returns>true</returns>
    boolean rec_26T()
    {
        str transactionType;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        transactionType = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('TransType', mSKS_EFT_FileDetail.RecId));

        if(transactionType)
        {
            sb.Append(':26T:');
    
            //2     Transaction Type Code
            sb.Append(strUpr(subStr(transactionType, 1, 3)));
    
            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_99A</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 99A
    /// </summary>
    /// <returns>true</returns>
    boolean rec_99A()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        sb.Append(':99A:');
    
        //2     Transfer currency
        sb.Append(strUpr(mSKS_EFT_FileDetail.PaymentCurrencyCode));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_99B</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 99B
    /// </summary>
    /// <returns>true</returns>
    boolean rec_99B()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        sb.Append(':99B:');
    
        //2     ISO code of destination country
        sb.Append(strUpr(this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId)));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_32A</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 32A
    /// </summary>
    /// <returns>true</returns>
    boolean rec_32A()
    {
        str mPaymentAmount;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        sb.Append(':32A:');

        mPaymentAmount = num2str(this.getPositiveAmount(totalAmount) ,0,2,2,0);
        if(subStr(mPaymentAmount, strLen(mPaymentAmount)-1, strLen(mPaymentAmount)) == '00')
        {
            mPaymentAmount = subStr(mPaymentAmount, 1, strLen(mPaymentAmount)-2);
        }
        sb.Append(transactionDate + debitCurrency + mPaymentAmount);
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_99N</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 99N
    /// </summary>
    /// <returns>true</returns>
    boolean rec_99N()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        sb.Append(':99N:');
        
        sb.Append(num2Str(batchCount, 0,0,0,0));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_99COrD</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 99C or 99D
    /// </summary>
    /// <returns>true</returns>
    boolean rec_99COrD()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        if(mSKS_EFT_FileDetail_VendAddress.Locator)
        {
            sb.Append(':99C:');
            sb.Append(strUpr(mSKS_EFT_FileDetail_VendAddress.Locator));
        }
        else if(mSKS_EFT_FileDetail_VendAddress.Fax)
        {
            sb.Append(':99C:');
            sb.Append(mSKS_EFT_FileDetail_VendAddress.Fax);
        }
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_52A</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 52A
    /// </summary>
    /// <returns>true</returns>
    boolean rec_52A()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        if(mSKS_EFT_FileDetail.BankBankSwiftNo)
        {
            sb.Append(':52A:');
  
            sb.Append(subStr(mSKS_EFT_FileDetail.BankBankSwiftNo, 1, 12));

            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_21</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 21
    /// </summary>
    /// <returns>true</returns>
    boolean rec_21()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        sb.Append(':21:');
    
        //2     Transaction Reference
        sb.Append(strUpr(subStr(mSKS_EFT_FileDetail.PaymentReference, 1, 16)));
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_32B</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 32B
    /// </summary>
    /// <returns>true</returns>
    boolean rec_32B()
    {
        str transAmount;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        //1     Tag
        sb.Append(':32B:');

        //2     Currency
        sb.Append(mSKS_EFT_FileDetail.PaymentCurrencyCode);

        //3     Transaction Amount
        transAmount = num2str(this.getPositiveAmount(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur) ,0,2,2,0);
        if(subStr(transAmount, strLen(transAmount)-1, strLen(transAmount)) == '00')
        {
            transAmount = subStr(transAmount, 1, strLen(transAmount)-2);
            sb.Append(transAmount);
        }
        else
        {
            sb.Append(transAmount);
        }
        totalAmount += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
    
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_57A</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 57A
    /// </summary>
    /// <returns>true</returns>
    boolean rec_57A()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        if(mSKS_EFT_FileDetail.DepSwiftNo)
        {
            sb.Append(':57A:');

            //      Beneficiary bank Swift address
            sb.Append(mSKS_EFT_FileDetail.DepSwiftNo);

            this.fileWrite(sb.ToString());
        }
        else if(mSKS_EFT_FileDetail.DepBankTransit)
        {
            sb.Append(':57C://');
            
            //      Bank Number
            sb.Append(subStr(mSKS_EFT_FileDetail.DepBankTransit, 1, 9));

            if(mSKS_EFT_FileDetail_BenBank.BenBankName)
            {
                sb.AppendLine();
                sb.Append(strUpr(this.CharacterReplacement(subStr(mSKS_EFT_FileDetail_BenBank.BenBankName, 1, 35))));
            }
            //      Address
            if(mSKS_EFT_FileDetail_BenBank.BenBankAddr)
            {
                sb.AppendLine();
                sb.Append(this.CharacterReplacement(strUpr(subStr(mSKS_EFT_FileDetail_BenBank.BenBankAddr, 1, 35))));
            }

            //      City, Province            
            if(mSKS_EFT_FileDetail_BenBank.BenBankCity)
            {
                sb.AppendLine();
                sb.Append(this.CharacterReplacement(strUpr(subStr(mSKS_EFT_FileDetail_BenBank.BenBankCity, 1, 35))));
            }

            //      Country, post code
            if(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId)
            {
                sb.AppendLine();
                sb.Append(this.CharacterReplacement(strUpr(LogisticsAddressCountryRegion::findByISOCode(mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId).displayName())));
            }
            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_59A</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 59A
    /// </summary>
    /// <returns>true</returns>
    boolean rec_59A()
    {
        str address, address1, accounttype;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        if(mSKS_EFT_FileDetail.DepBankAcct  ||  mSKS_EFT_FileDetail.DepBankIBAN || mSKS_EFT_FileDetail_VendAddress.BeneName ||
           mSKS_EFT_FileDetail_VendAddress.BeneAddr || mSKS_EFT_FileDetail_VendAddress.BeneAddr2 || mSKS_EFT_FileDetail_VendAddress.BeneCity ||
           mSKS_EFT_FileDetail_VendAddress.BeneState || mSKS_EFT_FileDetail_VendAddress.BeneZipPostal || mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId)
        {
            //1     Tag
            sb.Append(':59:');
    
            //2     Hyphen "/"
            sb.Append('/');

            //3     Beneficiary account number
            if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::SavingsAccount)         //DevOps 18141
            {
                accounttype = 'SAV';
            }
            if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::CheckingAccount)
            {
                accounttype = 'CHK';
            }            
            if(mSKS_EFT_FileDetail.DepBankIBAN)
            {
                sb.Append(mSKS_EFT_FileDetail.DepBankIBAN);
            }
            else if(mSKS_EFT_FileDetail.DepBankAcct)
            {
                sb.Append(accounttype + subStr(mSKS_EFT_FileDetail.DepBankAcct, 1, 34));
            }
            
            //4     Beneficiary name
            if(mSKS_EFT_FileDetail_VendAddress.BeneName)
            {
                sb.AppendLine();
                sb.Append(subStr(this.CharacterReplacement(strUpr(mSKS_EFT_FileDetail_VendAddress.BeneName)), 1, 35));
            }

            //      Address
            if(mSKS_EFT_FileDetail_VendAddress.BeneAddr)
            {
                sb.AppendLine();
                sb.Append(this.CharacterReplacement(strUpr(subStr(mSKS_EFT_FileDetail_VendAddress.BeneAddr, 1, 35))));
            }

            //      City, Province
            address = mSKS_EFT_FileDetail_VendAddress.BeneCity;

            if(mSKS_EFT_FileDetail_VendAddress.BeneState)
            {
                address = address + ',' + mSKS_EFT_FileDetail_VendAddress.BeneState;
            }
            if(address)
            {
                sb.AppendLine();
                sb.Append(this.CharacterReplacement(strUpr(subStr(address, 1, 35))));
            }

            //      Country, post code            
            address1 = LogisticsAddressCountryRegion::findByISOCode(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId).displayName();

            if(mSKS_EFT_FileDetail_VendAddress.BeneZipPostal && address1)
            {
                address1 = address1 + ',' + mSKS_EFT_FileDetail_VendAddress.BeneZipPostal;
            }
            else if(mSKS_EFT_FileDetail_VendAddress.BeneZipPostal)
            {
                address1 = mSKS_EFT_FileDetail_VendAddress.BeneZipPostal;
            }
            if(address1)
            {
                sb.AppendLine();
                sb.Append(this.CharacterReplacement(strUpr(subStr(address1, 1, 35))));
            }

            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_70</Name>
				<Source><![CDATA[
    /// <summary>
    /// Record 70
    /// </summary>
    /// <returns>true</returns>
    boolean rec_70()
    {
        str invoiceDetails;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
    
        invoiceDetails = strUpr(this.getInvoiceNbrs());
        if(invoiceDetails)
        {
            //1     Tag
            sb.Append(':70:');
    
            //2    Payment details
            sb.Append(subStr(invoiceDetails, 1, 35));

            if(strLen(invoiceDetails) > 35)
            {
                sb.AppendLine();
                sb.Append(subStr(invoiceDetails, 35, 35));
            }
            if(strLen(invoiceDetails) > 70)
            {
                sb.AppendLine();
                sb.Append(subStr(invoiceDetails, 70, 35));
            }
        
            if(strLen(invoiceDetails) > 105)
            {
                sb.AppendLine();
                sb.Append(subStr(invoiceDetails, 105, 35));
            }

            this.fileWrite(sb.ToString());
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceNbrs</Name>
				<Source><![CDATA[
    protected str getInvoiceNbrs()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str invString;
    
        select InvoiceNumber from invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId;
    
        while(invSKS_EFT_FileDetail)
        {
            if(invSKS_EFT_FileDetail.InvoiceNumber == '')
            {
                // If no invoice number, go to next record
                next invSKS_EFT_FileDetail;
                continue;
            }
            sb.Append(invSKS_EFT_FileDetail.InvoiceNumber);
    
            next invSKS_EFT_FileDetail;
    
            if(invSKS_EFT_FileDetail)
            {
                sb.Append(', ');
            }
        }
        invString = this.CharacterReplacement(sb.ToString());
        return invString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
            join mSKS_EFT_FileDetail_BenBank
              order by mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_BenBank.RefRecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>