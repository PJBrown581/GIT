<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EB_AresFileRelocation</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_EB_AresFileRelocation extends SKS_EB_BaseLBFileRelocate
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>FindLBBankByBankAcctNum</Name>
				<Source><![CDATA[
    public void FindLBBankByBankAcctNum(boolean _RestrictByCompany, Container _BankAcctCon, SKS_LB_Formatid _FormatID, Str _FileName, FilePath _OrigFilePath, SKS_BF_BankIntType _sksBankIntType = SKS_BF_BankIntType::FileHubLocal)
    {
        int                     conCount;
        SKS_LB_Bank             lSKS_LB_Bank;
        BankAccountTable        lBankAccount;
        container               LBBankAcct;
        Container               VirtualCompanyCompanies;
        BankAccount             AcctID;
        FilePath                destination;
        SKS_EB_FileHub          fileHub = SKS_EB_FileHub::construct(_sksBankIntType);
        str                     fileName;
        

        virtualCompanyCompanies = CustVendOpenTransManager::findSharedServiceCompanies( curext());

        for(conCount = 1; conCount <= conLen(_BankAcctCon); conCount++)
        {
            AcctID = conPeek(_bankAcctCon, concount);
            if(_RestrictByCompany)
            {
                select LBPath, LBFormatID, LBBankFabricLocation from lSKS_LB_Bank join lBankAccount where lSKS_LB_Bank.LBFormatID == _FormatID &&  lSKS_LB_Bank.BankAccountId == lBankAccount.AccountID
                    && lBankAccount.AccountNum == strLRTrim(AcctID);

                if(!lSKS_LB_Bank)
                {
                    select LBPath, LBFormatID, LBBankFabricLocation from lSKS_LB_Bank  join lBankAccount where lSKS_LB_Bank.LBFormatID == _FormatID && lSKS_LB_Bank.BankAccountId == lBankAccount.AccountID
                        && lSKS_LB_Bank.AltLBAcctLookup == strLRTrim(AcctID);
                }
            }
            else
            {
                select crosscompany:virtualCompanyCompanies LBPath, LBFormatID, LBBankFabricLocation from lSKS_LB_Bank join lBankAccount where lSKS_LB_Bank.LBFormatID == _FormatID && lSKS_LB_Bank.BankAccountId == lBankAccount.AccountID
                    && lBankAccount.AccountNum == strLRTrim(AcctID);

                if(!lSKS_LB_Bank)
                {
                    select crosscompany:virtualCompanyCompanies LBPath, LBFormatID, LBBankFabricLocation from lSKS_LB_Bank join lBankAccount where lSKS_LB_Bank.LBFormatID == _FormatID && lSKS_LB_Bank.BankAccountId == lBankAccount.AccountID
                        && lSKS_LB_Bank.AltLBAcctLookup == strLRTrim(AcctID);
                }
            }

            if(lSKS_LB_Bank)
            {   
                //Prevent duplicate paths from being added when a bank is found on the primary and alternate account number
                if(_sksBankIntType == SKS_BF_BankIntType::FileHubLocal)
                {
                    if(!conFind(LBBankAcct, lSKS_LB_Bank.LBPath))
                    {
                        LBBankAcct += lSKS_LB_Bank.LBPath;
                    }
                }
                else
                {
                    if(!conFind(LBBankAcct, lSKS_LB_Bank.LBBankFabricLocation))
                    {
                        LBBankAcct += lSKS_LB_Bank.LBBankFabricLocation;
                    }
                }
                
            }
            else
            {
                error(strFmt("@SKS3932", AcctID, "@SKS352", _FormatID, _FileName, _OrigFilePath));
            }

        }
        if(conLen(LBBankAcct) == 0)
        {
            this.MoveFileToErrors(_FileName, _OrigFilePath, _sksBankIntType);
        }

        for(concount = 1; concount <= conLen(LBBankAcct); conCount++)
        {            
            destination = System.IO.Path::Combine(conPeek(LBBankAcct, concount), System.IO.Path::GetFileName(_FileName));            
            
            fileName = System.IO.Path::GetFileName(_FileName);
            fileHub.runFileInquire(destination);

            if (fileHub.attrfileExists())
            {
                warning(strFmt("@SYS18625", fileName));
            }
            else
            {
                if(conCount == conLen(LBBankAcct))
                {
                    this.MoveFile(_FileName, conPeek(LBBankAcct, concount), _sksBankIntType);
                }
                else
                {
                    this.CopyFile(_FileName, conPeek(LBBankAcct, concount), _sksBankIntType);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>RelocationProcess</Name>
				<Source><![CDATA[
    public void RelocationProcess(SKS_EB_CommProcess   _CommProcess, SKS_BF_BankIntType _sksBankIntType = SKS_BF_BankIntType::FileHubLocal)
    {
        SKS_EB_FileHub          locSKS_EB_FileHub = SKS_EB_FileHub::construct(_sksBankIntType);
        Container               LBBankAccountCon;
        SKS_LB_FileFormat       lSKS_LB_FileFormat;
        SKS_LB_ReadFileCSV      cls_SKS_LB_ReadFileCSV;
        SKS_LB_ReadFileFixed    cls_SKS_LB_ReadFileFixed;
        SKS_LB_ReadFileBAI2     cls_SKS_LB_ReadFileBAI2;
        SKS_LB_ReadFileEDI      cls_SKS_LB_ReadFileEDI;
        SKS_LB_ReadFileSymcor   cls_SKS_LB_ReadFileSymcor;
        SKS_LB_ReadFileWFRMF    cls_SKS_LB_ReadFileWFRMF;
        SKS_LB_ReadFileCAMT54   cls_SKS_LB_ReadFileCAMT54;
        SKS_LB_ReadFileCAMT54V1 cls_SKS_LB_ReadFileCAMT54V1;
        SKS_LB_ReadFileIR       cls_SKS_LB_ReadFileIR;
        str                     loc_FileName;
        List                    LBDirToProcess = new List(Types::Class);
        List                    LBFilesToProcess;
        ListEnumerator          LBFilesToProcessEnumerator;

        super(_CommProcess, _sksBankIntType);

        changecompany(_CommProcess.RelocCompany)
        {
            select firstOnly FileType, formatid from lSKS_LB_FileFormat where lSKS_LB_FileFormat.FormatID == _CommProcess.RelocLBFormatId;

            if(_sksBankIntType == SKS_BF_BankIntType::FileHubLocal)
            {
                LBFilesToProcess = locSKS_EB_FileHub.runDirectoryGetFiles(_CommProcess.RelocFilePath);                
            }
            else
            {
                LBFilesToProcess = locSKS_EB_FileHub.runDirectoryGetFiles(_CommProcess.RelocBankFabricLocation);
            }
            
            LBFilesToProcessEnumerator = LBFilesToProcess.getEnumerator();
            LBFilesToProcessEnumerator.reset();
            while(LBFilesToProcessEnumerator.moveNext())
            {
                if(_sksBankIntType == SKS_BF_BankIntType::FileHubLocal)
                {
                    loc_filename = LBFilesToProcessEnumerator.current();
                }
                else
                {                    
                    loc_filename = System.IO.Path::Combine(_CommProcess.RelocBankFabricLocation, LBFilesToProcessEnumerator.current());
                }

                switch(lSKS_LB_FileFormat.FileType)
                {
                    case SKS_LB_FileType::TabDelimited:
                    case SKS_LB_FileType::CSV:
                        cls_SKS_LB_ReadFileCSV =  new SKS_LB_ReadFileCSV();
                        If (lSKS_LB_FileFormat.FileType == SKS_LB_FileType::TabDelimited)
                        {
                            cls_SKS_LB_ReadFileCSV.useTabDelimiter();
                        }
                        cls_SKS_LB_ReadFileCSV.setFormatId(lSKS_LB_FileFormat.FormatID);
                        cls_SKS_LB_ReadFileCSV.setFileName(loc_filename);
                        cls_SKS_LB_ReadFileCSV.openFile(true);
                        LBBankAccountCon = cls_SKS_LB_ReadFileCSV.RetrieveBankAccountNumberFromFile();
                        cls_SKS_LB_ReadFileCSV.closeFile();
                        cls_SKS_LB_ReadFileCSV = null;
                        break;
                    case SKS_LB_FileType::FixedField:
                        cls_SKS_LB_ReadFileFixed = new SKS_LB_ReadFileFixed();
                        cls_SKS_LB_ReadFileFixed.setFormatId(lSKS_LB_FileFormat.FormatID);
                        cls_SKS_LB_ReadFileFixed.setFileName(loc_filename);
                        cls_SKS_LB_ReadFileFixed.openFile(true);
                        LBBankAccountCon = cls_SKS_LB_ReadFileFixed.RetrieveBankAccountNumberFromFile();
                        cls_SKS_LB_ReadFileFixed.closeFile();
                        cls_SKS_LB_ReadFileFixed = null;
                        break;

                case SKS_LB_FileType::BAI2:
                case SKS_LB_FileType::Colombia:
                    cls_SKS_LB_ReadFileBAI2 =  new SKS_LB_ReadFileBAI2();
                    cls_SKS_LB_ReadFileBAI2.setFormatId(lSKS_LB_FileFormat.FormatID);
                    cls_SKS_LB_ReadFileBAI2.setFileName(loc_filename);
                    cls_SKS_LB_ReadFileBAI2.openFile(true);
                    LBBankAccountCon = cls_SKS_LB_ReadFileBAI2.RetrieveBankAccountNumberFromFile();
                    cls_SKS_LB_ReadFileBAI2.closeFile();
                    cls_SKS_LB_ReadFileBAI2 = null;
                    break;

                    case SKS_LB_FileType::EDI820:
                    case SKS_LB_FileType::EDI823:
                        cls_SKS_LB_ReadFileEDI = new SKS_LB_ReadFileEDI();
                        cls_SKS_LB_ReadFileEDI.setFormatId(lSKS_LB_FileFormat.FormatID);
                        cls_SKS_LB_ReadFileEDI.setFileName(loc_filename);
                        cls_SKS_LB_ReadFileEDI.openFile(true);
                        LBBankAccountCon = cls_SKS_LB_ReadFileEDI.RetrieveBankAccountNumberFromFile();
                        cls_SKS_LB_ReadFileEDI.closeFile();
                        cls_SKS_LB_ReadFileEDI = null;
                        break;

                    case SKS_LB_FileType::Symcor:
                        cls_SKS_LB_ReadFileSymcor =  new SKS_LB_ReadFileSymcor();
                        cls_SKS_LB_ReadFileSymcor.setFormatId(lSKS_LB_FileFormat.FormatID);
                        cls_SKS_LB_ReadFileSymcor.setFileName(loc_filename);
                        cls_SKS_LB_ReadFileSymcor.openFile(true);
                        LBBankAccountCon = cls_SKS_LB_ReadFileSymcor.RetrieveBankAccountNumberFromFile();
                        cls_SKS_LB_ReadFileSymcor.closefile();
                        cls_SKS_LB_ReadFileSymcor = null;
                        break;

                    case SKS_LB_FileType::WFRMF:
                        cls_SKS_LB_ReadFileWFRMF = new SKS_LB_ReadFileWFRMF();
                        cls_SKS_LB_ReadFileWFRMF.setFormatId(lSKS_LB_FileFormat.FormatID);
                        cls_SKS_LB_ReadFileWFRMF.setFileName(loc_filename);
                        cls_SKS_LB_ReadFileWFRMF.openFile(true);
                        LBBankAccountCon = cls_SKS_LB_ReadFileWFRMF.RetrieveBankAccountNumberFromFile();
                        cls_SKS_LB_ReadFileWFRMF.closeFile();
                        cls_SKS_LB_ReadFileWFRMF = null;
                        break;

                    case SKS_LB_FileType::CAMT54V1:
                        cls_SKS_LB_ReadFileCAMT54V1 = new SKS_LB_ReadFileCAMT54V1();
                        cls_SKS_LB_ReadFileCAMT54V1.setFormatId(lSKS_LB_FileFormat.FormatID);
                        cls_SKS_LB_ReadFileCAMT54V1.setFileName(loc_filename);
                        cls_SKS_LB_ReadFileCAMT54V1.openFile();
                        LBBankAccountCon = cls_SKS_LB_ReadFileCAMT54V1.RetrieveBankAccountNumberFromFile();
                        cls_SKS_LB_ReadFileCAMT54V1 = null;
                        break;

                    case SKS_LB_FileType::CAMT54V2:
                        cls_SKS_LB_ReadFileCAMT54 = new SKS_LB_ReadFileCAMT54();
                        cls_SKS_LB_ReadFileCAMT54.setFormatId(lSKS_LB_FileFormat.FormatID);
                        cls_SKS_LB_ReadFileCAMT54.setFileName(loc_filename);
                        cls_SKS_LB_ReadFileCAMT54.openFile();
                        LBBankAccountCon = cls_SKS_LB_ReadFileCAMT54.RetrieveBankAccountNumberFromFile();
                        cls_SKS_LB_ReadFileCAMT54 = null;
                        break;

                    case SKS_LB_FileType::IntReceive:
                        cls_SKS_LB_ReadFileIR = new SKS_LB_ReadFileIR();
                        cls_SKS_LB_ReadFileIR.setFormatId(lSKS_LB_FileFormat.FormatID);
                        cls_SKS_LB_ReadFileIR.setFileName(loc_filename);
                        cls_SKS_LB_ReadFileIR.openFile();
                        LBBankAccountCon = cls_SKS_LB_ReadFileIR.RetrieveBankAccountNumberFromFile();
                        cls_SKS_LB_ReadFileIR = null;
                        break;

                    default:
                        break;
                }

                if(LBBankAccountCon != conNull())
                {
                    if(_sksBankIntType == SKS_BF_BankIntType::FileHubLocal)
                    {
                        this.FindLBBankByBankAcctNum(_CommProcess.RestrictFormatComp, LBBankAccountCon, lSKS_LB_FileFormat.FormatID, loc_filename, _CommProcess.RelocFilePath, _sksBankIntType);
                    }
                    else
                    {
                        this.FindLBBankByBankAcctNum(_CommProcess.RestrictFormatComp, LBBankAccountCon, lSKS_LB_FileFormat.FormatID, loc_filename, _CommProcess.RelocBankFabricLocation, _sksBankIntType);
                    }
                }
                else
                {
                    if(_sksBankIntType == SKS_BF_BankIntType::FileHubLocal)
                    {
                        this.MoveFileToErrors(loc_filename, _CommProcess.RelocFilePath, _sksBankIntType);
                        throw error(strFmt("@SKS3933", _CommProcess.Module, _CommProcess.RelocLBFormatId, _CommProcess.RelocFilePath, loc_FileName));
                    }
                    else
                    {
                        this.MoveFileToErrors(loc_filename, _CommProcess.RelocBankFabricLocation, _sksBankIntType);
                        throw error(strFmt("@SKS3933", _CommProcess.Module, _CommProcess.RelocLBFormatId, _CommProcess.RelocBankFabricLocation, loc_FileName));
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>