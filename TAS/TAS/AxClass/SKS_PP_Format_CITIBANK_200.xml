<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_CITIBANK_200</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_CITIBANK_200 Extends SKS_PP_Format_BankGroup
{
    SKS_PP_Bank gSKS_PP_Bank;
    real gSumIncludingVoids, gSumFile;
    int gCountIncludingVoids, gCountFile;
    int gNumberOfAccountsProcessed;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        // Eastern Bank - 80
        //Field #    Position    Length    Characteristics    Description
        //Detail    start   size    contents    desc
    
        int Mult;
        real locAmt;
        str ItemType;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        //Convert negative void numbers to positives
        Mult = 1;
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
            if(mSKS_PP_FileDetail.chkcuryamt < 0)
            {
                Mult = -1;
            }
        }
        else
        {
            ItemType = ' ';
        }
    
        //Bank Number
        sb.Append(SKS_PP_StringFormats::strFill(8, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        //Check Amount $$$$$$$$$¢¢
        locAmt = Mult * mSKS_PP_FileDetail.ChkCuryAmt;
        sb.Append(SKS_PP_StringFormats::strMoney(locAmt , 11));
        gSumIncludingVoids += locAmt;
        gCountIncludingVoids += 1;
    
        //Check Serial Number
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        //Check Issue Date MMDDYY
        sb.Append(SKS_PP_StringFormats::strDateYYMMDD(mSKS_PP_FileDetail.ChkDocDate));
    
        //Additional Data (FILLER)(OPTIONAL)
        sb.Append(SKS_PP_StringFormats::strFill(30,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //Void Indicator
        sb.Append(ItemType);//1char
    
        //Payee Name 1(OPTIONAL)
        sb.Append(SKS_PP_StringFormats::strFill(60, mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //Payee Name 2(FILLER) (OPTIONAL)
        sb.Append(SKS_PP_StringFormats::strFill(60,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //FILLER
        sb.Append(SKS_PP_StringFormats::strFill(14,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtFormatTrailer</Name>
				<Source><![CDATA[
    protected str txtFormatTrailer()
    {
        // Citibank - 200
        //Field #     start     size    contents    desc
        //  1            01        1       A/N            Final Trailer Indicator    ‘F’
        //  2            02        09      A            FILLER (SPACES)
        //  3            10        11      N            Trailer Amount    Sum of all detail records including Voids.  Right justified, zero fill (no decimals)
        //  4            21        04       A           FILLER (SPACES)
        //  5            25        10      N            Trailer Item Count    Count of all detail records including Voids.  Right justified, zero fill
        //  6            35        166       Filler        Blanks
        //NOTE:  ONLY USED IF MORE THAN ONE ACCOUNT
    
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str ret;
        ;
    
        if(gNumberOfAccountsProcessed > 1)
        {
            //Final Group Trailer flag
            sb.Append('F');
    
            //FIELD: 2 START: 02 Length: 8 END: 09      Contains: FILLER (SPACES)
            sb.Append(SKS_PP_StringFormats::strFill(8,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            //Trailer amount(Sum of all account detail record including voids)
            sb.Append(SKS_PP_StringFormats::strMoney(gSumFile , 11));
            //FIELD: 4 START: 21 Length: 4 END: 24      Contains: FILLER (SPACES)
            sb.Append(SKS_PP_StringFormats::strFill(4,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            //Count of all detail records including Voids.  Right justified, zero fill
            sb.Append(SKS_PP_StringFormats::strFill(10, int2str(gCountFile),SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
            //FILLER
            sb.Append(SKS_PP_StringFormats::strFill(166,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
            gSumFile += gSumIncludingVoids;
            gCountFile += gCountIncludingVoids;
            gSumIncludingVoids = 0;
            gCountIncludingVoids = 0;
    
            return sb.ToString();
        }
        else
        {
            ret = super();
            return ret;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    protected str txtGroupTrailer()
    {
        // Citibank - 200
        //Field #     start     size    contents    desc
        //  1            01        01       A/N            Trailer Indicator    ‘T’
        //  2            02        08      A            FILLER (SPACES)
        //  3            10        11      N            Trailer Amount    Sum of all detail records including Voids.  Right justified, zero fill (no decimals)
        //  4            21        04       A           FILLER (SPACES)
        //  6            25        10      N            Trailer Item Count    Count of all detail records including Voids.  Right justified, zero fill
        //  6            35        166       Filler        Blanks
    
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        ;
    
        //Account Group Trailer flag
        sb.Append('T');
    
    
        //FIELD: 2 START: 02 Length: 8 END: 09      Contains: FILLER (SPACES)
        sb.Append(SKS_PP_StringFormats::strFill(8,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //Trailer amount(Sum of all account detail record including voids)
        sb.Append(SKS_PP_StringFormats::strMoney(gSumIncludingVoids , 11));
    
        //FIELD: 4 START: 21 Length: 4 END: 24      Contains: FILLER (SPACES)
        sb.Append(SKS_PP_StringFormats::strFill(4,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        //Count of all detail records including Voids.  Right justified, zero fill
        sb.Append(SKS_PP_StringFormats::strFill(10, int2str(gCountIncludingVoids),SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
    
        //FILLER
        sb.Append(SKS_PP_StringFormats::strFill(166,'',SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
    
        gSumFile += gSumIncludingVoids;
        gCountFile += gCountIncludingVoids;
        gNumberOfAccountsProcessed++;
        gSumIncludingVoids = 0;
        gCountIncludingVoids = 0;
    
        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>