<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_SIGNBANK_CSV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class SKS_PP_Format_SIGNBANK_CSV
/// </summary>
class SKS_PP_Format_SIGNBANK_CSV Extends SKS_PP_Format_BankGroup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        int mult;
        str itemType;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str comma = ',';
        
        //Convert negative void numbers to positives
        mult = 1;
        if(mSKS_PP_FileDetail.ChkType == SKS_PP_ChequeType::Cheque)
        {
            itemType = 'I';
        }
        else
        {
            itemType = 'C';
            if(mSKS_PP_FileDetail.chkcuryamt < 0)
            {
                mult = -1;
            }
        }

        sb.Append(itemType);
        sb.Append(comma);

        sb.Append(mSKS_PP_FileDetail.BnkBankAcct);
        sb.Append(comma);

        sb.Append(mSKS_PP_FileDetail.ChkRefNbr);
        sb.Append(comma);

        sb.Append(SKS_PP_StringFormats::strDateMMDDYY(mSKS_PP_FileDetail.ChkDocDate, DateSeparator::None));//DevOps20842
        sb.Append(comma);

        sb.Append(num2Str(mSKS_PP_FileDetail.ChkCuryAmt * mult, 1, 2, 1, 0));
        sb.Append(comma);
        
        sb.Append(strReplace(mSKS_PP_FileDetail.VendName, ',', ' '));

        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>