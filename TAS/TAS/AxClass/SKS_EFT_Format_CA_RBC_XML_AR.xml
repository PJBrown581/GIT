<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_CA_RBC_XML_AR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_CA_RBC_XML_AR extends SKS_EFT_Format_ISO_20022_00800102
/// </summary>
public class SKS_EFT_Format_CA_RBC_XML_AR extends SKS_EFT_Format_ISO_20022_00800102
{
    #define.FormatVersion('20220914')
    #define.CA_ACH('CA-ACH')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodePage</Name>
				<Source><![CDATA[
    protected int getCodePage()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_Dbtr</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_Dbtr(XmlElement _node_DrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.72: Dbtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtr;
    
        //          2.72: Dbtr
        nodeDbtr = _node_DrctDbtTxInf.appendChild(xmlDoc.createElement('Dbtr'));
    
        //              Nm
        this.node_DrctDbtTxInf_Dbtr_Nm(nodeDbtr);
    
        //           PstlAdr
        this.node_DrctDbtTxInf_Dbtr_PstlAdr(nodeDbtr);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_Dbtr_Nm</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_Dbtr_Nm(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.72: Dbtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
    
        //              Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeDbtr, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail.AccountName), 23);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_Dbtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_Dbtr_PstlAdr(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.72: Dbtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
        LogisticsPostalAddress  postalAddress;
        SKS_EB_Address          addressBldgNb, addressStrtNm;
        container               address;
    
        if(mSKS_EFT_FileDetail.AccountNum && mSKS_EFT_FileDetail.AccountType == LedgerJournalACType::Cust)
        {
            postalAddress = this.findPostalAddressLineByPartyLocationRole(CustTable::findByCompany(mSKS_EFT_FileDetail.AccountCompany, mSKS_EFT_FileDetail.AccountNum).Party, 'AREFT');
    
            if(postalAddress)
            {
                if(strScan(postalAddress.Street, ';', 1, strLen(postalAddress.Street)))
                {
                    address = this.addressSplit(postalAddress.Street);
                    addressBldgNb = conpeek(address,1);
                    addressStrtNm = conpeek(address,2);
                }
                else
                {
                    addressStrtNm = postalAddress.Street;
                }
                this.node_PstlAdr(_nodeDbtr, postalAddress.CountryRegionId, addressStrtNm, postalAddress.ZipCode, postalAddress.City, 75, addressBldgNb, postalAddress.State, true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_DbtrAcct(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.73: DbtrAcct
        //              Id
        //                  IBAN
        //              Tp
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;
        XmlElement nodePrtryAcct;
    
        //          2.73: DbtrAcct
        nodeDbtrAcct = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
        //              Id
        nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
    
        //                  PrtryAcct
        nodePrtryAcct = nodeDbtrAcctId.appendChild(xmlDoc.createElement('PrtryAcct'));
    
        //                  Id
        if(mSKS_EFT_FileDetail.DepBankAcct != '')
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePrtryAcct, 'Id', mSKS_EFT_FileDetail.DepBankAcct);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_DbtrAgt(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.70: DbtrAgt
        //              FinInstnId
        //                  CmbndId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeCmbndId;
        XmlElement nodeClrSysMmbId;
        str value;
    
        //          2.70: DbtrAgt
        nodeDbtrAgt = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('DbtrAgt'));
    
        //                   FinInstnId
        nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
        //                         CmbndId
        nodeCmbndId = nodeDbtrAgt.appendChild(xmlDoc.createElement('CmbndId'));
    
        //                            ClrSysMmbId
        nodeClrSysMmbId = nodeCmbndId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
        if(mSKS_EFT_FileDetail.DepBankTransit != '')
        {
            value = strFmt('%1%2', 'CACPA', mSKS_EFT_FileDetail.DepBankTransit);
    
            //                                     Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'Id', value, 14);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_DrctDbtTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_DrctDbtTxInf_RmtInf(XmlElement _nodeDrctDbtTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        XmlElement nodeRmtInf;
        XmlElement nodeStrd;
        XmlElement nodeRfrdDocInf;
        XmlElement nodeRfrdDocAmt;
        XmlElement nodeTp;
        str value;
        Boolean firstRec = true;
    
        while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
        {
            if(invSKS_EFT_FileDetail.InvoiceNumber != '')
            {
                if(firstRec)
                {
                    //          2.98: RmtInf
                    nodeRmtInf = _nodeDrctDbtTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                    firstRec = false;
                }
    
                //              2.100: Strd
                nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));
    
                //              2.101: RfrdDocInf
                nodeRfrdDocInf = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocInf'));
    
                //                  2.102: RfrdDocTp
                nodeTp = nodeRfrdDocInf.appendChild(xmlDoc.createElement('RfrdDocTp'));
    
                //                          2.104: Cd
                if(invSKS_EFT_FileDetail.InvoiceSettleAmountCur > 0)
                {
                    value = 'CINV';
                }
                else
                {
                    value = 'CREN';
                }
    
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeTp, 'Cd', value);
    
                //              2.107: RfrdDocNb
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRfrdDocInf, 'RfrdDocNb', invSKS_EFT_FileDetail.InvoiceNumber);
    
                //              2.108: RfrdDocRltdDt
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeStrd, 'RfrdDocRltdDt', SKS_PP_StringFormats::strDateYYYYMMDD(invSKS_EFT_FileDetail.InvoiceDate, DateSeparator::Hyphen));
    
                //              2.109 RfrdDocAmt
                nodeRfrdDocAmt = nodeStrd.appendChild(xmlDoc.createElement('RfrdDocAmt'));
    
                this.node_RmtInf_Amt(nodeRfrdDocAmt, invSKS_EFT_FileDetail);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr</Name>
				<Source><![CDATA[
    protected void node_GrpHdr()
    {
        //------------------------------------------------------------------------------------------------------
        //  1.0: GrpHdr
        //      1.1: MsgId
        //      1.2: CreDtTm
        //      1.6: NbOfTxs
        //      1.7: CtrlSum
        //      1.8: InitgPty
        //          Nm
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeGrpHdr;
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;
    
        // Select count and sum for this file
        select COUNT(InvoiceOrigAmountCur), SUM(InvoiceSettleAmountPmtCur) from tmpSKS_EFT_FileDetail
            where
                tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary;
    
        //  1.0: GrpHdr
        nodeGrpHdr = nodeRoot.appendChild(xmlDoc.createElement('GrpHdr'));
    
        //      1.1: MsgId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'MsgId', SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr,35));
    
        //      1.2: CreDtTm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CreDtTm', DateTimeUtil::toStr(DateTimeUtil::utcNow()));
    
        //      1.6: NbOfTxs
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'NbOfTxs', num2str(tmpSKS_EFT_FileDetail.InvoiceOrigAmountCur,0,0,0,0));
    
        //      1.7: CtrlSum
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,0,2,1,0));
    
        //       Grpg
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'Grpg', 'MIXD');
    
        //      1.8: InitgPty
        this.node_GrpHdr_InitgPty(nodeGrpHdr);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_Id</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty_Id(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          9.1.12: Id
        //              9.1.13: OrgId
        //                    BkPtyId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        str bankPartyID;
    
        bankPartyID = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BankPartyID', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        if(bankPartyID != '')
        {
            //          9.1.12: Id
            nodeId = _nodeInitgPty.appendChild(xmlDoc.createElement('Id'));
    
            //              9.1.13: OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            //                      9.1.1.16: Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOrgId, 'BkPtyId', this.CharacterReplacement(bankPartyID), 15);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_MessageRoot</Name>
				<Source><![CDATA[
    protected void node_MessageRoot()
    {
        nodeRoot = xmlDoc.appendChild(xmlDoc.createElement('Document'));
    
        SKS_EFT_Format::xmlsetAttributeText(nodeRoot, 'xmlns', 'urn:iso:std:iso:20022:tech:xsd:pain.008.001.01');
        SKS_EFT_Format::xmlsetAttributeText(nodeRoot, 'xmlns:xsi', 'http://www.w3.org/2001/XMLSchema-instance');
        nodeRoot = nodeRoot.appendChild(xmlDoc.createElement('CstmrDrctDbtInitn'));
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr(XmlElement _nodePmtInf)
    {
         //------------------------------------------------------------------------------------------------------
        //      2.15: Cdtr
        //          Nm
        //          PstlAdr
        //          Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtr;
    
        //      2.15: Cdtr
        nodeCdtr = nodePmtInf.appendChild(xmlDoc.createElement('Cdtr'));
    
        //          Nm
        this.node_PmtInf_Cdtr_Nm(nodeCdtr);
    
        //           PstlAdr
        this.node_PmtInf_Cdtr_PstlAdr(nodeCdtr);
    
        //          Id
        this.node_PmtInf_Cdtr_Id(nodeCdtr);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_Id</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_Id(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodePrtryId;
        str grandsAcctNum;
    
        grandsAcctNum = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('GrandsAcctNum', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank));
        if(grandsAcctNum != '')
        {
            //          Id
            nodeId = _nodeCdtr.appendChild(xmlDoc.createElement('Id'));
    
            //              OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            //                     BkPtyId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOrgId, 'BkPtyId', this.CharacterReplacement(grandsAcctNum));
        }
        if(mSKS_EFTAR_Bank.ACHImmOrigName != '')
        {
            //                       PrtryId
            nodePrtryId = _nodeCdtr.appendChild(xmlDoc.createElement('PrtryId'));
    
            //                             Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePrtryId, 'Id', this.CharacterReplacement(mSKS_EFTAR_Bank.ACHImmOrigName));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_Nm</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_Nm(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          Nm
        //------------------------------------------------------------------------------------------------------
    
        //          Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail.FileACHCompanyName), 23, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          Nm
        //------------------------------------------------------------------------------------------------------
        LogisticsPostalAddress  postalAddress;
        SKS_EB_Address          addressBldgNb, addressStrtNm;
        container               address;
    
        postalAddress = this.findPostalAddressLineByPartyLocationRole(CompanyInfo::current(), 'AREFT');
    
        if(postalAddress)
        {
            if(strScan(postalAddress.Street, ';', 1, strLen(postalAddress.Street)))
            {
                address = this.addressSplit(postalAddress.Street);
                addressBldgNb = conpeek(address,1);
                addressStrtNm = conpeek(address,2);
            }
            else
            {
                addressStrtNm = postalAddress.Street;
            }
            this.node_PstlAdr(_nodeCdtr, postalAddress.CountryRegionId, addressStrtNm, postalAddress.ZipCode, postalAddress.City, 75, addressBldgNb, postalAddress.State, true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_CdtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.16: CdtrAcct
        //                  Id
        //                      PrtryAcct
        //                             Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
        XmlElement nodePrtryAcct;
    
        //      2.20: CdtrAcct
        nodeCdtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
        //                    Id
        nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
        //                        PrtryAcct
        nodePrtryAcct =  nodeCdtrAcctId.appendChild(xmlDoc.createElement('PrtryAcct'));
    
        //                                     Id
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePrtryAcct, 'Id', mSKS_EFT_FileDetail.BankBankAcct);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_PmtInf_CdtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.17: CdtrAgt
        //               FinInstnId
        //                     CmbndId
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeCmbndId;
        XmlElement nodeClrSysMmBId;
        str value;
    
        //      2.21: CdtrAgt
        nodeCdtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('CdtrAgt'));
    
        //          FinInstnId
        nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
        //              CmbndId
        nodeCmbndId = nodeFinInstnId.appendChild(xmlDoc.createElement('CmbndId'));
    
        if(mSKS_EFT_FileDetail.BankBankTransit != '')
        {
            value = strFmt('%1%2', 'CACPA', mSKS_EFT_FileDetail.BankBankTransit);
    
            //              ClrSysMmbId
            nodeClrSysMmBId = nodeCmbndId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
    
            //                  Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmBId, 'Id', value, 14, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.8: SvcLvl
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeSvcLvl;
    
        if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::No && subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) != 'CHK')
        {
            //          2.8: SvcLvl
            nodeSvcLvl = _nodePmftTpInf.appendChild(xmlDoc.createElement('SvcLvl'));
    
            //              2.9: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSvcLvl, 'Prtry', 'NORM');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_RmtInf_Amt</Name>
				<Source><![CDATA[
    protected void node_RmtInf_Amt(XmlElement _nodeRfrdDocAmt, SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.42: Amt
        //              CdtNoteAmt
        //              RmtdAmt
        //------------------------------------------------------------------------------------------------------
        XmlElement  currentElement;
        AmountMST   gross = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        AmountMST   Discount = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
        AmountMST   Remitted;
        AmountMST   CreditNote;
    
        if(_invSKS_EFT_FileDetail.InvoiceSettleAmountCur > 0)
        {
            Gross = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            Discount = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
            Remitted = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
            CreditNote = 0;
        }
        else
        {
            Gross = (_invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur) * -1;
            Discount = _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur * -1;
            Remitted = 0;
            CreditNote = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1;
        }
    
        if(Remitted != 0)
        {
            //      RmtdAmt
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'RmtdAmt', num2str(Remitted,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
        else
        {
            //      CdtNoteAmt
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeRfrdDocAmt, 'CdtNoteAmt', num2str(CreditNote,0,2,1,0));
            SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', _invSKS_EFT_FileDetail.PaymentCurrencyCode);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>