<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_US_PNC_PAFF_v20140301</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_US_PNC_PAFF_v20140301 extends SKS_EFT_Format
/// </summary>
class SKS_EFT_Format_US_PNC_PAFF_v20140301 extends SKS_EFT_Format
{
    #define.FormatVersion('20221121')
    int mCheckRecords;
    int mACHRecords;
    int mWIRERecords;
    int mCardRecords;
    int mPaymentRecords;
    int mTotalRecords;
    str AdviceCode;
    str previousSendorId;
    int i=1;

    container mconPaymentRecords;
    container mconPaymentAmount;
    container mconTotalRecords;
    container mconSenderId;
    int ctrlCnt = 0;
    
    AmountMST mCheckAmount;
    AmountMST mACHAmount;
    AmountMST mWIREAmount;
    AmountMST mCARDAmount;
    AmountMST mPaymentAmount;
    AmountMST mInvoiceAdjusted;
    AmountMST mInvoiceTotal;
    
    #define.ACHCTX('ACH-CTX')
    #define.ACHCCD('ACH-CCD')
    #define.ACHPPD('ACH-PPD')
    #define.BMCHK('CHK-BM')
    #define.UMCHK('CHK-UM')
    #define.ONCHK('CHK-ON')
    #define.CNCHK('CHK-CN')                 //VSTS#11181
    #define.ITCHK('CHK-IT')
    #define.2DCHK('CHK-2D')
    #define.PMCHK('CHK-PM')
    #define.FWT('FWT')
    #define.FEW('FEW')
    #define.BOP('BOP')
    #define.PRO('PRO')
    #define.APCARD('APCARD')                //VSTS#11181
    #define.Separator('')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatMoney</Name>
				<Source><![CDATA[
    /// <summary>
    /// Format Money
    /// </summary>
    /// <param name = "_Amt">Amount</param>
    /// <param name = "_length">Length</param>
    /// <returns>FormatedAmt</returns>
    str formatMoney(real _Amt, int _length)    
    {
        str     formatedAmt;
        
        formatedAmt = SKS_PP_StringFormats::strMoney(_Amt, _length);
        
        if(_Amt < 0)        
        {
            formatedAmt = '-' + strRem(formatedAmt, '-');            
        }        
        return formatedAmt;        
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure</Name>
				<Source><![CDATA[
    //Header Record
    //  Check Payment Record
    //      Check Mailing Address Record
    //      Check Remittance Header Record
    //          Check Remittance Detail Record
    //              Check Remittance Description Record
    //      Check Remittance Trailer Record
    //  ACH Payment Record
    //      ACH Remittance Header Record
    //          ACH Remittance Detail Record (AP0, AP2, GE0)
    //          ACH Remittance Trailer Record
    //  Card Payment Record
    //      CARD Remittance Header Record
    //          CARD Remittance Detail Record 
    //          CARD Remittance Trailer Record
    //File Trailer Record
        
    void formatStructure()
    {
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        boolean skipHeader = false;
        str value;
        
        while(mSKS_EFT_FileDetail)
        {
            // Get SKS_EFT_FileFormatPaymSpec
            this.getSKS_EFT_FileFormatPaymSpec();

            mSKS_EFT_FileDetail_BankAccount = SKS_EFT_FileDetail_BankAccount::find(mSKS_EFT_FileDetail.RecId);

            // Get RemittanceAddress
            this.getRemittanceAddress((mSKS_EFT_FileFormatPaymSpec.UseCheckNumber || subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) == 'CHK'));
        
            if(previousSendorId != mSKS_EFT_FileDetail.FileACHCompanyId && i !=1)
            {
                this.rec_Trailer();
            }
            i++;

            if(previousSendorId != mSKS_EFT_FileDetail.FileACHCompanyId)
            {
                skipHeader =false;
               
            }

            //Header Record
            if(!skipHeader)
            {
                this.rec_Header();
                skipHeader = true;
            }
        
            //  Check Payment Record
            switch(mSKS_EFT_FileDetail.PaymSpec)
            {
                case #BMCHK:
                case #UMCHK:
                case #ONCHK:
                case #CNCHK:
                case #ITCHK:
                case #2DCHK:
                case #PMCHK:
                    this.rec_CheckPayment();
                    //Check Mailing Address Record
                    //(Optional: Not used)
                    //Check Remittance Header Record
                    this.rec_CheckRemHeader();
                    break;
                case #ACHCTX:
                case #ACHCCD:
                case #ACHPPD:
                    //  ACH Payment Record
                    this.rec_ACHPayment();
                    
                    //ACH Remittance Header Record
                    this.rec_ACHRemHeader();
                    break;
                case #FWT:
                case #FEW:
                case #BOP:
                case #PRO:
                    //  Wire Payment Record
                    this.rec_WirePayment();

                    //  Wire Detail Record
                    this.rec_WIREDetail();

                    //  Wire Detail Record
                    this.rec_WIREDetail2();
                    break;                    
                case #APCARD:                           //VSTS#11181
                    //  Card Payment Record
                    this.rec_CardPayment();

                    //ACH Remittance Header Record
                    this.rec_CardRemHeader();
                    break;
            }
            while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
            {
                value = SKS_EFT_Format::getCodelookupvalue('BussinessApplFormat', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);

                switch(mSKS_EFT_FileDetail.PaymSpec)
                {
                    case #BMCHK:
                    case #UMCHK:
                    case #ONCHK:
                    case #CNCHK:                 //VSTS#11181
                    case #ITCHK:
                    case #2DCHK:
                    case #PMCHK:
                        //Check Remittance Detail Record
                        if(strUpr(value) == 'AP0')
                        {
                            this.rec_CheckRemDetailAP0(invSKS_EFT_FileDetail);
                        }
                        else if(strUpr(value) == 'AP2')
                        {
                            this.rec_CheckRemDetailAP2(invSKS_EFT_FileDetail);
                        }
                        else if(strUpr(value) == 'FF0' || strUpr(value) == 'GE0')
                        {
                            this.rec_CheckRemDetailGE0(invSKS_EFT_FileDetail);
                        }
                        //Check Remittance Description Record
                        //(Optional: Not used)
                        break;
                    case #ACHCTX:
                    case #ACHCCD:           //SKS_VSTS_13667
                    case #ACHPPD:           //SKS_VSTS_13667
                        //ACH Remittance Detail Record (AP0, AP2, GE0)
                        if(strUpr(value) == 'AP0')
                        {                            
                            this.rec_ACHRemDetailAP0(invSKS_EFT_FileDetail);
                        }
                        else if(strUpr(value) == 'AP2')
                        {
                            this.rec_ACHRemDetailAP2(invSKS_EFT_FileDetail);
                        }
                        else if(strUpr(value) == 'FF0' || strUpr(value) == 'GE0')
                        {
                            this.rec_ACHRemDetailGE0(invSKS_EFT_FileDetail);
                        }
                        break;
                    case #FWT:
                    case #FEW:
                        //Wire Remittance Detail Record
                        this.rec_WIRERemDetail(invSKS_EFT_FileDetail);
                        break;
                    case #APCARD:                                       // VSTS#11181
                        //Card Remittance Detail Record
                        this.rec_CARDRemDetail(invSKS_EFT_FileDetail);
                        break;
                }
            }
            switch(mSKS_EFT_FileDetail.PaymSpec)
            {
                case #BMCHK:
                case #UMCHK:
                case #ONCHK:
                case #CNCHK:
                case #ITCHK:
                case #2DCHK:
                case #PMCHK:
                    //Check Remittance Trailer Record
                    this.rec_CheckRemTrailer();
                    break;
                case #ACHCTX:
                case #ACHCCD:
                case #ACHPPD:
                    //ACH Remittance Trailer Record
                    this.rec_ACHRemTrailer();
                    break;
                case #APCARD:                                   //VSTS#11181
                    //CARD Remittance Trailer Record
                    this.rec_CARDRemTrailer();
                    break;
            }
        
            next mSKS_EFT_FileDetail;
        }

        //File Trailer Record
        this.rec_Trailer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>formatStructure2ndFile</Name>
				<Source><![CDATA[
    /// <summary>
    /// formatStructure2ndFile
    /// </summary>
    //Control Total File
    //Field     Field Name                      Length  Postion
    // 1        Sender Id                           15    1- 15
    // 2        Control Indicator                    1   16- 16
    // 3        Filler                              14   17- 30
    // 4        Total Item Count                     8   31- 38
    // 5        Total Dollar Amount                 12   39- 50
    // 6        Total Record Count                   8   51- 58
    // 7        Filler                              22   59- 80
        
    void formatStructure2ndFile()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        // 1        Sender Id                           15    1- 15
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(15, mSKS_EFT_FileDetail.FileACHCompanyId, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        // 2        Control Indicator                    1   16- 16
        sb.Append('Y');
        
        // 3        Filler                              14   17- 30
        sb.Append(SKS_PP_StringFormats::strFill(14, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 4        Total Item Count                     8   31- 38
        sb.Append(SKS_PP_StringFormats::strFill(8, int2str(mPaymentRecords), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        // 5        Total Dollar Amount                 12   39- 50
        sb.Append(this.formatMoney(-1 * mPaymentAmount,12));
        
        // 6        Total Record Count                   8   51- 58
        sb.Append(SKS_PP_StringFormats::strFill(8, int2str(mTotalRecords), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        // 7        Filler                              22   59- 80
        sb.Append(SKS_PP_StringFormats::strFill(22, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_ACHPayment</Name>
				<Source><![CDATA[
    /// <summary>
    /// ACH Payment
    /// </summary>
    //Field     Check Field Name                Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Payment Type                         3    4-  6
    // 3        Canadian Indicator                   1    7-  7
    // 4        Vendor Number                       10    8- 17
    // 5        Filler                               4   18- 21
    // 6        Currency Type                        3   22- 24
    // 7        Trace Number                        10   25- 34
    // 8        Payment Effective Date               8   35- 42
    // 9        Filler                               3   43- 45
    //10        Payment Amount                      10   46- 55
    //11        Reciever Name                       22   56- 77
    //12        Filler                              13   78- 90
    //13        Individual ID                       15   91-105
    //14        Filler                              20  106-125
    //15        Reciever Address 1                  35  126-160
    //16        Reciever Address 2                  35  161-195
    //17        Reciever Address 3                  35  196-230
    //18        Reciever City                       27  231-257
    //19        Reviever State                       2  258-259
    //20        Reciever Zip                         9  260-268
    //21        Filler                               4  269-272
    //22        Number of Remittance Lines           5  273-277
    //23        Filler                              10  278-287
    //24        Reciever ABA (Transit Routing)       9  288-296
    //25        Filler                               3  297-299
    //26        Reciever Account Number             17  300-316
    //27        ACH Tran Code                        2  317-318
    //28        ACH Type                             3  319-321
    //29        Discretionary Data                  20  322-341
    //30        Filler                               9  342-350
        
    void rec_ACHPayment()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        SKS_EFT_FileDetail  lSKS_EFT_FileDetail;
        int numofInvoices;
        str value;

        mTotalRecords++;
        mPaymentRecords++;
        mACHRecords++;
        
        // 1        Record Identifier                    3    1-  3
        sb.Append('060');
        
        // 2        Payment Type                         3    4-  6
        sb.Append('ACH');
        
        // 3        Canadian Indicator                   1    7-  7
        str CanIndicator = SKS_EFT_Format::getCodelookupvalue('CanIndicator', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);
        if(CanIndicator == 'Y')
        {
            sb.Append('C');
        }
        else
        {
            sb.Append(' ');
        }
        
        // 4        Vendor Number                       10    8- 17
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_EFT_FileDetail.AccountNum, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 5        Filler                               4   18- 21
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 6        Currency Type                        3   22- 24
        sb.Append(SKS_PP_StringFormats::strFill(3, mSKS_EFT_FileDetail.PaymentCurrencyCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 7        Trace Number                        10   25- 34
        sb.Append(SKS_PP_StringFormats::strFill(10, this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        // 8        Payment Effective Date               8   35- 42
        sb.Append(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 9        Filler                               3   43- 45
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //10        Payment Amount                      10   46- 55
        mACHAmount += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        mPaymentAmount += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        
        sb.Append(this.formatMoney(-1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,10));
        
        //11        Reciever Name                       22   56- 77
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(22, this.CharacterReplacement(mRemittanceName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        //12        Filler                              13   78- 90
        sb.Append(SKS_PP_StringFormats::strFill(13, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //13        Individual ID                       15   91-105
        sb.Append(SKS_PP_StringFormats::strFill(15, mSKS_EFT_FileDetail.AccountNum, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));      //SKS_DevOps_17754
        
        //14        Filler                              20  106-125
        sb.Append(SKS_PP_StringFormats::strFill(20, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //15        Reciever Address 1                  35  126-160
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mRemittanceAdrLine1), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        //16        Reciever Address 2                  35  161-195
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mRemittanceAdrLine2), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        //17        Reciever Address 3                  35  196-230
        sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //18        Reciever City                       27  231-257
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(27, this.CharacterReplacement(mRemittanceCity), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        //19        Reviever State                       2  258-259
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(2, this.CharacterReplacement(mRemittanceState), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        //20        Reciever Zip                         9  260-268
        sb.Append(SKS_PP_StringFormats::strFill(9, mRemittanceZipCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //21        Filler                               4  269-272
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //22        Number of Remittance Lines           5  273-277
        select count(Recid) from lSKS_EFT_FileDetail
            where lSKS_EFT_FileDetail.RecordSummaryRecID == mSKS_EFT_FileDetail.RecId && lSKS_EFT_FileDetail.PaymSpec == #ACHCTX;
        
        numofInvoices = int642int(lSKS_EFT_FileDetail.Recid);

        sb.Append(SKS_PP_StringFormats::strFill(5, int2Str(numofInvoices), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        //23        Filler                              10  278-287
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //24        Reciever ABA (Transit Routing)       9  288-296
        sb.Append(SKS_PP_StringFormats::strFill(9, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        //25        Filler                               3  297-299
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //26        Reciever Account Number             17  300-316
        sb.Append(SKS_PP_StringFormats::strFill(17, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //27        ACH Tran Code                        2  317-318
        if(mSKS_EFT_FileDetail.BankAcctType == BankAccountType::CheckingAccount)
        {
            if (mSKS_EFT_FileDetail.RecordType == SKS_EFT_RecordType::PreNote)
            {
                sb.Append('23');
            }
            else
            {
                sb.Append('22');
            }
        }
        else
        {
            if (mSKS_EFT_FileDetail.RecordType == SKS_EFT_RecordType::PreNote)
            {
                sb.Append('33');
            }
            else
            {
                sb.Append('32');
            }
        }
        
        //28        ACH Type                             3  319-321
        switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
        {
            case #ACHCCD:
                value = 'CCD';
                break;
            case #ACHPPD:
                value = 'PPD';
                break;
            case #ACHCTX:
                value = 'CTX';
                break;
        }

        sb.Append(SKS_PP_StringFormats::strFill(3, value, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //29        Discretionary Data                  20  322-341
        sb.Append(SKS_PP_StringFormats::strFill(20, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //30        Filler                               9  342-350
        sb.Append(SKS_PP_StringFormats::strFill(9, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));

        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_ACHRemDetailAP0</Name>
				<Source><![CDATA[
    /// <summary>
    /// ACHRemDetailAP0
    /// </summary>
    /// <param name = "_invSKS_EFT_FileDetail">SKS_EFT_FileDetail</param>

    //Field     Check Field Name                Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Sub Record Identifier                2    4-  5
    // 3        Invoice Date                         8    6- 13
    // 4        Invoice Number                      20   14- 33
    // 5        Descriptive Text                    30   34- 63
    // 6        Invoice Gross Amount                13   64- 76
    // 7        Adjusted Amount                     13   77- 89
    // 8        Net Amount                          13   90-102
    // 9        Filler                             248  103-350
        
    void rec_ACHRemDetailAP0(SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        AmountMST grossAMT;

        mTotalRecords++;
        
        // 1        Record Identifier                    3    1-  3
        sb.Append('070');
        
        // 2        Sub Record Identifier                2    4-  5
        sb.Append('06');
        
        // 3        Invoice Date                         8    6- 13
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(_invSKS_EFT_FileDetail.InvoiceDate), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        // 4        Invoice Number                      20   14- 33
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(20, this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceNumber), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        // 5        Descriptive Text                    30   34- 63
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(30, this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceTransactionTxt), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        // 6        Invoice Gross Amount                13   64- 76
        grossAMT = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
        sb.Append(this.formatMoney(-1 * grossAMT, 13));
        
        // 7        Adjusted Amount                     13   77- 89
        sb.Append(this.formatMoney(-1 * _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur, 13));
        
        // 8        Net Amount                          13   90-102
        sb.Append(this.formatMoney(-1 * _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 13));
        
        // 9        Filler                             248  103-350
        sb.Append(SKS_PP_StringFormats::strFill(248, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        
        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_ACHRemHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// ACHRemHeader
    /// </summary>
    //Field     Check Field Name                Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Sub Record Identifier                2    4-  5
    // 3        Vendor Number                       10    6- 15
    // 4        Filler                             335   16-350
        
    void rec_ACHRemHeader()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        mTotalRecords++;
        
        // 1        Record Identifier                    3    1-  3
        sb.Append('070');
        
        // 2        Sub Record Identifier                2    4-  5
        sb.Append('01');
        
        // 3        Vendor Number                       10    6- 15
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_EFT_FileDetail.AccountNum, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 4        Filler                             335   16-350
        sb.Append(SKS_PP_StringFormats::strFill(335, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        
        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_ACHRemTrailer</Name>
				<Source><![CDATA[
    /// <summary>
    /// ACHRemTrailer
    /// </summary>
    //Field     Check Field Name                Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Sub Record Identifier                2    4-  5
    // 3        Filler                              26    6- 31
    // 4        Filler                             319   32-350
        
    void rec_ACHRemTrailer()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        mTotalRecords++;
        
        // 1        Record Identifier                    3    1-  3
        sb.Append('070');
        
        // 2        Sub Record Identifier                2    4-  5
        sb.Append('09');
        
        // 3        Filler                              26    6- 31
        sb.Append(SKS_PP_StringFormats::strFill(26, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        // 4        Filler                             319   32-350
        sb.Append(SKS_PP_StringFormats::strFill(319, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        
        mInvoiceTotal = 0;
        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_CheckPayment</Name>
				<Source><![CDATA[
    /// <summary>
    /// CheckPayment
    /// </summary>
    //Field     Check Field Name                Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Payment Type                         3    4-  6
    // 3        Check Instruction                    1    7-  7
    // 4        Vendor Number                       10    8- 17
    // 5        Mail Instruction                     2   18- 19
    // 6        Bulk Mail Address Code               2   20- 21
    // 7        Currency Type                        3   22- 24
    // 8        Check Serial Number                 10   25- 34
    // 9        Effective Date of Check              8   35- 42
    //10        Payment Amount                      13   43- 55
    //11        Payee Name 1                        35   56- 90
    //12        Payee Name 2                        35   91-125
    //13        Payee Address 1                     35  126-160
    //14        Payee Address 2                     35  161-195
    //15        Payee Address 3                     35  196-230
    //16        Payee City                          27  231-257
    //17        Payee State                          2  258-259
    //18        Payee Zip Code                       9  260-268
    //19        Filler                               1  269-269
    //20        Payee Country                        3  270-272
    //21        Number of Remittance Lines           5  273-277
    //22        Filler                              10  278-287
    //23        Payment data                        50  288-337
    //24        Filler                              13  338-350
        
    void rec_CheckPayment()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        SKS_EFT_FileDetail  lSKS_EFT_FileDetail, chkSKS_EFT_FileDetail;
        int numofInvoices;

        mTotalRecords++;
        mPaymentRecords++;
        mCheckRecords++;
        
        // 1        Record Identifier                    3    1-  3
        sb.Append('060');
        
        // 2        Payment Type                         3    4-  6
        sb.Append('CHK');
        
        // 3        Check Instruction                    1    7-  7
        if(SKS_EFT_Format::getCodelookupvalue('ChkInstr', mSKS_EFT_FileDetail.RecId) == 'I')
        {
            sb.Append('I');
        }
        else
        {
            sb.Append('X');
        }
        
        // 4        Vendor Number                       10    8- 17
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_EFT_FileDetail.AccountNum, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 5        Mail Instruction                     2   18- 19
        switch(mSKS_EFT_FileDetail.PaymSpec)
        {
            case #BMCHK:
                sb.Append('BM');
                break;
            case #UMCHK:
                sb.Append('UM');
                break;
            case #ONCHK:
                sb.Append('ON');
                break;
            case #CNCHK:
                sb.Append('CN');
                break;
            case #ITCHK:
                sb.Append('IT');
                break;
            case #2DCHK:
                sb.Append('2D');
                break;
            case #PMCHK:
                sb.Append('PM');
                break;
        }
        
        // 6        Bulk Mail Address Code               2   20- 21
        switch(mSKS_EFT_FileDetail.PaymSpec)
        {
            case #BMCHK:
                sb.Append(this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BlkMailCd', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank)));
                break;
            default:
                sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
                break;
        }
        
        // 7        Currency Type                        3   22- 24
        sb.Append(SKS_PP_StringFormats::strFill(3, mSKS_EFT_FileDetail.PaymentCurrencyCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 8        Check Serial Number                 10   25- 34
        sb.Append(SKS_PP_StringFormats::strFill(10, this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        // 9        Effective Date of Check              8   35- 42
        sb.Append(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //10        Payment Amount                      13   43- 55
        mCheckAmount += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        mPaymentAmount += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        
        sb.Append(this.formatMoney(-1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,13));
        
        //11        Payee Name 1                        35   56- 90
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mRemittanceName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        //12        Payee Name 2                        35   91-125
        sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //13        Payee Address 1                     35  126-160
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mRemittanceAdrLine1), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        //14        Payee Address 2                     35  161-195
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mRemittanceAdrLine2), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        //15        Payee Address 3                     35  196-230
        sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //16        Payee City                          27  231-257
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(27, this.CharacterReplacement(mRemittanceCity), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        //17        Payee State                          2  258-259
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(2, this.CharacterReplacement(mRemittanceState), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        //18        Payee Zip Code                       9  260-268
        sb.Append(SKS_PP_StringFormats::strFill(9, mRemittanceZipCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //19        Filler                               1  269-269
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //20        Payee Country                        3  270-272
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(3, this.getLogisticsAddressCountryISO(mRemittanceCountryRegionId), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        //21        Number of Remittance Lines           5  273-277

        select count(Recid) from lSKS_EFT_FileDetail
            where lSKS_EFT_FileDetail.RecordSummaryRecID == mSKS_EFT_FileDetail.RecId
                && (lSKS_EFT_FileDetail.PaymSpec == #UMCHK
                || lSKS_EFT_FileDetail.PaymSpec ==  #ONCHK
                || lSKS_EFT_FileDetail.PaymSpec ==  #BMCHK
                || lSKS_EFT_FileDetail.PaymSpec ==  #CNCHK
                || lSKS_EFT_FileDetail.PaymSpec ==  #ITCHK
                || lSKS_EFT_FileDetail.PaymSpec ==  #2DCHK
                || lSKS_EFT_FileDetail.PaymSpec ==  #PMCHK);
                
        numofInvoices = int642int(lSKS_EFT_FileDetail.Recid);

        while select chkSKS_EFT_FileDetail    //SKG#VSTS:15351
                where chkSKS_EFT_FileDetail.RecordSummaryRecID == mSKS_EFT_FileDetail.RecId
        {
            if(strLen(chkSKS_EFT_FileDetail.InvoiceTransactionTxt) > 30) 
            {                
                numofInvoices++;
            }
        }    
        
        sb.Append(SKS_PP_StringFormats::strFill(5, int2Str(numofInvoices), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        //22        Filler                              10  278-287
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        //23        Payment data                        50  288-337
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(50, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        //24        Filler                              13  338-350
        sb.Append(SKS_PP_StringFormats::strFill(13, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        
        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_CheckRemDetailAP0</Name>
				<Source><![CDATA[
    /// <summary>
    /// CheckRemDetailAP0
    /// </summary>
    /// <param name = "_invSKS_EFT_FileDetail">SKS_EFT_FileDetail</param>
    //Field     Check Field Name                Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Sub Record Identifier                2    4-  5
    // 3        Invoice Date                         8    6- 13
    // 4        Invoice Number                      20   14- 33
    // 5        Descriptive Text                    30   34- 63
    // 6        Invoice Gross Amount                13   64- 76
    // 7        Adjusted Amount                     13   77- 89
    // 8        Net Amount                          13   90-102
    // 9        Filler                             248  103-350
        
    void rec_CheckRemDetailAP0(SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        AmountMST grossAMT;

        mTotalRecords++;
        
        // 1        Record Identifier                    3    1-  3
        sb.Append('070');
        
        // 2        Sub Record Identifier                2    4-  5
        sb.Append('06');
        
        // 3        Invoice Date                         8    6- 13
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(_invSKS_EFT_FileDetail.InvoiceDate), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        // 4        Invoice Number                      20   14- 33
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(20, this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceNumber), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        // 5        Descriptive Text                    30   34- 63
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(30, this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceTransactionTxt), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        // 6        Invoice Gross Amount                13   64- 76
        grossAMT = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
        sb.Append(this.formatMoney(-1 * grossAMT, 13));
        
        // 7        Adjusted Amount                     13   77- 89
        mInvoiceAdjusted += _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
        sb.Append(this.formatMoney(-1 * _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur, 13));
        
        // 8        Net Amount                          13   90-102
        mInvoiceTotal += _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        sb.Append(this.formatMoney(-1 * _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 13));
        
        // 9        Filler                             248  103-350
        sb.Append(SKS_PP_StringFormats::strFill(248, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        
        this.fileWrite(sb.ToString());

        if(strLen(_invSKS_EFT_FileDetail.InvoiceTransactionTxt) > 30)//SKS_DevOps_14992
        {
            this.rec_CheckRemDetail(_invSKS_EFT_FileDetail);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_CheckRemDetail</Name>
				<Source><![CDATA[
    /// <summary>
    /// CheckRemDetail
    /// </summary>
    /// <param name = "_invSKS_EFT_FileDetail">SKS_EFT_FileDetail</param>
    void rec_CheckRemDetail(SKS_EFT_FileDetail _invSKS_EFT_FileDetail)//SKS_DevOps_14992
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        mTotalRecords++;
        
        // 1        Record Identifier                    3    1-  3
        sb.Append('070');
        
        // 2        Sub Record Identifier                2    4-  5
        sb.Append('07');

        // 3        Descriptive text                     53  06-33, 34-58
        sb.Append(SKS_PP_StringFormats::strFill(28, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));          //SKS#DevOps:15351
        
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(25, this.CharacterReplacement(subStr(_invSKS_EFT_FileDetail.InvoiceTransactionTxt, 31,strLen(_invSKS_EFT_FileDetail.InvoiceTransactionTxt))), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));  //SKS#DevOps:15351

        // 4        Filler                             245  59-303
        sb.Append(SKS_PP_StringFormats::strFill(245, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));

        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_CheckRemHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// CheckRemHeader
    /// </summary>
    //Field     Check Field Name                Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Sub Record Identifier                2    4-  5
    // 3        Filler                             345    6-350
        
    void rec_CheckRemHeader()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        mTotalRecords++;
        
        // 1        Record Identifier                    3    1-  3
        sb.Append('070');
        
        // 2        Sub Record Identifier                2    4-  5
        sb.Append('01');
        
        // 3        Filler                              345    6-350
        sb.Append(SKS_PP_StringFormats::strFill(345, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        
        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_CheckRemTrailer</Name>
				<Source><![CDATA[
    /// <summary>
    /// CheckRemTrailer
    /// </summary>

    //Field     Check Field Name                Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Sub Record Identifier                2    4-  5
    // 3        Invoice Total Amount                13    6- 18
    // 4        Adjusted Total Amount               13   19- 31
    // 5        Filler                             319   32-350
        
    void rec_CheckRemTrailer()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        mTotalRecords++;
        
        // 1        Record Identifier                    3    1-  3
        sb.Append('070');
        
        // 2        Sub Record Identifier                2    4-  5
        sb.Append('09');        
        
        // 3        Invoice Total Amount                13    6- 18
        sb.Append(this.formatMoney(-1 * mInvoiceTotal, 13));
        
        // 4        Adjusted Total Amount               13   19- 31
        sb.Append(this.formatMoney(-1 * mInvoiceAdjusted, 13));        
                
        // 5        Filler                             319   32-350
        sb.Append(SKS_PP_StringFormats::strFill(319, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        
        mInvoiceTotal = 0;
        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Header</Name>
				<Source><![CDATA[
    /// <summary>
    /// Header
    /// </summary>
    /// <returns>true</returns>
    //Field Field Name                      Length  Postion
    //1     Record Identifier                    3    1-  3
    //2     Sender Identification Number        15    4- 18
    //3     Business Application Format          3   19- 21
    //4     Customer Name                       16   22- 37
    //5     Transmission Date                    8   38- 45
    //6     Transmission Time                    4   46- 49
    //7     Filler                             301   50-350

    boolean rec_Header()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        mTotalRecords++;
        
        //Field Field Name                      Length  Postion
        //1     Record Identifier                    3    1-  3
        sb.Append('010');
        
        //2     Sender Identification Number        15    4- 18
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(15, mSKS_EFT_FileDetail.FileACHCompanyId, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        previousSendorId = mSKS_EFT_FileDetail.FileACHCompanyId; //DevOps20671

        //3     Business Application Format          3   19- 21
        sb.Append(strUpr(this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('BussinessApplFormat', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank))));
        
        //4     Customer Name                       16   22- 37
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(16, this.CharacterReplacement(mSKS_EFT_FileDetail.FileACHCompanyName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        //5     Transmission Date                    8   38- 45
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone())), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));//SKS_VSTS_14151
        
        //6     Transmission Time                    4   46- 49
        sb.Append(SKS_PP_StringFormats::strTimeHHMM());
        
        //7     Filler                             301   50-350
        sb.Append(SKS_PP_StringFormats::strFill(301, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        
        this.fileWrite(sb.ToString());
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_Trailer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Trailer
    /// </summary>
    /// <returns>True</returns>
    //Field     Field Name                      Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Total Dollar Amount of Checks       13    4- 16
    // 3        Total Records, Checks                7   17- 23
    // 4        Total Dollar Amount of ACHs         13   24- 36
    // 5        Total Records, ACHs                  7   37- 43
    // 6        Total Dollar amount of Wires        13   44- 56
    // 7        Total Records, Wires                 7   57- 63
    // 8        Total Dollar amound of Cards        13   64- 76
    // 9        Total Records, Cards                 7   77- 83
    //10        Total Payment Dollar Amounts        13   84- 96
    //11        Total Payment Records                7   97-103
    //12        Total File Dollar Amounts           13  104-116
    //13        Total File Records                   7  117-123
        
    boolean rec_Trailer()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        mTotalRecords++;
        ctrlCnt++;
        
        // 1        Record Identifier                    3    1-  3
        sb.Append('090');
        
        // 2        Total Dollar Amount of Checks       13    4- 16
        sb.Append(this.formatMoney(-1 * mCheckAmount,13));
        
        // 3        Total Records, Checks                7   17- 23
        sb.Append(SKS_PP_StringFormats::strFill(7, int2str(mCheckRecords), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        // 4        Total Dollar Amount of ACHs         13   24- 36
        sb.Append(this.formatMoney(-1 * mACHAmount,13));
        
        // 5        Total Records, ACHs                  7   37- 43
        sb.Append(SKS_PP_StringFormats::strFill(7, int2str(mACHRecords), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        // 6        Total Dollar amount of Wires        13   44- 56
        sb.Append(this.formatMoney(-1 * mWIREAmount,13));        
        
        // 7        Total Records, Wires                 7   57- 63
        sb.Append(SKS_PP_StringFormats::strFill(7, int2str(mWIRERecords), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        // 8        Total Dollar amound of Cards        13   64- 76
        sb.Append(this.formatMoney(-1 * mCARDAmount,13));
        
        // 9        Total Records, Cards                 7   77- 83
        sb.Append(SKS_PP_StringFormats::strFill(7, int2str(mCardRecords), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        //10        Total Payment Dollar Amounts        13   84- 96
        sb.Append(this.formatMoney(-1 * mPaymentAmount,13));
        
        //11        Total Payment Records                7   97-103
        sb.Append(SKS_PP_StringFormats::strFill(7, int2str(mPaymentRecords), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        //12        Total File Dollar Amounts           13  104-116
        sb.Append(this.formatMoney(-1 * mPaymentAmount,13));
        
        //13        Total File Records                   7  117-123
        sb.Append(SKS_PP_StringFormats::strFill(7, int2str(mTotalRecords), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        
        //14        Filler                             227  124-350
        sb.Append(SKS_PP_StringFormats::strFill(227, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        
        this.fileWrite(sb.ToString());

        mconPaymentAmount += mPaymentAmount;
        mconPaymentRecords += mPaymentRecords;
        mconTotalRecords += mTotalRecords;
        mconSenderId += previousSendorId;

        mCheckAmount = 0;
        mCheckRecords = 0;
        mACHAmount = 0;
        mACHRecords = 0;
        mWIREAmount = 0;
        mWIRERecords = 0;
        mCARDAmount = 0;
        mCardRecords = 0;
        mPaymentAmount = 0;
        mPaymentRecords = 0;
        mTotalRecords = 0;
        
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_WirePayment</Name>
				<Source><![CDATA[
    /// <summary>
    /// WirePayment
    /// </summary>
    //Field     Check Field Name                  Length  Postion
    // 1        Record Id                            3    1-  3
    // 2        Payment Type                         3    4-  6
    // 3        Filler                              15    7-  21
    // 4        Currency Type                        3    22- 24
    // 5        Filler                              10    25- 34
    // 6        Payment Date                         8    35- 42
    // 7        Payment Amount                      13    43- 55
    // 8        Beneficiary Name                    35    56- 90
    // 9        IBAN Account  Number                35    91- 125
    //10        Reciever Address 1                  35    126-160
    //11        Reciever Address 2                  35    161-195
    //12        Reciever Address 3                  35    196-230
    //13        Vendor Management Indicator          1    231-231
    //14        Reviever State Vendor Management    20    232-251
    //          Vendor Number                          
    //15        Filler                              21    252-272
    //16        Number of Remittance Lines           5    273-277
    //17        Beneficiary Bank ID                 12    278-289
    //18        Beneficiary Account Number          17    290-306
    //19        Beneficiary Bank Type                1    307-307
    //20        Filler                               3    308-308
    //21        Beneficiary Account Type             1    311-311
    //22        Repetitive Wire Code                 8    312-319
    //23        Client Transaction ID                30   320-348
    //24        Filler                               1    350-350

    void rec_WirePayment()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        str value, bankType;

        mTotalRecords++;
        mPaymentRecords++;
        mWIRERecords++;
        
        // 1        Record Id                            3    1-  3
        sb.Append('060');
        
        // 2        Payment Type                         3    4-  6
        switch(mSKS_EFT_FileFormatPaymSpec.PaymSpec)
        {
            case #FWT:
                value = 'FWT';
                break;
            case #FEW:
                value = 'FEW';
                break;
            case #BOP:
                value = 'BOP';
                break;
            case #PRO:
                value = 'PRO';
                break;
        }

        sb.Append(value);
        
        // 3        Filler                               1    7-  21
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 4        Currency Type                        3    22- 24
        sb.Append(SKS_PP_StringFormats::strFill(3, mSKS_EFT_FileDetail.PaymentCurrencyCode, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 5        Filler                              10    25- 34
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 6        Payment Date                         8    35- 42
        sb.Append(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 7        Payment Amount                      13    43- 55
        mWIREAmount += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        mPaymentAmount += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        
        sb.Append(this.formatMoney(-1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,13));

        // 8        Beneficiary Name                    35    56- 90
        if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == #FWT ||
           mSKS_EFT_FileFormatPaymSpec.PaymSpec == #BOP)
        {
            sb.Append(strUpr(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mRemittanceName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        // 9        IBAN Account  Number                35    91- 125
        if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == #PRO ||
           mSKS_EFT_FileFormatPaymSpec.PaymSpec == #BOP)
        {
            if(mSKS_EFT_FileDetail.DepBankIBAN)
            {
                sb.Append(SKS_PP_StringFormats::strFill(35, mSKS_EFT_FileDetail.DepBankIBAN, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(35, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            }
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == #FWT ||
           mSKS_EFT_FileFormatPaymSpec.PaymSpec == #BOP)
        {
            //10        Reciever Address 1                  35    126-160
            sb.Append(strUpr(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mRemittanceAdrLine1), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));

            //11        Reciever Address 2                  35    161-195
            sb.Append(strUpr(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mRemittanceAdrLine2), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));

            //12        Reciever Address 3                  35    196-230
            sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mRemittanceCity), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            //10        Reciever Address 1                  35    126-160
            sb.Append(strUpr(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));

            //11        Reciever Address 2                  35    161-195
            sb.Append(strUpr(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));

            //12        Reciever Address 3                  35    196-230
            sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        //13        Vendor Management Indicator          1    231-231
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //14        Reviever State Vendor Management Vendor Number 20    232-251
        sb.Append(SKS_PP_StringFormats::strFill(20, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //15        Filler                              21    252-272
        sb.Append(SKS_PP_StringFormats::strFill(21, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //16        Number of Remittance Lines           5    273-277
        sb.Append(SKS_PP_StringFormats::strFill(5, '1', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //17        Beneficiary Bank ID                 12    278-289
        if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == #FWT)
        {
            sb.Append(SKS_PP_StringFormats::strFill(12, mSKS_EFT_FileDetail.DepBankTransit, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            bankType = 'A';
        }
        else if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == #BOP)
        {
            sb.Append(SKS_PP_StringFormats::strFill(12, mSKS_EFT_FileDetail.DepSwiftNo, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            bankType = 'S';
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(12, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            bankType = '';
        }
        //18        Beneficiary Account Number          17    290-306
        if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == #BOP || mSKS_EFT_FileFormatPaymSpec.PaymSpec == #FWT)
        {
            if(mSKS_EFT_FileDetail.DepBankIBAN && mSKS_EFT_FileFormatPaymSpec.PaymSpec == #BOP)
            {
                sb.Append(SKS_PP_StringFormats::strFill(17, mSKS_EFT_FileDetail.DepBankIBAN, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            }
            else
            {
                sb.Append(SKS_PP_StringFormats::strFill(17, mSKS_EFT_FileDetail.DepBankAcct, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
            }
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(17, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        //19        Beneficiary Bank Type                1    307-307
        sb.Append(SKS_PP_StringFormats::strFill(1, bankType, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //20        Filler                               3    308-308
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //21        Beneficiary Account Type             1    311-311
        if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == #FWT ||
           mSKS_EFT_FileFormatPaymSpec.PaymSpec == #BOP)
        {
            if(mSKS_EFT_FileDetail.BankAcctType == BankAccountType::CheckingAccount)
            {
                sb.Append('D');
            }
            else
            {
                sb.Append('G');
            }
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        //22        Repetitive Wire Code                 8    312-319
        if(mSKS_EFT_FileFormatPaymSpec.PaymSpec == #FEW ||
           mSKS_EFT_FileFormatPaymSpec.PaymSpec == #PRO)
        {
            sb.Append(SKS_PP_StringFormats::strFill(8, this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('RepWireCd', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank)), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        //23        Client Transaction ID                30   320-348
        sb.Append(SKS_PP_StringFormats::strFill(30, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //24        Filler                               1    350-350
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_WIREDetail</Name>
				<Source><![CDATA[
    /// <summary>
    /// WIREDetail
    /// </summary>
    //Field     Check Field Name                Length  Postion
    // 1        Record Id                            3    1-  3
    // 2        Originator to Beneficiary Text 1     35   4-  38
    // 3        Originator to Beneficiary Text 2     35   39- 73
    // 4        Originator to Beneficiary Text 3     35   74- 108
    // 5        Originator to Beneficiary Text 4     35   109- 143
    // 6        Reference for Beneficiary            16   144- 159
    // 7        Advice Code                           3   160- 162
    // 8        Advice Description                   35   163- 197
    // 9        Filler                               153  193- 350
        
    void rec_WIREDetail()
    {
        mTotalRecords++;
        AdviceCode = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('AdviceCode', mSKS_EFT_FileDetail.RecId));

        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        // 1        Record Id                            3    1-  3
        sb.Append('080');
        
        // 2        Originator to Beneficiary Text 1     35   4-  38
        sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(msKS_EFT_FileDetail_Instructions.PmtInstText1), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 3        Originator to Beneficiary Text 2     35   39- 73
        sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(msKS_EFT_FileDetail_Instructions.PmtInstText2), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 4        Originator to Beneficiary Text 3     35   74- 108
        sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(msKS_EFT_FileDetail_Instructions.PmtInstText3), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 5        Originator to Beneficiary Text 4     35   109- 143
        sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(msKS_EFT_FileDetail_Instructions.PmtInstText4), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 6        Reference for Beneficiary            16   144- 159
        sb.Append(SKS_PP_StringFormats::strFill(16, this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 7        Advice Code                           3   160- 162
        sb.Append(SKS_PP_StringFormats::strFill(3, this.CharacterReplacement(AdviceCode), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 8        Advice Description                   35   163- 197
        if(AdviceCode == 'CHG')
        {
            sb.Append(SKS_PP_StringFormats::strFill(35,'DEBT' + this.CharacterReplacement(LedgerJournalTrans::findRecId(mSKS_EFT_FileDetail.PaymentLineRecId, false).PaymentNotes), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }
        else
        {
            sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(LedgerJournalTrans::findRecId(mSKS_EFT_FileDetail.PaymentLineRecId, false).PaymentNotes), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        }

        // 9        Filler                               153  193- 350
        sb.Append(SKS_PP_StringFormats::strFill(153, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_WIREDetail2</Name>
				<Source><![CDATA[
    /// <summary>
    /// WIREDetail2
    /// </summary>
    //Field     Check Field Name                Length  Postion
    // 1		Record ID							3	1-	 3
    // 2		Receiving Bank Name					35	4-   38
    // 3		Receiving Bank Address 1			35	39-	 73
    // 4		Receiving Bank Address 2			35	74-	 108
    // 5		Receiving Bank City					35	109- 143
    // 6		Filler								2	144- 145
    // 7		Receiving Bank Type					1	146- 146
    // 8		Receiving Bank ID					12	147- 158
    // 9		Beneficiary Bank Name				35	159- 193
    // 10		Beneficiary Bank Address 1			35	194- 228
    // 11		Beneficiary Bank Address 2			35	229- 263
    // 12		Beneficiary Bank City				35	264- 298
    // 13		Filler								52	299- 350

    void rec_WIREDetail2()
    {
        mTotalRecords++;

        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        // 1        Record Id                            3    1-  3
        sb.Append('085');

        // 2		Receiving Bank Name					35	4-   38
        sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 3		Receiving Bank Address 1			35	39-	 73
        sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankAddr), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        // 4		Receiving Bank Address 2			35	74-	 108
        sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 5		Receiving Bank City					35	109- 143
        sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankCity), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 6		Filler								2	144- 145
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 7		Receiving Bank Type					1	146- 146
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 8		Receiving Bank ID					12	147- 158
        sb.Append(SKS_PP_StringFormats::strFill(12, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 9		Beneficiary Bank Name				35	159- 193
        sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 10		Beneficiary Bank Address 1			35	194- 228
        sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankAddr), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 11		Beneficiary Bank Address 2			35	229- 263
        sb.Append(SKS_PP_StringFormats::strFill(35, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 12		Beneficiary Bank City				35	264- 298
        sb.Append(SKS_PP_StringFormats::strFill(35, this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankCity), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 13		Filler								52	299- 350
        sb.Append(SKS_PP_StringFormats::strFill(52, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_WIRERemDetail</Name>
				<Source><![CDATA[
    /// <summary>
    /// WIRERemDetail
    /// </summary>
    /// <param name = "_invSKS_EFT_FileDetail">SKS_EFT_FileDetail</param>
    //Field     Check Field Name                Length  Postion
    // 1		Record ID							3	  1- 3
    // 2		Remit Qualifier						3	  4- 6
    // 3		Remit Identification				30	  7- 36
    // 4		Payment Action Code					2	 37- 38
    // 5		Remit Net Amount					16	 39- 54
    // 6		Remit Gross Amount					16	 55- 70
    // 7		Remit Discount Amount				16	 71- 86
    // 8		Remit Adjustment Amount				16	 87- 102
    // 9		Adjustment Reason Code				2	103- 104
    // 10		Adjustment Description				30	105- 134
    // 11		Remit Date Type					    3	135- 137
    // 12		Remittance Date						8	138- 145
    // 13		Reference Data Type					3	146- 148
    // 14		Reference Identifier				30	149- 178
    // 15		Reference Description				80	179- 258
    // 16		Filler 								92	259- 350

    void rec_WIRERemDetail(SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        AmountMST grossAMT;   

        mTotalRecords++;
        
        // 1		Record ID							3	  1- 3
        sb.Append('087');
        
        // 2		Remit Qualifier						3	  4- 6
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 3		Remit Identification				30	  7- 36
        sb.Append(SKS_PP_StringFormats::strFill(30, this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceNumber), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 4		Payment Action Code					2	 37- 38
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 5		Remit Net Amount					16	 39- 54
        sb.Append(this.formatMoney(-1 * _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 16));

        // 6		Remit Gross Amount					16	 55- 70
        grossAMT = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
        sb.Append(this.formatMoney(-1 * grossAMT, 16));

        // 7		Remit Discount Amount				16	 71- 86
        sb.Append(this.formatMoney(-1 * _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur, 16));

        // 8		Remit Adjustment Amount				16	 87- 102
        sb.Append(SKS_PP_StringFormats::strFill(16, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 9		Adjustment Reason Code				2	103- 104
        sb.Append(SKS_PP_StringFormats::strFill(2, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 10		Adjustment Description				30	105- 134
        sb.Append(SKS_PP_StringFormats::strFill(30, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 11		Remit Date Type					    3	135- 137
        sb.Append('003');

        // 12		Remittance Date						8	138- 145
        sb.Append(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(_invSKS_EFT_FileDetail.InvoiceDate), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 13		Reference Data Type					3	146- 148
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 14		Reference Identifier				30	149- 178
        sb.Append(SKS_PP_StringFormats::strFill(30, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 15		Reference Description				80	179- 258
        sb.Append(SKS_PP_StringFormats::strFill(80, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 16		Filler 								92	259- 350
        sb.Append(SKS_PP_StringFormats::strFill(92, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_CheckRemDetailAP2</Name>
				<Source><![CDATA[
    /// <summary>
    /// CheckRemDetailAP2
    /// </summary>
    /// <param name = "_invSKS_EFT_FileDetail">SKS_EFT_FileDetail</param>
    //Field     Check Field Name                Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Sub Record Identifier                2    4-  5
    // 3        Invoice Date                         8    6- 13
    // 4        Invoice Number                      17   14- 30
    // 5        Invoice Gross Amount                13   31- 43
    // 6        Invoice Amount Paid                 13   44- 56
    // 7        Discount                            13   57- 69
    // 8        Net Amount                          13   70- 82
    // 9        Filler                             268   83-350
        
    void rec_CheckRemDetailAP2(SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        AmountMST grossAMT;

        mTotalRecords++;
        
        // 1        Record Identifier                    3    1-  3
        sb.Append('070');
        
        // 2        Sub Record Identifier                2    4-  5
        sb.Append('06');
        
        // 3        Invoice Date                         8    6- 13
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(_invSKS_EFT_FileDetail.InvoiceDate), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        // 4        Invoice Number                      20   14- 33
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(17, this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceNumber), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        // 5        Invoice Gross Amount                13   31- 43
        grossAMT = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
        sb.Append(this.formatMoney(-1 * grossAMT, 13));
        
        // 6        Invoice Amount Paid                 13   44- 56
        sb.Append(this.formatMoney(-1 *_invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 13));
        
        // 7        Discount                            13   57- 69
        mInvoiceAdjusted += _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
        sb.Append(this.formatMoney(-1 * _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur, 13));
        
        // 8        Net Amount                          13   70- 82
        mInvoiceTotal += _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        sb.Append(this.formatMoney(-1 * _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 13));
        
        // 9        Filler                             268   83-350
        sb.Append(SKS_PP_StringFormats::strFill(268, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        
        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_CheckRemDetailGE0</Name>
				<Source><![CDATA[
    /// <summary>
    /// CheckRemDetailGE0
    /// </summary>
    /// <param name = "_invSKS_EFT_FileDetail">SKS_EFT_FileDetail</param>
    //Field     Check Field Name                Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Sub Record Identifier                2    4-  5
    // 3        Invoice Date                         8    6- 13
    // 4        Descriptive Text                    50   14- 63
    // 5        Invoice Gross Amount                13   64- 76
    // 6        Filler                             274   77-350
        
    void rec_CheckRemDetailGE0(SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        AmountMST grossAMT;

        mTotalRecords++;

        // 1        Record Identifier                    3    1-  3
        sb.Append('070');
        
        // 2        Sub Record Identifier                2    4-  5
        sb.Append('06');
        
        // 3        Invoice Date                         8    6- 13
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(_invSKS_EFT_FileDetail.InvoiceDate), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        // 4        Descriptive Text                    50   14- 63
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(50, this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceTransactionTxt), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));

        // 5        Invoice Gross Amount                13   64- 76
        grossAMT = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
        sb.Append(this.formatMoney(-1 * grossAMT, 13));

        // 6        Filler                             274   77-350
        sb.Append(SKS_PP_StringFormats::strFill(274, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));

        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_ACHRemDetailAP2</Name>
				<Source><![CDATA[
    /// <summary>
    /// ACHRemDetailAP2
    /// </summary>
    /// <param name = "_invSKS_EFT_FileDetail">SKS_EFT_FileDetail</param>
    //Field     Check Field Name                Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Sub Record Identifier                2    4-  5
    // 3        Invoice Date                         8    6- 13
    // 4        Invoice Number                      17   14- 30
    // 5        Invoice Gross Amount                13   31- 43
    // 6        Invoice Amount Paid                 13   44- 56
    // 7        Discount                            13   57- 69
    // 8        Net Amount                          13   70- 82
    // 9        Filler                             268   83-350
        
    void rec_ACHRemDetailAP2(SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        AmountMST grossAMT;

        mTotalRecords++;
        
        // 1        Record Identifier                    3    1-  3
        sb.Append('070');
        
        // 2        Sub Record Identifier                2    4-  5
        sb.Append('06');
        
        // 3        Invoice Date                         8    6- 13
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(_invSKS_EFT_FileDetail.InvoiceDate), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        // 4        Invoice Number                      20   14- 33
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(17, this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceNumber), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        // 5        Invoice Gross Amount                13   31- 43
        grossAMT = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
        sb.Append(this.formatMoney(-1 * grossAMT, 13));
        
        // 6        Invoice Amount Paid                 13   44- 56
        sb.Append(this.formatMoney(-1 *_invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 13));
        
        // 7        Discount                            13   57- 69
        mInvoiceAdjusted += _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
        sb.Append(this.formatMoney(-1 * _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur, 13));
        
        // 8        Net Amount                          13   70- 82
        sb.Append(this.formatMoney(-1 * _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 13));
        
        // 9        Filler                             268   83-350
        sb.Append(SKS_PP_StringFormats::strFill(268, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        
        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_ACHRemDetailGE0</Name>
				<Source><![CDATA[
    /// <summary>
    /// ACHRemDetailGE0
    /// </summary>
    /// <param name = "_invSKS_EFT_FileDetail">SKS_EFT_FileDetail</param>
    //Field     Check Field Name                Length  Postion
    // 1        Record Identifier                    3    1-  3
    // 2        Sub Record Identifier                2    4-  5
    // 3        Invoice Date                         8    6- 13
    // 4        Descriptive Text                    50   14- 63
    // 5        Invoice Gross Amount                13   64- 76
    // 6        Filler                             274   77-350
        
    void rec_ACHRemDetailGE0(SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        AmountMST grossAMT;

        mTotalRecords++;

        // 1        Record Identifier                    3    1-  3
        sb.Append('070');
        
        // 2        Sub Record Identifier                2    4-  5
        sb.Append('06');
        
        // 3        Invoice Date                         8    6- 13
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(_invSKS_EFT_FileDetail.InvoiceDate), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));
        
        // 4        Descriptive Text                    50   14- 63
        sb.Append(strUpr(SKS_PP_StringFormats::strFill(50, this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceTransactionTxt), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right)));

        // 5        Invoice Gross Amount                13   64- 76
        grossAMT = _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur + _invSKS_EFT_FileDetail.InvoiceDiscAmountPmtCur;
        sb.Append(this.formatMoney(-1 * grossAMT, 13));

        // 6        Filler                             274   77-350
        sb.Append(SKS_PP_StringFormats::strFill(274, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));

        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_CardPayment</Name>
				<Source><![CDATA[
    /// <summary>
    /// CardPayment
    /// </summary>
    //Field     Card Field Name                Length  Postion
    //  1	    Record ID	                   3	    1- 3
    //  2	    Payment Type	               3	    4- 6
    //  3	    Transaction Number	           17	    7- 23
    //  4	    Card Reference Value		   30	    24-53
    //  5	    Transaction Type	           1	    54-54
    //  6	    Original Transaction Number    17	    55-71
    //  7	    Authorization Code             6	    72-77
    //  8	    Total Amount	               12	    78-89
    //  9	    Tax Amount	                   12	    90-101
    //  10	    Freight Amount             	   12	    102-113
    //  11	    Duty Amount                    12	    114-125
    //  12	    Payment Date	             	8	    126	133
    //  13	    Customer Code	               25	    134-158
    //  14	    Order Number                   17	    159-175
    //  15	    Shipping Company	           15	    176-190
    //  16	    Shipping Number                25	    191-215
    //  17	    Merchant Reference ID	       25	    216-240
    //  18	    Card Number(last 4 digits)     4	    241-244
    //  19	    Cardholder's Zip Code          9	    245-253
    //  20	    Shipped from Zip Code          9	    254-262
	//  21	    Number of line items	       5	    263-267
    //  22	    Cardholder's Street           20	    268-287                    
    //  23	    Cardholder's Name             30	    288-317
    //  24	    Currency Code                  3	    318-320
    //  25	    Comment                       30	    321-350
        
    void rec_CardPayment()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        SKS_EFT_FileDetail  lSKS_EFT_FileDetail;
        int numofInvoices;

        mTotalRecords++;
        mPaymentRecords++;
        mCardRecords++;

        //  1	    Record ID	                   3	    1- 3
        sb.Append('060');

        //  2	    Payment Type	               3	    4- 6
        sb.Append('CRD');

        //  3	    Transaction Number	           17	    7- 23
        sb.Append(SKS_PP_StringFormats::strFill(17, this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  4	    Card Reference Value		   30	    24-53
        sb.Append(SKS_PP_StringFormats::strFill(30, mSKS_EFT_FileDetail.AccountNum, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  5	    Transaction Type	           1	    54-54
        //03    Credit/Debit Flag Code
        if(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur > 0)
        {
            sb.Append('D');
        }
        else
        {
            sb.Append('C');
        }

        //  6	    Original Transaction Number    17	    55-71
        sb.Append(SKS_PP_StringFormats::strFill(17, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  7	    Authorization Code             6	    72-77
        sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  8	    Total Amount	               12	    78-89
        mCardAmount += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        mPaymentAmount += mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur;
        
        sb.Append(this.formatMoney(-1 * mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,12));

        //  9	    Tax Amount	                   12	    90-101
        sb.Append(SKS_PP_StringFormats::strFill(12, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //  10	    Freight Amount             	   12	    102-113
        sb.Append(SKS_PP_StringFormats::strFill(12, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //  11	    Duty Amount                    12	    114-125
        sb.Append(SKS_PP_StringFormats::strFill(12, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //  12	    Payment Date	             	8	    126	133
        sb.Append(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.PaymentTransDate), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  13	    Customer Code	               25	    134-158
        sb.Append(SKS_PP_StringFormats::strFill(25, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  14	    Order Number                   17	    159-175
        sb.Append(SKS_PP_StringFormats::strFill(17, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  15	    Shipping Company	           15	    176-190
        sb.Append(SKS_PP_StringFormats::strFill(15, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  16	    Shipping Number                25	    191-215
        sb.Append(SKS_PP_StringFormats::strFill(25, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  17	    Merchant Reference ID	       25	    216-240
        sb.Append(SKS_PP_StringFormats::strFill(25, this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  18	    Card Number(last 4 digits)     4	    241-244
        sb.Append(SKS_PP_StringFormats::strFill(4, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //  19	    Cardholder's Zip Code          9	    245-253
        sb.Append(SKS_PP_StringFormats::strFill(9, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  20	    Shipped from Zip Code          9	    254-262
        sb.Append(SKS_PP_StringFormats::strFill(9, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  21	    Number of line items	       5	    263-267 
        select count(Recid) from lSKS_EFT_FileDetail
            where lSKS_EFT_FileDetail.RecordSummaryRecID == mSKS_EFT_FileDetail.RecId
                && lSKS_EFT_FileDetail.PaymSpec == #APCARD;

        numofInvoices = int642int(lSKS_EFT_FileDetail.Recid);
        
        sb.Append(SKS_PP_StringFormats::strFill(5, int2Str(numofInvoices), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        //  22	    Cardholder's Street           20	    268-287
        sb.Append(SKS_PP_StringFormats::strFill(20, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  23	    Cardholder's Name             30	    288-317
        sb.Append(SKS_PP_StringFormats::strFill(30, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  24	    Currency Code                  3	    318-320
        sb.Append(SKS_PP_StringFormats::strFill(3, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  25	    Comment                       30	    321-350
        sb.Append(SKS_PP_StringFormats::strFill(30, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_CardRemHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// CardRemHeader
    /// </summary>
    //Field     CARD Field Name                Length  Postion
    //  1	    Record Identifier	         	3	   1- 3
    //  2	    Sub-Record Identifier	        2	   4- 5
    //  3	    Filler	                    	10	   6- 15
    //  4	    Client Transaction ID	        30	   16-45
    //  5	    Vendor Management Indicator	 	1	   46-46
    //  6	    Vendor Management Vendor Number	20	   47-66
    //  7	    Filler	                    	284	   67-350
    
    void rec_CardRemHeader()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        mTotalRecords++;

        //  1	    Record Identifier	         	3	   1- 3
        sb.Append('070');

        //  2	    Sub-Record Identifier	        2	   4- 5
        sb.Append('01');

        //  3	    Filler	                    	10	   6- 15
        sb.Append(SKS_PP_StringFormats::strFill(10, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  4	    Client Transaction ID	        30	   16-45
        sb.Append(SKS_PP_StringFormats::strFill(30, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  5	    Vendor Management Indicator	 	1	   46-46
        sb.Append(SKS_PP_StringFormats::strFill(1, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  6	    Vendor Management Vendor Number	20	   47-66
        sb.Append(SKS_PP_StringFormats::strFill(20, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        //  7	    Filler	                    	284	   67-350
        sb.Append(SKS_PP_StringFormats::strFill(284, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        
        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_CARDRemDetail</Name>
				<Source><![CDATA[
    /// <summary>
    /// CARDRemDetail
    /// </summary>
    /// <param name = "_invSKS_EFT_FileDetail">SKS_EFT_FileDetail</param>

    //Field     Check Field Name                Length  Postion
    // 1	    Record Identifier	            3	    1- 3
    // 2	    Sub-Record Identifier	    	2	    4- 5
    // 3	    Invoice Number	      	        20	    6- 25
    // 4	    Invoice Date	            	8	    26-33
    // 5	    Card Invoice Number 	     	50	    34-83
    // 6	    Description     	        	50	    84-133
    // 7	    Unit of Measure      	        12	    134-145
    // 8	    Quantity     	                8	    146-153
    // 9	    Line Item Type	                1	    154-154
    // 10	    Unit Cost	                 	12	    155-166
    // 11	    Commodity Code	            	12	    167-178
    // 12	    FILLER           	            172	    179-350


    void rec_CARDRemDetail(SKS_EFT_FileDetail _invSKS_EFT_FileDetail)
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();        

        mTotalRecords++;

        // 1	    Record Identifier	            3	    1- 3
        sb.Append('070');

        // 2	    Sub-Record Identifier	    	2	    4- 5
        sb.Append('06');

        // 3	    Invoice Number	      	        20	    6- 25
        sb.Append(SKS_PP_StringFormats::strFill(20, this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceNumber), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 4	    Invoice Date	            	8	    26-33
        sb.Append(SKS_PP_StringFormats::strFill(8, SKS_PP_StringFormats::strDateYYYYMMDD(_invSKS_EFT_FileDetail.InvoiceDate), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 5	    Card Invoice Number 	     	50	    34-83
        sb.Append(SKS_PP_StringFormats::strFill(50, this.CharacterReplacement(_invSKS_EFT_FileDetail.InvoiceNumber), SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 6	    Description     	        	50	    84-133
        sb.Append(SKS_PP_StringFormats::strFill(50, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 7	    Unit of Measure      	        12	    134-145
        sb.Append(SKS_PP_StringFormats::strFill(12, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 8	    Quantity     	                8	    146-153
        sb.Append(SKS_PP_StringFormats::strFill(8, '', SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));

        // 9	    Line Item Type	                1	    154-154
        if(_invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur > 0)
        {
            sb.Append('D');
        }
        else
        {
            sb.Append('C');
        }

        // 10	    Unit Cost	                 	12	    155-166
        sb.Append(this.formatMoney(-1 * _invSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur, 12));

        // 11	    Commodity Code	            	12	    167-178
        sb.Append(SKS_PP_StringFormats::strFill(12, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        // 12	    FILLER           	            172	    179-350
        sb.Append(SKS_PP_StringFormats::strFill(172, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));        
        
        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>rec_CARDRemTrailer</Name>
				<Source><![CDATA[
    /// <summary>
    /// CARDRemTrailer
    /// </summary>
    //Field     CARD Field Name                Length  Postion
    //  1	    Record Identifier               3	    1- 3
    //  2	    Sub-record Identifier           2	    4- 5
    //  3	    Filler	                     	345	    6- 350
        
    void rec_CARDRemTrailer()
    {
        //BP Deviation Documented
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        mTotalRecords++;
        
        // 1        Record Identifier                    3    1-  3
        sb.Append('070');
        
        // 2        Sub Record Identifier                2    4-  5
        sb.Append('09');
        
        //  3	    Filler	                     	    345	  6- 350
        sb.Append(SKS_PP_StringFormats::strFill(345, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Left));
        
        mInvoiceTotal = 0;
        this.fileWrite(sb.ToString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectPaymentRecords</Name>
				<Source><![CDATA[
    [SuppressBPWarning('BPErrorSelectUsingFirstOnly', 'The buffer is used in next statement or in a datasource query loop.')]
    protected void selectPaymentRecords()
    {
        //------------------------------------------------------------------------------------------------------
        // Standard payment selction
        // Override if different selection is need for a format
        //------------------------------------------------------------------------------------------------------
    
        //Order by clause must match the clause in the SKS_EFT_Processing.SumByPayment
        select * from mSKS_EFT_FileDetail
            join mSKS_EFT_FileDetail_VendAddress
            join mSKS_EFT_FileDetail_BenBank
            join msKS_EFT_FileDetail_Instructions
              order by mSKS_EFT_FileDetail.PaymentCompany,
                   mSKS_EFT_FileDetail.RecordSection,
                   mSKS_EFT_FileDetail.PaymMode,
                   mSKS_EFT_FileDetail.BankAccountId,
                   mSKS_EFT_FileDetail.PaymentCurrencyCode,
                   mSKS_EFT_FileDetail.PaymSpec,
                   mSKS_EFT_FileDetail.EffectiveDate,
                   mSKS_EFT_FileDetail.DepCountryRegionId,
                   mSKS_EFT_FileDetail.RecordType,
                   mSKS_EFT_FileDetail.AccountNum,
                   mSKS_EFT_FileDetail.PaymentReference,
                   mSKS_EFT_FileDetail.RecId
          where mSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                mSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                mSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_VendAddress.RefRecId &&
                mSKS_EFT_FileDetail.RecId == mSKS_EFT_FileDetail_BenBank.RefRecId &&
                mSKS_EFT_FileDetail.RecId == msKS_EFT_FileDetail_Instructions.RefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRemittanceAddress</Name>
				<Source><![CDATA[
    void getRemittanceAddress(boolean UseCheckNum)
    {
        mRemittanceName = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneName);
        mRemittanceAdrLine1 = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr);
        mRemittanceAdrLine2 = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneAddr2);
        mRemittanceCity = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneCity);
        mRemittanceState = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneState);
        mRemittanceZipCode = this.CharacterReplacement(mSKS_EFT_FileDetail_VendAddress.BeneZipPostal);
        mRemittanceCountryRegionId = this.getLogisticsAddressCountryISO(mSKS_EFT_FileDetail_VendAddress.BeneCountryRegionId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>controlfilespecific</Name>
				<Source><![CDATA[
    protected void controlfilespecific(SysDictClass _obj, Object _classInstance)
    
    {
        _obj.callObject('setTotItemCnt', _classInstance, mconPaymentRecords);
        _obj.callObject('setTotDolAmt', _classInstance, mconPaymentAmount);
        _obj.callObject('setTotRecCnt', _classInstance, mconTotalRecords);
        _obj.callObject('setSenderId', _classInstance, mconSenderId);
        _obj.callObject('setCount', _classInstance, ctrlCnt);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>