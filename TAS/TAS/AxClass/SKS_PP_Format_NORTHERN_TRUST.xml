<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_NORTHERN_TRUST</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_NORTHERN_TRUST Extends SKS_PP_Format_BankGroup
{
    AmountMST   totalAmount;
    int         regCount;
    str         mBankAcct;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtFormatHeader</Name>
				<Source><![CDATA[
    // Pos 01-01    1        Record Type
    // Pos 02-34   33        Company Name
    // Pos 35-42    8        Creation Date (MMDDYYYY)
    // Pos 43-112  70        Blanks
    protected str txtFormatHeader()
    {
        SKS_PP_FileFormat   bFileFormat;
        SKS_PP_Bank         bSKS_PP_Bank;
        Container           company;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        
        company = [mSKS_PP_FileDetail.ChkCpnyId];
        select firstonly crossCompany:company PP01 from bSKS_PP_Bank where bSKS_PP_Bank.BankAccountId == mSKS_PP_FileDetail.chkBankAcct;

        sb.Append('H');
        sb.Append(SKS_PP_StringFormats::strFill(33, bSKS_PP_Bank.PP01, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));
        sb.Append(SKS_PP_StringFormats::strFill(70, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    // Pos 01-01    1        Record Type
    // Pos 02-11   10        Bank Account Number
    // Pos 12-21   10        Check Number
    // Pos 22-31   10        Dollar Amount
    // Pos 32-39   10        Issue Date(MMDDYYYY)
    // Pos 40-41    2        Transaction Code
    // Pos 42-112  71        Description
    protected str txtDetail()
    {
        str     ItemType;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        regCount++;
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'SD';
        }
        else
        {
            ItemType = 'SA';
        }
        mBankAcct = mSKS_PP_FileDetail.BnkBankAcct;

        sb.Append('R');
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.BnkBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, mSKS_PP_FileDetail.ChkRefNbr, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(mSKS_PP_FileDetail.ChkCuryAmt, 10));

        totalAmount += mSKS_PP_FileDetail.ChkCuryAmt;

        sb.Append(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_PP_FileDetail.ChkDocDate));
        sb.Append(ItemType);
        sb.Append(SKS_PP_StringFormats::strFill(71, mSKS_PP_FileDetail.VendName, SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtGroupTrailer</Name>
				<Source><![CDATA[
    // Pos 01-01    1        Record Type
    // Pos 02-11   10        Bank Account Number
    // Pos 12-21   10        Register Count
    // Pos 22-34   10        Total Amount
    // Pos 35-40    6        Blanks
    // Pos 41-112  72        Blanks
    protected str txtGroupTrailer()
    {
        System.Text.StringBuilder sb = new System.Text.StringBuilder();

        sb.Append('T');
        sb.Append(SKS_PP_StringFormats::strFill(10, mBankAcct, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strFill(10, int2str(regCount), SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
        sb.Append(SKS_PP_StringFormats::strMoney(totalAmount, 13));
        sb.Append(SKS_PP_StringFormats::strFill(6, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));
        sb.Append(SKS_PP_StringFormats::strFill(72, '', SKS_PP_FillCharacter::Space, SKS_PP_FillSide::Right));

        return sb.ToString();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>