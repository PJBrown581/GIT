<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_Format_CH_UBS_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_Format_CH_UBS_XML extends SKS_EFT_Format_ISO_20022_001001003_FD
/// </summary>
class SKS_EFT_Format_CH_UBS_XML extends SKS_EFT_Format_ISO_20022_001001003_FD
{
    //------------------------------------------------------------------------------------------------------
    /// <summary>
    /// Union Bank of Switzerland format
    /// </summary>
    //------------------------------------------------------------------------------------------------------
    #define.FormatVersion('20220825')
    #define.ZA1_ESR('ZA1-ESR')
    #define.ZA2_1_ES('ZA2-1-ES')
    #define.ZA2_2_ES('ZA2-2-ES')
    #define.ZA3('ZA3')
    #define.ZA3_SALAR('ZA3-SALAR')
    #define.ZA5_SEPA('ZA5-SEPA')
    #define.ZA6('ZA6')
    #define.ZA4('ZA4')

    #define.SEPA('SEPA')
    #define.PRPT('PRPT')
    #define.SDVA('SDVA')
    #define.URGP('URGP')

    #define.QRR('QRR')//SKS_VSTS_14811
    #define.SCOR('SCOR')//SKS#DevOps:15149

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormatVersion</Name>
				<Source><![CDATA[
    protected str getFormatVersion()
    {
        return #FormatVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty(XmlElement _nodeGrpHdr)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          Nm
        //          Id
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeInitgPty;
        XmlElement nodeCtctDtls;

        //      1.8: InitgPty
        nodeInitgPty = _nodeGrpHdr.appendChild(xmlDoc.createElement('InitgPty'));

        //          Nm
        this.node_GrpHdr_InitgPty_Nm(nodeInitgPty);

        //          Id
        this.node_GrpHdr_InitgPty_Id(nodeInitgPty);

        mSKS_EFT_FileDetail_BankAccount = SKS_EFT_FileDetail_BankAccount::find(mSKS_EFT_FileDetail.RecId);

        nodeCtctDtls = nodeInitgPty.appendChild(xmlDoc.createElement('CtctDtls'));

        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtctDtls, 'Nm', mSKS_EFT_FileDetail_BankAccount.WOrdPartyName, 70);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr_InitgPty_Id</Name>
				<Source><![CDATA[
    protected void node_GrpHdr_InitgPty_Id(XmlElement _nodeInitgPty)
    {
        //------------------------------------------------------------------------------------------------------
        //      1.8: InitgPty
        //          9.1.12: Id
        //              9.1.13: OrgId
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeId;
        XmlElement nodeOrgId;
        XmlElement nodeOthr;
        str initiatingprtyId;

        initiatingprtyId = SKS_EFT_Format::getCodelookupvalue('InitiatingprtyId', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);
    
        this.getSKS_EFT_FileFormatPaymSpec();
    
        if(initiatingprtyId || mSKS_EFT_FileDetail_BankAccount.WOrdPartySWIFTNo)
        {
            //          9.1.12: Id
            nodeId = _nodeInitgPty.appendChild(xmlDoc.createElement('Id'));
    
            //              9.1.13: OrgId
            nodeOrgId = nodeId.appendChild(xmlDoc.createElement('OrgId'));
    
            if(mSKS_EFT_FileDetail_BankAccount.WOrdPartySWIFTNo)//SKS_VSTS_14811
            {
                //                  9.1.14: BICOrBEI
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOrgId, 'BICOrBEI', mSKS_EFT_FileDetail_BankAccount.WOrdPartySWIFTNo, 11);
            }
            else
            {
                //                      9.1.15 Othr
                nodeOthr = nodeOrgId.appendChild(xmlDoc.createElement('Othr'));
    
                //                              Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeOthr, 'Id', this.CharacterReplacement(initiatingprtyId));//SKS_VSTS_13905
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAcct</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAcct(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.80: CdtrAcct
        //              Id
        //                  Othr
        //                  Id
        //              Tp/Ptry
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAcct;
        XmlElement nodeCdtrAcctId;
        XmlElement nodeCdtrAcctIdOthr;

        //          2.80: CdtrAcct            
        nodeCdtrAcct = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAcct'));
    
        //              Id
        nodeCdtrAcctId = nodeCdtrAcct.appendChild(xmlDoc.createElement('Id'));
    
        if(mSKS_EFT_FileDetail.DepBankIBAN != ''                    && 
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ZA1_ESR  &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ZA2_1_ES)
        {
            //                  IBAN
            nodeCdtrAcctId = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctId, 'IBAN', mSKS_EFT_FileDetail.DepBankIBAN);
        }
        else if(mSKS_EFT_FileDetail.DepBankAcct && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ZA5_SEPA)
        {
            //                  Othr
            nodeCdtrAcctIdOthr = nodeCdtrAcctId.appendChild(xmlDoc.createElement('Othr'));
    
            //                      Id
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrAcctIdOthr, 'Id', mSKS_EFT_FileDetail.DepBankAcct);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_CdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_CdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.77: CdtrAgt
        //              FinInstnId
        //                  BIC
        //                  ClrSysMmbId
        //                  Nm
        //                  PstlAdr
        //              BrnchId
        //                  Id
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeCdtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmbId;
        XmlElement nodeClrSysId;
        str        value;

        value = SKS_EFT_Format::getCodelookupvalue('ClrSysIdCd', mSKS_EFT_FileDetail.RecId);        //SKS#DevOps:16785

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ZA2_1_ES &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ZA1_ESR &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #QRR)//SKS_DevOps_15040
        {
            //          2.77: CdtrAgt
            nodeCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('CdtrAgt'));
    
            //              FinInstnId
            nodeFinInstnId = nodeCdtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
            if(mSKS_EFT_FileDetail.DepSwiftNo != ''                         &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ZA2_2_ES     &&
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ZA3_SALAR    &&   //SKS_DevOps_15040
               mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SCOR)        //SKS#DevOps:15149)
            {
                //                  BIC
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.DepSwiftNo, 0, false);
            }
            else if(mSKS_EFT_FileDetail.DepBankTransit && mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ZA5_SEPA)
            {
                //                  ClrSysMmbId
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));

                //                      ClrSysId
                nodeClrSysId = nodeClrSysMmbId.appendChild(xmlDoc.createElement('ClrSysId'));

                //                      Cd
                if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA6)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', 'USABA', 0, false);
                }
                else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SDVA && value)
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', value, 0, false);
                }
                else
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', 'CHBCC', 0, false);
                }

                //                  MmbId
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'MmbId', mSKS_EFT_FileDetail.DepBankTransit, 35, false);
            }
    
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA2_2_ES ||
              ((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA6     ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA4     ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA3 )&& mSKS_EFT_FileDetail.DepSwiftNo == ''))
            {
                //                  Nm
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_BenBank.BenBankName), 70, false);
            }

            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA2_2_ES && mSKS_EFT_FileDetail.DepBankAcct)
            {
                //                  Othr
                nodeClrSysMmbId = nodeFinInstnId.appendChild(xmlDoc.createElement('Othr'));

                //                      Id
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmbId, 'Id', mSKS_EFT_FileDetail.DepBankAcct, 35);
            }

            if((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA3 ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA6 ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA4) && mSKS_EFT_FileDetail.DepSwiftNo == '')
            {
                //                  PstlAdr
                this.node_PstlAdr(nodeFinInstnId, mSKS_EFT_FileDetail_BenBank.BenBankCountryRegionId, mSKS_EFT_FileDetail_BenBank.BenBankAddr, '', mSKS_EFT_FileDetail_BenBank.BenBankCity, 0, mSKS_EFT_FileDetail_BenBank.BenBankBranch, '',true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Cdtr_Nm</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Cdtr_Nm(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.79: Cdtr
        //              Nm
        //------------------------------------------------------------------------------------------------------
        str name = mSKS_EFT_FileDetail.AccountName;
        int length;

        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #QRR:      //SKS_DevOps_15040
            case #SCOR:     //SKS#DevOps:15149
                length = 70;
                break;
            default:
                length = 140;
                break;
        }
    
        if(mRemittanceName != '')
        {
            name = mRemittanceName;
        }
    
        //              Nm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtr, 'Nm', this.CharacterReplacement(name), length);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_PmtTpInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.31 PmtTpInf
        //              LclInstrm
        //                  Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePmtTpInf;
        XmlElement nodeLclInstrm;
        str value;


        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #ZA1_ESR:
                value = 'CH01';
                break;
            case #ZA2_1_ES:
                value = 'CH02';
                break;
            case #ZA2_2_ES:
                value = 'CH03';
                break;
        }
        if(value)
        {
            //          2.31 PmtTpInf
            nodePmtTpInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('PmtTpInf'));

            //              LclInstrm
            nodeLclInstrm = nodePmtTpInf.appendChild(xmlDoc.createElement('LclInstrm'));

            //                  Prtry
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeLclInstrm, 'Prtry', value);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
    
        switch(mSKS_EFT_FileFormatPaymSpec.TransactionCode)
        {
            case #ZA1_ESR:
            case #ZA5_SEPA:
            case #SEPA:
            case #QRR://SKS_DevOps_15040
            case #SCOR://SKS#DevOps:15149
                this.node_CdtTrfTxInf_RmtInf_Strd(_nodeCdtTrfTxInf);
                break;
            default:
                this.node_CdtTrfTxInf_RmtInf_Ustrd(_nodeCdtTrfTxInf);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_Strd</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf_Strd(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //------------------------------------------------------------------------------------------------------
        SKS_EFT_FileDetail invSKS_EFT_FileDetail;
        XmlElement nodeRmtInf;
        XmlElement nodeStrd;
        XmlElement nodeCdtrRefInf;
        XmlElement nodeTp;
        XmlElement nodeCdOrPrtry;
        LedgerJournalTrans ledgerJournalTrans;
        Boolean firstRec = true;
    
        while select invSKS_EFT_FileDetail where invSKS_EFT_FileDetail.RecordSummaryRecId == mSKS_EFT_FileDetail.RecId
        {
            select firstonly crossCompany PaymentNotes from ledgerJournalTrans where
                        ledgerJournalTrans.VendTransId == invSKS_EFT_FileDetail.VendTransRecId;         //SKS#DevOps:15185
            
            if(invSKS_EFT_FileDetail.PaymId || ledgerJournalTrans.PaymentNotes)
            {
                if(firstRec)
                {
                    //          2.98: RmtInf
                    nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
                    firstRec = false;
                }
    
                //              2.100: Strd
                nodeStrd = nodeRmtInf.appendChild(xmlDoc.createElement('Strd'));

                if(invSKS_EFT_FileDetail.PaymId)
                {

                    //            2.120: CdtrRefInf
                    nodeCdtrRefInf = nodeStrd.appendChild(xmlDoc.createElement('CdtrRefInf'));

                    if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA5_SEPA ||
                       mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA     ||
                       mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SCOR)            //SKS#DevOps:15149
                    {
                        //              2.121: Tp
                        nodeTp = nodeCdtrRefInf.appendChild(xmlDoc.createElement('Tp'));

                        //                  2.122: CdOrPrtry
                        nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));

                        //                      2.123: Cd
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Cd', 'SCOR');
                    }
                    else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #QRR)//SKS_DevOps_15040
                    {
                        //              2.121: Tp
                        nodeTp = nodeCdtrRefInf.appendChild(xmlDoc.createElement('Tp'));

                        //                  2.122: CdOrPrtry
                        nodeCdOrPrtry = nodeTp.appendChild(xmlDoc.createElement('CdOrPrtry'));

                        //                      2.123: Cd
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdOrPrtry, 'Prtry', 'QRR');
                    }

                    //               2.126: Ref
                    if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA1_ESR)
                    {
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', SKS_PP_StringFormats::strFill(27, invSKS_EFT_FileDetail.PaymId, SKS_PP_FillCharacter::Zero, SKS_PP_FillSide::Left));
                    }
                    else
                    {
                        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCdtrRefInf, 'Ref', invSKS_EFT_FileDetail.PaymId);
                    }
                }

                if((mSKS_EFT_FileFormatPaymSpec.TransactionCode == #QRR     ||
                    mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SCOR)   &&      //SKS#DevOps:15149
                    ledgerJournalTrans.PaymentNotes)                                //SKS_DevOps_15040
                {
                    SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeStrd, 'AddtlRmtInf', ledgerJournalTrans.PaymentNotes);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_RmtInf_Ustrd</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_RmtInf_Ustrd(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.98: RmtInf
        //              2.99: Ustrd
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeRmtInf;
        msks_EFT_FileDetail_PaymentLine = sks_EFT_FileDetail_PaymentLine::find(mSKS_EFT_FileDetail.RecId);

        if(mSKS_EFT_FileDetail_PaymentLine.TransactionTxt)
        {
            //          2.98: RmtInf
            nodeRmtInf = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('RmtInf'));
    
            //              2.99: Ustrd        
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeRmtInf, 'Ustrd', this.CharacterReplacement(mSKS_EFT_FileDetail_PaymentLine.TransactionTxt), 140);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_BtchBookg</Name>
				<Source><![CDATA[
    protected void node_PmtInf_BtchBookg(XmlElement _BtchBookg)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.3: BtchBookg
        //------------------------------------------------------------------------------------------------------
        str btchbkg;
        
        btchbkg = SKS_EFT_Format::getCodelookupvalue('Btchbkg', mSKS_EFT_FileDetail.RecId, SKS_EFT_CodeLookupType::CodeLookupBank);

        //              2.3: BtchBookg
        if(strUpr(btchbkg) == 'Y')
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _BtchBookg, 'BtchBookg', 'true');
        }
        else if(strUpr(btchbkg) == 'N')
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _BtchBookg, 'BtchBookg', 'false');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Cdtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Cdtr_PstlAdr(XmlElement _nodeCdtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Cdtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA1_ESR)     //SKS#DevOps:15122

        {
            this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity, 0, mRemittanceAdrLine2, '',true);
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PRPT &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SDVA &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #URGP &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ZA5_SEPA  &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ZA6)

        {
            this.node_PstlAdr(_nodeCdtr, mRemittanceCountryRegionId, mRemittanceAdrline1, mRemittanceZipCode, mRemittanceCity, 0, mRemittanceAdrLine2, mRemittanceState,true);
        }
        else
        {
            super(_nodeCdtr);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_ChrgBr(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.24 ChrgBr
        //------------------------------------------------------------------------------------------------------
        str ChargesIndic;

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA5_SEPA ||              
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SCOR)          //SKS#DevOps:15149
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'ChrgBr', 'SLEV', 0, false);
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA1_ESR      ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA2_1_ES     ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA2_2_ES     ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA3          ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA3_SALAR    ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA6)
        {
            ChargesIndic = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('Chrgbr', mSKS_EFT_FileDetail.RecId));

            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodePmtInf, 'ChrgBr', ChargesIndic, 0, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_Dbtr_PstlAdr</Name>
				<Source><![CDATA[
    protected void node_PmtInf_Dbtr_PstlAdr(XmlElement _nodeDbtr)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.19: Dbtr
        //          PstlAdr
        //------------------------------------------------------------------------------------------------------
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #QRR &&   //SKS_VSTS_14811
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #ZA1_ESR && //SKS#DevOps:15122
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SCOR)     //SKS#DevOps:15149
        {
            this.node_PstlAdr(_nodeDbtr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCountryRegionId, mSKS_EFT_FileDetail_BankAccount.WOrdPartyAddr, mSKS_EFT_FileDetail_BankAccount.WOrdPartyZipCode, mSKS_EFT_FileDetail_BankAccount.WOrdPartyCity);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAgt</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAgt(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.21: DbtrAgt
        //          FinInstnId
        //              BIC
        //              ClrSysMmbId
        //                  MmbId
        //              PstlAdr
        //                  Ctry
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeDbtrAgt;
        XmlElement nodeFinInstnId;
        XmlElement nodeClrSysMmBId;
        XmlElement nodeClrSysId;
    
        //      2.21: DbtrAgt
        nodeDbtrAgt = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAgt'));
    
        //          FinInstnId
        nodeFinInstnId = nodeDbtrAgt.appendChild(xmlDoc.createElement('FinInstnId'));
    
        if(mSKS_EFT_FileDetail.BankBankSwiftNo)
        {
            //              BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail.BankBankSwiftNo, 0, false);
        }
        else if(mSKS_EFT_FileDetail.BankBankTransit)
        {
            //              ClrSysMmbId
            nodeClrSysMmBId = nodeFinInstnId.appendChild(xmlDoc.createElement('ClrSysMmbId'));
            
            //                  ClrSysId
            nodeClrSysId = nodeClrSysMmBId.appendChild(xmlDoc.createElement('ClrSysId'));

            //                         Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysId, 'Cd', 'CHBCC');
            
            //                  MmbId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeClrSysMmBId, 'MmbId', mSKS_EFT_FileDetail.BankBankTransit, 35, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_SvcLvl</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_SvcLvl(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.8: SvcLvl
        //              2.9: Cd
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeSvcLvl;
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode  == #ZA5_SEPA)
        {
            //          2.8: SvcLvl
            nodeSvcLvl = _nodePmftTpInf.appendChild(xmlDoc.createElement('SvcLvl'));

            //              2.9: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSvcLvl, 'Cd', 'SEPA');
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PRPT ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SDVA ||
                mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGP)
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeSvcLvl, 'Cd', mSKS_EFT_FileFormatPaymSpec.TransactionCode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_PmtId</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_PmtId(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.28: PmtId
        //              2.30: EndToEndId
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodePmtId;
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SEPA &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #PRPT &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #SDVA &&
           mSKS_EFT_FileFormatPaymSpec.TransactionCode != #URGP)
        {
            //          2.28: PmtId
            nodePmtId = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('PmtId'));
        
            //              2.29: InstrId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'InstrId', SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 35));

            //              2.30: EndToEndId
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtId, 'EndToEndId', SKS_PP_StringFormats::strRight(this.CharacterReplacement(mSKS_EFT_FileDetail.PaymentReference), 35));
        }
        else
        {
            super(_nodeCdtTrfTxInf);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf_CtgyPurp</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf_CtgyPurp(XmlElement _nodePmftTpInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.14: CtgyPurp
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeCtgyPurp;

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA3_SALAR)
        {
            //              2.15: CtgyPurp
            nodeCtgyPurp = _nodePmftTpInf.appendChild(xmlDoc.createElement('CtgyPurp'));

            //                  2.16: Cd
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeCtgyPurp, 'Cd', 'SALA');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_DbtrAcct</Name>
				<Source><![CDATA[
    protected void node_PmtInf_DbtrAcct(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.20: DbtrAcct
        //          Id
        //              IBAN
        //              Othr
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeDbtrAcct;
        XmlElement nodeDbtrAcctId;
        XmlElement nodeDbtrAcctTp;
        str value;

        //      2.20: DbtrAcct
        nodeDbtrAcct = nodePmtInf.appendChild(xmlDoc.createElement('DbtrAcct'));
    
        //          Id
        nodeDbtrAcctId = nodeDbtrAcct.appendChild(xmlDoc.createElement('Id'));
    
        if(mSKS_EFT_FileDetail.BankBankIBAN)
        {
            //              IBAN
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctId, 'IBAN', mSKS_EFT_FileDetail.BankBankIBAN);
        }
        else
        {
            //              Othr
            this.node_PmtInf_DbtrAcct_Id_Othr(nodeDbtrAcctId);
        }

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA3_SALAR)
        {
            if(mSKS_EFT_FileDetail.DepBankAcctType == BankAccountType::SavingsAccount)
            {
                value = 'SVGS';
            }
            else
            {
                value = 'CACC';
            }
            if(value)
            {
                nodeDbtrAcctTp = nodeDbtrAcct.appendChild(xmlDoc.createElement('Tp'));
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeDbtrAcctTp, 'Cd', value);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Purp</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Purp(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.88: Purp
        //              Prtry
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeId;
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA3_SALAR)
        {
            nodeId = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Purp'));
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeId, 'Cd', 'SALA');
        }    
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf_PmtTpInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf_PmtTpInf(XmlElement _nodePmtInf)
    {
        //------------------------------------------------------------------------------------------------------
        //      2.6: PmtTpInf
        //          2.7: InstrPrty
        //          2.8: SvcLvl
        //          2.11: LclInstrm
        //          2.14: CtgyPurp
        //------------------------------------------------------------------------------------------------------
        XmlElement nodePmftTpInf;
        
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA5_SEPA ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA3_SALAR)//SKS_DevOps_15040
        {
            //      2.6: PmtTpInf
            nodePmftTpInf = _nodePmtInf.appendChild(xmlDoc.createElement('PmtTpInf'));
    
            //          2.8: SvcLvl
            this.node_PmtInf_PmtTpInf_SvcLvl(nodePmftTpInf);
    
            //          2.14: CtgyPurp
            this.node_PmtInf_PmtTpInf_CtgyPurp(nodePmftTpInf);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_IntrmyAgt1</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_IntrmyAgt1(XmlElement _nodeCdtTrfTxInf)
    {
        XmlElement nodeIntrmyAgt1;
        XmlElement nodeFinInstnId;
    
        if(mSKS_EFT_FileDetail_Intermediary.IntBankSwift != ''              &&
          (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PRPT ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SDVA ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGP ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #QRR  ||      //SKS_VSTS_14811
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SCOR))       //SKS#DevOps:15149
        {
            //          2.71: IntrmyAgt1
            nodeIntrmyAgt1 = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('IntrmyAgt1'));
    
            //              FinInstnId
            nodeFinInstnId = nodeIntrmyAgt1.appendChild(xmlDoc.createElement('FinInstnId'));
    
            //                  BIC
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'BIC', mSKS_EFT_FileDetail_Intermediary.IntBankSwift, 0, false);
    
            //                  Nm
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeFinInstnId, 'Nm', this.CharacterReplacement(mSKS_EFT_FileDetail_Intermediary.IntBankName), 140, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_ChrgBr</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_ChrgBr(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.51: ChrgBr
        //------------------------------------------------------------------------------------------------------
        str value;
    
        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #PRPT ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #URGP)
        {
            value = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ChrgBr', mSKS_EFT_FileDetail.RecId));
    
            if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SEPA || mSKS_EFT_FileFormatPaymSpec.TransactionCode == #QRR)//SKS_VSTS_14811
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'ChrgBr', 'SLEV');
            }
            else if(value)
            {
                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'ChrgBr', value);
            }
        }
        else if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SDVA)   //SKS_DevOps_16074
        {
            str strValue;
                
            strValue = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ChargesIndic',mSKS_EFT_FileDetail.RecId));

            if(strValue == '')
            {
                strValue = this.CharacterReplacement(SKS_EFT_Format::getCodelookupvalue('ChrgBr',mSKS_EFT_FileDetail.RecId));

            }
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, _nodeCdtTrfTxInf, 'ChrgBr', strValue, 0, false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_MessageRoot</Name>
				<Source><![CDATA[
    protected void node_MessageRoot()
    {
        nodeRoot = xmlDoc.appendChild(xmlDoc.createElement('Document'));
        SKS_EFT_Format::xmlsetAttributeText(nodeRoot, 'xmlns:schemaLocation', 'http://www.six-interbank-clearing.com/de/pain.001.001.03.ch.02.xsd pain.001.001.03.ch.02.xsd');
        SKS_EFT_Format::xmlsetAttributeText(nodeRoot, 'xmlns:xsi', 'http://www.w3.org/2001/XMLSchema-instance');
        SKS_EFT_Format::xmlsetAttributeText(nodeRoot, 'xmlns', 'http://www.six-interbank-clearing.com/de/pain.001.001.03.ch.02.xsd');
        nodeRoot = nodeRoot.appendChild(xmlDoc.createElement('CstmrCdtTrfInitn'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_PmtInf</Name>
				<Source><![CDATA[
    protected void node_PmtInf()
    {
        //------------------------------------------------------------------------------------------------------
        //  2.0: PmtInf
        //      2.1: PmtInfId
        //      2.2: PmtMtd
        //      2.4: NbOfTxs
        //      2.5: CtrlSum
        //      2.6: PmtTpInf
        //      2.17: ReqdExctnDt
        //      2.19: Dbtr
        //      2.20: DbtrAcct
        //      2.21: DbtrAgt
        //      2.24 ChrgBr
        //------------------------------------------------------------------------------------------------------
    
        batchCount++;
    
        //  2.0: PmtInf
        nodePmtInf = nodeRoot.appendChild(xmlDoc.createElement('PmtInf'));
    
        //      2.1: PmtInfId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtInfId', SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr + '-' + int2str(batchCount),35));
    
        //      2.2: PmtMtd
        if(mSKS_EFT_FileFormatPaymSpec.UseCheckNumber == NoYes::Yes || subStr(mSKS_EFT_FileDetail.PaymSpec, 1, 3) == 'CHK')
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'CHK');
        }
        else
        {
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'PmtMtd', 'TRF');
        }
    
        //      2.3: BatchBooking
        this.node_PmtInf_BtchBookg(nodePmtInf);
    
        //      2.6: PmtTpInf
        this.node_PmtInf_PmtTpInf(nodePmtInf);
    
        //      2.17: ReqdExctnDt
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodePmtInf, 'ReqdExctnDt', SKS_PP_StringFormats::strDateYYYYMMDD(mSKS_EFT_FileDetail.EffectiveDate, DateSeparator::Hyphen));
    
        this.node_PmtInf_DbtrNodes(nodePmtInf);
    
        //      2.24 ChrgBr
        this.node_PmtInf_ChrgBr(nodePmtInf);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRemoveBOM</Name>
				<Source><![CDATA[
    protected boolean getRemoveBOM()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_InstrForCdtrAgt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_InstrForCdtrAgt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.82: InstrForCdtrAgt
        //              InstrInf
        //------------------------------------------------------------------------------------------------------
    
        XmlElement nodeInstrForCdtrAgt;
        str value;

        if(mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA6 ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #QRR ||
           mSKS_EFT_FileFormatPaymSpec.TransactionCode == #SCOR ||      //SKS#DevOps:15149
          (mSKS_EFT_FileFormatPaymSpec.TransactionCode == #ZA4 &&
          (mSKS_EFT_FileDetail.PaymentCurrencyCode != 'CHF' &&
           mSKS_EFT_FileDetail.PaymentCurrencyCode != 'EUR')))
        {

            if(mSKS_EFT_FileDetail_Instructions.PmtInstText1  ||
               mSKS_EFT_FileDetail_Instructions.PmtInstText2  ||
               mSKS_EFT_FileDetail_Instructions.PmtInstText3   ||
               mSKS_EFT_FileDetail_Instructions.PmtInstText4 )
            {
                if(mSKS_EFT_FileDetail_Instructions.PmtInstText1)
                {
                    value = mSKS_EFT_FileDetail_Instructions.PmtInstText1;
                }

                if(mSKS_EFT_FileDetail_Instructions.PmtInstText2)
                {
                    if(value)
                    {
                        value = value + ' ' + mSKS_EFT_FileDetail_Instructions.PmtInstText2;
                    }
                    else
                    {
                        value = mSKS_EFT_FileDetail_Instructions.PmtInstText2;
                    }
                   
                }

                if( mSKS_EFT_FileDetail_Instructions.PmtInstText3)
                {
                    if(value)
                    {
                        value = value + ' ' + mSKS_EFT_FileDetail_Instructions.PmtInstText3;
                    }
                    else
                    {
                        value = mSKS_EFT_FileDetail_Instructions.PmtInstText3;
                    }
                }
                    

                if( mSKS_EFT_FileDetail_Instructions.PmtInstText4)
                {
                    if(value)
                    {
                        value = value + ' ' + mSKS_EFT_FileDetail_Instructions.PmtInstText4;
                    }
                    else
                    {
                        value = mSKS_EFT_FileDetail_Instructions.PmtInstText4;
                    }
                }
                    
            }

            if(value)
            {
                //          2.82: InstrForCdtrAgt
                nodeInstrForCdtrAgt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('InstrForCdtrAgt'));

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'Cd', 'HOLD');

                SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeInstrForCdtrAgt, 'InstrInf', value, 0, false);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_GrpHdr</Name>
				<Source><![CDATA[
    protected void node_GrpHdr()
    {
        //------------------------------------------------------------------------------------------------------
        //  1.0: GrpHdr
        //      1.1: MsgId
        //      1.2: CreDtTm
        //      1.6: NbOfTxs
        //      1.7: CtrlSum
        //      1.8: InitgPty
        //          Nm
        //------------------------------------------------------------------------------------------------------
        XmlElement nodeGrpHdr;
        SKS_EFT_FileDetail tmpSKS_EFT_FileDetail;
    
        // Select count and sum for this file
        select COUNT(InvoiceOrigAmountCur), SUM(InvoiceSettleAmountPmtCur) from tmpSKS_EFT_FileDetail
            where
                tmpSKS_EFT_FileDetail.FileRecId == mSKS_EFT_File.RecId &&
                tmpSKS_EFT_FileDetail.RecordSection == SKS_EFT_RecordSection::Payments &&
                tmpSKS_EFT_FileDetail.RecordSummary != SKS_EFT_RecordSummary::NonSummary;
    
        //  1.0: GrpHdr
        nodeGrpHdr = nodeRoot.appendChild(xmlDoc.createElement('GrpHdr'));
    
        //      1.1: MsgId
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'MsgId', SKS_PP_StringFormats::strRight(mSKS_EFT_File.FileNbr,35));
    
        //      1.2: CreDtTm
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CreDtTm', DateTimeUtil::toStr(DateTimeUtil::utcNow()));
    
        //      1.3: Authstn
        this.node_GrpHdr_Authstn(nodeGrpHdr);
    
        //      1.6: NbOfTxs
        SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'NbOfTxs', num2str(tmpSKS_EFT_FileDetail.InvoiceOrigAmountCur,0,0,0,0));
    
        if(mSKS_EFT_FileDetail.Module == SKS_EFT_Module::AP)
        {
            //      1.7: CtrlSum
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0));
        }
        else
        {
            //      1.7: CtrlSum
            SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeGrpHdr, 'CtrlSum', num2str(tmpSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur,0,2,1,0));
        }
    
        //      1.8: InitgPty
        this.node_GrpHdr_InitgPty(nodeGrpHdr);
    }

]]></Source>
			</Method>
			<Method>
				<Name>node_CdtTrfTxInf_Amt</Name>
				<Source><![CDATA[
    protected void node_CdtTrfTxInf_Amt(XmlElement _nodeCdtTrfTxInf)
    {
        //------------------------------------------------------------------------------------------------------
        //          2.42: Amt
        //              2.43: InstdAmt
        //------------------------------------------------------------------------------------------------------
        XmlElement currentElement;
        XmlElement nodeAmt;
    
        //          2.42: Amt
        nodeAmt = _nodeCdtTrfTxInf.appendChild(xmlDoc.createElement('Amt'));
    
        if (mSKS_EFT_FileDetail.PaymentCurrencyCode == 'JPY')
        {
            //              2.43: InstdAmt
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAmt, 'InstdAmt',
                num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,0,1,0));
        }
        else
        {
            //              2.43: InstdAmt
            currentElement = SKS_EFT_Format::xmlAppendChildNodeText(xmlDoc, nodeAmt, 'InstdAmt',
                num2str(mSKS_EFT_FileDetail.InvoiceSettleAmountPmtCur * -1,0,2,1,0));
        }
        SKS_EFT_Format::xmlsetAttributeText(currentElement, 'Ccy', mSKS_EFT_FileDetail.PaymentCurrencyCode);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>