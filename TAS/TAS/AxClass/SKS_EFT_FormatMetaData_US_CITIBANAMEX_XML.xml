<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFT_FormatMetaData_US_CITIBANAMEX_XML</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// SKS_EFT_FormatMetaData_US_CITIBANAMEX_XML Extends SKS_EFT_Format_MetaData
/// </summary>
public class SKS_EFT_FormatMetaData_US_CITIBANAMEX_XML Extends SKS_EFT_Format_MetaData
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        productVersion = '';
        formatGroupVersion = '20221122';
        dataContractVersion = '1.0';
        conFormatID = ['US-CITIBANAMEX-XML-MX'];
        formatfiletype = 'EFT';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormatFileType</Name>
				<Source><![CDATA[
    protected str getFormatFileType()
    {
        return formatfiletype;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHeaderMetaData</Name>
				<Source><![CDATA[
    protected container getHeaderMetaData()
    {
        container   headerList;

        //Metadata column names of data elements
//ProductVersion,FormatGroupVersion,UseWithCustomer,UseWithVenodrs,UseWithBanktoBank,UsewithCustReimbursements,
//BeDesc01,BeDesc02,BeMask01,BeMask02,BlockFill,CompanyIdMask,CompanyIdTitle,CompanyNameTitle,CompanyNameMask,Crlf,Description,EffectiveDateOffset,EntryClassTitle,EntryClassMask,
//FormatId,FormatType,IMMDestMask,IMMDestTitle,IMMDestNameTitle,IMMDestNameMask,IMMOriginTitle,IMMOriginMask,IMMOriginNameTitle,IMMOriginNameMask,IncludeCpnyCredit,
//IncludeCpnyDebit,LastEffectiveDate,NextDailyReset,NextDailyResetDate,NextFileId,NextSequenceNumber,PreNote,RecordLength,Selected,TrimRecord,TwoFileNameAddition,
//WBank01Description,WBank01Mask,WBank01Required,WBank02Required,WBank02Mask,WBank02Description,WBank03Required,WBank03Mask,WBank03Description,WBank04Required,WBank04Mask,
//WBank04Description,PreNoteDays,EDI,PayDateIsEffDate,ARDateOffset,UseAddenda,MastAcctList,FormatGroup,MultiEffectiveDates,SupportsMultiCompany,ExternalFormat,FundTransferType

        headerList = ConIns(headerList,conLen(headerList)+1,[productVersion,formatGroupVersion,0,1,0,0,'','','','',0,'','','','',0,'US-CitiBanamex-Mexico-ISO20022',0,'','','US-CITIBANAMEX-XML-MX',1,'','','','','','','','',0,0,'1900-01-01 00:00:00.000',0,'1900-01-01 00:00:00.000',1,1,0,0,0,0,'','','',0,0,'','',0,'','',0,'','',0,0,0,0,0,0,'US-CITIBANAMEX-XML',0,0,0]);

        return headerList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecsMetaData(str _formatID)
    {
        container   paymSpecList;

        //Metadata column names of data elements
//BARoutingReqd,VBAAccountReqd,VBASwiftReqd,VBAIBANReqd,ARPaymSpecName,BEBeneBankAcctReqd,BE01Reqd,BE02Reqd,BE01Use,BE02Use,PaymSpecFileDescr,RecordSummary,TransactionCode,
        //EmailNote,PaymSpec,PaymSpecName,FilterSeparateFile,FormatId,Selected,CpnyIDNameReq,EmailOff,VendorUse,WireTabs,SamePaymentDate,SelectByPaymentDate,PreNote,TxnNacha,UseCheckNumber,
        //UseWithCustomers,UseWithVendors,EDI,UseWithBanktoBank,FundTransferType,UseWithCustomerReimbursement,InvoiceDetail,RemitAvailability,RemitType,APNameType,APAddressType
        //DDNameType,DDAddressType,CRNameType,CRAddressType

        switch (_formatID)
        {
            case ('US-CITIBANAMEX-XML-MX'):
                paymSpecList = this.getPaymSpecsMetaData_US_CITIBANAMEX_XML_MX();
                break;

        }

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecsMetaData_US_CITIBANAMEX_XML_MX</Name>
				<Source><![CDATA[
    private container getPaymSpecsMetaData_US_CITIBANAMEX_XML_MX()
    {
        container   paymSpecList;

        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Domestic Interbank Transfer - 828',1,'DIT828','','DIT828','TRADE PAY',0,'US-CITIBANAMEX-XML-MX',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);
        paymSpecList = ConIns(paymSpecList,conLen(paymSpecList)+1,[0,0,0,0,'',0,0,0,0,0,'Book Transfer - 833',1,'BKT833','','BKT833','TRADE PAY',0,'US-CITIBANAMEX-XML-MX',0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0]);

        return paymSpecList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData</Name>
				<Source><![CDATA[
    protected container getNotesMetaData(str _formatID)
    {
        container   notesList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Note

        switch (_formatID)
        {
            case ('US-CITIBANAMEX-XML-MX'):
                notesList = this.getNotesMetaData_US_CITIBANAMEX_XML_MX();
                break;

        }

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getNotesMetaData_US_CITIBANAMEX_XML_MX</Name>
				<Source><![CDATA[
    private container getNotesMetaData_US_CITIBANAMEX_XML_MX()
    {
        container   notesList;

        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITIBANAMEX-XML-MX','DIT828','-Group Header >Initiating Party Name is stored in Organization administration >Setup >Organization >Legal entities >Name field.:EFT+ bank account >AP EFT+ >Wire/IAT ordering party:-Debtor Name is required and stored on Name field.:--Street is stored on Address1 field.:--BldgNb is stored in Address 2 field.:--City is stored on City field.:--Pstl code is stored on ZIP/postal code field.:--Ctry is stored on Country/region field.::Cash and bank management module >Bank Account:-Bank acct no is required.:-SWIFT is required.::Vendor Bank Acct fields:-Bank acct no. is required.:-Either vendor bank Swift or routing num.If both are populated Swift will take precedence.::Vendor eBanking details >Payment specifications fields >Wire transfer/IAT-1 tab:-Cdtr name is required and stored in beneficiary Name region field.:--Street is stored on Address1 field.:--BldgNb is stored in Address 2 field.:--City is stored on City field.:--Pstl code is stored on ZIP/postal code field.:--Ctry is required and stored on Country/region field.:-Cdtr Id must be Organization individual.Cdtr Id will be included only if beneficiary tax id is populated.:--The Beneficiary tax id is stored in Tax exempt number field on Vendor >Invoice and delivery tab.:-Cdtr Acct type is set in Beneficiary bank >Account Type.:-Remittance Location method may be set on Beneficiary Mail Handling.:--Either Fax or eMail Remittance location Electronic Address will be populated if a primary fax or eMail address exists on Vendor details >Contact information  under Accounts payable module.::Vendor eBanking details >Payment specifications fields >Wire transfer/IAT-2 tab.:-IntrmyAgt BIC will be included if either SWIFT or Bank id field on Intermediary bank section is populated.:-IntrmyAgt name is stored in Name filed.:--Ctry stores on Country/region field.:--First address line stores Address and Address 2 fields.:--Second address line stores City.:-Branch Id stores in Branch field.']);
        notesList = ConIns(notesList,conLen(notesList)+1,['US-CITIBANAMEX-XML-MX','BKT833','-Group Header >Initiating Party Name is stored in Organization administration >Setup >Organization >Legal entities >Name field.:EFT+ bank account >AP EFT+ >Wire/IAT ordering party:-Debtor Name is required and stored on Name field.:--Street is stored on Address1 field.:--BldgNb is stored in Address 2 field.:--City is stored on City field.:--Pstl code is stored on ZIP/postal code field.:--Ctry is stored on Country/region field.::Cash and bank management module >Bank Account:-Bank acct no is required.:-SWIFT is required.::Vendor Bank Acct fields:-Bank acct no. is required.:-Either vendor bank Swift or routing num.If both are populated Swift will take precedence.::Vendor eBanking details >Payment specifications fields >Wire transfer/IAT-1 tab:-Cdtr name is required and stored in beneficiary Name region field.:--Street is stored on Address1 field.:--BldgNb is stored in Address 2 field.:--City is stored on City field.:--Pstl code is stored on ZIP/postal code field.:--Ctry is required and stored on Country/region field.:-Cdtr Id must be Organization individual.Cdtr Id will be included only if beneficiary tax id is populated.:--The Beneficiary tax id is stored in Tax exempt number field on Vendor >Invoice and delivery tab.:-Cdtr Acct type is set in Beneficiary bank >Account Type.:-Remittance Location method may be set on Beneficiary Mail Handling.:--Either Fax or eMail Remittance location Electronic Address will be populated if a primary fax or eMail address exists on Vendor details >Contact information  under Accounts payable module.::Vendor eBanking details >Payment specifications fields >Wire transfer/IAT-2 tab.:-IntrmyAgt BIC will be included if either SWIFT or Bank id field on Intermediary bank section is populated.:-IntrmyAgt name is stored in Name filed.:--Ctry stores on Country/region field.:--First address line stores Address and Address 2 fields.:--Second address line stores City.:-Branch Id stores in Branch field.']);

        return notesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidationsMetaData</Name>
				<Source><![CDATA[
    protected container getValidationsMetaData(str _formatID)
    {
        container   validationsList;

        //Metadata column names of data elements
//FormatId,PaymSpec,Id,SourceFieldDesc,SourceFieldLoc,TargetFieldLoc,Notes,SourceContext,SourceField,ISOCountrySpec,CountryContext,Required,LengthValidation,MinLength,MaxLength,UserUpdated,Module

        switch (_formatID)
        {
        }

        return validationsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupMetaData()
    {
        container   codeLookupList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Description

        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITIBANAMEX-XML','RmtLctnMtd','Remittance location method']);
        codeLookupList = ConIns(codeLookupList,conLen(codeLookupList)+1,['US-CITIBANAMEX-XML','CdtrAcctTp','Creditor Account Type']);

        return codeLookupList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        //Metadata column names of data elements
//FormatGroup,CodeID,Display Value,CodeValue

        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITIBANAMEX-XML','RmtLctnMtd','EMail','EMAL']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITIBANAMEX-XML','RmtLctnMtd','Fax','FAXI']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITIBANAMEX-XML','CdtrAcctTp','Checking Account','01']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITIBANAMEX-XML','CdtrAcctTp','Debit Card','03']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITIBANAMEX-XML','CdtrAcctTp','Credit Card','04']);
        codeLookupValuesList = ConIns(codeLookupValuesList,conLen(codeLookupValuesList)+1,['US-CITIBANAMEX-XML','CdtrAcctTp','CLABE Account','05']);

        return codeLookupValuesList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getPaymSpecFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        //Metadata column names of data elements
//FormatGroup,FormatID,PaymentSpec,FormatFieldID,Description,FieldType,CodeID,DefaultValue,Required,FixedValue,FixedValueMask,TechNotes

        switch (_formatID)
        {
            case ('US-CITIBANAMEX-XML-MX'):
                paymSpecFieldsList = this.getPaymSpecFieldsMetaData_US_CITIBANAMEX_XML_MX();
                break;
        }

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSpecFieldsMetaData_US_CITIBANAMEX_XML_MX</Name>
				<Source><![CDATA[
    private container getPaymSpecFieldsMetaData_US_CITIBANAMEX_XML_MX()
    {
        container   paymSpecFieldsList;

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITIBANAMEX-XML','US-CITIBANAMEX-XML-MX','DIT828','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITIBANAMEX-XML','US-CITIBANAMEX-XML-MX','BKT833','RmtLctnMtd','Remittance location method',0,'RmtLctnMtd','',0,'','','CdtTrfTxInf > RltdRmtInf > RmtLctnMtd']);

        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITIBANAMEX-XML','US-CITIBANAMEX-XML-MX','DIT828','CdtrAcctTp','Creditor Account Type',0,'CdtrAcctTp','',0,'','','CdtTrfTxInf > CdtrAcct > Tp > Prtry']);
        paymSpecFieldsList = ConIns(paymSpecFieldsList,conLen(paymSpecFieldsList)+1,['US-CITIBANAMEX-XML','US-CITIBANAMEX-XML-MX','BKT833','CdtrAcctTp','Creditor Account Type',0,'CdtrAcctTp','',0,'','','CdtTrfTxInf > CdtrAcct > Tp > Prtry']);

        return paymSpecFieldsList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getControlFormatMetaData</Name>
				<Source><![CDATA[
    protected container getControlFormatMetaData(str _formatID)
    {
        container   ControlFormatList;

        //Metadata column names of data elements
//FileFormatID,ControlFileFormatID,ControlFileDescription

        switch (_formatID)
        {
        }

        return ControlFormatList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeleteMetaData</Name>
				<Source><![CDATA[
    protected container getDeleteMetaData()
    {
        container   deleteList;

        //FormatGroup, FormatId, DetailType, KeyID1, KeyId2, KeyId3

        deleteList = ConIns(deleteList,conLen(deleteList)+1,['US-CITIBANAMEX-XML','US-CITIBANAMEX-XML-MX','FormatLookup','*','*','']);

        return deleteList;

    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupMetaData()
    {
        container   codeLookupList;

        return codeLookupList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBankCodeLookupValuesMetaData</Name>
				<Source><![CDATA[
    protected container getBankCodeLookupValuesMetaData()
    {
        container   codeLookupValuesList;

        return codeLookupValuesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileFormatFieldsMetaData</Name>
				<Source><![CDATA[
    protected container getFileFormatFieldsMetaData(str _formatID)
    {
        container   paymSpecFieldsList;

        return paymSpecFieldsList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVendorCodelookupValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updating vendor code lookpus from BE0X and Legacy code loookups
    /// </summary>
    protected void updateVendorCodelookupValues()
    {
        switch(gSKS_EFT_FileFormat.FormatId)
        {
            case 'US-CITIBANAMEX-XML-MX':
                if(gSKS_EFT_VendorPaym.WBenBankAcctType)
                {
                    this.updateVendorFields('CdtrAcctTp', gSKS_EFT_VendorPaym.WBenBankAcctType, true);
                }
                if(gSKS_EFT_VendorPaym.WBeneMailHandling)
                {
                    this.updateVendorFields('RmtLctnMtd', gSKS_EFT_VendorPaym.WBeneMailHandling, true);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>