<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_EFTAP_AutomatedPaymentProposalBatch</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// create Automated Payment Proposal batch.
/// </summary>
/// SKS 9536
class SKS_EFTAP_AutomatedPaymentProposalBatch
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createBatch</Name>
				<Source><![CDATA[
    public static recid createBatch(Object _element = null)
    {
        Dialog              dialog;
        DialogField         dialogField;
        Batch               Batch;
        BatchHeader         batHeader;
        RunBaseBatch        rbbTask;
        BatchInfo           batInfo;
        SysRecurrenceData   recurData;
        Args args = new Args();
        FormRun formrun;
        ;
    
        // Create Default Bank Account Information dialog
        dialog = new Dialog("@SYS114518");
        dialogField = dialog.addField(extendedTypeStr(BatchCaption), "@SYS114518");
    
        if (dialog.run())
        {
            select firstOnly Batch where Batch.Caption == dialogField.value();
            if(!Batch)
            {
                ttsBegin;

                rbbTask = new SKS_EFTAP_AutomatedPaymentProposal();
                batInfo = rbbTask.batchInfo();
                batInfo.parmCaption(dialogField.value());
                batInfo.parmGroupId(''); // The "Empty batch group".
    
                // Set recurrance
                recurData = SysRecurrence::defaultRecurrence();
                // start at 04:00:00
                recurData = SKS_EFTAP_AutomatedPaymentProposalBatch::setRecurrenceStartDateTimeAdjusted(recurData, DateTimeUtil::newDateTime(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()), 14400));
                //// recur every day 04:00:00
                recurData = SysRecurrence::setRecurrenceUnit(recurData, SysRecurrenceUnit::Day, 1);

                batHeader = BatchHeader::construct();
                batHeader.addTask(rbbTask);
                batHeader.parmRecurrenceData(recurData);
                batHeader.save();
                Batch = batInfo.parmBatch();
    
                info(strFmt("@SKS2466", dialogField.value()));
    
                ttsCommit;
    
                info("@SKS2464");
    
                Batch::jumpRef(Batch.RecId);

                return Batch.RecId;
            }
            else
            {
                error(strFmt("@SKS2463", dialogfield.value()));
                return 0;
            }
    
        }
        else
        {
            // If they just cancelled the dialog, then no error.
            return 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRecurrenceStartDateTimeAdjusted</Name>
				<Source><![CDATA[
    public static SysRecurrenceData setRecurrenceStartDateTimeAdjusted(
        SysRecurrenceData _sysRecurrenceData, UTCDateTime _dateTime)
    {
        date startDate;
        timeOfDay startTime;
        TimeOfDay tmpStartTime;
        Timezone timezone;
        SysRecurrenceData sysRecurrenceData
        ;
        sysRecurrenceData = _sysRecurrenceData;
        timezone = conpeek(sysRecurrenceData, 9);
        tmpStartTime = DateTimeUtil::time(_dateTime);
    
        startDate = DateTimeUtil::date(_dateTime);
        startTime = DateTimeUtil::time(_dateTime);
        sysRecurrenceData = SysRecurrence::setRecurrenceStartDate(sysRecurrenceData, startDate);
        return SysRecurrence::setRecurrenceTime(sysRecurrenceData, startTime);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>