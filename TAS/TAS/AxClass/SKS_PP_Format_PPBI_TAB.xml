<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SKS_PP_Format_PPBI_TAB</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SKS_PP_Format_PPBI_TAB extends SKS_PP_Format
{
    #define.DoubleQuotes('"')
    #define.Separator('\t')
    #define.Comma(',')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>txtFormatHeader</Name>
				<Source><![CDATA[
    protected str txtFormatHeader()
    {
        SKS_PP_Bank bSKS_PP_Bank_1;
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        Container company;

        company = [mSKS_PP_FileDetail.ChkCpnyId];
        select crossCompany:company PP01 from bSKS_PP_Bank_1 where bSKS_PP_Bank_1.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;

        if(bSKS_PP_Bank_1.PP01)
        {
            sb.Append(bSKS_PP_Bank_1.PP01 + #Comma + "DataVaultLayout");
        }

        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>txtDetail</Name>
				<Source><![CDATA[
    protected str txtDetail()
    {
        //  Field number        Field MAX Length    Field Desc
        //      1                      9              ABA/TRC
        //      2                      9              Account Number
        //      3                      15              Check Number
        //      4                      14              Amt Decimal Included
        //      5                      10              Issue Date
        //      6                      1               Issue/Void (I/V)
        //      7                      256             Issue Action
        //      8                      256             Debit/Credit
        //      9                       96             Payee Name
        System.Text.StringBuilder sb = new System.Text.StringBuilder();
        // str comma = ',';
        int mult;
        str itemType;
        str amount, vendorName;
        SKS_PP_Bank mSKS_PP_Bank;
        container company;

        company = [mSKS_PP_FileDetail.ChkCpnyId];
        select firstonly crossCompany:company PP01 from mSKS_PP_Bank where mSKS_PP_Bank.BankAccountId == mSKS_PP_FileDetail.ChkBankAcct;

        Mult = 1;
        if(mSKS_PP_FileDetail.ChkType != SKS_PP_ChequeType::Cheque)
        {
            ItemType = 'V';
            if(mSKS_PP_FileDetail.ChkCuryAmt < 0)
            {
                Mult = -1;
            }
        }
        else
        {
            ItemType = 'I';
        }

        //      ABA/TRC
        sb.Append(this.wrapField(substr(mSKS_PP_FileDetail.BnkBankTransit, 1, 9)));

        //      Account Number
        sb.Append(this.wrapField(substr(mSKS_PP_FileDetail.BnkBankAcct, 1, 17)));
        
        //      Check Number
        sb.Append(this.wrapField(substr(mSKS_PP_FileDetail.ChkRefNbr, 1,15)));

        //     Amount
        sb.Append(this.wrapField(Num2Str(mSKS_PP_FileDetail.ChkCuryAmt * Mult,1, 2, 1,0)));

        //      Issue Date MMDDYY
        sb.Append(this.wrapField(SKS_PP_StringFormats::strDateMMDDYYYY(mSKS_PP_FileDetail.ChkDocDate, DateSeparator::None)));

        //      Issue/Void (I/V)
        sb.Append(this.wrapField(itemType));

        //      Issue Action
        sb.Append(this.wrapField("A"));

        //      Payee Name
        vendorName =subStr(mSKS_PP_FileDetail.VendName, 1, 96) ;
        sb.Append(this.wrapField(vendorName, true, false));

        return sb.ToString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>wrapField</Name>
				<Source><![CDATA[
    private str wrapField(str _field = '', boolean doubleQuotes = true, boolean _addSeparator = true)
    {
        str text;
        ;
       
        text = _field;
        if(doubleQuotes)
        {
            text = #DoubleQuotes + text + #DoubleQuotes;
        }
        if(_addSeparator)
        {
            text = text + #Separator;
        }
        
        return text;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>